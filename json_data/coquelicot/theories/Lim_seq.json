{
    "filename": "theories/Lim_seq.v",
    "coq_project": "coquelicot",
    "vernac_cmds": [
        [
            "Require Import Reals Psatz.",
            "VernacRequire",
            "aa71e9955fdefb9d3b0e58d51406978b644e60c0"
        ],
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "Require Import Rcomplements.",
            "VernacRequire",
            "6092419151bd74aa7f83ac953c7ed042021bf7ad"
        ],
        [
            "Require Import Rbar Lub Markov Hierarchy.",
            "VernacRequire",
            "f948f6e8a0ba419593f546e698210d2bc4dd3475"
        ],
        [
            "Open Scope R_scope.",
            "VernacOpenCloseScope",
            "e9e2b017da79049aff27c5418fe22258c29a75e7"
        ],
        [
            "Definition is_sup_seq (u : nat -> Rbar) (l : Rbar) := match l with | Finite l => forall (eps : posreal), (forall n, Rbar_lt (u n) (l+eps)) /\\ (exists n, Rbar_lt (l-eps) (u n)) | p_infty => forall M : R, exists n, Rbar_lt M (u n) | m_infty => forall M : R, forall n, Rbar_lt (u n) M end.",
            "VernacDefinition",
            "6590890c3fb556f13e7cf7d5875a1670e4336e3b"
        ],
        [
            "Definition is_inf_seq (u : nat -> Rbar) (l : Rbar) := match l with | Finite l => forall (eps : posreal), (forall n, Rbar_lt (Finite (l-eps)) (u n)) /\\ (exists n, Rbar_lt (u n) (Finite (l+eps))) | p_infty => forall M : R, forall n, Rbar_lt (Finite M) (u n) | m_infty => forall M : R, exists n, Rbar_lt (u n) (Finite M) end.",
            "VernacDefinition",
            "b74f41ea06515886c39eaeea4942c69153e39513"
        ],
        [
            "Lemma is_inf_opp_sup_seq (u : nat -> Rbar) (l : Rbar) : is_inf_seq (fun n => Rbar_opp (u n)) (Rbar_opp l) <-> is_sup_seq u l.",
            "VernacStartTheoremProof",
            "039c78caf313c1c527168102d5a2440a4cf1c468"
        ],
        [
            "destruct l as [l | | ] ; split ; intros Hl.",
            "VernacExtend",
            "0c0ab66a6765126a44279cd89750286ef81bcb8f"
        ],
        [
            "intro eps ; case (Hl eps) ; clear Hl ; intros lb (n, glb) ; split.",
            "VernacExtend",
            "ee1e9d8a91f6566b2f862fef7d416ae08decc3ba"
        ],
        [
            "intro n0 ; apply Rbar_opp_lt ; simpl ; rewrite (Ropp_plus_distr l eps) ; apply lb.",
            "VernacExtend",
            "bf05de23437d5d4e9858776fcbce4ffc1d177d8a"
        ],
        [
            "exists n ; apply Rbar_opp_lt ; assert (Rw : -(l-eps) = -l+eps).",
            "VernacExtend",
            "70b220e67431dc977813beb0875f848cc6d96b94"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "simpl ; rewrite Rw ; clear Rw ; auto.",
            "VernacExtend",
            "58f65960c6766893da1bfa60ae6642458f4922c9"
        ],
        [
            "intro eps ; case (Hl eps) ; clear Hl ; intros ub (n, lub) ; split.",
            "VernacExtend",
            "81638ec9f4e99444b4af84c1483f0b070e928247"
        ],
        [
            "intros n0 ; unfold Rminus ; rewrite <-(Ropp_plus_distr l eps) ; apply (Rbar_opp_lt (Finite (l+eps)) (u n0)) ; simpl ; apply ub.",
            "VernacExtend",
            "a3379604c77091f8c17aadd03cc67553bc44017f"
        ],
        [
            "exists n ; assert (Rw : -(l-eps) = -l+eps).",
            "VernacExtend",
            "4c88001363d43c23cb239a27d6fc982be1cab03d"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "simpl ; rewrite <-Rw ; apply (Rbar_opp_lt (u n) (Finite (l-eps))) ; auto.",
            "VernacExtend",
            "8549adbdf6b81c5cd9e85675dc1ae5090b2b61c6"
        ],
        [
            "intro M ; case (Hl (-M)) ; clear Hl ; intros n Hl ; exists n ; apply Rbar_opp_lt ; auto.",
            "VernacExtend",
            "5bf83292732782c24c976eb7b9b4a2d08dd4496b"
        ],
        [
            "intro M ; case (Hl (-M)) ; clear Hl ; intros n Hl ; exists n ; apply Rbar_opp_lt ; rewrite Rbar_opp_involutive ; auto.",
            "VernacExtend",
            "aafd041ce2cff83edb4c59aef60189bd8ef1c693"
        ],
        [
            "intros M n ; apply Rbar_opp_lt, Hl.",
            "VernacExtend",
            "ac745e8d3aeec5b7537d1217004cef92ed69b93f"
        ],
        [
            "intros M n ; apply Rbar_opp_lt ; rewrite Rbar_opp_involutive ; apply Hl.",
            "VernacExtend",
            "4a8ecc2c64f1e9e6651bbdf0dfbbe23aa2a57534"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_sup_opp_inf_seq (u : nat -> Rbar) (l : Rbar) : is_sup_seq (fun n => Rbar_opp (u n)) (Rbar_opp l) <-> is_inf_seq u l.",
            "VernacStartTheoremProof",
            "5c17d612df15a5ea601ad519cc619aa95c1c869b"
        ],
        [
            "case: l => [l | | ] ; split => Hl.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "move => eps ; case: (Hl eps) => {Hl} [lb [n lub]] ; split.",
            "VernacExtend",
            "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
        ],
        [
            "move => n0 ; apply Rbar_opp_lt ; have : (-(l-eps) = -l+eps) ; first by ring.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move => /= ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists n ; apply Rbar_opp_lt ; rewrite /= (Ropp_plus_distr l eps) ; apply lub.",
            "VernacExtend",
            "06ff83dd1409d8d85ea69575c19a6d6677a02677"
        ],
        [
            "move => eps ; case: (Hl eps) => {Hl} [ub [n lub]] ; split.",
            "VernacExtend",
            "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
        ],
        [
            "move => n0 ; have : (-(l-eps) = (-l+eps)) ; first by ring.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move => /= <- ; by apply (Rbar_opp_lt (u n0) (Finite (l-eps))).",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "exists n ; rewrite /Rminus -(Ropp_plus_distr l eps) ; by apply (Rbar_opp_lt (Finite (l+eps)) (u n)).",
            "VernacExtend",
            "5b44c9e35a5bf5324e6ee1e5277fce8fa6962783"
        ],
        [
            "move => M n ; apply Rbar_opp_lt, Hl.",
            "VernacExtend",
            "fa4d8f9f6ca6ef42f108d23819fa5889ea666d33"
        ],
        [
            "move => M n ; apply Rbar_opp_lt ; rewrite Rbar_opp_involutive ; apply Hl.",
            "VernacExtend",
            "990e4ba18f4d0c6112328276aa498ca8bfff0a4b"
        ],
        [
            "move => M ; case: (Hl (-M)) => {Hl} n Hl ; exists n ; by apply Rbar_opp_lt.",
            "VernacExtend",
            "96e76213d01cabf99e67d6ef72649ec799f516a5"
        ],
        [
            "move => M ; case: (Hl (-M)) => {Hl} n Hl ; exists n ; apply Rbar_opp_lt ; by rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "7757634451a908b5764095d1de54fe6ecb3f4fe3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_sup_seq_lub (u : nat -> Rbar) (l : Rbar) : is_sup_seq u l -> Rbar_is_lub (fun x => exists n, x = u n) l.",
            "VernacStartTheoremProof",
            "79d937e08f788b0b6e937f41d2512bd3ba4eb069"
        ],
        [
            "destruct l as [l | | ] ; intro Hl ; split.",
            "VernacExtend",
            "d4b6aed91948b562bb0f9d074a00ab903b274665"
        ],
        [
            "intro x ; destruct x as [x | | ] ; simpl ; intros (n, Hn).",
            "VernacExtend",
            "b62b7caacb40be00b0002766b78d7cc14df4c1f2"
        ],
        [
            "apply le_epsilon ; intros e He ; set (eps := mkposreal e He).",
            "VernacExtend",
            "49cc19c2c4a286662dfdca727ad2d333735d7767"
        ],
        [
            "change (Rbar_le x (l + e)).",
            "VernacExtend",
            "a1fd40432b078d62f9c13ea1354fc213b36e17c2"
        ],
        [
            "rewrite Hn ; apply Rbar_lt_le, (Hl eps).",
            "VernacExtend",
            "8d1509c8616f4cb3bf9827ddef86de38f70f7759"
        ],
        [
            "now generalize (proj1 (Hl (mkposreal _ Rlt_0_1)) n) ; clear Hl ; simpl ; intros Hl ; rewrite <-Hn in Hl.",
            "VernacExtend",
            "cd7db924ae71a0f019044e8e0a9bad6d27a7d03a"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "intros b ; destruct b as [b | | ] ; intros Hb ; apply Rbar_not_lt_le ; auto ; intros He.",
            "VernacExtend",
            "54e9dfefe80abb3a1967767b5a6d0417eb2af324"
        ],
        [
            "set (eps := mkposreal _ (Rlt_Rminus _ _ He)) ; case (proj2 (Hl eps)) ; clear Hl ; intros n.",
            "VernacExtend",
            "bb4922a35e127777d2c1841e3301a7613b85f21e"
        ],
        [
            "apply Rbar_le_not_lt ; assert (l - eps = b) .",
            "VernacExtend",
            "2a21720d0f4c52c6d35550a2678b0e130a15756f"
        ],
        [
            "simpl ; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "rewrite H ; clear H ; apply Hb ; exists n ; auto.",
            "VernacExtend",
            "54acf24e76498860baa93b5e2ca68ef35da5a791"
        ],
        [
            "generalize (Rbar_ub_m_infty _ Hb) ; clear Hb ; intros Hb.",
            "VernacExtend",
            "a5a751ab3af6a91756b621bda3c5c55326b7111f"
        ],
        [
            "case (proj2 (Hl (mkposreal _ Rlt_0_1))) ; clear Hl ; simpl ; intros n Hl.",
            "VernacExtend",
            "e595381340518a09d685d08985086dbced327175"
        ],
        [
            "assert (H : (exists n0 : nat, u n = u n0)).",
            "VernacExtend",
            "55e14cdafb4bdcb85be27a87aec32e7b87b597c6"
        ],
        [
            "exists n ; auto.",
            "VernacExtend",
            "5a9adc9df6bd2f2c6c339260376aab0275aec66d"
        ],
        [
            "generalize (Hb (u n) H) Hl ; clear Hb ; now case (u n).",
            "VernacExtend",
            "f6665a0c1d9c0c0b51b4bcb9934e495fd129835d"
        ],
        [
            "apply Rbar_ub_p_infty.",
            "VernacExtend",
            "7d2903f142f5ecbfe299b9c50011569c395f6daf"
        ],
        [
            "intro b ; destruct b as [b | | ] ; simpl ; intro Hb.",
            "VernacExtend",
            "17ce631d0c01d1b070eda00b84824f2557dce288"
        ],
        [
            "case (Hl b) ; clear Hl ; intros n Hl.",
            "VernacExtend",
            "4e064dab520dea35bf9635c37199ff06d51f3fda"
        ],
        [
            "contradict Hl ; apply Rbar_le_not_lt, Hb ; exists n ; auto.",
            "VernacExtend",
            "d7368045902bd893f581f735948223baa73543b2"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "generalize (Rbar_ub_m_infty _ Hb) ; clear Hb ; intro Hb.",
            "VernacExtend",
            "5e816d6b4cbecb1f5f8adef21cb08e2f1f597a67"
        ],
        [
            "case (Hl 0) ; clear Hl; intros n Hl.",
            "VernacExtend",
            "a2972a8bd7f18004cb8e514b79887ca10e415ac9"
        ],
        [
            "assert (H : (exists n0 : nat, u n = u n0)).",
            "VernacExtend",
            "55e14cdafb4bdcb85be27a87aec32e7b87b597c6"
        ],
        [
            "exists n ; auto.",
            "VernacExtend",
            "5a9adc9df6bd2f2c6c339260376aab0275aec66d"
        ],
        [
            "generalize (Hb (u n) H) Hl ; clear Hl ; now case (u n).",
            "VernacExtend",
            "a660cc10c2fea39ccb1ab21b428a7850a073903c"
        ],
        [
            "intro x ; destruct x as [x | | ] ; intros (n, Hx).",
            "VernacExtend",
            "cdbb281dd4993bba3cc255aad713b07d0a1c202d"
        ],
        [
            "generalize (Hl x n) ; clear Hl ; intro Hl ; rewrite <-Hx in Hl ; apply Rlt_irrefl in Hl ; intuition.",
            "VernacExtend",
            "3dc432a87a187ffb8d066755bfd166542eb3b7ba"
        ],
        [
            "generalize (Hl 0 n) ; rewrite <-Hx ; intuition.",
            "VernacExtend",
            "c5a3ab998040ed7478ee362301a15faf3fe12f74"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "now intros b ; destruct b as [b | | ].",
            "VernacExtend",
            "56b1355ea2890b36d4805d129a78820a5a89839d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_is_lub_sup_seq (u : nat -> Rbar) (l : Rbar) : Rbar_is_lub (fun x => exists n, x = u n) l -> is_sup_seq u l.",
            "VernacStartTheoremProof",
            "a3a3ade0a4beac9fb40ecf9f19961f4bfdb26527"
        ],
        [
            "destruct l as [l | | ] ; intros (ub, lub).",
            "VernacExtend",
            "04b250886190efc0d1680a8b47e65090fb15029f"
        ],
        [
            "intro eps ; split.",
            "VernacExtend",
            "670a37f485b5a6583e1b77598b1a8cdb44d44908"
        ],
        [
            "intro n ; apply Rbar_le_lt_trans with (y := Finite l).",
            "VernacExtend",
            "0fa76e034615111da0ebf8e2ce0c7150ba607091"
        ],
        [
            "apply ub ; exists n ; auto.",
            "VernacExtend",
            "51f4a1723a68b51c914ed4aa3c59c700b2298d0a"
        ],
        [
            "pattern l at 1 ; rewrite <-(Rplus_0_r l) ; apply Rplus_lt_compat_l, eps.",
            "VernacExtend",
            "8ab6d5cf89af08cc3007303e1b67e9a451b84845"
        ],
        [
            "apply LPO_notforall.",
            "VernacExtend",
            "036e0dcc3b35163ca1c1a5cf65d65257624c1a3c"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "destruct (Rbar_lt_dec (l - eps) (u n)) as [H|H].",
            "VernacExtend",
            "5169b4bae5ef075cacebf17e818eba247d3b286e"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "assert (H0 : (Rbar_is_upper_bound (fun x : Rbar => exists n : nat, x = u n) (Finite (l - eps)))).",
            "VernacExtend",
            "c9ee9f59445fcee136a7bf17bd690bc2069dfa24"
        ],
        [
            "intros x (n,Hn) ; rewrite Hn ; clear Hn ; apply Rbar_not_lt_le, H.",
            "VernacExtend",
            "5ddf0a6c4ffd14398f6cffe15e1a84d112e5f91e"
        ],
        [
            "generalize (lub _ H0) ; clear lub ; apply Rbar_lt_not_le ; pattern l at 2 ; rewrite <-(Rplus_0_r l) ; apply Rplus_lt_compat_l, Ropp_lt_gt_0_contravar, eps.",
            "VernacExtend",
            "40fbd0b985b0cd11ad8c075cfb3f14501c0b903c"
        ],
        [
            "intro M ; apply LPO_notforall.",
            "VernacExtend",
            "045ab961457acc0f19f35882b3de163487fb293b"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "destruct (Rbar_lt_dec M (u n)) as [H|H].",
            "VernacExtend",
            "70f7de97fd0209827fbf4b4b51e97748eabb212e"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "assert (H0 : Rbar_is_upper_bound (fun x : Rbar => exists n : nat, x = u n) (Finite M)).",
            "VernacExtend",
            "8f396d4e305d0faf1e9609738b6d93ae634b34c6"
        ],
        [
            "intros x (n,Hn) ; rewrite Hn ; clear Hn ; apply Rbar_not_lt_le, H.",
            "VernacExtend",
            "5ddf0a6c4ffd14398f6cffe15e1a84d112e5f91e"
        ],
        [
            "generalize (lub _ H0) ; clear lub ; apply Rbar_lt_not_le ; simpl ; auto.",
            "VernacExtend",
            "c0a64bb4758f9de4381edb646a6614910dc96f51"
        ],
        [
            "intros M n.",
            "VernacExtend",
            "e21a55be95a63dd00c1eb944b98ef755c4195e0a"
        ],
        [
            "apply Rbar_le_lt_trans with (y := m_infty) ; simpl ; auto.",
            "VernacExtend",
            "da5e123bb2269bf60c9bb67f30e0d03edb154781"
        ],
        [
            "apply ub ; exists n ; auto.",
            "VernacExtend",
            "51f4a1723a68b51c914ed4aa3c59c700b2298d0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_inf_seq_glb (u : nat -> Rbar) (l : Rbar) : is_inf_seq u l -> Rbar_is_glb (fun x => exists n, x = u n) l.",
            "VernacStartTheoremProof",
            "a9376367ca021aefe07e7361f437aeb859c7d6aa"
        ],
        [
            "move => H ; apply Rbar_lub_glb ; apply (Rbar_is_lub_ext (fun x : Rbar => exists n : nat, x = Rbar_opp (u n))).",
            "VernacExtend",
            "7cc682b6db104611950d2ef54310be603033c73c"
        ],
        [
            "move => x ; split ; case => n Hn ; exists n.",
            "VernacExtend",
            "4895f530229f4c8a48e36fe27f96ca9ebe586a47"
        ],
        [
            "by rewrite Hn Rbar_opp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -Hn Rbar_opp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (is_sup_seq_lub (fun n => Rbar_opp (u n)) (Rbar_opp l)) ; by apply is_sup_opp_inf_seq.",
            "VernacExtend",
            "09565d912bffcc2fce386b1acdcab4fdf38e0345"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_is_glb_inf_seq (u : nat -> Rbar) (l : Rbar) : Rbar_is_glb (fun x => exists n, x = u n) l -> is_inf_seq u l.",
            "VernacStartTheoremProof",
            "7e94d79b6c987b97da4e0f1f1c7eb39b5de92479"
        ],
        [
            "move => H ; apply is_sup_opp_inf_seq ; apply Rbar_is_lub_sup_seq ; apply Rbar_glb_lub.",
            "VernacExtend",
            "28f0b640a32b89bf1961f2dc9a0f6db16d106e70"
        ],
        [
            "rewrite Rbar_opp_involutive ; apply (Rbar_is_glb_ext (fun x : Rbar => exists n : nat, x = u n)) => // x ; split ; case => n Hx ; exists n ; by apply Rbar_opp_eq.",
            "VernacExtend",
            "a7511ee652e702f4b281d90dc83077770692bb68"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_sup_seq_ext (u v : nat -> Rbar) (l : Rbar) : (forall n, u n = v n) -> is_sup_seq u l -> is_sup_seq v l.",
            "VernacStartTheoremProof",
            "fcf22a73bfd74095f97ad1322f42ab828d0728fa"
        ],
        [
            "case: l => [l | | ] Heq ; rewrite /is_sup_seq => Hu.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "move => eps ; case: (Hu eps) => {Hu} Hu1 Hu2 ; split.",
            "VernacExtend",
            "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
        ],
        [
            "move => n ; by rewrite -Heq.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "case: Hu2 => n Hu2 ; exists n ; by rewrite -Heq.",
            "VernacExtend",
            "e6c2501114108f86b6fd180d8eb95bdb94c807a4"
        ],
        [
            "move => M ; case: (Hu M) => {Hu} n Hu ; exists n ; by rewrite -Heq.",
            "VernacExtend",
            "96e76213d01cabf99e67d6ef72649ec799f516a5"
        ],
        [
            "move => M n ; by rewrite -Heq.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_inf_seq_ext (u v : nat -> Rbar) (l : Rbar) : (forall n, u n = v n) -> is_inf_seq u l -> is_inf_seq v l.",
            "VernacStartTheoremProof",
            "16c2fc21be97a7d378f85222a6c714c35f0eb23e"
        ],
        [
            "case: l => [l | | ] Heq ; rewrite /is_inf_seq => Hu.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "move => eps ; case: (Hu eps) => {Hu} Hu1 Hu2 ; split.",
            "VernacExtend",
            "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
        ],
        [
            "move => n ; by rewrite -Heq.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "case: Hu2 => n Hu2 ; exists n ; by rewrite -Heq.",
            "VernacExtend",
            "e6c2501114108f86b6fd180d8eb95bdb94c807a4"
        ],
        [
            "move => M n ; by rewrite -Heq.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "move => M ; case: (Hu M) => {Hu} n Hu ; exists n ; by rewrite -Heq.",
            "VernacExtend",
            "96e76213d01cabf99e67d6ef72649ec799f516a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_sup_seq (u : nat -> Rbar) : {l : Rbar | is_sup_seq u l}.",
            "VernacStartTheoremProof",
            "556e0dfc4d69abd17a1040f716d9f695ad336be0"
        ],
        [
            "case (LPO (fun n => p_infty = u n)) => [/= | [np Hnp] | Hnp].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "intro n0 ; destruct (u n0) as [r | | ].",
            "VernacExtend",
            "f82ef20059e99be9096d638d0d3baa7a3793cdbe"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "left ; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "exists p_infty => M.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exists np ; by rewrite -Hnp.",
            "VernacExtend",
            "e4ec1392c8b8f524d55eb09f513a8f092344b7ac"
        ],
        [
            "case (Rbar_ex_lub (fun x => exists n, x = u n)).",
            "VernacExtend",
            "a29268f36eeb591cf4e6655477d127e3f42b956c"
        ],
        [
            "intros l Hl ; exists l ; apply Rbar_is_lub_sup_seq ; auto.",
            "VernacExtend",
            "2f9a7cc5ccb14a839fc09c3da874bcb7b019ca4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_inf_seq (u : nat -> Rbar) : {l : Rbar | is_inf_seq u l}.",
            "VernacStartTheoremProof",
            "8ab2ca82bfc81485550d0066d90e7b2eda8e8cf7"
        ],
        [
            "case : (ex_sup_seq (fun n => Rbar_opp (u n))) => l Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (Rbar_opp l) ; apply is_sup_opp_inf_seq ; by rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "0eece271521a468f91a88e5c3b592c74ca14e4f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Sup_seq (u : nat -> Rbar) := proj1_sig (ex_sup_seq u).",
            "VernacDefinition",
            "a14bbb6acec4e87fe5d4376fa939b654f81ed779"
        ],
        [
            "Definition Inf_seq (u : nat -> Rbar) := proj1_sig (ex_inf_seq u).",
            "VernacDefinition",
            "5b35ec37250b50dd519935708f090e2e57d5fbab"
        ],
        [
            "Lemma is_sup_seq_unique (u : nat -> Rbar) (l : Rbar) : is_sup_seq u l -> Sup_seq u = l.",
            "VernacStartTheoremProof",
            "221a495da88f1b14f333fc711688f42fcf655b46"
        ],
        [
            "move => Hl ; rewrite /Sup_seq ; case: (ex_sup_seq _) => l0 Hl0 /= ; case: l Hl => [l | | ] Hl ; case: l0 Hl0 => [l0 | | ] Hl0 //.",
            "VernacExtend",
            "08e67a03e9cbb35101f112607a1a15f6568375f8"
        ],
        [
            "apply Rbar_finite_eq, Rle_antisym ; apply le_epsilon => e He ; set eps := mkposreal e He ; apply Rlt_le ; case: (Hl (pos_div_2 eps)) => {Hl} Hl [n Hn] ; case: (Hl0 (pos_div_2 eps)) => {Hl0} Hl0 [n0 Hn0].",
            "VernacExtend",
            "f48198c0af67dd25192639f6072f27982f661e45"
        ],
        [
            "have: (l0 = (l0 - eps/2) + eps/2) ; [by field | move => -> ] ; have : (l + e = (l + eps/2) + eps/2) ; [ simpl ; field | move => -> ] ; apply Rplus_lt_compat_r, (Rbar_lt_trans (Finite (l0 - eps/2)) (u n0) (Finite (l + eps/2)) Hn0 (Hl _)).",
            "VernacExtend",
            "ed6984fd86002cf1856f99ce08e92643684c2d88"
        ],
        [
            "have: (l = (l - eps/2) + eps/2) ; [by field | move => -> ] ; have : (l0 + e = (l0 + eps/2) + eps/2) ; [ simpl ; field | move => -> ] ; apply Rplus_lt_compat_r, (Rbar_lt_trans (Finite (l - eps/2)) (u n) (Finite (l0 + eps/2)) Hn (Hl0 _)).",
            "VernacExtend",
            "b6df09232b578bd4ff753612a89659578d3a5b01"
        ],
        [
            "case: (Hl0 (l + 1)) => n {Hl0} Hl0 ; contradict Hl0 ; apply Rbar_le_not_lt, Rbar_lt_le, (Hl (mkposreal _ Rlt_0_1)).",
            "VernacExtend",
            "597edca734a8f5d8c2aa9b708763341390e9651c"
        ],
        [
            "case: (Hl (mkposreal _ Rlt_0_1)) => {Hl} _ [n Hl] ; contradict Hl ; apply Rbar_le_not_lt, Rbar_lt_le, Hl0.",
            "VernacExtend",
            "5034e11610fb324714568a5a0a07e2fb02f55137"
        ],
        [
            "case: (Hl (l0 + 1)) => n {Hl} Hl ; contradict Hl ; apply Rbar_le_not_lt, Rbar_lt_le, (Hl0 (mkposreal _ Rlt_0_1)).",
            "VernacExtend",
            "96efa5ba7c5f3cd8415ea467f91003e59c208dc3"
        ],
        [
            "case: (Hl 0) => n {Hl} Hl ; contradict Hl ; apply Rbar_le_not_lt, Rbar_lt_le, Hl0.",
            "VernacExtend",
            "5034e11610fb324714568a5a0a07e2fb02f55137"
        ],
        [
            "case: (Hl0 (mkposreal _ Rlt_0_1)) => {Hl0} _ [n Hl0] ; contradict Hl0 ; apply Rbar_le_not_lt, Rbar_lt_le, Hl.",
            "VernacExtend",
            "5f8751a31a2040ee4efc52019ab3fa966da8102a"
        ],
        [
            "case: (Hl0 0) => n {Hl0} Hl0 ; contradict Hl0 ; apply Rbar_le_not_lt, Rbar_lt_le, Hl.",
            "VernacExtend",
            "5f8751a31a2040ee4efc52019ab3fa966da8102a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sup_seq_correct (u : nat -> Rbar) : is_sup_seq u (Sup_seq u).",
            "VernacStartTheoremProof",
            "c233dc12002c0b247b817b9f0f0062ff12dd12a3"
        ],
        [
            "rewrite /Sup_seq ; case: (ex_sup_seq _) => l Hl //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_inf_seq_unique (u : nat -> Rbar) (l : Rbar) : is_inf_seq u l -> Inf_seq u = l.",
            "VernacStartTheoremProof",
            "7dd7f3c722e42a8ce71b952801609b698a57b5cb"
        ],
        [
            "move => Hl ; rewrite /Inf_seq ; case: (ex_inf_seq _) => l0 Hl0 /= ; case: l Hl => [l | | ] Hl ; case: l0 Hl0 => [l0 | | ] Hl0 //.",
            "VernacExtend",
            "08e67a03e9cbb35101f112607a1a15f6568375f8"
        ],
        [
            "apply Rbar_finite_eq, Rle_antisym ; apply le_epsilon => e He ; set eps := mkposreal e He ; apply Rlt_le ; case: (Hl (pos_div_2 eps)) => {Hl} Hl [n Hn] ; case: (Hl0 (pos_div_2 eps)) => {Hl0} Hl0 [n0 Hn0].",
            "VernacExtend",
            "f48198c0af67dd25192639f6072f27982f661e45"
        ],
        [
            "have: (l0 = (l0 - eps/2) + eps/2) ; [by field | move => -> ] ; have : (l + e = (l + eps/2) + eps/2) ; [ simpl ; field | move => -> ] ; apply Rplus_lt_compat_r, (Rbar_lt_trans (Finite (l0 - eps/2)) (u n) (Finite (l + eps/2)) (Hl0 _) Hn).",
            "VernacExtend",
            "6cc518dfa9d093616c3dc496b0c19e3642486dfd"
        ],
        [
            "have: (l = (l - eps/2) + eps/2) ; [by field | move => -> ] ; have : (l0 + e = (l0 + eps/2) + eps/2) ; [ simpl ; field | move => -> ] ; apply Rplus_lt_compat_r, (Rbar_lt_trans (Finite (l - eps/2)) (u n0) (Finite (l0 + eps/2)) (Hl _) Hn0).",
            "VernacExtend",
            "a52c49557d7b962b5b67b902eea28c210cd8ca68"
        ],
        [
            "case: (Hl (mkposreal _ Rlt_0_1)) => {Hl} _ [n Hl] ; contradict Hl ; apply Rbar_le_not_lt, Rbar_lt_le, Hl0.",
            "VernacExtend",
            "5034e11610fb324714568a5a0a07e2fb02f55137"
        ],
        [
            "case: (Hl0 (l - 1)) => n {Hl0} Hl0 ; contradict Hl0 ; apply Rbar_le_not_lt, Rbar_lt_le, (Hl (mkposreal _ Rlt_0_1)).",
            "VernacExtend",
            "597edca734a8f5d8c2aa9b708763341390e9651c"
        ],
        [
            "case: (Hl0 (mkposreal _ Rlt_0_1)) => {Hl0} _ [n Hl0] ; contradict Hl0 ; apply Rbar_le_not_lt, Rbar_lt_le, Hl.",
            "VernacExtend",
            "5f8751a31a2040ee4efc52019ab3fa966da8102a"
        ],
        [
            "case: (Hl0 0) => n {Hl0} Hl0 ; contradict Hl0 ; apply Rbar_le_not_lt, Rbar_lt_le, Hl.",
            "VernacExtend",
            "5f8751a31a2040ee4efc52019ab3fa966da8102a"
        ],
        [
            "case: (Hl (l0 - 1)) => n {Hl} Hl ; contradict Hl ; apply Rbar_le_not_lt, Rbar_lt_le, (Hl0 (mkposreal _ Rlt_0_1)).",
            "VernacExtend",
            "96efa5ba7c5f3cd8415ea467f91003e59c208dc3"
        ],
        [
            "case: (Hl 0) => n {Hl} Hl ; contradict Hl ; apply Rbar_le_not_lt, Rbar_lt_le, Hl0.",
            "VernacExtend",
            "5034e11610fb324714568a5a0a07e2fb02f55137"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inf_seq_correct (u : nat -> Rbar) : is_inf_seq u (Inf_seq u).",
            "VernacStartTheoremProof",
            "0d89731012bbec3960d18daa95cbf0786ccd20b3"
        ],
        [
            "rewrite /Inf_seq ; case: (ex_inf_seq _) => l Hl //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sup_seq_ext (u v : nat -> Rbar) : (forall n, (u n) = (v n)) -> Sup_seq u = Sup_seq v.",
            "VernacStartTheoremProof",
            "5774ed167acdd6894069749f0b72d99f3e7ca1d3"
        ],
        [
            "intro Heq ; rewrite {2}/Sup_seq ; case (ex_sup_seq v) ; simpl ; intros l2 Hv.",
            "VernacExtend",
            "fb15f7a58c97f111cecc98b87488c80626314795"
        ],
        [
            "by apply (is_sup_seq_unique u), is_sup_seq_ext with v.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inf_seq_ext (u v : nat -> Rbar) : (forall n, (u n) = (v n)) -> Inf_seq u = Inf_seq v.",
            "VernacStartTheoremProof",
            "f35074c7ce2e3116a2d9932fda478b874c718595"
        ],
        [
            "intro Heq ; rewrite {2}/Inf_seq ; case (ex_inf_seq v) ; simpl ; intros l2 Hv.",
            "VernacExtend",
            "4d4b789b9c01804d68e2f504f9d26cfc8ddeb2d7"
        ],
        [
            "by apply (is_inf_seq_unique u), is_inf_seq_ext with v.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rbar_sup_eq_lub (u : nat -> Rbar) : Sup_seq u = Rbar_lub (fun x => exists n, x = u n).",
            "VernacStartTheoremProof",
            "baa2457f7a4b04040eeb7256f5634109512ccfb5"
        ],
        [
            "rewrite /Sup_seq ; case: (ex_sup_seq _) => /= s Hs.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /Rbar_lub ; case: (Rbar_ex_lub _) => /= l Hl.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply (Rbar_is_lub_eq (fun x : Rbar => exists n : nat, x = u n) (fun x : Rbar => exists n : nat, x = u n)) => // ; by apply is_sup_seq_lub.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inf_eq_glb (u : nat -> Rbar) : Inf_seq u = Rbar_glb (fun x => exists n, x = u n).",
            "VernacStartTheoremProof",
            "ed76ac6d82bb3ad25610847d63aff61ec4a80b15"
        ],
        [
            "rewrite /Inf_seq ; case: (ex_inf_seq _) => /= s Hs.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /Rbar_glb ; case: (Rbar_ex_glb _) => /= l Hl.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply (Rbar_is_glb_eq (fun x : Rbar => exists n : nat, x = u n) (fun x : Rbar => exists n : nat, x = u n)) => // ; by apply is_inf_seq_glb.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sup_opp_inf (u : nat -> Rbar) : Sup_seq u = Rbar_opp (Inf_seq (fun n => Rbar_opp (u n))).",
            "VernacStartTheoremProof",
            "9a585f5e679147e19c9aa78dec066d916dd29d81"
        ],
        [
            "rewrite /Inf_seq ; case: (ex_inf_seq _) => iu Hiu /=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply is_sup_seq_unique.",
            "VernacExtend",
            "cb50867241668fea36174b8e08b8295e72a6a900"
        ],
        [
            "apply is_inf_opp_sup_seq.",
            "VernacExtend",
            "58d9bbb827fac184a7e8bd59ab61324bba8e7e31"
        ],
        [
            "by rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inf_opp_sup (u : nat -> Rbar) : Inf_seq u = Rbar_opp (Sup_seq (fun n => Rbar_opp (u n))).",
            "VernacStartTheoremProof",
            "9622264af2af09014c50958193a3cee350068adf"
        ],
        [
            "rewrite Sup_opp_inf Rbar_opp_involutive.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /Inf_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "repeat (case: ex_inf_seq ; intros) => /=.",
            "VernacExtend",
            "d36194af035d418008b3fae8e9785d1af2d8af96"
        ],
        [
            "apply is_inf_seq_glb in p.",
            "VernacExtend",
            "54bdf885de6a36b791ed97af1c5be96b049d1896"
        ],
        [
            "apply is_inf_seq_glb in p0.",
            "VernacExtend",
            "4cdcd1d5a069fe09c19ee3e04a8ed18161177b81"
        ],
        [
            "move: p p0 ; apply Rbar_is_glb_eq.",
            "VernacExtend",
            "6ea5c7bbc73685de035b9a5f8045c926d39c0fa1"
        ],
        [
            "move => x1 ; split ; case => n -> ; exists n ; by rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "312af2a2b681f3bee69b403be776b75d72652fa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sup_seq_scal_l (a : R) (u : nat -> Rbar) : 0 <= a -> Sup_seq (fun n => Rbar_mult a (u n)) = Rbar_mult a (Sup_seq u).",
            "VernacStartTheoremProof",
            "8e11d89ed9322fa66ef0c7dd8cf3fa58213c9484"
        ],
        [
            "case => Ha.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /Sup_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ex_sup_seq => al Hau.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: ex_sup_seq => l Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "simpl proj1_sig.",
            "VernacExtend",
            "5f96d4f17b719de67e5d7478228e33dba85bb4de"
        ],
        [
            "apply Rbar_le_antisym.",
            "VernacExtend",
            "f0e54e4db9d25ea0231de349a146a11c944777e8"
        ],
        [
            "apply is_sup_seq_lub in Hau.",
            "VernacExtend",
            "a28378cd02b4454c74b704dc7f5e3d9524825bd5"
        ],
        [
            "apply is_sup_seq_lub in Hu.",
            "VernacExtend",
            "f4bb87b0a10b76fb48d075c3cdc3920083aa803c"
        ],
        [
            "apply Hau => _ [n ->].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "suff : Rbar_le (u n) l.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case: (u n) => [un | | ] ; case: (l) => [l' | | ] /= ; try (by case) ; try (case: Rle_dec (Rlt_le _ _ Ha) => //= Ha' _ ; case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => //= _ _ _ ; by left).",
            "VernacExtend",
            "528d71533ae6e6fa84c478575cf71a17e294f9fa"
        ],
        [
            "intros H ; apply Rmult_le_compat_l => // ; by apply Rlt_le.",
            "VernacExtend",
            "7cdefdf2b4816268f7f65388221db5fde9032da6"
        ],
        [
            "apply Hu.",
            "VernacExtend",
            "51e4ba2a0f37212a61da6c69750614260faf5b8d"
        ],
        [
            "by exists n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff : Rbar_le l (Rbar_div_pos al (mkposreal a Ha)).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case: (al) => [al' | | ] ; case: (l) => [l' | | ] /= ; try (by case) ; try (case: Rle_dec (Rlt_le _ _ Ha) => //= Ha' _ ; case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => //= _ _ _ ; by left).",
            "VernacExtend",
            "528d71533ae6e6fa84c478575cf71a17e294f9fa"
        ],
        [
            "intros H ; rewrite Rmult_comm ; apply Rle_div_r => //.",
            "VernacExtend",
            "e7d3257866376f5f080900eee3164933843de7d8"
        ],
        [
            "apply is_sup_seq_lub in Hau.",
            "VernacExtend",
            "a28378cd02b4454c74b704dc7f5e3d9524825bd5"
        ],
        [
            "apply is_sup_seq_lub in Hu.",
            "VernacExtend",
            "f4bb87b0a10b76fb48d075c3cdc3920083aa803c"
        ],
        [
            "apply Hu => _ [n ->].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "suff : Rbar_le (Rbar_mult a (u n)) al.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case: (u n) => [un | | ] ; case: (al) => [al' | | ] /= ; try (by case) ; try (case: Rle_dec (Rlt_le _ _ Ha) => //= Ha' _ ; case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => //= _ _ ; try (by case) ; by left).",
            "VernacExtend",
            "846b46cd2e73c415d7600064c93ff774cd1264fd"
        ],
        [
            "intros H ; rewrite Rmult_comm in H ; apply Rle_div_r => //.",
            "VernacExtend",
            "e7d3257866376f5f080900eee3164933843de7d8"
        ],
        [
            "apply Hau.",
            "VernacExtend",
            "304341d7be8eb5243dbbcd68f15456f22c604ff4"
        ],
        [
            "by exists n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Ha.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "transitivity (Sup_seq (fun _ => 0)).",
            "VernacExtend",
            "1f861c247a7ed818ba9a26b7f8b95ddd2382166c"
        ],
        [
            "apply Sup_seq_ext.",
            "VernacExtend",
            "104404d27bb4e11b78fdc9844fc67780ea3e93be"
        ],
        [
            "move => n ; case: (u n) => [un | | ] /=.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "apply f_equal ; ring.",
            "VernacExtend",
            "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
        ],
        [
            "case: Rle_dec (Rle_refl 0) => //= H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rle_not_lt _ _ H) => //= H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec (Rle_refl 0) => //= H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rle_not_lt _ _ H) => //= H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "transitivity 0.",
            "VernacExtend",
            "9e4321dd85cb6c620055c245e893ebbc6b1ebdff"
        ],
        [
            "apply is_sup_seq_unique.",
            "VernacExtend",
            "cb50867241668fea36174b8e08b8295e72a6a900"
        ],
        [
            "move => eps ; split => /=.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move => _ ; ring_simplify ; by apply eps.",
            "VernacExtend",
            "0a3b94eb80da67f52475104972b9b8d7f1d7396c"
        ],
        [
            "exists 0%nat ; apply Rminus_lt_0 ; ring_simplify ; by apply eps.",
            "VernacExtend",
            "88c9839577d1640e301cf870cc54c47f2a3e043a"
        ],
        [
            "case: (Sup_seq u) => [l | | ] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply f_equal ; ring.",
            "VernacExtend",
            "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
        ],
        [
            "case: Rle_dec (Rle_refl 0) => //= H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rle_not_lt _ _ H) => //= H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec (Rle_refl 0) => //= H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rle_not_lt _ _ H) => //= H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inf_seq_scal_l (a : R) (u : nat -> Rbar) : 0 <= a -> Inf_seq (fun n => Rbar_mult a (u n)) = Rbar_mult a (Inf_seq u).",
            "VernacStartTheoremProof",
            "e47f1779c723463022cb2be87da0201efe1cd58e"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Inf_opp_sup.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(Sup_seq_ext (fun n => Rbar_mult a (Rbar_opp (u n)))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Sup_seq_scal_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -Rbar_mult_opp_r -(Inf_opp_sup u).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => n ; by rewrite Rbar_mult_opp_r.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_sup_seq_le (u v : nat -> Rbar) {l1 l2 : Rbar} : (forall n, Rbar_le (u n) (v n)) -> (is_sup_seq u l1) -> (is_sup_seq v l2) -> Rbar_le l1 l2.",
            "VernacStartTheoremProof",
            "25c597074d5ffa9789676d97f0d97668deae96e5"
        ],
        [
            "destruct l1 as [l1 | | ] ; destruct l2 as [l2 | | ] ; intros Hle Hu Hv ; case (is_sup_seq_lub _ _ Hu) ; clear Hu ; intros _ Hu ; case (is_sup_seq_lub _ _ Hv) ; clear Hv ; intros Hv _ ; apply Hu ; intros x (n,Hn) ; rewrite Hn ; clear x Hn ; apply Rbar_le_trans with (1 := Hle _), Hv ; exists n ; auto.",
            "VernacExtend",
            "f490b23f59116af4b455547be7cf7397e150f44f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_inf_seq_le (u v : nat -> Rbar) {l1 l2 : Rbar} : (forall n, Rbar_le (u n) (v n)) -> (is_inf_seq u l1) -> (is_inf_seq v l2) -> Rbar_le l1 l2.",
            "VernacStartTheoremProof",
            "840f45aecc42fc09ce1af633c71a0477de5975f3"
        ],
        [
            "case: l1 => [l1 | | ] ; case: l2 => [l2 | | ] Hle Hu Hv ; case: (is_inf_seq_glb _ _ Hu) => {Hu} Hu _ ; case: (is_inf_seq_glb _ _ Hv) => {Hv} _ Hv ; apply Hv => _ [n ->] ; apply Rbar_le_trans with (2 := Hle _), Hu ; by exists n.",
            "VernacExtend",
            "9343aa0e25d0aa9f275ed39d859aa8a1950c8ed0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sup_seq_le (u v : nat -> Rbar) : (forall n, Rbar_le (u n) (v n)) -> Rbar_le (Sup_seq u) (Sup_seq v).",
            "VernacStartTheoremProof",
            "0bec078d9d02d1a3c45c4c39b7026ca9853cde57"
        ],
        [
            "intros Heq ; unfold Sup_seq ; case (ex_sup_seq u) ; intros l1 Hu ; case (ex_sup_seq v) ; simpl ; intros l2 Hv.",
            "VernacExtend",
            "40d6772b3a7de3cb897d283d47cb8f9e505aab18"
        ],
        [
            "apply (is_sup_seq_le u v) ; auto.",
            "VernacExtend",
            "445ac13b89a84b666c75f437671e5bbe4f532ef1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inf_seq_le (u v : nat -> Rbar) : (forall n, Rbar_le (u n) (v n)) -> Rbar_le (Inf_seq u) (Inf_seq v).",
            "VernacStartTheoremProof",
            "69b68b2e28bece0a158835de6b893bc04edc6feb"
        ],
        [
            "move => Heq ; rewrite /Inf_seq ; case: (ex_inf_seq u) => l1 Hu ; case: (ex_inf_seq v) => /= l2 Hv.",
            "VernacExtend",
            "aceb9fafa80af3e6874a5c6af6a994b0640007cf"
        ],
        [
            "by apply (is_inf_seq_le u v).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inf_le_sup (u : nat -> Rbar) : Rbar_le (Inf_seq u) (Sup_seq u).",
            "VernacStartTheoremProof",
            "03c3a9f495b10ad51a3bc08740433ba6aa5307aa"
        ],
        [
            "rewrite /Inf_seq ; case: (ex_inf_seq _) ; case => [iu | | ] Hiu ; rewrite /Sup_seq ; case: (ex_sup_seq _) ; case => [su | | ] Hsu //=.",
            "VernacExtend",
            "fafbd9cca2268f0a9f8307dce1714202fd09a759"
        ],
        [
            "apply le_epsilon => e He ; set eps := mkposreal e He ; case: (Hiu (pos_div_2 eps)) => {Hiu} Hiu _ ; case: (Hsu (pos_div_2 eps)) => {Hsu} Hsu _ ; apply Rlt_le.",
            "VernacExtend",
            "eb3dc5a94b76bff449512e982ea3f3a25e833408"
        ],
        [
            "have : (iu = iu - e/2 + e/2) ; first by ring.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move => -> ; have : (su+e = su + e/2 + e/2) ; first by field.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move => -> ; apply Rplus_lt_compat_r, (Rbar_lt_trans (Finite (iu - e/2)) (u O) (Finite (su + e/2))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set eps := mkposreal _ Rlt_0_1 ; case: (Hiu eps) => {Hiu} Hiu _ ; move: (Hiu O) => {Hiu} ; apply Rbar_le_not_lt, Rbar_lt_le, Hsu.",
            "VernacExtend",
            "f0ad7f70923e6e294fc0eab67b78813ed426dacd"
        ],
        [
            "set eps := mkposreal _ Rlt_0_1 ; case: (Hsu eps) => {Hsu} Hsu _ ; move: (Hsu O) => {Hsu} ; apply Rbar_le_not_lt, Rbar_lt_le, Hiu.",
            "VernacExtend",
            "538f92d160fb8d03482026603ed0784095d6e508"
        ],
        [
            "move: (Hiu 0 O) => {Hiu} ; apply Rbar_le_not_lt, Rbar_lt_le, Hsu.",
            "VernacExtend",
            "ade5592c21e0c702b8c0f2c7f6a6887542782ce3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_sup_seq_major (u : nat -> Rbar) (l : Rbar) (n : nat) : is_sup_seq u l -> Rbar_le (u n) l.",
            "VernacStartTheoremProof",
            "ef54bd1ff8e011d3a9ab8ca90dceea6c70b73eb2"
        ],
        [
            "case: l => [l | | ] //= Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (fun eps => proj1 (Hl eps) n) => {Hl}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (u n) => [un | | ] //= Hun.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply le_epsilon => e He ; apply Rlt_le.",
            "VernacExtend",
            "2f9059c3be0b2826dc6b85aafa96f4fcec84dd59"
        ],
        [
            "apply: Hun (mkposreal e He).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by move: (Hun (mkposreal _ Rlt_0_1)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (u n) => [un | | ] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Hl (u n) n) ; case: (u n) => [un | | ] //= {Hl} Hl.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by apply Rlt_irrefl in Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sup_seq_minor_lt (u : nat -> Rbar) (M : R) : Rbar_lt M (Sup_seq u) <-> exists n, Rbar_lt M (u n).",
            "VernacStartTheoremProof",
            "ec61d0a6f6712acf2f7009ca9a25bf3178ebc621"
        ],
        [
            "rewrite /Sup_seq ; case: ex_sup_seq => l Hl ; simpl proj1_sig ; split => H.",
            "VernacExtend",
            "3fb6055fae7480addbc2b3c1bde848ad20a13eb9"
        ],
        [
            "case: l Hl H => [l | | ] Hl H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rminus_lt_0 in H.",
            "VernacExtend",
            "cc788f46f0f5b7c476514ba43d78dd77271a6406"
        ],
        [
            "case: (proj2 (Hl (mkposreal _ H))) ; simpl pos => {Hl} n Hl.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "exists n.",
            "VernacExtend",
            "a97204a252e0d9b7444ffed9b38570a756391511"
        ],
        [
            "replace M with (l - (l - M)) by ring.",
            "VernacExtend",
            "567cb1faac5135f579f4ecc645ea25ced57fea40"
        ],
        [
            "by apply Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (Hl M).",
            "VernacExtend",
            "75276cc27b070e2301b06bcbb6e6d16616dc2cf5"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: H => n Hn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rbar_lt_le_trans with (u n).",
            "VernacExtend",
            "3d63ef1d1180374f8b29353fe69031b9b3087e92"
        ],
        [
            "exact: Hn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply is_sup_seq_major.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sup_seq_minor_le (u : nat -> Rbar) (M : R) (n : nat) : Rbar_le M (u n) -> Rbar_le M (Sup_seq u).",
            "VernacStartTheoremProof",
            "9bf88d06885d49da19edbbe331adaf5df144d4dc"
        ],
        [
            "intros H'.",
            "VernacExtend",
            "d7903418c9c01fda86d2cc847b39424719d50154"
        ],
        [
            "destruct (Rbar_le_lt_or_eq_dec _ _ H') as [H|H].",
            "VernacExtend",
            "3c1546da2426c369caf1077c5e89ebade8d2a3da"
        ],
        [
            "apply Rbar_lt_le.",
            "VernacExtend",
            "e74b551ac655dae2f0977cdd30600246b482a8d9"
        ],
        [
            "apply Sup_seq_minor_lt.",
            "VernacExtend",
            "aec9c050f7c681ec1c50d1261dd289d9366ffa44"
        ],
        [
            "by exists n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /Sup_seq ; case: ex_sup_seq => l Hl ; simpl proj1_sig.",
            "VernacExtend",
            "c137b9da1c76d897f0388c94e6622e138d077888"
        ],
        [
            "by apply is_sup_seq_major.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_LimSup_seq (u : nat -> R) (l : Rbar) := match l with | Finite l => forall eps : posreal, (forall N : nat, exists n : nat, (N <= n)%nat /\\ l - eps < u n) /\\ (exists N : nat, forall n : nat, (N <= n)%nat -> u n < l + eps) | p_infty => forall M : R, (forall N : nat, exists n : nat, (N <= n)%nat /\\ M < u n) | m_infty => forall M : R, (exists N : nat, forall n : nat, (N <= n)%nat -> u n < M) end.",
            "VernacDefinition",
            "c0b7c635aac6e01b6b11a0942cfc95aefd395b70"
        ],
        [
            "Definition is_LimInf_seq (u : nat -> R) (l : Rbar) := match l with | Finite l => forall eps : posreal, (forall N : nat, exists n : nat, (N <= n)%nat /\\ u n < l + eps) /\\ (exists N : nat, forall n : nat, (N <= n)%nat -> l - eps < u n) | p_infty => forall M : R, (exists N : nat, forall n : nat, (N <= n)%nat -> M < u n) | m_infty => forall M : R, (forall N : nat, exists n : nat, (N <= n)%nat /\\ u n < M) end.",
            "VernacDefinition",
            "6ddd8df4597da3ebd22ac00da7f44ea6634eb0b0"
        ],
        [
            "Lemma is_LimInf_opp_LimSup_seq (u : nat -> R) (l : Rbar) : is_LimInf_seq (fun n => - u n) (Rbar_opp l) <-> is_LimSup_seq u l.",
            "VernacStartTheoremProof",
            "b913cc6105841f061d7f35dc9586dc8791afc0ca"
        ],
        [
            "case: l => [l | | ] /= ; split => Hl.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "move => eps ; case: (Hl eps) => {Hl} H1 H2 ; split.",
            "VernacExtend",
            "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
        ],
        [
            "move => N ; case: (H1 N) => {H1} n [Hn H1].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "exists n ; split.",
            "VernacExtend",
            "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "apply Rlt_le_trans with (1 := H1) ; right ; ring.",
            "VernacExtend",
            "c7d062fb93a4aa28bc73ad97670400d8eeaa9ced"
        ],
        [
            "case: H2 => N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "apply Rle_lt_trans with (2 := H2 _ Hn) ; right ; ring.",
            "VernacExtend",
            "a9af0bf10656f4817886b24f09f09a7bc76e1949"
        ],
        [
            "move => eps ; case: (Hl eps) => {Hl} H1 H2 ; split.",
            "VernacExtend",
            "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
        ],
        [
            "move => N ; case: (H1 N) => {H1} n [Hn H1].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "exists n ; split.",
            "VernacExtend",
            "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
            "VernacExtend",
            "31707c24df95152fae2e018204d307f8d0cfe927"
        ],
        [
            "apply Rle_lt_trans with (2 := H1) ; right ; ring.",
            "VernacExtend",
            "3d89d05b7ea8ebb06cb5241e72c9ce95ae34f014"
        ],
        [
            "case: H2 => N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
            "VernacExtend",
            "31707c24df95152fae2e018204d307f8d0cfe927"
        ],
        [
            "apply Rlt_le_trans with (1 := H2 _ Hn) ; right ; ring.",
            "VernacExtend",
            "1b5e45fe212de540c9832e171601a3d76ce1c5bc"
        ],
        [
            "move => M N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl (-M) N) => {Hl} n [Hn Hl].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists n ; split.",
            "VernacExtend",
            "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Ropp_lt_cancel.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl (-M) N) => {Hl} n [Hn Hl].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists n ; split.",
            "VernacExtend",
            "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Ropp_lt_cancel ; by rewrite Ropp_involutive.",
            "VernacExtend",
            "9009c9b957a86d8010aa0e0c1ca31f0be121be98"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl (-M)) => {Hl} N Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "by apply Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl (-M)) => {Hl} N Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
            "VernacExtend",
            "31707c24df95152fae2e018204d307f8d0cfe927"
        ],
        [
            "by apply Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimSup_opp_LimInf_seq (u : nat -> R) (l : Rbar) : is_LimSup_seq (fun n => - u n) (Rbar_opp l) <-> is_LimInf_seq u l.",
            "VernacStartTheoremProof",
            "6530ad00411f15c3cc3e6eed049a56fbd42ca21e"
        ],
        [
            "case: l => [l | | ] /= ; split => Hl.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "move => eps ; case: (Hl eps) => {Hl} H1 H2 ; split.",
            "VernacExtend",
            "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
        ],
        [
            "move => N ; case: (H1 N) => {H1} n [Hn H1].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "exists n ; split.",
            "VernacExtend",
            "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "apply Rle_lt_trans with (2 := H1) ; right ; ring.",
            "VernacExtend",
            "3d89d05b7ea8ebb06cb5241e72c9ce95ae34f014"
        ],
        [
            "case: H2 => N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "apply Rlt_le_trans with (1 := H2 _ Hn) ; right ; ring.",
            "VernacExtend",
            "1b5e45fe212de540c9832e171601a3d76ce1c5bc"
        ],
        [
            "move => eps ; case: (Hl eps) => {Hl} H1 H2 ; split.",
            "VernacExtend",
            "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
        ],
        [
            "move => N ; case: (H1 N) => {H1} n [Hn H1].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "exists n ; split.",
            "VernacExtend",
            "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
            "VernacExtend",
            "31707c24df95152fae2e018204d307f8d0cfe927"
        ],
        [
            "apply Rlt_le_trans with (1 := H1) ; right ; ring.",
            "VernacExtend",
            "c7d062fb93a4aa28bc73ad97670400d8eeaa9ced"
        ],
        [
            "case: H2 => N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
            "VernacExtend",
            "31707c24df95152fae2e018204d307f8d0cfe927"
        ],
        [
            "apply Rle_lt_trans with (2 := H2 _ Hn) ; right ; ring.",
            "VernacExtend",
            "a9af0bf10656f4817886b24f09f09a7bc76e1949"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl (-M)) => {Hl} N Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "by apply Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl (-M)) => {Hl} N Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
            "VernacExtend",
            "31707c24df95152fae2e018204d307f8d0cfe927"
        ],
        [
            "by apply Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl (-M) N) => {Hl} n [Hn Hl].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists n ; split.",
            "VernacExtend",
            "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Ropp_lt_cancel.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl (-M) N) => {Hl} n [Hn Hl].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists n ; split.",
            "VernacExtend",
            "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Ropp_lt_cancel ; by rewrite Ropp_involutive.",
            "VernacExtend",
            "9009c9b957a86d8010aa0e0c1ca31f0be121be98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimSup_infSup_seq (u : nat -> R) (l : Rbar) : is_LimSup_seq u l <-> is_inf_seq (fun m => Sup_seq (fun n => u (n + m)%nat)) l.",
            "VernacStartTheoremProof",
            "e5a4a6ad268f4b3447e36d6635e78e9595e55f8f"
        ],
        [
            "case: l => [l | | ] ; rewrite /is_LimSup_seq /is_inf_seq ; split => Hl.",
            "VernacExtend",
            "c4a46ac89a9c7997fc10e59922c13d5e3d2b0b23"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Sup_seq_minor_lt.",
            "VernacExtend",
            "aec9c050f7c681ec1c50d1261dd289d9366ffa44"
        ],
        [
            "case: (proj1 (Hl eps) N) => {Hl} n Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (n - N)%nat.",
            "VernacExtend",
            "0f5da853c003ba373644e24b7dcf2d35bf834333"
        ],
        [
            "rewrite MyNat.sub_add ; intuition.",
            "VernacExtend",
            "e4029ed893b2095ae42ef8228a67f0fb36a59743"
        ],
        [
            "case: (proj2 (Hl (pos_div_2 eps))) => /= {Hl} N Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N ; rewrite /Sup_seq ; case: ex_sup_seq => un Hun ; simpl proj1_sig.",
            "VernacExtend",
            "298cc8b269639d6e2117ab18e36ad020d09766df"
        ],
        [
            "case: un Hun => [un | | ] /= Hun.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (proj2 (Hun (pos_div_2 eps))) => {Hun} /= n Hun.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rlt_minus_l in Hun.",
            "VernacExtend",
            "19a45653e0731f3caf42c16afd1f86f0fe8d2796"
        ],
        [
            "apply Rlt_trans with (1 := Hun).",
            "VernacExtend",
            "4058a533b6aec506d793c046a32024597a3234ff"
        ],
        [
            "apply Rlt_minus_r.",
            "VernacExtend",
            "4cb9df2c60171daa5a308d58de982b4740e9f8dd"
        ],
        [
            "apply Rlt_le_trans with (1 := Hl _ (le_plus_r _ _)) ; right ; field.",
            "VernacExtend",
            "8a92b3100af17af8ed4110d091a6b5c9c8d9033b"
        ],
        [
            "case: (Hun (l + eps / 2)) => {Hun} n.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_not_lt, Rlt_le, Hl, le_plus_r.",
            "VernacExtend",
            "b14bbbbbba1e5a1cf8c01fcb91ecccd0fd875d7d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (proj1 (Hl eps) N) => {Hl} Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Sup_seq_minor_lt in Hl.",
            "VernacExtend",
            "26e11c39c980352110cca8bd50ade20c9b96ec71"
        ],
        [
            "case: Hl => /= n Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (n + N)%nat ; intuition.",
            "VernacExtend",
            "4c72daa834e865db6379233e16f33590cb645bb1"
        ],
        [
            "case: (proj2 (Hl eps)) => {Hl} N Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (Rbar_not_le_lt (l + eps) (u n)).",
            "VernacExtend",
            "a9560347e8e7483717dd4a1f682a64b162b1c8b9"
        ],
        [
            "contradict Hl.",
            "VernacExtend",
            "b0fd704608864a015715b0c7a14b60f0655e01f3"
        ],
        [
            "apply Rbar_le_not_lt.",
            "VernacExtend",
            "26846f4220b509cc8abc0a290e0e9d2da4af5e4b"
        ],
        [
            "apply Sup_seq_minor_le with (n - N)%nat.",
            "VernacExtend",
            "a25adf39543b8d71b0e48a74894e5876ed6b6921"
        ],
        [
            "by rewrite MyNat.sub_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl M N) => {Hl} n Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Sup_seq_minor_lt.",
            "VernacExtend",
            "aec9c050f7c681ec1c50d1261dd289d9366ffa44"
        ],
        [
            "exists (n - N)%nat.",
            "VernacExtend",
            "0f5da853c003ba373644e24b7dcf2d35bf834333"
        ],
        [
            "rewrite MyNat.sub_add ; intuition.",
            "VernacExtend",
            "e4029ed893b2095ae42ef8228a67f0fb36a59743"
        ],
        [
            "move => M N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (Hl M N) => {Hl} Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Sup_seq_minor_lt in Hl.",
            "VernacExtend",
            "26e11c39c980352110cca8bd50ade20c9b96ec71"
        ],
        [
            "case: Hl => /= n Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (n + N)%nat ; intuition.",
            "VernacExtend",
            "4c72daa834e865db6379233e16f33590cb645bb1"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl (M-1)) => {Hl} N Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N ; rewrite /Sup_seq ; case: ex_sup_seq => un Hun ; simpl proj1_sig.",
            "VernacExtend",
            "298cc8b269639d6e2117ab18e36ad020d09766df"
        ],
        [
            "case: un Hun => [un | | ] /= Hun.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (proj2 (Hun (mkposreal _ Rlt_0_1))) => {Hun} /= n Hun.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rlt_minus_l in Hun.",
            "VernacExtend",
            "19a45653e0731f3caf42c16afd1f86f0fe8d2796"
        ],
        [
            "apply Rlt_trans with (1 := Hun).",
            "VernacExtend",
            "4058a533b6aec506d793c046a32024597a3234ff"
        ],
        [
            "apply Rlt_minus_r.",
            "VernacExtend",
            "4cb9df2c60171daa5a308d58de982b4740e9f8dd"
        ],
        [
            "apply Hl ; intuition.",
            "VernacExtend",
            "7ec7ed4fd1acadd3c785ada3e283ddaa3821cb54"
        ],
        [
            "case: (Hun (M-1)) => {Hun} n.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_not_lt, Rlt_le, Hl, le_plus_r.",
            "VernacExtend",
            "b14bbbbbba1e5a1cf8c01fcb91ecccd0fd875d7d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl M) => {Hl} N Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (Rbar_not_le_lt M (u n)).",
            "VernacExtend",
            "167f68552d4af3233386d2a8095e2ded47ce9c89"
        ],
        [
            "contradict Hl.",
            "VernacExtend",
            "b0fd704608864a015715b0c7a14b60f0655e01f3"
        ],
        [
            "apply Rbar_le_not_lt.",
            "VernacExtend",
            "26846f4220b509cc8abc0a290e0e9d2da4af5e4b"
        ],
        [
            "apply Sup_seq_minor_le with (n - N)%nat.",
            "VernacExtend",
            "a25adf39543b8d71b0e48a74894e5876ed6b6921"
        ],
        [
            "by rewrite MyNat.sub_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimInf_supInf_seq (u : nat -> R) (l : Rbar) : is_LimInf_seq u l <-> is_sup_seq (fun m => Inf_seq (fun n => u (n + m)%nat)) l.",
            "VernacStartTheoremProof",
            "bd0d96026b424cc3622294cccc4a261ece4d12fc"
        ],
        [
            "rewrite -is_LimSup_opp_LimInf_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite is_LimSup_infSup_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -is_sup_opp_inf_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rbar_opp_involutive.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split ; apply is_sup_seq_ext => n ; by rewrite Inf_opp_sup.",
            "VernacExtend",
            "fc67683ba0e0581ebff940ac5e88f19cb87bb912"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimSup_seq_ext_loc (u v : nat -> R) (l : Rbar) : eventually (fun n => u n = v n) -> is_LimSup_seq u l -> is_LimSup_seq v l.",
            "VernacStartTheoremProof",
            "00a51e7181c0daacdbdf616e09e38c7d936fbc25"
        ],
        [
            "case: l => [l | | ] /= [Next Hext] Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu eps) => {Hu} H1 H2 ; split.",
            "VernacExtend",
            "88c25af51ded328891892c53c941b62f68d72bd0"
        ],
        [
            "move => N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (H1 (N + Next)%nat) => {H1} n [Hn H1].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists n ; rewrite -Hext ; intuition.",
            "VernacExtend",
            "fdc225eba05b90a2c644a13ba5d272e97bbb740e"
        ],
        [
            "case: H2 => N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (N + Next)%nat => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Hext ; intuition.",
            "VernacExtend",
            "e4029ed893b2095ae42ef8228a67f0fb36a59743"
        ],
        [
            "move => M N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu M (N + Next)%nat) => {Hu} n [Hn Hu].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists n ; rewrite -Hext ; intuition.",
            "VernacExtend",
            "fdc225eba05b90a2c644a13ba5d272e97bbb740e"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu M) => {Hu} N Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (N + Next)%nat => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Hext ; intuition.",
            "VernacExtend",
            "e4029ed893b2095ae42ef8228a67f0fb36a59743"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimSup_seq_ext (u v : nat -> R) (l : Rbar) : (forall n, u n = v n) -> is_LimSup_seq u l -> is_LimSup_seq v l.",
            "VernacStartTheoremProof",
            "1dd9fc1f4b8b389e09a8eee85970896d1cfd5dbc"
        ],
        [
            "move => Hext.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_LimSup_seq_ext_loc.",
            "VernacExtend",
            "e296d3951360a67562c3a4bf21718590db51e2fc"
        ],
        [
            "exists O => n _ ; by apply Hext.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimInf_seq_ext_loc (u v : nat -> R) (l : Rbar) : eventually (fun n => u n = v n) -> is_LimInf_seq u l -> is_LimInf_seq v l.",
            "VernacStartTheoremProof",
            "22fe5122841c15aca9019acd48b0ecf25bfca399"
        ],
        [
            "case => N Hext Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply is_LimSup_opp_LimInf_seq.",
            "VernacExtend",
            "36b8005036b7d04e07f430e32fd1558b95d65518"
        ],
        [
            "apply is_LimSup_seq_ext_loc with (fun n => - u n).",
            "VernacExtend",
            "14eed2bcb880b54df0d11408e284dc072c39c032"
        ],
        [
            "exists N => n Hn ; by rewrite Hext.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "by apply is_LimSup_opp_LimInf_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimInf_seq_ext (u v : nat -> R) (l : Rbar) : (forall n, u n = v n) -> is_LimInf_seq u l -> is_LimInf_seq v l.",
            "VernacStartTheoremProof",
            "4a444ed9858d34c452ff1a4340a725941e98311b"
        ],
        [
            "move => Hext.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_LimInf_seq_ext_loc.",
            "VernacExtend",
            "3f90fde00bb76f6dca826635d44da0239cd012d3"
        ],
        [
            "exists O => n _ ; by apply Hext.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_LimSup_seq (u : nat -> R) : {l : Rbar | is_LimSup_seq u l}.",
            "VernacStartTheoremProof",
            "d633456b78306f0e1e6d64fbe7f4fb4c29acb94b"
        ],
        [
            "case: (ex_inf_seq (fun m : nat => Sup_seq (fun n : nat => u (n + m)%nat))) => l Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "by apply is_LimSup_infSup_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_LimInf_seq (u : nat -> R) : {l : Rbar | is_LimInf_seq u l}.",
            "VernacStartTheoremProof",
            "00cadb5c05a95fd37a82242d614403922d0f53cb"
        ],
        [
            "case: (ex_sup_seq (fun m : nat => Inf_seq (fun n : nat => u (n + m)%nat))) => l Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "by apply is_LimInf_supInf_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition LimSup_seq (u : nat -> R) := proj1_sig (ex_LimSup_seq u).",
            "VernacDefinition",
            "c04b3b056a7cbc39749f5dee87297799d7814c93"
        ],
        [
            "Definition LimInf_seq (u : nat -> R) := proj1_sig (ex_LimInf_seq u).",
            "VernacDefinition",
            "1a06a67ec76c6a776ff0fe6219e8aa489cf81082"
        ],
        [
            "Lemma is_LimSup_seq_unique (u : nat -> R) (l : Rbar) : is_LimSup_seq u l -> LimSup_seq u = l.",
            "VernacStartTheoremProof",
            "66831a03a79d0430f8fc2f20b7d9aaec20e04565"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /LimSup_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ex_LimSup_seq => lu Hu /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply is_LimSup_infSup_seq in H.",
            "VernacExtend",
            "1095c0c4d6f750fe7c47985f7748832498053150"
        ],
        [
            "apply is_LimSup_infSup_seq in Hu.",
            "VernacExtend",
            "36a636d29b301c3b89de313ee465c2efae60a095"
        ],
        [
            "rewrite -(is_inf_seq_unique _ _ Hu).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply is_inf_seq_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimInf_seq_unique (u : nat -> R) (l : Rbar) : is_LimInf_seq u l -> LimInf_seq u = l.",
            "VernacStartTheoremProof",
            "ec611e07a5056c9ee6b4f23ca5fb9866386d9db8"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /LimInf_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ex_LimInf_seq => lu Hu /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply is_LimInf_supInf_seq in H.",
            "VernacExtend",
            "302a0ff02d35fa1d5b6863dfa2990a9029bc9e57"
        ],
        [
            "apply is_LimInf_supInf_seq in Hu.",
            "VernacExtend",
            "27cc874d9af0b3d0d9e068f768d5ea7a8af7743c"
        ],
        [
            "rewrite -(is_sup_seq_unique _ _ Hu).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply is_sup_seq_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LimSup_InfSup_seq (u : nat -> R) : LimSup_seq u = Inf_seq (fun m => Sup_seq (fun n => u (n + m)%nat)).",
            "VernacStartTheoremProof",
            "6483faa937bbcb5a624fa033afee0f2ef750a77e"
        ],
        [
            "apply is_LimSup_seq_unique.",
            "VernacExtend",
            "8a0b5a14c04ad85d3d7f8482e3bd9d1994ad0ebd"
        ],
        [
            "apply is_LimSup_infSup_seq.",
            "VernacExtend",
            "112fc0c677019e9fb73e477e9b8dc531058a330f"
        ],
        [
            "rewrite /Inf_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: ex_inf_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LimInf_SupInf_seq (u : nat -> R) : LimInf_seq u = Sup_seq (fun m => Inf_seq (fun n => u (n + m)%nat)).",
            "VernacStartTheoremProof",
            "e7ceacaed0098f5f0303b5f1296eaa374146c74a"
        ],
        [
            "apply is_LimInf_seq_unique.",
            "VernacExtend",
            "63a6220bb36d8c1a0804454f94f9075975d127b8"
        ],
        [
            "apply is_LimInf_supInf_seq.",
            "VernacExtend",
            "e11b3bb25745233f8266ed56917ed6d78fc6f15c"
        ],
        [
            "rewrite /Sup_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: ex_sup_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimSup_LimInf_seq_le (u : nat -> R) (ls li : Rbar) : is_LimSup_seq u ls -> is_LimInf_seq u li -> Rbar_le li ls.",
            "VernacStartTheoremProof",
            "09fa1887bcd738f96b4c0ecd369ab875806abc98"
        ],
        [
            "case: ls => [ls | | ] ; case: li => [li | | ] //= Hls Hli.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "apply le_epsilon => e He ; set eps := pos_div_2 (mkposreal e He).",
            "VernacExtend",
            "c9a8452e0e06a4c3ac19bcd1b0a42d11d8e194b2"
        ],
        [
            "replace li with ((li - eps) + eps) by ring.",
            "VernacExtend",
            "f32173b88aae0c68b85671203b6d6b10f7f161ef"
        ],
        [
            "replace (ls + e) with ((ls + eps) + eps) by (simpl ; field).",
            "VernacExtend",
            "f9d986d70433ae6e87755d7a28b532442d5f61d4"
        ],
        [
            "apply Rplus_le_compat_r, Rlt_le.",
            "VernacExtend",
            "bb59c61c6e587abc3f55dc69b30c9ba07e48f487"
        ],
        [
            "case: (proj2 (Hls eps)) => {Hls} Ns Hls.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (proj2 (Hli eps)) => {Hli} Ni Hli.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rlt_trans with (u (Ns + Ni)%nat).",
            "VernacExtend",
            "fcb295f79c03fa1c214851deb9597f7c4e670198"
        ],
        [
            "apply Hli ; by intuition.",
            "VernacExtend",
            "f964a2c90cacd529a3131d8057d6fe49139fc5b5"
        ],
        [
            "apply Hls ; by intuition.",
            "VernacExtend",
            "44e5ca8eac9298987b2dd2de53502acb107477a2"
        ],
        [
            "case: (proj2 (Hls (mkposreal _ Rlt_0_1))) => {Hls} /= Ns Hls.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Hli (ls + 1)) => {Hli} Ni Hli.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "absurd (ls + 1 < u (Ns + Ni)%nat).",
            "VernacExtend",
            "c0e471b84147f4c1de3a824746aa5b68375fa54b"
        ],
        [
            "apply Rle_not_lt, Rlt_le, Hls ; by intuition.",
            "VernacExtend",
            "f645598ff65bd35bb4a7a85f6faa34192bd8a81f"
        ],
        [
            "apply Hli ; by intuition.",
            "VernacExtend",
            "f964a2c90cacd529a3131d8057d6fe49139fc5b5"
        ],
        [
            "case: (proj2 (Hli (mkposreal _ Rlt_0_1))) => {Hli} /= Ni Hli.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Hls (li - 1)) => {Hls} Ns Hls.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "absurd (li - 1 < u (Ns + Ni)%nat).",
            "VernacExtend",
            "dc44c8666b7379703973bc11464c52cf695ee11d"
        ],
        [
            "apply Rle_not_lt, Rlt_le, Hls ; by intuition.",
            "VernacExtend",
            "f645598ff65bd35bb4a7a85f6faa34192bd8a81f"
        ],
        [
            "apply Hli ; by intuition.",
            "VernacExtend",
            "f964a2c90cacd529a3131d8057d6fe49139fc5b5"
        ],
        [
            "case: (Hli 0) => {Hli} /= Ni Hli.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Hls 0) => {Hls} Ns Hls.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "absurd (0 < u (Ns + Ni)%nat).",
            "VernacExtend",
            "6585524dbcbbf94c8b80f135dd15dd501cb0d60d"
        ],
        [
            "apply Rle_not_lt, Rlt_le, Hls ; by intuition.",
            "VernacExtend",
            "f645598ff65bd35bb4a7a85f6faa34192bd8a81f"
        ],
        [
            "apply Hli ; by intuition.",
            "VernacExtend",
            "f964a2c90cacd529a3131d8057d6fe49139fc5b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LimSup_LimInf_seq_le (u : nat -> R) : Rbar_le (LimInf_seq u) (LimSup_seq u).",
            "VernacStartTheoremProof",
            "3f329ca4127e604ba2fd89a22567e1e62b4c4c34"
        ],
        [
            "rewrite /LimInf_seq ; case: ex_LimInf_seq => /= li Hli.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /LimSup_seq ; case: ex_LimSup_seq => /= ls Hls.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply is_LimSup_LimInf_seq_le with u.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimSup_seq_const (a : R) : is_LimSup_seq (fun _ => a) a.",
            "VernacStartTheoremProof",
            "2f86e8a39781d8d8b4b2f03460c2ce141bc24a7a"
        ],
        [
            "intros eps ; split.",
            "VernacExtend",
            "1caec8fa3aff7a5b4af0d3144989b59733549841"
        ],
        [
            "intros N ; exists N ; split.",
            "VernacExtend",
            "9ac4aa051b89a3e6b591bf0de534fa1fd3f27cfc"
        ],
        [
            "by apply le_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify.",
            "VernacExtend",
            "969fc87537fdaad612d2a1aa70d377f614654753"
        ],
        [
            "by apply eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists O => _ _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify.",
            "VernacExtend",
            "969fc87537fdaad612d2a1aa70d377f614654753"
        ],
        [
            "by apply eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LimSup_seq_const (a : R) : LimSup_seq (fun _ => a) = a.",
            "VernacStartTheoremProof",
            "01f7e6885581f970eb2ab1197eafbdf558355aab"
        ],
        [
            "apply is_LimSup_seq_unique.",
            "VernacExtend",
            "8a0b5a14c04ad85d3d7f8482e3bd9d1994ad0ebd"
        ],
        [
            "by apply is_LimSup_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimInf_seq_const (a : R) : is_LimInf_seq (fun _ => a) a.",
            "VernacStartTheoremProof",
            "586bde0e1f3bb344b618612465d1b23e2c028e48"
        ],
        [
            "intros eps ; split.",
            "VernacExtend",
            "1caec8fa3aff7a5b4af0d3144989b59733549841"
        ],
        [
            "intros N ; exists N ; split.",
            "VernacExtend",
            "9ac4aa051b89a3e6b591bf0de534fa1fd3f27cfc"
        ],
        [
            "by apply le_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify.",
            "VernacExtend",
            "969fc87537fdaad612d2a1aa70d377f614654753"
        ],
        [
            "by apply eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists O => _ _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify.",
            "VernacExtend",
            "969fc87537fdaad612d2a1aa70d377f614654753"
        ],
        [
            "by apply eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LimInf_seq_const (a : R) : LimInf_seq (fun _ => a) = a.",
            "VernacStartTheoremProof",
            "88c088cead3840a14995bb8f8bf66494cf3b68f0"
        ],
        [
            "apply is_LimInf_seq_unique.",
            "VernacExtend",
            "63a6220bb36d8c1a0804454f94f9075975d127b8"
        ],
        [
            "by apply is_LimInf_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LimSup_seq_opp (u : nat -> R) : LimSup_seq (fun n => - u n) = Rbar_opp (LimInf_seq u).",
            "VernacStartTheoremProof",
            "e2fb0681707809e9bc397050e8156427916557d4"
        ],
        [
            "rewrite LimSup_InfSup_seq LimInf_SupInf_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Inf_opp_sup ; apply f_equal, Sup_seq_ext => m.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "rewrite Inf_opp_sup ; by apply f_equal, Sup_seq_ext => n.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LimInf_seq_opp (u : nat -> R) : LimInf_seq (fun n => - u n) = Rbar_opp (LimSup_seq u).",
            "VernacStartTheoremProof",
            "1583f4e9cd7cacdbf762838f9fa8d42b574eeabd"
        ],
        [
            "rewrite LimSup_InfSup_seq LimInf_SupInf_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Sup_opp_inf ; apply f_equal, Inf_seq_ext => m.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "rewrite Sup_opp_inf ; by apply f_equal, Inf_seq_ext => n.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LimSup_le (u v : nat -> R) : eventually (fun n => u n <= v n) -> Rbar_le (LimSup_seq u) (LimSup_seq v).",
            "VernacStartTheoremProof",
            "17d4dcc4ffab94f0723712a6614fb4c921938dc9"
        ],
        [
            "intros (N,H).",
            "VernacExtend",
            "6931f6d23395205f87fef1191e147806df14f462"
        ],
        [
            "rewrite /LimSup_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ex_LimSup_seq ; case => [lu | | ] //= Hlu ; case: ex_LimSup_seq ; case => [lv | | ] //= Hlv.",
            "VernacExtend",
            "9c855307bebe9c9fcd60ebdc397f010c9a03df54"
        ],
        [
            "apply Rnot_lt_le => Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rminus_lt_0 in Hl.",
            "VernacExtend",
            "c79287aadd031342891d76e52e6cd98ac8a7ddcd"
        ],
        [
            "case: (Hlv (pos_div_2 (mkposreal _ Hl))) => {Hlv} /= _ [n Hlv].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (proj1 (Hlu (pos_div_2 (mkposreal _ Hl))) (N + n)%nat) => {Hlu} m /= [Hm Hlu].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (H _ (le_trans _ _ _ (le_plus_l _ _) Hm)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rlt_not_le.",
            "VernacExtend",
            "970672dbfa76c5b1a5bbbe80816db4b871608528"
        ],
        [
            "eapply Rlt_trans, Hlu.",
            "VernacExtend",
            "fd19a5c9724040dac8086daad388ffcf8a5cdc4d"
        ],
        [
            "eapply Rlt_le_trans.",
            "VernacExtend",
            "bdafc71d9925d26027c5427e9077cdbbfdc3ee27"
        ],
        [
            "eapply Hlv, le_trans, Hm.",
            "VernacExtend",
            "4309c10bffa62bad7bceb2cc3a843a6bb0f749b6"
        ],
        [
            "by apply le_plus_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Req_le ; field.",
            "VernacExtend",
            "2174f1ccde93a7e8aa969bbcd29fd5556bc786df"
        ],
        [
            "case: (Hlv (lu - 1)) => {Hlv} n Hlv.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (proj1 (Hlu (mkposreal _ Rlt_0_1)) (N + n)%nat) => {Hlu} m /= [Hm Hlu].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (H _ (le_trans _ _ _ (le_plus_l _ _) Hm)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rlt_not_le.",
            "VernacExtend",
            "970672dbfa76c5b1a5bbbe80816db4b871608528"
        ],
        [
            "eapply Rlt_trans, Hlu.",
            "VernacExtend",
            "fd19a5c9724040dac8086daad388ffcf8a5cdc4d"
        ],
        [
            "eapply Hlv, le_trans, Hm.",
            "VernacExtend",
            "4309c10bffa62bad7bceb2cc3a843a6bb0f749b6"
        ],
        [
            "by apply le_plus_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Hlv (mkposreal _ Rlt_0_1)) => {Hlv} /= _ [n Hlv].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Hlu (lv + 1) (N + n)%nat) => {Hlu} /= m [Hm Hlu].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (H _ (le_trans _ _ _ (le_plus_l _ _) Hm)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rlt_not_le.",
            "VernacExtend",
            "970672dbfa76c5b1a5bbbe80816db4b871608528"
        ],
        [
            "eapply Rlt_trans, Hlu.",
            "VernacExtend",
            "fd19a5c9724040dac8086daad388ffcf8a5cdc4d"
        ],
        [
            "eapply Hlv, le_trans, Hm.",
            "VernacExtend",
            "4309c10bffa62bad7bceb2cc3a843a6bb0f749b6"
        ],
        [
            "by apply le_plus_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Hlv 0) => {Hlv} n Hlv.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Hlu 0 (N + n)%nat) => {Hlu} m [Hm Hlu].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (H _ (le_trans _ _ _ (le_plus_l _ _) Hm)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rlt_not_le.",
            "VernacExtend",
            "970672dbfa76c5b1a5bbbe80816db4b871608528"
        ],
        [
            "eapply Rlt_trans, Hlu.",
            "VernacExtend",
            "fd19a5c9724040dac8086daad388ffcf8a5cdc4d"
        ],
        [
            "eapply Hlv, le_trans, Hm.",
            "VernacExtend",
            "4309c10bffa62bad7bceb2cc3a843a6bb0f749b6"
        ],
        [
            "by apply le_plus_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LimInf_le (u v : nat -> R) : eventually (fun n => u n <= v n) -> Rbar_le (LimInf_seq u) (LimInf_seq v).",
            "VernacStartTheoremProof",
            "7e5f111cc80f1480e141bfc3c58f0176927bb04e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rbar_opp_le.",
            "VernacExtend",
            "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
        ],
        [
            "rewrite -!LimSup_seq_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply LimSup_le.",
            "VernacExtend",
            "0705f7dfc734b3507d6c1c17587405e5202a67e3"
        ],
        [
            "move: H ; apply filter_imp => n.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by apply Ropp_le_contravar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimSup_seq_scal_pos (a : R) (u : nat -> R) (l : Rbar) : (0 < a) -> is_LimSup_seq u l -> is_LimSup_seq (fun n => a * u n) (Rbar_mult a l).",
            "VernacStartTheoremProof",
            "40660f1f1949fb39dfce450142d0283bb463e557"
        ],
        [
            "case: l => [l | | ] /= Ha Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suff He : 0 < eps / a.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case: (Hu (mkposreal _ He)) => {Hu} /= H1 H2 ; split.",
            "VernacExtend",
            "88c25af51ded328891892c53c941b62f68d72bd0"
        ],
        [
            "move => N ; case: (H1 N) => {H1} n [Hn H1].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "exists n ; split.",
            "VernacExtend",
            "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (Rmult_comm _ (u n)) ; apply Rlt_div_l.",
            "VernacExtend",
            "ad4548a5215923665bf1a4e0a493dbd7f6be2e81"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_lt_trans with (2 := H1) ; right ; field ; by apply Rgt_not_eq.",
            "VernacExtend",
            "b9dda23bfcfee4fcc435c04aecad6b6859f71e35"
        ],
        [
            "case: H2 => N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (Rmult_comm _ (u n)) ; apply Rlt_div_r.",
            "VernacExtend",
            "d281af2efbc3e529ecb1b881369ae91d1aee6482"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_le_trans with (1 := H2 _ Hn) ; right ; field ; by apply Rgt_not_eq.",
            "VernacExtend",
            "6f750e94b82915410cb3aaf7a5e22d83c1a0ec6b"
        ],
        [
            "apply Rdiv_lt_0_compat ; [ by case eps | by [] ].",
            "VernacExtend",
            "27707bf39d25840f138d31c75a1820db21a064b1"
        ],
        [
            "case: Rle_dec (Rlt_le _ _ Ha) => // H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => {H} // _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => M N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu (M / a) N) => {Hu} n [Hn Hu].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists n ; split.",
            "VernacExtend",
            "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (Rmult_comm _ (u n)) ; apply Rlt_div_l.",
            "VernacExtend",
            "ad4548a5215923665bf1a4e0a493dbd7f6be2e81"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Rle_dec (Rlt_le _ _ Ha) => // H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => {H} // _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu (M / a)) => {Hu} N Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (Rmult_comm _ (u n)) ; apply Rlt_div_r.",
            "VernacExtend",
            "d281af2efbc3e529ecb1b881369ae91d1aee6482"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimInf_seq_scal_pos (a : R) (u : nat -> R) (l : Rbar) : (0 < a) -> is_LimInf_seq u l -> is_LimInf_seq (fun n => a * u n) (Rbar_mult a l).",
            "VernacStartTheoremProof",
            "d157c486eb96ad0ebd1c79d01ef75e7656e54756"
        ],
        [
            "move => Ha Hu.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_LimSup_opp_LimInf_seq in Hu.",
            "VernacExtend",
            "5aa0e0d3a0d9d0e65bad03ef72ee3a01a9ee2f4e"
        ],
        [
            "apply is_LimSup_opp_LimInf_seq.",
            "VernacExtend",
            "36b8005036b7d04e07f430e32fd1558b95d65518"
        ],
        [
            "replace (Rbar_opp (Rbar_mult a l)) with (Rbar_mult a (Rbar_opp l)).",
            "VernacExtend",
            "37ad93c153427e2c056caa83f5c9a000ffe58294"
        ],
        [
            "apply is_LimSup_seq_ext with (fun n => a * - u n).",
            "VernacExtend",
            "44e70e1015a08916f95b18df532e7074349a7315"
        ],
        [
            "move => n ; ring.",
            "VernacExtend",
            "550d555a37db07b848ee1c0dcb59e4bba252650f"
        ],
        [
            "by apply is_LimSup_seq_scal_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (l) => [x | | ] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply f_equal ; ring.",
            "VernacExtend",
            "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
        ],
        [
            "case: Rle_dec (Rlt_le _ _ Ha) => // H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => // H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec (Rlt_le _ _ Ha) => // H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => // H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimSup_seq_ind_1 (u : nat -> R) (l : Rbar) : is_LimSup_seq u l <-> is_LimSup_seq (fun n => u (S n)) l.",
            "VernacStartTheoremProof",
            "ecc17eedb19777d9d94cb7329087fdc0450b5c2f"
        ],
        [
            "case: l => [l | | ] ; split => //= Hu.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu eps) => {Hu} H1 H2 ; split.",
            "VernacExtend",
            "88c25af51ded328891892c53c941b62f68d72bd0"
        ],
        [
            "move => N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (H1 (S N)) => {H1} n [Hn H1].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (pred n).",
            "VernacExtend",
            "011835cd0e0e9459c0eaf5e10f15b9cc97e24fc5"
        ],
        [
            "case: (n) Hn H1 => /= [ | m] Hm H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply le_Sn_O in Hm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply le_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: H2 => N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply H2 ; intuition.",
            "VernacExtend",
            "62ccf470386d42ddfc8ada6b4a85def485590063"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu eps) => {Hu} H1 H2 ; split.",
            "VernacExtend",
            "88c25af51ded328891892c53c941b62f68d72bd0"
        ],
        [
            "move => N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (H1 N) => {H1} n [Hn H1].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (S n) ; intuition.",
            "VernacExtend",
            "152f16de4af2c210bb4c791d6bcf7a2cc7268bf4"
        ],
        [
            "case: H2 => N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (S N) => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (n) Hn => /= [ | m] Hm.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply le_Sn_O in Hm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply H2 ; intuition.",
            "VernacExtend",
            "62ccf470386d42ddfc8ada6b4a85def485590063"
        ],
        [
            "move => M N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu M (S N)) => {Hu} n [Hn Hu].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (pred n).",
            "VernacExtend",
            "011835cd0e0e9459c0eaf5e10f15b9cc97e24fc5"
        ],
        [
            "case: (n) Hn Hu => /= [ | m] Hm Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply le_Sn_O in Hm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply le_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu M N) => {Hu} n [Hn Hu].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (S n) ; intuition.",
            "VernacExtend",
            "152f16de4af2c210bb4c791d6bcf7a2cc7268bf4"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu M) => {Hu} N Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Hu ; intuition.",
            "VernacExtend",
            "bbce64f41960ad719382bd0ee077f2ad2a48bc46"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu M) => {Hu} N Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (S N) => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (n) Hn => /= [ | m] Hm.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply le_Sn_O in Hm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hu ; intuition.",
            "VernacExtend",
            "bbce64f41960ad719382bd0ee077f2ad2a48bc46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimInf_seq_ind_1 (u : nat -> R) (l : Rbar) : is_LimInf_seq u l <-> is_LimInf_seq (fun n => u (S n)) l.",
            "VernacStartTheoremProof",
            "94a7d43f2c4c91445d7edde1dbe36d6bf7fea353"
        ],
        [
            "rewrite -?is_LimSup_opp_LimInf_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply is_LimSup_seq_ind_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimSup_seq_ind_k (u : nat -> R) (k : nat) (l : Rbar) : is_LimSup_seq u l <-> is_LimSup_seq (fun n => u (n + k)%nat) l.",
            "VernacStartTheoremProof",
            "af35ac1eab0b9f2cf167bffae4cb0348202d1865"
        ],
        [
            "elim: k u => [ | k IH] /= u.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "split ; apply is_LimSup_seq_ext => n ; by rewrite -plus_n_O.",
            "VernacExtend",
            "fc67683ba0e0581ebff940ac5e88f19cb87bb912"
        ],
        [
            "rewrite is_LimSup_seq_ind_1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (IH (fun n => u (S n))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split ; apply is_LimSup_seq_ext => n ; by rewrite plus_n_Sm.",
            "VernacExtend",
            "fc67683ba0e0581ebff940ac5e88f19cb87bb912"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimInf_seq_ind_k (u : nat -> R) (k : nat) (l : Rbar) : is_LimInf_seq u l <-> is_LimInf_seq (fun n => u (n + k)%nat) l.",
            "VernacStartTheoremProof",
            "49f18994459f7773ccfa38a9eff7c771365ad970"
        ],
        [
            "rewrite -?is_LimSup_opp_LimInf_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply (is_LimSup_seq_ind_k (fun n => - u n)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_lim_seq (u : nat -> R) (l : Rbar) := filterlim u eventually (Rbar_locally l).",
            "VernacDefinition",
            "4b876cd42f4f3e9b14c5c27d419b66c52b283923"
        ],
        [
            "Definition is_lim_seq' (u : nat -> R) (l : Rbar) := match l with | Finite l => forall eps : posreal, eventually (fun n => Rabs (u n - l) < eps) | p_infty => forall M : R, eventually (fun n => M < u n) | m_infty => forall M : R, eventually (fun n => u n < M) end.",
            "VernacDefinition",
            "56b51a622c40df01dc5679833bc708d95d64baaa"
        ],
        [
            "Definition ex_lim_seq (u : nat -> R) := exists l, is_lim_seq u l.",
            "VernacDefinition",
            "0d0f0d44cf563dbbf49c0990f4dfa676f7050cd7"
        ],
        [
            "Definition ex_finite_lim_seq (u : nat -> R) := exists l : R, is_lim_seq u l.",
            "VernacDefinition",
            "5add0512d932b6261e6a70f59d3c9dc160b87244"
        ],
        [
            "Definition Lim_seq (u : nat -> R) : Rbar := Rbar_div_pos (Rbar_plus (LimSup_seq u) (LimInf_seq u)) {| pos := 2; cond_pos := Rlt_R0_R2 |}.",
            "VernacDefinition",
            "f2d1a1d447e4447f5473479be8e76e3ecc6b6e38"
        ],
        [
            "Lemma is_lim_seq_spec : forall u l, is_lim_seq' u l <-> is_lim_seq u l.",
            "VernacStartTheoremProof",
            "e57c3458c0c29650fb6b3ada89c092d32a3b55a3"
        ],
        [
            "destruct l as [l| |] ; split.",
            "VernacExtend",
            "229a2f1d639d91740395bce4727cdf4cd178db1d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H P [eps LP].",
            "VernacExtend",
            "17632fc297e5ea1852f56e45f60d632d6c052b0d"
        ],
        [
            "destruct (H eps) as [N HN].",
            "VernacExtend",
            "279205d556382ae0acca164dbecebaddead6dfcc"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply LP.",
            "VernacExtend",
            "099c424a8903c296b67973586f11183c07d7f16d"
        ],
        [
            "now apply HN.",
            "VernacExtend",
            "f3b874ae79802fd5ccaeb88ecf71849fe3b1a368"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros LP eps.",
            "VernacExtend",
            "ce45e74969239e0a1aed95c1a1134f1f259f2e77"
        ],
        [
            "specialize (LP (fun y => Rabs (y - l) < eps)).",
            "VernacExtend",
            "2816c95423653e0798f3cb0817db736ba30a039c"
        ],
        [
            "apply LP.",
            "VernacExtend",
            "099c424a8903c296b67973586f11183c07d7f16d"
        ],
        [
            "now exists eps.",
            "VernacExtend",
            "231859d3bd429d5cb9a46c5a8150f7440e5ea441"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H P [M LP].",
            "VernacExtend",
            "86538739fbff626e1019f8ae61bcd24b26a35c0a"
        ],
        [
            "destruct (H M) as [N HN].",
            "VernacExtend",
            "8044b3be97301c5191eb90f48fddc7bba6975282"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply LP.",
            "VernacExtend",
            "099c424a8903c296b67973586f11183c07d7f16d"
        ],
        [
            "now apply HN.",
            "VernacExtend",
            "f3b874ae79802fd5ccaeb88ecf71849fe3b1a368"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros LP M.",
            "VernacExtend",
            "a6d00c9b47e27b3f819cc49cf5b2e6c8d0246d3b"
        ],
        [
            "specialize (LP (fun y => M < y)).",
            "VernacExtend",
            "9e5bb09c8c1eab7402fbf6eec1e3c541e9bfb8a3"
        ],
        [
            "apply LP.",
            "VernacExtend",
            "099c424a8903c296b67973586f11183c07d7f16d"
        ],
        [
            "now exists M.",
            "VernacExtend",
            "d209ee394e51e963b50da18371a61ccbd1897fc7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H P [M LP].",
            "VernacExtend",
            "86538739fbff626e1019f8ae61bcd24b26a35c0a"
        ],
        [
            "destruct (H M) as [N HN].",
            "VernacExtend",
            "8044b3be97301c5191eb90f48fddc7bba6975282"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply LP.",
            "VernacExtend",
            "099c424a8903c296b67973586f11183c07d7f16d"
        ],
        [
            "now apply HN.",
            "VernacExtend",
            "f3b874ae79802fd5ccaeb88ecf71849fe3b1a368"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros LP M.",
            "VernacExtend",
            "a6d00c9b47e27b3f819cc49cf5b2e6c8d0246d3b"
        ],
        [
            "specialize (LP (fun y => y < M)).",
            "VernacExtend",
            "3e48631aaf67205d867b689525e781eeab41d56c"
        ],
        [
            "apply LP.",
            "VernacExtend",
            "099c424a8903c296b67973586f11183c07d7f16d"
        ],
        [
            "now exists M.",
            "VernacExtend",
            "d209ee394e51e963b50da18371a61ccbd1897fc7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_Reals (u : nat -> R) (l : R) : is_lim_seq u l <-> Un_cv u l.",
            "VernacStartTheoremProof",
            "229494421963918548a8fd57ddf4ca32e89d6889"
        ],
        [
            "split => Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => e He.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply (Hl (fun y => R_dist y l < e)).",
            "VernacExtend",
            "2831abaaceaadab9dc588238df0024a577d09c5d"
        ],
        [
            "now exists (mkposreal _ He).",
            "VernacExtend",
            "9e322202d399b0fa272b8341c3ae71acb3862bc8"
        ],
        [
            "unfold is_lim_seq.",
            "VernacExtend",
            "941b862a848792e0a22e9ca9550cec69086d5d5f"
        ],
        [
            "change (Rbar_locally l) with (locally l).",
            "VernacExtend",
            "ef8a1cc7fa2329f0efb1d7712acdd96343fc1d9f"
        ],
        [
            "apply (filterlim_locally u l).",
            "VernacExtend",
            "88529b3181d1b88a15ee718b1af923721dc23bd7"
        ],
        [
            "case => e He.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Hl e He) => {Hl} /= N Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply (Hl n Hn).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_p_infty_Reals (u : nat -> R) : is_lim_seq u p_infty <-> cv_infty u.",
            "VernacStartTheoremProof",
            "27c4c052cb32f220ae46a0d99e33f2bf0857efe5"
        ],
        [
            "split => Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl (fun x => M < x)) => {Hl} [ | N Hl].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists M.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists N.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => P [M HP].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eapply filter_imp.",
            "VernacExtend",
            "bf3d126874cf320edb00f681aadb1db062bce3fd"
        ],
        [
            "by apply HP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Hl M) => {Hl} N HN.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists N.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_LimSup_seq (u : nat -> R) (l : Rbar) : is_lim_seq u l -> is_LimSup_seq u l.",
            "VernacStartTheoremProof",
            "4ef0ee2173d511c98b6ab5ced77d352b7376e64f"
        ],
        [
            "move /is_lim_seq_spec.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: l => [l | | ] /= Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => eps ; case: (Hu eps) => {Hu} N Hu ; split.",
            "VernacExtend",
            "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
        ],
        [
            "move => N0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (N + N0)%nat ; split.",
            "VernacExtend",
            "83503f1d102e258d44b5f14e278991b0e751d7fc"
        ],
        [
            "by apply le_plus_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rabs_lt_between', Hu, le_plus_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rabs_lt_between', Hu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M N0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu M) => {Hu} N Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (N + N0)%nat ; split.",
            "VernacExtend",
            "83503f1d102e258d44b5f14e278991b0e751d7fc"
        ],
        [
            "by apply le_plus_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hu, le_plus_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_LimInf_seq (u : nat -> R) (l : Rbar) : is_lim_seq u l -> is_LimInf_seq u l.",
            "VernacStartTheoremProof",
            "cd01136181b6424ebd688ab689ef44e65791d90f"
        ],
        [
            "move /is_lim_seq_spec.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: l => [l | | ] /= Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => eps ; case: (Hu eps) => {Hu} N Hu ; split.",
            "VernacExtend",
            "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
        ],
        [
            "move => N0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (N + N0)%nat ; split.",
            "VernacExtend",
            "83503f1d102e258d44b5f14e278991b0e751d7fc"
        ],
        [
            "by apply le_plus_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rabs_lt_between', Hu, le_plus_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rabs_lt_between', Hu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M N0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu M) => {Hu} N Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (N + N0)%nat ; split.",
            "VernacExtend",
            "83503f1d102e258d44b5f14e278991b0e751d7fc"
        ],
        [
            "by apply le_plus_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hu, le_plus_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_LimSup_LimInf_lim_seq (u : nat -> R) (l : Rbar) : is_LimSup_seq u l -> is_LimInf_seq u l -> is_lim_seq u l.",
            "VernacStartTheoremProof",
            "be101b57dc4776a7d39aafddbecdb679d06afb8f"
        ],
        [
            "case: l => [l | | ] /= Hs Hi ; apply is_lim_seq_spec.",
            "VernacExtend",
            "ee842484096a21834ae56a6225a23156227e95fc"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (proj2 (Hs eps)) => {Hs} Ns Hs.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (proj2 (Hi eps)) => {Hi} Ni Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (Ns + Ni)%nat => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rabs_lt_between' ; split.",
            "VernacExtend",
            "219fa8a18e1bec41b3e80f61c4b73c04c06468a8"
        ],
        [
            "apply Hi ; intuition.",
            "VernacExtend",
            "dd6aec883f5746f680f54979b849eabfd4a12eda"
        ],
        [
            "apply Hs ; intuition.",
            "VernacExtend",
            "c5842fe2ade1f5a7943665831f2bb13e97cde0d4"
        ],
        [
            "exact Hi.",
            "VernacExtend",
            "135dd8008fc4004ce03777b44171728c65be10be"
        ],
        [
            "exact Hs.",
            "VernacExtend",
            "3ca81b7bb0123d2a04d1102c823a36576b09de82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_LimSup_LimInf_seq (u : nat -> R) : ex_lim_seq u <-> LimSup_seq u = LimInf_seq u.",
            "VernacStartTheoremProof",
            "f13a7a0ad23852659443f7927062278194810508"
        ],
        [
            "split => Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: Hl => l Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "transitivity l.",
            "VernacExtend",
            "74b269d0361492166a0cde770adca133c971e4a0"
        ],
        [
            "apply is_LimSup_seq_unique.",
            "VernacExtend",
            "8a0b5a14c04ad85d3d7f8482e3bd9d1994ad0ebd"
        ],
        [
            "by apply is_lim_LimSup_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply sym_eq, is_LimInf_seq_unique.",
            "VernacExtend",
            "fe1356f84c347fa9930c5a7e8802ad2f423229a9"
        ],
        [
            "by apply is_lim_LimInf_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (LimSup_seq u).",
            "VernacExtend",
            "0df8e9beb597d8ae8b6c946fe3e9dab0c4b9ee69"
        ],
        [
            "apply is_LimSup_LimInf_lim_seq.",
            "VernacExtend",
            "553f06667beacf4acbee1b530530396e6e862c5b"
        ],
        [
            "rewrite /LimSup_seq ; by case: ex_LimSup_seq.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite Hl /LimInf_seq ; by case: ex_LimInf_seq.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_ext_loc (u v : nat -> R) (l : Rbar) : eventually (fun n => u n = v n) -> is_lim_seq u l -> is_lim_seq v l.",
            "VernacStartTheoremProof",
            "a9543a1342ced3d0d30ca8a716729749a137d186"
        ],
        [
            "apply filterlim_ext_loc.",
            "VernacExtend",
            "b1bfeab64804f9bca017cf3228230f12ef2c8f11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_ext_loc (u v : nat -> R) : eventually (fun n => u n = v n) -> ex_lim_seq u -> ex_lim_seq v.",
            "VernacStartTheoremProof",
            "f2381b751d714d94a826e84ab53d0eacf06e6281"
        ],
        [
            "move => H [l H0].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists l ; by apply is_lim_seq_ext_loc with u.",
            "VernacExtend",
            "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_ext_loc (u v : nat -> R) : eventually (fun n => u n = v n) -> Lim_seq u = Lim_seq v.",
            "VernacStartTheoremProof",
            "01c140e185828fd19211fb02fbb466057b47cdc2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite /Lim_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (f_equal (fun x => Rbar_div_pos x _)).",
            "VernacExtend",
            "cfdadb44e2b51771099f7fe538f206f76b87b05a"
        ],
        [
            "apply f_equal2 ; apply sym_eq.",
            "VernacExtend",
            "5a4413f6cb670fc27b6d28763d881196a93216b9"
        ],
        [
            "apply is_LimSup_seq_unique.",
            "VernacExtend",
            "8a0b5a14c04ad85d3d7f8482e3bd9d1994ad0ebd"
        ],
        [
            "apply is_LimSup_seq_ext_loc with u.",
            "VernacExtend",
            "e18d25f79c1bbc7b1f6fe6bb973e709f560d202b"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /LimSup_seq ; by case: ex_LimSup_seq.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply is_LimInf_seq_unique.",
            "VernacExtend",
            "63a6220bb36d8c1a0804454f94f9075975d127b8"
        ],
        [
            "apply is_LimInf_seq_ext_loc with u.",
            "VernacExtend",
            "75161649b828dd3e7924f84c4b68da08c4bc673a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /LimInf_seq ; by case: ex_LimInf_seq.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_ext (u v : nat -> R) (l : Rbar) : (forall n, u n = v n) -> is_lim_seq u l -> is_lim_seq v l.",
            "VernacStartTheoremProof",
            "bd21de51f3f2ff9fc441f1c72fd82ca082099205"
        ],
        [
            "move => Hext.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_seq_ext_loc.",
            "VernacExtend",
            "84e147b1ab2e69f0f71e7d926ece156217c03653"
        ],
        [
            "by exists O.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_ext (u v : nat -> R) : (forall n, u n = v n) -> ex_lim_seq u -> ex_lim_seq v.",
            "VernacStartTheoremProof",
            "9fbc685b7e2c7724a24f213d3900e05ffba49c6d"
        ],
        [
            "move => H [l H0].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists l ; by apply is_lim_seq_ext with u.",
            "VernacExtend",
            "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_ext (u v : nat -> R) : (forall n, u n = v n) -> Lim_seq u = Lim_seq v.",
            "VernacStartTheoremProof",
            "d877d28e8dd0b267bc645669c61fd74417ffd0c3"
        ],
        [
            "move => Hext.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Lim_seq_ext_loc.",
            "VernacExtend",
            "08e7386a15ead02f2e0ccc11bb83c0615aaf6aaa"
        ],
        [
            "by exists O.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_unique (u : nat -> R) (l : Rbar) : is_lim_seq u l -> Lim_seq u = l.",
            "VernacStartTheoremProof",
            "b6137e9ec5394a24424a194b95d4d048e27e0982"
        ],
        [
            "move => Hu.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /Lim_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace l with (Rbar_div_pos (Rbar_plus l l) {| pos := 2; cond_pos := Rlt_R0_R2 |}) by (case: (l) => [x | | ] //= ; apply f_equal ; field).",
            "VernacExtend",
            "884ca56ae443f7b12338e51a96ba71674be359f0"
        ],
        [
            "apply (f_equal (fun x => Rbar_div_pos x _)).",
            "VernacExtend",
            "cfdadb44e2b51771099f7fe538f206f76b87b05a"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "apply is_LimSup_seq_unique.",
            "VernacExtend",
            "8a0b5a14c04ad85d3d7f8482e3bd9d1994ad0ebd"
        ],
        [
            "by apply is_lim_LimSup_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_LimInf_seq_unique.",
            "VernacExtend",
            "63a6220bb36d8c1a0804454f94f9075975d127b8"
        ],
        [
            "by apply is_lim_LimInf_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_correct (u : nat -> R) : ex_lim_seq u -> is_lim_seq u (Lim_seq u).",
            "VernacStartTheoremProof",
            "ce6a23f1cdc0fd849d13631402ac871d818a3ec8"
        ],
        [
            "intros (l,H).",
            "VernacExtend",
            "3fda3140394abbcf85ec93d7935c462cf104be2c"
        ],
        [
            "cut (Lim_seq u = l).",
            "VernacExtend",
            "a60cc428b158f7b2cc322cc7cb52d432a38ebd70"
        ],
        [
            "intros ; rewrite H0 ; apply H.",
            "VernacExtend",
            "c427248083a030663c551b953879e257985ecf38"
        ],
        [
            "apply is_lim_seq_unique, H.",
            "VernacExtend",
            "82e77c80d1c7be0e0445893dee2e0b529080ca2a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_correct' (u : nat -> R) : ex_finite_lim_seq u -> is_lim_seq u (real (Lim_seq u)).",
            "VernacStartTheoremProof",
            "06a0a24ff76452ec437286053485791fa4b7b5d1"
        ],
        [
            "intros (l,H).",
            "VernacExtend",
            "3fda3140394abbcf85ec93d7935c462cf104be2c"
        ],
        [
            "cut (real (Lim_seq u) = l).",
            "VernacExtend",
            "5149774c800397139226308dcc4d09e3bf685253"
        ],
        [
            "intros ; rewrite H0 ; apply H.",
            "VernacExtend",
            "c427248083a030663c551b953879e257985ecf38"
        ],
        [
            "replace l with (real l) by auto.",
            "VernacExtend",
            "86f98225f6d2e8f866ff6076f31a2c91ae379e9a"
        ],
        [
            "apply f_equal, is_lim_seq_unique, H.",
            "VernacExtend",
            "cc03821b799024699837f53ffcfbc84f07887df2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_finite_lim_seq_correct (u : nat -> R) : ex_finite_lim_seq u <-> ex_lim_seq u /\\ is_finite (Lim_seq u).",
            "VernacStartTheoremProof",
            "aff298bbf048e147b52d59fb65cb3195668d491e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "case => l Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by exists l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite (is_lim_seq_unique _ _ Hl).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case ; case => l Hl H.",
            "VernacExtend",
            "f5c637551d7ace847ffea0c2c9ae9f848858e99e"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "rewrite -(is_lim_seq_unique _ _ Hl).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite H (is_lim_seq_unique _ _ Hl).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_dec (u : nat -> R) : {ex_lim_seq u} + {~ex_lim_seq u}.",
            "VernacStartTheoremProof",
            "5fc62dfff79ed99d845399663248a137b5d9a6a1"
        ],
        [
            "case: (Rbar_eq_dec (LimSup_seq u) (LimInf_seq u)) => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "left ; by apply ex_lim_LimSup_LimInf_seq.",
            "VernacExtend",
            "8d1d3855bd3af5f36952354b4669569e4c0e7e37"
        ],
        [
            "right ; contradict H ; by apply ex_lim_LimSup_LimInf_seq.",
            "VernacExtend",
            "91cc0d33f4fd7b1dfcd4dfde17a46572ca4012c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_finite_lim_seq_dec (u : nat -> R) : {ex_finite_lim_seq u} + {~ ex_finite_lim_seq u}.",
            "VernacStartTheoremProof",
            "c002894bd2b69604d5333d41d5e06c19556948be"
        ],
        [
            "case: (ex_lim_seq_dec u) => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Lim_seq_correct in H.",
            "VernacExtend",
            "922d480e665803c534a201f4f7ce2163ea41d20e"
        ],
        [
            "case: (Lim_seq u) H => [l | | ] H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "left ; by exists l.",
            "VernacExtend",
            "8d1d3855bd3af5f36952354b4669569e4c0e7e37"
        ],
        [
            "right ; rewrite ex_finite_lim_seq_correct.",
            "VernacExtend",
            "659a076b1460ddc341bf9f74b080a8f7b40014b2"
        ],
        [
            "rewrite (is_lim_seq_unique _ _ H) /is_finite //= ; by case.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "right ; rewrite ex_finite_lim_seq_correct.",
            "VernacExtend",
            "659a076b1460ddc341bf9f74b080a8f7b40014b2"
        ],
        [
            "rewrite (is_lim_seq_unique _ _ H) /is_finite //= ; by case.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "right ; rewrite ex_finite_lim_seq_correct.",
            "VernacExtend",
            "659a076b1460ddc341bf9f74b080a8f7b40014b2"
        ],
        [
            "contradict H ; by apply H.",
            "VernacExtend",
            "3c26dcba9e578f112cb42e360e20b3fb78a8b9cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ex_lim_seq_cauchy (u : nat -> R) := forall eps : posreal, exists N : nat, forall n m, (N <= n)%nat -> (N <= m)%nat -> Rabs (u n - u m) < eps.",
            "VernacDefinition",
            "f7256e445ecca27309f68683343ed427c4911848"
        ],
        [
            "Lemma ex_lim_seq_cauchy_corr (u : nat -> R) : (ex_finite_lim_seq u) <-> ex_lim_seq_cauchy u.",
            "VernacStartTheoremProof",
            "a9dec0f6f3c5020b3689f9d2d25cd0a54fb24810"
        ],
        [
            "split => Hcv.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Lim_seq_correct' in Hcv.",
            "VernacExtend",
            "9899c2dd2cd37430e5a18b6713740def4ca1adee"
        ],
        [
            "apply is_lim_seq_spec in Hcv.",
            "VernacExtend",
            "7fb31b55e42af94a4ff1919281f51bc816870e91"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hcv (pos_div_2 eps)) => /= {Hcv} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n m Hn Hm.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (u n - u m) with ((u n - (real (Lim_seq u))) - (u m - (real (Lim_seq u)))) by ring.",
            "VernacExtend",
            "8aed87890614cc8fe4ba05f82d6d49905b30e0d4"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "rewrite Rabs_Ropp (double_var eps).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat ; by apply H.",
            "VernacExtend",
            "b3fdf994ea9deeef54321a210af276ae83c6c412"
        ],
        [
            "exists (LimSup_seq u).",
            "VernacExtend",
            "0df8e9beb597d8ae8b6c946fe3e9dab0c4b9ee69"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "rewrite /LimSup_seq ; case: ex_LimSup_seq => /= l Hl.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case: (Hcv (pos_div_2 eps)) => {Hcv} /= Ncv Hcv.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: l Hl => [l | | ] /= Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Hl (pos_div_2 eps)) => {Hl} /= H1 [Nl H2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (Ncv + Nl)%nat => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rabs_lt_between' ; split.",
            "VernacExtend",
            "219fa8a18e1bec41b3e80f61c4b73c04c06468a8"
        ],
        [
            "case: (H1 Ncv) => {H1} m [Hm H1].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "replace (l - eps) with ((l - eps / 2) - eps / 2) by field.",
            "VernacExtend",
            "57a72d8267cf71b2bbd43680899390871b7fad16"
        ],
        [
            "apply Rlt_trans with (u m - eps / 2).",
            "VernacExtend",
            "5ed03f7deb9bbe7e17a59464f516d8162c17827b"
        ],
        [
            "by apply Rplus_lt_compat_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "apply Hcv ; intuition.",
            "VernacExtend",
            "db8d517e4d2ce3e19852d7a06b71cf490091134a"
        ],
        [
            "apply Rlt_trans with (l + eps / 2).",
            "VernacExtend",
            "8934a698ba428c786a044db7613302869fb472bb"
        ],
        [
            "apply H2 ; intuition.",
            "VernacExtend",
            "62ccf470386d42ddfc8ada6b4a85def485590063"
        ],
        [
            "apply Rminus_lt_0 ; field_simplify ; rewrite ?Rdiv_1.",
            "VernacExtend",
            "5e1bb58e1096013357ba0c7fcd2c17a152059b8c"
        ],
        [
            "by apply is_pos_div_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (fun n Hn => proj2 (proj1 (Rabs_lt_between' _ _ _) (Hcv n Ncv Hn (le_refl _)))) => {Hcv} Hcv.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl (u Ncv + eps / 2) Ncv) => {Hl} n [Hn Hl].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict Hl ; apply Rle_not_lt, Rlt_le.",
            "VernacExtend",
            "96c3a5664f3d71f23d86e648763b41298ae81011"
        ],
        [
            "by apply Hcv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (fun n Hn => proj1 (proj1 (Rabs_lt_between' _ _ _) (Hcv n Ncv Hn (le_refl _)))) => {Hcv} Hcv.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl (u Ncv - eps / 2)) => {Hl} N Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Hcv _ (le_plus_l Ncv N)) => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "contradict H ; apply Rle_not_lt, Rlt_le, Hl, le_plus_r.",
            "VernacExtend",
            "0050609958c611b59cbe216a239d8517c7527509"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_INR : is_lim_seq INR p_infty.",
            "VernacStartTheoremProof",
            "8d6645c6f9ef1ae28febde85894848c9bc42296b"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suff Hm : 0 <= Rmax 0 M.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "exists (S (nfloor (Rmax 0 M) Hm)) => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rlt_le_trans with (2 := le_INR _ _ Hn).",
            "VernacExtend",
            "406b2a616c11fef20c9bcb748743e8024153d154"
        ],
        [
            "rewrite /nfloor S_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: nfloor_ex => {n Hn} /= n Hn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_lt_trans with (1 := Rmax_r 0 M).",
            "VernacExtend",
            "f81e987896aa096393be688678a254d560083333"
        ],
        [
            "by apply Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rmax_l.",
            "VernacExtend",
            "e8bdf305d751b877364ec9794b15c2d6e134dc98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_INR : ex_lim_seq INR.",
            "VernacStartTheoremProof",
            "1a81f6bf329d7785d4f9052680675829f7a7e0cc"
        ],
        [
            "exists p_infty ; by apply is_lim_seq_INR.",
            "VernacExtend",
            "1bed9b0fe38de2029a82e9b610831cdebb89793a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_INR : Lim_seq INR = p_infty.",
            "VernacStartTheoremProof",
            "e026ebf687ca92603d897cc3135b594257282518"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "apply is_lim_seq_INR.",
            "VernacExtend",
            "a24edd871cee6630005256236f6299caaa48c5b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_const (a : R) : is_lim_seq (fun n => a) a.",
            "VernacStartTheoremProof",
            "174dceb214c7ba42aaf96f248883e49f85123310"
        ],
        [
            "apply filterlim_const.",
            "VernacExtend",
            "ff971edf84d1cf6e134869f4729acc40969816e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_const (a : R) : ex_lim_seq (fun n => a).",
            "VernacStartTheoremProof",
            "4ea3444b1010b8772da3b039e04806c56a38853f"
        ],
        [
            "exists a ; by apply is_lim_seq_const.",
            "VernacExtend",
            "01e663788a4fe7b8355e383e740e14ec31935825"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_const (a : R) : Lim_seq (fun n => a) = a.",
            "VernacStartTheoremProof",
            "ab1185e574e78f4122816b83081eeac512bb6793"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "apply is_lim_seq_const.",
            "VernacExtend",
            "841054990caf6b74d9f691433bc35ebf9401e15a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_subseq_loc : forall phi, eventually (fun n => (phi n < phi (S n))%nat) -> filterlim phi eventually eventually.",
            "VernacStartTheoremProof",
            "8e7147ab1d2b77c25b2204933314d8b573c6601e"
        ],
        [
            "intros phi [M Hphi] P [N HP].",
            "VernacExtend",
            "ccc59519aafa01b8497935ca61d18511323ad852"
        ],
        [
            "exists (N+M)%nat.",
            "VernacExtend",
            "23a7a0e52b971fd2d31963e44dfe8e4b3ce633c3"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "apply plus_le_reg_l with M.",
            "VernacExtend",
            "309650ec65211adecf784cb1b02686690906556d"
        ],
        [
            "rewrite Arith.Plus.plus_comm ; apply le_trans with (1:=Hn).",
            "VernacExtend",
            "86bc545a56d8b9eaad912e3f0fdc8036aae723ba"
        ],
        [
            "apply le_trans with (1:=le_plus_r (phi M) _).",
            "VernacExtend",
            "1dd6a41e7f758d035a459ec9ba13198a3299a5cd"
        ],
        [
            "assert (H:(forall x, M+phi M + x <= M+phi (x+M))%nat).",
            "VernacExtend",
            "359fb418050ba0467a6ed996deb7c6009c718b8f"
        ],
        [
            "induction x as [|x IH].",
            "VernacExtend",
            "62fff01c2acc9e04bd712cc9b542bc882c5f698a"
        ],
        [
            "rewrite plus_0_l plus_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply le_refl.",
            "VernacExtend",
            "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
        ],
        [
            "rewrite <- plus_n_Sm.",
            "VernacExtend",
            "10308ef961b07f08e71cba91e06650cc774994fe"
        ],
        [
            "apply lt_le_S.",
            "VernacExtend",
            "a6fff832d4d879e177c7685ce128cfde6522d8f6"
        ],
        [
            "apply le_lt_trans with (1:=IH).",
            "VernacExtend",
            "450a66ecd452bc3f574b47094ed3a3e9fd9e9bc2"
        ],
        [
            "apply plus_lt_compat_l.",
            "VernacExtend",
            "e6081f5e9aaa580599a0fc8519575c090df5395d"
        ],
        [
            "apply Hphi.",
            "VernacExtend",
            "06ab14d181837af271fcdc9b86447e9d874d7696"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "assert (M <= n)%nat.",
            "VernacExtend",
            "7228ffeb0602c35af72ca7c8317443a0b91c5c29"
        ],
        [
            "apply le_trans with (2:=Hn); apply le_plus_r.",
            "VernacExtend",
            "a3821f6ba119c82c0ba01df8ccafa72ec78c9665"
        ],
        [
            "specialize (H (n-M)%nat).",
            "VernacExtend",
            "dba1f011f515dfff468625ee87bfc0e319f21b04"
        ],
        [
            "replace (n-M+M)%nat with n in H.",
            "VernacExtend",
            "61039d1a19c916b477225470ee60e99f6017fdac"
        ],
        [
            "apply le_trans with (2:=H).",
            "VernacExtend",
            "623bc552d9b6875aa45fa4684b6fd634c8202a59"
        ],
        [
            "rewrite (Arith.Plus.plus_comm _ (phi M)) -Arith.Plus.plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply plus_le_compat_l.",
            "VernacExtend",
            "0b54a9a94d1f4251de3f3aca0ea73ceff51e1f05"
        ],
        [
            "rewrite le_plus_minus_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply le_refl.",
            "VernacExtend",
            "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "rewrite Arith.Plus.plus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply sym_eq, le_plus_minus_r.",
            "VernacExtend",
            "5fcf35ef6ce2647671d156eea56361ec1fa95c71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_subseq : forall phi, (forall n, (phi n < phi (S n))%nat) -> filterlim phi eventually eventually.",
            "VernacStartTheoremProof",
            "386a9d4a1d3b1cfe349b0a3ac81c3fafddc61144"
        ],
        [
            "intros phi Hphi.",
            "VernacExtend",
            "4e13ba1fc4a5756a0d13ba8de39277ac5f806cb9"
        ],
        [
            "apply eventually_subseq_loc.",
            "VernacExtend",
            "9e2e8ed41c9487a2714456e225e5f45baee0ca1a"
        ],
        [
            "by apply filter_forall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_subseq (u : nat -> R) (l : Rbar) (phi : nat -> nat) : filterlim phi eventually eventually -> is_lim_seq u l -> is_lim_seq (fun n => u (phi n)) l.",
            "VernacStartTheoremProof",
            "2df13740d5c50cc9b326c7abc962a49e53146e68"
        ],
        [
            "intros Hphi.",
            "VernacExtend",
            "7e996b3ab315a7121fc542568c9c0bcd4de36d91"
        ],
        [
            "now apply filterlim_comp.",
            "VernacExtend",
            "55160f82a6441dca133b3485d9debeae8b5377ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_subseq (u : nat -> R) (phi : nat -> nat) : filterlim phi eventually eventually -> ex_lim_seq u -> ex_lim_seq (fun n => u (phi n)).",
            "VernacStartTheoremProof",
            "624d1010f039654d0eb3ba4473a044c08a868278"
        ],
        [
            "move => Hphi [l Hu].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "by apply is_lim_seq_subseq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_subseq (u : nat -> R) (phi : nat -> nat) : filterlim phi eventually eventually -> ex_lim_seq u -> Lim_seq (fun n => u (phi n)) = Lim_seq u.",
            "VernacStartTheoremProof",
            "ffe918a0cd946ae39c08c3068fe9f2ab6e36f9aa"
        ],
        [
            "move => Hphi Hu.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "apply is_lim_seq_subseq.",
            "VernacExtend",
            "8487bc4d979fb85c6539b0a6e1a96b8e3eec40f9"
        ],
        [
            "exact Hphi.",
            "VernacExtend",
            "306e7e9784b97e1e4385213675cdf8deb484de4f"
        ],
        [
            "by apply Lim_seq_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_incr_1 (u : nat -> R) (l : Rbar) : is_lim_seq u l <-> is_lim_seq (fun n => u (S n)) l.",
            "VernacStartTheoremProof",
            "69111b553323d349f7057b343bc1b5f495856cf9"
        ],
        [
            "split ; intros H P HP ; destruct (H P HP) as [N HN].",
            "VernacExtend",
            "628d363d77b081f9dfd43205183707ee28313c62"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists N.",
            "VernacExtend",
            "3a77aef7937b4644ae655ca246f76b7aa0d197df"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "apply HN.",
            "VernacExtend",
            "90fb629adaf024bbf40093c9f063576731105f38"
        ],
        [
            "now apply le_S.",
            "VernacExtend",
            "83e46c3d4ad488778b4895d310e46eba5fd4cd36"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (S N).",
            "VernacExtend",
            "e311edc001e909167c32da4a482b57888adfab8c"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "destruct n as [|n] ; try easy.",
            "VernacExtend",
            "eb1242dff01f6d9a625b2629146b065409231f74"
        ],
        [
            "apply HN.",
            "VernacExtend",
            "90fb629adaf024bbf40093c9f063576731105f38"
        ],
        [
            "now apply le_S_n.",
            "VernacExtend",
            "172d1d429f1fcfbbf2a7810e3e9265685ea093bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_incr_1 (u : nat -> R) : ex_lim_seq u <-> ex_lim_seq (fun n => u (S n)).",
            "VernacStartTheoremProof",
            "7b8a14e549626b0f635c22528ad5113e6c300024"
        ],
        [
            "split ; move => [l H] ; exists l.",
            "VernacExtend",
            "64d13b7fd5fe5db4eb832bfb30354026ca3a91b4"
        ],
        [
            "by apply -> is_lim_seq_incr_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_lim_seq_incr_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_incr_1 (u : nat -> R) : Lim_seq (fun n => u (S n)) = Lim_seq u.",
            "VernacStartTheoremProof",
            "67848691b477cadbda07fc6e320699e994fab898"
        ],
        [
            "rewrite /Lim_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (LimSup_seq (fun n : nat => u (S n))) with (LimSup_seq u).",
            "VernacExtend",
            "f2003982d5c816522446017bcf80d58886b93f07"
        ],
        [
            "replace (LimInf_seq (fun n : nat => u (S n))) with (LimInf_seq u).",
            "VernacExtend",
            "369f7e8e349a6634470a7bc37b55c4031450e5d4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /LimInf_seq ; case: ex_LimInf_seq => l1 H1 ; case: ex_LimInf_seq => l2 H2 /= ; case: l1 H1 => [l1 | | ] /= H1 ; case: l2 H2 => [l2 | | ] /= H2.",
            "VernacExtend",
            "76a3cf93da6c9c41e9993d0261b6d6b01fd1b19f"
        ],
        [
            "apply Rbar_finite_eq, Rle_antisym ; apply le_epsilon => e He ; set eps := mkposreal e He ; apply Rlt_le.",
            "VernacExtend",
            "e0eb00b460de4056742b5426ea33b36f6f83d64f"
        ],
        [
            "case: (proj2 (H1 (pos_div_2 eps))) => /= {H1} N H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (proj1 (H2 (pos_div_2 eps)) N) => /= {H2} n [Hn H2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rlt_trans with (u (S n) + e/2).",
            "VernacExtend",
            "b8b84886e2c915ad6204b35c0dbbee91b3e3073a"
        ],
        [
            "replace l1 with ((l1-e/2)+e/2) by ring.",
            "VernacExtend",
            "1ec40f0c16cff6e82ad49e3eaaba1d5130faa40e"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply le_trans with (1 := Hn).",
            "VernacExtend",
            "8ac30d3ff1e4a07f44d84ea98e599463c400de71"
        ],
        [
            "apply le_n_Sn.",
            "VernacExtend",
            "7889648199cacb866ef42ba6b4c4192f713b44f4"
        ],
        [
            "replace (l2+e) with ((l2+e/2)+e/2) by field.",
            "VernacExtend",
            "1b1f59e33f494c11688851317498d9db4cece020"
        ],
        [
            "by apply Rplus_lt_compat_r, H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (proj2 (H2 (pos_div_2 eps))) => /= {H2} N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (proj1 (H1 (pos_div_2 eps)) (S N)) => /= {H1} .",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case => [ | n] [Hn H1].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply le_Sn_0 in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_trans with (u (S n) + e/2).",
            "VernacExtend",
            "b8b84886e2c915ad6204b35c0dbbee91b3e3073a"
        ],
        [
            "replace l2 with ((l2-e/2)+e/2) by ring.",
            "VernacExtend",
            "ff9a1e2c87abebb7d1470e03ccbf028ec25810cf"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "by apply le_S_n, Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (l1+e) with ((l1+e/2)+e/2) by field.",
            "VernacExtend",
            "9ef4890b79d79921f4156fa17d4d4b09b04f7ed0"
        ],
        [
            "by apply Rplus_lt_compat_r, H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : False => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (H2 (l1+1)) => {H2} N /= H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (proj1 (H1 (mkposreal _ Rlt_0_1)) (S N)) ; case => /= {H1} [ | n] [Hn].",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by apply le_Sn_0 in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_not_lt, Rlt_le, H2.",
            "VernacExtend",
            "1d6382c1d8a3cd0d2ca3719c3351232e28901160"
        ],
        [
            "by apply le_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : False => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (proj2 (H1 (mkposreal _ Rlt_0_1))) => {H1} N /= H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: ((H2 (l1-1)) N) => /= {H2} n [Hn].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_not_lt, Rlt_le, H1.",
            "VernacExtend",
            "8b5f5d6d369c56c7ace28d864f2fafe5ffe5462b"
        ],
        [
            "by apply le_trans with (2 := le_n_Sn _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : False => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (H1 (l2+1)) => {H1} N /= H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (proj1 (H2 (mkposreal _ Rlt_0_1)) N) => /= {H2} n [Hn].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_not_lt, Rlt_le, H1.",
            "VernacExtend",
            "8b5f5d6d369c56c7ace28d864f2fafe5ffe5462b"
        ],
        [
            "by apply le_trans with (2 := le_n_Sn _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : False => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (H1 0) => {H1} N H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (H2 0 N)=> {H2} n [Hn].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_not_lt, Rlt_le, H1.",
            "VernacExtend",
            "8b5f5d6d369c56c7ace28d864f2fafe5ffe5462b"
        ],
        [
            "by apply le_trans with (2 := le_n_Sn _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : False => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (proj2 (H2 (mkposreal _ Rlt_0_1))) => /= {H2} N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (H1 (l2-1) (S N)) ; case => [ | n] [Hn].",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by apply le_Sn_0 in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_not_lt, Rlt_le, H2, le_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : False => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (H2 0) => {H2} N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (H1 0 (S N)) ; case => [ | n] [Hn].",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by apply le_Sn_0 in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_not_lt, Rlt_le, H2, le_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /LimSup_seq ; case: ex_LimSup_seq => l1 H1 ; case: ex_LimSup_seq => l2 H2 /= ; case: l1 H1 => [l1 | | ] /= H1 ; case: l2 H2 => [l2 | | ] /= H2.",
            "VernacExtend",
            "76a3cf93da6c9c41e9993d0261b6d6b01fd1b19f"
        ],
        [
            "apply Rbar_finite_eq, Rle_antisym ; apply le_epsilon => e He ; set eps := mkposreal e He ; apply Rlt_le.",
            "VernacExtend",
            "e0eb00b460de4056742b5426ea33b36f6f83d64f"
        ],
        [
            "case: (proj2 (H2 (pos_div_2 eps))) => /= {H2} N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: ((proj1 (H1 (pos_div_2 eps))) (S N)) ; case => /= {H1} [ | n] [Hn H1].",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by apply le_Sn_0 in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace l1 with ((l1-e/2)+e/2) by ring.",
            "VernacExtend",
            "1ec40f0c16cff6e82ad49e3eaaba1d5130faa40e"
        ],
        [
            "replace (l2+e) with ((l2+e/2)+e/2) by field.",
            "VernacExtend",
            "1b1f59e33f494c11688851317498d9db4cece020"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "apply Rlt_trans with (1 := H1).",
            "VernacExtend",
            "27640a9cc4abbd2477d95e30f37654f8e9ba3bb0"
        ],
        [
            "by apply H2, le_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (proj2 (H1 (pos_div_2 eps))) => /= {H1} N H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: ((proj1 (H2 (pos_div_2 eps))) N) => /= {H2} n [Hn H2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "replace l2 with ((l2-e/2)+e/2) by ring.",
            "VernacExtend",
            "ff9a1e2c87abebb7d1470e03ccbf028ec25810cf"
        ],
        [
            "replace (l1+e) with ((l1+e/2)+e/2) by field.",
            "VernacExtend",
            "9ef4890b79d79921f4156fa17d4d4b09b04f7ed0"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "apply Rlt_trans with (1 := H2).",
            "VernacExtend",
            "02ebc8dd91813ddcd044ea07abeb16ed402d7f8b"
        ],
        [
            "by apply H1, le_trans with (2 := le_n_Sn _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : False => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (proj2 (H1 (mkposreal _ Rlt_0_1))) => /= {H1} N H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (H2 (l1+1) N) => n [Hn].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rle_not_lt, Rlt_le, H1, le_trans with (2 := le_n_Sn _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : False => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (H2 (l1-1)) => {H2} N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (proj1 (H1 (mkposreal _ Rlt_0_1)) (S N)) ; case => [ | n] [Hn] /= .",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by apply le_Sn_0 in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_not_lt, Rlt_le, H2, le_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : False => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (proj2 (H2 (mkposreal _ Rlt_0_1))) => {H2} /= N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (H1 (l2+1) (S N)) ; case => [ | n] [Hn] /= .",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by apply le_Sn_0 in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_not_lt, Rlt_le, H2, le_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : False => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (H2 0) => {H2} N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (H1 0 (S N)) ; case => [ | n] [Hn] /= .",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by apply le_Sn_0 in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_not_lt, Rlt_le, H2, le_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : False => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (H1 (l2-1)) => {H1} N H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (proj1 (H2 (mkposreal _ Rlt_0_1)) N) => /= {H2} n [Hn].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rle_not_lt, Rlt_le, H1, le_trans with (2 := le_n_Sn _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : False => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (H1 0) => {H1} N H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (H2 0 N) => {H2} n [Hn].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rle_not_lt, Rlt_le, H1, le_trans with (2 := le_n_Sn _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_incr_n (u : nat -> R) (N : nat) (l : Rbar) : is_lim_seq u l <-> is_lim_seq (fun n => u (n + N)%nat) l.",
            "VernacStartTheoremProof",
            "cf867e8b6ba786ba80b4ca45bbcc734ff6b2d6d3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "elim: N u => [ | N IH] u Hu.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "move: Hu ; apply is_lim_seq_ext => n ; by rewrite plus_0_r.",
            "VernacExtend",
            "dd76215f84b5ec723bc22942b73281b86cf324ad"
        ],
        [
            "apply is_lim_seq_incr_1, IH in Hu.",
            "VernacExtend",
            "d17f167e62b51973a47f1520c0b80da80406a9af"
        ],
        [
            "move: Hu ; by apply is_lim_seq_ext => n ; by rewrite plus_n_Sm.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "elim: N u => [ | N IH] u Hu.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "move: Hu ; apply is_lim_seq_ext => n ; by rewrite plus_0_r.",
            "VernacExtend",
            "dd76215f84b5ec723bc22942b73281b86cf324ad"
        ],
        [
            "apply is_lim_seq_incr_1, IH.",
            "VernacExtend",
            "e8097c15f2beb50b218689fb9ebca18bf5f8375f"
        ],
        [
            "move: Hu ; by apply is_lim_seq_ext => n ; by rewrite plus_n_Sm.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_incr_n (u : nat -> R) (N : nat) : ex_lim_seq u <-> ex_lim_seq (fun n => u (n + N)%nat).",
            "VernacStartTheoremProof",
            "f2a03c88089e3c25f4a09f7c7d4e14b57fbf7bd7"
        ],
        [
            "split ; move => [l H] ; exists l.",
            "VernacExtend",
            "64d13b7fd5fe5db4eb832bfb30354026ca3a91b4"
        ],
        [
            "by apply -> is_lim_seq_incr_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_lim_seq_incr_n in H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_incr_n (u : nat -> R) (N : nat) : Lim_seq (fun n => u (n + N)%nat) = Lim_seq u.",
            "VernacStartTheoremProof",
            "391ff4affa45a82b310626a616626b4727142a29"
        ],
        [
            "elim: N u => [ | N IH] u.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "apply Lim_seq_ext => n ; by rewrite plus_0_r.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "rewrite -(Lim_seq_incr_1 u) -(IH (fun n => u (S n))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Lim_seq_ext => n ; by rewrite plus_n_Sm.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_le : forall {T F} {FF : ProperFilter' F} (f g : T -> R) (lf lg : Rbar), F (fun x => f x <= g x) -> filterlim f F (Rbar_locally lf) -> filterlim g F (Rbar_locally lg) -> Rbar_le lf lg.",
            "VernacStartTheoremProof",
            "f90873ac96890e51b26bc72543424a795078eb61"
        ],
        [
            "intros T F FF f g lf lg H Hf Hg.",
            "VernacExtend",
            "7f5d8dc52acce7170d612bce59e188eaf2eca97e"
        ],
        [
            "apply Rbar_not_lt_le.",
            "VernacExtend",
            "609b6610e848b9efc1928d197bd92cc66b06930b"
        ],
        [
            "intros Hl.",
            "VernacExtend",
            "5c4705396c649f586841a9235569b2230fedbd7f"
        ],
        [
            "apply filter_not_empty.",
            "VernacExtend",
            "cf5fa38cb0b9d0c08ff7dbf8bad953f65ec85d7d"
        ],
        [
            "destruct lf as [lf| |] ; destruct lg as [lg| |] ; try easy.",
            "VernacExtend",
            "936382a495acc2732d8091adb702ef4d0fe04937"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Hl' : 0 < (lf - lg) / 2).",
            "VernacExtend",
            "cc53d8dedce80b5f358891b819b2d8392247411f"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "now apply -> Rminus_lt_0.",
            "VernacExtend",
            "e415d66d2eba79a32d8f7fe3281b906f6bca1769"
        ],
        [
            "apply Rlt_R0_R2.",
            "VernacExtend",
            "56f346f7d456ea9d1535a96ac932a1c35a8ac229"
        ],
        [
            "assert (Hlf : locally lf (fun y => (lf + lg) / 2 < y)).",
            "VernacExtend",
            "5ea3db4f204080b560327b056ed7ef5db53baaec"
        ],
        [
            "apply open_gt.",
            "VernacExtend",
            "aadafe094a8527cf0eec7d0efa1928e25fce8263"
        ],
        [
            "replace ((lf + lg) / 2) with (lf - (lf - lg) / 2) by field.",
            "VernacExtend",
            "3899fb0d60a303b906ed2bb75ad1af58b72e1a54"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "by rewrite /Rminus Rplus_opp_r Rabs_R0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (Hlg : locally lg (fun y => y < (lf + lg) / 2)).",
            "VernacExtend",
            "822c1dfcf8e3ce9f00ce2caf923564cf36db360e"
        ],
        [
            "apply open_lt.",
            "VernacExtend",
            "5470927139a3cf1d185d316473525fd4034c6531"
        ],
        [
            "replace ((lf + lg) / 2) with (lg + (lf - lg) / 2) by field.",
            "VernacExtend",
            "10c8133ed667b97c7d5118111f5a45cae4d9917a"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "by rewrite /Rminus Rplus_opp_r Rabs_R0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "specialize (Hf _ Hlf).",
            "VernacExtend",
            "444de505ef313bb0b17c4d79f7f62950ecb203fe"
        ],
        [
            "specialize (Hg _ Hlg).",
            "VernacExtend",
            "7c3119959b261085b3dc27d456368717b47c99e7"
        ],
        [
            "unfold filtermap in Hf, Hg.",
            "VernacExtend",
            "7338b3c29e4254e79fcc500189f7749fafadb479"
        ],
        [
            "generalize (filter_and _ _ (filter_and _ _ Hf Hg) H).",
            "VernacExtend",
            "ff446085d222473c1c77135eadb3f511bd3f06a4"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros x [[H1 H2] H3].",
            "VernacExtend",
            "d32087ef1f5bcac0c3720c94e676a264760eae6f"
        ],
        [
            "apply Rle_not_lt with (1 := H3).",
            "VernacExtend",
            "d9680d22ff5eeeee6dc4b5e70e0df562093979b2"
        ],
        [
            "now apply Rlt_trans with ((lf + lg) / 2).",
            "VernacExtend",
            "9470dabdc7524ac1389572618b21d90180c556b4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Hlf : locally lf (fun y => lf - 1 < y)).",
            "VernacExtend",
            "5e5c320a25ebf847618cf83399266896e88042d4"
        ],
        [
            "apply open_gt.",
            "VernacExtend",
            "aadafe094a8527cf0eec7d0efa1928e25fce8263"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "rewrite /Rminus Rplus_opp_r Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_0_1.",
            "VernacExtend",
            "c3f675388bf844e0740197fd71afa66e5eef091d"
        ],
        [
            "assert (Hlg : Rbar_locally m_infty (fun y => Rbar_lt y (lf - 1))).",
            "VernacExtend",
            "176d0023dffcfe5f7513bbb439b6fb0e11df340f"
        ],
        [
            "now apply open_Rbar_lt'.",
            "VernacExtend",
            "ed6a52a3a4b4260c6b498cd9dd1b117031efcb54"
        ],
        [
            "specialize (Hf _ Hlf).",
            "VernacExtend",
            "444de505ef313bb0b17c4d79f7f62950ecb203fe"
        ],
        [
            "specialize (Hg _ Hlg).",
            "VernacExtend",
            "7c3119959b261085b3dc27d456368717b47c99e7"
        ],
        [
            "unfold filtermap in Hf, Hg.",
            "VernacExtend",
            "7338b3c29e4254e79fcc500189f7749fafadb479"
        ],
        [
            "generalize (filter_and _ _ (filter_and _ _ Hf Hg) H).",
            "VernacExtend",
            "ff446085d222473c1c77135eadb3f511bd3f06a4"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros x [[H1 H2] H3].",
            "VernacExtend",
            "d32087ef1f5bcac0c3720c94e676a264760eae6f"
        ],
        [
            "apply Rle_not_lt with (1 := H3).",
            "VernacExtend",
            "d9680d22ff5eeeee6dc4b5e70e0df562093979b2"
        ],
        [
            "now apply Rlt_trans with (lf - 1).",
            "VernacExtend",
            "6c22d6f8c985501cbd869aa66a726f2e69842149"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Hlf : Rbar_locally p_infty (fun y => Rbar_lt (lg + 1) y)).",
            "VernacExtend",
            "8e18b22576cf98baed7d5ee13b71a957f97dfd22"
        ],
        [
            "now apply open_Rbar_gt'.",
            "VernacExtend",
            "40e20f71b401900b40a88be218827fbf7daf4362"
        ],
        [
            "assert (Hlg : locally lg (fun y => y < lg + 1)).",
            "VernacExtend",
            "92999b4cdb864442daeee82febf23e747c574613"
        ],
        [
            "apply open_lt.",
            "VernacExtend",
            "5470927139a3cf1d185d316473525fd4034c6531"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "rewrite /Rminus Rplus_opp_r Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_0_1.",
            "VernacExtend",
            "c3f675388bf844e0740197fd71afa66e5eef091d"
        ],
        [
            "specialize (Hf _ Hlf).",
            "VernacExtend",
            "444de505ef313bb0b17c4d79f7f62950ecb203fe"
        ],
        [
            "specialize (Hg _ Hlg).",
            "VernacExtend",
            "7c3119959b261085b3dc27d456368717b47c99e7"
        ],
        [
            "unfold filtermap in Hf, Hg.",
            "VernacExtend",
            "7338b3c29e4254e79fcc500189f7749fafadb479"
        ],
        [
            "generalize (filter_and _ _ (filter_and _ _ Hf Hg) H).",
            "VernacExtend",
            "ff446085d222473c1c77135eadb3f511bd3f06a4"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros x [[H1 H2] H3].",
            "VernacExtend",
            "d32087ef1f5bcac0c3720c94e676a264760eae6f"
        ],
        [
            "apply Rle_not_lt with (1 := H3).",
            "VernacExtend",
            "d9680d22ff5eeeee6dc4b5e70e0df562093979b2"
        ],
        [
            "now apply Rlt_trans with (lg + 1).",
            "VernacExtend",
            "7762a0e3c656418585fa6d4610524dc54a509ea0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Hlf : Rbar_locally p_infty (fun y => Rbar_lt 0 y)).",
            "VernacExtend",
            "9e07f409acf05e9be19a5630aa928b6727b197ce"
        ],
        [
            "now apply open_Rbar_gt'.",
            "VernacExtend",
            "40e20f71b401900b40a88be218827fbf7daf4362"
        ],
        [
            "assert (Hlg : Rbar_locally m_infty (fun y => Rbar_lt y 0)).",
            "VernacExtend",
            "83b2036d843feaf42eedac015c9f6cd1552ac62b"
        ],
        [
            "now apply open_Rbar_lt'.",
            "VernacExtend",
            "ed6a52a3a4b4260c6b498cd9dd1b117031efcb54"
        ],
        [
            "specialize (Hf _ Hlf).",
            "VernacExtend",
            "444de505ef313bb0b17c4d79f7f62950ecb203fe"
        ],
        [
            "specialize (Hg _ Hlg).",
            "VernacExtend",
            "7c3119959b261085b3dc27d456368717b47c99e7"
        ],
        [
            "unfold filtermap in Hf, Hg.",
            "VernacExtend",
            "7338b3c29e4254e79fcc500189f7749fafadb479"
        ],
        [
            "generalize (filter_and _ _ (filter_and _ _ Hf Hg) H).",
            "VernacExtend",
            "ff446085d222473c1c77135eadb3f511bd3f06a4"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros x [[H1 H2] H3].",
            "VernacExtend",
            "d32087ef1f5bcac0c3720c94e676a264760eae6f"
        ],
        [
            "apply Rle_not_lt with (1 := H3).",
            "VernacExtend",
            "d9680d22ff5eeeee6dc4b5e70e0df562093979b2"
        ],
        [
            "now apply Rlt_trans with 0.",
            "VernacExtend",
            "854d72f415baf4e6b65389843863232a11c654a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_le_loc (u v : nat -> R) (l1 l2 : Rbar) : eventually (fun n => u n <= v n) -> is_lim_seq u l1 -> is_lim_seq v l2 -> Rbar_le l1 l2.",
            "VernacStartTheoremProof",
            "cb7a59b76adac9d99ec762fd957930f05df5b760"
        ],
        [
            "apply filterlim_le.",
            "VernacExtend",
            "5e6a5ccbad10ca26cb77b714628126244c1ff433"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_le_loc (u v : nat -> R) : eventually (fun n => u n <= v n) -> Rbar_le (Lim_seq u) (Lim_seq v).",
            "VernacStartTheoremProof",
            "e61dfca0d582408646959794a6caec0f6cd9ed2d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "move: (LimSup_le _ _ H) (LimInf_le _ _ H).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (LimSup_LimInf_seq_le u) (LimSup_LimInf_seq_le v).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "unfold Lim_seq.",
            "VernacExtend",
            "9fca1cec1f8eb3004eadfd6ba648348af070dbb3"
        ],
        [
            "case: (LimSup_seq u) => [lsu | | ] //= ; case: (LimInf_seq u) => [liu | | ] //= ; case: (LimSup_seq v) => [lsv | | ] //= ; case: (LimInf_seq v) => [liv | | ] //= ; intros.",
            "VernacExtend",
            "69ae105b39cf22635ed777c9ca03ce99d35f378f"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply Rlt_le, Rinv_0_lt_compat, Rlt_0_2.",
            "VernacExtend",
            "83ca263d49e5c0a85951ebf56837048f45de16bf"
        ],
        [
            "by apply Rplus_le_compat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Req_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_le (u v : nat -> R) (l1 l2 : Rbar) : (forall n, u n <= v n) -> is_lim_seq u l1 -> is_lim_seq v l2 -> Rbar_le l1 l2.",
            "VernacStartTheoremProof",
            "58a49623cff34ed67f4069039683c84eb4f84909"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply filterlim_le.",
            "VernacExtend",
            "5e6a5ccbad10ca26cb77b714628126244c1ff433"
        ],
        [
            "now apply filter_forall.",
            "VernacExtend",
            "994ed66757ea436e45750349bda23b502b22084e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_ge_p_infty : forall {T F} {FF : Filter F} (f g : T -> R), F (fun x => f x <= g x) -> filterlim f F (Rbar_locally p_infty) -> filterlim g F (Rbar_locally p_infty).",
            "VernacStartTheoremProof",
            "7684604eae04ad53c6bee0afb123e9c269b65b65"
        ],
        [
            "intros T F FF f g H Hf.",
            "VernacExtend",
            "2293b6afdd107879a6fbaefcc3b366ad2e94b960"
        ],
        [
            "intros P [M HM].",
            "VernacExtend",
            "912eee4bdf845576ead0eae8eb9e686e21e27a18"
        ],
        [
            "assert (H' : Rbar_locally p_infty (fun y => M < y)).",
            "VernacExtend",
            "542d7389222b106ae1d974cd5e2a0fefdc5137b3"
        ],
        [
            "now exists M.",
            "VernacExtend",
            "d209ee394e51e963b50da18371a61ccbd1897fc7"
        ],
        [
            "unfold filtermap.",
            "VernacExtend",
            "ab2a046933e4dbb14f70f2b6f6c5f6e701f158bb"
        ],
        [
            "generalize (filter_and (fun x : T => f x <= g x) _ H (Hf (fun y : R => M < y) H')).",
            "VernacExtend",
            "d093e95486b53a4c489ad11d6987fac93e30b64b"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros x [H1 H2].",
            "VernacExtend",
            "dec14703281561ee29868a72a7ea2508387ba782"
        ],
        [
            "apply HM.",
            "VernacExtend",
            "da44e10176bfb6a0c07c29369b62e8b925d50bc1"
        ],
        [
            "now apply Rlt_le_trans with (f x).",
            "VernacExtend",
            "35b91ed2e5bad4ebfdc4a472429035d2c1fd822f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_le_m_infty : forall {T F} {FF : Filter F} (f g : T -> R), F (fun x => g x <= f x) -> filterlim f F (Rbar_locally m_infty) -> filterlim g F (Rbar_locally m_infty).",
            "VernacStartTheoremProof",
            "7723a199538f7bdb974683fd25353194aa911f54"
        ],
        [
            "intros T F FF f g H Hf.",
            "VernacExtend",
            "2293b6afdd107879a6fbaefcc3b366ad2e94b960"
        ],
        [
            "intros P [M HM].",
            "VernacExtend",
            "912eee4bdf845576ead0eae8eb9e686e21e27a18"
        ],
        [
            "pose ineq (y : R) := y < M.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "assert (H' : Rbar_locally m_infty ineq).",
            "VernacExtend",
            "7317f482ed066127f7bbe2ab60dda19365fa6bef"
        ],
        [
            "now exists M.",
            "VernacExtend",
            "d209ee394e51e963b50da18371a61ccbd1897fc7"
        ],
        [
            "unfold filtermap.",
            "VernacExtend",
            "ab2a046933e4dbb14f70f2b6f6c5f6e701f158bb"
        ],
        [
            "generalize (filter_and _ (fun x : T => ineq (f x)) H (Hf ineq H')).",
            "VernacExtend",
            "4624544b301c9fb9598e35f7967019fbe7671a25"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros x [H1 H2].",
            "VernacExtend",
            "dec14703281561ee29868a72a7ea2508387ba782"
        ],
        [
            "apply HM.",
            "VernacExtend",
            "da44e10176bfb6a0c07c29369b62e8b925d50bc1"
        ],
        [
            "now apply Rle_lt_trans with (f x).",
            "VernacExtend",
            "fdc205436a7f66f2a9a9fcc2d32cab2bf21a62b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_le_le : forall {T F} {FF : Filter F} (f g h : T -> R) (l : Rbar), F (fun x => f x <= g x <= h x) -> filterlim f F (Rbar_locally l) -> filterlim h F (Rbar_locally l) -> filterlim g F (Rbar_locally l).",
            "VernacStartTheoremProof",
            "1c8e1cd8ddd4e2d43759732afde590d74893f33a"
        ],
        [
            "intros T F FF f g h l H Hf Hh.",
            "VernacExtend",
            "e69dc89f828748ed89a2dd3b5c0f594b87224233"
        ],
        [
            "destruct l as [l| |].",
            "VernacExtend",
            "a50b9315d268d47c890ad0be6c36d5895fa55865"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros P [eps He].",
            "VernacExtend",
            "50f7298ed7959a6b4c85d0c36a92e792b33d3c0f"
        ],
        [
            "assert (H' : Rbar_locally l (fun y => Rabs (y - l) < eps)).",
            "VernacExtend",
            "612c7f91d7d548049aaf571c02ee911efffe28d6"
        ],
        [
            "now exists eps.",
            "VernacExtend",
            "231859d3bd429d5cb9a46c5a8150f7440e5ea441"
        ],
        [
            "unfold filterlim, filter_le, filtermap in Hf, Hh |- *.",
            "VernacExtend",
            "541ae4d40c98e2787172751fc73a5d2cf726aae4"
        ],
        [
            "generalize (filter_and _ _ H (filter_and _ _ (Hf _ H') (Hh _ H'))).",
            "VernacExtend",
            "5255511aab289203e41d18fcf7a328d31f7d3927"
        ],
        [
            "apply filter_imp.",
            "VernacExtend",
            "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
        ],
        [
            "intros x [H1 [H2 H3]].",
            "VernacExtend",
            "27285365e73f998cd51b2595c36ffcb3d5e629ca"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_le_trans with (2 := proj1 H1).",
            "VernacExtend",
            "94c68eff639de372f50a67564fb20c4f28a20ef9"
        ],
        [
            "now apply Rabs_lt_between'.",
            "VernacExtend",
            "ed6d2bab976354ab53e690f9e5dbe2b16f7eb39f"
        ],
        [
            "apply Rle_lt_trans with (1 := proj2 H1).",
            "VernacExtend",
            "cd684219169729ce7d09980f5f437baeb3b2a5ff"
        ],
        [
            "now apply Rabs_lt_between'.",
            "VernacExtend",
            "ed6d2bab976354ab53e690f9e5dbe2b16f7eb39f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply filterlim_ge_p_infty with (2 := Hf).",
            "VernacExtend",
            "8f55ae38e57cdc799e8d1d33bae669253809ba24"
        ],
        [
            "apply: filter_imp H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "now intros x [H _].",
            "VernacExtend",
            "0b873e4b0ca19085e7191b960ab975cd7796185d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply filterlim_le_m_infty with (2 := Hh).",
            "VernacExtend",
            "e3334ba9f72aefc21d6b0b21924d847d0795c9b5"
        ],
        [
            "apply: filter_imp H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "now intros x [_ H].",
            "VernacExtend",
            "155ffe8a53c0881595416870b0405a04aea982bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_le_le_loc (u v w : nat -> R) (l : Rbar) : eventually (fun n => u n <= v n <= w n) -> is_lim_seq u l -> is_lim_seq w l -> is_lim_seq v l.",
            "VernacStartTheoremProof",
            "3133560f0092cfa9899786a6725211c36be02e6c"
        ],
        [
            "apply filterlim_le_le.",
            "VernacExtend",
            "2f2ddeea5b85f11c7fd2c4dedda1c2b3ea2ec976"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_le_le (u v w : nat -> R) (l : Rbar) : (forall n, u n <= v n <= w n) -> is_lim_seq u l -> is_lim_seq w l -> is_lim_seq v l.",
            "VernacStartTheoremProof",
            "16e5b29f54bdf81cb15189ede350986dcacae895"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply filterlim_le_le.",
            "VernacExtend",
            "2f2ddeea5b85f11c7fd2c4dedda1c2b3ea2ec976"
        ],
        [
            "now apply filter_forall.",
            "VernacExtend",
            "994ed66757ea436e45750349bda23b502b22084e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_le_p_loc (u v : nat -> R) : eventually (fun n => u n <= v n) -> is_lim_seq u p_infty -> is_lim_seq v p_infty.",
            "VernacStartTheoremProof",
            "cae719aec4db6f2952dcc328a697f149da8ae65c"
        ],
        [
            "apply filterlim_ge_p_infty.",
            "VernacExtend",
            "c94e134f7985812b4b7b602713f8c802b60b58db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_le_m_loc (u v : nat -> R) : eventually (fun n => v n <= u n) -> is_lim_seq u m_infty -> is_lim_seq v m_infty.",
            "VernacStartTheoremProof",
            "abada985496310ac01b23f5ea2d5a339645ede71"
        ],
        [
            "apply filterlim_le_m_infty.",
            "VernacExtend",
            "5436a4d282bcc919165db88abe5231dbbb28f716"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_decr_compare (u : nat -> R) (l : R) : is_lim_seq u l -> (forall n, (u (S n)) <= (u n)) -> forall n, l <= u n.",
            "VernacStartTheoremProof",
            "267e5d415117204a987b6c5ea09425b94bb60108"
        ],
        [
            "move /is_lim_seq_spec => Hu H n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rnot_lt_le => H0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rminus_lt_0 in H0.",
            "VernacExtend",
            "92c391f8d545749b763107fc968f62ecdc379150"
        ],
        [
            "case: (Hu (mkposreal _ H0)) => {Hu} /= Nu Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Hu _ (le_plus_r n Nu)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "apply Rle_trans with (2 := Rabs_maj2 _).",
            "VernacExtend",
            "187ce4a0a704c6b3756adc43e8e52ec19431c0a8"
        ],
        [
            "rewrite Ropp_minus_distr'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "elim: (Nu) => [ | m IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite plus_0_r ; by apply Rle_refl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite -plus_n_Sm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (2 := IH).",
            "VernacExtend",
            "f46498b95c532b4c338f85300e2ac05fe37fbdde"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_incr_compare (u : nat -> R) (l : R) : is_lim_seq u l -> (forall n, (u n) <= (u (S n))) -> forall n, u n <= l.",
            "VernacStartTheoremProof",
            "f6cb85f26f095039da3695fd2cb95ff858ee0ad0"
        ],
        [
            "move /is_lim_seq_spec => Hu H n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rnot_lt_le => H0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rminus_lt_0 in H0.",
            "VernacExtend",
            "92c391f8d545749b763107fc968f62ecdc379150"
        ],
        [
            "case: (Hu (mkposreal _ H0)) => {Hu} /= Nu Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Hu _ (le_plus_r n Nu)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "apply Rle_trans with (2 := Rle_abs _).",
            "VernacExtend",
            "72c9ed1eeb9d16ecf7ec04b7601241cd3efc9de9"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "elim: (Nu) => [ | m IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite plus_0_r ; by apply Rle_refl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite -plus_n_Sm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (1 := IH).",
            "VernacExtend",
            "7edff2fefc3e3d55d4db068dd3dc9e178b58a76c"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_decr (u : nat -> R) : (forall n, (u (S n)) <= (u n)) -> ex_lim_seq u.",
            "VernacStartTheoremProof",
            "e2173aa2c82f5768943931178f8410d43f2ec598"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (Inf_seq u).",
            "VernacExtend",
            "ae3a872b83982655125ea353be0ab5d3d3f526a4"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "rewrite /Inf_seq ; case: ex_inf_seq ; case => [l | | ] //= Hl.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "move => eps ; case: (Hl eps) => Hl1 [N Hl2].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rabs_lt_between' ; split.",
            "VernacExtend",
            "219fa8a18e1bec41b3e80f61c4b73c04c06468a8"
        ],
        [
            "by apply Hl1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_lt_trans with (2 := Hl2).",
            "VernacExtend",
            "a2d5fac233028ac6c349f3bfe07c7c5e22c292f7"
        ],
        [
            "elim: n N {Hl2} Hn => [ | n IH] N Hn.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite (le_n_O_eq _ Hn).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply le_lt_eq_dec in Hn.",
            "VernacExtend",
            "496992dd83514ca7dd8f86317db6ac735074b946"
        ],
        [
            "case: Hn => [Hn | ->].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_trans with (1 := H _), IH ; intuition.",
            "VernacExtend",
            "ef5021a17d956a329e225a8f9e4047e262a127fa"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M ; exists O => n _ ; by apply Hl.",
            "VernacExtend",
            "dd76215f84b5ec723bc22942b73281b86cf324ad"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl M) => {Hl} N Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_lt_trans with (2 := Hl).",
            "VernacExtend",
            "69e9183c3e1c621478435d3029dab8288a9ade6e"
        ],
        [
            "elim: Hn => [ | {n} n Hn IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_trans with (2 := IH).",
            "VernacExtend",
            "f46498b95c532b4c338f85300e2ac05fe37fbdde"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_incr (u : nat -> R) : (forall n, (u n) <= (u (S n))) -> ex_lim_seq u.",
            "VernacStartTheoremProof",
            "c6b171aedfd8686c10ba0cf2c70f256f9a297b9e"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (Sup_seq u).",
            "VernacExtend",
            "d8f6734a62d4d99a80e36616f8911dc07831e092"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "rewrite /Sup_seq ; case: ex_sup_seq ; case => [l | | ] //= Hl.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "move => eps ; case: (Hl eps) => Hl1 [N Hl2].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rabs_lt_between' ; split.",
            "VernacExtend",
            "219fa8a18e1bec41b3e80f61c4b73c04c06468a8"
        ],
        [
            "apply Rlt_le_trans with (1 := Hl2).",
            "VernacExtend",
            "aae1b91bb75fc6d46586eadbd538ea82b4f1e535"
        ],
        [
            "elim: Hn => [ | {n} n Hn IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_trans with (1 := IH).",
            "VernacExtend",
            "7edff2fefc3e3d55d4db068dd3dc9e178b58a76c"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hl1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hl M) => {Hl} N Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rlt_le_trans with (1 := Hl).",
            "VernacExtend",
            "54b82055fa8a68b84cd299231dab5f0c3627e64f"
        ],
        [
            "elim: Hn => [ | {n} n Hn IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_trans with (1 := IH).",
            "VernacExtend",
            "7edff2fefc3e3d55d4db068dd3dc9e178b58a76c"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => M ; exists O => n Hn ; by apply Hl.",
            "VernacExtend",
            "dd76215f84b5ec723bc22942b73281b86cf324ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_finite_lim_seq_decr (u : nat -> R) (M : R) : (forall n, (u (S n)) <= (u n)) -> (forall n, M <= u n) -> ex_finite_lim_seq u.",
            "VernacStartTheoremProof",
            "cc195c77469813b4bf4a15ccf6fabbd5d308a5f0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply ex_finite_lim_seq_correct.",
            "VernacExtend",
            "c47c6c3fc9b3ea2f813d19b82c0a06b642ee22a1"
        ],
        [
            "have H1 : ex_lim_seq u.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (real (Inf_seq u)).",
            "VernacExtend",
            "762f5f6ae30e234b797287851813cac971a25b98"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "rewrite /Inf_seq ; case: ex_inf_seq ; case => [l | | ] //= Hl.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "move => eps ; case: (Hl eps) => Hl1 [N Hl2].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rabs_lt_between' ; split.",
            "VernacExtend",
            "219fa8a18e1bec41b3e80f61c4b73c04c06468a8"
        ],
        [
            "by apply Hl1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_lt_trans with (2 := Hl2).",
            "VernacExtend",
            "a2d5fac233028ac6c349f3bfe07c7c5e22c292f7"
        ],
        [
            "elim: n N {Hl2} Hn => [ | n IH] N Hn.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite (le_n_O_eq _ Hn).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply le_lt_eq_dec in Hn.",
            "VernacExtend",
            "496992dd83514ca7dd8f86317db6ac735074b946"
        ],
        [
            "case: Hn => [Hn | ->].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_trans with (1 := H _), IH ; intuition.",
            "VernacExtend",
            "ef5021a17d956a329e225a8f9e4047e262a127fa"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (Hl (u O) O) => H1 ; by apply Rlt_irrefl in H1.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "case: (Hl M) => {Hl} n Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rlt_not_le in Hl.",
            "VernacExtend",
            "618b855141c91bec93e4e3535b723dcc6b22035c"
        ],
        [
            "by move: (Hl (H0 n)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Lim_seq_correct in H1.",
            "VernacExtend",
            "f479aca64d557a27478848fb535e3b70b4448296"
        ],
        [
            "case: (Lim_seq u) H1 => [l | | ] /= Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_spec in Hu.",
            "VernacExtend",
            "76340a6faa81e82aa0e11ff86fbd12e4e42067c5"
        ],
        [
            "case: (Hu (u O)) => {Hu} N Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Hu N (le_refl _)) => {Hu} Hu.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "contradict Hu ; apply Rle_not_lt.",
            "VernacExtend",
            "b59bd2649a76f17275673eab1a5745597f1e3a50"
        ],
        [
            "elim: N => [ | N IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with (1 := H _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_spec in Hu.",
            "VernacExtend",
            "76340a6faa81e82aa0e11ff86fbd12e4e42067c5"
        ],
        [
            "case: (Hu M) => {Hu} N Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Hu N (le_refl _)) => {Hu} Hu.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "contradict Hu ; by apply Rle_not_lt.",
            "VernacExtend",
            "308542ba5a6b6b2938f6e99ad288c6690b373b50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_finite_lim_seq_incr (u : nat -> R) (M : R) : (forall n, (u n) <= (u (S n))) -> (forall n, u n <= M) -> ex_finite_lim_seq u.",
            "VernacStartTheoremProof",
            "a274cedcb5bd7b3b85054db5bef8d742d5884be6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case: (ex_finite_lim_seq_decr (fun n => - u n) (- M)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => n ; by apply Ropp_le_contravar.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "move => n ; by apply Ropp_le_contravar.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "move => l ; move => Hu.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "exists (- l).",
            "VernacExtend",
            "eb4d773373a29c70c1e8d64d70fc8d6f989f01de"
        ],
        [
            "apply is_lim_seq_spec in Hu.",
            "VernacExtend",
            "76340a6faa81e82aa0e11ff86fbd12e4e42067c5"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "case: (Hu eps) => {Hu} N Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (u n - - l) with (-(- u n - l)) by ring.",
            "VernacExtend",
            "1c3329f3eefc8928c28632c0ed1cc2cb89a87106"
        ],
        [
            "rewrite Rabs_Ropp ; by apply Hu.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Rbar_opp : forall x, filterlim Ropp (Rbar_locally x) (Rbar_locally (Rbar_opp x)).",
            "VernacStartTheoremProof",
            "fbcf42d4ec815caedf107a69fb52e9247335c33e"
        ],
        [
            "intros [x| |] P [eps He].",
            "VernacExtend",
            "ea0688f964be1f79c0cc6f9fa137a5978fbb419d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists eps.",
            "VernacExtend",
            "c7af48b9f65cab7cfe7f63abbdd2c6bef269dc77"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Ropp_involutive Rplus_comm Rabs_minus_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (-eps).",
            "VernacExtend",
            "f068f0df333a49146aa0be9c7db5e4d547b2623e"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "by rewrite Ropp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (-eps).",
            "VernacExtend",
            "f068f0df333a49146aa0be9c7db5e4d547b2623e"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "by rewrite Ropp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_opp (u : nat -> R) (l : Rbar) : is_lim_seq u l <-> is_lim_seq (fun n => -u n) (Rbar_opp l).",
            "VernacStartTheoremProof",
            "44c13fa9a24d9355fcb7112811be7562bfa40659"
        ],
        [
            "split ; move => Hu.",
            "VernacExtend",
            "762ea52ce3564fcd0b41ae75027c378295824fae"
        ],
        [
            "apply is_LimSup_LimInf_lim_seq.",
            "VernacExtend",
            "553f06667beacf4acbee1b530530396e6e862c5b"
        ],
        [
            "apply is_LimSup_opp_LimInf_seq.",
            "VernacExtend",
            "36b8005036b7d04e07f430e32fd1558b95d65518"
        ],
        [
            "by apply is_lim_LimInf_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_LimInf_opp_LimSup_seq.",
            "VernacExtend",
            "cf1dc22660018b572f12885a7e61bbbf0a528f41"
        ],
        [
            "by apply is_lim_LimSup_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_LimSup_LimInf_lim_seq.",
            "VernacExtend",
            "553f06667beacf4acbee1b530530396e6e862c5b"
        ],
        [
            "apply is_LimInf_opp_LimSup_seq.",
            "VernacExtend",
            "cf1dc22660018b572f12885a7e61bbbf0a528f41"
        ],
        [
            "by apply is_lim_LimInf_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_LimSup_opp_LimInf_seq.",
            "VernacExtend",
            "36b8005036b7d04e07f430e32fd1558b95d65518"
        ],
        [
            "by apply is_lim_LimSup_seq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_opp (u : nat -> R) : ex_lim_seq u <-> ex_lim_seq (fun n => -u n).",
            "VernacStartTheoremProof",
            "428d0e25ec2138ebb14006859b08f366deffee7a"
        ],
        [
            "split ; case => l Hl ; exists (Rbar_opp l).",
            "VernacExtend",
            "40d5687c3d4c661390ca1dee6accaf6a792817b3"
        ],
        [
            "by apply -> is_lim_seq_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_ext with (fun n => - - u n).",
            "VernacExtend",
            "4e699b1fedf718e608649cebb3ff4921b2070352"
        ],
        [
            "move => n ; by apply Ropp_involutive.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "by apply -> is_lim_seq_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_opp (u : nat -> R) : Lim_seq (fun n => - u n) = Rbar_opp (Lim_seq u).",
            "VernacStartTheoremProof",
            "3ecd8000d6b4ca2dbc4cc1e5157e02e07b00bcfb"
        ],
        [
            "rewrite /Lim_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite LimSup_seq_opp LimInf_seq_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (LimInf_seq u) => [li | | ] ; case: (LimSup_seq u) => [ls | | ] //= ; apply f_equal ; field.",
            "VernacExtend",
            "b3e510b79bb8e39d64289e8f4b8969529d19bacd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Rbar_plus : forall x y z, is_Rbar_plus x y z -> filterlim (fun z => fst z + snd z) (filter_prod (Rbar_locally x) (Rbar_locally y)) (Rbar_locally z).",
            "VernacStartTheoremProof",
            "54e999df5ac1fa06d3409f4589c6351ec568236a"
        ],
        [
            "intros x y z.",
            "VernacExtend",
            "8357c7ce661033f932c65582aab008de3b5d8530"
        ],
        [
            "wlog: x y z / (Rbar_le 0 z).",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "intros Hw.",
            "VernacExtend",
            "b243b512d6be997ab4aca62bdf8014fc3baf2c4e"
        ],
        [
            "case: (Rbar_le_lt_dec 0 z) => Hz Hp.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (filterlim_ext (fun z => - (- fst z + - snd z))).",
            "VernacExtend",
            "3fa115f66f52a6d5b8bda9bdf0fabb95f8622f37"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite -(Rbar_opp_involutive z).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply filterlim_comp.",
            "VernacExtend",
            "887c72ce037fc4dc1c63092170c000188c601e2f"
        ],
        [
            "2: apply filterlim_Rbar_opp.",
            "VernacExtend",
            "d80839879231ade9b04a8b8513d831fc52255bc6"
        ],
        [
            "assert (Hw' : filterlim (fun z => fst z + snd z) (filter_prod (Rbar_locally (Rbar_opp x)) (Rbar_locally (Rbar_opp y))) (Rbar_locally (Rbar_opp z))).",
            "VernacExtend",
            "b557ee5a9a5d335687c856cd4a44d9f475e3de26"
        ],
        [
            "apply Hw.",
            "VernacExtend",
            "8a661025dc679026191beb09fb44e1db1e042d6a"
        ],
        [
            "rewrite -Ropp_0 -/(Rbar_opp 0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply <- Rbar_opp_le.",
            "VernacExtend",
            "9a82a37ca48ba2651db91242b92e6fbb8b5fa52d"
        ],
        [
            "now apply Rbar_lt_le.",
            "VernacExtend",
            "bab8380159442056bd9449e9a95984c8ba5f3151"
        ],
        [
            "revert Hp.",
            "VernacExtend",
            "63548228b2063af7bffadb2ed9944006db5741bd"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "destruct x as [x| |] ; destruct y as [y| |] ; destruct z as [z| |] => //=.",
            "VernacExtend",
            "f9f41b15a5913c572ddec97b467776e028af5648"
        ],
        [
            "unfold is_Rbar_plus ; simpl => H.",
            "VernacExtend",
            "24f3ee2871489c2254486b092250c38963fc82e5"
        ],
        [
            "injection H => <-.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply f_equal, f_equal ; ring.",
            "VernacExtend",
            "2d73862c0d37cea42846a059e9870de87f893896"
        ],
        [
            "clear Hw.",
            "VernacExtend",
            "68f30b0778fbed3cef26ba82948a5d8ec60e3e64"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "specialize (Hw' P HP).",
            "VernacExtend",
            "744663137f380432d086499e558a1f6a4e6e248d"
        ],
        [
            "destruct Hw' as [Q R H1 H2 H3].",
            "VernacExtend",
            "f352a71621396f6170ee86647f60b926782c6229"
        ],
        [
            "exists (fun x => Q (- x)) (fun x => R (- x)).",
            "VernacExtend",
            "60feffa3962413f5c9d7a88224fe6c9a7479afac"
        ],
        [
            "now apply filterlim_Rbar_opp.",
            "VernacExtend",
            "ac154378317c3ac1818388cd53dbbd101b69e745"
        ],
        [
            "now apply filterlim_Rbar_opp.",
            "VernacExtend",
            "ac154378317c3ac1818388cd53dbbd101b69e745"
        ],
        [
            "intros u v HQ HR.",
            "VernacExtend",
            "d9e95e2953215742e6b82076e36d19371e01936a"
        ],
        [
            "exact (H3 _ _ HQ HR).",
            "VernacExtend",
            "24b724206b50452bb61c2097426269d9d305fa53"
        ],
        [
            "unfold is_Rbar_plus.",
            "VernacExtend",
            "884c4144fc0ccbd8e8264f91de7572987471051e"
        ],
        [
            "case: z => [z| |] Hz Hp ; try by case: Hz.",
            "VernacExtend",
            "700e4ba7c43aef376de752aa78d70ea0bf66a54e"
        ],
        [
            "case: x y Hp Hz => [x| |] ; case => [y| |] //= ; case => <- Hz.",
            "VernacExtend",
            "d4127243a8edd835b38ce1b186629bc51391e41f"
        ],
        [
            "intros P [eps He].",
            "VernacExtend",
            "50f7298ed7959a6b4c85d0c36a92e792b33d3c0f"
        ],
        [
            "exists (fun u => Rabs (u - x) < pos_div_2 eps) (fun v => Rabs (v - y) < pos_div_2 eps).",
            "VernacExtend",
            "c4e4dfdf0e593fe970cb949501332325c8e86cc5"
        ],
        [
            "now exists (pos_div_2 eps).",
            "VernacExtend",
            "79245acb6e207fe1c4074d1702b9a3b491e84f6e"
        ],
        [
            "now exists (pos_div_2 eps).",
            "VernacExtend",
            "79245acb6e207fe1c4074d1702b9a3b491e84f6e"
        ],
        [
            "intros u v Hu Hv.",
            "VernacExtend",
            "696e9c33889b1c79af1fedb31090a1f22c9b0b8f"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (u + v + - (x + y)) with ((u - x) + (v - y)) by ring.",
            "VernacExtend",
            "ceae60ef4c1d36eec25e0b52ddf603ec965a072a"
        ],
        [
            "rewrite (double_var eps) ; apply Rle_lt_trans with (1 := Rabs_triang _ _), Rplus_lt_compat.",
            "VernacExtend",
            "86d2d02d04ebda6e19abd54137b6ae4e3462b6ab"
        ],
        [
            "now apply Hu.",
            "VernacExtend",
            "ca531c8d0402530cbd8480acc9732996a7f8b59d"
        ],
        [
            "now apply Hv.",
            "VernacExtend",
            "0a4052b128bc9c7c06b138b1f9176157099b223e"
        ],
        [
            "wlog: x y Hp {Hz} / (is_finite x) => [Hw|Hx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: x y Hp {Hz} => [x| |] ; case => [y| |] // _.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "now apply (Hw x p_infty).",
            "VernacExtend",
            "77e6868e99f289ddfd61e7a1ad3edd6a02eee8d6"
        ],
        [
            "assert (Hw': filterlim (fun z => fst z + snd z) (filter_prod (Rbar_locally y) (Rbar_locally p_infty)) (Rbar_locally p_infty)).",
            "VernacExtend",
            "433578d45342320ca82a6b44561386bf66707297"
        ],
        [
            "exact: Hw.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "specialize (Hw' P HP).",
            "VernacExtend",
            "744663137f380432d086499e558a1f6a4e6e248d"
        ],
        [
            "destruct Hw' as [Q R H1 H2 H3].",
            "VernacExtend",
            "f352a71621396f6170ee86647f60b926782c6229"
        ],
        [
            "exists R Q ; try assumption.",
            "VernacExtend",
            "9bc736e009165734dbcb9f5dab1528d8bd8133b7"
        ],
        [
            "intros u v Hu Hv.",
            "VernacExtend",
            "696e9c33889b1c79af1fedb31090a1f22c9b0b8f"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply (H3 v u).",
            "VernacExtend",
            "d8f873a08be0882405553f82001a4c1806989299"
        ],
        [
            "clear Hw.",
            "VernacExtend",
            "68f30b0778fbed3cef26ba82948a5d8ec60e3e64"
        ],
        [
            "intros P [N HN].",
            "VernacExtend",
            "49e72385e25f38319889834e3eecd05dfb798dc2"
        ],
        [
            "exists (fun x => N/2 < x) (fun x => N/2 < x).",
            "VernacExtend",
            "38db554d260e113815d564f2d9f4d45fd7969166"
        ],
        [
            "now exists (N/2).",
            "VernacExtend",
            "95adafce6e47e2dd0c7b2a8546068137aa6cb310"
        ],
        [
            "now exists (N/2).",
            "VernacExtend",
            "95adafce6e47e2dd0c7b2a8546068137aa6cb310"
        ],
        [
            "intros x y Hx Hy.",
            "VernacExtend",
            "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply HN.",
            "VernacExtend",
            "90fb629adaf024bbf40093c9f063576731105f38"
        ],
        [
            "rewrite (double_var N).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply Rplus_lt_compat.",
            "VernacExtend",
            "673e7dc0ec4b01f7b73334f5b23279dbf8d0648e"
        ],
        [
            "case: x y Hp Hx => [x| |] ; case => [y| | ] //= _ _.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "intros P [N HN].",
            "VernacExtend",
            "49e72385e25f38319889834e3eecd05dfb798dc2"
        ],
        [
            "exists (fun u => Rabs (u - x) < 1) (fun v => N - x + 1 < v).",
            "VernacExtend",
            "bb4f704eae3a6d88f1fc6714bff68585f2dbc7da"
        ],
        [
            "now exists (mkposreal _ Rlt_0_1).",
            "VernacExtend",
            "55c35c70ef4f869d0722004b0562a6c7f5d5c389"
        ],
        [
            "now exists (N - x + 1).",
            "VernacExtend",
            "11194445789aa34a508f8ebf01ea3447d5faa9c0"
        ],
        [
            "intros u v Hu Hv.",
            "VernacExtend",
            "696e9c33889b1c79af1fedb31090a1f22c9b0b8f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply HN.",
            "VernacExtend",
            "90fb629adaf024bbf40093c9f063576731105f38"
        ],
        [
            "replace N with (x - 1 + (N - x + 1)) by ring.",
            "VernacExtend",
            "604a63fea70e28455f22981220ea4a756f5bb3f5"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "now apply Rabs_lt_between'.",
            "VernacExtend",
            "ed6d2bab976354ab53e690f9e5dbe2b16f7eb39f"
        ],
        [
            "exact Hv.",
            "VernacExtend",
            "3c0371caa26cf9032949530f1d6ace503cee81e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_plus (u v : nat -> R) (l1 l2 l : Rbar) : is_lim_seq u l1 -> is_lim_seq v l2 -> is_Rbar_plus l1 l2 l -> is_lim_seq (fun n => u n + v n) l.",
            "VernacStartTheoremProof",
            "411b264d683924f0c44c94d8094e7e875a3484eb"
        ],
        [
            "intros Hu Hv Hl.",
            "VernacExtend",
            "b7ea59f305dca66d058b51d6610c6a4ba5615a83"
        ],
        [
            "eapply filterlim_comp_2 ; try eassumption.",
            "VernacExtend",
            "7c3053626bc57cbf6f1cfd59e4d64fef6c071b19"
        ],
        [
            "now apply filterlim_Rbar_plus.",
            "VernacExtend",
            "179773225a4c5a3674a0ecaf94ff75a80d51bb0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_plus' (u v : nat -> R) (l1 l2 : R) : is_lim_seq u l1 -> is_lim_seq v l2 -> is_lim_seq (fun n => u n + v n) (l1 + l2).",
            "VernacStartTheoremProof",
            "7844c5f972e56465114549654004bf8954cc3abe"
        ],
        [
            "intros Hu Hv.",
            "VernacExtend",
            "5f83f1b777c4021d6dcbf70e9280765aa78a70b7"
        ],
        [
            "eapply is_lim_seq_plus.",
            "VernacExtend",
            "42bee7d425fd3a78a36ba8991a1bbb03d2b15a0e"
        ],
        [
            "by apply Hu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_plus (u v : nat -> R) : ex_lim_seq u -> ex_lim_seq v -> ex_Rbar_plus (Lim_seq u) (Lim_seq v) -> ex_lim_seq (fun n => u n + v n).",
            "VernacStartTheoremProof",
            "53a54ab81d2b7d604ff7def4b20c02162b8893de"
        ],
        [
            "intros [lu Hu] [lv Hv] Hl ; exists (Rbar_plus lu lv).",
            "VernacExtend",
            "cd65d1925c927e17768d3630aac3a4211a7c79e3"
        ],
        [
            "apply is_lim_seq_plus with lu lv ; try assumption.",
            "VernacExtend",
            "ebcce69e036e1630dd0bc74deb01e5222dc7284c"
        ],
        [
            "rewrite -(is_lim_seq_unique u lu) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(is_lim_seq_unique v lv) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rbar_plus_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_plus (u v : nat -> R) : ex_lim_seq u -> ex_lim_seq v -> ex_Rbar_plus (Lim_seq u) (Lim_seq v) -> Lim_seq (fun n => u n + v n) = Rbar_plus (Lim_seq u) (Lim_seq v).",
            "VernacStartTheoremProof",
            "1ff622032a9298bb63dc01e3c2e4696a8a367420"
        ],
        [
            "intros Hu Hv Hl.",
            "VernacExtend",
            "b7ea59f305dca66d058b51d6610c6a4ba5615a83"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "eapply is_lim_seq_plus ; try apply Lim_seq_correct ; try assumption.",
            "VernacExtend",
            "8c25194c97eff2fcfe0a42c70f42a51ff8c792fc"
        ],
        [
            "by apply Rbar_plus_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_minus (u v : nat -> R) (l1 l2 l : Rbar) : is_lim_seq u l1 -> is_lim_seq v l2 -> is_Rbar_minus l1 l2 l -> is_lim_seq (fun n => u n - v n) l.",
            "VernacStartTheoremProof",
            "9510a80320728dab93dbe48c7b66159bd3c41fbb"
        ],
        [
            "intros H1 H2 Hl.",
            "VernacExtend",
            "bd5bdacc4c0c3be2d7e33e20862fefdb5c60d7da"
        ],
        [
            "eapply is_lim_seq_plus ; try eassumption.",
            "VernacExtend",
            "6f3ac066e2a3112006aca72edebe2d2fca0101d6"
        ],
        [
            "apply -> is_lim_seq_opp ; apply H2.",
            "VernacExtend",
            "8d32ea2cae1e1e25f89849b62df488f63c19cdff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_minus' (u v : nat -> R) (l1 l2 : R) : is_lim_seq u l1 -> is_lim_seq v l2 -> is_lim_seq (fun n => u n - v n) (l1 - l2).",
            "VernacStartTheoremProof",
            "9044d5e31a07e804f33dc85fb83c84c8654121f1"
        ],
        [
            "intros Hu Hv.",
            "VernacExtend",
            "5f83f1b777c4021d6dcbf70e9280765aa78a70b7"
        ],
        [
            "eapply is_lim_seq_minus ; try eassumption.",
            "VernacExtend",
            "70d15d7f1cabff05144a6c7666e2fa20de545a11"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_minus (u v : nat -> R) : ex_lim_seq u -> ex_lim_seq v -> ex_Rbar_minus (Lim_seq u) (Lim_seq v) -> ex_lim_seq (fun n => u n - v n).",
            "VernacStartTheoremProof",
            "3c5d01fabb929ed5181458d7d6dc010d56c3693b"
        ],
        [
            "intros [lu Hu] [lv Hv] Hl ; exists (Rbar_minus lu lv).",
            "VernacExtend",
            "0cf549621ad8e19af73b7ad17d8eb939d79daefd"
        ],
        [
            "eapply is_lim_seq_minus ; try eassumption.",
            "VernacExtend",
            "70d15d7f1cabff05144a6c7666e2fa20de545a11"
        ],
        [
            "rewrite -(is_lim_seq_unique u lu) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(is_lim_seq_unique v lv) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rbar_plus_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_minus (u v : nat -> R) : ex_lim_seq u -> ex_lim_seq v -> ex_Rbar_minus (Lim_seq u) (Lim_seq v) -> Lim_seq (fun n => u n - v n) = Rbar_minus (Lim_seq u) (Lim_seq v).",
            "VernacStartTheoremProof",
            "fc51c3c589f37b614a51a8be12db328265e8040b"
        ],
        [
            "intros Hu Hv Hl.",
            "VernacExtend",
            "b7ea59f305dca66d058b51d6610c6a4ba5615a83"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "eapply is_lim_seq_minus ; try apply Lim_seq_correct ; try assumption.",
            "VernacExtend",
            "c4ffe33ec7983d0c392b6f8a98250bd3eec54229"
        ],
        [
            "by apply Rbar_plus_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Rbar_inv : forall l : Rbar, l <> 0 -> filterlim Rinv (Rbar_locally l) (Rbar_locally (Rbar_inv l)).",
            "VernacStartTheoremProof",
            "2fbc8d91dab475bcd5d9fb154933acda0b57ae7e"
        ],
        [
            "intros l.",
            "VernacExtend",
            "dd0961f3ab7d1ab267b93180e66e020db2e681bc"
        ],
        [
            "wlog: l / (Rbar_lt 0 l).",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "intros Hw.",
            "VernacExtend",
            "b243b512d6be997ab4aca62bdf8014fc3baf2c4e"
        ],
        [
            "case: (Rbar_lt_le_dec 0 l) => Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Rbar_le_lt_or_eq_dec _ _ Hl) => // {Hl} Hl Hl0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -(Rbar_opp_involutive (Rbar_inv l)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (Rbar_opp (Rbar_inv l)) with (Rbar_inv (Rbar_opp l)) by (case: (l) Hl0 => [x | | ] //= Hl0 ; apply f_equal ; field ; contradict Hl0 ; by apply f_equal).",
            "VernacExtend",
            "dd0c358ad91d5175f7c6059e8737f7a86220595b"
        ],
        [
            "apply (filterlim_ext_loc (fun x => (- / - x))).",
            "VernacExtend",
            "5f23deaff55ca852e19b63f6276553495b017ae6"
        ],
        [
            "case: l Hl {Hl0} => [l| |] //= Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Ropp_0_gt_lt_contravar in Hl.",
            "VernacExtend",
            "33ee4b81fbfc4607f8f233a38f39f4aa4e6490c8"
        ],
        [
            "exists (mkposreal _ Hl) => /= x H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "field ; apply Rlt_not_eq.",
            "VernacExtend",
            "3d61fc49021dc0f559a71248c15be4b61b9bb5ab"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /= in H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rabs_lt_between' in H.",
            "VernacExtend",
            "8525227d58ddce633067f71b73d6bef299d1dd9e"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 H), Req_le.",
            "VernacExtend",
            "57342f417b98eee7f3c92d8b021b62ec44bf6f9b"
        ],
        [
            "apply Rplus_opp_r.",
            "VernacExtend",
            "6e524b0fc33b8472479085f1de7713dee8211181"
        ],
        [
            "exists 0 => x H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "field ; by apply Rlt_not_eq.",
            "VernacExtend",
            "3ee914fdf1169c2e6f3cdb8a22eb49a479eeb6d3"
        ],
        [
            "eapply filterlim_comp.",
            "VernacExtend",
            "887c72ce037fc4dc1c63092170c000188c601e2f"
        ],
        [
            "2: apply filterlim_Rbar_opp.",
            "VernacExtend",
            "d80839879231ade9b04a8b8513d831fc52255bc6"
        ],
        [
            "eapply filterlim_comp.",
            "VernacExtend",
            "887c72ce037fc4dc1c63092170c000188c601e2f"
        ],
        [
            "apply filterlim_Rbar_opp.",
            "VernacExtend",
            "4813069cfd33626caced6e914153ee6c7c2abc1e"
        ],
        [
            "apply Hw.",
            "VernacExtend",
            "8a661025dc679026191beb09fb44e1db1e042d6a"
        ],
        [
            "apply Rbar_opp_lt.",
            "VernacExtend",
            "e9f956698748ae73f2da5139cedab6fd2ab1ad4c"
        ],
        [
            "rewrite Rbar_opp_involutive /= Ropp_0 ; by apply Hl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "contradict Hl0.",
            "VernacExtend",
            "6fd29a0e94fe5685c3d0b3b05d3fdddb58ae5730"
        ],
        [
            "rewrite -(Rbar_opp_involutive l) Hl0 /= ; apply f_equal ; ring.",
            "VernacExtend",
            "04dda8c810385900b7ed567255f1e965dade64bd"
        ],
        [
            "case: l => [l| |] //= Hl _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "assert (H1: 0 < l / 2).",
            "VernacExtend",
            "e1ec12dd3649fea2600e4f2815f2673736a6b453"
        ],
        [
            "apply Rdiv_lt_0_compat with (1 := Hl).",
            "VernacExtend",
            "9428f8c116db1fa9a0ddf3edaab4ba1787197b8c"
        ],
        [
            "apply Rlt_R0_R2.",
            "VernacExtend",
            "56f346f7d456ea9d1535a96ac932a1c35a8ac229"
        ],
        [
            "intros P [eps HP].",
            "VernacExtend",
            "7724fc0c4f9593d55b17b85cc4dfb21ca70833c1"
        ],
        [
            "suff He : 0 < Rmin (eps * ((l / 2) * l)) (l / 2).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "exists (mkposreal _ He) => x /= Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "assert (H2: l / 2 < x).",
            "VernacExtend",
            "545bf9f64b107ab42d4052c05a80e3b7a3ef86fe"
        ],
        [
            "apply Rle_lt_trans with (l - l / 2).",
            "VernacExtend",
            "43b39e976ca6a9c2c56a59484f8bcfca9e8067ce"
        ],
        [
            "apply Req_le ; field.",
            "VernacExtend",
            "2174f1ccde93a7e8aa969bbcd29fd5556bc786df"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "apply Rlt_le_trans with (1 := Hx).",
            "VernacExtend",
            "17cfcea7cef1e39ddff4797053bb05abaf553802"
        ],
        [
            "apply Rmin_r.",
            "VernacExtend",
            "d165954e4d055817b42cbc8960efd3fee45e4f16"
        ],
        [
            "assert (H3: 0 < x).",
            "VernacExtend",
            "97842fac1cda938077ff14e2d7e83a41cddc4f46"
        ],
        [
            "now apply Rlt_trans with (l / 2).",
            "VernacExtend",
            "e3ec874e619995e086d32c7d6493d63d8d6daaf6"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (/ x + - / l) with (- (x - l) / (x * l)).",
            "VernacExtend",
            "e48cf5a6aa22a7e5b8a0cee3691a6f07060cbd4a"
        ],
        [
            "rewrite Rabs_div.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rabs_Ropp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_div_l.",
            "VernacExtend",
            "4198c2770a4c425c9ede77a90e885e8d7fd9f290"
        ],
        [
            "apply Rabs_pos_lt, Rgt_not_eq.",
            "VernacExtend",
            "29909f452789093e617bcbc9e3605a9270f8b376"
        ],
        [
            "now apply Rmult_lt_0_compat.",
            "VernacExtend",
            "0b58a12fcb8d63fafd34b13cb8f87300d1816fd6"
        ],
        [
            "apply Rlt_le_trans with (eps * ((l / 2) * l)).",
            "VernacExtend",
            "21fab3795f17c7e812824ec42ca7464a1f812b84"
        ],
        [
            "apply Rlt_le_trans with (1 := Hx).",
            "VernacExtend",
            "17cfcea7cef1e39ddff4797053bb05abaf553802"
        ],
        [
            "apply Rmin_l.",
            "VernacExtend",
            "19942458506c6b3427aea84d1ee7179f00e19f1c"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply Rlt_le, eps.",
            "VernacExtend",
            "a8e0b1a14c78104fc8aba2b0d10697fc4a297ac2"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (Rabs_pos_eq l).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Rle_trans with (2 := Rle_abs _).",
            "VernacExtend",
            "72c9ed1eeb9d16ecf7ec04b7601241cd3efc9de9"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "now apply Rmult_lt_0_compat.",
            "VernacExtend",
            "0b58a12fcb8d63fafd34b13cb8f87300d1816fd6"
        ],
        [
            "field ; split ; apply Rgt_not_eq => //.",
            "VernacExtend",
            "0c06de8c669133589897e25398180ee4c83840f2"
        ],
        [
            "apply Rmin_case.",
            "VernacExtend",
            "06bee284b3ab9229517272cc3728705bdc7b95ba"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "now apply Rmult_lt_0_compat.",
            "VernacExtend",
            "0b58a12fcb8d63fafd34b13cb8f87300d1816fd6"
        ],
        [
            "exact H1.",
            "VernacExtend",
            "c03ab82d1e411e1dcd211c59917a4946e039be00"
        ],
        [
            "intros P [eps HP].",
            "VernacExtend",
            "7724fc0c4f9593d55b17b85cc4dfb21ca70833c1"
        ],
        [
            "exists (/eps) => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Ropp_0 Rplus_0_r Rabs_Rinv.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(Rinv_involutive eps).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rinv_lt_contravar.",
            "VernacExtend",
            "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply Rinv_0_lt_compat, eps.",
            "VernacExtend",
            "bfbc815ac9421847007a3e9445815e5a117fb352"
        ],
        [
            "apply Rabs_pos_lt, Rgt_not_eq, Rlt_trans with (/eps).",
            "VernacExtend",
            "84212719bffee08a05e645dd3517b9c94c37f6ea"
        ],
        [
            "apply Rinv_0_lt_compat, eps.",
            "VernacExtend",
            "bfbc815ac9421847007a3e9445815e5a117fb352"
        ],
        [
            "exact Hn.",
            "VernacExtend",
            "086d6e64eafd90345d404c3eab0e41622b5023c7"
        ],
        [
            "apply Rlt_le_trans with (2 := Rle_abs _).",
            "VernacExtend",
            "e9ae6f7944f7c4212405dde246a6959f82ce32de"
        ],
        [
            "exact Hn.",
            "VernacExtend",
            "086d6e64eafd90345d404c3eab0e41622b5023c7"
        ],
        [
            "apply Rgt_not_eq, eps.",
            "VernacExtend",
            "1c12497694085df27edb8e9cdb7a54f19125c3df"
        ],
        [
            "apply Rgt_not_eq, Rlt_trans with (/eps).",
            "VernacExtend",
            "d6d1e61fefdd162b139fe55233589315155ccb71"
        ],
        [
            "apply Rinv_0_lt_compat, eps.",
            "VernacExtend",
            "bfbc815ac9421847007a3e9445815e5a117fb352"
        ],
        [
            "exact Hn.",
            "VernacExtend",
            "086d6e64eafd90345d404c3eab0e41622b5023c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_inv (u : nat -> R) (l : Rbar) : is_lim_seq u l -> l <> 0 -> is_lim_seq (fun n => / u n) (Rbar_inv l).",
            "VernacStartTheoremProof",
            "6b1944e451a9bf4db5b13e3609be1a6c66f5234a"
        ],
        [
            "intros Hu Hl.",
            "VernacExtend",
            "bbc61c117a9c2e9024dc22e33a7425317a220608"
        ],
        [
            "apply filterlim_comp with (1 := Hu).",
            "VernacExtend",
            "440b215d090256b180f238d8633f54e52e83c127"
        ],
        [
            "now apply filterlim_Rbar_inv.",
            "VernacExtend",
            "37c75cbd290513ba25ace90e324a1eea791eb489"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_inv (u : nat -> R) : ex_lim_seq u -> Lim_seq u <> 0 -> ex_lim_seq (fun n => / u n).",
            "VernacStartTheoremProof",
            "47e9754b2efce6ddd4541a4222555bcb6b370ea6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Lim_seq_correct in H.",
            "VernacExtend",
            "922d480e665803c534a201f4f7ce2163ea41d20e"
        ],
        [
            "exists (Rbar_inv (Lim_seq u)).",
            "VernacExtend",
            "ce0b451ebe2f8cdd63102f86b45a9650d8d1ed18"
        ],
        [
            "by apply is_lim_seq_inv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_inv (u : nat -> R) : ex_lim_seq u -> (Lim_seq u <> 0) -> Lim_seq (fun n => / u n) = Rbar_inv (Lim_seq u).",
            "VernacStartTheoremProof",
            "fbde5e41e59730c74d2c0e982144d6c3901fb514"
        ],
        [
            "move => Hl Hu.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "apply is_lim_seq_inv.",
            "VernacExtend",
            "91a251ae71de232eeb1039626ed60efb8a85a521"
        ],
        [
            "by apply Lim_seq_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Rbar_mult : forall x y z, is_Rbar_mult x y z -> filterlim (fun z => fst z * snd z) (filter_prod (Rbar_locally x) (Rbar_locally y)) (Rbar_locally z).",
            "VernacStartTheoremProof",
            "2a9ac09f30a4fbc655f865c0a2175376fe2d7687"
        ],
        [
            "intros x y z.",
            "VernacExtend",
            "8357c7ce661033f932c65582aab008de3b5d8530"
        ],
        [
            "wlog: x y z / (Rbar_le 0 x).",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "intros Hw.",
            "VernacExtend",
            "b243b512d6be997ab4aca62bdf8014fc3baf2c4e"
        ],
        [
            "case: (Rbar_le_lt_dec 0 x) => Hx Hp.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (filterlim_ext (fun z => - (- fst z * snd z))).",
            "VernacExtend",
            "e5d6fa861b78b7a55551c6ff8901183e91af966d"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite -(Rbar_opp_involutive z).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply filterlim_comp.",
            "VernacExtend",
            "887c72ce037fc4dc1c63092170c000188c601e2f"
        ],
        [
            "2: apply filterlim_Rbar_opp.",
            "VernacExtend",
            "d80839879231ade9b04a8b8513d831fc52255bc6"
        ],
        [
            "assert (Hw' : filterlim (fun z => fst z * snd z) (filter_prod (Rbar_locally (Rbar_opp x)) (Rbar_locally y)) (Rbar_locally (Rbar_opp z))).",
            "VernacExtend",
            "b82c520136deba771cef4e1d624051f7db69fa98"
        ],
        [
            "apply Hw.",
            "VernacExtend",
            "8a661025dc679026191beb09fb44e1db1e042d6a"
        ],
        [
            "replace (Finite 0) with (Rbar_opp 0) by apply (f_equal Finite), Ropp_0.",
            "VernacExtend",
            "5bd88362e4f14ccef118314796fe9cbebd76e5e0"
        ],
        [
            "apply Rbar_opp_le.",
            "VernacExtend",
            "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
        ],
        [
            "by apply Rbar_lt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_Rbar_mult_opp_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear Hw.",
            "VernacExtend",
            "68f30b0778fbed3cef26ba82948a5d8ec60e3e64"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "specialize (Hw' P HP).",
            "VernacExtend",
            "744663137f380432d086499e558a1f6a4e6e248d"
        ],
        [
            "destruct Hw' as [Q R H1 H2 H3].",
            "VernacExtend",
            "f352a71621396f6170ee86647f60b926782c6229"
        ],
        [
            "exists (fun x => Q (- x)) R.",
            "VernacExtend",
            "37e574e501aa3e86a173f3f172c8b529b1986bd7"
        ],
        [
            "now apply filterlim_Rbar_opp.",
            "VernacExtend",
            "ac154378317c3ac1818388cd53dbbd101b69e745"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "intros u v HQ HR.",
            "VernacExtend",
            "d9e95e2953215742e6b82076e36d19371e01936a"
        ],
        [
            "exact (H3 _ _ HQ HR).",
            "VernacExtend",
            "24b724206b50452bb61c2097426269d9d305fa53"
        ],
        [
            "wlog: x y z / (Rbar_le 0 y).",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "intros Hw.",
            "VernacExtend",
            "b243b512d6be997ab4aca62bdf8014fc3baf2c4e"
        ],
        [
            "case: (Rbar_le_lt_dec 0 y) => Hy Hx Hp.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (filterlim_ext (fun z => - (fst z * -snd z))).",
            "VernacExtend",
            "00a40743ec64c8972d25a4cb72c5ae1f4aaf3ce0"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite -(Rbar_opp_involutive z).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply filterlim_comp.",
            "VernacExtend",
            "887c72ce037fc4dc1c63092170c000188c601e2f"
        ],
        [
            "2: apply filterlim_Rbar_opp.",
            "VernacExtend",
            "d80839879231ade9b04a8b8513d831fc52255bc6"
        ],
        [
            "assert (Hw' : filterlim (fun z => fst z * snd z) (filter_prod (Rbar_locally x) (Rbar_locally (Rbar_opp y))) (Rbar_locally (Rbar_opp z))).",
            "VernacExtend",
            "0dd0d89845672ca3fb7af0c21a6be0e18e8d2be6"
        ],
        [
            "apply Hw.",
            "VernacExtend",
            "8a661025dc679026191beb09fb44e1db1e042d6a"
        ],
        [
            "replace (Finite 0) with (Rbar_opp 0) by apply (f_equal Finite), Ropp_0.",
            "VernacExtend",
            "5bd88362e4f14ccef118314796fe9cbebd76e5e0"
        ],
        [
            "apply Rbar_opp_le.",
            "VernacExtend",
            "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
        ],
        [
            "by apply Rbar_lt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_Rbar_mult_opp_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear Hw.",
            "VernacExtend",
            "68f30b0778fbed3cef26ba82948a5d8ec60e3e64"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "specialize (Hw' P HP).",
            "VernacExtend",
            "744663137f380432d086499e558a1f6a4e6e248d"
        ],
        [
            "destruct Hw' as [Q R H1 H2 H3].",
            "VernacExtend",
            "f352a71621396f6170ee86647f60b926782c6229"
        ],
        [
            "exists Q (fun x => R (- x)).",
            "VernacExtend",
            "cea2a222be8142bb7830853ae404a98564c12cc3"
        ],
        [
            "exact H1.",
            "VernacExtend",
            "c03ab82d1e411e1dcd211c59917a4946e039be00"
        ],
        [
            "now apply filterlim_Rbar_opp.",
            "VernacExtend",
            "ac154378317c3ac1818388cd53dbbd101b69e745"
        ],
        [
            "intros u v HQ HR.",
            "VernacExtend",
            "d9e95e2953215742e6b82076e36d19371e01936a"
        ],
        [
            "exact (H3 _ _ HQ HR).",
            "VernacExtend",
            "24b724206b50452bb61c2097426269d9d305fa53"
        ],
        [
            "wlog: x y z / (Rbar_le x y).",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "intros Hw.",
            "VernacExtend",
            "b243b512d6be997ab4aca62bdf8014fc3baf2c4e"
        ],
        [
            "case: (Rbar_le_lt_dec x y) => Hl Hx Hy Hp.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (Hw' : filterlim (fun z => fst z * snd z) (filter_prod (Rbar_locally y) (Rbar_locally x)) (Rbar_locally z)).",
            "VernacExtend",
            "b01cb8f88a1c21e263b148a0cfd0ea576064a252"
        ],
        [
            "apply Hw ; try assumption.",
            "VernacExtend",
            "f6484a4f9cc02220905f4b8335c93dd54b887bab"
        ],
        [
            "by apply Rbar_lt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_Rbar_mult_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "specialize (Hw' P HP).",
            "VernacExtend",
            "744663137f380432d086499e558a1f6a4e6e248d"
        ],
        [
            "destruct Hw' as [Q R H1 H2 H3].",
            "VernacExtend",
            "f352a71621396f6170ee86647f60b926782c6229"
        ],
        [
            "exists R Q ; try assumption.",
            "VernacExtend",
            "9bc736e009165734dbcb9f5dab1528d8bd8133b7"
        ],
        [
            "intros u v HR HQ.",
            "VernacExtend",
            "501576b9f4d6d8f9dc88ee8717250acde22a7cca"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact (H3 _ _ HQ HR).",
            "VernacExtend",
            "24b724206b50452bb61c2097426269d9d305fa53"
        ],
        [
            "case: x => [x| | ] ; case: y => [y| | ] ; case: z => [z| | ] Hl Hy Hx Hp ; try (by case: Hl) || (by case: Hx) || (by case: Hy).",
            "VernacExtend",
            "0cb6869b37df803ccde0ed4635a5911c25599f64"
        ],
        [
            "case: Hp => <-.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "intros P [eps HP].",
            "VernacExtend",
            "7724fc0c4f9593d55b17b85cc4dfb21ca70833c1"
        ],
        [
            "assert (He: 0 < eps / (x + y + 1)).",
            "VernacExtend",
            "06a034b6381747f4d62ec3f80cbab1fab271d1ab"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Rplus_le_lt_0_compat.",
            "VernacExtend",
            "f52234f44384644fc6f21adef182d5c4067417f5"
        ],
        [
            "now apply Rplus_le_le_0_compat.",
            "VernacExtend",
            "212bd0cfdb6d15c6d136e4cad2b1da99d68c01e3"
        ],
        [
            "apply Rlt_0_1.",
            "VernacExtend",
            "c3f675388bf844e0740197fd71afa66e5eef091d"
        ],
        [
            "set (d := mkposreal _ (Rmin_stable_in_posreal (mkposreal _ Rlt_0_1) (mkposreal _ He))).",
            "VernacExtend",
            "a1e52a51b8d350b99994570e3f6e01cec8299b39"
        ],
        [
            "exists (fun u => Rabs (u - x) < d) (fun v => Rabs (v - y) < d).",
            "VernacExtend",
            "a83f9422b83e05004b7f91b0ee5a7f4d8387a32a"
        ],
        [
            "now exists d.",
            "VernacExtend",
            "8cb9716f0cfc26a3dc7cb038bd2350931dc0fd39"
        ],
        [
            "now exists d.",
            "VernacExtend",
            "8cb9716f0cfc26a3dc7cb038bd2350931dc0fd39"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros u v Hu Hv.",
            "VernacExtend",
            "696e9c33889b1c79af1fedb31090a1f22c9b0b8f"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (u * v + - (x * y)) with (x * (v - y) + y * (u - x) + (u - x) * (v - y)) by ring.",
            "VernacExtend",
            "263ef878eea0477284475804f048f7b0f517b684"
        ],
        [
            "replace (pos eps) with (x * (eps / (x + y + 1)) + y * (eps / (x + y + 1)) + 1 * (eps / (x + y + 1))).",
            "VernacExtend",
            "f0538dc434953cebbb740d46e827e5c7acc46a5e"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "apply Rplus_le_lt_compat.",
            "VernacExtend",
            "f66049ccc49f7b413e6a8d914b7b362efc3d9252"
        ],
        [
            "apply Rle_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "fc3ac622a6b1c2c359ba4392074f9e26d9cb28da"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "rewrite Rabs_mult Rabs_pos_eq //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_l with (1 := Hx).",
            "VernacExtend",
            "8208dac91c0860a1475df432b6166153eea84300"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rlt_le_trans with (1 := Hv).",
            "VernacExtend",
            "4df6d4899f7a34e1d7336370454a2294f154ab59"
        ],
        [
            "apply Rmin_r.",
            "VernacExtend",
            "d165954e4d055817b42cbc8960efd3fee45e4f16"
        ],
        [
            "rewrite Rabs_mult Rabs_pos_eq //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_l with (1 := Hy).",
            "VernacExtend",
            "e5da1cff71bb4443e84c785c13660924af5331d8"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply Rlt_le_trans with (1 := Hu).",
            "VernacExtend",
            "6a71a6268a3c6a7dfce4decc875083a7bce4eaea"
        ],
        [
            "apply Rmin_r.",
            "VernacExtend",
            "d165954e4d055817b42cbc8960efd3fee45e4f16"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_0_lt_compat ; try apply Rabs_pos.",
            "VernacExtend",
            "4de668282e5cd85e0644906849e9f199daa7e19e"
        ],
        [
            "apply Rlt_le_trans with (1 := Hu).",
            "VernacExtend",
            "6a71a6268a3c6a7dfce4decc875083a7bce4eaea"
        ],
        [
            "apply Rmin_l.",
            "VernacExtend",
            "19942458506c6b3427aea84d1ee7179f00e19f1c"
        ],
        [
            "apply Rlt_le_trans with (1 := Hv).",
            "VernacExtend",
            "4df6d4899f7a34e1d7336370454a2294f154ab59"
        ],
        [
            "apply Rmin_r.",
            "VernacExtend",
            "d165954e4d055817b42cbc8960efd3fee45e4f16"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply Rplus_le_lt_0_compat.",
            "VernacExtend",
            "f52234f44384644fc6f21adef182d5c4067417f5"
        ],
        [
            "now apply Rplus_le_le_0_compat.",
            "VernacExtend",
            "212bd0cfdb6d15c6d136e4cad2b1da99d68c01e3"
        ],
        [
            "apply Rlt_0_1.",
            "VernacExtend",
            "c3f675388bf844e0740197fd71afa66e5eef091d"
        ],
        [
            "move: Hp ; unfold is_Rbar_mult, Rbar_mult'.",
            "VernacExtend",
            "b32bf9ed0c4238661494e26382253167acae22a9"
        ],
        [
            "case: Rle_dec => // Hx'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => {Hl Hx Hy Hx'} // Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: Hp ; unfold is_Rbar_mult, Rbar_mult'.",
            "VernacExtend",
            "b32bf9ed0c4238661494e26382253167acae22a9"
        ],
        [
            "case: Rle_dec => // Hx'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => {Hl Hx Hy Hx'} // Hx _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "intros P [N HN].",
            "VernacExtend",
            "49e72385e25f38319889834e3eecd05dfb798dc2"
        ],
        [
            "exists (fun u => Rabs (u - x) < x / 2) (fun v => Rmax 0 (N / (x / 2)) < v).",
            "VernacExtend",
            "83e4818d206f7a1c149a246d1df17b9548e38390"
        ],
        [
            "now exists (pos_div_2 (mkposreal _ Hx)).",
            "VernacExtend",
            "0ecdda679f504fcb771306c6226f13bf6a04d801"
        ],
        [
            "now exists (Rmax 0 (N / (x / 2))).",
            "VernacExtend",
            "2c19186f8d5688dda96af7d4d2f0d84bc42a30af"
        ],
        [
            "intros u v Hu Hv.",
            "VernacExtend",
            "696e9c33889b1c79af1fedb31090a1f22c9b0b8f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply HN.",
            "VernacExtend",
            "90fb629adaf024bbf40093c9f063576731105f38"
        ],
        [
            "apply Rle_lt_trans with ((x - x / 2) * Rmax 0 (N / (x / 2))).",
            "VernacExtend",
            "afdb3e2e2f7860ecdb9205d2f7bea33ef1cd32cb"
        ],
        [
            "apply Rmax_case_strong => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Rmult_0_r ; apply Rnot_lt_le ; contradict H ; apply Rlt_not_le.",
            "VernacExtend",
            "ab8bca41f2617b1ba2476d70efd048693b0793d7"
        ],
        [
            "repeat apply Rdiv_lt_0_compat => //.",
            "VernacExtend",
            "d36194af035d418008b3fae8e9785d1af2d8af96"
        ],
        [
            "by apply Rlt_R0_R2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Req_le ; field.",
            "VernacExtend",
            "2174f1ccde93a7e8aa969bbcd29fd5556bc786df"
        ],
        [
            "by apply Rgt_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rmult_le_0_lt_compat.",
            "VernacExtend",
            "a69851b3906699be18ff8bb93fad9e56dcadbf0f"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "apply Rmax_l.",
            "VernacExtend",
            "e8bdf305d751b877364ec9794b15c2d6e134dc98"
        ],
        [
            "now apply Rabs_lt_between'.",
            "VernacExtend",
            "ed6d2bab976354ab53e690f9e5dbe2b16f7eb39f"
        ],
        [
            "exact Hv.",
            "VernacExtend",
            "3c0371caa26cf9032949530f1d6ace503cee81e4"
        ],
        [
            "move: Hp ; unfold is_Rbar_mult, Rbar_mult'.",
            "VernacExtend",
            "b32bf9ed0c4238661494e26382253167acae22a9"
        ],
        [
            "case: Rle_dec => // Hx'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => {Hl Hx Hy Hx'} // Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "intros P [N HN].",
            "VernacExtend",
            "49e72385e25f38319889834e3eecd05dfb798dc2"
        ],
        [
            "exists (fun u => 1 < u) (fun v => Rabs N < v).",
            "VernacExtend",
            "32722e3e35350a3b87cc82ee3e98c22cf4a4963c"
        ],
        [
            "now exists 1.",
            "VernacExtend",
            "d45a6c3f593137737025314063e6fb7edf2088f9"
        ],
        [
            "now exists (Rabs N).",
            "VernacExtend",
            "b18307d8023a9120ed0dd67c7ba5a9325dc9df90"
        ],
        [
            "intros u v Hu Hv.",
            "VernacExtend",
            "696e9c33889b1c79af1fedb31090a1f22c9b0b8f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply HN.",
            "VernacExtend",
            "90fb629adaf024bbf40093c9f063576731105f38"
        ],
        [
            "apply Rle_lt_trans with (1 := Rle_abs _).",
            "VernacExtend",
            "135a8d900205d7b612754e3cd7bd2bca409d80e3"
        ],
        [
            "rewrite -(Rmult_1_l (Rabs N)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_0_lt_compat.",
            "VernacExtend",
            "a69851b3906699be18ff8bb93fad9e56dcadbf0f"
        ],
        [
            "by apply Rle_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact Hu.",
            "VernacExtend",
            "2ef276b73f30adea6147a9e5bb93e0371d61e365"
        ],
        [
            "exact Hv.",
            "VernacExtend",
            "3c0371caa26cf9032949530f1d6ace503cee81e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_mult (u v : nat -> R) (l1 l2 l : Rbar) : is_lim_seq u l1 -> is_lim_seq v l2 -> is_Rbar_mult l1 l2 l -> is_lim_seq (fun n => u n * v n) l.",
            "VernacStartTheoremProof",
            "1445a8c5d2d865ea99d28f0fcfc74a8cecd1b0d3"
        ],
        [
            "intros Hu Hv Hp.",
            "VernacExtend",
            "d4796a9fcd74aab4e363c1adff7bbd25b0d313dd"
        ],
        [
            "eapply filterlim_comp_2 ; try eassumption.",
            "VernacExtend",
            "7c3053626bc57cbf6f1cfd59e4d64fef6c071b19"
        ],
        [
            "now apply filterlim_Rbar_mult.",
            "VernacExtend",
            "6c88027d9cf0b94e6ec2d8dfd742cb4c0989128a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_mult' (u v : nat -> R) (l1 l2 : R) : is_lim_seq u l1 -> is_lim_seq v l2 -> is_lim_seq (fun n => u n * v n) (l1 * l2).",
            "VernacStartTheoremProof",
            "eb873bf90811dd2075426a628d2f2a32c27c74ed"
        ],
        [
            "intros Hu Hv.",
            "VernacExtend",
            "5f83f1b777c4021d6dcbf70e9280765aa78a70b7"
        ],
        [
            "eapply is_lim_seq_mult ; try eassumption.",
            "VernacExtend",
            "342e7d2d25361dacab5493f99d0c53997a811416"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_mult (u v : nat -> R) : ex_lim_seq u -> ex_lim_seq v -> ex_Rbar_mult (Lim_seq u) (Lim_seq v) -> ex_lim_seq (fun n => u n * v n).",
            "VernacStartTheoremProof",
            "3622b63e10898887f03526552ceb323ae239279f"
        ],
        [
            "intros [lu Hu] [lv Hv] H ; exists (Rbar_mult lu lv).",
            "VernacExtend",
            "e7785648802774aea7e675c0d36b3a44ed1e0506"
        ],
        [
            "eapply is_lim_seq_mult ; try eassumption.",
            "VernacExtend",
            "342e7d2d25361dacab5493f99d0c53997a811416"
        ],
        [
            "rewrite -(is_lim_seq_unique u lu) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(is_lim_seq_unique v lv) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rbar_mult_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_mult (u v : nat -> R) : ex_lim_seq u -> ex_lim_seq v -> ex_Rbar_mult (Lim_seq u) (Lim_seq v) -> Lim_seq (fun n => u n * v n) = Rbar_mult (Lim_seq u) (Lim_seq v).",
            "VernacStartTheoremProof",
            "014af07085e44d19c9ee192a76641198b8ee865d"
        ],
        [
            "move => H1 H2 Hl.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "eapply is_lim_seq_mult ; try apply Lim_seq_correct ; try eassumption.",
            "VernacExtend",
            "26546f4ff2c85296faca406131963361e0d66d1d"
        ],
        [
            "by apply Rbar_mult_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Rbar_mult_l : forall (a : R) (l : Rbar), filterlim (Rmult a) (Rbar_locally l) (Rbar_locally (Rbar_mult a l)).",
            "VernacStartTheoremProof",
            "1ace117330d40ed18c4cbbca77a057e66042f488"
        ],
        [
            "intros a l.",
            "VernacExtend",
            "c6e1e3cc6e0e03269c9c78383c22e173bc25ab2e"
        ],
        [
            "case: (Req_dec a 0) => [->|Ha].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply (filterlim_ext (fun _ => 0)).",
            "VernacExtend",
            "8c2266a43371a8d455196e6453b450f011884c92"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply sym_eq, Rmult_0_l.",
            "VernacExtend",
            "ddd890ffe6158680b9f503bc279b65c8009f5b5c"
        ],
        [
            "rewrite Rbar_mult_0_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply filterlim_const.",
            "VernacExtend",
            "ff971edf84d1cf6e134869f4729acc40969816e1"
        ],
        [
            "eapply filterlim_comp_2.",
            "VernacExtend",
            "738a6ac74a2b7b80aac28fb98e1d3a3cccbca8d5"
        ],
        [
            "apply filterlim_const.",
            "VernacExtend",
            "ff971edf84d1cf6e134869f4729acc40969816e1"
        ],
        [
            "apply filterlim_id.",
            "VernacExtend",
            "0c9885f23d2ca915379801b6ded9080d6c98b8f7"
        ],
        [
            "eapply (filterlim_Rbar_mult a l).",
            "VernacExtend",
            "090276c038fe36b19102946a123808209d9605bc"
        ],
        [
            "apply Rbar_mult_correct ; by case: l.",
            "VernacExtend",
            "3652695a9bb11f2b88d927485ab13101968b8e40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Rbar_mult_r : forall (a : R) (l : Rbar), filterlim (fun x => Rmult x a) (Rbar_locally l) (Rbar_locally (Rbar_mult l a)).",
            "VernacStartTheoremProof",
            "bf65d06a8ffcc5f6b2db3157d52667732927ff00"
        ],
        [
            "intros a l.",
            "VernacExtend",
            "c6e1e3cc6e0e03269c9c78383c22e173bc25ab2e"
        ],
        [
            "apply (filterlim_ext (fun x => a * x)).",
            "VernacExtend",
            "bf7e0628de64c2fd1e7b4db1ae1b5f489aa6cf60"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "rewrite Rbar_mult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply filterlim_Rbar_mult_l.",
            "VernacExtend",
            "59de1de1c333474322aebaa647d87ce75e4cd7ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_scal_l (u : nat -> R) (a : R) (lu : Rbar) : is_lim_seq u lu -> is_lim_seq (fun n => a * u n) (Rbar_mult a lu).",
            "VernacStartTheoremProof",
            "98e77751920b26647f7fd93229f7714e2ffbd866"
        ],
        [
            "intros Hu H.",
            "VernacExtend",
            "a525e0ec534be122dc65e6d41f9bbd012fbcada3"
        ],
        [
            "apply filterlim_comp with (1 := Hu).",
            "VernacExtend",
            "440b215d090256b180f238d8633f54e52e83c127"
        ],
        [
            "by apply filterlim_Rbar_mult_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_scal_l (u : nat -> R) (a : R) : ex_lim_seq u -> ex_lim_seq (fun n => a * u n).",
            "VernacStartTheoremProof",
            "7025e55bd9edbc6a01d6e25f0b8c5bf525604ca7"
        ],
        [
            "move => [l H].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (Rbar_mult a l).",
            "VernacExtend",
            "9a8820fb1c1536d302a33bdc48689bfe4afb9175"
        ],
        [
            "eapply is_lim_seq_scal_l ; try eassumption.",
            "VernacExtend",
            "4aad608a6217ed2c410ef4bd05deee2eb27fa37c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_scal_l (u : nat -> R) (a : R) : Lim_seq (fun n => a * u n) = Rbar_mult a (Lim_seq u).",
            "VernacStartTheoremProof",
            "f1414b3b4154d6ecd45072842c046d594e79ac3c"
        ],
        [
            "case: (Req_dec a 0) => [ -> | Ha].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -(Lim_seq_ext (fun _ => 0)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Lim_seq_const.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Lim_seq u) => [x | | ] //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite Rmult_0_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Rle_dec (Rle_refl 0) => // H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rlt_irrefl 0) => // _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec (Rle_refl 0) => // H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rlt_irrefl 0) => // _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => n ; by rewrite Rmult_0_l.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "wlog: a u Ha / (0 < a) => [Hw | {Ha} Ha].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rlt_le_dec 0 a) => Ha'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Ha' => // Ha'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -(Lim_seq_ext (fun n => - a * - u n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Rbar_mult_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Lim_seq_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Hw.",
            "VernacExtend",
            "8a661025dc679026191beb09fb44e1db1e042d6a"
        ],
        [
            "contradict Ha ; rewrite -(Ropp_involutive a) Ha ; ring.",
            "VernacExtend",
            "35c67b326c6d07f9fe14365627d5ff7ae0b795cb"
        ],
        [
            "apply Ropp_lt_cancel ; by rewrite Ropp_0 Ropp_involutive.",
            "VernacExtend",
            "9009c9b957a86d8010aa0e0c1ca31f0be121be98"
        ],
        [
            "move => n ; ring.",
            "VernacExtend",
            "550d555a37db07b848ee1c0dcb59e4bba252650f"
        ],
        [
            "rewrite /Lim_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite {2}/LimSup_seq ; case: ex_LimSup_seq => ls Hs ; rewrite {2}/LimInf_seq ; case: ex_LimInf_seq => li Hi ; simpl proj1_sig.",
            "VernacExtend",
            "ce1f1b3599c3d993a898c8b5f55b0a7a8d71fcff"
        ],
        [
            "apply (is_LimSup_seq_scal_pos a) in Hs => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (is_LimInf_seq_scal_pos a) in Hi => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (is_LimSup_seq_unique _ _ Hs).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (is_LimInf_seq_unique _ _ Hi).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ls {Hs} => [ls | | ] ; case: li {Hi} => [li | | ] //= ; case: (Rle_dec 0 a) (Rlt_le _ _ Ha) => // Ha' _ ; case: (Rle_lt_or_eq_dec 0 a Ha') (Rlt_not_eq _ _ Ha) => //= _ _ ; apply f_equal ; field.",
            "VernacExtend",
            "2a8a7eb883b87aebd169ce3cae960de96d74dfc1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_scal_r (u : nat -> R) (a : R) (lu : Rbar) : is_lim_seq u lu -> is_lim_seq (fun n => u n * a) (Rbar_mult lu a).",
            "VernacStartTheoremProof",
            "5dfe25f852e5fa9f0c79ac206bf7931bdba7e5fe"
        ],
        [
            "move => Hu Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_seq_ext with ((fun n : nat => a * u n)).",
            "VernacExtend",
            "3a584f3b6666deaf79d24dd96e007d3ae6356c47"
        ],
        [
            "move => n ; by apply Rmult_comm.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "rewrite Rbar_mult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_lim_seq_scal_l.",
            "VernacExtend",
            "7848e953466aa3acf97d4e14c39da5f5c9ea3a2e"
        ],
        [
            "by apply Hu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_scal_r (u : nat -> R) (a : R) : ex_lim_seq u -> ex_lim_seq (fun n => u n * a).",
            "VernacStartTheoremProof",
            "fb9711913ff566a422902c81912cbcc83d6b3445"
        ],
        [
            "move => Hu.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ex_lim_seq_ext with ((fun n : nat => a * u n)) ; try by intuition.",
            "VernacExtend",
            "17cae091f828f3c66ef2076cb536aa8ef4e8f67b"
        ],
        [
            "apply ex_lim_seq_scal_l.",
            "VernacExtend",
            "4f2b51c5b4f7e80592532b2a50c8727eb6686b2b"
        ],
        [
            "by apply Hu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_scal_r (u : nat -> R) (a : R) : Lim_seq (fun n => u n * a) = Rbar_mult (Lim_seq u) a.",
            "VernacStartTheoremProof",
            "134875756b2f1b2d67ecd2adae5f289de7b9e70d"
        ],
        [
            "rewrite Rbar_mult_comm -Lim_seq_scal_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Lim_seq_ext ; by intuition.",
            "VernacExtend",
            "7bb0cd75539152e66c8157bb85a60c20daef01dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_div (u v : nat -> R) (l1 l2 l : Rbar) : is_lim_seq u l1 -> is_lim_seq v l2 -> l2 <> 0 -> is_Rbar_div l1 l2 l -> is_lim_seq (fun n => u n / v n) l.",
            "VernacStartTheoremProof",
            "fc17b1aac5cc6ea98c0c8c08da0809ea3f41818c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply is_lim_seq_mult ; try eassumption.",
            "VernacExtend",
            "342e7d2d25361dacab5493f99d0c53997a811416"
        ],
        [
            "now apply is_lim_seq_inv.",
            "VernacExtend",
            "bdbf5e7837267cccaa52aa5f509b820608e872a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_div' (u v : nat -> R) (l1 l2 : R) : is_lim_seq u l1 -> is_lim_seq v l2 -> l2 <> 0 -> is_lim_seq (fun n => u n / v n) (l1 / l2).",
            "VernacStartTheoremProof",
            "5cabf16b9a020696ad224c5440d9e98addbf78f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply is_lim_seq_div ; try eassumption.",
            "VernacExtend",
            "7f04860b9e67212dcb4319ba5d4d806166072c35"
        ],
        [
            "now contradict H1 ; case: H1 => ->.",
            "VernacExtend",
            "ba2b8288bf4faf812d06e7db464dfa37cee8d3d6"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_div (u v : nat -> R) : ex_lim_seq u -> ex_lim_seq v -> Lim_seq v <> 0 -> ex_Rbar_div (Lim_seq u) (Lim_seq v) -> ex_lim_seq (fun n => u n / v n).",
            "VernacStartTheoremProof",
            "fdd34db9141bc7d09b4aaa104d7c28146c0d6ac9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Lim_seq_correct in H.",
            "VernacExtend",
            "922d480e665803c534a201f4f7ce2163ea41d20e"
        ],
        [
            "apply Lim_seq_correct in H0.",
            "VernacExtend",
            "c12e4ac3d8d1cc8163a18ecb26d2024f4ba93883"
        ],
        [
            "exists (Rbar_div (Lim_seq u) (Lim_seq v)).",
            "VernacExtend",
            "462ea76f767c1a267389c90ee81ca7b0a120dcb8"
        ],
        [
            "eapply is_lim_seq_div ; try eassumption.",
            "VernacExtend",
            "7f04860b9e67212dcb4319ba5d4d806166072c35"
        ],
        [
            "by apply Rbar_mult_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_div (u v : nat -> R) : ex_lim_seq u -> ex_lim_seq v -> (Lim_seq v <> 0) -> ex_Rbar_div (Lim_seq u) (Lim_seq v) -> Lim_seq (fun n => u n / v n) = Rbar_div (Lim_seq u) (Lim_seq v).",
            "VernacStartTheoremProof",
            "ecca1a36861d5e7c6618d16c32c52a3042e5fa6b"
        ],
        [
            "move => H0 H1 H2 H3.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "eapply is_lim_seq_div ; try apply Lim_seq_correct ; try eassumption.",
            "VernacExtend",
            "9de844dacf6dbb737731df8a5f3db1b6238fc916"
        ],
        [
            "by apply Rbar_mult_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_adj (u v : nat -> R) : (forall n, u n <= u (S n)) -> (forall n, v (S n) <= v n) -> is_lim_seq (fun n => v n - u n) 0 -> ex_finite_lim_seq u /\\ ex_finite_lim_seq v /\\ Lim_seq u = Lim_seq v.",
            "VernacStartTheoremProof",
            "767dfd56d00f00375821de61721dd861ce93610a"
        ],
        [
            "move => Hu Hv H0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suff H : forall n, u n <= v n.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "suff Eu : ex_finite_lim_seq u.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "split ; try auto.",
            "VernacExtend",
            "739e71f9438b4396235f07035cdc13e03774a328"
        ],
        [
            "suff Ev : ex_finite_lim_seq v.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "split ; try auto.",
            "VernacExtend",
            "739e71f9438b4396235f07035cdc13e03774a328"
        ],
        [
            "apply is_lim_seq_unique in H0.",
            "VernacExtend",
            "271dcea6d2d35fb90e1f52d9d5ee5077ba6d74b0"
        ],
        [
            "rewrite Lim_seq_minus in H0 ; try by intuition.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "apply ex_finite_lim_seq_correct in Eu.",
            "VernacExtend",
            "a0e25ee98ef0b81a30e321af9692852cc62f1ded"
        ],
        [
            "apply ex_finite_lim_seq_correct in Ev.",
            "VernacExtend",
            "837a1c585e8d6b820952a71033e63c319617e86d"
        ],
        [
            "rewrite -(proj2 Eu) -(proj2 Ev) /= in H0 |- *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rbar_finite_eq in H0 ; apply Rbar_finite_eq.",
            "VernacExtend",
            "5ba720fbc0a58df6b46b0f4b1c5d85b05c4c7d77"
        ],
        [
            "by apply sym_eq, Rminus_diag_uniq, H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply ex_finite_lim_seq_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply ex_finite_lim_seq_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_finite_lim_seq_correct in Eu.",
            "VernacExtend",
            "a0e25ee98ef0b81a30e321af9692852cc62f1ded"
        ],
        [
            "apply ex_finite_lim_seq_correct in Ev.",
            "VernacExtend",
            "837a1c585e8d6b820952a71033e63c319617e86d"
        ],
        [
            "by rewrite -(proj2 Eu) -(proj2 Ev).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_finite_lim_seq_decr with (u O) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => n ; apply Rle_trans with (2 := H _).",
            "VernacExtend",
            "31bcee32422d88312d61d9d5dbded33d5457f8d5"
        ],
        [
            "elim: n => [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with (2 := Hu _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_finite_lim_seq_incr with (v O) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => n ; apply Rle_trans with (1 := H _).",
            "VernacExtend",
            "149e0d31fa77459555863cc1cb27bed1f2f58cdd"
        ],
        [
            "elim: n => [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with (1 := Hv _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => n0 ; apply Rnot_lt_le ; move/Rminus_lt_0 => H.",
            "VernacExtend",
            "e1a4c00b6c1309f13c107e7050b7a829aed80b92"
        ],
        [
            "apply is_lim_seq_spec in H0.",
            "VernacExtend",
            "5a4324f731da53821c0cb36539843224b0f497c7"
        ],
        [
            "case: (H0 (mkposreal _ H)) => /= {H0} N H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (H0 _ (le_plus_r n0 N)) ; apply Rle_not_lt.",
            "VernacExtend",
            "45df2658267bb1e26f700ab173e1780b1b3bb6a5"
        ],
        [
            "rewrite Rminus_0_r ; apply Rle_trans with (2 := Rabs_maj2 _).",
            "VernacExtend",
            "52bbb6b0ded4078e70dd7d0ece3cecc0c4e038d6"
        ],
        [
            "rewrite Ropp_minus_distr'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat, Ropp_le_contravar.",
            "VernacExtend",
            "fff6414836a79acabc8e2bf6955c243738a1aa01"
        ],
        [
            "elim: (N) => [ | m IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite plus_0_r ; apply Rle_refl.",
            "VernacExtend",
            "2d67a18abe5a05ff39bf986b33b6e7085865b7a4"
        ],
        [
            "rewrite -plus_n_Sm ; by apply Rle_trans with (2 := Hu _).",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "elim: (N) => [ | m IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite plus_0_r ; apply Rle_refl.",
            "VernacExtend",
            "2d67a18abe5a05ff39bf986b33b6e7085865b7a4"
        ],
        [
            "rewrite -plus_n_Sm ; by apply Rle_trans with (1 := Hv _).",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_continuous (f : R -> R) (u : nat -> R) (l : R) : continuity_pt f l -> is_lim_seq u l -> is_lim_seq (fun n => f (u n)) (f l).",
            "VernacStartTheoremProof",
            "3281f7ae49b34dc36b1f88f924c6f06f6610e1a7"
        ],
        [
            "move => Cf Hu.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply continuity_pt_filterlim in Cf.",
            "VernacExtend",
            "73ae1e7add4b664c2296e31a449355bb785b4a76"
        ],
        [
            "apply filterlim_comp with (1 := Hu).",
            "VernacExtend",
            "440b215d090256b180f238d8633f54e52e83c127"
        ],
        [
            "exact Cf.",
            "VernacExtend",
            "533d50bb6b90d523f11661b15bea6d98ba7437c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_Rabs : forall l : Rbar, filterlim Rabs (Rbar_locally l) (Rbar_locally (Rbar_abs l)).",
            "VernacStartTheoremProof",
            "e8d7b9c9539e7bf7508a424f89f0fae044632a16"
        ],
        [
            "case => [l| |] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply @filterlim_norm.",
            "VernacExtend",
            "1a0066f4e21c8219e0d2803d7303ef1ef8a88ac6"
        ],
        [
            "intros P [N HP].",
            "VernacExtend",
            "842afff1762048990b7cbab9ba118a9706122a57"
        ],
        [
            "exists N => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "apply Rlt_le_trans with (1 := Hx).",
            "VernacExtend",
            "17cfcea7cef1e39ddff4797053bb05abaf553802"
        ],
        [
            "apply Rle_abs.",
            "VernacExtend",
            "7222806352a7f01b48467f271bcdc35194fd1877"
        ],
        [
            "intros P [N HP].",
            "VernacExtend",
            "842afff1762048990b7cbab9ba118a9706122a57"
        ],
        [
            "exists (-N) => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "apply Rlt_le_trans with (2 := Rabs_maj2 _), Ropp_lt_cancel.",
            "VernacExtend",
            "9954873ef12fb15bc5333bc0e76b10dc33b6460e"
        ],
        [
            "by rewrite Ropp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_abs (u : nat -> R) (l : Rbar) : is_lim_seq u l -> is_lim_seq (fun n => Rabs (u n)) (Rbar_abs l).",
            "VernacStartTheoremProof",
            "0f52a4166a6c2f72ee4ed3d530e849fa25e21c30"
        ],
        [
            "intros Hu.",
            "VernacExtend",
            "354a231d2e89381b80441c83de51a8623736a173"
        ],
        [
            "apply filterlim_comp with (1 := Hu).",
            "VernacExtend",
            "440b215d090256b180f238d8633f54e52e83c127"
        ],
        [
            "apply filterlim_Rabs.",
            "VernacExtend",
            "5e60a5380ab576c418a496fd45abe517bae0cfeb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_abs (u : nat -> R) : ex_lim_seq u -> ex_lim_seq (fun n => Rabs (u n)).",
            "VernacStartTheoremProof",
            "51f087041b674866586dc1cf9f0e2da8b0a9ff5d"
        ],
        [
            "move => [l Hu].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (Rbar_abs l) ; by apply is_lim_seq_abs.",
            "VernacExtend",
            "c971f77756703a70a8fc638b7fd9f57ed9105df4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_abs (u : nat -> R) : ex_lim_seq u -> Lim_seq (fun n => Rabs (u n)) = Rbar_abs (Lim_seq u).",
            "VernacStartTheoremProof",
            "b14b9d6527b0b7d7ff307ea9c10405853fe4dfa0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "apply is_lim_seq_abs.",
            "VernacExtend",
            "4d0dd4221656d49beb5d00e3b85662f1d307f7a5"
        ],
        [
            "by apply Lim_seq_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_abs_0 (u : nat -> R) : is_lim_seq u 0 <-> is_lim_seq (fun n => Rabs (u n)) 0.",
            "VernacStartTheoremProof",
            "f96a8de90d0db23daa30b8560d9f8046986f4a47"
        ],
        [
            "split => Hu.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply (is_lim_seq_abs _ 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_spec in Hu.",
            "VernacExtend",
            "76340a6faa81e82aa0e11ff86fbd12e4e42067c5"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hu eps) => {Hu} N Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: (Hu n Hn) ; by rewrite ?Rminus_0_r Rabs_Rabsolu.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_geom (q : R) : Rabs q < 1 -> is_lim_seq (fun n => q ^ n) 0.",
            "VernacStartTheoremProof",
            "b771bfcb93d0a41e1679040ca4da95012095f8e2"
        ],
        [
            "intros Hq.",
            "VernacExtend",
            "df20bb61f36f40643fe54bdb4335f37db5486c96"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "move => [e He] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (pow_lt_1_zero q Hq e He) => N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Rminus_0_r ; by apply H.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_geom (q : R) : Rabs q < 1 -> ex_lim_seq (fun n => q ^ n).",
            "VernacStartTheoremProof",
            "2a7ab424fca8c8d7f5104e0fc02c21b973fd501d"
        ],
        [
            "move => Hq ; exists 0 ; by apply is_lim_seq_geom.",
            "VernacExtend",
            "8129c32c47041e59bea0f5967317bed113835183"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_geom (q : R) : Rabs q < 1 -> Lim_seq (fun n => q ^ n) = 0.",
            "VernacStartTheoremProof",
            "e292cd54506bc92cb08adebd0c94602ad62049d3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "by apply is_lim_seq_geom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_geom_p (q : R) : 1 < q -> is_lim_seq (fun n => q ^ n) p_infty.",
            "VernacStartTheoremProof",
            "08237917ddb1fb3e12f16b23c1e42e8752372092"
        ],
        [
            "intros Hq.",
            "VernacExtend",
            "df20bb61f36f40643fe54bdb4335f37db5486c96"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "move => M /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (fun Hq => Pow_x_infinity q Hq (M+1)) => [ | N H].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rlt_le_trans with (1 := Hq), Rle_abs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rlt_le_trans with (M+1).",
            "VernacExtend",
            "e747377457a1e863791a0be87168a5c95e078839"
        ],
        [
            "rewrite -{1}(Rplus_0_r M) ; by apply Rplus_lt_compat_l, Rlt_0_1.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite -(Rabs_pos_eq (q^n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rge_le, H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply pow_le, Rlt_le, Rlt_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_geom_p (q : R) : 1 < q -> ex_lim_seq (fun n => q ^ n).",
            "VernacStartTheoremProof",
            "84d6b536805b1f1a1e855228d0a13296f185725b"
        ],
        [
            "move => Hq ; exists p_infty ; by apply is_lim_seq_geom_p.",
            "VernacExtend",
            "369a8c5a0e9cb65c8cf0e084f0a1e88906d24cb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lim_seq_geom_p (q : R) : 1 < q -> Lim_seq (fun n => q ^ n) = p_infty.",
            "VernacStartTheoremProof",
            "b376bb32257cd2aba7cf01a3d7554f5b542852cd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "by apply is_lim_seq_geom_p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_lim_seq_geom_m (q : R) : q <= -1 -> ~ ex_lim_seq (fun n => q ^ n).",
            "VernacStartTheoremProof",
            "0a39d59f9d18d3455d4d2ee16c8e9ae0054cf22e"
        ],
        [
            "intros Hq [l H].",
            "VernacExtend",
            "5a7a7c83add49d5d1b736deb258d62cee584f3ac"
        ],
        [
            "apply is_lim_seq_spec in H.",
            "VernacExtend",
            "98ca61a735cdd6a0c67afeba86446058c65f378f"
        ],
        [
            "destruct l as [l| |].",
            "VernacExtend",
            "a50b9315d268d47c890ad0be6c36d5895fa55865"
        ],
        [
            "case: Hq => Hq.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (H (mkposreal _ Rlt_0_1)) => /= {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (fun n Hn => Rabs_lt_between_Rmax _ _ _ (proj1 (Rabs_lt_between' _ _ _) (H n Hn))).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "set M := Rmax (l + 1) (- (l - 1)) => H0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (fun Hq => Pow_x_infinity q Hq M) => [ | N0 H1].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Rabs_left.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Ropp_lt_cancel ; by rewrite Ropp_involutive.",
            "VernacExtend",
            "9009c9b957a86d8010aa0e0c1ca31f0be121be98"
        ],
        [
            "apply Rlt_trans with (1 := Hq) ; apply Ropp_lt_cancel ; rewrite Ropp_involutive Ropp_0 ; by apply Rlt_0_1.",
            "VernacExtend",
            "1e9b925b3146a7653ba92a6fc002ceb73c905644"
        ],
        [
            "move: (H0 _ (le_plus_l N N0)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply Rle_not_lt, Rge_le, H1, le_plus_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (H (mkposreal _ Rlt_0_1)) => /= {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Hq in H => {q Hq}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: (H _ (le_n_2n _)) ; rewrite pow_1_even ; case/Rabs_lt_between' => _ H1.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "have H2 : (N <= S (2 * N))%nat.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply le_trans with (1 := le_n_2n _), le_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (H _ H2) ; rewrite pow_1_odd ; case/Rabs_lt_between' => {H H2} H2 _.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "move: H1 ; apply Rle_not_lt, Rlt_le.",
            "VernacExtend",
            "af12188065cc48c4c1c6d175a6fe88d0dd82930d"
        ],
        [
            "pattern 1 at 2 ; replace (1) with ((-1)+2) by ring.",
            "VernacExtend",
            "865af1f34128704cbbb4b597d18dcf257218b2d4"
        ],
        [
            "replace (l+1) with ((l-1)+2) by ring.",
            "VernacExtend",
            "70d5513f6f29d7fef4753fc2482c56eaad7c20d0"
        ],
        [
            "by apply Rplus_lt_compat_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (H 0) => {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have H0 : (N <= S (2 * N))%nat.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply le_trans with (1 := le_n_2n _), le_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (H _ H0) ; apply Rle_not_lt ; rewrite /pow -/pow.",
            "VernacExtend",
            "c860bfa72dbf1f709e97d939054f0c6b30d568f8"
        ],
        [
            "apply Rmult_le_0_r.",
            "VernacExtend",
            "851829ca980f98ce01c7f9829ab18b3f9e65cf2f"
        ],
        [
            "apply Rle_trans with (1 := Hq), Ropp_le_cancel ; rewrite Ropp_involutive Ropp_0 ; by apply Rle_0_1.",
            "VernacExtend",
            "f1f36525867d7d73d3b8a6da3f0ceb1e7bbad431"
        ],
        [
            "apply Ropp_le_contravar in Hq ; rewrite Ropp_involutive in Hq.",
            "VernacExtend",
            "a355bd18b1cdd4e59fbc8facb883e34710b76cfa"
        ],
        [
            "rewrite pow_sqr -Rmult_opp_opp ; apply pow_le, Rmult_le_pos ; apply Rle_trans with (2 := Hq), Rle_0_1.",
            "VernacExtend",
            "96e94bbd3434c01d403a921ab26603b69b74fdb4"
        ],
        [
            "case: (H 0) => {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (H _ (le_n_2n _)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "apply Ropp_le_contravar in Hq ; rewrite Ropp_involutive in Hq.",
            "VernacExtend",
            "a355bd18b1cdd4e59fbc8facb883e34710b76cfa"
        ],
        [
            "rewrite pow_sqr -Rmult_opp_opp ; apply pow_le, Rmult_le_pos ; apply Rle_trans with (2 := Hq), Rle_0_1.",
            "VernacExtend",
            "96e94bbd3434c01d403a921ab26603b69b74fdb4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_lim_seq_Rbar_loc_seq (x : Rbar) : is_lim_seq (Rbar_loc_seq x) x.",
            "VernacStartTheoremProof",
            "8f5c48cae6a590ad9740f5380ca96de247fa9f9c"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "apply filterlim_Rbar_loc_seq.",
            "VernacExtend",
            "7d49e234309669569338f709b07df58cd00ea46f"
        ],
        [
            "now apply Rbar_locally'_le.",
            "VernacExtend",
            "268451f0e2e4ee9da61fb30e84f2b2c5cb30a995"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "is_inf_opp_sup_seq",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "destruct l as [l | | ] ; split ; intros Hl.",
                        "VernacExtend",
                        "0c0ab66a6765126a44279cd89750286ef81bcb8f"
                    ]
                },
                {
                    "command": [
                        "intro eps ; case (Hl eps) ; clear Hl ; intros lb (n, glb) ; split.",
                        "VernacExtend",
                        "ee1e9d8a91f6566b2f862fef7d416ae08decc3ba"
                    ]
                },
                {
                    "command": [
                        "intro n0 ; apply Rbar_opp_lt ; simpl ; rewrite (Ropp_plus_distr l eps) ; apply lb.",
                        "VernacExtend",
                        "bf05de23437d5d4e9858776fcbce4ffc1d177d8a"
                    ]
                },
                {
                    "command": [
                        "exists n ; apply Rbar_opp_lt ; assert (Rw : -(l-eps) = -l+eps).",
                        "VernacExtend",
                        "70b220e67431dc977813beb0875f848cc6d96b94"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "simpl ; rewrite Rw ; clear Rw ; auto.",
                        "VernacExtend",
                        "58f65960c6766893da1bfa60ae6642458f4922c9"
                    ]
                },
                {
                    "command": [
                        "intro eps ; case (Hl eps) ; clear Hl ; intros ub (n, lub) ; split.",
                        "VernacExtend",
                        "81638ec9f4e99444b4af84c1483f0b070e928247"
                    ]
                },
                {
                    "command": [
                        "intros n0 ; unfold Rminus ; rewrite <-(Ropp_plus_distr l eps) ; apply (Rbar_opp_lt (Finite (l+eps)) (u n0)) ; simpl ; apply ub.",
                        "VernacExtend",
                        "a3379604c77091f8c17aadd03cc67553bc44017f"
                    ]
                },
                {
                    "command": [
                        "exists n ; assert (Rw : -(l-eps) = -l+eps).",
                        "VernacExtend",
                        "4c88001363d43c23cb239a27d6fc982be1cab03d"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "simpl ; rewrite <-Rw ; apply (Rbar_opp_lt (u n) (Finite (l-eps))) ; auto.",
                        "VernacExtend",
                        "8549adbdf6b81c5cd9e85675dc1ae5090b2b61c6"
                    ]
                },
                {
                    "command": [
                        "intro M ; case (Hl (-M)) ; clear Hl ; intros n Hl ; exists n ; apply Rbar_opp_lt ; auto.",
                        "VernacExtend",
                        "5bf83292732782c24c976eb7b9b4a2d08dd4496b"
                    ]
                },
                {
                    "command": [
                        "intro M ; case (Hl (-M)) ; clear Hl ; intros n Hl ; exists n ; apply Rbar_opp_lt ; rewrite Rbar_opp_involutive ; auto.",
                        "VernacExtend",
                        "aafd041ce2cff83edb4c59aef60189bd8ef1c693"
                    ]
                },
                {
                    "command": [
                        "intros M n ; apply Rbar_opp_lt, Hl.",
                        "VernacExtend",
                        "ac745e8d3aeec5b7537d1217004cef92ed69b93f"
                    ]
                },
                {
                    "command": [
                        "intros M n ; apply Rbar_opp_lt ; rewrite Rbar_opp_involutive ; apply Hl.",
                        "VernacExtend",
                        "4a8ecc2c64f1e9e6651bbdf0dfbbe23aa2a57534"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_sup_opp_inf_seq",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "case: l => [l | | ] ; split => Hl.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hl eps) => {Hl} [lb [n lub]] ; split.",
                        "VernacExtend",
                        "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
                    ]
                },
                {
                    "command": [
                        "move => n0 ; apply Rbar_opp_lt ; have : (-(l-eps) = -l+eps) ; first by ring.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move => /= ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists n ; apply Rbar_opp_lt ; rewrite /= (Ropp_plus_distr l eps) ; apply lub.",
                        "VernacExtend",
                        "06ff83dd1409d8d85ea69575c19a6d6677a02677"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hl eps) => {Hl} [ub [n lub]] ; split.",
                        "VernacExtend",
                        "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
                    ]
                },
                {
                    "command": [
                        "move => n0 ; have : (-(l-eps) = (-l+eps)) ; first by ring.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move => /= <- ; by apply (Rbar_opp_lt (u n0) (Finite (l-eps))).",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "exists n ; rewrite /Rminus -(Ropp_plus_distr l eps) ; by apply (Rbar_opp_lt (Finite (l+eps)) (u n)).",
                        "VernacExtend",
                        "5b44c9e35a5bf5324e6ee1e5277fce8fa6962783"
                    ]
                },
                {
                    "command": [
                        "move => M n ; apply Rbar_opp_lt, Hl.",
                        "VernacExtend",
                        "fa4d8f9f6ca6ef42f108d23819fa5889ea666d33"
                    ]
                },
                {
                    "command": [
                        "move => M n ; apply Rbar_opp_lt ; rewrite Rbar_opp_involutive ; apply Hl.",
                        "VernacExtend",
                        "990e4ba18f4d0c6112328276aa498ca8bfff0a4b"
                    ]
                },
                {
                    "command": [
                        "move => M ; case: (Hl (-M)) => {Hl} n Hl ; exists n ; by apply Rbar_opp_lt.",
                        "VernacExtend",
                        "96e76213d01cabf99e67d6ef72649ec799f516a5"
                    ]
                },
                {
                    "command": [
                        "move => M ; case: (Hl (-M)) => {Hl} n Hl ; exists n ; apply Rbar_opp_lt ; by rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "7757634451a908b5764095d1de54fe6ecb3f4fe3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_sup_seq_lub",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "destruct l as [l | | ] ; intro Hl ; split.",
                        "VernacExtend",
                        "d4b6aed91948b562bb0f9d074a00ab903b274665"
                    ]
                },
                {
                    "command": [
                        "intro x ; destruct x as [x | | ] ; simpl ; intros (n, Hn).",
                        "VernacExtend",
                        "b62b7caacb40be00b0002766b78d7cc14df4c1f2"
                    ]
                },
                {
                    "command": [
                        "apply le_epsilon ; intros e He ; set (eps := mkposreal e He).",
                        "VernacExtend",
                        "49cc19c2c4a286662dfdca727ad2d333735d7767"
                    ]
                },
                {
                    "command": [
                        "change (Rbar_le x (l + e)).",
                        "VernacExtend",
                        "a1fd40432b078d62f9c13ea1354fc213b36e17c2"
                    ]
                },
                {
                    "command": [
                        "rewrite Hn ; apply Rbar_lt_le, (Hl eps).",
                        "VernacExtend",
                        "8d1509c8616f4cb3bf9827ddef86de38f70f7759"
                    ]
                },
                {
                    "command": [
                        "now generalize (proj1 (Hl (mkposreal _ Rlt_0_1)) n) ; clear Hl ; simpl ; intros Hl ; rewrite <-Hn in Hl.",
                        "VernacExtend",
                        "cd7db924ae71a0f019044e8e0a9bad6d27a7d03a"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "intros b ; destruct b as [b | | ] ; intros Hb ; apply Rbar_not_lt_le ; auto ; intros He.",
                        "VernacExtend",
                        "54e9dfefe80abb3a1967767b5a6d0417eb2af324"
                    ]
                },
                {
                    "command": [
                        "set (eps := mkposreal _ (Rlt_Rminus _ _ He)) ; case (proj2 (Hl eps)) ; clear Hl ; intros n.",
                        "VernacExtend",
                        "bb4922a35e127777d2c1841e3301a7613b85f21e"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_not_lt ; assert (l - eps = b) .",
                        "VernacExtend",
                        "2a21720d0f4c52c6d35550a2678b0e130a15756f"
                    ]
                },
                {
                    "command": [
                        "simpl ; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "rewrite H ; clear H ; apply Hb ; exists n ; auto.",
                        "VernacExtend",
                        "54acf24e76498860baa93b5e2ca68ef35da5a791"
                    ]
                },
                {
                    "command": [
                        "generalize (Rbar_ub_m_infty _ Hb) ; clear Hb ; intros Hb.",
                        "VernacExtend",
                        "a5a751ab3af6a91756b621bda3c5c55326b7111f"
                    ]
                },
                {
                    "command": [
                        "case (proj2 (Hl (mkposreal _ Rlt_0_1))) ; clear Hl ; simpl ; intros n Hl.",
                        "VernacExtend",
                        "e595381340518a09d685d08985086dbced327175"
                    ]
                },
                {
                    "command": [
                        "assert (H : (exists n0 : nat, u n = u n0)).",
                        "VernacExtend",
                        "55e14cdafb4bdcb85be27a87aec32e7b87b597c6"
                    ]
                },
                {
                    "command": [
                        "exists n ; auto.",
                        "VernacExtend",
                        "5a9adc9df6bd2f2c6c339260376aab0275aec66d"
                    ]
                },
                {
                    "command": [
                        "generalize (Hb (u n) H) Hl ; clear Hb ; now case (u n).",
                        "VernacExtend",
                        "f6665a0c1d9c0c0b51b4bcb9934e495fd129835d"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_ub_p_infty.",
                        "VernacExtend",
                        "7d2903f142f5ecbfe299b9c50011569c395f6daf"
                    ]
                },
                {
                    "command": [
                        "intro b ; destruct b as [b | | ] ; simpl ; intro Hb.",
                        "VernacExtend",
                        "17ce631d0c01d1b070eda00b84824f2557dce288"
                    ]
                },
                {
                    "command": [
                        "case (Hl b) ; clear Hl ; intros n Hl.",
                        "VernacExtend",
                        "4e064dab520dea35bf9635c37199ff06d51f3fda"
                    ]
                },
                {
                    "command": [
                        "contradict Hl ; apply Rbar_le_not_lt, Hb ; exists n ; auto.",
                        "VernacExtend",
                        "d7368045902bd893f581f735948223baa73543b2"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "generalize (Rbar_ub_m_infty _ Hb) ; clear Hb ; intro Hb.",
                        "VernacExtend",
                        "5e816d6b4cbecb1f5f8adef21cb08e2f1f597a67"
                    ]
                },
                {
                    "command": [
                        "case (Hl 0) ; clear Hl; intros n Hl.",
                        "VernacExtend",
                        "a2972a8bd7f18004cb8e514b79887ca10e415ac9"
                    ]
                },
                {
                    "command": [
                        "assert (H : (exists n0 : nat, u n = u n0)).",
                        "VernacExtend",
                        "55e14cdafb4bdcb85be27a87aec32e7b87b597c6"
                    ]
                },
                {
                    "command": [
                        "exists n ; auto.",
                        "VernacExtend",
                        "5a9adc9df6bd2f2c6c339260376aab0275aec66d"
                    ]
                },
                {
                    "command": [
                        "generalize (Hb (u n) H) Hl ; clear Hl ; now case (u n).",
                        "VernacExtend",
                        "a660cc10c2fea39ccb1ab21b428a7850a073903c"
                    ]
                },
                {
                    "command": [
                        "intro x ; destruct x as [x | | ] ; intros (n, Hx).",
                        "VernacExtend",
                        "cdbb281dd4993bba3cc255aad713b07d0a1c202d"
                    ]
                },
                {
                    "command": [
                        "generalize (Hl x n) ; clear Hl ; intro Hl ; rewrite <-Hx in Hl ; apply Rlt_irrefl in Hl ; intuition.",
                        "VernacExtend",
                        "3dc432a87a187ffb8d066755bfd166542eb3b7ba"
                    ]
                },
                {
                    "command": [
                        "generalize (Hl 0 n) ; rewrite <-Hx ; intuition.",
                        "VernacExtend",
                        "c5a3ab998040ed7478ee362301a15faf3fe12f74"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "now intros b ; destruct b as [b | | ].",
                        "VernacExtend",
                        "56b1355ea2890b36d4805d129a78820a5a89839d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_is_lub_sup_seq",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "destruct l as [l | | ] ; intros (ub, lub).",
                        "VernacExtend",
                        "04b250886190efc0d1680a8b47e65090fb15029f"
                    ]
                },
                {
                    "command": [
                        "intro eps ; split.",
                        "VernacExtend",
                        "670a37f485b5a6583e1b77598b1a8cdb44d44908"
                    ]
                },
                {
                    "command": [
                        "intro n ; apply Rbar_le_lt_trans with (y := Finite l).",
                        "VernacExtend",
                        "0fa76e034615111da0ebf8e2ce0c7150ba607091"
                    ]
                },
                {
                    "command": [
                        "apply ub ; exists n ; auto.",
                        "VernacExtend",
                        "51f4a1723a68b51c914ed4aa3c59c700b2298d0a"
                    ]
                },
                {
                    "command": [
                        "pattern l at 1 ; rewrite <-(Rplus_0_r l) ; apply Rplus_lt_compat_l, eps.",
                        "VernacExtend",
                        "8ab6d5cf89af08cc3007303e1b67e9a451b84845"
                    ]
                },
                {
                    "command": [
                        "apply LPO_notforall.",
                        "VernacExtend",
                        "036e0dcc3b35163ca1c1a5cf65d65257624c1a3c"
                    ]
                },
                {
                    "command": [
                        "intro n.",
                        "VernacExtend",
                        "7b184e6f13215b0f6a04b4277e277a724a645d52"
                    ]
                },
                {
                    "command": [
                        "destruct (Rbar_lt_dec (l - eps) (u n)) as [H|H].",
                        "VernacExtend",
                        "5169b4bae5ef075cacebf17e818eba247d3b286e"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "assert (H0 : (Rbar_is_upper_bound (fun x : Rbar => exists n : nat, x = u n) (Finite (l - eps)))).",
                        "VernacExtend",
                        "c9ee9f59445fcee136a7bf17bd690bc2069dfa24"
                    ]
                },
                {
                    "command": [
                        "intros x (n,Hn) ; rewrite Hn ; clear Hn ; apply Rbar_not_lt_le, H.",
                        "VernacExtend",
                        "5ddf0a6c4ffd14398f6cffe15e1a84d112e5f91e"
                    ]
                },
                {
                    "command": [
                        "generalize (lub _ H0) ; clear lub ; apply Rbar_lt_not_le ; pattern l at 2 ; rewrite <-(Rplus_0_r l) ; apply Rplus_lt_compat_l, Ropp_lt_gt_0_contravar, eps.",
                        "VernacExtend",
                        "40fbd0b985b0cd11ad8c075cfb3f14501c0b903c"
                    ]
                },
                {
                    "command": [
                        "intro M ; apply LPO_notforall.",
                        "VernacExtend",
                        "045ab961457acc0f19f35882b3de163487fb293b"
                    ]
                },
                {
                    "command": [
                        "intro n.",
                        "VernacExtend",
                        "7b184e6f13215b0f6a04b4277e277a724a645d52"
                    ]
                },
                {
                    "command": [
                        "destruct (Rbar_lt_dec M (u n)) as [H|H].",
                        "VernacExtend",
                        "70f7de97fd0209827fbf4b4b51e97748eabb212e"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "assert (H0 : Rbar_is_upper_bound (fun x : Rbar => exists n : nat, x = u n) (Finite M)).",
                        "VernacExtend",
                        "8f396d4e305d0faf1e9609738b6d93ae634b34c6"
                    ]
                },
                {
                    "command": [
                        "intros x (n,Hn) ; rewrite Hn ; clear Hn ; apply Rbar_not_lt_le, H.",
                        "VernacExtend",
                        "5ddf0a6c4ffd14398f6cffe15e1a84d112e5f91e"
                    ]
                },
                {
                    "command": [
                        "generalize (lub _ H0) ; clear lub ; apply Rbar_lt_not_le ; simpl ; auto.",
                        "VernacExtend",
                        "c0a64bb4758f9de4381edb646a6614910dc96f51"
                    ]
                },
                {
                    "command": [
                        "intros M n.",
                        "VernacExtend",
                        "e21a55be95a63dd00c1eb944b98ef755c4195e0a"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_lt_trans with (y := m_infty) ; simpl ; auto.",
                        "VernacExtend",
                        "da5e123bb2269bf60c9bb67f30e0d03edb154781"
                    ]
                },
                {
                    "command": [
                        "apply ub ; exists n ; auto.",
                        "VernacExtend",
                        "51f4a1723a68b51c914ed4aa3c59c700b2298d0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_inf_seq_glb",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "move => H ; apply Rbar_lub_glb ; apply (Rbar_is_lub_ext (fun x : Rbar => exists n : nat, x = Rbar_opp (u n))).",
                        "VernacExtend",
                        "7cc682b6db104611950d2ef54310be603033c73c"
                    ]
                },
                {
                    "command": [
                        "move => x ; split ; case => n Hn ; exists n.",
                        "VernacExtend",
                        "4895f530229f4c8a48e36fe27f96ca9ebe586a47"
                    ]
                },
                {
                    "command": [
                        "by rewrite Hn Rbar_opp_involutive.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -Hn Rbar_opp_involutive.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply (is_sup_seq_lub (fun n => Rbar_opp (u n)) (Rbar_opp l)) ; by apply is_sup_opp_inf_seq.",
                        "VernacExtend",
                        "09565d912bffcc2fce386b1acdcab4fdf38e0345"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_is_glb_inf_seq",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "move => H ; apply is_sup_opp_inf_seq ; apply Rbar_is_lub_sup_seq ; apply Rbar_glb_lub.",
                        "VernacExtend",
                        "28f0b640a32b89bf1961f2dc9a0f6db16d106e70"
                    ]
                },
                {
                    "command": [
                        "rewrite Rbar_opp_involutive ; apply (Rbar_is_glb_ext (fun x : Rbar => exists n : nat, x = u n)) => // x ; split ; case => n Hx ; exists n ; by apply Rbar_opp_eq.",
                        "VernacExtend",
                        "a7511ee652e702f4b281d90dc83077770692bb68"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_sup_seq_ext",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "case: l => [l | | ] Heq ; rewrite /is_sup_seq => Hu.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hu eps) => {Hu} Hu1 Hu2 ; split.",
                        "VernacExtend",
                        "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
                    ]
                },
                {
                    "command": [
                        "move => n ; by rewrite -Heq.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "case: Hu2 => n Hu2 ; exists n ; by rewrite -Heq.",
                        "VernacExtend",
                        "e6c2501114108f86b6fd180d8eb95bdb94c807a4"
                    ]
                },
                {
                    "command": [
                        "move => M ; case: (Hu M) => {Hu} n Hu ; exists n ; by rewrite -Heq.",
                        "VernacExtend",
                        "96e76213d01cabf99e67d6ef72649ec799f516a5"
                    ]
                },
                {
                    "command": [
                        "move => M n ; by rewrite -Heq.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_inf_seq_ext",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "case: l => [l | | ] Heq ; rewrite /is_inf_seq => Hu.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hu eps) => {Hu} Hu1 Hu2 ; split.",
                        "VernacExtend",
                        "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
                    ]
                },
                {
                    "command": [
                        "move => n ; by rewrite -Heq.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "case: Hu2 => n Hu2 ; exists n ; by rewrite -Heq.",
                        "VernacExtend",
                        "e6c2501114108f86b6fd180d8eb95bdb94c807a4"
                    ]
                },
                {
                    "command": [
                        "move => M n ; by rewrite -Heq.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "move => M ; case: (Hu M) => {Hu} n Hu ; exists n ; by rewrite -Heq.",
                        "VernacExtend",
                        "96e76213d01cabf99e67d6ef72649ec799f516a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_sup_seq",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "case (LPO (fun n => p_infty = u n)) => [/= | [np Hnp] | Hnp].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "intro n0 ; destruct (u n0) as [r | | ].",
                        "VernacExtend",
                        "f82ef20059e99be9096d638d0d3baa7a3793cdbe"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "left ; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "exists p_infty => M.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "exists np ; by rewrite -Hnp.",
                        "VernacExtend",
                        "e4ec1392c8b8f524d55eb09f513a8f092344b7ac"
                    ]
                },
                {
                    "command": [
                        "case (Rbar_ex_lub (fun x => exists n, x = u n)).",
                        "VernacExtend",
                        "a29268f36eeb591cf4e6655477d127e3f42b956c"
                    ]
                },
                {
                    "command": [
                        "intros l Hl ; exists l ; apply Rbar_is_lub_sup_seq ; auto.",
                        "VernacExtend",
                        "2f9a7cc5ccb14a839fc09c3da874bcb7b019ca4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_inf_seq",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "case : (ex_sup_seq (fun n => Rbar_opp (u n))) => l Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_opp l) ; apply is_sup_opp_inf_seq ; by rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "0eece271521a468f91a88e5c3b592c74ca14e4f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_sup_seq_unique",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "move => Hl ; rewrite /Sup_seq ; case: (ex_sup_seq _) => l0 Hl0 /= ; case: l Hl => [l | | ] Hl ; case: l0 Hl0 => [l0 | | ] Hl0 //.",
                        "VernacExtend",
                        "08e67a03e9cbb35101f112607a1a15f6568375f8"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_finite_eq, Rle_antisym ; apply le_epsilon => e He ; set eps := mkposreal e He ; apply Rlt_le ; case: (Hl (pos_div_2 eps)) => {Hl} Hl [n Hn] ; case: (Hl0 (pos_div_2 eps)) => {Hl0} Hl0 [n0 Hn0].",
                        "VernacExtend",
                        "f48198c0af67dd25192639f6072f27982f661e45"
                    ]
                },
                {
                    "command": [
                        "have: (l0 = (l0 - eps/2) + eps/2) ; [by field | move => -> ] ; have : (l + e = (l + eps/2) + eps/2) ; [ simpl ; field | move => -> ] ; apply Rplus_lt_compat_r, (Rbar_lt_trans (Finite (l0 - eps/2)) (u n0) (Finite (l + eps/2)) Hn0 (Hl _)).",
                        "VernacExtend",
                        "ed6984fd86002cf1856f99ce08e92643684c2d88"
                    ]
                },
                {
                    "command": [
                        "have: (l = (l - eps/2) + eps/2) ; [by field | move => -> ] ; have : (l0 + e = (l0 + eps/2) + eps/2) ; [ simpl ; field | move => -> ] ; apply Rplus_lt_compat_r, (Rbar_lt_trans (Finite (l - eps/2)) (u n) (Finite (l0 + eps/2)) Hn (Hl0 _)).",
                        "VernacExtend",
                        "b6df09232b578bd4ff753612a89659578d3a5b01"
                    ]
                },
                {
                    "command": [
                        "case: (Hl0 (l + 1)) => n {Hl0} Hl0 ; contradict Hl0 ; apply Rbar_le_not_lt, Rbar_lt_le, (Hl (mkposreal _ Rlt_0_1)).",
                        "VernacExtend",
                        "597edca734a8f5d8c2aa9b708763341390e9651c"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (mkposreal _ Rlt_0_1)) => {Hl} _ [n Hl] ; contradict Hl ; apply Rbar_le_not_lt, Rbar_lt_le, Hl0.",
                        "VernacExtend",
                        "5034e11610fb324714568a5a0a07e2fb02f55137"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (l0 + 1)) => n {Hl} Hl ; contradict Hl ; apply Rbar_le_not_lt, Rbar_lt_le, (Hl0 (mkposreal _ Rlt_0_1)).",
                        "VernacExtend",
                        "96efa5ba7c5f3cd8415ea467f91003e59c208dc3"
                    ]
                },
                {
                    "command": [
                        "case: (Hl 0) => n {Hl} Hl ; contradict Hl ; apply Rbar_le_not_lt, Rbar_lt_le, Hl0.",
                        "VernacExtend",
                        "5034e11610fb324714568a5a0a07e2fb02f55137"
                    ]
                },
                {
                    "command": [
                        "case: (Hl0 (mkposreal _ Rlt_0_1)) => {Hl0} _ [n Hl0] ; contradict Hl0 ; apply Rbar_le_not_lt, Rbar_lt_le, Hl.",
                        "VernacExtend",
                        "5f8751a31a2040ee4efc52019ab3fa966da8102a"
                    ]
                },
                {
                    "command": [
                        "case: (Hl0 0) => n {Hl0} Hl0 ; contradict Hl0 ; apply Rbar_le_not_lt, Rbar_lt_le, Hl.",
                        "VernacExtend",
                        "5f8751a31a2040ee4efc52019ab3fa966da8102a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sup_seq_correct",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "rewrite /Sup_seq ; case: (ex_sup_seq _) => l Hl //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_inf_seq_unique",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "move => Hl ; rewrite /Inf_seq ; case: (ex_inf_seq _) => l0 Hl0 /= ; case: l Hl => [l | | ] Hl ; case: l0 Hl0 => [l0 | | ] Hl0 //.",
                        "VernacExtend",
                        "08e67a03e9cbb35101f112607a1a15f6568375f8"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_finite_eq, Rle_antisym ; apply le_epsilon => e He ; set eps := mkposreal e He ; apply Rlt_le ; case: (Hl (pos_div_2 eps)) => {Hl} Hl [n Hn] ; case: (Hl0 (pos_div_2 eps)) => {Hl0} Hl0 [n0 Hn0].",
                        "VernacExtend",
                        "f48198c0af67dd25192639f6072f27982f661e45"
                    ]
                },
                {
                    "command": [
                        "have: (l0 = (l0 - eps/2) + eps/2) ; [by field | move => -> ] ; have : (l + e = (l + eps/2) + eps/2) ; [ simpl ; field | move => -> ] ; apply Rplus_lt_compat_r, (Rbar_lt_trans (Finite (l0 - eps/2)) (u n) (Finite (l + eps/2)) (Hl0 _) Hn).",
                        "VernacExtend",
                        "6cc518dfa9d093616c3dc496b0c19e3642486dfd"
                    ]
                },
                {
                    "command": [
                        "have: (l = (l - eps/2) + eps/2) ; [by field | move => -> ] ; have : (l0 + e = (l0 + eps/2) + eps/2) ; [ simpl ; field | move => -> ] ; apply Rplus_lt_compat_r, (Rbar_lt_trans (Finite (l - eps/2)) (u n0) (Finite (l0 + eps/2)) (Hl _) Hn0).",
                        "VernacExtend",
                        "a52c49557d7b962b5b67b902eea28c210cd8ca68"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (mkposreal _ Rlt_0_1)) => {Hl} _ [n Hl] ; contradict Hl ; apply Rbar_le_not_lt, Rbar_lt_le, Hl0.",
                        "VernacExtend",
                        "5034e11610fb324714568a5a0a07e2fb02f55137"
                    ]
                },
                {
                    "command": [
                        "case: (Hl0 (l - 1)) => n {Hl0} Hl0 ; contradict Hl0 ; apply Rbar_le_not_lt, Rbar_lt_le, (Hl (mkposreal _ Rlt_0_1)).",
                        "VernacExtend",
                        "597edca734a8f5d8c2aa9b708763341390e9651c"
                    ]
                },
                {
                    "command": [
                        "case: (Hl0 (mkposreal _ Rlt_0_1)) => {Hl0} _ [n Hl0] ; contradict Hl0 ; apply Rbar_le_not_lt, Rbar_lt_le, Hl.",
                        "VernacExtend",
                        "5f8751a31a2040ee4efc52019ab3fa966da8102a"
                    ]
                },
                {
                    "command": [
                        "case: (Hl0 0) => n {Hl0} Hl0 ; contradict Hl0 ; apply Rbar_le_not_lt, Rbar_lt_le, Hl.",
                        "VernacExtend",
                        "5f8751a31a2040ee4efc52019ab3fa966da8102a"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (l0 - 1)) => n {Hl} Hl ; contradict Hl ; apply Rbar_le_not_lt, Rbar_lt_le, (Hl0 (mkposreal _ Rlt_0_1)).",
                        "VernacExtend",
                        "96efa5ba7c5f3cd8415ea467f91003e59c208dc3"
                    ]
                },
                {
                    "command": [
                        "case: (Hl 0) => n {Hl} Hl ; contradict Hl ; apply Rbar_le_not_lt, Rbar_lt_le, Hl0.",
                        "VernacExtend",
                        "5034e11610fb324714568a5a0a07e2fb02f55137"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inf_seq_correct",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "rewrite /Inf_seq ; case: (ex_inf_seq _) => l Hl //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sup_seq_ext",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intro Heq ; rewrite {2}/Sup_seq ; case (ex_sup_seq v) ; simpl ; intros l2 Hv.",
                        "VernacExtend",
                        "fb15f7a58c97f111cecc98b87488c80626314795"
                    ]
                },
                {
                    "command": [
                        "by apply (is_sup_seq_unique u), is_sup_seq_ext with v.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inf_seq_ext",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "intro Heq ; rewrite {2}/Inf_seq ; case (ex_inf_seq v) ; simpl ; intros l2 Hv.",
                        "VernacExtend",
                        "4d4b789b9c01804d68e2f504f9d26cfc8ddeb2d7"
                    ]
                },
                {
                    "command": [
                        "by apply (is_inf_seq_unique u), is_inf_seq_ext with v.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rbar_sup_eq_lub",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "rewrite /Sup_seq ; case: (ex_sup_seq _) => /= s Hs.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rbar_lub ; case: (Rbar_ex_lub _) => /= l Hl.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply (Rbar_is_lub_eq (fun x : Rbar => exists n : nat, x = u n) (fun x : Rbar => exists n : nat, x = u n)) => // ; by apply is_sup_seq_lub.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inf_eq_glb",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "rewrite /Inf_seq ; case: (ex_inf_seq _) => /= s Hs.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rbar_glb ; case: (Rbar_ex_glb _) => /= l Hl.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply (Rbar_is_glb_eq (fun x : Rbar => exists n : nat, x = u n) (fun x : Rbar => exists n : nat, x = u n)) => // ; by apply is_inf_seq_glb.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sup_opp_inf",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "rewrite /Inf_seq ; case: (ex_inf_seq _) => iu Hiu /=.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply is_sup_seq_unique.",
                        "VernacExtend",
                        "cb50867241668fea36174b8e08b8295e72a6a900"
                    ]
                },
                {
                    "command": [
                        "apply is_inf_opp_sup_seq.",
                        "VernacExtend",
                        "58d9bbb827fac184a7e8bd59ab61324bba8e7e31"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inf_opp_sup",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "rewrite Sup_opp_inf Rbar_opp_involutive.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /Inf_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "repeat (case: ex_inf_seq ; intros) => /=.",
                        "VernacExtend",
                        "d36194af035d418008b3fae8e9785d1af2d8af96"
                    ]
                },
                {
                    "command": [
                        "apply is_inf_seq_glb in p.",
                        "VernacExtend",
                        "54bdf885de6a36b791ed97af1c5be96b049d1896"
                    ]
                },
                {
                    "command": [
                        "apply is_inf_seq_glb in p0.",
                        "VernacExtend",
                        "4cdcd1d5a069fe09c19ee3e04a8ed18161177b81"
                    ]
                },
                {
                    "command": [
                        "move: p p0 ; apply Rbar_is_glb_eq.",
                        "VernacExtend",
                        "6ea5c7bbc73685de035b9a5f8045c926d39c0fa1"
                    ]
                },
                {
                    "command": [
                        "move => x1 ; split ; case => n -> ; exists n ; by rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "312af2a2b681f3bee69b403be776b75d72652fa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sup_seq_scal_l",
            "line_nb": 208,
            "steps": [
                {
                    "command": [
                        "case => Ha.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite /Sup_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: ex_sup_seq => al Hau.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: ex_sup_seq => l Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "simpl proj1_sig.",
                        "VernacExtend",
                        "5f96d4f17b719de67e5d7478228e33dba85bb4de"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_antisym.",
                        "VernacExtend",
                        "f0e54e4db9d25ea0231de349a146a11c944777e8"
                    ]
                },
                {
                    "command": [
                        "apply is_sup_seq_lub in Hau.",
                        "VernacExtend",
                        "a28378cd02b4454c74b704dc7f5e3d9524825bd5"
                    ]
                },
                {
                    "command": [
                        "apply is_sup_seq_lub in Hu.",
                        "VernacExtend",
                        "f4bb87b0a10b76fb48d075c3cdc3920083aa803c"
                    ]
                },
                {
                    "command": [
                        "apply Hau => _ [n ->].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "suff : Rbar_le (u n) l.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "case: (u n) => [un | | ] ; case: (l) => [l' | | ] /= ; try (by case) ; try (case: Rle_dec (Rlt_le _ _ Ha) => //= Ha' _ ; case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => //= _ _ _ ; by left).",
                        "VernacExtend",
                        "528d71533ae6e6fa84c478575cf71a17e294f9fa"
                    ]
                },
                {
                    "command": [
                        "intros H ; apply Rmult_le_compat_l => // ; by apply Rlt_le.",
                        "VernacExtend",
                        "7cdefdf2b4816268f7f65388221db5fde9032da6"
                    ]
                },
                {
                    "command": [
                        "apply Hu.",
                        "VernacExtend",
                        "51e4ba2a0f37212a61da6c69750614260faf5b8d"
                    ]
                },
                {
                    "command": [
                        "by exists n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff : Rbar_le l (Rbar_div_pos al (mkposreal a Ha)).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "case: (al) => [al' | | ] ; case: (l) => [l' | | ] /= ; try (by case) ; try (case: Rle_dec (Rlt_le _ _ Ha) => //= Ha' _ ; case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => //= _ _ _ ; by left).",
                        "VernacExtend",
                        "528d71533ae6e6fa84c478575cf71a17e294f9fa"
                    ]
                },
                {
                    "command": [
                        "intros H ; rewrite Rmult_comm ; apply Rle_div_r => //.",
                        "VernacExtend",
                        "e7d3257866376f5f080900eee3164933843de7d8"
                    ]
                },
                {
                    "command": [
                        "apply is_sup_seq_lub in Hau.",
                        "VernacExtend",
                        "a28378cd02b4454c74b704dc7f5e3d9524825bd5"
                    ]
                },
                {
                    "command": [
                        "apply is_sup_seq_lub in Hu.",
                        "VernacExtend",
                        "f4bb87b0a10b76fb48d075c3cdc3920083aa803c"
                    ]
                },
                {
                    "command": [
                        "apply Hu => _ [n ->].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "suff : Rbar_le (Rbar_mult a (u n)) al.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "case: (u n) => [un | | ] ; case: (al) => [al' | | ] /= ; try (by case) ; try (case: Rle_dec (Rlt_le _ _ Ha) => //= Ha' _ ; case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => //= _ _ ; try (by case) ; by left).",
                        "VernacExtend",
                        "846b46cd2e73c415d7600064c93ff774cd1264fd"
                    ]
                },
                {
                    "command": [
                        "intros H ; rewrite Rmult_comm in H ; apply Rle_div_r => //.",
                        "VernacExtend",
                        "e7d3257866376f5f080900eee3164933843de7d8"
                    ]
                },
                {
                    "command": [
                        "apply Hau.",
                        "VernacExtend",
                        "304341d7be8eb5243dbbcd68f15456f22c604ff4"
                    ]
                },
                {
                    "command": [
                        "by exists n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -Ha.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "transitivity (Sup_seq (fun _ => 0)).",
                        "VernacExtend",
                        "1f861c247a7ed818ba9a26b7f8b95ddd2382166c"
                    ]
                },
                {
                    "command": [
                        "apply Sup_seq_ext.",
                        "VernacExtend",
                        "104404d27bb4e11b78fdc9844fc67780ea3e93be"
                    ]
                },
                {
                    "command": [
                        "move => n ; case: (u n) => [un | | ] /=.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "apply f_equal ; ring.",
                        "VernacExtend",
                        "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rle_refl 0) => //= H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rle_not_lt _ _ H) => //= H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rle_refl 0) => //= H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rle_not_lt _ _ H) => //= H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "transitivity 0.",
                        "VernacExtend",
                        "9e4321dd85cb6c620055c245e893ebbc6b1ebdff"
                    ]
                },
                {
                    "command": [
                        "apply is_sup_seq_unique.",
                        "VernacExtend",
                        "cb50867241668fea36174b8e08b8295e72a6a900"
                    ]
                },
                {
                    "command": [
                        "move => eps ; split => /=.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "move => _ ; ring_simplify ; by apply eps.",
                        "VernacExtend",
                        "0a3b94eb80da67f52475104972b9b8d7f1d7396c"
                    ]
                },
                {
                    "command": [
                        "exists 0%nat ; apply Rminus_lt_0 ; ring_simplify ; by apply eps.",
                        "VernacExtend",
                        "88c9839577d1640e301cf870cc54c47f2a3e043a"
                    ]
                },
                {
                    "command": [
                        "case: (Sup_seq u) => [l | | ] /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply f_equal ; ring.",
                        "VernacExtend",
                        "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rle_refl 0) => //= H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rle_not_lt _ _ H) => //= H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rle_refl 0) => //= H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rle_not_lt _ _ H) => //= H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inf_seq_scal_l",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "move => Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite Inf_opp_sup.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Sup_seq_ext (fun n => Rbar_mult a (Rbar_opp (u n)))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Sup_seq_scal_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -Rbar_mult_opp_r -(Inf_opp_sup u).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => n ; by rewrite Rbar_mult_opp_r.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_sup_seq_le",
            "line_nb": 264,
            "steps": [
                {
                    "command": [
                        "destruct l1 as [l1 | | ] ; destruct l2 as [l2 | | ] ; intros Hle Hu Hv ; case (is_sup_seq_lub _ _ Hu) ; clear Hu ; intros _ Hu ; case (is_sup_seq_lub _ _ Hv) ; clear Hv ; intros Hv _ ; apply Hu ; intros x (n,Hn) ; rewrite Hn ; clear x Hn ; apply Rbar_le_trans with (1 := Hle _), Hv ; exists n ; auto.",
                        "VernacExtend",
                        "f490b23f59116af4b455547be7cf7397e150f44f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_inf_seq_le",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "case: l1 => [l1 | | ] ; case: l2 => [l2 | | ] Hle Hu Hv ; case: (is_inf_seq_glb _ _ Hu) => {Hu} Hu _ ; case: (is_inf_seq_glb _ _ Hv) => {Hv} _ Hv ; apply Hv => _ [n ->] ; apply Rbar_le_trans with (2 := Hle _), Hu ; by exists n.",
                        "VernacExtend",
                        "9343aa0e25d0aa9f275ed39d859aa8a1950c8ed0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sup_seq_le",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "intros Heq ; unfold Sup_seq ; case (ex_sup_seq u) ; intros l1 Hu ; case (ex_sup_seq v) ; simpl ; intros l2 Hv.",
                        "VernacExtend",
                        "40d6772b3a7de3cb897d283d47cb8f9e505aab18"
                    ]
                },
                {
                    "command": [
                        "apply (is_sup_seq_le u v) ; auto.",
                        "VernacExtend",
                        "445ac13b89a84b666c75f437671e5bbe4f532ef1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inf_seq_le",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "move => Heq ; rewrite /Inf_seq ; case: (ex_inf_seq u) => l1 Hu ; case: (ex_inf_seq v) => /= l2 Hv.",
                        "VernacExtend",
                        "aceb9fafa80af3e6874a5c6af6a994b0640007cf"
                    ]
                },
                {
                    "command": [
                        "by apply (is_inf_seq_le u v).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inf_le_sup",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "rewrite /Inf_seq ; case: (ex_inf_seq _) ; case => [iu | | ] Hiu ; rewrite /Sup_seq ; case: (ex_sup_seq _) ; case => [su | | ] Hsu //=.",
                        "VernacExtend",
                        "fafbd9cca2268f0a9f8307dce1714202fd09a759"
                    ]
                },
                {
                    "command": [
                        "apply le_epsilon => e He ; set eps := mkposreal e He ; case: (Hiu (pos_div_2 eps)) => {Hiu} Hiu _ ; case: (Hsu (pos_div_2 eps)) => {Hsu} Hsu _ ; apply Rlt_le.",
                        "VernacExtend",
                        "eb3dc5a94b76bff449512e982ea3f3a25e833408"
                    ]
                },
                {
                    "command": [
                        "have : (iu = iu - e/2 + e/2) ; first by ring.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move => -> ; have : (su+e = su + e/2 + e/2) ; first by field.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move => -> ; apply Rplus_lt_compat_r, (Rbar_lt_trans (Finite (iu - e/2)) (u O) (Finite (su + e/2))).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "set eps := mkposreal _ Rlt_0_1 ; case: (Hiu eps) => {Hiu} Hiu _ ; move: (Hiu O) => {Hiu} ; apply Rbar_le_not_lt, Rbar_lt_le, Hsu.",
                        "VernacExtend",
                        "f0ad7f70923e6e294fc0eab67b78813ed426dacd"
                    ]
                },
                {
                    "command": [
                        "set eps := mkposreal _ Rlt_0_1 ; case: (Hsu eps) => {Hsu} Hsu _ ; move: (Hsu O) => {Hsu} ; apply Rbar_le_not_lt, Rbar_lt_le, Hiu.",
                        "VernacExtend",
                        "538f92d160fb8d03482026603ed0784095d6e508"
                    ]
                },
                {
                    "command": [
                        "move: (Hiu 0 O) => {Hiu} ; apply Rbar_le_not_lt, Rbar_lt_le, Hsu.",
                        "VernacExtend",
                        "ade5592c21e0c702b8c0f2c7f6a6887542782ce3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_sup_seq_major",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "case: l => [l | | ] //= Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (fun eps => proj1 (Hl eps) n) => {Hl}.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (u n) => [un | | ] //= Hun.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply le_epsilon => e He ; apply Rlt_le.",
                        "VernacExtend",
                        "2f9059c3be0b2826dc6b85aafa96f4fcec84dd59"
                    ]
                },
                {
                    "command": [
                        "apply: Hun (mkposreal e He).",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by move: (Hun (mkposreal _ Rlt_0_1)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (u n) => [un | | ] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (Hl (u n) n) ; case: (u n) => [un | | ] //= {Hl} Hl.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_irrefl in Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sup_seq_minor_lt",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "rewrite /Sup_seq ; case: ex_sup_seq => l Hl ; simpl proj1_sig ; split => H.",
                        "VernacExtend",
                        "3fb6055fae7480addbc2b3c1bde848ad20a13eb9"
                    ]
                },
                {
                    "command": [
                        "case: l Hl H => [l | | ] Hl H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 in H.",
                        "VernacExtend",
                        "cc788f46f0f5b7c476514ba43d78dd77271a6406"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (Hl (mkposreal _ H))) ; simpl pos => {Hl} n Hl.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "exists n.",
                        "VernacExtend",
                        "a97204a252e0d9b7444ffed9b38570a756391511"
                    ]
                },
                {
                    "command": [
                        "replace M with (l - (l - M)) by ring.",
                        "VernacExtend",
                        "567cb1faac5135f579f4ecc645ea25ced57fea40"
                    ]
                },
                {
                    "command": [
                        "by apply Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply (Hl M).",
                        "VernacExtend",
                        "75276cc27b070e2301b06bcbb6e6d16616dc2cf5"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: H => n Hn.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_lt_le_trans with (u n).",
                        "VernacExtend",
                        "3d63ef1d1180374f8b29353fe69031b9b3087e92"
                    ]
                },
                {
                    "command": [
                        "exact: Hn.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "by apply is_sup_seq_major.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sup_seq_minor_le",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "intros H'.",
                        "VernacExtend",
                        "d7903418c9c01fda86d2cc847b39424719d50154"
                    ]
                },
                {
                    "command": [
                        "destruct (Rbar_le_lt_or_eq_dec _ _ H') as [H|H].",
                        "VernacExtend",
                        "3c1546da2426c369caf1077c5e89ebade8d2a3da"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_lt_le.",
                        "VernacExtend",
                        "e74b551ac655dae2f0977cdd30600246b482a8d9"
                    ]
                },
                {
                    "command": [
                        "apply Sup_seq_minor_lt.",
                        "VernacExtend",
                        "aec9c050f7c681ec1c50d1261dd289d9366ffa44"
                    ]
                },
                {
                    "command": [
                        "by exists n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /Sup_seq ; case: ex_sup_seq => l Hl ; simpl proj1_sig.",
                        "VernacExtend",
                        "c137b9da1c76d897f0388c94e6622e138d077888"
                    ]
                },
                {
                    "command": [
                        "by apply is_sup_seq_major.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimInf_opp_LimSup_seq",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "case: l => [l | | ] /= ; split => Hl.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hl eps) => {Hl} H1 H2 ; split.",
                        "VernacExtend",
                        "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
                    ]
                },
                {
                    "command": [
                        "move => N ; case: (H1 N) => {H1} n [Hn H1].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "exists n ; split.",
                        "VernacExtend",
                        "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := H1) ; right ; ring.",
                        "VernacExtend",
                        "c7d062fb93a4aa28bc73ad97670400d8eeaa9ced"
                    ]
                },
                {
                    "command": [
                        "case: H2 => N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := H2 _ Hn) ; right ; ring.",
                        "VernacExtend",
                        "a9af0bf10656f4817886b24f09f09a7bc76e1949"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hl eps) => {Hl} H1 H2 ; split.",
                        "VernacExtend",
                        "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
                    ]
                },
                {
                    "command": [
                        "move => N ; case: (H1 N) => {H1} n [Hn H1].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "exists n ; split.",
                        "VernacExtend",
                        "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
                        "VernacExtend",
                        "31707c24df95152fae2e018204d307f8d0cfe927"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := H1) ; right ; ring.",
                        "VernacExtend",
                        "3d89d05b7ea8ebb06cb5241e72c9ce95ae34f014"
                    ]
                },
                {
                    "command": [
                        "case: H2 => N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
                        "VernacExtend",
                        "31707c24df95152fae2e018204d307f8d0cfe927"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := H2 _ Hn) ; right ; ring.",
                        "VernacExtend",
                        "1b5e45fe212de540c9832e171601a3d76ce1c5bc"
                    ]
                },
                {
                    "command": [
                        "move => M N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (-M) N) => {Hl} n [Hn Hl].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists n ; split.",
                        "VernacExtend",
                        "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (-M) N) => {Hl} n [Hn Hl].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists n ; split.",
                        "VernacExtend",
                        "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel ; by rewrite Ropp_involutive.",
                        "VernacExtend",
                        "9009c9b957a86d8010aa0e0c1ca31f0be121be98"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (-M)) => {Hl} N Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
                    ]
                },
                {
                    "command": [
                        "by apply Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (-M)) => {Hl} N Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
                        "VernacExtend",
                        "31707c24df95152fae2e018204d307f8d0cfe927"
                    ]
                },
                {
                    "command": [
                        "by apply Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimSup_opp_LimInf_seq",
            "line_nb": 369,
            "steps": [
                {
                    "command": [
                        "case: l => [l | | ] /= ; split => Hl.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hl eps) => {Hl} H1 H2 ; split.",
                        "VernacExtend",
                        "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
                    ]
                },
                {
                    "command": [
                        "move => N ; case: (H1 N) => {H1} n [Hn H1].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "exists n ; split.",
                        "VernacExtend",
                        "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := H1) ; right ; ring.",
                        "VernacExtend",
                        "3d89d05b7ea8ebb06cb5241e72c9ce95ae34f014"
                    ]
                },
                {
                    "command": [
                        "case: H2 => N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := H2 _ Hn) ; right ; ring.",
                        "VernacExtend",
                        "1b5e45fe212de540c9832e171601a3d76ce1c5bc"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hl eps) => {Hl} H1 H2 ; split.",
                        "VernacExtend",
                        "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
                    ]
                },
                {
                    "command": [
                        "move => N ; case: (H1 N) => {H1} n [Hn H1].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "exists n ; split.",
                        "VernacExtend",
                        "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
                        "VernacExtend",
                        "31707c24df95152fae2e018204d307f8d0cfe927"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := H1) ; right ; ring.",
                        "VernacExtend",
                        "c7d062fb93a4aa28bc73ad97670400d8eeaa9ced"
                    ]
                },
                {
                    "command": [
                        "case: H2 => N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
                        "VernacExtend",
                        "31707c24df95152fae2e018204d307f8d0cfe927"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := H2 _ Hn) ; right ; ring.",
                        "VernacExtend",
                        "a9af0bf10656f4817886b24f09f09a7bc76e1949"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (-M)) => {Hl} N Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
                    ]
                },
                {
                    "command": [
                        "by apply Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (-M)) => {Hl} N Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel ; rewrite Ropp_involutive.",
                        "VernacExtend",
                        "31707c24df95152fae2e018204d307f8d0cfe927"
                    ]
                },
                {
                    "command": [
                        "by apply Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (-M) N) => {Hl} n [Hn Hl].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists n ; split.",
                        "VernacExtend",
                        "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (-M) N) => {Hl} n [Hn Hl].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists n ; split.",
                        "VernacExtend",
                        "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel ; by rewrite Ropp_involutive.",
                        "VernacExtend",
                        "9009c9b957a86d8010aa0e0c1ca31f0be121be98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimSup_infSup_seq",
            "line_nb": 412,
            "steps": [
                {
                    "command": [
                        "case: l => [l | | ] ; rewrite /is_LimSup_seq /is_inf_seq ; split => Hl.",
                        "VernacExtend",
                        "c4a46ac89a9c7997fc10e59922c13d5e3d2b0b23"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "move => N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Sup_seq_minor_lt.",
                        "VernacExtend",
                        "aec9c050f7c681ec1c50d1261dd289d9366ffa44"
                    ]
                },
                {
                    "command": [
                        "case: (proj1 (Hl eps) N) => {Hl} n Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (n - N)%nat.",
                        "VernacExtend",
                        "0f5da853c003ba373644e24b7dcf2d35bf834333"
                    ]
                },
                {
                    "command": [
                        "rewrite MyNat.sub_add ; intuition.",
                        "VernacExtend",
                        "e4029ed893b2095ae42ef8228a67f0fb36a59743"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (Hl (pos_div_2 eps))) => /= {Hl} N Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N ; rewrite /Sup_seq ; case: ex_sup_seq => un Hun ; simpl proj1_sig.",
                        "VernacExtend",
                        "298cc8b269639d6e2117ab18e36ad020d09766df"
                    ]
                },
                {
                    "command": [
                        "case: un Hun => [un | | ] /= Hun.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (Hun (pos_div_2 eps))) => {Hun} /= n Hun.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_minus_l in Hun.",
                        "VernacExtend",
                        "19a45653e0731f3caf42c16afd1f86f0fe8d2796"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (1 := Hun).",
                        "VernacExtend",
                        "4058a533b6aec506d793c046a32024597a3234ff"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_minus_r.",
                        "VernacExtend",
                        "4cb9df2c60171daa5a308d58de982b4740e9f8dd"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := Hl _ (le_plus_r _ _)) ; right ; field.",
                        "VernacExtend",
                        "8a92b3100af17af8ed4110d091a6b5c9c8d9033b"
                    ]
                },
                {
                    "command": [
                        "case: (Hun (l + eps / 2)) => {Hun} n.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le, Hl, le_plus_r.",
                        "VernacExtend",
                        "b14bbbbbba1e5a1cf8c01fcb91ecccd0fd875d7d"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "move => N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (proj1 (Hl eps) N) => {Hl} Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Sup_seq_minor_lt in Hl.",
                        "VernacExtend",
                        "26e11c39c980352110cca8bd50ade20c9b96ec71"
                    ]
                },
                {
                    "command": [
                        "case: Hl => /= n Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (n + N)%nat ; intuition.",
                        "VernacExtend",
                        "4c72daa834e865db6379233e16f33590cb645bb1"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (Hl eps)) => {Hl} N Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply (Rbar_not_le_lt (l + eps) (u n)).",
                        "VernacExtend",
                        "a9560347e8e7483717dd4a1f682a64b162b1c8b9"
                    ]
                },
                {
                    "command": [
                        "contradict Hl.",
                        "VernacExtend",
                        "b0fd704608864a015715b0c7a14b60f0655e01f3"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_not_lt.",
                        "VernacExtend",
                        "26846f4220b509cc8abc0a290e0e9d2da4af5e4b"
                    ]
                },
                {
                    "command": [
                        "apply Sup_seq_minor_le with (n - N)%nat.",
                        "VernacExtend",
                        "a25adf39543b8d71b0e48a74894e5876ed6b6921"
                    ]
                },
                {
                    "command": [
                        "by rewrite MyNat.sub_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl M N) => {Hl} n Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Sup_seq_minor_lt.",
                        "VernacExtend",
                        "aec9c050f7c681ec1c50d1261dd289d9366ffa44"
                    ]
                },
                {
                    "command": [
                        "exists (n - N)%nat.",
                        "VernacExtend",
                        "0f5da853c003ba373644e24b7dcf2d35bf834333"
                    ]
                },
                {
                    "command": [
                        "rewrite MyNat.sub_add ; intuition.",
                        "VernacExtend",
                        "e4029ed893b2095ae42ef8228a67f0fb36a59743"
                    ]
                },
                {
                    "command": [
                        "move => M N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (Hl M N) => {Hl} Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Sup_seq_minor_lt in Hl.",
                        "VernacExtend",
                        "26e11c39c980352110cca8bd50ade20c9b96ec71"
                    ]
                },
                {
                    "command": [
                        "case: Hl => /= n Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (n + N)%nat ; intuition.",
                        "VernacExtend",
                        "4c72daa834e865db6379233e16f33590cb645bb1"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (M-1)) => {Hl} N Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N ; rewrite /Sup_seq ; case: ex_sup_seq => un Hun ; simpl proj1_sig.",
                        "VernacExtend",
                        "298cc8b269639d6e2117ab18e36ad020d09766df"
                    ]
                },
                {
                    "command": [
                        "case: un Hun => [un | | ] /= Hun.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (Hun (mkposreal _ Rlt_0_1))) => {Hun} /= n Hun.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_minus_l in Hun.",
                        "VernacExtend",
                        "19a45653e0731f3caf42c16afd1f86f0fe8d2796"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (1 := Hun).",
                        "VernacExtend",
                        "4058a533b6aec506d793c046a32024597a3234ff"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_minus_r.",
                        "VernacExtend",
                        "4cb9df2c60171daa5a308d58de982b4740e9f8dd"
                    ]
                },
                {
                    "command": [
                        "apply Hl ; intuition.",
                        "VernacExtend",
                        "7ec7ed4fd1acadd3c785ada3e283ddaa3821cb54"
                    ]
                },
                {
                    "command": [
                        "case: (Hun (M-1)) => {Hun} n.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le, Hl, le_plus_r.",
                        "VernacExtend",
                        "b14bbbbbba1e5a1cf8c01fcb91ecccd0fd875d7d"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl M) => {Hl} N Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply (Rbar_not_le_lt M (u n)).",
                        "VernacExtend",
                        "167f68552d4af3233386d2a8095e2ded47ce9c89"
                    ]
                },
                {
                    "command": [
                        "contradict Hl.",
                        "VernacExtend",
                        "b0fd704608864a015715b0c7a14b60f0655e01f3"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_not_lt.",
                        "VernacExtend",
                        "26846f4220b509cc8abc0a290e0e9d2da4af5e4b"
                    ]
                },
                {
                    "command": [
                        "apply Sup_seq_minor_le with (n - N)%nat.",
                        "VernacExtend",
                        "a25adf39543b8d71b0e48a74894e5876ed6b6921"
                    ]
                },
                {
                    "command": [
                        "by rewrite MyNat.sub_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimInf_supInf_seq",
            "line_nb": 475,
            "steps": [
                {
                    "command": [
                        "rewrite -is_LimSup_opp_LimInf_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite is_LimSup_infSup_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -is_sup_opp_inf_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Rbar_opp_involutive.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "split ; apply is_sup_seq_ext => n ; by rewrite Inf_opp_sup.",
                        "VernacExtend",
                        "fc67683ba0e0581ebff940ac5e88f19cb87bb912"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimSup_seq_ext_loc",
            "line_nb": 482,
            "steps": [
                {
                    "command": [
                        "case: l => [l | | ] /= [Next Hext] Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu eps) => {Hu} H1 H2 ; split.",
                        "VernacExtend",
                        "88c25af51ded328891892c53c941b62f68d72bd0"
                    ]
                },
                {
                    "command": [
                        "move => N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (H1 (N + Next)%nat) => {H1} n [Hn H1].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists n ; rewrite -Hext ; intuition.",
                        "VernacExtend",
                        "fdc225eba05b90a2c644a13ba5d272e97bbb740e"
                    ]
                },
                {
                    "command": [
                        "case: H2 => N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (N + Next)%nat => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -Hext ; intuition.",
                        "VernacExtend",
                        "e4029ed893b2095ae42ef8228a67f0fb36a59743"
                    ]
                },
                {
                    "command": [
                        "move => M N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu M (N + Next)%nat) => {Hu} n [Hn Hu].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists n ; rewrite -Hext ; intuition.",
                        "VernacExtend",
                        "fdc225eba05b90a2c644a13ba5d272e97bbb740e"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu M) => {Hu} N Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (N + Next)%nat => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -Hext ; intuition.",
                        "VernacExtend",
                        "e4029ed893b2095ae42ef8228a67f0fb36a59743"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimSup_seq_ext",
            "line_nb": 500,
            "steps": [
                {
                    "command": [
                        "move => Hext.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_seq_ext_loc.",
                        "VernacExtend",
                        "e296d3951360a67562c3a4bf21718590db51e2fc"
                    ]
                },
                {
                    "command": [
                        "exists O => n _ ; by apply Hext.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimInf_seq_ext_loc",
            "line_nb": 505,
            "steps": [
                {
                    "command": [
                        "case => N Hext Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_opp_LimInf_seq.",
                        "VernacExtend",
                        "36b8005036b7d04e07f430e32fd1558b95d65518"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_seq_ext_loc with (fun n => - u n).",
                        "VernacExtend",
                        "14eed2bcb880b54df0d11408e284dc072c39c032"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn ; by rewrite Hext.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "by apply is_LimSup_opp_LimInf_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimInf_seq_ext",
            "line_nb": 512,
            "steps": [
                {
                    "command": [
                        "move => Hext.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_LimInf_seq_ext_loc.",
                        "VernacExtend",
                        "3f90fde00bb76f6dca826635d44da0239cd012d3"
                    ]
                },
                {
                    "command": [
                        "exists O => n _ ; by apply Hext.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_LimSup_seq",
            "line_nb": 517,
            "steps": [
                {
                    "command": [
                        "case: (ex_inf_seq (fun m : nat => Sup_seq (fun n : nat => u (n + m)%nat))) => l Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "by apply is_LimSup_infSup_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_LimInf_seq",
            "line_nb": 522,
            "steps": [
                {
                    "command": [
                        "case: (ex_sup_seq (fun m : nat => Inf_seq (fun n : nat => u (n + m)%nat))) => l Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "by apply is_LimInf_supInf_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimSup_seq_unique",
            "line_nb": 529,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /LimSup_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: ex_LimSup_seq => lu Hu /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_infSup_seq in H.",
                        "VernacExtend",
                        "1095c0c4d6f750fe7c47985f7748832498053150"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_infSup_seq in Hu.",
                        "VernacExtend",
                        "36a636d29b301c3b89de313ee465c2efae60a095"
                    ]
                },
                {
                    "command": [
                        "rewrite -(is_inf_seq_unique _ _ Hu).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply is_inf_seq_unique.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimInf_seq_unique",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /LimInf_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: ex_LimInf_seq => lu Hu /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply is_LimInf_supInf_seq in H.",
                        "VernacExtend",
                        "302a0ff02d35fa1d5b6863dfa2990a9029bc9e57"
                    ]
                },
                {
                    "command": [
                        "apply is_LimInf_supInf_seq in Hu.",
                        "VernacExtend",
                        "27cc874d9af0b3d0d9e068f768d5ea7a8af7743c"
                    ]
                },
                {
                    "command": [
                        "rewrite -(is_sup_seq_unique _ _ Hu).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply is_sup_seq_unique.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LimSup_InfSup_seq",
            "line_nb": 547,
            "steps": [
                {
                    "command": [
                        "apply is_LimSup_seq_unique.",
                        "VernacExtend",
                        "8a0b5a14c04ad85d3d7f8482e3bd9d1994ad0ebd"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_infSup_seq.",
                        "VernacExtend",
                        "112fc0c677019e9fb73e477e9b8dc531058a330f"
                    ]
                },
                {
                    "command": [
                        "rewrite /Inf_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: ex_inf_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LimInf_SupInf_seq",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "apply is_LimInf_seq_unique.",
                        "VernacExtend",
                        "63a6220bb36d8c1a0804454f94f9075975d127b8"
                    ]
                },
                {
                    "command": [
                        "apply is_LimInf_supInf_seq.",
                        "VernacExtend",
                        "e11b3bb25745233f8266ed56917ed6d78fc6f15c"
                    ]
                },
                {
                    "command": [
                        "rewrite /Sup_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: ex_sup_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimSup_LimInf_seq_le",
            "line_nb": 559,
            "steps": [
                {
                    "command": [
                        "case: ls => [ls | | ] ; case: li => [li | | ] //= Hls Hli.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "apply le_epsilon => e He ; set eps := pos_div_2 (mkposreal e He).",
                        "VernacExtend",
                        "c9a8452e0e06a4c3ac19bcd1b0a42d11d8e194b2"
                    ]
                },
                {
                    "command": [
                        "replace li with ((li - eps) + eps) by ring.",
                        "VernacExtend",
                        "f32173b88aae0c68b85671203b6d6b10f7f161ef"
                    ]
                },
                {
                    "command": [
                        "replace (ls + e) with ((ls + eps) + eps) by (simpl ; field).",
                        "VernacExtend",
                        "f9d986d70433ae6e87755d7a28b532442d5f61d4"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_r, Rlt_le.",
                        "VernacExtend",
                        "bb59c61c6e587abc3f55dc69b30c9ba07e48f487"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (Hls eps)) => {Hls} Ns Hls.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (Hli eps)) => {Hli} Ni Hli.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (u (Ns + Ni)%nat).",
                        "VernacExtend",
                        "fcb295f79c03fa1c214851deb9597f7c4e670198"
                    ]
                },
                {
                    "command": [
                        "apply Hli ; by intuition.",
                        "VernacExtend",
                        "f964a2c90cacd529a3131d8057d6fe49139fc5b5"
                    ]
                },
                {
                    "command": [
                        "apply Hls ; by intuition.",
                        "VernacExtend",
                        "44e5ca8eac9298987b2dd2de53502acb107477a2"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (Hls (mkposreal _ Rlt_0_1))) => {Hls} /= Ns Hls.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Hli (ls + 1)) => {Hli} Ni Hli.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "absurd (ls + 1 < u (Ns + Ni)%nat).",
                        "VernacExtend",
                        "c0e471b84147f4c1de3a824746aa5b68375fa54b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le, Hls ; by intuition.",
                        "VernacExtend",
                        "f645598ff65bd35bb4a7a85f6faa34192bd8a81f"
                    ]
                },
                {
                    "command": [
                        "apply Hli ; by intuition.",
                        "VernacExtend",
                        "f964a2c90cacd529a3131d8057d6fe49139fc5b5"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (Hli (mkposreal _ Rlt_0_1))) => {Hli} /= Ni Hli.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Hls (li - 1)) => {Hls} Ns Hls.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "absurd (li - 1 < u (Ns + Ni)%nat).",
                        "VernacExtend",
                        "dc44c8666b7379703973bc11464c52cf695ee11d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le, Hls ; by intuition.",
                        "VernacExtend",
                        "f645598ff65bd35bb4a7a85f6faa34192bd8a81f"
                    ]
                },
                {
                    "command": [
                        "apply Hli ; by intuition.",
                        "VernacExtend",
                        "f964a2c90cacd529a3131d8057d6fe49139fc5b5"
                    ]
                },
                {
                    "command": [
                        "case: (Hli 0) => {Hli} /= Ni Hli.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Hls 0) => {Hls} Ns Hls.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "absurd (0 < u (Ns + Ni)%nat).",
                        "VernacExtend",
                        "6585524dbcbbf94c8b80f135dd15dd501cb0d60d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le, Hls ; by intuition.",
                        "VernacExtend",
                        "f645598ff65bd35bb4a7a85f6faa34192bd8a81f"
                    ]
                },
                {
                    "command": [
                        "apply Hli ; by intuition.",
                        "VernacExtend",
                        "f964a2c90cacd529a3131d8057d6fe49139fc5b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LimSup_LimInf_seq_le",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "rewrite /LimInf_seq ; case: ex_LimInf_seq => /= li Hli.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite /LimSup_seq ; case: ex_LimSup_seq => /= ls Hls.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by apply is_LimSup_LimInf_seq_le with u.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimSup_seq_const",
            "line_nb": 591,
            "steps": [
                {
                    "command": [
                        "intros eps ; split.",
                        "VernacExtend",
                        "1caec8fa3aff7a5b4af0d3144989b59733549841"
                    ]
                },
                {
                    "command": [
                        "intros N ; exists N ; split.",
                        "VernacExtend",
                        "9ac4aa051b89a3e6b591bf0de534fa1fd3f27cfc"
                    ]
                },
                {
                    "command": [
                        "by apply le_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; ring_simplify.",
                        "VernacExtend",
                        "969fc87537fdaad612d2a1aa70d377f614654753"
                    ]
                },
                {
                    "command": [
                        "by apply eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists O => _ _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; ring_simplify.",
                        "VernacExtend",
                        "969fc87537fdaad612d2a1aa70d377f614654753"
                    ]
                },
                {
                    "command": [
                        "by apply eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LimSup_seq_const",
            "line_nb": 601,
            "steps": [
                {
                    "command": [
                        "apply is_LimSup_seq_unique.",
                        "VernacExtend",
                        "8a0b5a14c04ad85d3d7f8482e3bd9d1994ad0ebd"
                    ]
                },
                {
                    "command": [
                        "by apply is_LimSup_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimInf_seq_const",
            "line_nb": 605,
            "steps": [
                {
                    "command": [
                        "intros eps ; split.",
                        "VernacExtend",
                        "1caec8fa3aff7a5b4af0d3144989b59733549841"
                    ]
                },
                {
                    "command": [
                        "intros N ; exists N ; split.",
                        "VernacExtend",
                        "9ac4aa051b89a3e6b591bf0de534fa1fd3f27cfc"
                    ]
                },
                {
                    "command": [
                        "by apply le_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; ring_simplify.",
                        "VernacExtend",
                        "969fc87537fdaad612d2a1aa70d377f614654753"
                    ]
                },
                {
                    "command": [
                        "by apply eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists O => _ _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; ring_simplify.",
                        "VernacExtend",
                        "969fc87537fdaad612d2a1aa70d377f614654753"
                    ]
                },
                {
                    "command": [
                        "by apply eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LimInf_seq_const",
            "line_nb": 615,
            "steps": [
                {
                    "command": [
                        "apply is_LimInf_seq_unique.",
                        "VernacExtend",
                        "63a6220bb36d8c1a0804454f94f9075975d127b8"
                    ]
                },
                {
                    "command": [
                        "by apply is_LimInf_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LimSup_seq_opp",
            "line_nb": 619,
            "steps": [
                {
                    "command": [
                        "rewrite LimSup_InfSup_seq LimInf_SupInf_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Inf_opp_sup ; apply f_equal, Sup_seq_ext => m.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "rewrite Inf_opp_sup ; by apply f_equal, Sup_seq_ext => n.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LimInf_seq_opp",
            "line_nb": 624,
            "steps": [
                {
                    "command": [
                        "rewrite LimSup_InfSup_seq LimInf_SupInf_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Sup_opp_inf ; apply f_equal, Inf_seq_ext => m.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "rewrite Sup_opp_inf ; by apply f_equal, Inf_seq_ext => n.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LimInf_le",
            "line_nb": 666,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_opp_le.",
                        "VernacExtend",
                        "5cbcd8d55cfd99a5ec55818c01018146ad4610f6"
                    ]
                },
                {
                    "command": [
                        "rewrite -!LimSup_seq_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply LimSup_le.",
                        "VernacExtend",
                        "0705f7dfc734b3507d6c1c17587405e5202a67e3"
                    ]
                },
                {
                    "command": [
                        "move: H ; apply filter_imp => n.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by apply Ropp_le_contravar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimSup_seq_scal_pos",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "case: l => [l | | ] /= Ha Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "suff He : 0 < eps / a.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "case: (Hu (mkposreal _ He)) => {Hu} /= H1 H2 ; split.",
                        "VernacExtend",
                        "88c25af51ded328891892c53c941b62f68d72bd0"
                    ]
                },
                {
                    "command": [
                        "move => N ; case: (H1 N) => {H1} n [Hn H1].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "exists n ; split.",
                        "VernacExtend",
                        "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm _ (u n)) ; apply Rlt_div_l.",
                        "VernacExtend",
                        "ad4548a5215923665bf1a4e0a493dbd7f6be2e81"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := H1) ; right ; field ; by apply Rgt_not_eq.",
                        "VernacExtend",
                        "b9dda23bfcfee4fcc435c04aecad6b6859f71e35"
                    ]
                },
                {
                    "command": [
                        "case: H2 => N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm _ (u n)) ; apply Rlt_div_r.",
                        "VernacExtend",
                        "d281af2efbc3e529ecb1b881369ae91d1aee6482"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := H2 _ Hn) ; right ; field ; by apply Rgt_not_eq.",
                        "VernacExtend",
                        "6f750e94b82915410cb3aaf7a5e22d83c1a0ec6b"
                    ]
                },
                {
                    "command": [
                        "apply Rdiv_lt_0_compat ; [ by case eps | by [] ].",
                        "VernacExtend",
                        "27707bf39d25840f138d31c75a1820db21a064b1"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rlt_le _ _ Ha) => // H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => {H} // _ _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move => M N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu (M / a) N) => {Hu} n [Hn Hu].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists n ; split.",
                        "VernacExtend",
                        "d530b947bf0d77c674fe737a0ec3a3df5987cfbb"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm _ (u n)) ; apply Rlt_div_l.",
                        "VernacExtend",
                        "ad4548a5215923665bf1a4e0a493dbd7f6be2e81"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rlt_le _ _ Ha) => // H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => {H} // _ _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu (M / a)) => {Hu} N Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm _ (u n)) ; apply Rlt_div_r.",
                        "VernacExtend",
                        "d281af2efbc3e529ecb1b881369ae91d1aee6482"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimInf_seq_scal_pos",
            "line_nb": 709,
            "steps": [
                {
                    "command": [
                        "move => Ha Hu.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_opp_LimInf_seq in Hu.",
                        "VernacExtend",
                        "5aa0e0d3a0d9d0e65bad03ef72ee3a01a9ee2f4e"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_opp_LimInf_seq.",
                        "VernacExtend",
                        "36b8005036b7d04e07f430e32fd1558b95d65518"
                    ]
                },
                {
                    "command": [
                        "replace (Rbar_opp (Rbar_mult a l)) with (Rbar_mult a (Rbar_opp l)).",
                        "VernacExtend",
                        "37ad93c153427e2c056caa83f5c9a000ffe58294"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_seq_ext with (fun n => a * - u n).",
                        "VernacExtend",
                        "44e70e1015a08916f95b18df532e7074349a7315"
                    ]
                },
                {
                    "command": [
                        "move => n ; ring.",
                        "VernacExtend",
                        "550d555a37db07b848ee1c0dcb59e4bba252650f"
                    ]
                },
                {
                    "command": [
                        "by apply is_LimSup_seq_scal_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (l) => [x | | ] /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply f_equal ; ring.",
                        "VernacExtend",
                        "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rlt_le _ _ Ha) => // H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => // H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rlt_le _ _ Ha) => // H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rlt_not_eq _ _ Ha) => // H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimSup_seq_ind_1",
            "line_nb": 724,
            "steps": [
                {
                    "command": [
                        "case: l => [l | | ] ; split => //= Hu.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu eps) => {Hu} H1 H2 ; split.",
                        "VernacExtend",
                        "88c25af51ded328891892c53c941b62f68d72bd0"
                    ]
                },
                {
                    "command": [
                        "move => N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (H1 (S N)) => {H1} n [Hn H1].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (pred n).",
                        "VernacExtend",
                        "011835cd0e0e9459c0eaf5e10f15b9cc97e24fc5"
                    ]
                },
                {
                    "command": [
                        "case: (n) Hn H1 => /= [ | m] Hm H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_O in Hm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by apply le_S_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: H2 => N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply H2 ; intuition.",
                        "VernacExtend",
                        "62ccf470386d42ddfc8ada6b4a85def485590063"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu eps) => {Hu} H1 H2 ; split.",
                        "VernacExtend",
                        "88c25af51ded328891892c53c941b62f68d72bd0"
                    ]
                },
                {
                    "command": [
                        "move => N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (H1 N) => {H1} n [Hn H1].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (S n) ; intuition.",
                        "VernacExtend",
                        "152f16de4af2c210bb4c791d6bcf7a2cc7268bf4"
                    ]
                },
                {
                    "command": [
                        "case: H2 => N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (S N) => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (n) Hn => /= [ | m] Hm.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_O in Hm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply H2 ; intuition.",
                        "VernacExtend",
                        "62ccf470386d42ddfc8ada6b4a85def485590063"
                    ]
                },
                {
                    "command": [
                        "move => M N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu M (S N)) => {Hu} n [Hn Hu].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (pred n).",
                        "VernacExtend",
                        "011835cd0e0e9459c0eaf5e10f15b9cc97e24fc5"
                    ]
                },
                {
                    "command": [
                        "case: (n) Hn Hu => /= [ | m] Hm Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_O in Hm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by apply le_S_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu M N) => {Hu} n [Hn Hu].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (S n) ; intuition.",
                        "VernacExtend",
                        "152f16de4af2c210bb4c791d6bcf7a2cc7268bf4"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu M) => {Hu} N Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Hu ; intuition.",
                        "VernacExtend",
                        "bbce64f41960ad719382bd0ee077f2ad2a48bc46"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu M) => {Hu} N Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (S N) => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (n) Hn => /= [ | m] Hm.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_O in Hm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Hu ; intuition.",
                        "VernacExtend",
                        "bbce64f41960ad719382bd0ee077f2ad2a48bc46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimInf_seq_ind_1",
            "line_nb": 771,
            "steps": [
                {
                    "command": [
                        "rewrite -?is_LimSup_opp_LimInf_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply is_LimSup_seq_ind_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimSup_seq_ind_k",
            "line_nb": 775,
            "steps": [
                {
                    "command": [
                        "elim: k u => [ | k IH] /= u.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "split ; apply is_LimSup_seq_ext => n ; by rewrite -plus_n_O.",
                        "VernacExtend",
                        "fc67683ba0e0581ebff940ac5e88f19cb87bb912"
                    ]
                },
                {
                    "command": [
                        "rewrite is_LimSup_seq_ind_1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH (fun n => u (S n))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "split ; apply is_LimSup_seq_ext => n ; by rewrite plus_n_Sm.",
                        "VernacExtend",
                        "fc67683ba0e0581ebff940ac5e88f19cb87bb912"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimInf_seq_ind_k",
            "line_nb": 782,
            "steps": [
                {
                    "command": [
                        "rewrite -?is_LimSup_opp_LimInf_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply (is_LimSup_seq_ind_k (fun n => - u n)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_spec",
            "line_nb": 791,
            "steps": [
                {
                    "command": [
                        "destruct l as [l| |] ; split.",
                        "VernacExtend",
                        "229a2f1d639d91740395bce4727cdf4cd178db1d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H P [eps LP].",
                        "VernacExtend",
                        "17632fc297e5ea1852f56e45f60d632d6c052b0d"
                    ]
                },
                {
                    "command": [
                        "destruct (H eps) as [N HN].",
                        "VernacExtend",
                        "279205d556382ae0acca164dbecebaddead6dfcc"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply LP.",
                        "VernacExtend",
                        "099c424a8903c296b67973586f11183c07d7f16d"
                    ]
                },
                {
                    "command": [
                        "now apply HN.",
                        "VernacExtend",
                        "f3b874ae79802fd5ccaeb88ecf71849fe3b1a368"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros LP eps.",
                        "VernacExtend",
                        "ce45e74969239e0a1aed95c1a1134f1f259f2e77"
                    ]
                },
                {
                    "command": [
                        "specialize (LP (fun y => Rabs (y - l) < eps)).",
                        "VernacExtend",
                        "2816c95423653e0798f3cb0817db736ba30a039c"
                    ]
                },
                {
                    "command": [
                        "apply LP.",
                        "VernacExtend",
                        "099c424a8903c296b67973586f11183c07d7f16d"
                    ]
                },
                {
                    "command": [
                        "now exists eps.",
                        "VernacExtend",
                        "231859d3bd429d5cb9a46c5a8150f7440e5ea441"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H P [M LP].",
                        "VernacExtend",
                        "86538739fbff626e1019f8ae61bcd24b26a35c0a"
                    ]
                },
                {
                    "command": [
                        "destruct (H M) as [N HN].",
                        "VernacExtend",
                        "8044b3be97301c5191eb90f48fddc7bba6975282"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply LP.",
                        "VernacExtend",
                        "099c424a8903c296b67973586f11183c07d7f16d"
                    ]
                },
                {
                    "command": [
                        "now apply HN.",
                        "VernacExtend",
                        "f3b874ae79802fd5ccaeb88ecf71849fe3b1a368"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros LP M.",
                        "VernacExtend",
                        "a6d00c9b47e27b3f819cc49cf5b2e6c8d0246d3b"
                    ]
                },
                {
                    "command": [
                        "specialize (LP (fun y => M < y)).",
                        "VernacExtend",
                        "9e5bb09c8c1eab7402fbf6eec1e3c541e9bfb8a3"
                    ]
                },
                {
                    "command": [
                        "apply LP.",
                        "VernacExtend",
                        "099c424a8903c296b67973586f11183c07d7f16d"
                    ]
                },
                {
                    "command": [
                        "now exists M.",
                        "VernacExtend",
                        "d209ee394e51e963b50da18371a61ccbd1897fc7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H P [M LP].",
                        "VernacExtend",
                        "86538739fbff626e1019f8ae61bcd24b26a35c0a"
                    ]
                },
                {
                    "command": [
                        "destruct (H M) as [N HN].",
                        "VernacExtend",
                        "8044b3be97301c5191eb90f48fddc7bba6975282"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply LP.",
                        "VernacExtend",
                        "099c424a8903c296b67973586f11183c07d7f16d"
                    ]
                },
                {
                    "command": [
                        "now apply HN.",
                        "VernacExtend",
                        "f3b874ae79802fd5ccaeb88ecf71849fe3b1a368"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros LP M.",
                        "VernacExtend",
                        "a6d00c9b47e27b3f819cc49cf5b2e6c8d0246d3b"
                    ]
                },
                {
                    "command": [
                        "specialize (LP (fun y => y < M)).",
                        "VernacExtend",
                        "3e48631aaf67205d867b689525e781eeab41d56c"
                    ]
                },
                {
                    "command": [
                        "apply LP.",
                        "VernacExtend",
                        "099c424a8903c296b67973586f11183c07d7f16d"
                    ]
                },
                {
                    "command": [
                        "now exists M.",
                        "VernacExtend",
                        "d209ee394e51e963b50da18371a61ccbd1897fc7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_Reals",
            "line_nb": 827,
            "steps": [
                {
                    "command": [
                        "split => Hl.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move => e He.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply (Hl (fun y => R_dist y l < e)).",
                        "VernacExtend",
                        "2831abaaceaadab9dc588238df0024a577d09c5d"
                    ]
                },
                {
                    "command": [
                        "now exists (mkposreal _ He).",
                        "VernacExtend",
                        "9e322202d399b0fa272b8341c3ae71acb3862bc8"
                    ]
                },
                {
                    "command": [
                        "unfold is_lim_seq.",
                        "VernacExtend",
                        "941b862a848792e0a22e9ca9550cec69086d5d5f"
                    ]
                },
                {
                    "command": [
                        "change (Rbar_locally l) with (locally l).",
                        "VernacExtend",
                        "ef8a1cc7fa2329f0efb1d7712acdd96343fc1d9f"
                    ]
                },
                {
                    "command": [
                        "apply (filterlim_locally u l).",
                        "VernacExtend",
                        "88529b3181d1b88a15ee718b1af923721dc23bd7"
                    ]
                },
                {
                    "command": [
                        "case => e He.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Hl e He) => {Hl} /= N Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply (Hl n Hn).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_LimSup_seq",
            "line_nb": 852,
            "steps": [
                {
                    "command": [
                        "move /is_lim_seq_spec.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: l => [l | | ] /= Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hu eps) => {Hu} N Hu ; split.",
                        "VernacExtend",
                        "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
                    ]
                },
                {
                    "command": [
                        "move => N0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (N + N0)%nat ; split.",
                        "VernacExtend",
                        "83503f1d102e258d44b5f14e278991b0e751d7fc"
                    ]
                },
                {
                    "command": [
                        "by apply le_plus_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_lt_between', Hu, le_plus_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_lt_between', Hu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M N0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu M) => {Hu} N Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (N + N0)%nat ; split.",
                        "VernacExtend",
                        "83503f1d102e258d44b5f14e278991b0e751d7fc"
                    ]
                },
                {
                    "command": [
                        "by apply le_plus_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hu, le_plus_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_LimInf_seq",
            "line_nb": 869,
            "steps": [
                {
                    "command": [
                        "move /is_lim_seq_spec.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: l => [l | | ] /= Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hu eps) => {Hu} N Hu ; split.",
                        "VernacExtend",
                        "9ab8abd9d7e6d942d4fdf80b0def2a44329f0ba8"
                    ]
                },
                {
                    "command": [
                        "move => N0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (N + N0)%nat ; split.",
                        "VernacExtend",
                        "83503f1d102e258d44b5f14e278991b0e751d7fc"
                    ]
                },
                {
                    "command": [
                        "by apply le_plus_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_lt_between', Hu, le_plus_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_lt_between', Hu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M N0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu M) => {Hu} N Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (N + N0)%nat ; split.",
                        "VernacExtend",
                        "83503f1d102e258d44b5f14e278991b0e751d7fc"
                    ]
                },
                {
                    "command": [
                        "by apply le_plus_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hu, le_plus_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_LimSup_LimInf_lim_seq",
            "line_nb": 886,
            "steps": [
                {
                    "command": [
                        "case: l => [l | | ] /= Hs Hi ; apply is_lim_seq_spec.",
                        "VernacExtend",
                        "ee842484096a21834ae56a6225a23156227e95fc"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (Hs eps)) => {Hs} Ns Hs.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (Hi eps)) => {Hi} Ni Hi.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (Ns + Ni)%nat => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' ; split.",
                        "VernacExtend",
                        "219fa8a18e1bec41b3e80f61c4b73c04c06468a8"
                    ]
                },
                {
                    "command": [
                        "apply Hi ; intuition.",
                        "VernacExtend",
                        "dd6aec883f5746f680f54979b849eabfd4a12eda"
                    ]
                },
                {
                    "command": [
                        "apply Hs ; intuition.",
                        "VernacExtend",
                        "c5842fe2ade1f5a7943665831f2bb13e97cde0d4"
                    ]
                },
                {
                    "command": [
                        "exact Hi.",
                        "VernacExtend",
                        "135dd8008fc4004ce03777b44171728c65be10be"
                    ]
                },
                {
                    "command": [
                        "exact Hs.",
                        "VernacExtend",
                        "3ca81b7bb0123d2a04d1102c823a36576b09de82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_LimSup_LimInf_seq",
            "line_nb": 898,
            "steps": [
                {
                    "command": [
                        "split => Hl.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: Hl => l Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "transitivity l.",
                        "VernacExtend",
                        "74b269d0361492166a0cde770adca133c971e4a0"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_seq_unique.",
                        "VernacExtend",
                        "8a0b5a14c04ad85d3d7f8482e3bd9d1994ad0ebd"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_LimSup_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, is_LimInf_seq_unique.",
                        "VernacExtend",
                        "fe1356f84c347fa9930c5a7e8802ad2f423229a9"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_LimInf_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (LimSup_seq u).",
                        "VernacExtend",
                        "0df8e9beb597d8ae8b6c946fe3e9dab0c4b9ee69"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_LimInf_lim_seq.",
                        "VernacExtend",
                        "553f06667beacf4acbee1b530530396e6e862c5b"
                    ]
                },
                {
                    "command": [
                        "rewrite /LimSup_seq ; by case: ex_LimSup_seq.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "rewrite Hl /LimInf_seq ; by case: ex_LimInf_seq.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_ext_loc",
            "line_nb": 911,
            "steps": [
                {
                    "command": [
                        "apply filterlim_ext_loc.",
                        "VernacExtend",
                        "b1bfeab64804f9bca017cf3228230f12ef2c8f11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_ext_loc",
            "line_nb": 914,
            "steps": [
                {
                    "command": [
                        "move => H [l H0].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists l ; by apply is_lim_seq_ext_loc with u.",
                        "VernacExtend",
                        "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_ext_loc",
            "line_nb": 918,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite /Lim_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun x => Rbar_div_pos x _)).",
                        "VernacExtend",
                        "cfdadb44e2b51771099f7fe538f206f76b87b05a"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 ; apply sym_eq.",
                        "VernacExtend",
                        "5a4413f6cb670fc27b6d28763d881196a93216b9"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_seq_unique.",
                        "VernacExtend",
                        "8a0b5a14c04ad85d3d7f8482e3bd9d1994ad0ebd"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_seq_ext_loc with u.",
                        "VernacExtend",
                        "e18d25f79c1bbc7b1f6fe6bb973e709f560d202b"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /LimSup_seq ; by case: ex_LimSup_seq.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "apply is_LimInf_seq_unique.",
                        "VernacExtend",
                        "63a6220bb36d8c1a0804454f94f9075975d127b8"
                    ]
                },
                {
                    "command": [
                        "apply is_LimInf_seq_ext_loc with u.",
                        "VernacExtend",
                        "75161649b828dd3e7924f84c4b68da08c4bc673a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /LimInf_seq ; by case: ex_LimInf_seq.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_ext",
            "line_nb": 932,
            "steps": [
                {
                    "command": [
                        "move => Hext.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_ext_loc.",
                        "VernacExtend",
                        "84e147b1ab2e69f0f71e7d926ece156217c03653"
                    ]
                },
                {
                    "command": [
                        "by exists O.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_ext",
            "line_nb": 937,
            "steps": [
                {
                    "command": [
                        "move => H [l H0].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists l ; by apply is_lim_seq_ext with u.",
                        "VernacExtend",
                        "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_ext",
            "line_nb": 941,
            "steps": [
                {
                    "command": [
                        "move => Hext.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_ext_loc.",
                        "VernacExtend",
                        "08e7386a15ead02f2e0ccc11bb83c0615aaf6aaa"
                    ]
                },
                {
                    "command": [
                        "by exists O.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_unique",
            "line_nb": 946,
            "steps": [
                {
                    "command": [
                        "move => Hu.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /Lim_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace l with (Rbar_div_pos (Rbar_plus l l) {| pos := 2; cond_pos := Rlt_R0_R2 |}) by (case: (l) => [x | | ] //= ; apply f_equal ; field).",
                        "VernacExtend",
                        "884ca56ae443f7b12338e51a96ba71674be359f0"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun x => Rbar_div_pos x _)).",
                        "VernacExtend",
                        "cfdadb44e2b51771099f7fe538f206f76b87b05a"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2.",
                        "VernacExtend",
                        "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_seq_unique.",
                        "VernacExtend",
                        "8a0b5a14c04ad85d3d7f8482e3bd9d1994ad0ebd"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_LimSup_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_LimInf_seq_unique.",
                        "VernacExtend",
                        "63a6220bb36d8c1a0804454f94f9075975d127b8"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_LimInf_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_correct",
            "line_nb": 957,
            "steps": [
                {
                    "command": [
                        "intros (l,H).",
                        "VernacExtend",
                        "3fda3140394abbcf85ec93d7935c462cf104be2c"
                    ]
                },
                {
                    "command": [
                        "cut (Lim_seq u = l).",
                        "VernacExtend",
                        "a60cc428b158f7b2cc322cc7cb52d432a38ebd70"
                    ]
                },
                {
                    "command": [
                        "intros ; rewrite H0 ; apply H.",
                        "VernacExtend",
                        "c427248083a030663c551b953879e257985ecf38"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique, H.",
                        "VernacExtend",
                        "82e77c80d1c7be0e0445893dee2e0b529080ca2a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_correct'",
            "line_nb": 963,
            "steps": [
                {
                    "command": [
                        "intros (l,H).",
                        "VernacExtend",
                        "3fda3140394abbcf85ec93d7935c462cf104be2c"
                    ]
                },
                {
                    "command": [
                        "cut (real (Lim_seq u) = l).",
                        "VernacExtend",
                        "5149774c800397139226308dcc4d09e3bf685253"
                    ]
                },
                {
                    "command": [
                        "intros ; rewrite H0 ; apply H.",
                        "VernacExtend",
                        "c427248083a030663c551b953879e257985ecf38"
                    ]
                },
                {
                    "command": [
                        "replace l with (real l) by auto.",
                        "VernacExtend",
                        "86f98225f6d2e8f866ff6076f31a2c91ae379e9a"
                    ]
                },
                {
                    "command": [
                        "apply f_equal, is_lim_seq_unique, H.",
                        "VernacExtend",
                        "cc03821b799024699837f53ffcfbc84f07887df2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_finite_lim_seq_correct",
            "line_nb": 970,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "case => l Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by exists l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (is_lim_seq_unique _ _ Hl).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case ; case => l Hl H.",
                        "VernacExtend",
                        "f5c637551d7ace847ffea0c2c9ae9f848858e99e"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "rewrite -(is_lim_seq_unique _ _ Hl).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite H (is_lim_seq_unique _ _ Hl).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_dec",
            "line_nb": 981,
            "steps": [
                {
                    "command": [
                        "case: (Rbar_eq_dec (LimSup_seq u) (LimInf_seq u)) => H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "left ; by apply ex_lim_LimSup_LimInf_seq.",
                        "VernacExtend",
                        "8d1d3855bd3af5f36952354b4669569e4c0e7e37"
                    ]
                },
                {
                    "command": [
                        "right ; contradict H ; by apply ex_lim_LimSup_LimInf_seq.",
                        "VernacExtend",
                        "91cc0d33f4fd7b1dfcd4dfde17a46572ca4012c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_finite_lim_seq_dec",
            "line_nb": 986,
            "steps": [
                {
                    "command": [
                        "case: (ex_lim_seq_dec u) => H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_correct in H.",
                        "VernacExtend",
                        "922d480e665803c534a201f4f7ce2163ea41d20e"
                    ]
                },
                {
                    "command": [
                        "case: (Lim_seq u) H => [l | | ] H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "left ; by exists l.",
                        "VernacExtend",
                        "8d1d3855bd3af5f36952354b4669569e4c0e7e37"
                    ]
                },
                {
                    "command": [
                        "right ; rewrite ex_finite_lim_seq_correct.",
                        "VernacExtend",
                        "659a076b1460ddc341bf9f74b080a8f7b40014b2"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_lim_seq_unique _ _ H) /is_finite //= ; by case.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "right ; rewrite ex_finite_lim_seq_correct.",
                        "VernacExtend",
                        "659a076b1460ddc341bf9f74b080a8f7b40014b2"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_lim_seq_unique _ _ H) /is_finite //= ; by case.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "right ; rewrite ex_finite_lim_seq_correct.",
                        "VernacExtend",
                        "659a076b1460ddc341bf9f74b080a8f7b40014b2"
                    ]
                },
                {
                    "command": [
                        "contradict H ; by apply H.",
                        "VernacExtend",
                        "3c26dcba9e578f112cb42e360e20b3fb78a8b9cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_cauchy_corr",
            "line_nb": 999,
            "steps": [
                {
                    "command": [
                        "split => Hcv.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_correct' in Hcv.",
                        "VernacExtend",
                        "9899c2dd2cd37430e5a18b6713740def4ca1adee"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in Hcv.",
                        "VernacExtend",
                        "7fb31b55e42af94a4ff1919281f51bc816870e91"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hcv (pos_div_2 eps)) => /= {Hcv} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n m Hn Hm.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "replace (u n - u m) with ((u n - (real (Lim_seq u))) - (u m - (real (Lim_seq u)))) by ring.",
                        "VernacExtend",
                        "8aed87890614cc8fe4ba05f82d6d49905b30e0d4"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
                        "VernacExtend",
                        "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Ropp (double_var eps).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat ; by apply H.",
                        "VernacExtend",
                        "b3fdf994ea9deeef54321a210af276ae83c6c412"
                    ]
                },
                {
                    "command": [
                        "exists (LimSup_seq u).",
                        "VernacExtend",
                        "0df8e9beb597d8ae8b6c946fe3e9dab0c4b9ee69"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "intros eps.",
                        "VernacExtend",
                        "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
                    ]
                },
                {
                    "command": [
                        "rewrite /LimSup_seq ; case: ex_LimSup_seq => /= l Hl.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "case: (Hcv (pos_div_2 eps)) => {Hcv} /= Ncv Hcv.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: l Hl => [l | | ] /= Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (pos_div_2 eps)) => {Hl} /= H1 [Nl H2].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (Ncv + Nl)%nat => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' ; split.",
                        "VernacExtend",
                        "219fa8a18e1bec41b3e80f61c4b73c04c06468a8"
                    ]
                },
                {
                    "command": [
                        "case: (H1 Ncv) => {H1} m [Hm H1].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "replace (l - eps) with ((l - eps / 2) - eps / 2) by field.",
                        "VernacExtend",
                        "57a72d8267cf71b2bbd43680899390871b7fad16"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (u m - eps / 2).",
                        "VernacExtend",
                        "5ed03f7deb9bbe7e17a59464f516d8162c17827b"
                    ]
                },
                {
                    "command": [
                        "by apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between'.",
                        "VernacExtend",
                        "63a15ff3174a06f608196b85267ac5d1aae1e55e"
                    ]
                },
                {
                    "command": [
                        "apply Hcv ; intuition.",
                        "VernacExtend",
                        "db8d517e4d2ce3e19852d7a06b71cf490091134a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (l + eps / 2).",
                        "VernacExtend",
                        "8934a698ba428c786a044db7613302869fb472bb"
                    ]
                },
                {
                    "command": [
                        "apply H2 ; intuition.",
                        "VernacExtend",
                        "62ccf470386d42ddfc8ada6b4a85def485590063"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; field_simplify ; rewrite ?Rdiv_1.",
                        "VernacExtend",
                        "5e1bb58e1096013357ba0c7fcd2c17a152059b8c"
                    ]
                },
                {
                    "command": [
                        "by apply is_pos_div_2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (fun n Hn => proj2 (proj1 (Rabs_lt_between' _ _ _) (Hcv n Ncv Hn (le_refl _)))) => {Hcv} Hcv.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (u Ncv + eps / 2) Ncv) => {Hl} n [Hn Hl].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "contradict Hl ; apply Rle_not_lt, Rlt_le.",
                        "VernacExtend",
                        "96c3a5664f3d71f23d86e648763b41298ae81011"
                    ]
                },
                {
                    "command": [
                        "by apply Hcv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (fun n Hn => proj1 (proj1 (Rabs_lt_between' _ _ _) (Hcv n Ncv Hn (le_refl _)))) => {Hcv} Hcv.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl (u Ncv - eps / 2)) => {Hl} N Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (Hcv _ (le_plus_l Ncv N)) => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "contradict H ; apply Rle_not_lt, Rlt_le, Hl, le_plus_r.",
                        "VernacExtend",
                        "0050609958c611b59cbe216a239d8517c7527509"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_INR",
            "line_nb": 1038,
            "steps": [
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "suff Hm : 0 <= Rmax 0 M.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "exists (S (nfloor (Rmax 0 M) Hm)) => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := le_INR _ _ Hn).",
                        "VernacExtend",
                        "406b2a616c11fef20c9bcb748743e8024153d154"
                    ]
                },
                {
                    "command": [
                        "rewrite /nfloor S_INR.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: nfloor_ex => {n Hn} /= n Hn.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rmax_r 0 M).",
                        "VernacExtend",
                        "f81e987896aa096393be688678a254d560083333"
                    ]
                },
                {
                    "command": [
                        "by apply Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rmax_l.",
                        "VernacExtend",
                        "e8bdf305d751b877364ec9794b15c2d6e134dc98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_INR",
            "line_nb": 1050,
            "steps": [
                {
                    "command": [
                        "exists p_infty ; by apply is_lim_seq_INR.",
                        "VernacExtend",
                        "1bed9b0fe38de2029a82e9b610831cdebb89793a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_INR",
            "line_nb": 1053,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique.",
                        "VernacExtend",
                        "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_INR.",
                        "VernacExtend",
                        "a24edd871cee6630005256236f6299caaa48c5b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_const",
            "line_nb": 1058,
            "steps": [
                {
                    "command": [
                        "apply filterlim_const.",
                        "VernacExtend",
                        "ff971edf84d1cf6e134869f4729acc40969816e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_const",
            "line_nb": 1061,
            "steps": [
                {
                    "command": [
                        "exists a ; by apply is_lim_seq_const.",
                        "VernacExtend",
                        "01e663788a4fe7b8355e383e740e14ec31935825"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_const",
            "line_nb": 1064,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique.",
                        "VernacExtend",
                        "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_const.",
                        "VernacExtend",
                        "841054990caf6b74d9f691433bc35ebf9401e15a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_subseq_loc",
            "line_nb": 1069,
            "steps": [
                {
                    "command": [
                        "intros phi [M Hphi] P [N HP].",
                        "VernacExtend",
                        "ccc59519aafa01b8497935ca61d18511323ad852"
                    ]
                },
                {
                    "command": [
                        "exists (N+M)%nat.",
                        "VernacExtend",
                        "23a7a0e52b971fd2d31963e44dfe8e4b3ce633c3"
                    ]
                },
                {
                    "command": [
                        "intros n Hn.",
                        "VernacExtend",
                        "4a15d287eb245c84eabfb58cba2e377ac025029a"
                    ]
                },
                {
                    "command": [
                        "apply HP.",
                        "VernacExtend",
                        "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_reg_l with M.",
                        "VernacExtend",
                        "309650ec65211adecf784cb1b02686690906556d"
                    ]
                },
                {
                    "command": [
                        "rewrite Arith.Plus.plus_comm ; apply le_trans with (1:=Hn).",
                        "VernacExtend",
                        "86bc545a56d8b9eaad912e3f0fdc8036aae723ba"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1:=le_plus_r (phi M) _).",
                        "VernacExtend",
                        "1dd6a41e7f758d035a459ec9ba13198a3299a5cd"
                    ]
                },
                {
                    "command": [
                        "assert (H:(forall x, M+phi M + x <= M+phi (x+M))%nat).",
                        "VernacExtend",
                        "359fb418050ba0467a6ed996deb7c6009c718b8f"
                    ]
                },
                {
                    "command": [
                        "induction x as [|x IH].",
                        "VernacExtend",
                        "62fff01c2acc9e04bd712cc9b542bc882c5f698a"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_l plus_0_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply le_refl.",
                        "VernacExtend",
                        "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_Sm.",
                        "VernacExtend",
                        "10308ef961b07f08e71cba91e06650cc774994fe"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_S.",
                        "VernacExtend",
                        "a6fff832d4d879e177c7685ce128cfde6522d8f6"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (1:=IH).",
                        "VernacExtend",
                        "450a66ecd452bc3f574b47094ed3a3e9fd9e9bc2"
                    ]
                },
                {
                    "command": [
                        "apply plus_lt_compat_l.",
                        "VernacExtend",
                        "e6081f5e9aaa580599a0fc8519575c090df5395d"
                    ]
                },
                {
                    "command": [
                        "apply Hphi.",
                        "VernacExtend",
                        "06ab14d181837af271fcdc9b86447e9d874d7696"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_r.",
                        "VernacExtend",
                        "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
                    ]
                },
                {
                    "command": [
                        "assert (M <= n)%nat.",
                        "VernacExtend",
                        "7228ffeb0602c35af72ca7c8317443a0b91c5c29"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (2:=Hn); apply le_plus_r.",
                        "VernacExtend",
                        "a3821f6ba119c82c0ba01df8ccafa72ec78c9665"
                    ]
                },
                {
                    "command": [
                        "specialize (H (n-M)%nat).",
                        "VernacExtend",
                        "dba1f011f515dfff468625ee87bfc0e319f21b04"
                    ]
                },
                {
                    "command": [
                        "replace (n-M+M)%nat with n in H.",
                        "VernacExtend",
                        "61039d1a19c916b477225470ee60e99f6017fdac"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (2:=H).",
                        "VernacExtend",
                        "623bc552d9b6875aa45fa4684b6fd634c8202a59"
                    ]
                },
                {
                    "command": [
                        "rewrite (Arith.Plus.plus_comm _ (phi M)) -Arith.Plus.plus_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat_l.",
                        "VernacExtend",
                        "0b54a9a94d1f4251de3f3aca0ea73ceff51e1f05"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply le_refl.",
                        "VernacExtend",
                        "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "rewrite Arith.Plus.plus_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now apply sym_eq, le_plus_minus_r.",
                        "VernacExtend",
                        "5fcf35ef6ce2647671d156eea56361ec1fa95c71"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_subseq",
            "line_nb": 1100,
            "steps": [
                {
                    "command": [
                        "intros phi Hphi.",
                        "VernacExtend",
                        "4e13ba1fc4a5756a0d13ba8de39277ac5f806cb9"
                    ]
                },
                {
                    "command": [
                        "apply eventually_subseq_loc.",
                        "VernacExtend",
                        "9e2e8ed41c9487a2714456e225e5f45baee0ca1a"
                    ]
                },
                {
                    "command": [
                        "by apply filter_forall.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_subseq",
            "line_nb": 1105,
            "steps": [
                {
                    "command": [
                        "intros Hphi.",
                        "VernacExtend",
                        "7e996b3ab315a7121fc542568c9c0bcd4de36d91"
                    ]
                },
                {
                    "command": [
                        "now apply filterlim_comp.",
                        "VernacExtend",
                        "55160f82a6441dca133b3485d9debeae8b5377ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_subseq",
            "line_nb": 1109,
            "steps": [
                {
                    "command": [
                        "move => Hphi [l Hu].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_subseq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_subseq",
            "line_nb": 1114,
            "steps": [
                {
                    "command": [
                        "move => Hphi Hu.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique.",
                        "VernacExtend",
                        "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_subseq.",
                        "VernacExtend",
                        "8487bc4d979fb85c6539b0a6e1a96b8e3eec40f9"
                    ]
                },
                {
                    "command": [
                        "exact Hphi.",
                        "VernacExtend",
                        "306e7e9784b97e1e4385213675cdf8deb484de4f"
                    ]
                },
                {
                    "command": [
                        "by apply Lim_seq_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_incr_1",
            "line_nb": 1121,
            "steps": [
                {
                    "command": [
                        "split ; intros H P HP ; destruct (H P HP) as [N HN].",
                        "VernacExtend",
                        "628d363d77b081f9dfd43205183707ee28313c62"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists N.",
                        "VernacExtend",
                        "3a77aef7937b4644ae655ca246f76b7aa0d197df"
                    ]
                },
                {
                    "command": [
                        "intros n Hn.",
                        "VernacExtend",
                        "4a15d287eb245c84eabfb58cba2e377ac025029a"
                    ]
                },
                {
                    "command": [
                        "apply HN.",
                        "VernacExtend",
                        "90fb629adaf024bbf40093c9f063576731105f38"
                    ]
                },
                {
                    "command": [
                        "now apply le_S.",
                        "VernacExtend",
                        "83e46c3d4ad488778b4895d310e46eba5fd4cd36"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (S N).",
                        "VernacExtend",
                        "e311edc001e909167c32da4a482b57888adfab8c"
                    ]
                },
                {
                    "command": [
                        "intros n Hn.",
                        "VernacExtend",
                        "4a15d287eb245c84eabfb58cba2e377ac025029a"
                    ]
                },
                {
                    "command": [
                        "destruct n as [|n] ; try easy.",
                        "VernacExtend",
                        "eb1242dff01f6d9a625b2629146b065409231f74"
                    ]
                },
                {
                    "command": [
                        "apply HN.",
                        "VernacExtend",
                        "90fb629adaf024bbf40093c9f063576731105f38"
                    ]
                },
                {
                    "command": [
                        "now apply le_S_n.",
                        "VernacExtend",
                        "172d1d429f1fcfbbf2a7810e3e9265685ea093bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_incr_1",
            "line_nb": 1135,
            "steps": [
                {
                    "command": [
                        "split ; move => [l H] ; exists l.",
                        "VernacExtend",
                        "64d13b7fd5fe5db4eb832bfb30354026ca3a91b4"
                    ]
                },
                {
                    "command": [
                        "by apply -> is_lim_seq_incr_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_incr_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_incr_1",
            "line_nb": 1140,
            "steps": [
                {
                    "command": [
                        "rewrite /Lim_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (LimSup_seq (fun n : nat => u (S n))) with (LimSup_seq u).",
                        "VernacExtend",
                        "f2003982d5c816522446017bcf80d58886b93f07"
                    ]
                },
                {
                    "command": [
                        "replace (LimInf_seq (fun n : nat => u (S n))) with (LimInf_seq u).",
                        "VernacExtend",
                        "369f7e8e349a6634470a7bc37b55c4031450e5d4"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /LimInf_seq ; case: ex_LimInf_seq => l1 H1 ; case: ex_LimInf_seq => l2 H2 /= ; case: l1 H1 => [l1 | | ] /= H1 ; case: l2 H2 => [l2 | | ] /= H2.",
                        "VernacExtend",
                        "76a3cf93da6c9c41e9993d0261b6d6b01fd1b19f"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_finite_eq, Rle_antisym ; apply le_epsilon => e He ; set eps := mkposreal e He ; apply Rlt_le.",
                        "VernacExtend",
                        "e0eb00b460de4056742b5426ea33b36f6f83d64f"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (H1 (pos_div_2 eps))) => /= {H1} N H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (proj1 (H2 (pos_div_2 eps)) N) => /= {H2} n [Hn H2].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (u (S n) + e/2).",
                        "VernacExtend",
                        "b8b84886e2c915ad6204b35c0dbbee91b3e3073a"
                    ]
                },
                {
                    "command": [
                        "replace l1 with ((l1-e/2)+e/2) by ring.",
                        "VernacExtend",
                        "1ec40f0c16cff6e82ad49e3eaaba1d5130faa40e"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1 := Hn).",
                        "VernacExtend",
                        "8ac30d3ff1e4a07f44d84ea98e599463c400de71"
                    ]
                },
                {
                    "command": [
                        "apply le_n_Sn.",
                        "VernacExtend",
                        "7889648199cacb866ef42ba6b4c4192f713b44f4"
                    ]
                },
                {
                    "command": [
                        "replace (l2+e) with ((l2+e/2)+e/2) by field.",
                        "VernacExtend",
                        "1b1f59e33f494c11688851317498d9db4cece020"
                    ]
                },
                {
                    "command": [
                        "by apply Rplus_lt_compat_r, H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (H2 (pos_div_2 eps))) => /= {H2} N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (proj1 (H1 (pos_div_2 eps)) (S N)) => /= {H1} .",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case => [ | n] [Hn H1].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_0 in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (u (S n) + e/2).",
                        "VernacExtend",
                        "b8b84886e2c915ad6204b35c0dbbee91b3e3073a"
                    ]
                },
                {
                    "command": [
                        "replace l2 with ((l2-e/2)+e/2) by ring.",
                        "VernacExtend",
                        "ff9a1e2c87abebb7d1470e03ccbf028ec25810cf"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "by apply le_S_n, Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace (l1+e) with ((l1+e/2)+e/2) by field.",
                        "VernacExtend",
                        "9ef4890b79d79921f4156fa17d4d4b09b04f7ed0"
                    ]
                },
                {
                    "command": [
                        "by apply Rplus_lt_compat_r, H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : False => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (H2 (l1+1)) => {H2} N /= H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (proj1 (H1 (mkposreal _ Rlt_0_1)) (S N)) ; case => /= {H1} [ | n] [Hn].",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_0 in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le, H2.",
                        "VernacExtend",
                        "1d6382c1d8a3cd0d2ca3719c3351232e28901160"
                    ]
                },
                {
                    "command": [
                        "by apply le_S_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : False => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (H1 (mkposreal _ Rlt_0_1))) => {H1} N /= H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: ((H2 (l1-1)) N) => /= {H2} n [Hn].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le, H1.",
                        "VernacExtend",
                        "8b5f5d6d369c56c7ace28d864f2fafe5ffe5462b"
                    ]
                },
                {
                    "command": [
                        "by apply le_trans with (2 := le_n_Sn _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : False => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (H1 (l2+1)) => {H1} N /= H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (proj1 (H2 (mkposreal _ Rlt_0_1)) N) => /= {H2} n [Hn].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le, H1.",
                        "VernacExtend",
                        "8b5f5d6d369c56c7ace28d864f2fafe5ffe5462b"
                    ]
                },
                {
                    "command": [
                        "by apply le_trans with (2 := le_n_Sn _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : False => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (H1 0) => {H1} N H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (H2 0 N)=> {H2} n [Hn].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le, H1.",
                        "VernacExtend",
                        "8b5f5d6d369c56c7ace28d864f2fafe5ffe5462b"
                    ]
                },
                {
                    "command": [
                        "by apply le_trans with (2 := le_n_Sn _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : False => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (H2 (mkposreal _ Rlt_0_1))) => /= {H2} N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (H1 (l2-1) (S N)) ; case => [ | n] [Hn].",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_0 in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_not_lt, Rlt_le, H2, le_S_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : False => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (H2 0) => {H2} N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (H1 0 (S N)) ; case => [ | n] [Hn].",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_0 in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_not_lt, Rlt_le, H2, le_S_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /LimSup_seq ; case: ex_LimSup_seq => l1 H1 ; case: ex_LimSup_seq => l2 H2 /= ; case: l1 H1 => [l1 | | ] /= H1 ; case: l2 H2 => [l2 | | ] /= H2.",
                        "VernacExtend",
                        "76a3cf93da6c9c41e9993d0261b6d6b01fd1b19f"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_finite_eq, Rle_antisym ; apply le_epsilon => e He ; set eps := mkposreal e He ; apply Rlt_le.",
                        "VernacExtend",
                        "e0eb00b460de4056742b5426ea33b36f6f83d64f"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (H2 (pos_div_2 eps))) => /= {H2} N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: ((proj1 (H1 (pos_div_2 eps))) (S N)) ; case => /= {H1} [ | n] [Hn H1].",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_0 in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace l1 with ((l1-e/2)+e/2) by ring.",
                        "VernacExtend",
                        "1ec40f0c16cff6e82ad49e3eaaba1d5130faa40e"
                    ]
                },
                {
                    "command": [
                        "replace (l2+e) with ((l2+e/2)+e/2) by field.",
                        "VernacExtend",
                        "1b1f59e33f494c11688851317498d9db4cece020"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (1 := H1).",
                        "VernacExtend",
                        "27640a9cc4abbd2477d95e30f37654f8e9ba3bb0"
                    ]
                },
                {
                    "command": [
                        "by apply H2, le_S_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (H1 (pos_div_2 eps))) => /= {H1} N H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: ((proj1 (H2 (pos_div_2 eps))) N) => /= {H2} n [Hn H2].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "replace l2 with ((l2-e/2)+e/2) by ring.",
                        "VernacExtend",
                        "ff9a1e2c87abebb7d1470e03ccbf028ec25810cf"
                    ]
                },
                {
                    "command": [
                        "replace (l1+e) with ((l1+e/2)+e/2) by field.",
                        "VernacExtend",
                        "9ef4890b79d79921f4156fa17d4d4b09b04f7ed0"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (1 := H2).",
                        "VernacExtend",
                        "02ebc8dd91813ddcd044ea07abeb16ed402d7f8b"
                    ]
                },
                {
                    "command": [
                        "by apply H1, le_trans with (2 := le_n_Sn _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : False => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (H1 (mkposreal _ Rlt_0_1))) => /= {H1} N H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (H2 (l1+1) N) => n [Hn].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_not_lt, Rlt_le, H1, le_trans with (2 := le_n_Sn _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : False => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (H2 (l1-1)) => {H2} N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (proj1 (H1 (mkposreal _ Rlt_0_1)) (S N)) ; case => [ | n] [Hn] /= .",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_0 in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_not_lt, Rlt_le, H2, le_S_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : False => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (H2 (mkposreal _ Rlt_0_1))) => {H2} /= N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (H1 (l2+1) (S N)) ; case => [ | n] [Hn] /= .",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_0 in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_not_lt, Rlt_le, H2, le_S_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : False => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (H2 0) => {H2} N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (H1 0 (S N)) ; case => [ | n] [Hn] /= .",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_0 in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_not_lt, Rlt_le, H2, le_S_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : False => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (H1 (l2-1)) => {H1} N H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (proj1 (H2 (mkposreal _ Rlt_0_1)) N) => /= {H2} n [Hn].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_not_lt, Rlt_le, H1, le_trans with (2 := le_n_Sn _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : False => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (H1 0) => {H1} N H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (H2 0 N) => {H2} n [Hn].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_not_lt, Rlt_le, H1, le_trans with (2 := le_n_Sn _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_incr_n",
            "line_nb": 1248,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "elim: N u => [ | N IH] u Hu.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "move: Hu ; apply is_lim_seq_ext => n ; by rewrite plus_0_r.",
                        "VernacExtend",
                        "dd76215f84b5ec723bc22942b73281b86cf324ad"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_incr_1, IH in Hu.",
                        "VernacExtend",
                        "d17f167e62b51973a47f1520c0b80da80406a9af"
                    ]
                },
                {
                    "command": [
                        "move: Hu ; by apply is_lim_seq_ext => n ; by rewrite plus_n_Sm.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "elim: N u => [ | N IH] u Hu.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "move: Hu ; apply is_lim_seq_ext => n ; by rewrite plus_0_r.",
                        "VernacExtend",
                        "dd76215f84b5ec723bc22942b73281b86cf324ad"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_incr_1, IH.",
                        "VernacExtend",
                        "e8097c15f2beb50b218689fb9ebca18bf5f8375f"
                    ]
                },
                {
                    "command": [
                        "move: Hu ; by apply is_lim_seq_ext => n ; by rewrite plus_n_Sm.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_incr_n",
            "line_nb": 1259,
            "steps": [
                {
                    "command": [
                        "split ; move => [l H] ; exists l.",
                        "VernacExtend",
                        "64d13b7fd5fe5db4eb832bfb30354026ca3a91b4"
                    ]
                },
                {
                    "command": [
                        "by apply -> is_lim_seq_incr_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_incr_n in H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_incr_n",
            "line_nb": 1264,
            "steps": [
                {
                    "command": [
                        "elim: N u => [ | N IH] u.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_ext => n ; by rewrite plus_0_r.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Lim_seq_incr_1 u) -(IH (fun n => u (S n))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_ext => n ; by rewrite plus_n_Sm.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_le",
            "line_nb": 1270,
            "steps": [
                {
                    "command": [
                        "intros T F FF f g lf lg H Hf Hg.",
                        "VernacExtend",
                        "7f5d8dc52acce7170d612bce59e188eaf2eca97e"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_not_lt_le.",
                        "VernacExtend",
                        "609b6610e848b9efc1928d197bd92cc66b06930b"
                    ]
                },
                {
                    "command": [
                        "intros Hl.",
                        "VernacExtend",
                        "5c4705396c649f586841a9235569b2230fedbd7f"
                    ]
                },
                {
                    "command": [
                        "apply filter_not_empty.",
                        "VernacExtend",
                        "cf5fa38cb0b9d0c08ff7dbf8bad953f65ec85d7d"
                    ]
                },
                {
                    "command": [
                        "destruct lf as [lf| |] ; destruct lg as [lg| |] ; try easy.",
                        "VernacExtend",
                        "936382a495acc2732d8091adb702ef4d0fe04937"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (Hl' : 0 < (lf - lg) / 2).",
                        "VernacExtend",
                        "cc53d8dedce80b5f358891b819b2d8392247411f"
                    ]
                },
                {
                    "command": [
                        "apply Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
                    ]
                },
                {
                    "command": [
                        "now apply -> Rminus_lt_0.",
                        "VernacExtend",
                        "e415d66d2eba79a32d8f7fe3281b906f6bca1769"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_R0_R2.",
                        "VernacExtend",
                        "56f346f7d456ea9d1535a96ac932a1c35a8ac229"
                    ]
                },
                {
                    "command": [
                        "assert (Hlf : locally lf (fun y => (lf + lg) / 2 < y)).",
                        "VernacExtend",
                        "5ea3db4f204080b560327b056ed7ef5db53baaec"
                    ]
                },
                {
                    "command": [
                        "apply open_gt.",
                        "VernacExtend",
                        "aadafe094a8527cf0eec7d0efa1928e25fce8263"
                    ]
                },
                {
                    "command": [
                        "replace ((lf + lg) / 2) with (lf - (lf - lg) / 2) by field.",
                        "VernacExtend",
                        "3899fb0d60a303b906ed2bb75ad1af58b72e1a54"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between'.",
                        "VernacExtend",
                        "63a15ff3174a06f608196b85267ac5d1aae1e55e"
                    ]
                },
                {
                    "command": [
                        "by rewrite /Rminus Rplus_opp_r Rabs_R0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "assert (Hlg : locally lg (fun y => y < (lf + lg) / 2)).",
                        "VernacExtend",
                        "822c1dfcf8e3ce9f00ce2caf923564cf36db360e"
                    ]
                },
                {
                    "command": [
                        "apply open_lt.",
                        "VernacExtend",
                        "5470927139a3cf1d185d316473525fd4034c6531"
                    ]
                },
                {
                    "command": [
                        "replace ((lf + lg) / 2) with (lg + (lf - lg) / 2) by field.",
                        "VernacExtend",
                        "10c8133ed667b97c7d5118111f5a45cae4d9917a"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between'.",
                        "VernacExtend",
                        "63a15ff3174a06f608196b85267ac5d1aae1e55e"
                    ]
                },
                {
                    "command": [
                        "by rewrite /Rminus Rplus_opp_r Rabs_R0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "specialize (Hf _ Hlf).",
                        "VernacExtend",
                        "444de505ef313bb0b17c4d79f7f62950ecb203fe"
                    ]
                },
                {
                    "command": [
                        "specialize (Hg _ Hlg).",
                        "VernacExtend",
                        "7c3119959b261085b3dc27d456368717b47c99e7"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap in Hf, Hg.",
                        "VernacExtend",
                        "7338b3c29e4254e79fcc500189f7749fafadb479"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ (filter_and _ _ Hf Hg) H).",
                        "VernacExtend",
                        "ff446085d222473c1c77135eadb3f511bd3f06a4"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros x [[H1 H2] H3].",
                        "VernacExtend",
                        "d32087ef1f5bcac0c3720c94e676a264760eae6f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := H3).",
                        "VernacExtend",
                        "d9680d22ff5eeeee6dc4b5e70e0df562093979b2"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_trans with ((lf + lg) / 2).",
                        "VernacExtend",
                        "9470dabdc7524ac1389572618b21d90180c556b4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (Hlf : locally lf (fun y => lf - 1 < y)).",
                        "VernacExtend",
                        "5e5c320a25ebf847618cf83399266896e88042d4"
                    ]
                },
                {
                    "command": [
                        "apply open_gt.",
                        "VernacExtend",
                        "aadafe094a8527cf0eec7d0efa1928e25fce8263"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between'.",
                        "VernacExtend",
                        "63a15ff3174a06f608196b85267ac5d1aae1e55e"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rminus Rplus_opp_r Rabs_R0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_0_1.",
                        "VernacExtend",
                        "c3f675388bf844e0740197fd71afa66e5eef091d"
                    ]
                },
                {
                    "command": [
                        "assert (Hlg : Rbar_locally m_infty (fun y => Rbar_lt y (lf - 1))).",
                        "VernacExtend",
                        "176d0023dffcfe5f7513bbb439b6fb0e11df340f"
                    ]
                },
                {
                    "command": [
                        "now apply open_Rbar_lt'.",
                        "VernacExtend",
                        "ed6a52a3a4b4260c6b498cd9dd1b117031efcb54"
                    ]
                },
                {
                    "command": [
                        "specialize (Hf _ Hlf).",
                        "VernacExtend",
                        "444de505ef313bb0b17c4d79f7f62950ecb203fe"
                    ]
                },
                {
                    "command": [
                        "specialize (Hg _ Hlg).",
                        "VernacExtend",
                        "7c3119959b261085b3dc27d456368717b47c99e7"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap in Hf, Hg.",
                        "VernacExtend",
                        "7338b3c29e4254e79fcc500189f7749fafadb479"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ (filter_and _ _ Hf Hg) H).",
                        "VernacExtend",
                        "ff446085d222473c1c77135eadb3f511bd3f06a4"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros x [[H1 H2] H3].",
                        "VernacExtend",
                        "d32087ef1f5bcac0c3720c94e676a264760eae6f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := H3).",
                        "VernacExtend",
                        "d9680d22ff5eeeee6dc4b5e70e0df562093979b2"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_trans with (lf - 1).",
                        "VernacExtend",
                        "6c22d6f8c985501cbd869aa66a726f2e69842149"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (Hlf : Rbar_locally p_infty (fun y => Rbar_lt (lg + 1) y)).",
                        "VernacExtend",
                        "8e18b22576cf98baed7d5ee13b71a957f97dfd22"
                    ]
                },
                {
                    "command": [
                        "now apply open_Rbar_gt'.",
                        "VernacExtend",
                        "40e20f71b401900b40a88be218827fbf7daf4362"
                    ]
                },
                {
                    "command": [
                        "assert (Hlg : locally lg (fun y => y < lg + 1)).",
                        "VernacExtend",
                        "92999b4cdb864442daeee82febf23e747c574613"
                    ]
                },
                {
                    "command": [
                        "apply open_lt.",
                        "VernacExtend",
                        "5470927139a3cf1d185d316473525fd4034c6531"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between'.",
                        "VernacExtend",
                        "63a15ff3174a06f608196b85267ac5d1aae1e55e"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rminus Rplus_opp_r Rabs_R0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_0_1.",
                        "VernacExtend",
                        "c3f675388bf844e0740197fd71afa66e5eef091d"
                    ]
                },
                {
                    "command": [
                        "specialize (Hf _ Hlf).",
                        "VernacExtend",
                        "444de505ef313bb0b17c4d79f7f62950ecb203fe"
                    ]
                },
                {
                    "command": [
                        "specialize (Hg _ Hlg).",
                        "VernacExtend",
                        "7c3119959b261085b3dc27d456368717b47c99e7"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap in Hf, Hg.",
                        "VernacExtend",
                        "7338b3c29e4254e79fcc500189f7749fafadb479"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ (filter_and _ _ Hf Hg) H).",
                        "VernacExtend",
                        "ff446085d222473c1c77135eadb3f511bd3f06a4"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros x [[H1 H2] H3].",
                        "VernacExtend",
                        "d32087ef1f5bcac0c3720c94e676a264760eae6f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := H3).",
                        "VernacExtend",
                        "d9680d22ff5eeeee6dc4b5e70e0df562093979b2"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_trans with (lg + 1).",
                        "VernacExtend",
                        "7762a0e3c656418585fa6d4610524dc54a509ea0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (Hlf : Rbar_locally p_infty (fun y => Rbar_lt 0 y)).",
                        "VernacExtend",
                        "9e07f409acf05e9be19a5630aa928b6727b197ce"
                    ]
                },
                {
                    "command": [
                        "now apply open_Rbar_gt'.",
                        "VernacExtend",
                        "40e20f71b401900b40a88be218827fbf7daf4362"
                    ]
                },
                {
                    "command": [
                        "assert (Hlg : Rbar_locally m_infty (fun y => Rbar_lt y 0)).",
                        "VernacExtend",
                        "83b2036d843feaf42eedac015c9f6cd1552ac62b"
                    ]
                },
                {
                    "command": [
                        "now apply open_Rbar_lt'.",
                        "VernacExtend",
                        "ed6a52a3a4b4260c6b498cd9dd1b117031efcb54"
                    ]
                },
                {
                    "command": [
                        "specialize (Hf _ Hlf).",
                        "VernacExtend",
                        "444de505ef313bb0b17c4d79f7f62950ecb203fe"
                    ]
                },
                {
                    "command": [
                        "specialize (Hg _ Hlg).",
                        "VernacExtend",
                        "7c3119959b261085b3dc27d456368717b47c99e7"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap in Hf, Hg.",
                        "VernacExtend",
                        "7338b3c29e4254e79fcc500189f7749fafadb479"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ (filter_and _ _ Hf Hg) H).",
                        "VernacExtend",
                        "ff446085d222473c1c77135eadb3f511bd3f06a4"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros x [[H1 H2] H3].",
                        "VernacExtend",
                        "d32087ef1f5bcac0c3720c94e676a264760eae6f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := H3).",
                        "VernacExtend",
                        "d9680d22ff5eeeee6dc4b5e70e0df562093979b2"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_trans with 0.",
                        "VernacExtend",
                        "854d72f415baf4e6b65389843863232a11c654a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_le_loc",
            "line_nb": 1345,
            "steps": [
                {
                    "command": [
                        "apply filterlim_le.",
                        "VernacExtend",
                        "5e6a5ccbad10ca26cb77b714628126244c1ff433"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_le_loc",
            "line_nb": 1348,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "move: (LimSup_le _ _ H) (LimInf_le _ _ H).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (LimSup_LimInf_seq_le u) (LimSup_LimInf_seq_le v).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "unfold Lim_seq.",
                        "VernacExtend",
                        "9fca1cec1f8eb3004eadfd6ba648348af070dbb3"
                    ]
                },
                {
                    "command": [
                        "case: (LimSup_seq u) => [lsu | | ] //= ; case: (LimInf_seq u) => [liu | | ] //= ; case: (LimSup_seq v) => [lsv | | ] //= ; case: (LimInf_seq v) => [liv | | ] //= ; intros.",
                        "VernacExtend",
                        "69ae105b39cf22635ed777c9ca03ce99d35f378f"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, Rinv_0_lt_compat, Rlt_0_2.",
                        "VernacExtend",
                        "83ca263d49e5c0a85951ebf56837048f45de16bf"
                    ]
                },
                {
                    "command": [
                        "by apply Rplus_le_compat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Req_le.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_le",
            "line_nb": 1359,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_le.",
                        "VernacExtend",
                        "5e6a5ccbad10ca26cb77b714628126244c1ff433"
                    ]
                },
                {
                    "command": [
                        "now apply filter_forall.",
                        "VernacExtend",
                        "994ed66757ea436e45750349bda23b502b22084e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_ge_p_infty",
            "line_nb": 1364,
            "steps": [
                {
                    "command": [
                        "intros T F FF f g H Hf.",
                        "VernacExtend",
                        "2293b6afdd107879a6fbaefcc3b366ad2e94b960"
                    ]
                },
                {
                    "command": [
                        "intros P [M HM].",
                        "VernacExtend",
                        "912eee4bdf845576ead0eae8eb9e686e21e27a18"
                    ]
                },
                {
                    "command": [
                        "assert (H' : Rbar_locally p_infty (fun y => M < y)).",
                        "VernacExtend",
                        "542d7389222b106ae1d974cd5e2a0fefdc5137b3"
                    ]
                },
                {
                    "command": [
                        "now exists M.",
                        "VernacExtend",
                        "d209ee394e51e963b50da18371a61ccbd1897fc7"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap.",
                        "VernacExtend",
                        "ab2a046933e4dbb14f70f2b6f6c5f6e701f158bb"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and (fun x : T => f x <= g x) _ H (Hf (fun y : R => M < y) H')).",
                        "VernacExtend",
                        "d093e95486b53a4c489ad11d6987fac93e30b64b"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros x [H1 H2].",
                        "VernacExtend",
                        "dec14703281561ee29868a72a7ea2508387ba782"
                    ]
                },
                {
                    "command": [
                        "apply HM.",
                        "VernacExtend",
                        "da44e10176bfb6a0c07c29369b62e8b925d50bc1"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le_trans with (f x).",
                        "VernacExtend",
                        "35b91ed2e5bad4ebfdc4a472429035d2c1fd822f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_le_m_infty",
            "line_nb": 1376,
            "steps": [
                {
                    "command": [
                        "intros T F FF f g H Hf.",
                        "VernacExtend",
                        "2293b6afdd107879a6fbaefcc3b366ad2e94b960"
                    ]
                },
                {
                    "command": [
                        "intros P [M HM].",
                        "VernacExtend",
                        "912eee4bdf845576ead0eae8eb9e686e21e27a18"
                    ]
                },
                {
                    "command": [
                        "pose ineq (y : R) := y < M.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "assert (H' : Rbar_locally m_infty ineq).",
                        "VernacExtend",
                        "7317f482ed066127f7bbe2ab60dda19365fa6bef"
                    ]
                },
                {
                    "command": [
                        "now exists M.",
                        "VernacExtend",
                        "d209ee394e51e963b50da18371a61ccbd1897fc7"
                    ]
                },
                {
                    "command": [
                        "unfold filtermap.",
                        "VernacExtend",
                        "ab2a046933e4dbb14f70f2b6f6c5f6e701f158bb"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ (fun x : T => ineq (f x)) H (Hf ineq H')).",
                        "VernacExtend",
                        "4624544b301c9fb9598e35f7967019fbe7671a25"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros x [H1 H2].",
                        "VernacExtend",
                        "dec14703281561ee29868a72a7ea2508387ba782"
                    ]
                },
                {
                    "command": [
                        "apply HM.",
                        "VernacExtend",
                        "da44e10176bfb6a0c07c29369b62e8b925d50bc1"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_lt_trans with (f x).",
                        "VernacExtend",
                        "fdc205436a7f66f2a9a9fcc2d32cab2bf21a62b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_le_le",
            "line_nb": 1389,
            "steps": [
                {
                    "command": [
                        "intros T F FF f g h l H Hf Hh.",
                        "VernacExtend",
                        "e69dc89f828748ed89a2dd3b5c0f594b87224233"
                    ]
                },
                {
                    "command": [
                        "destruct l as [l| |].",
                        "VernacExtend",
                        "a50b9315d268d47c890ad0be6c36d5895fa55865"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros P [eps He].",
                        "VernacExtend",
                        "50f7298ed7959a6b4c85d0c36a92e792b33d3c0f"
                    ]
                },
                {
                    "command": [
                        "assert (H' : Rbar_locally l (fun y => Rabs (y - l) < eps)).",
                        "VernacExtend",
                        "612c7f91d7d548049aaf571c02ee911efffe28d6"
                    ]
                },
                {
                    "command": [
                        "now exists eps.",
                        "VernacExtend",
                        "231859d3bd429d5cb9a46c5a8150f7440e5ea441"
                    ]
                },
                {
                    "command": [
                        "unfold filterlim, filter_le, filtermap in Hf, Hh |- *.",
                        "VernacExtend",
                        "541ae4d40c98e2787172751fc73a5d2cf726aae4"
                    ]
                },
                {
                    "command": [
                        "generalize (filter_and _ _ H (filter_and _ _ (Hf _ H') (Hh _ H'))).",
                        "VernacExtend",
                        "5255511aab289203e41d18fcf7a328d31f7d3927"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp.",
                        "VernacExtend",
                        "cd5d68d491d9b471ebb7deccb08d7a71ba953368"
                    ]
                },
                {
                    "command": [
                        "intros x [H1 [H2 H3]].",
                        "VernacExtend",
                        "27285365e73f998cd51b2595c36ffcb3d5e629ca"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between'.",
                        "VernacExtend",
                        "63a15ff3174a06f608196b85267ac5d1aae1e55e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := proj1 H1).",
                        "VernacExtend",
                        "94c68eff639de372f50a67564fb20c4f28a20ef9"
                    ]
                },
                {
                    "command": [
                        "now apply Rabs_lt_between'.",
                        "VernacExtend",
                        "ed6d2bab976354ab53e690f9e5dbe2b16f7eb39f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := proj2 H1).",
                        "VernacExtend",
                        "cd684219169729ce7d09980f5f437baeb3b2a5ff"
                    ]
                },
                {
                    "command": [
                        "now apply Rabs_lt_between'.",
                        "VernacExtend",
                        "ed6d2bab976354ab53e690f9e5dbe2b16f7eb39f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ge_p_infty with (2 := Hf).",
                        "VernacExtend",
                        "8f55ae38e57cdc799e8d1d33bae669253809ba24"
                    ]
                },
                {
                    "command": [
                        "apply: filter_imp H.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "now intros x [H _].",
                        "VernacExtend",
                        "0b873e4b0ca19085e7191b960ab975cd7796185d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_le_m_infty with (2 := Hh).",
                        "VernacExtend",
                        "e3334ba9f72aefc21d6b0b21924d847d0795c9b5"
                    ]
                },
                {
                    "command": [
                        "apply: filter_imp H.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "now intros x [_ H].",
                        "VernacExtend",
                        "155ffe8a53c0881595416870b0405a04aea982bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_le_le_loc",
            "line_nb": 1416,
            "steps": [
                {
                    "command": [
                        "apply filterlim_le_le.",
                        "VernacExtend",
                        "2f2ddeea5b85f11c7fd2c4dedda1c2b3ea2ec976"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_le_le",
            "line_nb": 1419,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_le_le.",
                        "VernacExtend",
                        "2f2ddeea5b85f11c7fd2c4dedda1c2b3ea2ec976"
                    ]
                },
                {
                    "command": [
                        "now apply filter_forall.",
                        "VernacExtend",
                        "994ed66757ea436e45750349bda23b502b22084e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_le_p_loc",
            "line_nb": 1424,
            "steps": [
                {
                    "command": [
                        "apply filterlim_ge_p_infty.",
                        "VernacExtend",
                        "c94e134f7985812b4b7b602713f8c802b60b58db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_le_m_loc",
            "line_nb": 1427,
            "steps": [
                {
                    "command": [
                        "apply filterlim_le_m_infty.",
                        "VernacExtend",
                        "5436a4d282bcc919165db88abe5231dbbb28f716"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_decr_compare",
            "line_nb": 1430,
            "steps": [
                {
                    "command": [
                        "move /is_lim_seq_spec => Hu H n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le => H0.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 in H0.",
                        "VernacExtend",
                        "92c391f8d545749b763107fc968f62ecdc379150"
                    ]
                },
                {
                    "command": [
                        "case: (Hu (mkposreal _ H0)) => {Hu} /= Nu Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (Hu _ (le_plus_r n Nu)).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt.",
                        "VernacExtend",
                        "1f0f6b47a7d49626d97b2585f7610e291096035d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Rabs_maj2 _).",
                        "VernacExtend",
                        "187ce4a0a704c6b3756adc43e8e52ec19431c0a8"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_minus_distr'.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar.",
                        "VernacExtend",
                        "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
                    ]
                },
                {
                    "command": [
                        "elim: (Nu) => [ | m IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_r ; by apply Rle_refl.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "rewrite -plus_n_Sm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := IH).",
                        "VernacExtend",
                        "f46498b95c532b4c338f85300e2ac05fe37fbdde"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_incr_compare",
            "line_nb": 1447,
            "steps": [
                {
                    "command": [
                        "move /is_lim_seq_spec => Hu H n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le => H0.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 in H0.",
                        "VernacExtend",
                        "92c391f8d545749b763107fc968f62ecdc379150"
                    ]
                },
                {
                    "command": [
                        "case: (Hu (mkposreal _ H0)) => {Hu} /= Nu Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (Hu _ (le_plus_r n Nu)).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt.",
                        "VernacExtend",
                        "1f0f6b47a7d49626d97b2585f7610e291096035d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Rle_abs _).",
                        "VernacExtend",
                        "72c9ed1eeb9d16ecf7ec04b7601241cd3efc9de9"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
                    ]
                },
                {
                    "command": [
                        "elim: (Nu) => [ | m IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_r ; by apply Rle_refl.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "rewrite -plus_n_Sm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := IH).",
                        "VernacExtend",
                        "7edff2fefc3e3d55d4db068dd3dc9e178b58a76c"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_decr",
            "line_nb": 1462,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (Inf_seq u).",
                        "VernacExtend",
                        "ae3a872b83982655125ea353be0ab5d3d3f526a4"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "rewrite /Inf_seq ; case: ex_inf_seq ; case => [l | | ] //= Hl.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hl eps) => Hl1 [N Hl2].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' ; split.",
                        "VernacExtend",
                        "219fa8a18e1bec41b3e80f61c4b73c04c06468a8"
                    ]
                },
                {
                    "command": [
                        "by apply Hl1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := Hl2).",
                        "VernacExtend",
                        "a2d5fac233028ac6c349f3bfe07c7c5e22c292f7"
                    ]
                },
                {
                    "command": [
                        "elim: n N {Hl2} Hn => [ | n IH] N Hn.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite (le_n_O_eq _ Hn).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_eq_dec in Hn.",
                        "VernacExtend",
                        "496992dd83514ca7dd8f86317db6ac735074b946"
                    ]
                },
                {
                    "command": [
                        "case: Hn => [Hn | ->].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := H _), IH ; intuition.",
                        "VernacExtend",
                        "ef5021a17d956a329e225a8f9e4047e262a127fa"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M ; exists O => n _ ; by apply Hl.",
                        "VernacExtend",
                        "dd76215f84b5ec723bc22942b73281b86cf324ad"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl M) => {Hl} N Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := Hl).",
                        "VernacExtend",
                        "69e9183c3e1c621478435d3029dab8288a9ade6e"
                    ]
                },
                {
                    "command": [
                        "elim: Hn => [ | {n} n Hn IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := IH).",
                        "VernacExtend",
                        "f46498b95c532b4c338f85300e2ac05fe37fbdde"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_incr",
            "line_nb": 1489,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (Sup_seq u).",
                        "VernacExtend",
                        "d8f6734a62d4d99a80e36616f8911dc07831e092"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "rewrite /Sup_seq ; case: ex_sup_seq ; case => [l | | ] //= Hl.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hl eps) => Hl1 [N Hl2].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' ; split.",
                        "VernacExtend",
                        "219fa8a18e1bec41b3e80f61c4b73c04c06468a8"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := Hl2).",
                        "VernacExtend",
                        "aae1b91bb75fc6d46586eadbd538ea82b4f1e535"
                    ]
                },
                {
                    "command": [
                        "elim: Hn => [ | {n} n Hn IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := IH).",
                        "VernacExtend",
                        "7edff2fefc3e3d55d4db068dd3dc9e178b58a76c"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hl1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hl M) => {Hl} N Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := Hl).",
                        "VernacExtend",
                        "54b82055fa8a68b84cd299231dab5f0c3627e64f"
                    ]
                },
                {
                    "command": [
                        "elim: Hn => [ | {n} n Hn IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := IH).",
                        "VernacExtend",
                        "7edff2fefc3e3d55d4db068dd3dc9e178b58a76c"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => M ; exists O => n Hn ; by apply Hl.",
                        "VernacExtend",
                        "dd76215f84b5ec723bc22942b73281b86cf324ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_finite_lim_seq_decr",
            "line_nb": 1513,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply ex_finite_lim_seq_correct.",
                        "VernacExtend",
                        "c47c6c3fc9b3ea2f813d19b82c0a06b642ee22a1"
                    ]
                },
                {
                    "command": [
                        "have H1 : ex_lim_seq u.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists (real (Inf_seq u)).",
                        "VernacExtend",
                        "762f5f6ae30e234b797287851813cac971a25b98"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "rewrite /Inf_seq ; case: ex_inf_seq ; case => [l | | ] //= Hl.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "move => eps ; case: (Hl eps) => Hl1 [N Hl2].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' ; split.",
                        "VernacExtend",
                        "219fa8a18e1bec41b3e80f61c4b73c04c06468a8"
                    ]
                },
                {
                    "command": [
                        "by apply Hl1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := Hl2).",
                        "VernacExtend",
                        "a2d5fac233028ac6c349f3bfe07c7c5e22c292f7"
                    ]
                },
                {
                    "command": [
                        "elim: n N {Hl2} Hn => [ | n IH] N Hn.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite (le_n_O_eq _ Hn).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_eq_dec in Hn.",
                        "VernacExtend",
                        "496992dd83514ca7dd8f86317db6ac735074b946"
                    ]
                },
                {
                    "command": [
                        "case: Hn => [Hn | ->].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := H _), IH ; intuition.",
                        "VernacExtend",
                        "ef5021a17d956a329e225a8f9e4047e262a127fa"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (Hl (u O) O) => H1 ; by apply Rlt_irrefl in H1.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "case: (Hl M) => {Hl} n Hl.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le in Hl.",
                        "VernacExtend",
                        "618b855141c91bec93e4e3535b723dcc6b22035c"
                    ]
                },
                {
                    "command": [
                        "by move: (Hl (H0 n)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_correct in H1.",
                        "VernacExtend",
                        "f479aca64d557a27478848fb535e3b70b4448296"
                    ]
                },
                {
                    "command": [
                        "case: (Lim_seq u) H1 => [l | | ] /= Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in Hu.",
                        "VernacExtend",
                        "76340a6faa81e82aa0e11ff86fbd12e4e42067c5"
                    ]
                },
                {
                    "command": [
                        "case: (Hu (u O)) => {Hu} N Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (Hu N (le_refl _)) => {Hu} Hu.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "contradict Hu ; apply Rle_not_lt.",
                        "VernacExtend",
                        "b59bd2649a76f17275673eab1a5745597f1e3a50"
                    ]
                },
                {
                    "command": [
                        "elim: N => [ | N IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_trans with (1 := H _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in Hu.",
                        "VernacExtend",
                        "76340a6faa81e82aa0e11ff86fbd12e4e42067c5"
                    ]
                },
                {
                    "command": [
                        "case: (Hu M) => {Hu} N Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (Hu N (le_refl _)) => {Hu} Hu.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "contradict Hu ; by apply Rle_not_lt.",
                        "VernacExtend",
                        "308542ba5a6b6b2938f6e99ad288c6690b373b50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_finite_lim_seq_incr",
            "line_nb": 1552,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case: (ex_finite_lim_seq_decr (fun n => - u n) (- M)).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move => n ; by apply Ropp_le_contravar.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "move => n ; by apply Ropp_le_contravar.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "move => l ; move => Hu.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "exists (- l).",
                        "VernacExtend",
                        "eb4d773373a29c70c1e8d64d70fc8d6f989f01de"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in Hu.",
                        "VernacExtend",
                        "76340a6faa81e82aa0e11ff86fbd12e4e42067c5"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "intros eps.",
                        "VernacExtend",
                        "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
                    ]
                },
                {
                    "command": [
                        "case: (Hu eps) => {Hu} N Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "replace (u n - - l) with (-(- u n - l)) by ring.",
                        "VernacExtend",
                        "1c3329f3eefc8928c28632c0ed1cc2cb89a87106"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Ropp ; by apply Hu.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_Rbar_opp",
            "line_nb": 1567,
            "steps": [
                {
                    "command": [
                        "intros [x| |] P [eps He].",
                        "VernacExtend",
                        "ea0688f964be1f79c0cc6f9fa137a5978fbb419d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists eps.",
                        "VernacExtend",
                        "c7af48b9f65cab7cfe7f63abbdd2c6bef269dc77"
                    ]
                },
                {
                    "command": [
                        "intros y Hy.",
                        "VernacExtend",
                        "d610d987f827782ed7ad408419c9743f4107dcdc"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /abs /minus /plus /opp /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite Ropp_involutive Rplus_comm Rabs_minus_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (-eps).",
                        "VernacExtend",
                        "f068f0df333a49146aa0be9c7db5e4d547b2623e"
                    ]
                },
                {
                    "command": [
                        "intros y Hy.",
                        "VernacExtend",
                        "d610d987f827782ed7ad408419c9743f4107dcdc"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
                    ]
                },
                {
                    "command": [
                        "by rewrite Ropp_involutive.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (-eps).",
                        "VernacExtend",
                        "f068f0df333a49146aa0be9c7db5e4d547b2623e"
                    ]
                },
                {
                    "command": [
                        "intros y Hy.",
                        "VernacExtend",
                        "d610d987f827782ed7ad408419c9743f4107dcdc"
                    ]
                },
                {
                    "command": [
                        "apply He.",
                        "VernacExtend",
                        "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel.",
                        "VernacExtend",
                        "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
                    ]
                },
                {
                    "command": [
                        "by rewrite Ropp_involutive.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_opp",
            "line_nb": 1588,
            "steps": [
                {
                    "command": [
                        "split ; move => Hu.",
                        "VernacExtend",
                        "762ea52ce3564fcd0b41ae75027c378295824fae"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_LimInf_lim_seq.",
                        "VernacExtend",
                        "553f06667beacf4acbee1b530530396e6e862c5b"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_opp_LimInf_seq.",
                        "VernacExtend",
                        "36b8005036b7d04e07f430e32fd1558b95d65518"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_LimInf_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_LimInf_opp_LimSup_seq.",
                        "VernacExtend",
                        "cf1dc22660018b572f12885a7e61bbbf0a528f41"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_LimSup_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_LimInf_lim_seq.",
                        "VernacExtend",
                        "553f06667beacf4acbee1b530530396e6e862c5b"
                    ]
                },
                {
                    "command": [
                        "apply is_LimInf_opp_LimSup_seq.",
                        "VernacExtend",
                        "cf1dc22660018b572f12885a7e61bbbf0a528f41"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_LimInf_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_LimSup_opp_LimInf_seq.",
                        "VernacExtend",
                        "36b8005036b7d04e07f430e32fd1558b95d65518"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_LimSup_seq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_opp",
            "line_nb": 1601,
            "steps": [
                {
                    "command": [
                        "split ; case => l Hl ; exists (Rbar_opp l).",
                        "VernacExtend",
                        "40d5687c3d4c661390ca1dee6accaf6a792817b3"
                    ]
                },
                {
                    "command": [
                        "by apply -> is_lim_seq_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_ext with (fun n => - - u n).",
                        "VernacExtend",
                        "4e699b1fedf718e608649cebb3ff4921b2070352"
                    ]
                },
                {
                    "command": [
                        "move => n ; by apply Ropp_involutive.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "by apply -> is_lim_seq_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_opp",
            "line_nb": 1608,
            "steps": [
                {
                    "command": [
                        "rewrite /Lim_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite LimSup_seq_opp LimInf_seq_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (LimInf_seq u) => [li | | ] ; case: (LimSup_seq u) => [ls | | ] //= ; apply f_equal ; field.",
                        "VernacExtend",
                        "b3e510b79bb8e39d64289e8f4b8969529d19bacd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_plus",
            "line_nb": 1694,
            "steps": [
                {
                    "command": [
                        "intros Hu Hv Hl.",
                        "VernacExtend",
                        "b7ea59f305dca66d058b51d6610c6a4ba5615a83"
                    ]
                },
                {
                    "command": [
                        "eapply filterlim_comp_2 ; try eassumption.",
                        "VernacExtend",
                        "7c3053626bc57cbf6f1cfd59e4d64fef6c071b19"
                    ]
                },
                {
                    "command": [
                        "now apply filterlim_Rbar_plus.",
                        "VernacExtend",
                        "179773225a4c5a3674a0ecaf94ff75a80d51bb0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_plus",
            "line_nb": 1706,
            "steps": [
                {
                    "command": [
                        "intros [lu Hu] [lv Hv] Hl ; exists (Rbar_plus lu lv).",
                        "VernacExtend",
                        "cd65d1925c927e17768d3630aac3a4211a7c79e3"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_plus with lu lv ; try assumption.",
                        "VernacExtend",
                        "ebcce69e036e1630dd0bc74deb01e5222dc7284c"
                    ]
                },
                {
                    "command": [
                        "rewrite -(is_lim_seq_unique u lu) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(is_lim_seq_unique v lv) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Rbar_plus_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_plus",
            "line_nb": 1713,
            "steps": [
                {
                    "command": [
                        "intros Hu Hv Hl.",
                        "VernacExtend",
                        "b7ea59f305dca66d058b51d6610c6a4ba5615a83"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique.",
                        "VernacExtend",
                        "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_plus ; try apply Lim_seq_correct ; try assumption.",
                        "VernacExtend",
                        "8c25194c97eff2fcfe0a42c70f42a51ff8c792fc"
                    ]
                },
                {
                    "command": [
                        "by apply Rbar_plus_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_minus",
            "line_nb": 1719,
            "steps": [
                {
                    "command": [
                        "intros H1 H2 Hl.",
                        "VernacExtend",
                        "bd5bdacc4c0c3be2d7e33e20862fefdb5c60d7da"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_plus ; try eassumption.",
                        "VernacExtend",
                        "6f3ac066e2a3112006aca72edebe2d2fca0101d6"
                    ]
                },
                {
                    "command": [
                        "apply -> is_lim_seq_opp ; apply H2.",
                        "VernacExtend",
                        "8d32ea2cae1e1e25f89849b62df488f63c19cdff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_minus'",
            "line_nb": 1724,
            "steps": [
                {
                    "command": [
                        "intros Hu Hv.",
                        "VernacExtend",
                        "5f83f1b777c4021d6dcbf70e9280765aa78a70b7"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_minus ; try eassumption.",
                        "VernacExtend",
                        "70d15d7f1cabff05144a6c7666e2fa20de545a11"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_minus",
            "line_nb": 1729,
            "steps": [
                {
                    "command": [
                        "intros [lu Hu] [lv Hv] Hl ; exists (Rbar_minus lu lv).",
                        "VernacExtend",
                        "0cf549621ad8e19af73b7ad17d8eb939d79daefd"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_minus ; try eassumption.",
                        "VernacExtend",
                        "70d15d7f1cabff05144a6c7666e2fa20de545a11"
                    ]
                },
                {
                    "command": [
                        "rewrite -(is_lim_seq_unique u lu) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(is_lim_seq_unique v lv) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Rbar_plus_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_minus",
            "line_nb": 1736,
            "steps": [
                {
                    "command": [
                        "intros Hu Hv Hl.",
                        "VernacExtend",
                        "b7ea59f305dca66d058b51d6610c6a4ba5615a83"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique.",
                        "VernacExtend",
                        "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_minus ; try apply Lim_seq_correct ; try assumption.",
                        "VernacExtend",
                        "c4ffe33ec7983d0c392b6f8a98250bd3eec54229"
                    ]
                },
                {
                    "command": [
                        "by apply Rbar_plus_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_inv",
            "line_nb": 1833,
            "steps": [
                {
                    "command": [
                        "intros Hu Hl.",
                        "VernacExtend",
                        "bbc61c117a9c2e9024dc22e33a7425317a220608"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (1 := Hu).",
                        "VernacExtend",
                        "440b215d090256b180f238d8633f54e52e83c127"
                    ]
                },
                {
                    "command": [
                        "now apply filterlim_Rbar_inv.",
                        "VernacExtend",
                        "37c75cbd290513ba25ace90e324a1eea791eb489"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_inv",
            "line_nb": 1838,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_correct in H.",
                        "VernacExtend",
                        "922d480e665803c534a201f4f7ce2163ea41d20e"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_inv (Lim_seq u)).",
                        "VernacExtend",
                        "ce0b451ebe2f8cdd63102f86b45a9650d8d1ed18"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_inv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_inv",
            "line_nb": 1844,
            "steps": [
                {
                    "command": [
                        "move => Hl Hu.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique.",
                        "VernacExtend",
                        "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_inv.",
                        "VernacExtend",
                        "91a251ae71de232eeb1039626ed60efb8a85a521"
                    ]
                },
                {
                    "command": [
                        "by apply Lim_seq_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_mult",
            "line_nb": 2008,
            "steps": [
                {
                    "command": [
                        "intros Hu Hv Hp.",
                        "VernacExtend",
                        "d4796a9fcd74aab4e363c1adff7bbd25b0d313dd"
                    ]
                },
                {
                    "command": [
                        "eapply filterlim_comp_2 ; try eassumption.",
                        "VernacExtend",
                        "7c3053626bc57cbf6f1cfd59e4d64fef6c071b19"
                    ]
                },
                {
                    "command": [
                        "now apply filterlim_Rbar_mult.",
                        "VernacExtend",
                        "6c88027d9cf0b94e6ec2d8dfd742cb4c0989128a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_mult'",
            "line_nb": 2013,
            "steps": [
                {
                    "command": [
                        "intros Hu Hv.",
                        "VernacExtend",
                        "5f83f1b777c4021d6dcbf70e9280765aa78a70b7"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_mult ; try eassumption.",
                        "VernacExtend",
                        "342e7d2d25361dacab5493f99d0c53997a811416"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_mult",
            "line_nb": 2018,
            "steps": [
                {
                    "command": [
                        "intros [lu Hu] [lv Hv] H ; exists (Rbar_mult lu lv).",
                        "VernacExtend",
                        "e7785648802774aea7e675c0d36b3a44ed1e0506"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_mult ; try eassumption.",
                        "VernacExtend",
                        "342e7d2d25361dacab5493f99d0c53997a811416"
                    ]
                },
                {
                    "command": [
                        "rewrite -(is_lim_seq_unique u lu) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(is_lim_seq_unique v lv) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Rbar_mult_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_mult",
            "line_nb": 2025,
            "steps": [
                {
                    "command": [
                        "move => H1 H2 Hl.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique.",
                        "VernacExtend",
                        "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_mult ; try apply Lim_seq_correct ; try eassumption.",
                        "VernacExtend",
                        "26546f4ff2c85296faca406131963361e0d66d1d"
                    ]
                },
                {
                    "command": [
                        "by apply Rbar_mult_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_Rbar_mult_r",
            "line_nb": 2045,
            "steps": [
                {
                    "command": [
                        "intros a l.",
                        "VernacExtend",
                        "c6e1e3cc6e0e03269c9c78383c22e173bc25ab2e"
                    ]
                },
                {
                    "command": [
                        "apply (filterlim_ext (fun x => a * x)).",
                        "VernacExtend",
                        "bf7e0628de64c2fd1e7b4db1ae1b5f489aa6cf60"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_comm.",
                        "VernacExtend",
                        "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
                    ]
                },
                {
                    "command": [
                        "rewrite Rbar_mult_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_Rbar_mult_l.",
                        "VernacExtend",
                        "59de1de1c333474322aebaa647d87ce75e4cd7ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_scal_l",
            "line_nb": 2052,
            "steps": [
                {
                    "command": [
                        "intros Hu H.",
                        "VernacExtend",
                        "a525e0ec534be122dc65e6d41f9bbd012fbcada3"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (1 := Hu).",
                        "VernacExtend",
                        "440b215d090256b180f238d8633f54e52e83c127"
                    ]
                },
                {
                    "command": [
                        "by apply filterlim_Rbar_mult_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_scal_l",
            "line_nb": 2057,
            "steps": [
                {
                    "command": [
                        "move => [l H].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_mult a l).",
                        "VernacExtend",
                        "9a8820fb1c1536d302a33bdc48689bfe4afb9175"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_scal_l ; try eassumption.",
                        "VernacExtend",
                        "4aad608a6217ed2c410ef4bd05deee2eb27fa37c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_scal_l",
            "line_nb": 2062,
            "steps": [
                {
                    "command": [
                        "case: (Req_dec a 0) => [ -> | Ha].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Lim_seq_ext (fun _ => 0)) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Lim_seq_const.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (Lim_seq u) => [x | | ] //=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rmult_0_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rle_refl 0) => // H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rlt_irrefl 0) => // _ _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rle_refl 0) => // H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rlt_irrefl 0) => // _ _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move => n ; by rewrite Rmult_0_l.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "wlog: a u Ha / (0 < a) => [Hw | {Ha} Ha].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (Rlt_le_dec 0 a) => Ha'.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Hw.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: Ha' => // Ha'.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Lim_seq_ext (fun n => - a * - u n)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -Rbar_mult_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -Lim_seq_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Hw.",
                        "VernacExtend",
                        "8a661025dc679026191beb09fb44e1db1e042d6a"
                    ]
                },
                {
                    "command": [
                        "contradict Ha ; rewrite -(Ropp_involutive a) Ha ; ring.",
                        "VernacExtend",
                        "35c67b326c6d07f9fe14365627d5ff7ae0b795cb"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel ; by rewrite Ropp_0 Ropp_involutive.",
                        "VernacExtend",
                        "9009c9b957a86d8010aa0e0c1ca31f0be121be98"
                    ]
                },
                {
                    "command": [
                        "move => n ; ring.",
                        "VernacExtend",
                        "550d555a37db07b848ee1c0dcb59e4bba252650f"
                    ]
                },
                {
                    "command": [
                        "rewrite /Lim_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite {2}/LimSup_seq ; case: ex_LimSup_seq => ls Hs ; rewrite {2}/LimInf_seq ; case: ex_LimInf_seq => li Hi ; simpl proj1_sig.",
                        "VernacExtend",
                        "ce1f1b3599c3d993a898c8b5f55b0a7a8d71fcff"
                    ]
                },
                {
                    "command": [
                        "apply (is_LimSup_seq_scal_pos a) in Hs => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply (is_LimInf_seq_scal_pos a) in Hi => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_LimSup_seq_unique _ _ Hs).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_LimInf_seq_unique _ _ Hi).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: ls {Hs} => [ls | | ] ; case: li {Hi} => [li | | ] //= ; case: (Rle_dec 0 a) (Rlt_le _ _ Ha) => // Ha' _ ; case: (Rle_lt_or_eq_dec 0 a Ha') (Rlt_not_eq _ _ Ha) => //= _ _ ; apply f_equal ; field.",
                        "VernacExtend",
                        "2a8a7eb883b87aebd169ce3cae960de96d74dfc1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_scal_r",
            "line_nb": 2092,
            "steps": [
                {
                    "command": [
                        "move => Hu Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_ext with ((fun n : nat => a * u n)).",
                        "VernacExtend",
                        "3a584f3b6666deaf79d24dd96e007d3ae6356c47"
                    ]
                },
                {
                    "command": [
                        "move => n ; by apply Rmult_comm.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "rewrite Rbar_mult_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_scal_l.",
                        "VernacExtend",
                        "7848e953466aa3acf97d4e14c39da5f5c9ea3a2e"
                    ]
                },
                {
                    "command": [
                        "by apply Hu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_scal_r",
            "line_nb": 2100,
            "steps": [
                {
                    "command": [
                        "move => Hu.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply ex_lim_seq_ext with ((fun n : nat => a * u n)) ; try by intuition.",
                        "VernacExtend",
                        "17cae091f828f3c66ef2076cb536aa8ef4e8f67b"
                    ]
                },
                {
                    "command": [
                        "apply ex_lim_seq_scal_l.",
                        "VernacExtend",
                        "4f2b51c5b4f7e80592532b2a50c8727eb6686b2b"
                    ]
                },
                {
                    "command": [
                        "by apply Hu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_scal_r",
            "line_nb": 2106,
            "steps": [
                {
                    "command": [
                        "rewrite Rbar_mult_comm -Lim_seq_scal_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_ext ; by intuition.",
                        "VernacExtend",
                        "7bb0cd75539152e66c8157bb85a60c20daef01dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_div",
            "line_nb": 2110,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_mult ; try eassumption.",
                        "VernacExtend",
                        "342e7d2d25361dacab5493f99d0c53997a811416"
                    ]
                },
                {
                    "command": [
                        "now apply is_lim_seq_inv.",
                        "VernacExtend",
                        "bdbf5e7837267cccaa52aa5f509b820608e872a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_div'",
            "line_nb": 2115,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_div ; try eassumption.",
                        "VernacExtend",
                        "7f04860b9e67212dcb4319ba5d4d806166072c35"
                    ]
                },
                {
                    "command": [
                        "now contradict H1 ; case: H1 => ->.",
                        "VernacExtend",
                        "ba2b8288bf4faf812d06e7db464dfa37cee8d3d6"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_div",
            "line_nb": 2121,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_correct in H.",
                        "VernacExtend",
                        "922d480e665803c534a201f4f7ce2163ea41d20e"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_correct in H0.",
                        "VernacExtend",
                        "c12e4ac3d8d1cc8163a18ecb26d2024f4ba93883"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_div (Lim_seq u) (Lim_seq v)).",
                        "VernacExtend",
                        "462ea76f767c1a267389c90ee81ca7b0a120dcb8"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_div ; try eassumption.",
                        "VernacExtend",
                        "7f04860b9e67212dcb4319ba5d4d806166072c35"
                    ]
                },
                {
                    "command": [
                        "by apply Rbar_mult_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_div",
            "line_nb": 2129,
            "steps": [
                {
                    "command": [
                        "move => H0 H1 H2 H3.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique.",
                        "VernacExtend",
                        "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
                    ]
                },
                {
                    "command": [
                        "eapply is_lim_seq_div ; try apply Lim_seq_correct ; try eassumption.",
                        "VernacExtend",
                        "9de844dacf6dbb737731df8a5f3db1b6238fc916"
                    ]
                },
                {
                    "command": [
                        "by apply Rbar_mult_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_adj",
            "line_nb": 2135,
            "steps": [
                {
                    "command": [
                        "move => Hu Hv H0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "suff H : forall n, u n <= v n.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "suff Eu : ex_finite_lim_seq u.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "split ; try auto.",
                        "VernacExtend",
                        "739e71f9438b4396235f07035cdc13e03774a328"
                    ]
                },
                {
                    "command": [
                        "suff Ev : ex_finite_lim_seq v.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "split ; try auto.",
                        "VernacExtend",
                        "739e71f9438b4396235f07035cdc13e03774a328"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique in H0.",
                        "VernacExtend",
                        "271dcea6d2d35fb90e1f52d9d5ee5077ba6d74b0"
                    ]
                },
                {
                    "command": [
                        "rewrite Lim_seq_minus in H0 ; try by intuition.",
                        "VernacExtend",
                        "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
                    ]
                },
                {
                    "command": [
                        "apply ex_finite_lim_seq_correct in Eu.",
                        "VernacExtend",
                        "a0e25ee98ef0b81a30e321af9692852cc62f1ded"
                    ]
                },
                {
                    "command": [
                        "apply ex_finite_lim_seq_correct in Ev.",
                        "VernacExtend",
                        "837a1c585e8d6b820952a71033e63c319617e86d"
                    ]
                },
                {
                    "command": [
                        "rewrite -(proj2 Eu) -(proj2 Ev) /= in H0 |- *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_finite_eq in H0 ; apply Rbar_finite_eq.",
                        "VernacExtend",
                        "5ba720fbc0a58df6b46b0f4b1c5d85b05c4c7d77"
                    ]
                },
                {
                    "command": [
                        "by apply sym_eq, Rminus_diag_uniq, H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply ex_finite_lim_seq_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply ex_finite_lim_seq_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_finite_lim_seq_correct in Eu.",
                        "VernacExtend",
                        "a0e25ee98ef0b81a30e321af9692852cc62f1ded"
                    ]
                },
                {
                    "command": [
                        "apply ex_finite_lim_seq_correct in Ev.",
                        "VernacExtend",
                        "837a1c585e8d6b820952a71033e63c319617e86d"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(proj2 Eu) -(proj2 Ev).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_finite_lim_seq_decr with (u O) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move => n ; apply Rle_trans with (2 := H _).",
                        "VernacExtend",
                        "31bcee32422d88312d61d9d5dbded33d5457f8d5"
                    ]
                },
                {
                    "command": [
                        "elim: n => [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_trans with (2 := Hu _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_finite_lim_seq_incr with (v O) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move => n ; apply Rle_trans with (1 := H _).",
                        "VernacExtend",
                        "149e0d31fa77459555863cc1cb27bed1f2f58cdd"
                    ]
                },
                {
                    "command": [
                        "elim: n => [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_trans with (1 := Hv _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => n0 ; apply Rnot_lt_le ; move/Rminus_lt_0 => H.",
                        "VernacExtend",
                        "e1a4c00b6c1309f13c107e7050b7a829aed80b92"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in H0.",
                        "VernacExtend",
                        "5a4324f731da53821c0cb36539843224b0f497c7"
                    ]
                },
                {
                    "command": [
                        "case: (H0 (mkposreal _ H)) => /= {H0} N H0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (H0 _ (le_plus_r n0 N)) ; apply Rle_not_lt.",
                        "VernacExtend",
                        "45df2658267bb1e26f700ab173e1780b1b3bb6a5"
                    ]
                },
                {
                    "command": [
                        "rewrite Rminus_0_r ; apply Rle_trans with (2 := Rabs_maj2 _).",
                        "VernacExtend",
                        "52bbb6b0ded4078e70dd7d0ece3cecc0c4e038d6"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_minus_distr'.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat, Ropp_le_contravar.",
                        "VernacExtend",
                        "fff6414836a79acabc8e2bf6955c243738a1aa01"
                    ]
                },
                {
                    "command": [
                        "elim: (N) => [ | m IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_r ; apply Rle_refl.",
                        "VernacExtend",
                        "2d67a18abe5a05ff39bf986b33b6e7085865b7a4"
                    ]
                },
                {
                    "command": [
                        "rewrite -plus_n_Sm ; by apply Rle_trans with (2 := Hu _).",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "elim: (N) => [ | m IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_r ; apply Rle_refl.",
                        "VernacExtend",
                        "2d67a18abe5a05ff39bf986b33b6e7085865b7a4"
                    ]
                },
                {
                    "command": [
                        "rewrite -plus_n_Sm ; by apply Rle_trans with (1 := Hv _).",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_continuous",
            "line_nb": 2178,
            "steps": [
                {
                    "command": [
                        "move => Cf Hu.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_filterlim in Cf.",
                        "VernacExtend",
                        "73ae1e7add4b664c2296e31a449355bb785b4a76"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (1 := Hu).",
                        "VernacExtend",
                        "440b215d090256b180f238d8633f54e52e83c127"
                    ]
                },
                {
                    "command": [
                        "exact Cf.",
                        "VernacExtend",
                        "533d50bb6b90d523f11661b15bea6d98ba7437c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filterlim_Rabs",
            "line_nb": 2184,
            "steps": [
                {
                    "command": [
                        "case => [l| |] /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply @filterlim_norm.",
                        "VernacExtend",
                        "1a0066f4e21c8219e0d2803d7303ef1ef8a88ac6"
                    ]
                },
                {
                    "command": [
                        "intros P [N HP].",
                        "VernacExtend",
                        "842afff1762048990b7cbab9ba118a9706122a57"
                    ]
                },
                {
                    "command": [
                        "exists N => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply HP.",
                        "VernacExtend",
                        "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := Hx).",
                        "VernacExtend",
                        "17cfcea7cef1e39ddff4797053bb05abaf553802"
                    ]
                },
                {
                    "command": [
                        "apply Rle_abs.",
                        "VernacExtend",
                        "7222806352a7f01b48467f271bcdc35194fd1877"
                    ]
                },
                {
                    "command": [
                        "intros P [N HP].",
                        "VernacExtend",
                        "842afff1762048990b7cbab9ba118a9706122a57"
                    ]
                },
                {
                    "command": [
                        "exists (-N) => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply HP.",
                        "VernacExtend",
                        "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Rabs_maj2 _), Ropp_lt_cancel.",
                        "VernacExtend",
                        "9954873ef12fb15bc5333bc0e76b10dc33b6460e"
                    ]
                },
                {
                    "command": [
                        "by rewrite Ropp_involutive.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_abs",
            "line_nb": 2198,
            "steps": [
                {
                    "command": [
                        "intros Hu.",
                        "VernacExtend",
                        "354a231d2e89381b80441c83de51a8623736a173"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (1 := Hu).",
                        "VernacExtend",
                        "440b215d090256b180f238d8633f54e52e83c127"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_Rabs.",
                        "VernacExtend",
                        "5e60a5380ab576c418a496fd45abe517bae0cfeb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_abs",
            "line_nb": 2203,
            "steps": [
                {
                    "command": [
                        "move => [l Hu].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (Rbar_abs l) ; by apply is_lim_seq_abs.",
                        "VernacExtend",
                        "c971f77756703a70a8fc638b7fd9f57ed9105df4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_abs",
            "line_nb": 2207,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique.",
                        "VernacExtend",
                        "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_abs.",
                        "VernacExtend",
                        "4d0dd4221656d49beb5d00e3b85662f1d307f7a5"
                    ]
                },
                {
                    "command": [
                        "by apply Lim_seq_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_abs_0",
            "line_nb": 2213,
            "steps": [
                {
                    "command": [
                        "split => Hu.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -Rabs_R0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply (is_lim_seq_abs _ 0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in Hu.",
                        "VernacExtend",
                        "76340a6faa81e82aa0e11ff86fbd12e4e42067c5"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hu eps) => {Hu} N Hu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move: (Hu n Hn) ; by rewrite ?Rminus_0_r Rabs_Rabsolu.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_geom",
            "line_nb": 2224,
            "steps": [
                {
                    "command": [
                        "intros Hq.",
                        "VernacExtend",
                        "df20bb61f36f40643fe54bdb4335f37db5486c96"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "move => [e He] /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (pow_lt_1_zero q Hq e He) => N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rminus_0_r ; by apply H.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_geom",
            "line_nb": 2232,
            "steps": [
                {
                    "command": [
                        "move => Hq ; exists 0 ; by apply is_lim_seq_geom.",
                        "VernacExtend",
                        "8129c32c47041e59bea0f5967317bed113835183"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_geom",
            "line_nb": 2235,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique.",
                        "VernacExtend",
                        "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_geom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_geom_p",
            "line_nb": 2240,
            "steps": [
                {
                    "command": [
                        "intros Hq.",
                        "VernacExtend",
                        "df20bb61f36f40643fe54bdb4335f37db5486c96"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "move => M /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (fun Hq => Pow_x_infinity q Hq (M+1)) => [ | N H].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le_trans with (1 := Hq), Rle_abs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (M+1).",
                        "VernacExtend",
                        "e747377457a1e863791a0be87168a5c95e078839"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}(Rplus_0_r M) ; by apply Rplus_lt_compat_l, Rlt_0_1.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rabs_pos_eq (q^n)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Rge_le, H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply pow_le, Rlt_le, Rlt_trans with (1 := Rlt_0_1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_geom_p",
            "line_nb": 2253,
            "steps": [
                {
                    "command": [
                        "move => Hq ; exists p_infty ; by apply is_lim_seq_geom_p.",
                        "VernacExtend",
                        "369a8c5a0e9cb65c8cf0e084f0a1e88906d24cb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_seq_geom_p",
            "line_nb": 2256,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique.",
                        "VernacExtend",
                        "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_geom_p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_lim_seq_geom_m",
            "line_nb": 2261,
            "steps": [
                {
                    "command": [
                        "intros Hq [l H].",
                        "VernacExtend",
                        "5a7a7c83add49d5d1b736deb258d62cee584f3ac"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in H.",
                        "VernacExtend",
                        "98ca61a735cdd6a0c67afeba86446058c65f378f"
                    ]
                },
                {
                    "command": [
                        "destruct l as [l| |].",
                        "VernacExtend",
                        "a50b9315d268d47c890ad0be6c36d5895fa55865"
                    ]
                },
                {
                    "command": [
                        "case: Hq => Hq.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (H (mkposreal _ Rlt_0_1)) => /= {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (fun n Hn => Rabs_lt_between_Rmax _ _ _ (proj1 (Rabs_lt_between' _ _ _) (H n Hn))).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "set M := Rmax (l + 1) (- (l - 1)) => H0.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (fun Hq => Pow_x_infinity q Hq M) => [ | N0 H1].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_left.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_cancel ; by rewrite Ropp_involutive.",
                        "VernacExtend",
                        "9009c9b957a86d8010aa0e0c1ca31f0be121be98"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (1 := Hq) ; apply Ropp_lt_cancel ; rewrite Ropp_involutive Ropp_0 ; by apply Rlt_0_1.",
                        "VernacExtend",
                        "1e9b925b3146a7653ba92a6fc002ceb73c905644"
                    ]
                },
                {
                    "command": [
                        "move: (H0 _ (le_plus_l N N0)).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_not_lt, Rge_le, H1, le_plus_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (H (mkposreal _ Rlt_0_1)) => /= {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hq in H => {q Hq}.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move: (H _ (le_n_2n _)) ; rewrite pow_1_even ; case/Rabs_lt_between' => _ H1.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "have H2 : (N <= S (2 * N))%nat.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply le_trans with (1 := le_n_2n _), le_n_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (H _ H2) ; rewrite pow_1_odd ; case/Rabs_lt_between' => {H H2} H2 _.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "move: H1 ; apply Rle_not_lt, Rlt_le.",
                        "VernacExtend",
                        "af12188065cc48c4c1c6d175a6fe88d0dd82930d"
                    ]
                },
                {
                    "command": [
                        "pattern 1 at 2 ; replace (1) with ((-1)+2) by ring.",
                        "VernacExtend",
                        "865af1f34128704cbbb4b597d18dcf257218b2d4"
                    ]
                },
                {
                    "command": [
                        "replace (l+1) with ((l-1)+2) by ring.",
                        "VernacExtend",
                        "70d5513f6f29d7fef4753fc2482c56eaad7c20d0"
                    ]
                },
                {
                    "command": [
                        "by apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (H 0) => {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have H0 : (N <= S (2 * N))%nat.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply le_trans with (1 := le_n_2n _), le_n_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (H _ H0) ; apply Rle_not_lt ; rewrite /pow -/pow.",
                        "VernacExtend",
                        "c860bfa72dbf1f709e97d939054f0c6b30d568f8"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_0_r.",
                        "VernacExtend",
                        "851829ca980f98ce01c7f9829ab18b3f9e65cf2f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := Hq), Ropp_le_cancel ; rewrite Ropp_involutive Ropp_0 ; by apply Rle_0_1.",
                        "VernacExtend",
                        "f1f36525867d7d73d3b8a6da3f0ceb1e7bbad431"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar in Hq ; rewrite Ropp_involutive in Hq.",
                        "VernacExtend",
                        "a355bd18b1cdd4e59fbc8facb883e34710b76cfa"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_sqr -Rmult_opp_opp ; apply pow_le, Rmult_le_pos ; apply Rle_trans with (2 := Hq), Rle_0_1.",
                        "VernacExtend",
                        "96e94bbd3434c01d403a921ab26603b69b74fdb4"
                    ]
                },
                {
                    "command": [
                        "case: (H 0) => {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (H _ (le_n_2n _)).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt.",
                        "VernacExtend",
                        "1f0f6b47a7d49626d97b2585f7610e291096035d"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar in Hq ; rewrite Ropp_involutive in Hq.",
                        "VernacExtend",
                        "a355bd18b1cdd4e59fbc8facb883e34710b76cfa"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_sqr -Rmult_opp_opp ; apply pow_le, Rmult_le_pos ; apply Rle_trans with (2 := Hq), Rle_0_1.",
                        "VernacExtend",
                        "96e94bbd3434c01d403a921ab26603b69b74fdb4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lim_seq_Rbar_loc_seq",
            "line_nb": 2299,
            "steps": [
                {
                    "command": [
                        "intros P HP.",
                        "VernacExtend",
                        "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_Rbar_loc_seq.",
                        "VernacExtend",
                        "7d49e234309669569338f709b07df58cd00ea46f"
                    ]
                },
                {
                    "command": [
                        "now apply Rbar_locally'_le.",
                        "VernacExtend",
                        "268451f0e2e4ee9da61fb30e84f2b2c5cb30a995"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}