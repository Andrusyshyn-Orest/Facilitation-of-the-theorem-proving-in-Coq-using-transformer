{
    "filename": "theories/Complex.v",
    "coq_project": "coquelicot",
    "vernac_cmds": [
        [
            "Require Import Reals mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "94d17d05ae0141f6c8b0bcb31d33a153dd99df0d"
        ],
        [
            "Require Import Rcomplements Rbar.",
            "VernacRequire",
            "ecb565eaff1bb2d771eadcdcbc90751142d040a4"
        ],
        [
            "Require Import Continuity Derive Hierarchy.",
            "VernacRequire",
            "506d26519f4f5972e72b905cd05a6b964725a389"
        ],
        [
            "Definition C := (R * R)%type.",
            "VernacDefinition",
            "2cbad1160f03a5267d2c7a6189438893e2b5308c"
        ],
        [
            "Definition RtoC (x : R) : C := (x,0).",
            "VernacDefinition",
            "3e0e7197e9f2bdad3b80796b9eb3c0f5ab769349"
        ],
        [
            "Coercion RtoC : R >-> C.",
            "VernacCoercion",
            "ac38423f1e7a16257138da278d236521d8f488cf"
        ],
        [
            "Lemma RtoC_inj : forall (x y : R), RtoC x = RtoC y -> x = y.",
            "VernacStartTheoremProof",
            "cc3dcde38a59cc4ff1d90dbe68611006e776805e"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "now apply (f_equal (@fst R R)) in H.",
            "VernacExtend",
            "73c199aa6afbe1b35b2b2e590ba942dfd8349177"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ceq_dec (z1 z2 : C) : { z1 = z2 } + { z1 <> z2 }.",
            "VernacStartTheoremProof",
            "95c9dc429988b8b15f466f3d42069d549d0f8471"
        ],
        [
            "destruct z1 as [x1 y1].",
            "VernacExtend",
            "2ca718fe2c22a0a92399d05c4fbd8af4076fc84f"
        ],
        [
            "destruct z2 as [x2 y2].",
            "VernacExtend",
            "24e82c4ce17131a341e8012efae8fd69369b0342"
        ],
        [
            "case: (Req_EM_T x1 x2) => [ -> | Hx ].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Req_EM_T y1 y2) => [ -> | Hy ].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "right ; contradict Hy.",
            "VernacExtend",
            "03aa5fb701687613b1d04890860c0d4a570c7c29"
        ],
        [
            "now apply (f_equal (@snd R R)) in Hy ; simpl in Hy.",
            "VernacExtend",
            "d063b090e54dfe6dcf01822ce277596e35b4d69c"
        ],
        [
            "right ; contradict Hx.",
            "VernacExtend",
            "1c6c32f52c2dfe4f0b1e4fc07d1d8f37bc3a2d06"
        ],
        [
            "now apply (f_equal (@fst R R)) in Hx ; simpl in Hx.",
            "VernacExtend",
            "8edebcbcdd4e97e389b6da7f47f70b7346638090"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Ci : C := (0,1).",
            "VernacDefinition",
            "7a4c7bc0753034d4215098116816743ce7c92030"
        ],
        [
            "Definition Cplus (x y : C) : C := (fst x + fst y, snd x + snd y).",
            "VernacDefinition",
            "86ed872a271693e05d75ac2b4af82d67f0cdfe96"
        ],
        [
            "Definition Copp (x : C) : C := (-fst x, -snd x).",
            "VernacDefinition",
            "dd393ecfef90a04e24708e18cae931a8c66293ad"
        ],
        [
            "Definition Cminus (x y : C) : C := Cplus x (Copp y).",
            "VernacDefinition",
            "acb745b4aaea06850c986d27c3751bfa2936cd06"
        ],
        [
            "Definition Cmult (x y : C) : C := (fst x * fst y - snd x * snd y, fst x * snd y + snd x * fst y).",
            "VernacDefinition",
            "ed4657c7842459fd825f07d3a0526b2b37d31500"
        ],
        [
            "Definition Cinv (x : C) : C := (fst x / (fst x ^ 2 + snd x ^ 2), - snd x / (fst x ^ 2 + snd x ^ 2)).",
            "VernacDefinition",
            "15151cd424bf3b8d000592c04e2fe53d38efeb55"
        ],
        [
            "Definition Cdiv (x y : C) : C := Cmult x (Cinv y).",
            "VernacDefinition",
            "d9df1c399d96eef1336067db4cb414b54667814a"
        ],
        [
            "Delimit Scope C_scope with C.",
            "VernacDelimiters",
            "d8ed5469419b87445b8f2f18dcfcb0781d7fe694"
        ],
        [
            "Local Open Scope C_scope.",
            "VernacOpenCloseScope",
            "332f6c53a387af82ce74a61243d0265ca46f40cb"
        ],
        [
            "Infix \"+\" := Cplus : C_scope.",
            "VernacInfix",
            "8dfb53a1a01ae18b8dc21ff3cd2a9aa791b8b020"
        ],
        [
            "Notation \"- x\" := (Copp x) : C_scope.",
            "VernacNotation",
            "5c8860f0e546f2068cd5a6edcc2917ee691b8d58"
        ],
        [
            "Infix \"-\" := Cminus : C_scope.",
            "VernacInfix",
            "0d0bb036305bf71f5a5dde9ae702de96f322dce0"
        ],
        [
            "Infix \"*\" := Cmult : C_scope.",
            "VernacInfix",
            "422d7f624123653baba9caf920a1c245470444eb"
        ],
        [
            "Notation \"/ x\" := (Cinv x) : C_scope.",
            "VernacNotation",
            "15149a1e1c88b47db3eab2a9da9aea829c0032b0"
        ],
        [
            "Infix \"/\" := Cdiv : C_scope.",
            "VernacInfix",
            "258c3d14180abfffc2b3a577a4484554e532d81e"
        ],
        [
            "Definition Re (z : C) : R := fst z.",
            "VernacDefinition",
            "49797e9fde1f27e67b04c1e4b4ae18360ff2da85"
        ],
        [
            "Definition Im (z : C) : R := snd z.",
            "VernacDefinition",
            "7af8fcde349a6d7dbf162dd1cbed013a2445dd3f"
        ],
        [
            "Definition Cmod (x : C) : R := sqrt (fst x ^ 2 + snd x ^ 2).",
            "VernacDefinition",
            "0b130203b42f93b3b0b5693defbf5557bff8ce6d"
        ],
        [
            "Definition Cconj (x : C) : C := (fst x, (- snd x)%R).",
            "VernacDefinition",
            "4d0fbf7ce990a9346c94469d4febbae923b7bedd"
        ],
        [
            "Lemma Cmod_0 : Cmod 0 = 0.",
            "VernacStartTheoremProof",
            "a08a7149fcadc8a85588952a3dad904fd75fca91"
        ],
        [
            "unfold Cmod.",
            "VernacExtend",
            "a8e8979b93f542de6cc8e174b7ba16c2425762b9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_0_l Rplus_0_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sqrt_0.",
            "VernacExtend",
            "b24bfa91911f1e613bc76b15e815a054659cb1df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmod_1 : Cmod 1 = 1.",
            "VernacStartTheoremProof",
            "fb069ec2f6c2d3844e857856da42f95601564ca1"
        ],
        [
            "unfold Cmod.",
            "VernacExtend",
            "a8e8979b93f542de6cc8e174b7ba16c2425762b9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_0_l Rplus_0_r 2!Rmult_1_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sqrt_1.",
            "VernacExtend",
            "47574c8f424a3f023281fd26898051576fbb13d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmod_opp : forall x, Cmod (-x) = Cmod x.",
            "VernacStartTheoremProof",
            "a24f0bf6afa7f1dc528ce2bc4a26b9be69b22402"
        ],
        [
            "unfold Cmod.",
            "VernacExtend",
            "a8e8979b93f542de6cc8e174b7ba16c2425762b9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmod_triangle : forall x y, Cmod (x + y) <= Cmod x + Cmod y.",
            "VernacStartTheoremProof",
            "f96badc89721625694bba9a03e047ecb840f2a2d"
        ],
        [
            "intros x y ; rewrite /Cmod.",
            "VernacExtend",
            "be6598b26e238a504f0b0f138d15d82f106a2995"
        ],
        [
            "apply Rsqr_incr_0_var.",
            "VernacExtend",
            "9bacb397cdebb18118ce4d8dbd7b0a6d66c55a80"
        ],
        [
            "apply Rminus_le_0.",
            "VernacExtend",
            "79ba7fff2b7dbdb704707b2f87011a5a974cd791"
        ],
        [
            "unfold Rsqr ; simpl ; ring_simplify.",
            "VernacExtend",
            "f7e0bdc52a89717ad1e78de9e04c8ab84dc7cf60"
        ],
        [
            "rewrite /pow ?Rmult_1_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?sqrt_sqrt ; ring_simplify.",
            "VernacExtend",
            "ba89680a187310b7532578063535d47023e63ea3"
        ],
        [
            "replace (-2 * fst x * fst y - 2 * snd x * snd y)%R with (- (2 * (fst x * fst y + snd x * snd y)))%R by ring.",
            "VernacExtend",
            "496cca73683be32c77f680a1b6a6e1e827f0d48c"
        ],
        [
            "rewrite Rmult_assoc -sqrt_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply -> Rminus_le_0.",
            "VernacExtend",
            "eb3010996ade724f542511d5c9a56441498f4fba"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply Rlt_le, Rlt_0_2.",
            "VernacExtend",
            "402befb5a4950597f8c70db391dff8f1cd4e8542"
        ],
        [
            "apply Rsqr_incr_0_var.",
            "VernacExtend",
            "9bacb397cdebb18118ce4d8dbd7b0a6d66c55a80"
        ],
        [
            "apply Rminus_le_0.",
            "VernacExtend",
            "79ba7fff2b7dbdb704707b2f87011a5a974cd791"
        ],
        [
            "rewrite /Rsqr ?sqrt_sqrt ; ring_simplify.",
            "VernacExtend",
            "ba89680a187310b7532578063535d47023e63ea3"
        ],
        [
            "replace (fst x ^ 2 * snd y ^ 2 - 2 * fst x * snd x * fst y * snd y + snd x ^ 2 * fst y ^ 2)%R with ( (fst x * snd y - snd x * fst y)^2)%R by ring.",
            "VernacExtend",
            "652aa9802053f32828051a1dded1fac6f97dafe5"
        ],
        [
            "apply pow2_ge_0.",
            "VernacExtend",
            "45ef9619b62ef38e52a7a957f88320549b6343e6"
        ],
        [
            "repeat apply Rplus_le_le_0_compat ; apply Rmult_le_pos ; apply pow2_ge_0.",
            "VernacExtend",
            "bbdb03bc9bb6891324d850e8d11b1f8cc53547cc"
        ],
        [
            "apply sqrt_pos.",
            "VernacExtend",
            "8013846f769de514ba1120cf1bfee7fe3207e68d"
        ],
        [
            "apply Rplus_le_le_0_compat ; apply Rle_0_sqr.",
            "VernacExtend",
            "e7a87aa99d279878912722913f063447c7fead11"
        ],
        [
            "apply Rplus_le_le_0_compat ; apply Rle_0_sqr.",
            "VernacExtend",
            "e7a87aa99d279878912722913f063447c7fead11"
        ],
        [
            "replace (fst x ^ 2 + 2 * fst x * fst y + fst y ^ 2 + snd x ^ 2 + 2 * snd x * snd y + snd y ^ 2)%R with ((fst x + fst y)^2 + (snd x + snd y)^2)%R by ring.",
            "VernacExtend",
            "b41a8dc6a7f9f727ecb9dd3563d9625625a622dd"
        ],
        [
            "apply Rplus_le_le_0_compat ; apply pow2_ge_0.",
            "VernacExtend",
            "51c595aa1a3ff2b429d5a9f030e7cb0c1dc905a7"
        ],
        [
            "apply Rplus_le_le_0_compat ; apply pow2_ge_0.",
            "VernacExtend",
            "51c595aa1a3ff2b429d5a9f030e7cb0c1dc905a7"
        ],
        [
            "apply Rplus_le_le_0_compat ; apply pow2_ge_0.",
            "VernacExtend",
            "51c595aa1a3ff2b429d5a9f030e7cb0c1dc905a7"
        ],
        [
            "apply Rplus_le_le_0_compat ; apply sqrt_pos.",
            "VernacExtend",
            "8b6c4366ab893f30bc264e184fb9f5aa40c29fd1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmod_mult : forall x y, Cmod (x * y) = (Cmod x * Cmod y)%R.",
            "VernacStartTheoremProof",
            "f79c810b2173b4dd4c8028bcfdcc39550483ae7c"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold Cmod.",
            "VernacExtend",
            "a8e8979b93f542de6cc8e174b7ba16c2425762b9"
        ],
        [
            "rewrite -sqrt_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal ; simpl ; ring.",
            "VernacExtend",
            "d83ed842879eb8fe71e5ad5d811b17aaeb682faf"
        ],
        [
            "apply Rplus_le_le_0_compat ; apply pow2_ge_0.",
            "VernacExtend",
            "51c595aa1a3ff2b429d5a9f030e7cb0c1dc905a7"
        ],
        [
            "apply Rplus_le_le_0_compat ; apply pow2_ge_0.",
            "VernacExtend",
            "51c595aa1a3ff2b429d5a9f030e7cb0c1dc905a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_Cmod : forall x, Rmax (Rabs (fst x)) (Rabs (snd x)) <= Cmod x.",
            "VernacStartTheoremProof",
            "cea7ca5299e104ffe4661caa66bbb287c804818f"
        ],
        [
            "case => x y /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -!sqrt_Rsqr_abs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmax_case ; apply sqrt_le_1_alt, Rminus_le_0 ; rewrite /Rsqr /= ; ring_simplify ; by apply pow2_ge_0.",
            "VernacExtend",
            "f4c12d77e0cf4f46a5427174a42ea42be9de3b5a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmod_2Rmax : forall x, Cmod x <= sqrt 2 * Rmax (Rabs (fst x)) (Rabs (snd x)).",
            "VernacStartTheoremProof",
            "1e400c64b01c5a167e60da63dbf5f749fea3450c"
        ],
        [
            "case => x y /= ; apply Rmax_case_strong => H0 ; rewrite -!sqrt_Rsqr_abs ; rewrite -?sqrt_mult ; try (by apply Rle_0_sqr) ; try (by apply Rlt_le, Rlt_0_2) ; apply sqrt_le_1_alt ; simpl ; [ rewrite Rplus_comm | ] ; rewrite /Rsqr ; apply Rle_minus_r ; ring_simplify ; apply Rsqr_le_abs_1 in H0 ; by rewrite /pow !Rmult_1_r.",
            "VernacExtend",
            "ffae0b33a1a7e118a407e55c0478e1237f4b8162"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RtoC_plus (x y : R) : RtoC (x + y) = RtoC x + RtoC y.",
            "VernacStartTheoremProof",
            "c8642a236694fd521faef4cfb461a77af04cdea1"
        ],
        [
            "unfold RtoC, Cplus ; simpl.",
            "VernacExtend",
            "593f5efb16ddb9a26afb820040ed200cae147515"
        ],
        [
            "by rewrite Rplus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RtoC_opp (x : R) : RtoC (- x) = - RtoC x.",
            "VernacStartTheoremProof",
            "e0523f0166dcfb419f3ae62af83ea9f5526e24a9"
        ],
        [
            "unfold RtoC, Copp ; simpl.",
            "VernacExtend",
            "79a8e8c884ca6986781bc8e290838d0cc9de932d"
        ],
        [
            "by rewrite Ropp_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RtoC_minus (x y : R) : RtoC (x - y) = RtoC x - RtoC y.",
            "VernacStartTheoremProof",
            "3232dded66c4f82186ecc5f94bcaff564f98b7a6"
        ],
        [
            "by rewrite /Cminus -RtoC_opp -RtoC_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RtoC_mult (x y : R) : RtoC (x * y) = RtoC x * RtoC y.",
            "VernacStartTheoremProof",
            "19e9cc281882db69586b80acbc644142faa95472"
        ],
        [
            "unfold RtoC, Cmult ; simpl.",
            "VernacExtend",
            "02154873b828c8dd8fcee0a4ad9146182221f6a9"
        ],
        [
            "apply injective_projections ; simpl ; ring.",
            "VernacExtend",
            "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RtoC_inv (x : R) : (x <> 0)%R -> RtoC (/ x) = / RtoC x.",
            "VernacStartTheoremProof",
            "85a48f94118d6502599df3d685fa85e60205e4cf"
        ],
        [
            "intros Hx.",
            "VernacExtend",
            "9276b72df3a882c9b4b954c90d9e870c80a906fc"
        ],
        [
            "by apply injective_projections ; simpl ; field.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RtoC_div (x y : R) : (y <> 0)%R -> RtoC (x / y) = RtoC x / RtoC y.",
            "VernacStartTheoremProof",
            "ac6a7ef4a8ffd36113829eb0c7d545be1c119ad2"
        ],
        [
            "intros Hy.",
            "VernacExtend",
            "dde1f3a11f7e3e65a050aa4d13dc38c854979033"
        ],
        [
            "by apply injective_projections ; simpl ; field.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cplus_comm (x y : C) : x + y = y + x.",
            "VernacStartTheoremProof",
            "df19a56b7ccc8ddf70d58395a9f16dc16d00baee"
        ],
        [
            "apply injective_projections ; simpl ; apply Rplus_comm.",
            "VernacExtend",
            "0049dada389e5be35b3e60c51ba6ff65c26e625c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cplus_assoc (x y z : C) : x + (y + z) = (x + y) + z.",
            "VernacStartTheoremProof",
            "88308e136552d9e92d31c7225edf27a29912e075"
        ],
        [
            "apply injective_projections ; simpl ; apply sym_eq, Rplus_assoc.",
            "VernacExtend",
            "f224c0bee5e4a397d04fc0076268b502b8c2fc57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cplus_0_r (x : C) : x + 0 = x.",
            "VernacStartTheoremProof",
            "05cab2dab8bd396ca60028478b6f0b0f5c9c4798"
        ],
        [
            "apply injective_projections ; simpl ; apply Rplus_0_r.",
            "VernacExtend",
            "074c22c540a435603fddb5fa04a00db10bfd3ccb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cplus_0_l (x : C) : 0 + x = x.",
            "VernacStartTheoremProof",
            "2d0c59869c00ca7868dc267100bfd67d9b739dc3"
        ],
        [
            "apply injective_projections ; simpl ; apply Rplus_0_l.",
            "VernacExtend",
            "1ed95817be87036b0091defefde12e14cb893157"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cplus_opp_r (x : C) : x + -x = 0.",
            "VernacStartTheoremProof",
            "1acee1b50ed1eb2d20839651efd13ae0df8264ff"
        ],
        [
            "apply injective_projections ; simpl ; apply Rplus_opp_r.",
            "VernacExtend",
            "c78d016c150f5641b7abe35b90a23b61201ba861"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Copp_plus_distr (z1 z2 : C) : - (z1 + z2) = (- z1 + - z2).",
            "VernacStartTheoremProof",
            "5b97b2336aa259cc2725db90a49b5581d3f10607"
        ],
        [
            "apply injective_projections ; by apply Ropp_plus_distr.",
            "VernacExtend",
            "813300cf6601cb08096b7e8666e5e5820df07782"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Copp_minus_distr (z1 z2 : C) : - (z1 - z2) = z2 - z1.",
            "VernacStartTheoremProof",
            "88a7227a3209649de1844e04c1ce9b8cb53a588b"
        ],
        [
            "apply injective_projections ; by apply Ropp_minus_distr.",
            "VernacExtend",
            "813300cf6601cb08096b7e8666e5e5820df07782"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmult_comm (x y : C) : x * y = y * x.",
            "VernacStartTheoremProof",
            "d7b7b7c0a066e0cebaf3bda772cf20c6001a444d"
        ],
        [
            "apply injective_projections ; simpl ; ring.",
            "VernacExtend",
            "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmult_assoc (x y z : C) : x * (y * z) = (x * y) * z.",
            "VernacStartTheoremProof",
            "ffe7facbf39c805afaecfa65c412b30940f58df0"
        ],
        [
            "apply injective_projections ; simpl ; ring.",
            "VernacExtend",
            "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmult_0_r (x : C) : x * 0 = 0.",
            "VernacStartTheoremProof",
            "5c4ed630357ab1af2af892b22b284ef480074227"
        ],
        [
            "apply injective_projections ; simpl ; ring.",
            "VernacExtend",
            "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmult_0_l (x : C) : 0 * x = 0.",
            "VernacStartTheoremProof",
            "b26d7bdf001463536a4ab47294c0a4387e323a65"
        ],
        [
            "apply injective_projections ; simpl ; ring.",
            "VernacExtend",
            "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmult_1_r (x : C) : x * 1 = x.",
            "VernacStartTheoremProof",
            "3b8c711805310b2dc52e19d0d87a864439ec05e7"
        ],
        [
            "apply injective_projections ; simpl ; ring.",
            "VernacExtend",
            "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmult_1_l (x : C) : 1 * x = x.",
            "VernacStartTheoremProof",
            "5c22b8fc19078ecd3c257e89041cc9f35ada4f66"
        ],
        [
            "apply injective_projections ; simpl ; ring.",
            "VernacExtend",
            "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cinv_r (r : C) : r <> 0 -> r * /r = 1.",
            "VernacStartTheoremProof",
            "64999959919a08c359c0d2aadb566ba479764b5e"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply injective_projections ; simpl ; field.",
            "VernacExtend",
            "f3f14b0c56f9080f72f04cf73a4868e64a852085"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply Rplus_sqr_eq_0 in H.",
            "VernacExtend",
            "e92d474720db0a6759dbd6e9d8be8e116b72f9e8"
        ],
        [
            "apply injective_projections ; simpl ; by apply H.",
            "VernacExtend",
            "5452ca880dad8f82d15f444f655318aa39e59cab"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply Rplus_sqr_eq_0 in H.",
            "VernacExtend",
            "e92d474720db0a6759dbd6e9d8be8e116b72f9e8"
        ],
        [
            "apply injective_projections ; simpl ; by apply H.",
            "VernacExtend",
            "5452ca880dad8f82d15f444f655318aa39e59cab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cinv_l (r : C) : r <> 0 -> /r * r = 1.",
            "VernacStartTheoremProof",
            "858162e1f8b7ddf9a668698f04c3788bb0059233"
        ],
        [
            "intros Zr.",
            "VernacExtend",
            "230a707d9c1e9a3c8a5b12862b390f68961ae666"
        ],
        [
            "rewrite Cmult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply Cinv_r.",
            "VernacExtend",
            "47a39bcc1a0699aba7fbfcb70161f0291afab0e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmult_plus_distr_l (x y z : C) : x * (y + z) = x * y + x * z.",
            "VernacStartTheoremProof",
            "c8920fe824e83944d4f0387bfde26a9a48e32f80"
        ],
        [
            "apply injective_projections ; simpl ; ring.",
            "VernacExtend",
            "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmult_plus_distr_r (x y z : C) : (x + y) * z = x * z + y * z.",
            "VernacStartTheoremProof",
            "2a94dc9f301710803df88f785e7ed681348340a7"
        ],
        [
            "apply injective_projections ; simpl ; ring.",
            "VernacExtend",
            "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition C_AbelianGroup_mixin := AbelianGroup.Mixin _ _ _ _ Cplus_comm Cplus_assoc Cplus_0_r Cplus_opp_r.",
            "VernacDefinition",
            "725e3501574c1db932e805ba811f13f0e824e597"
        ],
        [
            "Canonical C_AbelianGroup := AbelianGroup.Pack C C_AbelianGroup_mixin C.",
            "VernacDefinition",
            "732e984a7548a290f1f55c9c0b639d09dd5e3db7"
        ],
        [
            "Lemma Copp_0 : Copp 0 = 0.",
            "VernacStartTheoremProof",
            "1c545a5f3539c54a5d361a3f8dd4bf9e7eae0efc"
        ],
        [
            "apply: opp_zero.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition C_Ring_mixin := Ring.Mixin _ _ _ Cmult_assoc Cmult_1_r Cmult_1_l Cmult_plus_distr_r Cmult_plus_distr_l.",
            "VernacDefinition",
            "6d3333feace27198eea1fd8c3663b0018ad11bb9"
        ],
        [
            "Canonical C_Ring := Ring.Pack C (Ring.Class _ _ C_Ring_mixin) C.",
            "VernacDefinition",
            "3505129fcac628abff75ad8142fe896b7c0d36b0"
        ],
        [
            "Lemma Cmod_m1 : Cmod (Copp 1) = 1.",
            "VernacStartTheoremProof",
            "0897c69e1e612eee1c1b78e2612d35579e92e86d"
        ],
        [
            "rewrite Cmod_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Cmod_1.",
            "VernacExtend",
            "7eb208ba1c4b20c8d6e5c2b9001e6b866df3a4eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmod_eq_0 : forall x, Cmod x = 0 -> x = 0.",
            "VernacStartTheoremProof",
            "0958835b4a54d61027b04d5e130a74d05b8a2e26"
        ],
        [
            "intros x H.",
            "VernacExtend",
            "a0cd74b85812810ce5a78a540bad98f664bd4842"
        ],
        [
            "unfold Cmod, pow in H.",
            "VernacExtend",
            "79577602734656db05c520cd0b36903873782143"
        ],
        [
            "rewrite 2!Rmult_1_r -sqrt_0 in H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sqrt_inj in H.",
            "VernacExtend",
            "3ea93cc9a7f221f17b73c64fe49b16cf2a4358b4"
        ],
        [
            "apply Rplus_sqr_eq_0 in H.",
            "VernacExtend",
            "e92d474720db0a6759dbd6e9d8be8e116b72f9e8"
        ],
        [
            "now apply injective_projections.",
            "VernacExtend",
            "9b10f58b2cc92bee3da4693d6036c3aee452f37f"
        ],
        [
            "apply Rplus_le_le_0_compat ; apply Rle_0_sqr.",
            "VernacExtend",
            "e7a87aa99d279878912722913f063447c7fead11"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition C_AbsRing_mixin := AbsRing.Mixin _ _ Cmod_0 Cmod_m1 Cmod_triangle (fun x y => Req_le _ _ (Cmod_mult x y)) Cmod_eq_0.",
            "VernacDefinition",
            "bd6c38f67ecfeed6d8e555fd778548bfc97a5e99"
        ],
        [
            "Canonical C_AbsRing := AbsRing.Pack C (AbsRing.Class _ _ C_AbsRing_mixin) C.",
            "VernacDefinition",
            "2a60da783cbf31a27eb2f27ccf7a91cf39ad724b"
        ],
        [
            "Lemma Cmod_ge_0 : forall x, 0 <= Cmod x.",
            "VernacStartTheoremProof",
            "4c227d296c05aac1f30aa8c06fc28b298174015d"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply sqrt_pos.",
            "VernacExtend",
            "8013846f769de514ba1120cf1bfee7fe3207e68d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmod_gt_0 : forall (x : C), x <> 0 <-> 0 < Cmod x.",
            "VernacStartTheoremProof",
            "ceed64b54eda4aaf2a1b8b81841c400be7649fbe"
        ],
        [
            "intros x ; split => Hx.",
            "VernacExtend",
            "3cd2bff299b1a51962a1128ba9ad985baab5a62e"
        ],
        [
            "destruct (Cmod_ge_0 x) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply sym_eq, Cmod_eq_0 in H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict Hx.",
            "VernacExtend",
            "51524c6f0a35f50dcb732884ab4e3630854bd951"
        ],
        [
            "apply Rle_not_lt, Req_le.",
            "VernacExtend",
            "746d3cae4c233a6a8268c0404925bd6d23d75a84"
        ],
        [
            "by rewrite Hx Cmod_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmod_norm : forall x : C, Cmod x = (@norm R_AbsRing _ x).",
            "VernacStartTheoremProof",
            "a4f82b0ebfa2022f68e4167cec1e5f4fcc838442"
        ],
        [
            "intros [u v].",
            "VernacExtend",
            "c9b3ee7d8ebd28ed5e29d8ca474d701782d2eab1"
        ],
        [
            "unfold Cmod.",
            "VernacExtend",
            "a8e8979b93f542de6cc8e174b7ba16c2425762b9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (f_equal2 (fun x y => sqrt (x + y))) ; rewrite /norm /= !Rmult_1_r ; apply Rsqr_abs.",
            "VernacExtend",
            "0a4608e3e6854dbf67ff8ac0342af0e90daa49cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmod_R : forall x : R, Cmod x = Rabs x.",
            "VernacStartTheoremProof",
            "80595c2106405f40a0ec142b2daeffddeee746e7"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold Cmod.",
            "VernacExtend",
            "a8e8979b93f542de6cc8e174b7ba16c2425762b9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_0_l Rplus_0_r Rmult_1_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sqrt_Rsqr_abs.",
            "VernacExtend",
            "3d12dafb0673497c5ae72075dc0d2042aa2c07b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmod_inv : forall x : C, x <> 0 -> Cmod (/ x) = Rinv (Cmod x).",
            "VernacStartTheoremProof",
            "41b1a2b9322753be3ae86695ac0bdca6935ca028"
        ],
        [
            "intros x Zx.",
            "VernacExtend",
            "08f1bfaa3e93c75720cd0db10b7702c6fc3946cd"
        ],
        [
            "apply Rmult_eq_reg_l with (Cmod x).",
            "VernacExtend",
            "726672c134b8ba57464fb089a9f5cc0e9b91b5a8"
        ],
        [
            "rewrite -Cmod_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rinv_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Cinv_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Cmod_R.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rabs_R1.",
            "VernacExtend",
            "87351a1163af6a1581ea1b838d6b5f028cb36292"
        ],
        [
            "exact Zx.",
            "VernacExtend",
            "e4bd4adbe9cc7a30eeec4957ceaa9f2e928daa62"
        ],
        [
            "contradict Zx.",
            "VernacExtend",
            "d12ccef1ba065a2ae54cd30425f082ad16750bfd"
        ],
        [
            "now apply Cmod_eq_0.",
            "VernacExtend",
            "c154d90ec5c99a6aaf627a480452c4c0e43b4d85"
        ],
        [
            "contradict Zx.",
            "VernacExtend",
            "d12ccef1ba065a2ae54cd30425f082ad16750bfd"
        ],
        [
            "now apply Cmod_eq_0.",
            "VernacExtend",
            "c154d90ec5c99a6aaf627a480452c4c0e43b4d85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmod_div (x y : C) : y <> 0 -> Cmod (x / y) = Rdiv (Cmod x) (Cmod y).",
            "VernacStartTheoremProof",
            "96a4128f9fa4d555f020621903db297c18262d12"
        ],
        [
            "move => Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /Cdiv.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Cmod_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Cmod_inv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cmult_neq_0 (z1 z2 : C) : z1 <> 0 -> z2 <> 0 -> z1 * z2 <> 0.",
            "VernacStartTheoremProof",
            "62a77c763c92c3bdd1f74fee4b563dce504b9a89"
        ],
        [
            "intros Hz1 Hz2 => Hz.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "assert (Cmod (z1 * z2) = 0).",
            "VernacExtend",
            "9fc26a8fb814e611f97b523e73c950672a947e2d"
        ],
        [
            "by rewrite Hz Cmod_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Cmod_mult in H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_integral in H ; destruct H.",
            "VernacExtend",
            "0a8ab1f9b1fc07291842ecec93536ebae86277d5"
        ],
        [
            "now apply Hz1, Cmod_eq_0.",
            "VernacExtend",
            "824388c4f5fff52fe9895736ecbd172c5f1d4780"
        ],
        [
            "now apply Hz2, Cmod_eq_0.",
            "VernacExtend",
            "b4550ada339dc835aea2941f23f05ddb0466e3a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cminus_eq_contra : forall r1 r2 : C, r1 <> r2 -> r1 - r2 <> 0.",
            "VernacStartTheoremProof",
            "82f5d0ea744c16bd136427045fb8b8e88af8b0cd"
        ],
        [
            "intros ; contradict H ; apply injective_projections ; apply Rminus_diag_uniq.",
            "VernacExtend",
            "8e43ac883d9525b472db1a2b2020cf1a6908a96f"
        ],
        [
            "now apply (f_equal (@fst R R)) in H.",
            "VernacExtend",
            "73c199aa6afbe1b35b2b2e590ba942dfd8349177"
        ],
        [
            "now apply (f_equal (@snd R R)) in H.",
            "VernacExtend",
            "feac949cfa44a9c92aac76fd5ab499f213edf162"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C_field_theory : field_theory (RtoC 0) (RtoC 1) Cplus Cmult Cminus Copp Cdiv Cinv eq.",
            "VernacStartTheoremProof",
            "fb5062fa315de57f5c6eab88989069d31c30d188"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exact Cplus_0_l.",
            "VernacExtend",
            "a12d41a52d424fd11bdfa23253318077db083cb0"
        ],
        [
            "exact Cplus_comm.",
            "VernacExtend",
            "402fc2b529dca9e70bd20d1037b5b62f297ca132"
        ],
        [
            "exact Cplus_assoc.",
            "VernacExtend",
            "113a77197d4216fee6c3c5fa4e91a18bd9b4946a"
        ],
        [
            "exact Cmult_1_l.",
            "VernacExtend",
            "dc78b7476a7d20b5125d0d8a883f75c2b09718e6"
        ],
        [
            "exact Cmult_comm.",
            "VernacExtend",
            "7341c7f4b05d63561996f787901e14ed7dab1cb0"
        ],
        [
            "exact Cmult_assoc.",
            "VernacExtend",
            "f8b0386fee9f1adad9f14ca9cb335b4511d699f4"
        ],
        [
            "exact Cmult_plus_distr_r.",
            "VernacExtend",
            "cb0bd03eb4b34ccfa64b38f706a00eebe198a23b"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "exact Cplus_opp_r.",
            "VernacExtend",
            "ee9e1001b198442c46e48205ea98619659a3ed9f"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "injection H.",
            "VernacExtend",
            "0b4168b75c87f7c322bfb81e661f04001b54052d"
        ],
        [
            "exact R1_neq_R0.",
            "VernacExtend",
            "93e887d3f68db5b326ec66a221eb4996f49b8622"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "apply Cinv_l.",
            "VernacExtend",
            "19d6945e9f8dd8e7ebc623a06a5401ab16680a90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Field C_field_field : C_field_theory.",
            "VernacExtend",
            "209d632732e0a725b5248b48b006322c3dc6f78b"
        ],
        [
            "Canonical C_UniformSpace := UniformSpace.Pack C (UniformSpace.class (prod_UniformSpace _ _)) C.",
            "VernacDefinition",
            "90ab1dc7c7d7090e42de6153fb44ca566d29a6e1"
        ],
        [
            "Canonical C_ModuleSpace := ModuleSpace.Pack C_Ring C (ModuleSpace.class _ (Ring_ModuleSpace C_Ring)) C.",
            "VernacDefinition",
            "3879318e5da769994b1c9b6b0892426d6dd9b3fa"
        ],
        [
            "Canonical C_NormedModuleAux := NormedModuleAux.Pack C_AbsRing C (NormedModuleAux.Class C_AbsRing _ (ModuleSpace.class _ C_ModuleSpace) (UniformSpace.class C_UniformSpace)) C.",
            "VernacDefinition",
            "d158f0d3425c93a71cfeffb716f7d11c6629ed09"
        ],
        [
            "Lemma C_NormedModule_mixin_compat1 : forall (x y : C) (eps : R), Cmod (minus y x) < eps -> ball x eps y.",
            "VernacStartTheoremProof",
            "7dc99ad5ace9ea34176155fd88b3175e4449e59c"
        ],
        [
            "intros x y eps.",
            "VernacExtend",
            "7a07be76b0f1b74d30f1e72e920fb32e18102667"
        ],
        [
            "rewrite Cmod_norm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: prod_norm_compat1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C_NormedModule_mixin_compat2 : forall (x y : C_NormedModuleAux) (eps : posreal), ball x eps y -> Cmod (minus y x) < sqrt 2 * eps.",
            "VernacStartTheoremProof",
            "a5472fbd417ac9b141f81828ee02b238a01fd8a2"
        ],
        [
            "intros x y eps H.",
            "VernacExtend",
            "9f198b6699b9768d02ce33d6925dde521818bada"
        ],
        [
            "rewrite Cmod_norm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (sqrt 2) with (sqrt 2 * Rmax 1 1)%R.",
            "VernacExtend",
            "cd052e3892dbbce228122883f22fe4d8e720d457"
        ],
        [
            "apply: prod_norm_compat2 H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite -> Rmax_left by apply Rle_refl.",
            "VernacExtend",
            "00b9d21079d426c7340c36ac472e35edb9641e84"
        ],
        [
            "apply Rmult_1_r.",
            "VernacExtend",
            "7e290e72327ec53766aaa3b6504d3f54d3250d15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition C_NormedModule_mixin := NormedModule.Mixin _ C_NormedModuleAux _ _ Cmod_triangle (fun x y => Req_le _ _ (Cmod_mult x y)) C_NormedModule_mixin_compat1 C_NormedModule_mixin_compat2 Cmod_eq_0.",
            "VernacDefinition",
            "e3bf1b931364e32cf79a7585ed71110a7d7225fe"
        ],
        [
            "Canonical C_NormedModule := NormedModule.Pack C_AbsRing C (NormedModule.Class _ _ _ C_NormedModule_mixin) C.",
            "VernacDefinition",
            "f0425acb9acaaeb1cfd8b44de2c9511af3a15d8b"
        ],
        [
            "Canonical C_R_ModuleSpace := ModuleSpace.Pack R_Ring C (ModuleSpace.class _ (prod_ModuleSpace R_Ring R_ModuleSpace R_ModuleSpace)) C.",
            "VernacDefinition",
            "3575162c780f70b935950f5fefb86b2c0a09181d"
        ],
        [
            "Canonical C_R_NormedModuleAux := NormedModuleAux.Pack R_AbsRing C (NormedModuleAux.Class R_AbsRing _ (ModuleSpace.class _ C_R_ModuleSpace) (UniformSpace.class _)) C.",
            "VernacDefinition",
            "e273f1638e514d6632c3a54b2b6c548fde745d4e"
        ],
        [
            "Canonical C_R_NormedModule := NormedModule.Pack R_AbsRing C (NormedModule.class _ (prod_NormedModule _ _ _)) C.",
            "VernacDefinition",
            "fe1e461e34616aff5904dde7449fa6621c19c624"
        ],
        [
            "Lemma scal_R_Cmult : forall (x : R) (y : C), scal (V := C_R_ModuleSpace) x y = Cmult x y.",
            "VernacStartTheoremProof",
            "9adc9e13de3891bdcc53598338ed21fd99fae7b2"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "apply injective_projections ; rewrite /scal /= /scal /= /mult /= ; ring.",
            "VernacExtend",
            "12f3009386c29f99dccb1cd0d82a26b30a251bf9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition C_complete_lim (F : (C -> Prop) -> Prop) := (R_complete_lim (fun P => F (fun z => P (Re z))), R_complete_lim (fun P => F (fun z => P (Im z)))).",
            "VernacDefinition",
            "cfb04e560272672ab62d42bf02474e949744bd83"
        ],
        [
            "Lemma C_complete_ax1 : forall F : (C -> Prop) -> Prop, ProperFilter F -> (forall eps : posreal, exists x : C, F (ball x eps)) -> forall eps : posreal, F (ball (C_complete_lim F) eps).",
            "VernacStartTheoremProof",
            "f5d4b71ae843dacad7b7b1703adfd8aeba655f5c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply filter_and ; simpl ; revert eps.",
            "VernacExtend",
            "5a0c86a7ae6760695a6539986f1fda3539de6325"
        ],
        [
            "apply (R_complete (fun P => F (fun z => P (Re z)))).",
            "VernacExtend",
            "5e106823466c882ffcc7d6c5c742dd834bb6dade"
        ],
        [
            "split ; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "destruct (filter_ex _ H1).",
            "VernacExtend",
            "6cabf0d9d174b4fde089b2985d20d94b5231fc7e"
        ],
        [
            "by exists (Re x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply filter_true.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros ; by apply filter_and.",
            "VernacExtend",
            "410692175b0276aea3ff719ec7d2840404bfc714"
        ],
        [
            "intros ; eapply filter_imp, H2.",
            "VernacExtend",
            "2190364d04671ed14cdb7c53a7cf779270341d42"
        ],
        [
            "intros ; by apply H1.",
            "VernacExtend",
            "410692175b0276aea3ff719ec7d2840404bfc714"
        ],
        [
            "intros ; destruct (H0 eps).",
            "VernacExtend",
            "2c9e7cf1c946de977725be1808bf6588681b42ef"
        ],
        [
            "exists (Re x).",
            "VernacExtend",
            "dae1d2a1fa325b629b85fd736274f9ae0481da5b"
        ],
        [
            "move: H1 ; apply filter_imp.",
            "VernacExtend",
            "0748f60fd4bfbf18081aafc2b987584f77eabe68"
        ],
        [
            "intros ; by apply H1.",
            "VernacExtend",
            "410692175b0276aea3ff719ec7d2840404bfc714"
        ],
        [
            "apply (R_complete (fun P => F (fun z => P (Im z)))).",
            "VernacExtend",
            "aa0a423ae3b26daee1c60fd855bc643f3d486f61"
        ],
        [
            "split ; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "destruct (filter_ex _ H1).",
            "VernacExtend",
            "6cabf0d9d174b4fde089b2985d20d94b5231fc7e"
        ],
        [
            "by exists (Im x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply filter_true.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros ; by apply filter_and.",
            "VernacExtend",
            "410692175b0276aea3ff719ec7d2840404bfc714"
        ],
        [
            "intros ; eapply filter_imp, H2.",
            "VernacExtend",
            "2190364d04671ed14cdb7c53a7cf779270341d42"
        ],
        [
            "intros ; by apply H1.",
            "VernacExtend",
            "410692175b0276aea3ff719ec7d2840404bfc714"
        ],
        [
            "intros ; destruct (H0 eps).",
            "VernacExtend",
            "2c9e7cf1c946de977725be1808bf6588681b42ef"
        ],
        [
            "exists (Im x).",
            "VernacExtend",
            "395814da656e232c225172e7026975809e211ead"
        ],
        [
            "move: H1 ; apply filter_imp.",
            "VernacExtend",
            "0748f60fd4bfbf18081aafc2b987584f77eabe68"
        ],
        [
            "intros ; by apply H1.",
            "VernacExtend",
            "410692175b0276aea3ff719ec7d2840404bfc714"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C_complete_ax2 : forall F1 F2 : (C -> Prop) -> Prop, filter_le F1 F2 -> filter_le F2 F1 -> close (C_complete_lim F1) (C_complete_lim F2).",
            "VernacStartTheoremProof",
            "bfa4382edbaff473f805f3945f5433afae162164"
        ],
        [
            "intros F1 F2 H12 H21 eps.",
            "VernacExtend",
            "fa97d516774eff8d9b53c8870bc286e456b9067a"
        ],
        [
            "split ; apply R_complete_close ; intros P.",
            "VernacExtend",
            "c6b754ffdf6eea8e2bd9a03a6226ba7a867bd283"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition C_CompleteSpace_mixin := CompleteSpace.Mixin _ C_complete_lim C_complete_ax1 C_complete_ax2.",
            "VernacDefinition",
            "45eefc6352d545680ec48a62e6badc12b3f2796f"
        ],
        [
            "Canonical C_CompleteNormedModule := CompleteNormedModule.Pack _ C (CompleteNormedModule.Class C_AbsRing _ (NormedModule.class _ C_NormedModule) C_CompleteSpace_mixin) C.",
            "VernacDefinition",
            "0907dfe6957cc9ed6c7c5b72127e26536bb963a9"
        ],
        [
            "Canonical C_R_CompleteNormedModule := CompleteNormedModule.Pack _ C (CompleteNormedModule.Class R_AbsRing _ (NormedModule.class _ C_R_NormedModule) C_CompleteSpace_mixin) C.",
            "VernacDefinition",
            "0cb26005fb8e3ecc22bcf3a7a7aae3aa90bba1de"
        ],
        [
            "Lemma locally_C x P : locally (T := C_UniformSpace) x P <-> locally (T := AbsRing_UniformSpace C_AbsRing) x P.",
            "VernacStartTheoremProof",
            "0a7c36a1eee47d04140a415ee6d8d9f527dea92b"
        ],
        [
            "split => [[e He] | [e He]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists e => /= y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply Rle_lt_trans, Hy.",
            "VernacExtend",
            "5d7b9881fa7bedfd08a0475ca10bafb618d939dd"
        ],
        [
            "eapply Rle_trans, Rmax_Cmod.",
            "VernacExtend",
            "cce80f8f3537f815ca1f43e7830749615ed397f6"
        ],
        [
            "apply Rmax_l.",
            "VernacExtend",
            "e8bdf305d751b877364ec9794b15c2d6e134dc98"
        ],
        [
            "eapply Rle_lt_trans, Hy.",
            "VernacExtend",
            "5d7b9881fa7bedfd08a0475ca10bafb618d939dd"
        ],
        [
            "eapply Rle_trans, Rmax_Cmod.",
            "VernacExtend",
            "cce80f8f3537f815ca1f43e7830749615ed397f6"
        ],
        [
            "apply Rmax_r.",
            "VernacExtend",
            "d3f964851377911a5dafd3727673be093a2b343f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Hd : 0 < e / sqrt 2).",
            "VernacExtend",
            "82766ecd30d04724516de94758ad288477b7a1e0"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply e.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_sqrt2_0.",
            "VernacExtend",
            "c1b2005376a9b8e97bff3ba76202377d4e222a5e"
        ],
        [
            "exists (mkposreal _ Hd) => /= y [Hy1 Hy2].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply Cmod_2Rmax.",
            "VernacExtend",
            "0f9cd58e64b619625a362e4950590160ecd2f665"
        ],
        [
            "rewrite Rmult_comm ; apply Rlt_div_r.",
            "VernacExtend",
            "d281af2efbc3e529ecb1b881369ae91d1aee6482"
        ],
        [
            "apply Rlt_sqrt2_0.",
            "VernacExtend",
            "c1b2005376a9b8e97bff3ba76202377d4e222a5e"
        ],
        [
            "apply Rmax_case.",
            "VernacExtend",
            "cfd24564dbeed7e74b25ea72bdae495929c2ce09"
        ],
        [
            "by apply Hy1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hy2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition C_lim (f : C -> C) (z : C) : C := (real (Lim (fun x => fst (f (x, snd z))) (fst z)), real (Lim (fun x => snd (f (x, snd z))) (fst z))).",
            "VernacDefinition",
            "c6e7e1e5b047b7f0cdc5870175364b27e3ceb8a9"
        ],
        [
            "Lemma is_C_lim_unique (f : C -> C) (z l : C) : filterlim f (locally' z) (locally l) -> C_lim f z = l.",
            "VernacStartTheoremProof",
            "f2aa55afd7591051e55c68ac5a92836acc74e9e8"
        ],
        [
            "case: l => lx ly H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply injective_projections ; simpl.",
            "VernacExtend",
            "a29cc8f4966e828577843e7892e5291a3c2a57a7"
        ],
        [
            "apply (f_equal real (y := Finite lx)).",
            "VernacExtend",
            "4a18d8d2e54ab0944e27c616e5a3bf326f86e43d"
        ],
        [
            "apply is_lim_unique => /= P [eps Hp].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct (H (fun z => P (fst z))) as [delta Hd] ; clear H.",
            "VernacExtend",
            "21d069bddd20737258d131e11ef20045a496f284"
        ],
        [
            "exists eps => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Hp, Hy.",
            "VernacExtend",
            "4f78573f8958357b2f67c23a9c6979a11f3287cd"
        ],
        [
            "exists delta.",
            "VernacExtend",
            "9b3e0c1864d154c56892795f1b2d7db5a609fd33"
        ],
        [
            "intros y By Hy.",
            "VernacExtend",
            "3ec5d3030fb2558b653a4c98c3e57b540fa43d89"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "split ; simpl.",
            "VernacExtend",
            "007660188543279503c14efdb86878699f33588a"
        ],
        [
            "apply By.",
            "VernacExtend",
            "254d2299c3d488346604e1178a957dca68dad52d"
        ],
        [
            "apply ball_center.",
            "VernacExtend",
            "cd7d813ae3e0973ad761815cfc4c15b7e8339e52"
        ],
        [
            "contradict Hy.",
            "VernacExtend",
            "5378912ae1f409840716e13b5c13ff1658002182"
        ],
        [
            "clear -Hy.",
            "VernacExtend",
            "ec6838dec774ad41e41defc852e56297f2e63a8a"
        ],
        [
            "destruct z as [z1 z2].",
            "VernacExtend",
            "da8224cf08fddeb96cb3695e2ae2d80b7e3bbaa0"
        ],
        [
            "now injection Hy.",
            "VernacExtend",
            "ee16d5247332e8b3e7c238fa20750dbfb545e672"
        ],
        [
            "apply (f_equal real (y := Finite ly)).",
            "VernacExtend",
            "aa7650e0aaee1db99ebd80357ca3bf75d3889bb3"
        ],
        [
            "apply is_lim_unique => /= P [eps Hp].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct (H (fun z => P (snd z))) as [delta Hd] ; clear H.",
            "VernacExtend",
            "7d2b83a66b3bf952f89bd12516bf6dff33adbbf7"
        ],
        [
            "exists eps => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Hp.",
            "VernacExtend",
            "29de4ac4e06a5589937cb0ff3f9b64ec34b3dd7c"
        ],
        [
            "apply Hy.",
            "VernacExtend",
            "80f07477a1dd0a8c39407b7d0aa65b768d8a6d0b"
        ],
        [
            "exists delta.",
            "VernacExtend",
            "9b3e0c1864d154c56892795f1b2d7db5a609fd33"
        ],
        [
            "intros y By Hy.",
            "VernacExtend",
            "3ec5d3030fb2558b653a4c98c3e57b540fa43d89"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "split ; simpl.",
            "VernacExtend",
            "007660188543279503c14efdb86878699f33588a"
        ],
        [
            "apply By.",
            "VernacExtend",
            "254d2299c3d488346604e1178a957dca68dad52d"
        ],
        [
            "apply ball_center.",
            "VernacExtend",
            "cd7d813ae3e0973ad761815cfc4c15b7e8339e52"
        ],
        [
            "contradict Hy.",
            "VernacExtend",
            "5378912ae1f409840716e13b5c13ff1658002182"
        ],
        [
            "clear -Hy.",
            "VernacExtend",
            "ec6838dec774ad41e41defc852e56297f2e63a8a"
        ],
        [
            "destruct z as [z1 z2].",
            "VernacExtend",
            "da8224cf08fddeb96cb3695e2ae2d80b7e3bbaa0"
        ],
        [
            "now injection Hy.",
            "VernacExtend",
            "ee16d5247332e8b3e7c238fa20750dbfb545e672"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition C_derive (f : C -> C) (z : C) := C_lim (fun x => (f x - f z) / (x - z)) z.",
            "VernacDefinition",
            "054d7223c840345e97e255342c1c6af3ef5a4419"
        ],
        [
            "Lemma is_C_derive_unique (f : C -> C) (z l : C) : is_derive f z l -> C_derive f z = l.",
            "VernacStartTheoremProof",
            "ce8f00c87d990dad615c15a562c5898c6ec30c07"
        ],
        [
            "intros [_ Df].",
            "VernacExtend",
            "0696abc954dca5022a590a70b304d5664113241f"
        ],
        [
            "specialize (Df _ (fun P H => H)).",
            "VernacExtend",
            "a6a39ccd16473afc64ba989ba4ebaa305ff4829d"
        ],
        [
            "apply is_C_lim_unique.",
            "VernacExtend",
            "336ee656b5a45ba8bf4399c00f87975e35f879ab"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "destruct HP as [eps HP].",
            "VernacExtend",
            "0823c18ab44ea2d3d0f2e339ae240bb54a500871"
        ],
        [
            "destruct (Df (pos_div_2 eps)) as [eps' Df'].",
            "VernacExtend",
            "d06a58b38bbdf7c11508e5d5b7b9b87b8ead63de"
        ],
        [
            "unfold filtermap, locally', within.",
            "VernacExtend",
            "876532ea04fd881ddb8bdeb9fa70388e36c5609f"
        ],
        [
            "apply locally_C.",
            "VernacExtend",
            "fbe892e8aec5d68aa0f5b8161faa66d6c8fd0686"
        ],
        [
            "exists eps'.",
            "VernacExtend",
            "fec44100fbaa8dcb6d10edb895f48e667c08a1d3"
        ],
        [
            "intros y Hy Hyz.",
            "VernacExtend",
            "5bbcd87bbd227669895e7e858bf053fac62683a9"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "assert (y - z <> 0).",
            "VernacExtend",
            "8af42099219ed95a020cef11f5e43160ffdb8b24"
        ],
        [
            "contradict Hyz.",
            "VernacExtend",
            "85cab99be2e2cac318905a9556e94a85b3ebb62d"
        ],
        [
            "replace y with (y - z + z) by ring.",
            "VernacExtend",
            "36cb19fe6520d6a9376139317c7be1c1b7f89fe5"
        ],
        [
            "rewrite Hyz.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Cplus_0_l.",
            "VernacExtend",
            "a7cdd1ea910fc202bfb076bd95b47d62908ded81"
        ],
        [
            "apply: norm_compat1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace ((f y - f z) / (y - z) + - l) with ((f y + - f z + - ((y + - z) * l)) / (y + - z)).",
            "VernacExtend",
            "287204bf9d15779902632f2c1ff343477fd7b3f2"
        ],
        [
            "2: by field.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "rewrite /norm /= Cmod_div => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rlt_div_l.",
            "VernacExtend",
            "4198c2770a4c425c9ede77a90e885e8d7fd9f290"
        ],
        [
            "by apply Cmod_gt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply (Df' y Hy).",
            "VernacExtend",
            "0a5b3ba0a20972d0bddf2215060feafc748a3e58"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite /Rdiv Rmult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_lt_compat_l.",
            "VernacExtend",
            "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
        ],
        [
            "by apply eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rmult_comm Rlt_div_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /norm /minus /plus /opp /= /abs /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify.",
            "VernacExtend",
            "969fc87537fdaad612d2a1aa70d377f614654753"
        ],
        [
            "by apply Cmod_gt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma C_derive_correct (f : C -> C) (z l : C) : ex_derive f z -> is_derive f z (C_derive f z).",
            "VernacStartTheoremProof",
            "e70a77049b165fcd1f3e4214b1d0f18f2c51001d"
        ],
        [
            "case => df Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "replace (C_derive f z) with df => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply sym_eq, is_C_derive_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "RtoC_inj",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "now apply (f_equal (@fst R R)) in H.",
                        "VernacExtend",
                        "73c199aa6afbe1b35b2b2e590ba942dfd8349177"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ceq_dec",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "destruct z1 as [x1 y1].",
                        "VernacExtend",
                        "2ca718fe2c22a0a92399d05c4fbd8af4076fc84f"
                    ]
                },
                {
                    "command": [
                        "destruct z2 as [x2 y2].",
                        "VernacExtend",
                        "24e82c4ce17131a341e8012efae8fd69369b0342"
                    ]
                },
                {
                    "command": [
                        "case: (Req_EM_T x1 x2) => [ -> | Hx ].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Req_EM_T y1 y2) => [ -> | Hy ].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "right ; contradict Hy.",
                        "VernacExtend",
                        "03aa5fb701687613b1d04890860c0d4a570c7c29"
                    ]
                },
                {
                    "command": [
                        "now apply (f_equal (@snd R R)) in Hy ; simpl in Hy.",
                        "VernacExtend",
                        "d063b090e54dfe6dcf01822ce277596e35b4d69c"
                    ]
                },
                {
                    "command": [
                        "right ; contradict Hx.",
                        "VernacExtend",
                        "1c6c32f52c2dfe4f0b1e4fc07d1d8f37bc3a2d06"
                    ]
                },
                {
                    "command": [
                        "now apply (f_equal (@fst R R)) in Hx ; simpl in Hx.",
                        "VernacExtend",
                        "8edebcbcdd4e97e389b6da7f47f70b7346638090"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_0",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "unfold Cmod.",
                        "VernacExtend",
                        "a8e8979b93f542de6cc8e174b7ba16c2425762b9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l Rplus_0_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_0.",
                        "VernacExtend",
                        "b24bfa91911f1e613bc76b15e815a054659cb1df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_1",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "unfold Cmod.",
                        "VernacExtend",
                        "a8e8979b93f542de6cc8e174b7ba16c2425762b9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l Rplus_0_r 2!Rmult_1_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_1.",
                        "VernacExtend",
                        "47574c8f424a3f023281fd26898051576fbb13d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_opp",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "unfold Cmod.",
                        "VernacExtend",
                        "a8e8979b93f542de6cc8e174b7ba16c2425762b9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_triangle",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros x y ; rewrite /Cmod.",
                        "VernacExtend",
                        "be6598b26e238a504f0b0f138d15d82f106a2995"
                    ]
                },
                {
                    "command": [
                        "apply Rsqr_incr_0_var.",
                        "VernacExtend",
                        "9bacb397cdebb18118ce4d8dbd7b0a6d66c55a80"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_le_0.",
                        "VernacExtend",
                        "79ba7fff2b7dbdb704707b2f87011a5a974cd791"
                    ]
                },
                {
                    "command": [
                        "unfold Rsqr ; simpl ; ring_simplify.",
                        "VernacExtend",
                        "f7e0bdc52a89717ad1e78de9e04c8ab84dc7cf60"
                    ]
                },
                {
                    "command": [
                        "rewrite /pow ?Rmult_1_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite ?sqrt_sqrt ; ring_simplify.",
                        "VernacExtend",
                        "ba89680a187310b7532578063535d47023e63ea3"
                    ]
                },
                {
                    "command": [
                        "replace (-2 * fst x * fst y - 2 * snd x * snd y)%R with (- (2 * (fst x * fst y + snd x * snd y)))%R by ring.",
                        "VernacExtend",
                        "496cca73683be32c77f680a1b6a6e1e827f0d48c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc -sqrt_mult.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply -> Rminus_le_0.",
                        "VernacExtend",
                        "eb3010996ade724f542511d5c9a56441498f4fba"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, Rlt_0_2.",
                        "VernacExtend",
                        "402befb5a4950597f8c70db391dff8f1cd4e8542"
                    ]
                },
                {
                    "command": [
                        "apply Rsqr_incr_0_var.",
                        "VernacExtend",
                        "9bacb397cdebb18118ce4d8dbd7b0a6d66c55a80"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_le_0.",
                        "VernacExtend",
                        "79ba7fff2b7dbdb704707b2f87011a5a974cd791"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rsqr ?sqrt_sqrt ; ring_simplify.",
                        "VernacExtend",
                        "ba89680a187310b7532578063535d47023e63ea3"
                    ]
                },
                {
                    "command": [
                        "replace (fst x ^ 2 * snd y ^ 2 - 2 * fst x * snd x * fst y * snd y + snd x ^ 2 * fst y ^ 2)%R with ( (fst x * snd y - snd x * fst y)^2)%R by ring.",
                        "VernacExtend",
                        "652aa9802053f32828051a1dded1fac6f97dafe5"
                    ]
                },
                {
                    "command": [
                        "apply pow2_ge_0.",
                        "VernacExtend",
                        "45ef9619b62ef38e52a7a957f88320549b6343e6"
                    ]
                },
                {
                    "command": [
                        "repeat apply Rplus_le_le_0_compat ; apply Rmult_le_pos ; apply pow2_ge_0.",
                        "VernacExtend",
                        "bbdb03bc9bb6891324d850e8d11b1f8cc53547cc"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_pos.",
                        "VernacExtend",
                        "8013846f769de514ba1120cf1bfee7fe3207e68d"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat ; apply Rle_0_sqr.",
                        "VernacExtend",
                        "e7a87aa99d279878912722913f063447c7fead11"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat ; apply Rle_0_sqr.",
                        "VernacExtend",
                        "e7a87aa99d279878912722913f063447c7fead11"
                    ]
                },
                {
                    "command": [
                        "replace (fst x ^ 2 + 2 * fst x * fst y + fst y ^ 2 + snd x ^ 2 + 2 * snd x * snd y + snd y ^ 2)%R with ((fst x + fst y)^2 + (snd x + snd y)^2)%R by ring.",
                        "VernacExtend",
                        "b41a8dc6a7f9f727ecb9dd3563d9625625a622dd"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat ; apply pow2_ge_0.",
                        "VernacExtend",
                        "51c595aa1a3ff2b429d5a9f030e7cb0c1dc905a7"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat ; apply pow2_ge_0.",
                        "VernacExtend",
                        "51c595aa1a3ff2b429d5a9f030e7cb0c1dc905a7"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat ; apply pow2_ge_0.",
                        "VernacExtend",
                        "51c595aa1a3ff2b429d5a9f030e7cb0c1dc905a7"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat ; apply sqrt_pos.",
                        "VernacExtend",
                        "8b6c4366ab893f30bc264e184fb9f5aa40c29fd1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_mult",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold Cmod.",
                        "VernacExtend",
                        "a8e8979b93f542de6cc8e174b7ba16c2425762b9"
                    ]
                },
                {
                    "command": [
                        "rewrite -sqrt_mult.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal ; simpl ; ring.",
                        "VernacExtend",
                        "d83ed842879eb8fe71e5ad5d811b17aaeb682faf"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat ; apply pow2_ge_0.",
                        "VernacExtend",
                        "51c595aa1a3ff2b429d5a9f030e7cb0c1dc905a7"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat ; apply pow2_ge_0.",
                        "VernacExtend",
                        "51c595aa1a3ff2b429d5a9f030e7cb0c1dc905a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_Cmod",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "case => x y /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite -!sqrt_Rsqr_abs.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmax_case ; apply sqrt_le_1_alt, Rminus_le_0 ; rewrite /Rsqr /= ; ring_simplify ; by apply pow2_ge_0.",
                        "VernacExtend",
                        "f4c12d77e0cf4f46a5427174a42ea42be9de3b5a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_2Rmax",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "case => x y /= ; apply Rmax_case_strong => H0 ; rewrite -!sqrt_Rsqr_abs ; rewrite -?sqrt_mult ; try (by apply Rle_0_sqr) ; try (by apply Rlt_le, Rlt_0_2) ; apply sqrt_le_1_alt ; simpl ; [ rewrite Rplus_comm | ] ; rewrite /Rsqr ; apply Rle_minus_r ; ring_simplify ; apply Rsqr_le_abs_1 in H0 ; by rewrite /pow !Rmult_1_r.",
                        "VernacExtend",
                        "ffae0b33a1a7e118a407e55c0478e1237f4b8162"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RtoC_plus",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "unfold RtoC, Cplus ; simpl.",
                        "VernacExtend",
                        "593f5efb16ddb9a26afb820040ed200cae147515"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rplus_0_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RtoC_opp",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "unfold RtoC, Copp ; simpl.",
                        "VernacExtend",
                        "79a8e8c884ca6986781bc8e290838d0cc9de932d"
                    ]
                },
                {
                    "command": [
                        "by rewrite Ropp_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RtoC_minus",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "by rewrite /Cminus -RtoC_opp -RtoC_plus.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RtoC_mult",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "unfold RtoC, Cmult ; simpl.",
                        "VernacExtend",
                        "02154873b828c8dd8fcee0a4ad9146182221f6a9"
                    ]
                },
                {
                    "command": [
                        "apply injective_projections ; simpl ; ring.",
                        "VernacExtend",
                        "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RtoC_inv",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "intros Hx.",
                        "VernacExtend",
                        "9276b72df3a882c9b4b954c90d9e870c80a906fc"
                    ]
                },
                {
                    "command": [
                        "by apply injective_projections ; simpl ; field.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RtoC_div",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "intros Hy.",
                        "VernacExtend",
                        "dde1f3a11f7e3e65a050aa4d13dc38c854979033"
                    ]
                },
                {
                    "command": [
                        "by apply injective_projections ; simpl ; field.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cplus_comm",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; apply Rplus_comm.",
                        "VernacExtend",
                        "0049dada389e5be35b3e60c51ba6ff65c26e625c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cplus_assoc",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; apply sym_eq, Rplus_assoc.",
                        "VernacExtend",
                        "f224c0bee5e4a397d04fc0076268b502b8c2fc57"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cplus_0_r",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; apply Rplus_0_r.",
                        "VernacExtend",
                        "074c22c540a435603fddb5fa04a00db10bfd3ccb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cplus_0_l",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; apply Rplus_0_l.",
                        "VernacExtend",
                        "1ed95817be87036b0091defefde12e14cb893157"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cplus_opp_r",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; apply Rplus_opp_r.",
                        "VernacExtend",
                        "c78d016c150f5641b7abe35b90a23b61201ba861"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Copp_plus_distr",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; by apply Ropp_plus_distr.",
                        "VernacExtend",
                        "813300cf6601cb08096b7e8666e5e5820df07782"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Copp_minus_distr",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; by apply Ropp_minus_distr.",
                        "VernacExtend",
                        "813300cf6601cb08096b7e8666e5e5820df07782"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmult_comm",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; ring.",
                        "VernacExtend",
                        "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmult_assoc",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; ring.",
                        "VernacExtend",
                        "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmult_0_r",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; ring.",
                        "VernacExtend",
                        "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmult_0_l",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; ring.",
                        "VernacExtend",
                        "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmult_1_r",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; ring.",
                        "VernacExtend",
                        "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmult_1_l",
            "line_nb": 162,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; ring.",
                        "VernacExtend",
                        "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cinv_r",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply injective_projections ; simpl ; field.",
                        "VernacExtend",
                        "f3f14b0c56f9080f72f04cf73a4868e64a852085"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_sqr_eq_0 in H.",
                        "VernacExtend",
                        "e92d474720db0a6759dbd6e9d8be8e116b72f9e8"
                    ]
                },
                {
                    "command": [
                        "apply injective_projections ; simpl ; by apply H.",
                        "VernacExtend",
                        "5452ca880dad8f82d15f444f655318aa39e59cab"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_sqr_eq_0 in H.",
                        "VernacExtend",
                        "e92d474720db0a6759dbd6e9d8be8e116b72f9e8"
                    ]
                },
                {
                    "command": [
                        "apply injective_projections ; simpl ; by apply H.",
                        "VernacExtend",
                        "5452ca880dad8f82d15f444f655318aa39e59cab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cinv_l",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros Zr.",
                        "VernacExtend",
                        "230a707d9c1e9a3c8a5b12862b390f68961ae666"
                    ]
                },
                {
                    "command": [
                        "rewrite Cmult_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now apply Cinv_r.",
                        "VernacExtend",
                        "47a39bcc1a0699aba7fbfcb70161f0291afab0e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmult_plus_distr_l",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; ring.",
                        "VernacExtend",
                        "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmult_plus_distr_r",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "apply injective_projections ; simpl ; ring.",
                        "VernacExtend",
                        "518d8f3dce5f314be3b6cd6c1b1cadddbe0cdd11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Copp_0",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "apply: opp_zero.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_m1",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "rewrite Cmod_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Cmod_1.",
                        "VernacExtend",
                        "7eb208ba1c4b20c8d6e5c2b9001e6b866df3a4eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_ge_0",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_pos.",
                        "VernacExtend",
                        "8013846f769de514ba1120cf1bfee7fe3207e68d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_gt_0",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "intros x ; split => Hx.",
                        "VernacExtend",
                        "3cd2bff299b1a51962a1128ba9ad985baab5a62e"
                    ]
                },
                {
                    "command": [
                        "destruct (Cmod_ge_0 x) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply sym_eq, Cmod_eq_0 in H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "contradict Hx.",
                        "VernacExtend",
                        "51524c6f0a35f50dcb732884ab4e3630854bd951"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Req_le.",
                        "VernacExtend",
                        "746d3cae4c233a6a8268c0404925bd6d23d75a84"
                    ]
                },
                {
                    "command": [
                        "by rewrite Hx Cmod_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_norm",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "intros [u v].",
                        "VernacExtend",
                        "c9b3ee7d8ebd28ed5e29d8ca474d701782d2eab1"
                    ]
                },
                {
                    "command": [
                        "unfold Cmod.",
                        "VernacExtend",
                        "a8e8979b93f542de6cc8e174b7ba16c2425762b9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal2 (fun x y => sqrt (x + y))) ; rewrite /norm /= !Rmult_1_r ; apply Rsqr_abs.",
                        "VernacExtend",
                        "0a4608e3e6854dbf67ff8ac0342af0e90daa49cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_R",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold Cmod.",
                        "VernacExtend",
                        "a8e8979b93f542de6cc8e174b7ba16c2425762b9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l Rplus_0_r Rmult_1_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_Rsqr_abs.",
                        "VernacExtend",
                        "3d12dafb0673497c5ae72075dc0d2042aa2c07b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_inv",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "intros x Zx.",
                        "VernacExtend",
                        "08f1bfaa3e93c75720cd0db10b7702c6fc3946cd"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_eq_reg_l with (Cmod x).",
                        "VernacExtend",
                        "726672c134b8ba57464fb089a9f5cc0e9b91b5a8"
                    ]
                },
                {
                    "command": [
                        "rewrite -Cmod_mult.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Cinv_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Cmod_R.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_R1.",
                        "VernacExtend",
                        "87351a1163af6a1581ea1b838d6b5f028cb36292"
                    ]
                },
                {
                    "command": [
                        "exact Zx.",
                        "VernacExtend",
                        "e4bd4adbe9cc7a30eeec4957ceaa9f2e928daa62"
                    ]
                },
                {
                    "command": [
                        "contradict Zx.",
                        "VernacExtend",
                        "d12ccef1ba065a2ae54cd30425f082ad16750bfd"
                    ]
                },
                {
                    "command": [
                        "now apply Cmod_eq_0.",
                        "VernacExtend",
                        "c154d90ec5c99a6aaf627a480452c4c0e43b4d85"
                    ]
                },
                {
                    "command": [
                        "contradict Zx.",
                        "VernacExtend",
                        "d12ccef1ba065a2ae54cd30425f082ad16750bfd"
                    ]
                },
                {
                    "command": [
                        "now apply Cmod_eq_0.",
                        "VernacExtend",
                        "c154d90ec5c99a6aaf627a480452c4c0e43b4d85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmod_div",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "move => Hy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /Cdiv.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Cmod_mult.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite Cmod_inv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cmult_neq_0",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "intros Hz1 Hz2 => Hz.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "assert (Cmod (z1 * z2) = 0).",
                        "VernacExtend",
                        "9fc26a8fb814e611f97b523e73c950672a947e2d"
                    ]
                },
                {
                    "command": [
                        "by rewrite Hz Cmod_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Cmod_mult in H.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_integral in H ; destruct H.",
                        "VernacExtend",
                        "0a8ab1f9b1fc07291842ecec93536ebae86277d5"
                    ]
                },
                {
                    "command": [
                        "now apply Hz1, Cmod_eq_0.",
                        "VernacExtend",
                        "824388c4f5fff52fe9895736ecbd172c5f1d4780"
                    ]
                },
                {
                    "command": [
                        "now apply Hz2, Cmod_eq_0.",
                        "VernacExtend",
                        "b4550ada339dc835aea2941f23f05ddb0466e3a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cminus_eq_contra",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "intros ; contradict H ; apply injective_projections ; apply Rminus_diag_uniq.",
                        "VernacExtend",
                        "8e43ac883d9525b472db1a2b2020cf1a6908a96f"
                    ]
                },
                {
                    "command": [
                        "now apply (f_equal (@fst R R)) in H.",
                        "VernacExtend",
                        "73c199aa6afbe1b35b2b2e590ba942dfd8349177"
                    ]
                },
                {
                    "command": [
                        "now apply (f_equal (@snd R R)) in H.",
                        "VernacExtend",
                        "feac949cfa44a9c92aac76fd5ab499f213edf162"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C_field_theory",
            "line_nb": 268,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exact Cplus_0_l.",
                        "VernacExtend",
                        "a12d41a52d424fd11bdfa23253318077db083cb0"
                    ]
                },
                {
                    "command": [
                        "exact Cplus_comm.",
                        "VernacExtend",
                        "402fc2b529dca9e70bd20d1037b5b62f297ca132"
                    ]
                },
                {
                    "command": [
                        "exact Cplus_assoc.",
                        "VernacExtend",
                        "113a77197d4216fee6c3c5fa4e91a18bd9b4946a"
                    ]
                },
                {
                    "command": [
                        "exact Cmult_1_l.",
                        "VernacExtend",
                        "dc78b7476a7d20b5125d0d8a883f75c2b09718e6"
                    ]
                },
                {
                    "command": [
                        "exact Cmult_comm.",
                        "VernacExtend",
                        "7341c7f4b05d63561996f787901e14ed7dab1cb0"
                    ]
                },
                {
                    "command": [
                        "exact Cmult_assoc.",
                        "VernacExtend",
                        "f8b0386fee9f1adad9f14ca9cb335b4511d699f4"
                    ]
                },
                {
                    "command": [
                        "exact Cmult_plus_distr_r.",
                        "VernacExtend",
                        "cb0bd03eb4b34ccfa64b38f706a00eebe198a23b"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "exact Cplus_opp_r.",
                        "VernacExtend",
                        "ee9e1001b198442c46e48205ea98619659a3ed9f"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "injection H.",
                        "VernacExtend",
                        "0b4168b75c87f7c322bfb81e661f04001b54052d"
                    ]
                },
                {
                    "command": [
                        "exact R1_neq_R0.",
                        "VernacExtend",
                        "93e887d3f68db5b326ec66a221eb4996f49b8622"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "apply Cinv_l.",
                        "VernacExtend",
                        "19d6945e9f8dd8e7ebc623a06a5401ab16680a90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C_NormedModule_mixin_compat1",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "intros x y eps.",
                        "VernacExtend",
                        "7a07be76b0f1b74d30f1e72e920fb32e18102667"
                    ]
                },
                {
                    "command": [
                        "rewrite Cmod_norm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: prod_norm_compat1.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C_NormedModule_mixin_compat2",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "intros x y eps H.",
                        "VernacExtend",
                        "9f198b6699b9768d02ce33d6925dde521818bada"
                    ]
                },
                {
                    "command": [
                        "rewrite Cmod_norm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (sqrt 2) with (sqrt 2 * Rmax 1 1)%R.",
                        "VernacExtend",
                        "cd052e3892dbbce228122883f22fe4d8e720d457"
                    ]
                },
                {
                    "command": [
                        "apply: prod_norm_compat2 H.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite -> Rmax_left by apply Rle_refl.",
                        "VernacExtend",
                        "00b9d21079d426c7340c36ac472e35edb9641e84"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_1_r.",
                        "VernacExtend",
                        "7e290e72327ec53766aaa3b6504d3f54d3250d15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scal_R_Cmult",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "apply injective_projections ; rewrite /scal /= /scal /= /mult /= ; ring.",
                        "VernacExtend",
                        "12f3009386c29f99dccb1cd0d82a26b30a251bf9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C_complete_ax1",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply filter_and ; simpl ; revert eps.",
                        "VernacExtend",
                        "5a0c86a7ae6760695a6539986f1fda3539de6325"
                    ]
                },
                {
                    "command": [
                        "apply (R_complete (fun P => F (fun z => P (Re z)))).",
                        "VernacExtend",
                        "5e106823466c882ffcc7d6c5c742dd834bb6dade"
                    ]
                },
                {
                    "command": [
                        "split ; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "destruct (filter_ex _ H1).",
                        "VernacExtend",
                        "6cabf0d9d174b4fde089b2985d20d94b5231fc7e"
                    ]
                },
                {
                    "command": [
                        "by exists (Re x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by apply filter_true.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros ; by apply filter_and.",
                        "VernacExtend",
                        "410692175b0276aea3ff719ec7d2840404bfc714"
                    ]
                },
                {
                    "command": [
                        "intros ; eapply filter_imp, H2.",
                        "VernacExtend",
                        "2190364d04671ed14cdb7c53a7cf779270341d42"
                    ]
                },
                {
                    "command": [
                        "intros ; by apply H1.",
                        "VernacExtend",
                        "410692175b0276aea3ff719ec7d2840404bfc714"
                    ]
                },
                {
                    "command": [
                        "intros ; destruct (H0 eps).",
                        "VernacExtend",
                        "2c9e7cf1c946de977725be1808bf6588681b42ef"
                    ]
                },
                {
                    "command": [
                        "exists (Re x).",
                        "VernacExtend",
                        "dae1d2a1fa325b629b85fd736274f9ae0481da5b"
                    ]
                },
                {
                    "command": [
                        "move: H1 ; apply filter_imp.",
                        "VernacExtend",
                        "0748f60fd4bfbf18081aafc2b987584f77eabe68"
                    ]
                },
                {
                    "command": [
                        "intros ; by apply H1.",
                        "VernacExtend",
                        "410692175b0276aea3ff719ec7d2840404bfc714"
                    ]
                },
                {
                    "command": [
                        "apply (R_complete (fun P => F (fun z => P (Im z)))).",
                        "VernacExtend",
                        "aa0a423ae3b26daee1c60fd855bc643f3d486f61"
                    ]
                },
                {
                    "command": [
                        "split ; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "destruct (filter_ex _ H1).",
                        "VernacExtend",
                        "6cabf0d9d174b4fde089b2985d20d94b5231fc7e"
                    ]
                },
                {
                    "command": [
                        "by exists (Im x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by apply filter_true.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros ; by apply filter_and.",
                        "VernacExtend",
                        "410692175b0276aea3ff719ec7d2840404bfc714"
                    ]
                },
                {
                    "command": [
                        "intros ; eapply filter_imp, H2.",
                        "VernacExtend",
                        "2190364d04671ed14cdb7c53a7cf779270341d42"
                    ]
                },
                {
                    "command": [
                        "intros ; by apply H1.",
                        "VernacExtend",
                        "410692175b0276aea3ff719ec7d2840404bfc714"
                    ]
                },
                {
                    "command": [
                        "intros ; destruct (H0 eps).",
                        "VernacExtend",
                        "2c9e7cf1c946de977725be1808bf6588681b42ef"
                    ]
                },
                {
                    "command": [
                        "exists (Im x).",
                        "VernacExtend",
                        "395814da656e232c225172e7026975809e211ead"
                    ]
                },
                {
                    "command": [
                        "move: H1 ; apply filter_imp.",
                        "VernacExtend",
                        "0748f60fd4bfbf18081aafc2b987584f77eabe68"
                    ]
                },
                {
                    "command": [
                        "intros ; by apply H1.",
                        "VernacExtend",
                        "410692175b0276aea3ff719ec7d2840404bfc714"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C_complete_ax2",
            "line_nb": 343,
            "steps": [
                {
                    "command": [
                        "intros F1 F2 H12 H21 eps.",
                        "VernacExtend",
                        "fa97d516774eff8d9b53c8870bc286e456b9067a"
                    ]
                },
                {
                    "command": [
                        "split ; apply R_complete_close ; intros P.",
                        "VernacExtend",
                        "c6b754ffdf6eea8e2bd9a03a6226ba7a867bd283"
                    ]
                },
                {
                    "command": [
                        "apply H12.",
                        "VernacExtend",
                        "5a745b26a30edb1cd58baf290f56d389ba5cf959"
                    ]
                },
                {
                    "command": [
                        "apply H21.",
                        "VernacExtend",
                        "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
                    ]
                },
                {
                    "command": [
                        "apply H12.",
                        "VernacExtend",
                        "5a745b26a30edb1cd58baf290f56d389ba5cf959"
                    ]
                },
                {
                    "command": [
                        "apply H21.",
                        "VernacExtend",
                        "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_C_lim_unique",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "case: l => lx ly H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply injective_projections ; simpl.",
                        "VernacExtend",
                        "a29cc8f4966e828577843e7892e5291a3c2a57a7"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal real (y := Finite lx)).",
                        "VernacExtend",
                        "4a18d8d2e54ab0944e27c616e5a3bf326f86e43d"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_unique => /= P [eps Hp].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "destruct (H (fun z => P (fst z))) as [delta Hd] ; clear H.",
                        "VernacExtend",
                        "21d069bddd20737258d131e11ef20045a496f284"
                    ]
                },
                {
                    "command": [
                        "exists eps => y Hy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Hp, Hy.",
                        "VernacExtend",
                        "4f78573f8958357b2f67c23a9c6979a11f3287cd"
                    ]
                },
                {
                    "command": [
                        "exists delta.",
                        "VernacExtend",
                        "9b3e0c1864d154c56892795f1b2d7db5a609fd33"
                    ]
                },
                {
                    "command": [
                        "intros y By Hy.",
                        "VernacExtend",
                        "3ec5d3030fb2558b653a4c98c3e57b540fa43d89"
                    ]
                },
                {
                    "command": [
                        "apply Hd.",
                        "VernacExtend",
                        "b2c76316200582fcad9318af1ed397a8dea483e3"
                    ]
                },
                {
                    "command": [
                        "split ; simpl.",
                        "VernacExtend",
                        "007660188543279503c14efdb86878699f33588a"
                    ]
                },
                {
                    "command": [
                        "apply By.",
                        "VernacExtend",
                        "254d2299c3d488346604e1178a957dca68dad52d"
                    ]
                },
                {
                    "command": [
                        "apply ball_center.",
                        "VernacExtend",
                        "cd7d813ae3e0973ad761815cfc4c15b7e8339e52"
                    ]
                },
                {
                    "command": [
                        "contradict Hy.",
                        "VernacExtend",
                        "5378912ae1f409840716e13b5c13ff1658002182"
                    ]
                },
                {
                    "command": [
                        "clear -Hy.",
                        "VernacExtend",
                        "ec6838dec774ad41e41defc852e56297f2e63a8a"
                    ]
                },
                {
                    "command": [
                        "destruct z as [z1 z2].",
                        "VernacExtend",
                        "da8224cf08fddeb96cb3695e2ae2d80b7e3bbaa0"
                    ]
                },
                {
                    "command": [
                        "now injection Hy.",
                        "VernacExtend",
                        "ee16d5247332e8b3e7c238fa20750dbfb545e672"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal real (y := Finite ly)).",
                        "VernacExtend",
                        "aa7650e0aaee1db99ebd80357ca3bf75d3889bb3"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_unique => /= P [eps Hp].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "destruct (H (fun z => P (snd z))) as [delta Hd] ; clear H.",
                        "VernacExtend",
                        "7d2b83a66b3bf952f89bd12516bf6dff33adbbf7"
                    ]
                },
                {
                    "command": [
                        "exists eps => y Hy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Hp.",
                        "VernacExtend",
                        "29de4ac4e06a5589937cb0ff3f9b64ec34b3dd7c"
                    ]
                },
                {
                    "command": [
                        "apply Hy.",
                        "VernacExtend",
                        "80f07477a1dd0a8c39407b7d0aa65b768d8a6d0b"
                    ]
                },
                {
                    "command": [
                        "exists delta.",
                        "VernacExtend",
                        "9b3e0c1864d154c56892795f1b2d7db5a609fd33"
                    ]
                },
                {
                    "command": [
                        "intros y By Hy.",
                        "VernacExtend",
                        "3ec5d3030fb2558b653a4c98c3e57b540fa43d89"
                    ]
                },
                {
                    "command": [
                        "apply Hd.",
                        "VernacExtend",
                        "b2c76316200582fcad9318af1ed397a8dea483e3"
                    ]
                },
                {
                    "command": [
                        "split ; simpl.",
                        "VernacExtend",
                        "007660188543279503c14efdb86878699f33588a"
                    ]
                },
                {
                    "command": [
                        "apply By.",
                        "VernacExtend",
                        "254d2299c3d488346604e1178a957dca68dad52d"
                    ]
                },
                {
                    "command": [
                        "apply ball_center.",
                        "VernacExtend",
                        "cd7d813ae3e0973ad761815cfc4c15b7e8339e52"
                    ]
                },
                {
                    "command": [
                        "contradict Hy.",
                        "VernacExtend",
                        "5378912ae1f409840716e13b5c13ff1658002182"
                    ]
                },
                {
                    "command": [
                        "clear -Hy.",
                        "VernacExtend",
                        "ec6838dec774ad41e41defc852e56297f2e63a8a"
                    ]
                },
                {
                    "command": [
                        "destruct z as [z1 z2].",
                        "VernacExtend",
                        "da8224cf08fddeb96cb3695e2ae2d80b7e3bbaa0"
                    ]
                },
                {
                    "command": [
                        "now injection Hy.",
                        "VernacExtend",
                        "ee16d5247332e8b3e7c238fa20750dbfb545e672"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "C_derive_correct",
            "line_nb": 454,
            "steps": [
                {
                    "command": [
                        "case => df Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "replace (C_derive f z) with df => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply sym_eq, is_C_derive_unique.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}