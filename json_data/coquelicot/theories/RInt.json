{
    "filename": "theories/RInt.v",
    "coq_project": "coquelicot",
    "vernac_cmds": [
        [
            "Require Import Reals Psatz.",
            "VernacRequire",
            "aa71e9955fdefb9d3b0e58d51406978b644e60c0"
        ],
        [
            "Require Import mathcomp.ssreflect.ssreflect mathcomp.ssreflect.ssrbool mathcomp.ssreflect.eqtype mathcomp.ssreflect.seq.",
            "VernacRequire",
            "1bf5927131998a7f6d00735e14713ee99186784a"
        ],
        [
            "Require Import Markov Rcomplements Rbar Lub Lim_seq SF_seq.",
            "VernacRequire",
            "8abf7aede2e8685bfb1eadaeadb1341ecec5a28e"
        ],
        [
            "Require Import Continuity Hierarchy.",
            "VernacRequire",
            "a7ff3154d7d19b3fffe06911c58411198b1c5a4c"
        ],
        [
            "Section is_RInt.",
            "VernacBeginSection",
            "b8a8b2d42defef80affabdc6f4d785bd77286516"
        ],
        [
            "Context {V : NormedModule R_AbsRing}.",
            "VernacContext",
            "5d56ede25ce8804229ff69d29b81c4721f84018a"
        ],
        [
            "Definition is_RInt (f : R -> V) (a b : R) (If : V) := filterlim (fun ptd => scal (sign (b-a)) (Riemann_sum f ptd)) (Riemann_fine a b) (locally If).",
            "VernacDefinition",
            "a36bc19cf947b1e3a5264d07daeb4059fea3549a"
        ],
        [
            "Definition ex_RInt (f : R -> V) (a b : R) := exists If : V, is_RInt f a b If.",
            "VernacDefinition",
            "d1fd1f2defa5f221cf9e58f796a7ec0189dd3ef9"
        ],
        [
            "Lemma is_RInt_point : forall (f : R -> V) (a : R), is_RInt f a a zero.",
            "VernacStartTheoremProof",
            "076d086a3814c31780bc0a55f6888d55ea553c59"
        ],
        [
            "intros f a.",
            "VernacExtend",
            "68506e505aef9fd8d1b888104e16326facad7c42"
        ],
        [
            "apply filterlim_locally.",
            "VernacExtend",
            "3ff3a9612e2ccfd2231ba92f1d95cd7277851a18"
        ],
        [
            "move => eps ; exists (mkposreal _ Rlt_0_1) => ptd _ [Hptd [Hh Hl]].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite Riemann_sum_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite scal_zero_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply ball_center.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply ptd_sort.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: Hl Hh ; rewrite /Rmin /Rmax ; by case: Rle_dec (Rle_refl a) => _ _ ->.",
            "VernacExtend",
            "9316342455eb51a3e1204d3e55750c03c1806191"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_point : forall (f : R -> V) a, ex_RInt f a a.",
            "VernacStartTheoremProof",
            "fcc5343e18072fa56284b8c70b7f4aadf1bcb54d"
        ],
        [
            "intros f a.",
            "VernacExtend",
            "68506e505aef9fd8d1b888104e16326facad7c42"
        ],
        [
            "exists zero ; by apply is_RInt_point.",
            "VernacExtend",
            "b918120fdf1c25da749282a357189796df9886c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_swap : forall (f : R -> V) (a b : R) (If : V), is_RInt f b a If -> is_RInt f a b (opp If).",
            "VernacStartTheoremProof",
            "e993d1aaf06f24c96ccbf164e4328020c7962e1d"
        ],
        [
            "unfold is_RInt.",
            "VernacExtend",
            "06f6343fbd6b4d42242efeda5e98fcd1112c830c"
        ],
        [
            "intros f a b If HIf.",
            "VernacExtend",
            "fa9cd160b25795da17260205bc64f03d4a12042a"
        ],
        [
            "rewrite -scal_opp_one /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply filterlim_ext with (fun ptd => scal (opp (one : R)) (scal (sign (a - b)) (Riemann_sum f ptd))).",
            "VernacExtend",
            "d29b0a2a9b61864511a1427a902c2756bd4d5902"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "rewrite scal_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (f_equal (fun s => scal s _)).",
            "VernacExtend",
            "4d056efe23084f70c1fa069ee62efd22ea38fc1b"
        ],
        [
            "rewrite /mult /opp /one /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(Ropp_minus_distr' b a) sign_opp /= Ropp_mult_distr_l_reverse Rmult_1_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "unfold Riemann_fine.",
            "VernacExtend",
            "92cf17224b82c06754f9262aff9a8ec090d45cd9"
        ],
        [
            "rewrite Rmin_comm Rmax_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply filterlim_comp with (1 := HIf).",
            "VernacExtend",
            "cda2c19761fcbdc20ec8266b86fae1fc77a96cdc"
        ],
        [
            "apply: filterlim_scal_r.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_swap : forall (f : R -> V) (a b : R), ex_RInt f a b -> ex_RInt f b a.",
            "VernacStartTheoremProof",
            "9a293722781dbeff7765b944f03953b6ca42efee"
        ],
        [
            "intros f a b.",
            "VernacExtend",
            "6f3f174cbf11191c970affca4f2ed17081558a64"
        ],
        [
            "case => If HIf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (opp If).",
            "VernacExtend",
            "b6e34294998db212a83307baeb1cbea8290c0208"
        ],
        [
            "now apply is_RInt_swap.",
            "VernacExtend",
            "90ccd1b34525fb14c76361fed24822211a464252"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_ub (f : R -> V) (a b : R) : ex_RInt f a b -> exists M : R, forall t : R, Rmin a b <= t <= Rmax a b -> norm (f t) <= M.",
            "VernacStartTheoremProof",
            "0788316b8f16444b8305a85083a99c61ca600ee9"
        ],
        [
            "wlog: a b / (a < b) => [ Hw | Hab ] Hex.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_lt_dec a b) => Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Hab => Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (Req_le _ _ Hab) => // _ _ ; rewrite -Hab.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "exists (norm (f a)) => t Ht ; replace t with a.",
            "VernacExtend",
            "0c3ffa6085906f07f955232eb991bab0f8dafe20"
        ],
        [
            "exact: Rle_refl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Rle_antisym ; by case: Ht.",
            "VernacExtend",
            "0ff8d61586e7089e2b58371bfdb97c2085d6935a"
        ],
        [
            "rewrite Rmin_comm Rmax_comm ; apply ex_RInt_swap in Hex ; by apply Hw.",
            "VernacExtend",
            "1af9765e817599dc59315f8e940fc9a9ac4361b0"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case: Hex => If Hex.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "generalize (proj1 (filterlim_locally_ball_norm _ If) Hex) => {Hex} /= Hex.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Hex (mkposreal _ Rlt_0_1)) => {Hex} alpha Hex.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have Hn : 0 <= ((b-a)/alpha).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rdiv_le_0_compat.",
            "VernacExtend",
            "693e22205d4e08285736e8c5e96457827d9a8003"
        ],
        [
            "apply -> Rminus_le_0 ; apply Rlt_le, Hab.",
            "VernacExtend",
            "031048b0ab6b4e35353cd979b19f1a67904303ed"
        ],
        [
            "by apply alpha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set n := (nfloor _ Hn).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set ptd := fun (g : R -> R -> R) => SF_seq_f2 g (unif_part a b n).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "assert (forall g, pointed_subdiv (ptd g) -> norm (minus (Riemann_sum f (ptd g)) If) < 1).",
            "VernacExtend",
            "65f84ab9aabb929f1e6f7fdb646729cd1d36e74c"
        ],
        [
            "move => g Hg ; replace (Riemann_sum f (ptd g)) with (scal (sign (b - a)) (Riemann_sum f (ptd g))).",
            "VernacExtend",
            "c60b0aa02b8280d344b8781bdcaa3ba3d2cb3f57"
        ],
        [
            "apply Hex.",
            "VernacExtend",
            "0626b143f310ba29c3689980df03ba1efdab98c5"
        ],
        [
            "apply Rle_lt_trans with ((b-a)/(INR n + 1)).",
            "VernacExtend",
            "96f96e0a39ae13d1e357ec4279beecc1bc91896b"
        ],
        [
            "clearbody n ; rewrite SF_lx_f2.",
            "VernacExtend",
            "4f32a0030969d7d25e65983d966d7db7796ecd74"
        ],
        [
            "replace (head 0 (unif_part a b n) :: behead (unif_part a b n)) with (unif_part a b n) by auto.",
            "VernacExtend",
            "6c0f97f014bbce256ed342d9930cdbed7c05fa3e"
        ],
        [
            "suff : forall i, (S i < size (unif_part a b n))%nat -> nth 0 (unif_part a b n) (S i) - nth 0 (unif_part a b n) i = (b-a)/(INR n + 1).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "elim: (unif_part a b n) => [ /= _ | x0].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "apply Rdiv_le_0_compat ; [ by apply Rlt_le, Rgt_minus | by intuition ].",
            "VernacExtend",
            "280876560bb89cf62fefa406fd1aaab1d0b6eb48"
        ],
        [
            "case => /= [ | x1 s] IH Hnth.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rdiv_le_0_compat ; [ by apply Rlt_le, Rgt_minus | by intuition ].",
            "VernacExtend",
            "280876560bb89cf62fefa406fd1aaab1d0b6eb48"
        ],
        [
            "replace (seq_step _) with (Rmax (Rabs (x1 - x0)) (seq_step (x1 :: s))) by auto.",
            "VernacExtend",
            "e9b2bacf89d786966e5dbe39a820f8191c969596"
        ],
        [
            "apply Rmax_case_strong => _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (Hnth O (lt_n_S _ _ (lt_O_Sn _))) Rabs_right.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: Rle_refl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Rle_ge, Rdiv_le_0_compat ; [ by apply Rlt_le, Rgt_minus | by intuition ].",
            "VernacExtend",
            "9bd1c6c3f5f6ac0c7ce69513483c47985bd53d85"
        ],
        [
            "apply IH => i Hi ; exact: (Hnth (S i) (lt_n_S _ _ Hi)).",
            "VernacExtend",
            "159e705bf0bc5dc6b8a21c17ad53c38e9e8c73db"
        ],
        [
            "rewrite size_mkseq => i Hi.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite ?nth_mkseq ?S_INR ; try apply SSR_leq.",
            "VernacExtend",
            "d67318ab120849263a37e6edcf8475de51140c0b"
        ],
        [
            "field ; apply Rgt_not_eq ; by intuition.",
            "VernacExtend",
            "0689f403f7cc20b719a49900de238d96d3f40e81"
        ],
        [
            "exact: lt_le_weak.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: Hi.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_div_l.",
            "VernacExtend",
            "4198c2770a4c425c9ede77a90e885e8d7fd9f290"
        ],
        [
            "by apply INRp1_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rmult_comm ; apply Rlt_div_l.",
            "VernacExtend",
            "ad4548a5215923665bf1a4e0a493dbd7f6be2e81"
        ],
        [
            "by apply alpha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /n /nfloor ; case: nfloor_ex => /= n' Hn'.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply Hn'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Hg.",
            "VernacExtend",
            "01c1d3461bd6fa059f36624dcd703fe73a0894a8"
        ],
        [
            "rewrite -> Rmin_left, Rmax_right by now apply Rlt_le.",
            "VernacExtend",
            "e6d2e3dfee03a6c47baf63185194b33cc36170da"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply head_unif_part.",
            "VernacExtend",
            "b0bceba99846c59838f47a6d860d83d99fdf8e31"
        ],
        [
            "clearbody n ; rewrite /Rmax -nth_last SF_lx_f2.",
            "VernacExtend",
            "4f32a0030969d7d25e65983d966d7db7796ecd74"
        ],
        [
            "rewrite size_mkseq nth_mkseq ?S_INR //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field ; apply Rgt_not_eq ; by intuition.",
            "VernacExtend",
            "0689f403f7cc20b719a49900de238d96d3f40e81"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
            "VernacExtend",
            "fca02487127bf9775753594d7fee9b399ab3dff1"
        ],
        [
            "exact: scal_one.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "move: H => {Hex} Hex.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "assert (exists M, forall g : R -> R -> R, pointed_subdiv (ptd g) -> norm (Riemann_sum f (ptd g)) <= M).",
            "VernacExtend",
            "d120224f7414f1031699b5aafb2a9bde3c5ae941"
        ],
        [
            "exists (norm If + 1) ; move => g Hg.",
            "VernacExtend",
            "dfa9c3af9047c36081a030a2ac2071d2fa44b1c3"
        ],
        [
            "replace (Riemann_sum f (ptd g)) with (plus (minus (Riemann_sum f (ptd g)) If) If).",
            "VernacExtend",
            "d3a7fd77cbd2e88286a564d72d91146558b23040"
        ],
        [
            "apply Rle_trans with (norm (minus (Riemann_sum f (ptd g)) If) + norm If).",
            "VernacExtend",
            "c4e63764e529a640469022db202938f0431a5e9b"
        ],
        [
            "by generalize (norm_triangle (minus (Riemann_sum f (ptd g)) If) If).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "by apply Hex.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /minus -plus_assoc plus_opp_l plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clearbody n ; move: H => {Hex} Hex.",
            "VernacExtend",
            "2e9f921bde01f4318b8b7fa5034a8c9d37b1b405"
        ],
        [
            "assert (forall i, (S i < size (unif_part a b n))%nat -> exists M, forall t, nth 0 (unif_part a b n) i <= t <= nth 0 (unif_part a b n) (S i) -> norm (f t) <= M).",
            "VernacExtend",
            "42d4b6e23d8d2a72623551c81d731eed32a75148"
        ],
        [
            "move => i ; revert ptd Hex.",
            "VernacExtend",
            "a9dca9c219c14e1259b21ba28885c5643044f60a"
        ],
        [
            "have : sorted Rlt (unif_part a b n).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply sorted_nth => j Hj x0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite size_mkseq /= in Hj.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?nth_mkseq ?S_INR /= ; try apply SSR_leq.",
            "VernacExtend",
            "d67318ab120849263a37e6edcf8475de51140c0b"
        ],
        [
            "apply Rminus_gt ; field_simplify.",
            "VernacExtend",
            "264cd910ab580932daa780b110a0150f593028ab"
        ],
        [
            "rewrite Rplus_comm Rdiv_1 ; apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "57ecaad9d990347a1606a4b33388d3a024b2e064"
        ],
        [
            "exact: Rgt_minus.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rgt_not_eq ; by intuition.",
            "VernacExtend",
            "92af0628b21dcd185979b38106b401f044a9fed5"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: (unif_part a b n) i => [ /= i _ _ Hi | x0].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => [ /= _ i _ _ Hi | x1 s IH].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply lt_S_n, lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => [ | i] Hlt /= Hex Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "assert (exists M, forall t g, x0 <= t <= x1 -> pointed_subdiv (SF_seq_f2 g [:: x1 & s]) -> norm (plus (scal (x1 - x0) (f t)) (Riemann_sum f (SF_seq_f2 g [:: x1 & s]))) <= M).",
            "VernacExtend",
            "e217ba9bbcee0636f4850924b738785dfb730859"
        ],
        [
            "case: (Hex) => M Hex'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists M ; move => t g Ht Hg.",
            "VernacExtend",
            "95fac8ae0c2a1b7d4823de7d9c8c9fedea1a6c1d"
        ],
        [
            "set g0 := fun x y => match Req_EM_T x x0 with | left _ => t | right _ => g x y end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "replace (plus (scal (x1 - x0) (f t)) (Riemann_sum f (SF_seq_f2 g (x1 :: s)))) with (Riemann_sum f (SF_seq_f2 g0 [:: x0, x1 & s])).",
            "VernacExtend",
            "45e66cae580918f4e18bb07ea2df694a9b2db399"
        ],
        [
            "apply Hex'.",
            "VernacExtend",
            "dedbe3f79d810fbd39001b47fd826248301d8c74"
        ],
        [
            "case => [ | j] Hj ; rewrite SF_size_f2 /= in Hj ; rewrite SF_ly_f2 SF_lx_f2 /=.",
            "VernacExtend",
            "0f0588dc734a9ceb55e4ce3c6acf8890e667bba0"
        ],
        [
            "2: apply lt_O_Sn.",
            "VernacExtend",
            "b53c0b5c0931dee63228e11f90097e425fb37e03"
        ],
        [
            "rewrite /g0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: Req_EM_T (refl_equal x0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (nth_pairmap 0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /g0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff : (nth 0 (x1 :: s) j) <> x0.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case: Req_EM_T => // _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Hg j).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite SF_size_f2 ; rewrite SF_ly_f2 SF_lx_f2 /=.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "2: apply lt_O_Sn.",
            "VernacExtend",
            "b53c0b5c0931dee63228e11f90097e425fb37e03"
        ],
        [
            "rewrite (nth_pairmap 0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => Hg' ; by apply Hg', lt_S_n.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply lt_S_n in Hj.",
            "VernacExtend",
            "08b3132e63cffc680d464055ba3fb6538b8d5344"
        ],
        [
            "elim: j Hj => {IH} [ | j IH] Hj.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply Hlt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_trans with (nth 0 (x1 :: s) j).",
            "VernacExtend",
            "6e8934b9348e4157b38d2003b0a9eb97928609cc"
        ],
        [
            "apply IH ; by intuition.",
            "VernacExtend",
            "76663867dca8fc42d41fea3a4eced3a424e6ebfb"
        ],
        [
            "apply (sorted_nth Rlt).",
            "VernacExtend",
            "fc017c20e6d50ae49decdcd18b9bee115a9df004"
        ],
        [
            "by apply Hlt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "by apply lt_0_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite SF_cons_f2 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite /g0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: Req_EM_T (refl_equal x0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: s Hlt {IH Hex Hex' Hi Hg} => [ | x2 s] Hlt.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite !(SF_cons_f2 _ x1) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite /g0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: Req_EM_T (Rgt_not_eq _ _ (proj1 Hlt)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: s x2 Hlt => [ | x3 s IH] x2 Hlt.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite !(SF_cons_f2 _ x2) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite /g0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: Req_EM_T (Rgt_not_eq _ _ (Rlt_trans _ _ _ (proj1 Hlt) (proj1 (proj2 Hlt)))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply Hlt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_trans with x2 ; by apply Hlt.",
            "VernacExtend",
            "5fb7c7ef3598f15e618eb58894b3a57cef698adc"
        ],
        [
            "by apply Hlt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: H => {Hex} Hex.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hex) => M Hex'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists ((M + norm (Riemann_sum f (SF_seq_f2 (fun x y => x) (x1 :: s)))) / abs (x1 - x0)).",
            "VernacExtend",
            "c4173d7594b919b2b5d51a72dd03d3625b00ec81"
        ],
        [
            "move => t Ht.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have Hg : pointed_subdiv (SF_seq_f2 (fun x y : R => x) (x1 :: s)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => j ; rewrite SF_size_f2 SF_lx_f2.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite SF_ly_f2 /= => Hj.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (nth_pairmap 0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply Rlt_le, (sorted_nth Rlt (x1::s)).",
            "VernacExtend",
            "354b3c713bf5f9762fbf263532944815ad354ba4"
        ],
        [
            "by apply Hlt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "specialize (Hex' _ _ Ht Hg).",
            "VernacExtend",
            "68e76e492f1e86d4a37efff7822cd8c5529eff2c"
        ],
        [
            "rewrite -(scal_one (f t)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /one /= -(Rinv_l (x1 - x0)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "2: by apply Rgt_not_eq, Rgt_minus, Hlt.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "rewrite -scal_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_trans ; try apply @norm_scal.",
            "VernacExtend",
            "aa0c5dc20133907c2e8d630f8a287b47133b6f4c"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /abs /= Rabs_Rinv.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "2: by apply Rgt_not_eq, Rgt_minus, Hlt.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply Rlt_le, Rinv_0_lt_compat.",
            "VernacExtend",
            "31665867d30f616d78b584524410961663f45bd3"
        ],
        [
            "apply Rabs_pos_lt, Rgt_not_eq.",
            "VernacExtend",
            "29909f452789093e617bcbc9e3605a9270f8b376"
        ],
        [
            "by apply Rgt_minus, Hlt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set v:= scal _ _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "replace v with (minus (plus (scal (x1 - x0) (f t)) (Riemann_sum f (SF_seq_f2 (fun x _ : R => x) (x1 :: s)))) (Riemann_sum f (SF_seq_f2 (fun x _ : R => x) (x1 :: s)))).",
            "VernacExtend",
            "d39cac39ac9569653b93dba55dae8d6301de0e27"
        ],
        [
            "rewrite /minus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (norm (plus (scal (x1 - x0) (f t)) (Riemann_sum f (SF_seq_f2 (fun x _ : R => x) (x1 :: s)))) + norm (opp (Riemann_sum f (SF_seq_f2 (fun x _ : R => x) (x1 :: s))))).",
            "VernacExtend",
            "4de837799583949e5464233e7f6f1614aa9e51cb"
        ],
        [
            "by generalize (norm_triangle (plus (scal (x1 - x0) (f t)) (Riemann_sum f (SF_seq_f2 (fun x _ : R => x) (x1 :: s)))) (opp (Riemann_sum f (SF_seq_f2 (fun x _ : R => x) (x1 :: s))))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite norm_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "apply Hex'.",
            "VernacExtend",
            "dedbe3f79d810fbd39001b47fd826248301d8c74"
        ],
        [
            "rewrite /minus -plus_assoc plus_opp_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "by apply Hlt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Hex => M Hex.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists ((M + norm (scal (x1 - x0) (f x0)))) => g Hg.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "set g0 := fun x y => match Req_EM_T x x0 with | left _ => x0 | right _ => g x y end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have Hg0 : pointed_subdiv (SF_seq_f2 g0 (x0::x1 :: s)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => j ; rewrite SF_size_f2 SF_lx_f2.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "2: apply lt_O_Sn.",
            "VernacExtend",
            "b53c0b5c0931dee63228e11f90097e425fb37e03"
        ],
        [
            "rewrite SF_ly_f2 => Hj.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite nth_behead (nth_pairmap 0) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: j Hj => /= [ | j ] Hj.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /g0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Req_EM_T (refl_equal x0) => // _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact: Rle_refl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply Rlt_le, Hlt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff : (nth 0 (x1 :: s) j) <> x0.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "rewrite /g0 ; case: Req_EM_T => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "move: (Hg j).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite SF_size_f2 SF_lx_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "2: apply lt_O_Sn.",
            "VernacExtend",
            "b53c0b5c0931dee63228e11f90097e425fb37e03"
        ],
        [
            "rewrite SF_ly_f2 /= => {Hg} Hg.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: (Hg (lt_S_n _ _ Hj)) ; rewrite (nth_pairmap 0).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "elim: j Hj => {IH} /= [ | j IH] Hj.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply Hlt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_trans with (nth 0 (x1 :: s) j).",
            "VernacExtend",
            "6e8934b9348e4157b38d2003b0a9eb97928609cc"
        ],
        [
            "apply IH ; by intuition.",
            "VernacExtend",
            "76663867dca8fc42d41fea3a4eced3a424e6ebfb"
        ],
        [
            "apply (sorted_nth Rlt (x1::s)).",
            "VernacExtend",
            "cc0c0790536d9f1128dfcf9db920f93abdd15a01"
        ],
        [
            "by apply Hlt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "replace (Riemann_sum f (SF_seq_f2 g (x1 :: s))) with (minus (Riemann_sum f (SF_seq_f2 g0 (x0::x1::s))) (scal (x1 - x0) (f x0))).",
            "VernacExtend",
            "e24a7a0bb7a3c76761c1f8300392e75ead9040ac"
        ],
        [
            "apply Rle_trans with (norm (Riemann_sum f (SF_seq_f2 g0 [:: x0, x1 & s])) + norm (opp (scal (x1 - x0) (f x0)))).",
            "VernacExtend",
            "83ebaeddafe4e1ebe8b10b6e1e635b08f764ee92"
        ],
        [
            "by generalize (norm_triangle (Riemann_sum f (SF_seq_f2 g0 [:: x0, x1 & s])) (opp (scal (x1 - x0) (f x0)))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite norm_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat_r, (Hex _ Hg0).",
            "VernacExtend",
            "31202bd95e6f50e7f9e084c35eef70ae70267111"
        ],
        [
            "rewrite /minus plus_comm SF_cons_f2 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Riemann_sum_cons /= plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (Riemann_sum f (SF_seq_f2 g0 (x1 :: s))) with (Riemann_sum f (SF_seq_f2 g (x1 :: s))).",
            "VernacExtend",
            "df5499721392e1826bbaccf1dadac0c31ac2f73e"
        ],
        [
            "replace (g0 x0 x1) with x0.",
            "VernacExtend",
            "1a05f0ad5a57d3be23e4d5215400503a786bd9b6"
        ],
        [
            "by rewrite plus_opp_l plus_zero_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /g0 ; case: Req_EM_T (refl_equal x0) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "elim: s x1 Hlt {IH Hex Hg Hg0 Hi} => [ | x2 s IH] x1 Hlt.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite !(SF_cons_f2 _ x1) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "rewrite /g0 ; by case: Req_EM_T (Rgt_not_eq _ _ (proj1 Hlt)).",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_trans with x1 ; by apply Hlt.",
            "VernacExtend",
            "0b9655aeb59fd61b0d1026c65dc26acf4d283c44"
        ],
        [
            "by apply Hlt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: lt_O_Sn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: lt_O_Sn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: lt_O_Sn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: lt_S_n.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "move:H => {Hex} Hex.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace b with (last 0 (unif_part a b n)).",
            "VernacExtend",
            "5751a9d70cc213a71b022239818760245e4a741c"
        ],
        [
            "pattern a at 1 ; replace a with (head 0 (unif_part a b n)).",
            "VernacExtend",
            "b2f18f8718006720f52cff465e478ecdc5e04f08"
        ],
        [
            "elim: (unif_part a b n) Hex => /= [ | x0].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "exists (norm (f 0)) => t Ht ; rewrite (Rle_antisym t 0) ; by intuition.",
            "VernacExtend",
            "807299c3a0aad1b7078a1cfb1dd047b9e08cae61"
        ],
        [
            "case => /= [ | x1 s] IH Hex.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (norm (f x0)) => t Ht ; rewrite (Rle_antisym t x0) ; by intuition.",
            "VernacExtend",
            "807299c3a0aad1b7078a1cfb1dd047b9e08cae61"
        ],
        [
            "case: (Hex _ (lt_n_S _ _ (lt_O_Sn _))) => /= M0 H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: IH => [ | M IH].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => i Hi ; case: (Hex _ (lt_n_S _ _ Hi)) => {Hex} /= M Hex.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by exists M.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (Rmax M0 M) => t Ht ; case: (Rlt_le_dec t x1) => Ht0.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess1 _ _) ; apply H0 ; by intuition.",
            "VernacExtend",
            "73d9916c219f8d49ecfae9a16891baf1beb85e26"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess2 _ _) ; apply IH ; by intuition.",
            "VernacExtend",
            "2e23e8da47a667a700397cf6859625148dab7091"
        ],
        [
            "apply head_unif_part.",
            "VernacExtend",
            "b0bceba99846c59838f47a6d860d83d99fdf8e31"
        ],
        [
            "apply last_unif_part.",
            "VernacExtend",
            "3b49fd4fd44633dd2b027307aeaaab4b7662851f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_ext : forall (f g : R -> V) (a b : R) (l : V), (forall x, Rmin a b < x < Rmax a b -> f x = g x) -> is_RInt f a b l -> is_RInt g a b l.",
            "VernacStartTheoremProof",
            "e95bd560731e882a810401fc2acc57a61bb79077"
        ],
        [
            "intros f g a b.",
            "VernacExtend",
            "b932d5793247a9ca8d6995b4b859ad88d0e20b18"
        ],
        [
            "wlog: a b / (a < b) => [Hw | Hab] l Heq Hf.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_lt_dec a b) => Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Hab => Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Hab in Hf |- *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: Hf ; apply filterlim_ext => x.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite Rminus_eq_0 sign_0 !scal_zero_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(opp_opp l).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_RInt_swap.",
            "VernacExtend",
            "747ca0468ad7c4db05f243f205d281332144cba2"
        ],
        [
            "apply Hw.",
            "VernacExtend",
            "8a661025dc679026191beb09fb44e1db1e042d6a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Rmin_comm Rmax_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_RInt_swap.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: Heq ; rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _ Heq.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "apply filterlim_locally_ball_norm => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct (proj1 (filterlim_locally_ball_norm _ _) Hf (pos_div_2 eps)) as [d Hd].",
            "VernacExtend",
            "5f90de4c1ae4c11184cc167d5f946cf59f9c9397"
        ],
        [
            "set dx := fun x => pos_div_2 (pos_div_2 eps) / Rmax 1 (norm (minus (g x) (f x))).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "assert (forall x, 0 < dx x).",
            "VernacExtend",
            "cd72b3eb66cd27446019b1681ff61c183c27b70d"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "apply is_pos_div_2.",
            "VernacExtend",
            "34ece1c858dc4d1fc16b226888abddacb10f0a54"
        ],
        [
            "eapply Rlt_le_trans, Rmax_l.",
            "VernacExtend",
            "4652174ee5227e1c8551c5914ce4e531aaf862ed"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (Hdelta : 0 < Rmin d (Rmin (dx a) (dx b))).",
            "VernacExtend",
            "811398b02bb370e6acac86037f9c84c2eb09f98f"
        ],
        [
            "repeat apply Rmin_case => //.",
            "VernacExtend",
            "d36194af035d418008b3fae8e9785d1af2d8af96"
        ],
        [
            "by apply d.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (mkposreal _ Hdelta) => /= y Hstep [Hptd [Hya Hyb]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (double_var eps).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply ball_norm_triangle.",
            "VernacExtend",
            "8de8f271794946bc443324acfd93e9542af0a771"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "eapply Rlt_le_trans, Rmin_l.",
            "VernacExtend",
            "7b5a746186081c093dcb514e5ccc45f322a34081"
        ],
        [
            "by apply Hstep.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have: (seq_step (SF_lx y) < (Rmin (dx a) (dx b))) => [ | {Hstep} Hstep].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "eapply Rlt_le_trans, Rmin_r.",
            "VernacExtend",
            "ba834a074d638e9141929288019872cda2643b82"
        ],
        [
            "by apply Hstep.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear d Hd Hdelta Hf.",
            "VernacExtend",
            "960bb35a2fcecf2ccd1dc076f870ae71a0ab3553"
        ],
        [
            "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
            "VernacExtend",
            "fca02487127bf9775753594d7fee9b399ab3dff1"
        ],
        [
            "rewrite !scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: Hya Hyb ; rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _ Hya Hyb.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "move: Hab Heq Hstep ; rewrite -Hyb => {b Hyb} ; set b := last (SF_h y) (unzip1 (SF_t y)) ; rewrite -Hya => {a Hya} ; set a := SF_h y => Hab Heq Hstep.",
            "VernacExtend",
            "127f61fd3f3bbec7c89f6bde05567ba737bd7372"
        ],
        [
            "revert a b Hab Heq Hptd Hstep ; apply SF_cons_ind with (s := y) => {y} [x0 | x0 y IH] a b Hab Heq Hptd Hstep.",
            "VernacExtend",
            "c1611f6c8a5d01c56cc78aa395f5dd45b7bea0d1"
        ],
        [
            "rewrite !Riemann_sum_zero //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply (ball_norm_center _ (pos_div_2 eps)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !Riemann_sum_cons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "assert (Hx0 := proj1 (ptd_sort _ Hptd)).",
            "VernacExtend",
            "dc651e3bd0eeb38831af3dff0cf1f85c7136ffad"
        ],
        [
            "case: Hx0 => /= Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "Focus 2.",
            "VernacFocus",
            "485d4f15aaf5c71ed130bd270976f9fc4e12a61f"
        ],
        [
            "rewrite Hx0 Rminus_eq_0 !scal_zero_l !plus_zero_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: IH.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move: Hab ; unfold a, b ; simpl ; by rewrite Hx0.",
            "VernacExtend",
            "c540fd58d4777939a4ad2350fbc0c5c1c2c02dcb"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "apply Heq ; split.",
            "VernacExtend",
            "5ac9dbad50b97287e7ebda0394223a66cca34be4"
        ],
        [
            "unfold a ; simpl ; rewrite Hx0 ; apply Hx.",
            "VernacExtend",
            "c6483ce442256c9b0065cdd999ecdd0d8599204b"
        ],
        [
            "unfold b ; simpl ; apply Hx.",
            "VernacExtend",
            "c52d9c2a21d3346f41c5787fec533426f39ff8b6"
        ],
        [
            "eapply ptd_cons, Hptd.",
            "VernacExtend",
            "6cf794c2c8b0293f00e43bb34a66173709c751d3"
        ],
        [
            "move: Hstep ; unfold a, b ; simpl ; rewrite Hx0.",
            "VernacExtend",
            "555db040f4bcd2823014fdc2e6b2579b6e16a153"
        ],
        [
            "apply Rle_lt_trans, Rmax_r.",
            "VernacExtend",
            "27780a319d09c4239147d6e52dfc21bcd09af2bd"
        ],
        [
            "clear IH.",
            "VernacExtend",
            "daecf0ea8665f0f6fd551644d47b5ce1d93aef1e"
        ],
        [
            "rewrite (double_var (eps / 2)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_lt_trans, Rplus_lt_compat.",
            "VernacExtend",
            "666fd1817c4b5bf15bf5ac3b588d37a7754f2b2b"
        ],
        [
            "eapply Rle_trans, norm_triangle.",
            "VernacExtend",
            "93edd6e935dec17a5da269811d74c67e5ad4fb5c"
        ],
        [
            "apply Req_le, f_equal.",
            "VernacExtend",
            "611305432bb56a049c3263355c95dcb6f09bd9a0"
        ],
        [
            "replace (@minus V _ _) with (plus (scal (SF_h y - fst x0) (minus (g (snd x0)) (f (snd x0)))) (minus (Riemann_sum g y) (Riemann_sum f y))).",
            "VernacExtend",
            "809ff787d36412725a4c5d3a957aad280b1a62d7"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /minus opp_plus scal_distr_l -scal_opp_r -!plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite !plus_assoc ; apply f_equal2 => //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by apply plus_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply @norm_scal.",
            "VernacExtend",
            "c6b7146cb6222d5cb71aafd018ad8cdb1926b185"
        ],
        [
            "assert (Ha := proj1 (Hptd O (lt_O_Sn _))).",
            "VernacExtend",
            "b5a6981685433a0cec97df368c5739dba3d54531"
        ],
        [
            "case: Ha => /= Ha.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "assert (Hb : snd x0 <= b).",
            "VernacExtend",
            "a19866b29b907ebc50256d6a398534e69c809ee9"
        ],
        [
            "eapply Rle_trans, sorted_last.",
            "VernacExtend",
            "052aeabe274a1594c91e8c982f7e5c983168a1a0"
        ],
        [
            "2: apply ptd_sort.",
            "VernacExtend",
            "4e6654e8009b605489a9db6eb2c79b0d29c49142"
        ],
        [
            "2: eapply ptd_cons, Hptd.",
            "VernacExtend",
            "98ca2c2064760b39c884f5bd1a312e5715f9bbd7"
        ],
        [
            "2: apply lt_O_Sn.",
            "VernacExtend",
            "b53c0b5c0931dee63228e11f90097e425fb37e03"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (Hptd O), lt_O_Sn.",
            "VernacExtend",
            "f4345cef109634887023eb36e10f9a31a4c46b51"
        ],
        [
            "case: Hb => //= Hb.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Heq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite minus_eq_zero norm_zero Rmult_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_pos_div_2 (pos_div_2 eps)).",
            "VernacExtend",
            "cfd3b05919ff33784026ccaa73926185f6e180c1"
        ],
        [
            "by split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply Rmult_le_compat_l, (Rmax_r 1).",
            "VernacExtend",
            "15c3e0e1a27580647df07eb574e7568a26733f28"
        ],
        [
            "by apply abs_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_div_r.",
            "VernacExtend",
            "f3a8151a1973e9e9720c6ac1d2553ca6f749e13b"
        ],
        [
            "eapply Rlt_le_trans, Rmax_l.",
            "VernacExtend",
            "4652174ee5227e1c8551c5914ce4e531aaf862ed"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -/(dx b).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rlt_le_trans, Rmin_r.",
            "VernacExtend",
            "ba834a074d638e9141929288019872cda2643b82"
        ],
        [
            "eapply Rle_lt_trans, Hstep.",
            "VernacExtend",
            "841ac894b3622306117cc958c23b3c20893be531"
        ],
        [
            "by apply Rmax_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Ha.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply Rmult_le_compat_l, (Rmax_r 1).",
            "VernacExtend",
            "15c3e0e1a27580647df07eb574e7568a26733f28"
        ],
        [
            "by apply abs_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_div_r.",
            "VernacExtend",
            "f3a8151a1973e9e9720c6ac1d2553ca6f749e13b"
        ],
        [
            "eapply Rlt_le_trans, Rmax_l.",
            "VernacExtend",
            "4652174ee5227e1c8551c5914ce4e531aaf862ed"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -/(dx a).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rlt_le_trans, Rmin_l.",
            "VernacExtend",
            "7b5a746186081c093dcb514e5ccc45f322a34081"
        ],
        [
            "eapply Rle_lt_trans, Hstep.",
            "VernacExtend",
            "841ac894b3622306117cc958c23b3c20893be531"
        ],
        [
            "by apply Rmax_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: (forall x : R, SF_h y <= x < b -> f x = g x) => [ | {Heq} Heq].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Heq ; split.",
            "VernacExtend",
            "5ac9dbad50b97287e7ebda0394223a66cca34be4"
        ],
        [
            "by eapply Rlt_le_trans, H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: (seq_step (SF_lx y) < (dx b)) => [ | {Hstep} Hstep].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "eapply Rlt_le_trans, Rmin_r.",
            "VernacExtend",
            "ba834a074d638e9141929288019872cda2643b82"
        ],
        [
            "eapply Rle_lt_trans, Hstep.",
            "VernacExtend",
            "841ac894b3622306117cc958c23b3c20893be531"
        ],
        [
            "apply Rmax_r.",
            "VernacExtend",
            "d3f964851377911a5dafd3727673be093a2b343f"
        ],
        [
            "simpl in b.",
            "VernacExtend",
            "2303927e7a530d3db5e447cbe206c232a3ef82d7"
        ],
        [
            "apply ptd_cons in Hptd.",
            "VernacExtend",
            "8671a934bca46a2c1f8184be40eb2093a3a1e1f6"
        ],
        [
            "clear a Hab x0 Hx0.",
            "VernacExtend",
            "e3608ea9fcb8497d6879f37978a5e64cbddb6062"
        ],
        [
            "revert b Heq Hptd Hstep ; apply SF_cons_ind with (s := y) => {y} [x0 | x0 y IH] b Heq Hptd Hstep.",
            "VernacExtend",
            "2663bf7ef7123ca7f2992cdb51c20ee12b456614"
        ],
        [
            "rewrite !Riemann_sum_zero // minus_eq_zero norm_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_pos_div_2 (pos_div_2 _)).",
            "VernacExtend",
            "650a0c2f81803f8df7f195b5532937f848144749"
        ],
        [
            "rewrite !Riemann_sum_cons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (minus (plus (scal (SF_h y - fst x0) (g (snd x0))) (Riemann_sum g y)) (plus (scal (SF_h y - fst x0) (f (snd x0))) (Riemann_sum f y))) with (plus (scal (SF_h y - fst x0) (minus (g (snd x0)) (f (snd x0)))) (minus (Riemann_sum g y) (Riemann_sum f y))).",
            "VernacExtend",
            "56a25f7a87572bcedbed3155e90300cae44443e6"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply @norm_triangle.",
            "VernacExtend",
            "85c8761fbfefc33c72371b73f65134f967a6f807"
        ],
        [
            "assert (SF_h y <= b).",
            "VernacExtend",
            "be960f04df36d6a74fd407214fb2e5938c63d40b"
        ],
        [
            "eapply Rle_trans, sorted_last.",
            "VernacExtend",
            "052aeabe274a1594c91e8c982f7e5c983168a1a0"
        ],
        [
            "2: apply ptd_sort ; eapply ptd_cons, Hptd.",
            "VernacExtend",
            "bbde5bd46b34bea40a283445e5e3cc62f2ee50ee"
        ],
        [
            "2: apply lt_O_Sn.",
            "VernacExtend",
            "b53c0b5c0931dee63228e11f90097e425fb37e03"
        ],
        [
            "simpl ; by apply Rle_refl.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "case: H0 => Hb.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Heq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite minus_eq_zero scal_zero_r norm_zero Rplus_0_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply IH ; intros.",
            "VernacExtend",
            "adebf5a1d1abcc77b61640d35bb319aef7d40d3b"
        ],
        [
            "apply Heq ; split.",
            "VernacExtend",
            "5ac9dbad50b97287e7ebda0394223a66cca34be4"
        ],
        [
            "eapply Rle_trans, H0.",
            "VernacExtend",
            "220119fabe76b3242ea7c8a55d895c046524d6b2"
        ],
        [
            "eapply Rle_trans ; by apply (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "b6684386f44eb1e68ce02c0fef358f59fb63fac8"
        ],
        [
            "by apply H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply ptd_cons, Hptd.",
            "VernacExtend",
            "6cf794c2c8b0293f00e43bb34a66173709c751d3"
        ],
        [
            "eapply Rle_lt_trans, Hstep.",
            "VernacExtend",
            "841ac894b3622306117cc958c23b3c20893be531"
        ],
        [
            "by apply Rmax_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "7beefd7a817b6ff454f9772d9f270f49025cc2c9"
        ],
        [
            "eapply Rle_lt_trans, Hb.",
            "VernacExtend",
            "b3b14366136903d6df5018614d61080f06f44e50"
        ],
        [
            "apply (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "7beefd7a817b6ff454f9772d9f270f49025cc2c9"
        ],
        [
            "clear IH.",
            "VernacExtend",
            "daecf0ea8665f0f6fd551644d47b5ce1d93aef1e"
        ],
        [
            "rewrite Hb !Riemann_sum_zero //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite minus_eq_zero norm_zero Rplus_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply @norm_scal.",
            "VernacExtend",
            "c6b7146cb6222d5cb71aafd018ad8cdb1926b185"
        ],
        [
            "assert (snd x0 <= b).",
            "VernacExtend",
            "1890caecdfbe90544e14dd88f08dec7dfd237881"
        ],
        [
            "rewrite -Hb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "7beefd7a817b6ff454f9772d9f270f49025cc2c9"
        ],
        [
            "case: H0 => Hb'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Heq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite minus_eq_zero norm_zero Rmult_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_pos_div_2 (pos_div_2 _)).",
            "VernacExtend",
            "650a0c2f81803f8df7f195b5532937f848144749"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "7beefd7a817b6ff454f9772d9f270f49025cc2c9"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hb'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply abs_ge_0.",
            "VernacExtend",
            "bfeacd2623650e88fd1e5d792e3438edb9d12256"
        ],
        [
            "apply (Rmax_r 1).",
            "VernacExtend",
            "8027b3f6c00aefb859f1c47ccf57081ae30da38f"
        ],
        [
            "apply Rlt_div_r.",
            "VernacExtend",
            "f3a8151a1973e9e9720c6ac1d2553ca6f749e13b"
        ],
        [
            "eapply Rlt_le_trans, Rmax_l.",
            "VernacExtend",
            "4652174ee5227e1c8551c5914ce4e531aaf862ed"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rle_lt_trans, Hstep.",
            "VernacExtend",
            "841ac894b3622306117cc958c23b3c20893be531"
        ],
        [
            "rewrite -Hb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rmax_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ptd_sort ; eapply ptd_cons, Hptd.",
            "VernacExtend",
            "b5f5ef16eb3f1c6ad8016ede6cd7e0fcc10d7dae"
        ],
        [
            "apply ptd_sort ; eapply ptd_cons, Hptd.",
            "VernacExtend",
            "b5f5ef16eb3f1c6ad8016ede6cd7e0fcc10d7dae"
        ],
        [
            "rewrite /minus opp_plus scal_distr_l -scal_opp_r -!plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite !plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2 => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply plus_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_ext : forall (f g : R -> V) (a b : R), (forall x, Rmin a b < x < Rmax a b -> f x = g x) -> ex_RInt f a b -> ex_RInt g a b.",
            "VernacStartTheoremProof",
            "6424b1d38b1a92a3ae31e71966f7ec537cfe9ffd"
        ],
        [
            "intros f g a b Heq [If Hex].",
            "VernacExtend",
            "4a7ed9d166b65a7e87bbe588239d51d59d99f7d3"
        ],
        [
            "exists If.",
            "VernacExtend",
            "289047dc7c651d47a5a9a5605cb272ad18884cb9"
        ],
        [
            "revert Hex.",
            "VernacExtend",
            "ed2585126c212c5b410b343a5c13bc558129165b"
        ],
        [
            "now apply is_RInt_ext.",
            "VernacExtend",
            "2d1ec89f1b194f510d9ab25a28e117b0ae0a05af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_const : forall (a b : R) (v : V), is_RInt (fun _ => v) a b (scal (b - a) v).",
            "VernacStartTheoremProof",
            "a5382a1502089b760b4bfb982b8eeb363cad5ecf"
        ],
        [
            "intros a b v.",
            "VernacExtend",
            "0487359be0e958d0db658bf7732976d924962d43"
        ],
        [
            "apply filterlim_within_ext with (fun _ => scal (b - a) v).",
            "VernacExtend",
            "b56878baf003644c97a4c82747b44421c88389b7"
        ],
        [
            "2: apply filterlim_const.",
            "VernacExtend",
            "ff77f8d03a71e469250dcb72156a9be35bb7f565"
        ],
        [
            "intros ptd [_ [Hhead Hlast]].",
            "VernacExtend",
            "d226fbdfe793c26a786d4223b2cd06dec2158c6f"
        ],
        [
            "rewrite Riemann_sum_const.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Hlast Hhead.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite scal_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (f_equal (fun x => scal x v)).",
            "VernacExtend",
            "fa2bea75beae0970e8bc12e107e88e54eb5736a2"
        ],
        [
            "apply sym_eq, sign_min_max.",
            "VernacExtend",
            "5a3363d7741b38748a2711b442c14f796ac5fedd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_const : forall (a b : R) (v : V), ex_RInt (fun _ => v) a b.",
            "VernacStartTheoremProof",
            "d93cae31fa7035abed43eb0a65267dfd3b92a832"
        ],
        [
            "intros a b v.",
            "VernacExtend",
            "0487359be0e958d0db658bf7732976d924962d43"
        ],
        [
            "exists (scal (b - a) v).",
            "VernacExtend",
            "20dc2384ad8e5672a4ff2bbf456ecb7f5a98dd96"
        ],
        [
            "apply is_RInt_const.",
            "VernacExtend",
            "0b1ddb4a67dc6dd9a159b2d66bf059b0995ba35b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_comp_opp : forall (f : R -> V) (a b : R) (l : V), is_RInt f (-a) (-b) l -> is_RInt (fun y => opp (f (- y))) a b l.",
            "VernacStartTheoremProof",
            "1bd180dee531c621b53621a28177d2e91227883a"
        ],
        [
            "intros f a b l Hf.",
            "VernacExtend",
            "563e38e7a2209ea2b9303bbe14ba694f1826ceea"
        ],
        [
            "apply filterlim_locally => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (proj1 (filterlim_locally _ _) Hf eps) ; clear Hf ; intros [delta Hf].",
            "VernacExtend",
            "ba1118d7503bea6b53cba5ba1cf69f222b5e4084"
        ],
        [
            "exists delta.",
            "VernacExtend",
            "9b3e0c1864d154c56892795f1b2d7db5a609fd33"
        ],
        [
            "intros ptd Hstep [Hptd [Hh Hl]].",
            "VernacExtend",
            "5fb41d7289dbcb27702c6b0e7e0e8d01505e1888"
        ],
        [
            "rewrite Riemann_sum_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite scal_opp_r -scal_opp_l /opp /= -sign_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Ropp_plus_distr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set ptd' := (mkSF_seq (-SF_h ptd) (seq.map (fun X => (- fst X,- snd X)) (SF_t ptd))).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "replace (Riemann_sum (fun x => f (-x)) ptd) with (Riemann_sum f (SF_rev ptd')).",
            "VernacExtend",
            "6d3533ace2ac5a56f157b427069e402ccbd25f75"
        ],
        [
            "have H : SF_size ptd = SF_size ptd'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /SF_size /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite size_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hf.",
            "VernacExtend",
            "44e8b4102d20ba355038f72fc52240fc6cb8650c"
        ],
        [
            "clear H ; revert ptd' Hstep ; apply SF_cons_dec with (s := ptd) => [ x0 s' Hs'| h0 s] ; rewrite /seq_step.",
            "VernacExtend",
            "e2f5728ae941a56212e0e7f5441971081aa9cd10"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "set s' := {| SF_h := - SF_h s; SF_t := [seq (- fst X, - snd X) | X <- SF_t s] |}.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite (SF_rev_cons (-fst h0,-snd h0) s').",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite SF_lx_rcons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite behead_rcons ; [ | rewrite SF_size_lx ; by apply lt_O_Sn ].",
            "VernacExtend",
            "49f3bfaaaa17a5b9d5f77db4c7c2501ba20c5cda"
        ],
        [
            "rewrite head_rcons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite SF_lx_cons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "revert h0 s' ; move: {1 3}(0) ; apply SF_cons_ind with (s := s) => {s} [ x1 | h1 s IH] x0 h0 s' Hs' ; simpl in Hs'.",
            "VernacExtend",
            "494e74a2ac410cfbb44863069434f19c963e129d"
        ],
        [
            "rewrite /= -Ropp_minus_distr' /Rminus -Ropp_plus_distr Ropp_involutive.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hs'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set s'' := {| SF_h := - SF_h s; SF_t := [seq (- fst X, - snd X) | X <- SF_t s] |}.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite (SF_rev_cons (-fst h1,-snd h1) s'').",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite SF_lx_rcons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite behead_rcons ; [ | rewrite SF_size_lx ; by apply lt_O_Sn ].",
            "VernacExtend",
            "49f3bfaaaa17a5b9d5f77db4c7c2501ba20c5cda"
        ],
        [
            "rewrite head_rcons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite pairmap_rcons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite foldr_rcons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: IH => /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "replace (Rmax (Rabs (SF_h s - fst h1)) (foldr Rmax (Rmax (Rabs (- fst h0 - - fst h1)) x0) (pairmap (fun x y : R => Rabs (y - x)) (SF_h s) (unzip1 (SF_t s))))) with (Rmax (Rabs (fst h1 - fst h0)) (Rmax (Rabs (SF_h s - fst h1)) (foldr Rmax x0 (pairmap (fun x y : R => Rabs (y - x)) (SF_h s) (unzip1 (SF_t s)))))).",
            "VernacExtend",
            "1a820c2da97aa0c16b8c0b71462ff706a14d4bc0"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rmax_assoc (Rmax_comm (Rabs _)) -Rmax_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite -(Ropp_minus_distr' (-fst h0)) /Rminus -Ropp_plus_distr Ropp_involutive.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (pairmap (fun x y : R => Rabs (y + - x)) (SF_h s) (unzip1 (SF_t s))) x0 {Hs'} (Rabs (fst h1 + - fst h0)) => [ | x2 t IH] x0 x1 /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rmax_assoc (Rmax_comm x1) -Rmax_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "revert ptd' Hptd H ; apply SF_cons_ind with (s := ptd) => [ x0 | h0 s IH] s' Hs' H i Hi ; rewrite SF_size_rev -H in Hi.",
            "VernacExtend",
            "b9bcbfa3333126603cb6b3fb5147d872c31d7d0d"
        ],
        [
            "by apply lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite SF_size_cons in Hi.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply lt_n_Sm_le in Hi.",
            "VernacExtend",
            "13a10e7e3848fccfd11cfb892fdd811b9bb7e33d"
        ],
        [
            "set s'' := {| SF_h := - SF_h s; SF_t := [seq (- fst X, - snd X) | X <- SF_t s] |}.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite (SF_rev_cons (-fst h0,-snd h0) s'').",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite SF_size_cons (SF_size_cons (-fst h0,-snd h0) s'') in H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply eq_add_S in H.",
            "VernacExtend",
            "c34047e5537e2b913cbb45e0c108e4dbc074e9ff"
        ],
        [
            "rewrite SF_lx_rcons SF_ly_rcons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?nth_rcons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?SF_size_lx ?SF_size_ly ?SF_size_rev -H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (proj2 (SSR_leq _ _) (le_n_S _ _ Hi)) ; case: (ssrnat.leq (S i) (S (SF_size s))) => // _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "apply le_lt_eq_dec in Hi ; case: Hi => [Hi | -> {i}].",
            "VernacExtend",
            "486ef7474d79cc5143c92efc2c75c3ec4d62ae3c"
        ],
        [
            "apply lt_le_S in Hi.",
            "VernacExtend",
            "b40ec9482e68510251f8f1bdcd94dd18bb5863f0"
        ],
        [
            "move: (proj2 (SSR_leq _ _) Hi) ; case: (ssrnat.leq (S i) (SF_size s)) => // _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "move: (proj2 (SSR_leq _ _) (le_n_S _ _ Hi)) ; case: (ssrnat.leq (S (S i)) (S (SF_size s))) => // _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "move: Hs' ; apply ptd_cons.",
            "VernacExtend",
            "b20a98a7211f01c99cae11ecb081e9373a639a42"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "rewrite SF_size_rev -H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "have : ~ is_true (ssrnat.leq (S (SF_size s)) (SF_size s)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have H0 := lt_n_Sn (SF_size s).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "contradict H0.",
            "VernacExtend",
            "e9276d92c17ea182f1ef13aa74464b33eea923d9"
        ],
        [
            "apply SSR_leq in H0.",
            "VernacExtend",
            "7277ffa99679f0ec8cbd438db6b93f41b9cfb8fe"
        ],
        [
            "by apply le_not_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (ssrnat.leq (S (SF_size s)) (SF_size s)) => // _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (@eqtype.eq_refl ssrnat.nat_eqType (SF_size s)) ; case: (@eqtype.eq_op ssrnat.nat_eqType (SF_size s) (SF_size s)) => // _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "have : ~ is_true (ssrnat.leq (S (S (SF_size s))) (S (SF_size s))).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have H0 := lt_n_Sn (SF_size s).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "contradict H0.",
            "VernacExtend",
            "e9276d92c17ea182f1ef13aa74464b33eea923d9"
        ],
        [
            "apply SSR_leq in H0.",
            "VernacExtend",
            "7277ffa99679f0ec8cbd438db6b93f41b9cfb8fe"
        ],
        [
            "by apply le_not_lt, le_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (ssrnat.leq (S (S (SF_size s))) (S (SF_size s))) => // _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (@eqtype.eq_refl ssrnat.nat_eqType (S (SF_size s))) ; case: (@eqtype.eq_op ssrnat.nat_eqType (S (SF_size s)) (S (SF_size s))) => // _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "rewrite H SF_lx_rev nth_rev SF_size_lx //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (ssrnat.subn (S (SF_size s'')) (S (SF_size s''))) with 0%nat by intuition.",
            "VernacExtend",
            "9647bde199b3db793d6de7134fa5b9f34c64f9c9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split ; apply Ropp_le_contravar ; apply (Hs' 0%nat) ; rewrite SF_size_cons ; by apply lt_O_Sn.",
            "VernacExtend",
            "de83ce1f501254532aa464f9c071979aa0554526"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite Rmin_opp_Rmax -Hl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "revert ptd' ; move: (0) ; apply SF_cons_ind with (s := ptd) => [ h0 | h0 s IH] x0 s'.",
            "VernacExtend",
            "265c77838a07ad517da6d0da0376880a5519eed5"
        ],
        [
            "by simpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set s'' := {| SF_h := - SF_h s; SF_t := [seq (- fst X, - snd X) | X <- SF_t s] |}.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite (SF_lx_cons (-fst h0,-snd h0) s'') rev_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite head_rcons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rmax_opp_Rmin -Hh.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "revert ptd' ; move: (0) ; apply SF_cons_dec with (s := ptd) => [ h0 | h0 s] x0 s'.",
            "VernacExtend",
            "265c77838a07ad517da6d0da0376880a5519eed5"
        ],
        [
            "by simpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set s'' := {| SF_h := - SF_h s; SF_t := [seq (- fst X, - snd X) | X <- SF_t s] |}.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite (SF_lx_cons (-fst h0,-snd h0) s'') rev_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite head_rcons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite behead_rcons ; [ | rewrite size_rev SF_size_lx ; by apply lt_O_Sn].",
            "VernacExtend",
            "49f3bfaaaa17a5b9d5f77db4c7c2501ba20c5cda"
        ],
        [
            "rewrite unzip1_zip.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite last_rcons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_rcons size_behead ?size_rev SF_size_ly SF_size_lx //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "revert ptd' ; apply SF_cons_ind with (s := ptd) => /= [x0 | h ptd' IH].",
            "VernacExtend",
            "a5328ac031e4607ce8d81db5c67eacdefbfb2ee3"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "rewrite Riemann_sum_cons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (SF_rev_cons (-fst h, -snd h) (mkSF_seq (- SF_h ptd') (seq.map (fun X : R * R => (- fst X, - snd X)) (SF_t ptd')))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -IH => {IH}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "set s := {| SF_h := - SF_h ptd'; SF_t := seq.map (fun X : R * R => (- fst X, - snd X)) (SF_t ptd') |}.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite Riemann_sum_rcons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite SF_lx_rev.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have H : (forall s x0, last x0 (rev s) = head x0 s).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => T s0 x0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: s0 => [ | x1 s0] //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite rev_cons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite last_rcons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite H /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: (f_equal (fun x => plus (scal x _) _)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "simpl ; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_comp_opp : forall (f : R -> V) (a b : R), ex_RInt f (-a) (-b) -> ex_RInt (fun y => opp (f (- y))) a b.",
            "VernacStartTheoremProof",
            "8fe45e543dbd5fe3d456fa82e031bbee03219345"
        ],
        [
            "intros f a b [l If].",
            "VernacExtend",
            "7da9b2ec00e35f44d4da67da22b9fda07e05e667"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "by apply is_RInt_comp_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_comp_lin (f : R -> V) (u v a b : R) (l : V) : is_RInt f (u * a + v) (u * b + v) l -> is_RInt (fun y => scal u (f (u * y + v))) a b l.",
            "VernacStartTheoremProof",
            "307313dd1165d37a9e563b23b738d1e8b7d9e7ec"
        ],
        [
            "case: (Req_dec u 0) => [-> {u} If | ].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_RInt_ext with (fun _ => zero).",
            "VernacExtend",
            "809c5c542903e79d6c03303dd8a7b471d9051728"
        ],
        [
            "move => x _ ; apply sym_eq ; apply: scal_zero_l.",
            "VernacExtend",
            "15d4f1131f2685d45fda788d6e7c5559c5613a93"
        ],
        [
            "apply is_RInt_const.",
            "VernacExtend",
            "0b1ddb4a67dc6dd9a159b2d66bf059b0995ba35b"
        ],
        [
            "apply filterlim_locally_unique with (2 := If).",
            "VernacExtend",
            "d84925f2dbae0499ba612b8bbb86df168d8f3354"
        ],
        [
            "rewrite !Rmult_0_l Rplus_0_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite scal_zero_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_RInt_point.",
            "VernacExtend",
            "c5caf530fa3586239405dbbe22a8e7c8cdd1850d"
        ],
        [
            "wlog: u a b / (u > 0) => [Hw | Hu _].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rlt_le_dec 0 u) => Hu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Hu => // Hu _ If.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply is_RInt_ext with (fun y => opp (scal (- u) (f ((- u) * (- y) + v)))).",
            "VernacExtend",
            "6baa80b71bdaa176cc9767772503d54e1c4984a7"
        ],
        [
            "move => x _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -(scal_opp_l (- u) (f (- u * - x + v))) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /opp /= Ropp_involutive.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "apply f_equal ; ring.",
            "VernacExtend",
            "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
        ],
        [
            "apply (is_RInt_comp_opp (fun y => scal (- u) (f (- u * y + v)))).",
            "VernacExtend",
            "08d06b58eb1e766c3ce4b7f432f1b0a017d0363a"
        ],
        [
            "apply Hw.",
            "VernacExtend",
            "8a661025dc679026191beb09fb44e1db1e042d6a"
        ],
        [
            "by apply Ropp_gt_lt_0_contravar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Ropp_neq_0_compat, Rlt_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ?Rmult_opp_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "wlog: a b l / (a < b) => [Hw | Hab].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rlt_le_dec a b) => Hab If.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Hab If => [Hab | -> {b}] If.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -(opp_opp l).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_RInt_swap.",
            "VernacExtend",
            "747ca0468ad7c4db05f243f205d281332144cba2"
        ],
        [
            "apply Hw.",
            "VernacExtend",
            "8a661025dc679026191beb09fb44e1db1e042d6a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_RInt_swap.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply is_RInt_point.",
            "VernacExtend",
            "c5caf530fa3586239405dbbe22a8e7c8cdd1850d"
        ],
        [
            "apply filterlim_locally_unique with (2 := If).",
            "VernacExtend",
            "d84925f2dbae0499ba612b8bbb86df168d8f3354"
        ],
        [
            "apply is_RInt_point.",
            "VernacExtend",
            "c5caf530fa3586239405dbbe22a8e7c8cdd1850d"
        ],
        [
            "intros If.",
            "VernacExtend",
            "711d190ae8dffafc22b927d43fc1525e541e0c8d"
        ],
        [
            "apply filterlim_locally.",
            "VernacExtend",
            "3ff3a9612e2ccfd2231ba92f1d95cd7277851a18"
        ],
        [
            "generalize (proj1 (filterlim_locally _ l) If).",
            "VernacExtend",
            "3e3b625d60343651b309922e3b4afbfd135fe7a5"
        ],
        [
            "move => {If} If eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (If eps) => {If} alpha If.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have Ha : 0 < alpha / Rabs u.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply alpha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rabs_pos_lt, Rgt_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (mkposreal _ Ha) => /= ptd Hstep [Hptd [Hfirst Hlast]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "set ptd' := mkSF_seq (u * SF_h ptd + v) (map (fun X => (u * fst X + v,u * snd X + v)) (SF_t ptd)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "replace (scal (sign (b - a)) (Riemann_sum (fun y : R => scal u (f (u * y + v))) ptd)) with (scal (sign (u * b + v - (u * a + v))) (Riemann_sum f ptd')).",
            "VernacExtend",
            "9b35e9664005e4b9015e1fba0513143a98e5d995"
        ],
        [
            "apply: If.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "revert ptd' ; case: (ptd) Hstep => x0 s Hs /= ; rewrite /seq_step /= in Hs |- *.",
            "VernacExtend",
            "26b5a13f6e7612bc501b5052eced265d144df422"
        ],
        [
            "elim: s x0 Hs => [ | [x1 y0] s IH] /= x0 Hs.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply alpha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rmax_case.",
            "VernacExtend",
            "cfd24564dbeed7e74b25ea72bdae495929c2ce09"
        ],
        [
            "replace (u * x1 + v - (u * x0 + v)) with (u * (x1 - x0)) by ring.",
            "VernacExtend",
            "064a5af81b85627425ad66ee16a8b564a93229a0"
        ],
        [
            "rewrite Rabs_mult Rmult_comm ; apply Rlt_div_r.",
            "VernacExtend",
            "d281af2efbc3e529ecb1b881369ae91d1aee6482"
        ],
        [
            "by apply Rabs_pos_lt, Rgt_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_lt_trans with (2 := Hs), Rmax_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "by apply Rle_lt_trans with (2 := Hs), Rmax_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "revert ptd' ; case: (ptd) Hptd => x0 s Hs /= i Hi ; rewrite /SF_size size_map /= in Hi ; move: (Hs i) => {Hs} Hs ; rewrite /SF_size /= in Hs ; move: (Hs Hi) => {Hs} ; rewrite /SF_lx /SF_ly /= => Hs.",
            "VernacExtend",
            "ab96bdecc631690fb4628ba32bb3c2754f4e05fa"
        ],
        [
            "elim: s i x0 Hi Hs => /= [ | [x1 y0] s IH] i x0 Hi Hs.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: i Hi Hs => /= [ | i] Hi Hs.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split ; apply Rplus_le_compat_r ; apply Rmult_le_compat_l ; try by apply Rlt_le.",
            "VernacExtend",
            "6e55ee40d98b755dc0df72c1112d59238739d380"
        ],
        [
            "by apply Hs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "by apply lt_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite /ptd' /= Hfirst.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Rplus_min_distr_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Rmult_min_distr_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Rplus_max_distr_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Rmult_max_distr_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Hlast.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /ptd' /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (SF_t ptd) (SF_h ptd) => [ | [x1 _] /= s IH] x0 //=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "replace (u * b + v - (u * a + v)) with (u * (b - a)) by ring.",
            "VernacExtend",
            "4a3fbc092ef6a034ce104b86a81479c982a12083"
        ],
        [
            "rewrite sign_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (sign_eq_1 _ Hu).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_1_l.",
            "VernacExtend",
            "959b7f02068b29f8617e378fce47501de4230f61"
        ],
        [
            "revert ptd' ; apply SF_cons_ind with (s := ptd) => [x0 | [x0 y0] s IH] //=.",
            "VernacExtend",
            "a5328ac031e4607ce8d81db5c67eacdefbfb2ee3"
        ],
        [
            "set s' := {| SF_h := u * SF_h s + v; SF_t := [seq (u * fst X + v, u * snd X + v) | X <- SF_t s] |}.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite Riemann_sum_cons (Riemann_sum_cons _ (u * x0 + v,u * y0 + v) s') /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite IH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2 => //=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite scal_assoc /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (f_equal (fun x => scal x _)).",
            "VernacExtend",
            "917dc945971ee121b956f0848f6cee6ae19ec91b"
        ],
        [
            "rewrite /mult /= ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_comp_lin (f : R -> V) (u v a b : R) : ex_RInt f (u * a + v) (u * b + v) -> ex_RInt (fun y => scal u (f (u * y + v))) a b.",
            "VernacStartTheoremProof",
            "d5abec8542f0c29cacee5f96f93326b4dab7d6cb"
        ],
        [
            "case => l Hf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "by apply is_RInt_comp_lin.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_Chasles_0 (f : R -> V) (a b c : R) (l1 l2 : V) : a < b < c -> is_RInt f a b l1 -> is_RInt f b c l2 -> is_RInt f a c (plus l1 l2).",
            "VernacStartTheoremProof",
            "a07338b4e69bd417671f128debbcd04777fb08f0"
        ],
        [
            "intros [Hab Hbc] H1 H2.",
            "VernacExtend",
            "d68ef2f1c760e0d7b78cc46ed2814af97edf5987"
        ],
        [
            "case: (ex_RInt_ub f a b).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists l1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => //= _ _ M1 HM1.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case: (ex_RInt_ub f b c).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists l2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hbc) => //= _ _ M2 HM2.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply filterlim_locally_ball_norm => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (proj1 (filterlim_locally_ball_norm _ _) H1 (pos_div_2 (pos_div_2 eps))) => {H1} H1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (proj1 (filterlim_locally_ball_norm _ _) H2 (pos_div_2 (pos_div_2 eps))) => {H2} H2.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: H1 => d1 H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: H2 => d2 H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: H1 ; rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => //= _ _ H1.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "move: H2 ; rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hbc) => //= _ _ H2.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "have Hd3 : 0 < eps / (4 * ((M1 + 1) + (M2 + 1))).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "repeat apply Rmult_lt_0_compat.",
            "VernacExtend",
            "fbf27bd9d083b541c05452c398f83000dae05970"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rplus_lt_0_compat ; apply Rplus_le_lt_0_compat, Rlt_0_1.",
            "VernacExtend",
            "87e764825d8e63440f52e2401eb6e1614c56363c"
        ],
        [
            "specialize (HM1 _ (conj (Rle_refl _) (Rlt_le _ _ Hab))).",
            "VernacExtend",
            "7aa58aeb6a3046b29e9002d01fa94f93795ad0a8"
        ],
        [
            "apply Rle_trans with (2 := HM1), norm_ge_0.",
            "VernacExtend",
            "6b44add16bc73dd6ee22b2c1a321ef895f2c326a"
        ],
        [
            "specialize (HM2 _ (conj (Rle_refl _) (Rlt_le _ _ Hbc))).",
            "VernacExtend",
            "8957020b73308c09088ad01ea4db3903706c784e"
        ],
        [
            "apply Rle_trans with (2 := HM2), norm_ge_0.",
            "VernacExtend",
            "42f9db4688cae84387aa2473d30d98240df641aa"
        ],
        [
            "have Hd : 0 < Rmin (Rmin d1 d2) (mkposreal _ Hd3).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "repeat apply Rmin_case.",
            "VernacExtend",
            "2493aa83afccc4ebd9cd6cf176e4f5e0f4e4e4e9"
        ],
        [
            "by apply d1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply d2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hd3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (mkposreal _ Hd) => /= ptd Hstep [Hptd [Hh Hl]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: Hh Hl ; rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ (Rlt_trans _ _ _ Hab Hbc)) => //= _ _ Hh Hl.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "rewrite -> sign_eq_1 by now apply Rlt_Rminus, Rlt_trans with b.",
            "VernacExtend",
            "8dc6e1f8ae0f807f41ede2f1ba31113b23549279"
        ],
        [
            "rewrite scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /ball_norm (double_var eps).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_lt_trans with (norm (minus (Riemann_sum f ptd) (plus (Riemann_sum f (SF_cut_down ptd b)) (Riemann_sum f (SF_cut_up ptd b)))) + norm (minus (plus (Riemann_sum f (SF_cut_down ptd b)) (Riemann_sum f (SF_cut_up ptd b))) (plus l1 l2))).",
            "VernacExtend",
            "6f6b5b132e57c31455c2b8e63b4a7b1fd3943c3a"
        ],
        [
            "set v:= minus _ (plus l1 l2).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "replace v with (plus (minus (Riemann_sum f ptd) (plus (Riemann_sum f (SF_cut_down ptd b)) (Riemann_sum f (SF_cut_up ptd b)))) (minus (plus (Riemann_sum f (SF_cut_down ptd b)) (Riemann_sum f (SF_cut_up ptd b))) (plus l1 l2))).",
            "VernacExtend",
            "4dbc58d277a2ef2969b5201d3a1f168d2d32fb33"
        ],
        [
            "exact: norm_triangle.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite /v /minus -plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "by rewrite plus_assoc plus_opp_l plus_zero_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmin_r _ _) in Hstep.",
            "VernacExtend",
            "1fa6e02a8ff926e14e937b0626332b397ddce09e"
        ],
        [
            "generalize (fun H H0 => Riemann_sum_Chasles_0 f (M1 + 1 + (M2 + 1)) b ptd (mkposreal _ Hd3) H H0 Hptd Hstep).",
            "VernacExtend",
            "39d67c55900ee786bdbe3ceddfeb50d21e14b58e"
        ],
        [
            "rewrite /= Hl Hh => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (eps / 2) with (2 * (mkposreal _ Hd3) * (M1 + 1 + (M2 + 1))).",
            "VernacExtend",
            "f1a1ccc6907f9049ef86ebd4aee2a63b44064d93"
        ],
        [
            "rewrite -norm_opp opp_plus opp_opp plus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl ; apply H.",
            "VernacExtend",
            "3410d91927336a4dd1f499cdd5b70bdccaeed032"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "case: (Rle_lt_dec x b) => Hxb.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rlt_trans with (M1 + 1).",
            "VernacExtend",
            "38b1595a5960842dd7997c98fd6699570efdb5f9"
        ],
        [
            "apply Rle_lt_trans with M1.",
            "VernacExtend",
            "25a0ba16826f29e4877ed82068f15e8dc905ff92"
        ],
        [
            "apply HM1 ; split.",
            "VernacExtend",
            "043a11208a2d6217a6fe56ef04cf225cf09a9142"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hxb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify ; by apply Rlt_0_1.",
            "VernacExtend",
            "e384eae955b0244fa5ffb15789f2a204a411a7e6"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify.",
            "VernacExtend",
            "969fc87537fdaad612d2a1aa70d377f614654753"
        ],
        [
            "apply Rplus_le_lt_0_compat with (2 := Rlt_0_1).",
            "VernacExtend",
            "9c33add5b2c6f81da56aa5a01d10e9c609a51d55"
        ],
        [
            "specialize (HM2 _ (conj (Rle_refl _) (Rlt_le _ _ Hbc))).",
            "VernacExtend",
            "8957020b73308c09088ad01ea4db3903706c784e"
        ],
        [
            "apply Rle_trans with (2 := HM2), norm_ge_0.",
            "VernacExtend",
            "42f9db4688cae84387aa2473d30d98240df641aa"
        ],
        [
            "apply Rlt_trans with (M2 + 1).",
            "VernacExtend",
            "996f56611e47e45b7df5a2f6d2502808351b92b4"
        ],
        [
            "apply Rle_lt_trans with M2.",
            "VernacExtend",
            "57587167ed54a571530bb84d83544f0a0ba374a9"
        ],
        [
            "apply HM2 ; split.",
            "VernacExtend",
            "f18c0a989dc21999606ce95b17ceb5bc5e16d301"
        ],
        [
            "by apply Rlt_le, Hxb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify ; by apply Rlt_0_1.",
            "VernacExtend",
            "e384eae955b0244fa5ffb15789f2a204a411a7e6"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify.",
            "VernacExtend",
            "969fc87537fdaad612d2a1aa70d377f614654753"
        ],
        [
            "apply Rplus_le_lt_0_compat with (2 := Rlt_0_1).",
            "VernacExtend",
            "9c33add5b2c6f81da56aa5a01d10e9c609a51d55"
        ],
        [
            "specialize (HM1 _ (conj (Rle_refl _) (Rlt_le _ _ Hab))).",
            "VernacExtend",
            "7aa58aeb6a3046b29e9002d01fa94f93795ad0a8"
        ],
        [
            "apply Rle_trans with (2 := HM1), norm_ge_0.",
            "VernacExtend",
            "6b44add16bc73dd6ee22b2c1a321ef895f2c326a"
        ],
        [
            "split ; by apply Rlt_le.",
            "VernacExtend",
            "9c392753fd6384a52f43e9d349afde47af3b3aa5"
        ],
        [
            "simpl ; field.",
            "VernacExtend",
            "db84c8cac4d419667c5dc078fea83a0aa7cc0138"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply Rplus_lt_0_compat ; apply Rplus_le_lt_0_compat, Rlt_0_1.",
            "VernacExtend",
            "87e764825d8e63440f52e2401eb6e1614c56363c"
        ],
        [
            "specialize (HM1 _ (conj (Rle_refl _) (Rlt_le _ _ Hab))).",
            "VernacExtend",
            "7aa58aeb6a3046b29e9002d01fa94f93795ad0a8"
        ],
        [
            "apply Rle_trans with (2 := HM1), norm_ge_0.",
            "VernacExtend",
            "6b44add16bc73dd6ee22b2c1a321ef895f2c326a"
        ],
        [
            "specialize (HM2 _ (conj (Rle_refl _) (Rlt_le _ _ Hbc))).",
            "VernacExtend",
            "8957020b73308c09088ad01ea4db3903706c784e"
        ],
        [
            "apply Rle_trans with (2 := HM2), norm_ge_0.",
            "VernacExtend",
            "42f9db4688cae84387aa2473d30d98240df641aa"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmin_l _ _) in Hstep.",
            "VernacExtend",
            "0751436f8fcf8757cad95d1b6fdf95b88de36727"
        ],
        [
            "specialize (H1 (SF_cut_down ptd b)).",
            "VernacExtend",
            "ac66b5f5a9a45cce176b9648d4e0cb4c92cd397c"
        ],
        [
            "specialize (H2 (SF_cut_up ptd b)).",
            "VernacExtend",
            "6e0e15cc13fecb36bbdad0d94f73120612d5e277"
        ],
        [
            "apply Rle_lt_trans with (norm (minus (scal (sign (b - a)) (Riemann_sum f (SF_cut_down ptd b))) l1) + norm (minus (scal (sign (c - b)) (Riemann_sum f (SF_cut_up ptd b))) l2)).",
            "VernacExtend",
            "df861b30abd5f4d3a833735e91080bd8ed51230b"
        ],
        [
            "replace (minus (plus (Riemann_sum f (SF_cut_down ptd b)) (Riemann_sum f (SF_cut_up ptd b))) (plus l1 l2)) with (plus (minus (scal (sign (b - a)) (Riemann_sum f (SF_cut_down ptd b))) l1) (minus (scal (sign (c - b)) (Riemann_sum f (SF_cut_up ptd b))) l2)).",
            "VernacExtend",
            "d0188526afe2e01fd7d976481f7247d0a284af4b"
        ],
        [
            "apply @norm_triangle.",
            "VernacExtend",
            "85c8761fbfefc33c72371b73f65134f967a6f807"
        ],
        [
            "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
            "VernacExtend",
            "fca02487127bf9775753594d7fee9b399ab3dff1"
        ],
        [
            "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
            "VernacExtend",
            "fca02487127bf9775753594d7fee9b399ab3dff1"
        ],
        [
            "rewrite 2!scal_one /minus opp_plus -2!plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite plus_comm -plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "by apply plus_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (double_var (eps / 2)) ; apply Rplus_lt_compat.",
            "VernacExtend",
            "68370f805bb00ad5628efdfec3fb6834ec7a64c7"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply SF_cut_down_step.",
            "VernacExtend",
            "973883a1d5ba4a4edec0015f398984eec8df635a"
        ],
        [
            "rewrite /= Hl Hh ; split ; by apply Rlt_le.",
            "VernacExtend",
            "0c608ac53f2a4ebb8cc2468a3e8df8d5212b3fd3"
        ],
        [
            "by apply Rlt_le_trans with (1 := Hstep), Rmin_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply SF_cut_down_pointed.",
            "VernacExtend",
            "fce44e18b9b2c3c74afa63c3a27d2058af584914"
        ],
        [
            "rewrite Hh ; by apply Rlt_le.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite SF_cut_down_h.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hh ; by apply Rlt_le.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "move: (SF_cut_down_l ptd b) => //=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply SF_cut_up_step.",
            "VernacExtend",
            "b72d33f57f4048474d30bd4a7fae24481a451593"
        ],
        [
            "rewrite /= Hl Hh ; split ; by apply Rlt_le.",
            "VernacExtend",
            "0c608ac53f2a4ebb8cc2468a3e8df8d5212b3fd3"
        ],
        [
            "by apply Rlt_le_trans with (1 := Hstep), Rmin_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply SF_cut_up_pointed.",
            "VernacExtend",
            "95c2002006708f715f45fb20af688df294152125"
        ],
        [
            "rewrite Hh ; by apply Rlt_le.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by rewrite SF_cut_up_h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (SF_cut_up_l ptd b) => /= ->.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hl ; by apply Rlt_le.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_Chasles_0 (f : R -> V) (a b c : R) : a <= b <= c -> ex_RInt f a b -> ex_RInt f b c -> ex_RInt f a c.",
            "VernacStartTheoremProof",
            "6b84f3adaf172dc10b60d034f75a6d0626e64ed3"
        ],
        [
            "case => Hab Hbc H1 H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Hab => [ Hab | -> ] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Hbc => [ Hbc | <- ] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: H1 => [l1 H1] ; case: H2 => [l2 H2].",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "exists (plus l1 l2).",
            "VernacExtend",
            "dc62b1263389a86dd39ad76510110c9e0b608d7f"
        ],
        [
            "apply is_RInt_Chasles_0 with b ; try assumption.",
            "VernacExtend",
            "c6d9d5d53ac0c538865ecb8cff35ec944ad157d5"
        ],
        [
            "by split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_Chasles_1 (f : R -> V) (a b c : R) l1 l2 : a < b < c -> is_RInt f a c l1 -> is_RInt f b c l2 -> is_RInt f a b (minus l1 l2).",
            "VernacStartTheoremProof",
            "96c6eff3ede780c7f42bfd2678e07f263569d176"
        ],
        [
            "intros [Hab Hbc] H1 H2.",
            "VernacExtend",
            "d68ef2f1c760e0d7b78cc46ed2814af97edf5987"
        ],
        [
            "apply filterlim_locally_ball_norm => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (proj1 (filterlim_locally_ball_norm _ _) H1 (pos_div_2 eps)) ; case => {H1} d1 /= H1.",
            "VernacExtend",
            "b4e327cc873ecdc13a60b7e54daf6b9b4f1df671"
        ],
        [
            "generalize (proj1 (filterlim_locally_ball_norm _ _) H2 (pos_div_2 eps)) ; case => {H2} d2 /= H2.",
            "VernacExtend",
            "986b9ad89b1f448bdb4bd25959cb2dae27883a16"
        ],
        [
            "exists d1 ; simpl ; intros y Hstep [Hptd [Hh Hl]].",
            "VernacExtend",
            "1b83703e07e8455911f2cbe63a5674aaa0b9bc8d"
        ],
        [
            "assert (exists y, seq_step (SF_lx y) < Rmin d1 d2 /\\ pointed_subdiv y /\\ SF_h y = Rmin b c /\\ last (SF_h y) (unzip1 (SF_t y)) = Rmax b c).",
            "VernacExtend",
            "34b46279cb1f773b5aa22af5b2752d997555b8ce"
        ],
        [
            "apply filter_ex.",
            "VernacExtend",
            "09969bb5c3e9f15104fb8cce9ea2168dd4ae11c1"
        ],
        [
            "exists (mkposreal _ (Rmin_stable_in_posreal d1 d2)) ; intros y0 H3 [H4 [H5 H6]].",
            "VernacExtend",
            "1bda70ef6879d3c955eb0caec06fcefedf036293"
        ],
        [
            "repeat (split => //=).",
            "VernacExtend",
            "d36194af035d418008b3fae8e9785d1af2d8af96"
        ],
        [
            "by apply H5.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H6.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: H => y2 [Hstep2 H].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "specialize (H2 y2 (Rlt_le_trans _ _ _ Hstep2 (Rmin_r _ _)) H).",
            "VernacExtend",
            "7d1ae0d8074dd198f2c473ca19ff38ca82463902"
        ],
        [
            "case: H => Hptd2 [Hh2 Hl2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "set y1 := mkSF_seq (SF_h y) (SF_t y ++ SF_t y2).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "move: Hl Hh2 Hh Hl2 H1 H2 ; rewrite /Rmax /Rmin ; case: Rle_dec (Rlt_le _ _ Hab) (Rlt_le _ _ Hbc) => // _ _ ; case: Rle_dec => // _ _.",
            "VernacExtend",
            "aceb9fafa80af3e6874a5c6af6a994b0640007cf"
        ],
        [
            "case: Rle_dec (Rlt_le _ _ (Rlt_trans _ _ _ Hab Hbc)) => // _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => Hl Hh2 Hh Hl2 H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -Hl in Hab, Hbc, H2, Hh2 |-* => {b Hl}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Hh in H1, Hab |- * => {a Hh}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Hl2 in Hbc, H2, H1 => {c Hl2}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "assert (seq_step (SF_lx y1) < d1).",
            "VernacExtend",
            "54afa2e9b72664bb25e06bd30f6ec7dd97ebdeec"
        ],
        [
            "unfold y1 ; move: Hstep Hh2.",
            "VernacExtend",
            "1a8f54d6e7e527c721f76695eb8a96903cccb1f6"
        ],
        [
            "clear -Hstep2.",
            "VernacExtend",
            "86c279e222921a80497282334bcde2f27aba9c28"
        ],
        [
            "apply SF_cons_ind with (s := y) => {y} [ x0 | [x0 y0] y IH ] /= Hstep Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Hl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rlt_le_trans with (1 := Hstep2), Rmin_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /SF_lx /seq_step /= in Hstep |- * ; move: (Rle_lt_trans _ _ _ (Rmax_r _ _) Hstep) (Rle_lt_trans _ _ _ (Rmax_l _ _) Hstep) => {Hstep} /= H H0.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "apply Rmax_case.",
            "VernacExtend",
            "cfd24564dbeed7e74b25ea72bdae495929c2ce09"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (pointed_subdiv y1 /\\ SF_h y1 = SF_h y /\\ last (SF_h y1) (unzip1 (SF_t y1)) = last (SF_h y2) (unzip1 (SF_t y2))).",
            "VernacExtend",
            "463982d2aebe6a0b31276ef072e59f7a3de5af31"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold y1 ; move: Hptd Hh2.",
            "VernacExtend",
            "1a8f54d6e7e527c721f76695eb8a96903cccb1f6"
        ],
        [
            "clear -Hptd2.",
            "VernacExtend",
            "213f4043b5e3cec2581c901a6f0fd6422ffe1c96"
        ],
        [
            "apply SF_cons_ind with (s := y) => {y} [ x0 | [x0 y0] y IH ] /= Hptd Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Hl ; by apply Hptd2.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "case => [ | i] /= Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (IH (ptd_cons _ _ Hptd) Hl i (lt_S_n _ _ Hi)).",
            "VernacExtend",
            "961a507f5081754d080b001a4c137930ed908a6d"
        ],
        [
            "unfold y1 ; simpl ; split.",
            "VernacExtend",
            "631eab7023dcb9beeab6969168dc1eaf762b3fa0"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: Hh2 ; clear ; apply SF_cons_ind with (s := y) => {y} [ x0 | [x0 y0] y IH ] /= Hl.",
            "VernacExtend",
            "972e9fa05b12f3af95fe6217321d57c4ee52214d"
        ],
        [
            "by rewrite Hl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "specialize (H1 y1 H H0).",
            "VernacExtend",
            "c7d4ee66e9a54bbe525c64322012da7981ca3cd6"
        ],
        [
            "move: Hab Hbc Hh2 H1 H2 ; clear ; set c := last (SF_h y2) (unzip1 (SF_t y2)) ; set b := last (SF_h y) (unzip1 (SF_t y)) ; set a := SF_h y => Hab Hbc Hl.",
            "VernacExtend",
            "a5d0e0fee018c9bf1d31054000fec50b1250220c"
        ],
        [
            "rewrite -> sign_eq_1 by now apply Rlt_Rminus, Rlt_trans with b.",
            "VernacExtend",
            "8dc6e1f8ae0f807f41ede2f1ba31113b23549279"
        ],
        [
            "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
            "VernacExtend",
            "fca02487127bf9775753594d7fee9b399ab3dff1"
        ],
        [
            "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
            "VernacExtend",
            "fca02487127bf9775753594d7fee9b399ab3dff1"
        ],
        [
            "rewrite 3!scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (Riemann_sum f y) with (minus (Riemann_sum f y1) (Riemann_sum f y2)).",
            "VernacExtend",
            "42f27e6b7ada2bded9276b8b8f333ad4cde1c0fb"
        ],
        [
            "move => H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "unfold ball_norm.",
            "VernacExtend",
            "0ef7745b43335b6c7b6b286ff2fcd6f17e1eea13"
        ],
        [
            "set v := minus _ _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "replace v with (minus (minus (Riemann_sum f y1) l1) (minus (Riemann_sum f y2) l2)).",
            "VernacExtend",
            "5bb225334b5dd91d995261665b67d2f85066784e"
        ],
        [
            "rewrite (double_var eps).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_lt_trans with (2 := Rplus_lt_compat _ _ _ _ H1 H2).",
            "VernacExtend",
            "d06b0196f16a3868a6b5cb69aa379aab00adb6c5"
        ],
        [
            "rewrite -(norm_opp (minus (Riemann_sum f y2) l2)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply @norm_triangle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /v /minus 2!opp_plus opp_opp 2!plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (f_equal (fun x => plus x _)).",
            "VernacExtend",
            "e5bdffcab497f88a1ab54539befd19e2297fbd99"
        ],
        [
            "rewrite -!plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "by apply plus_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: Hl ; unfold y1, b.",
            "VernacExtend",
            "2f5fc7ba3cf29c0affdcb50614c4b39e18b63180"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "apply SF_cons_ind with (s := y) => {y} [ x0 | [x0 y0] y IH ] /= Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -Hl /minus plus_opp_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (Riemann_sum_cons _ (x0,y0) {| SF_h := SF_h y; SF_t := SF_t y ++ SF_t y2 |}) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /minus -plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_Chasles_2 (f : R -> V) (a b c : R) l1 l2 : a < b < c -> is_RInt f a c l1 -> is_RInt f a b l2 -> is_RInt f b c (minus l1 l2).",
            "VernacStartTheoremProof",
            "c8e8a5d45fdfd41ab1b9cb97283444b19474ac7a"
        ],
        [
            "intros [Hab Hbc] H1 H2.",
            "VernacExtend",
            "d68ef2f1c760e0d7b78cc46ed2814af97edf5987"
        ],
        [
            "rewrite -(Ropp_involutive a) -(Ropp_involutive b) -(Ropp_involutive c) in H1 H2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_RInt_comp_opp, is_RInt_swap in H1.",
            "VernacExtend",
            "362f5167f676c8c2a14ed64c458e194d7dc03841"
        ],
        [
            "apply is_RInt_comp_opp, is_RInt_swap in H2.",
            "VernacExtend",
            "4a04768fbb420d9209e3aba8f440335351a7c134"
        ],
        [
            "apply Ropp_lt_contravar in Hab.",
            "VernacExtend",
            "25b3d9282486f946b684397fd3c2185bbc478ab5"
        ],
        [
            "apply Ropp_lt_contravar in Hbc.",
            "VernacExtend",
            "3d06e4bb7e5a1cb6b907199fa07c206cbe4fcd59"
        ],
        [
            "generalize (is_RInt_Chasles_1 _ _ _ _ _ _ (conj Hbc Hab) H1 H2).",
            "VernacExtend",
            "a3f7ef5d81a3a30769d505aa3c3cf0b8029bfc54"
        ],
        [
            "clear => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply is_RInt_comp_opp, is_RInt_swap in H.",
            "VernacExtend",
            "c90d1202359d1ac70a1bfb35b8d302a5cd9d08fb"
        ],
        [
            "replace (minus l1 l2) with (opp (minus (opp l1) (opp l2))).",
            "VernacExtend",
            "fe55fe0e6d1ab6a54407f82b3ae33cf48ef6d986"
        ],
        [
            "move: H ; apply is_RInt_ext.",
            "VernacExtend",
            "6ba87b91ed36bd273ea6028505662b85e6ee38a8"
        ],
        [
            "now move => x _ ; rewrite opp_opp Ropp_involutive.",
            "VernacExtend",
            "36045468657dbf1c235f83bdd82b3dab5f23c635"
        ],
        [
            "by rewrite /minus opp_plus 2!opp_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_Chasles (f : R -> V) (a b c : R) (l1 l2 : V) : is_RInt f a b l1 -> is_RInt f b c l2 -> is_RInt f a c (plus l1 l2).",
            "VernacStartTheoremProof",
            "d0c2ffe3a59f95b872a45268385d2f93d2f6fb27"
        ],
        [
            "wlog: a c l1 l2 / (a <= c) => [Hw | Hac].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Rle_lt_dec a c) => Hac.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(opp_opp (plus _ _)) opp_plus plus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_RInt_swap.",
            "VernacExtend",
            "747ca0468ad7c4db05f243f205d281332144cba2"
        ],
        [
            "apply Hw.",
            "VernacExtend",
            "8a661025dc679026191beb09fb44e1db1e042d6a"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_RInt_swap.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_RInt_swap.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Req_dec a b) => [ <- {b} | Hab'] H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterlim_locally_ball_norm => /= eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (proj1 (filterlim_locally_ball_norm _ _) H1 (pos_div_2 eps)) ; case => /= {H1} d1 H1.",
            "VernacExtend",
            "b4e327cc873ecdc13a60b7e54daf6b9b4f1df671"
        ],
        [
            "assert (pointed_subdiv (SF_nil a) /\\ SF_h (SF_nil (T := V) a) = Rmin a a /\\ last (SF_h (SF_nil (T := V) a)) (unzip1 (SF_t (SF_nil (T := V) a))) = Rmax a a).",
            "VernacExtend",
            "5b90eb23d8ab26a37ad0b3bb258a1ca29154001c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => i Hi ; by apply lt_n_O in Hi.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "rewrite /Rmin /Rmax ; by case: Rle_dec (Rle_refl a).",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "specialize (H1 (SF_nil a) (cond_pos d1) H) => {H d1}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Rminus_eq_0 sign_0 in H1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "assert (H := scal_zero_l (Riemann_sum f (SF_nil a))).",
            "VernacExtend",
            "4156b4cdf04c2e99185a9273b829cfaa2355c659"
        ],
        [
            "rewrite /ball_norm H /minus plus_zero_l in H1 => {H}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (proj1 (filterlim_locally_ball_norm _ _) H2 (pos_div_2 eps)) ; case => /= {H2} d2 H2.",
            "VernacExtend",
            "986b9ad89b1f448bdb4bd25959cb2dae27883a16"
        ],
        [
            "exists d2 => ptd Hstep Hptd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_lt_trans with (norm (minus (scal (sign (c - a)) (Riemann_sum f ptd)) l2) + norm (opp l1)).",
            "VernacExtend",
            "fcccc4a947226b29f9ce11810501ecc419eb5eea"
        ],
        [
            "apply Rle_trans with (2 := norm_triangle _ _).",
            "VernacExtend",
            "f01a2cc14fddb742d90767570c14bec12b3e1231"
        ],
        [
            "apply Req_le, f_equal.",
            "VernacExtend",
            "611305432bb56a049c3263355c95dcb6f09bd9a0"
        ],
        [
            "rewrite /minus opp_plus -plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply f_equal, @plus_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (double_var eps) ; apply Rplus_lt_compat.",
            "VernacExtend",
            "68370f805bb00ad5628efdfec3fb6834ec7a64c7"
        ],
        [
            "by apply H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Req_dec b c) => [ <- | Hbc'] H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply filterlim_locally_ball_norm => /= eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (proj1 (filterlim_locally_ball_norm _ _) H2 (pos_div_2 eps)) ; case => /= {H2} d2 H2.",
            "VernacExtend",
            "986b9ad89b1f448bdb4bd25959cb2dae27883a16"
        ],
        [
            "assert (pointed_subdiv (SF_nil b) /\\ SF_h (SF_nil (T := V) b) = Rmin b b /\\ last (SF_h (SF_nil (T := V) b)) (unzip1 (SF_t (SF_nil (T := V) b))) = Rmax b b).",
            "VernacExtend",
            "96771f445a6b581ffbc30f43896bb5e646aca664"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => i Hi ; by apply lt_n_O in Hi.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "rewrite /Rmin /Rmax ; by case: Rle_dec (Rle_refl b).",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "specialize (H2 (SF_nil b) (cond_pos d2) H) => {H d2}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Rminus_eq_0 sign_0 in H2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "assert (H := scal_zero_l (Riemann_sum f (SF_nil a))).",
            "VernacExtend",
            "4156b4cdf04c2e99185a9273b829cfaa2355c659"
        ],
        [
            "rewrite /ball_norm H /minus plus_zero_l in H2 => {H}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (proj1 (filterlim_locally_ball_norm _ _) H1 (pos_div_2 eps)) ; case => /= {H1} d1 H1.",
            "VernacExtend",
            "b4e327cc873ecdc13a60b7e54daf6b9b4f1df671"
        ],
        [
            "exists d1 => ptd Hstep Hptd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_lt_trans with (norm (minus (scal (sign (b - a)) (Riemann_sum f ptd)) l1) + norm (opp l2)).",
            "VernacExtend",
            "f7f0684fe569e27ae0b37bd227b99da8e61509b0"
        ],
        [
            "apply Rle_trans with (2 := norm_triangle _ _).",
            "VernacExtend",
            "f01a2cc14fddb742d90767570c14bec12b3e1231"
        ],
        [
            "apply Req_le, f_equal.",
            "VernacExtend",
            "611305432bb56a049c3263355c95dcb6f09bd9a0"
        ],
        [
            "by rewrite /minus opp_plus -plus_assoc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (double_var eps) ; apply Rplus_lt_compat.",
            "VernacExtend",
            "68370f805bb00ad5628efdfec3fb6834ec7a64c7"
        ],
        [
            "by apply H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Req_dec a c) => Hac'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite -Hac' in H1 Hbc' H2 Hac |- * => {c Hac'}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply is_RInt_swap in H2.",
            "VernacExtend",
            "fe35ae1155f5af3fc6a866c9150cb63e6c3bcdbe"
        ],
        [
            "apply filterlim_locally_ball_norm => /= eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exists (mkposreal _ Rlt_0_1) => y Hstep Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Rminus_eq_0 sign_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "assert (H := scal_zero_l (Riemann_sum f y)).",
            "VernacExtend",
            "d984e7a17d24f9ee0bf18c3eb49e15d4a06f53ee"
        ],
        [
            "rewrite /ball_norm H /minus plus_zero_l opp_plus => {H y Hstep Hy}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (proj1 (filterlim_locally_ball_norm _ _) H1 (pos_div_2 eps)) ; case => /= {H1} d1 H1.",
            "VernacExtend",
            "b4e327cc873ecdc13a60b7e54daf6b9b4f1df671"
        ],
        [
            "generalize (proj1 (filterlim_locally_ball_norm _ _) H2 (pos_div_2 eps)) ; case => /= {H2} d2 H2.",
            "VernacExtend",
            "986b9ad89b1f448bdb4bd25959cb2dae27883a16"
        ],
        [
            "assert (exists y, seq_step (SF_lx y) < Rmin d1 d2 /\\ pointed_subdiv y /\\ SF_h y = Rmin a b /\\ last (SF_h y) (unzip1 (SF_t y)) = Rmax a b).",
            "VernacExtend",
            "1912cd754685aaa0e67d491b7dc684e1aed73d11"
        ],
        [
            "apply filter_ex.",
            "VernacExtend",
            "09969bb5c3e9f15104fb8cce9ea2168dd4ae11c1"
        ],
        [
            "exists (mkposreal _ (Rmin_stable_in_posreal d1 d2)) ; intros y0 H3 [H4 [H5 H6]].",
            "VernacExtend",
            "1bda70ef6879d3c955eb0caec06fcefedf036293"
        ],
        [
            "repeat (split => //=).",
            "VernacExtend",
            "d36194af035d418008b3fae8e9785d1af2d8af96"
        ],
        [
            "by apply H5.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H6.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: H => y [Hstep Hy].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "specialize (H1 _ (Rlt_le_trans _ _ _ Hstep (Rmin_l _ _)) Hy).",
            "VernacExtend",
            "f667458b935a35f64436c09b003b98f071553383"
        ],
        [
            "specialize (H2 _ (Rlt_le_trans _ _ _ Hstep (Rmin_r _ _)) Hy).",
            "VernacExtend",
            "db33a23a7b9a5a87938a8d69bb109427fb4ee9dd"
        ],
        [
            "rewrite (double_var eps).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /ball_norm -norm_opp /minus opp_plus opp_opp in H2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_lt_trans with (2 := Rplus_lt_compat _ _ _ _ H1 H2).",
            "VernacExtend",
            "d06b0196f16a3868a6b5cb69aa379aab00adb6c5"
        ],
        [
            "apply Rle_trans with (2 := norm_triangle _ _).",
            "VernacExtend",
            "f01a2cc14fddb742d90767570c14bec12b3e1231"
        ],
        [
            "apply Req_le, f_equal.",
            "VernacExtend",
            "611305432bb56a049c3263355c95dcb6f09bd9a0"
        ],
        [
            "rewrite plus_assoc /minus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (f_equal (fun x => plus x _)).",
            "VernacExtend",
            "e5bdffcab497f88a1ab54539befd19e2297fbd99"
        ],
        [
            "by rewrite plus_comm plus_assoc plus_opp_l plus_zero_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Rle_lt_dec a b) => Hab ; try (case: Hab => //= Hab) ; clear Hab' ; case: (Rle_lt_dec b c) => Hbc ; try (case: Hbc => //= Hbc) ; clear Hbc' ; try (case: Hac => //= Hac) ; clear Hac'.",
            "VernacExtend",
            "991ff75800d336259db32fae825173fd0ed4bbc3"
        ],
        [
            "by apply is_RInt_Chasles_0 with b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_RInt_swap in H2.",
            "VernacExtend",
            "fe35ae1155f5af3fc6a866c9150cb63e6c3bcdbe"
        ],
        [
            "rewrite -(opp_opp l2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply is_RInt_Chasles_1 with b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_RInt_swap in H1.",
            "VernacExtend",
            "64aa0daab1090200c67e8d68d51e4abd4bc64f58"
        ],
        [
            "rewrite -(opp_opp l1) plus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply is_RInt_Chasles_2 with b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "now contradict Hab ; apply Rle_not_lt, Rlt_le, Rlt_trans with c.",
            "VernacExtend",
            "a99718105dc22a24fa9a2210d894f803c1bce170"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_Chasles (f : R -> V) (a b c : R) : ex_RInt f a b -> ex_RInt f b c -> ex_RInt f a c.",
            "VernacStartTheoremProof",
            "15462348337943cbe6157406ce4bb5d18e77618c"
        ],
        [
            "intros [l1 H1] [l2 H2].",
            "VernacExtend",
            "57bbef9f7d6a9e91a62f910c0a85adc4ee3d46dd"
        ],
        [
            "exists (plus l1 l2).",
            "VernacExtend",
            "dc62b1263389a86dd39ad76510110c9e0b608d7f"
        ],
        [
            "by apply is_RInt_Chasles with b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_scal : forall (f : R -> V) (a b : R) (k : R) (If : V), is_RInt f a b If -> is_RInt (fun y => scal k (f y)) a b (scal k If).",
            "VernacStartTheoremProof",
            "a034d9a3d5284f408f77f6fdc8efd1049201a272"
        ],
        [
            "intros f a b k If Hf.",
            "VernacExtend",
            "af247dd44260d88b943b4819db92ab72366d19fc"
        ],
        [
            "apply filterlim_ext with (fun ptd => scal k (scal (sign (b - a)) (Riemann_sum f ptd))).",
            "VernacExtend",
            "42d0f5ee40f828d99f3c65ab62878d543611a6c6"
        ],
        [
            "intros ptd.",
            "VernacExtend",
            "a15e6ac8f2219c359da145da8f77015bc183cb25"
        ],
        [
            "rewrite Riemann_sum_scal.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite 2!scal_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (f_equal (fun x => scal x _)).",
            "VernacExtend",
            "917dc945971ee121b956f0848f6cee6ae19ec91b"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "apply filterlim_comp with (1 := Hf).",
            "VernacExtend",
            "209cf5da6d51c8d7df4d7d409f93566eeae11560"
        ],
        [
            "apply: filterlim_scal_r.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_scal : forall (f : R -> V) (a b : R) (k : R), ex_RInt f a b -> ex_RInt (fun y => scal k (f y)) a b.",
            "VernacStartTheoremProof",
            "5947a018ceaba53dfbdc78589935dc2cf462d230"
        ],
        [
            "intros f a b k [If Hf].",
            "VernacExtend",
            "84e3bf7594b25a0f0cb6d1314f097b14bae697f4"
        ],
        [
            "exists (scal k If).",
            "VernacExtend",
            "282ec9b35a7bad249a26cc98d5d7b639b2403616"
        ],
        [
            "now apply is_RInt_scal.",
            "VernacExtend",
            "1ac4cb8c33dbd8178aec024da02e8515b418ddd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_opp : forall (f : R -> V) (a b : R) (If : V), is_RInt f a b If -> is_RInt (fun y => opp (f y)) a b (opp If).",
            "VernacStartTheoremProof",
            "e5dcbd0207774f7856694a0b283d26f99fccc06f"
        ],
        [
            "intros f a b If Hf.",
            "VernacExtend",
            "d8904d19bc6482b9b089ff0d30af6899bb2aee91"
        ],
        [
            "apply filterlim_ext with (fun ptd => (scal (opp 1) (scal (sign (b - a)) (Riemann_sum f ptd)))).",
            "VernacExtend",
            "9067ea4f46a71bac44e302993b4a32d434d3fa78"
        ],
        [
            "intros ptd.",
            "VernacExtend",
            "a15e6ac8f2219c359da145da8f77015bc183cb25"
        ],
        [
            "rewrite Riemann_sum_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite scal_opp_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sym_eq, scal_opp_r.",
            "VernacExtend",
            "1e165b9628add2ef384e7b74654aab5ce36727bb"
        ],
        [
            "apply filterlim_comp with (1 := Hf).",
            "VernacExtend",
            "209cf5da6d51c8d7df4d7d409f93566eeae11560"
        ],
        [
            "rewrite -(scal_opp_one If).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: filterlim_scal_r.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_opp : forall (f : R -> V) (a b : R), ex_RInt f a b -> ex_RInt (fun x => opp (f x)) a b.",
            "VernacStartTheoremProof",
            "0eaa60addb2fe1a6c7fe39d589337c001a60f916"
        ],
        [
            "intros f a b [If Hf].",
            "VernacExtend",
            "25283180315704f655ab21982ca1d30bb73af4d5"
        ],
        [
            "exists (opp If).",
            "VernacExtend",
            "b6e34294998db212a83307baeb1cbea8290c0208"
        ],
        [
            "now apply is_RInt_opp.",
            "VernacExtend",
            "50e812791d898ce12d1bacd49babd6624d888270"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_plus : forall (f g : R -> V) (a b : R) (If Ig : V), is_RInt f a b If -> is_RInt g a b Ig -> is_RInt (fun y => plus (f y) (g y)) a b (plus If Ig).",
            "VernacStartTheoremProof",
            "cd3dbd2131188e58daeafd6b7d444a93a400cb90"
        ],
        [
            "intros f g a b If Ig Hf Hg.",
            "VernacExtend",
            "16f72297ddea44e0760e1fcd207928d03e1031b4"
        ],
        [
            "apply filterlim_ext with (fun ptd => (plus (scal (sign (b - a)) (Riemann_sum f ptd)) (scal (sign (b - a)) (Riemann_sum g ptd)))).",
            "VernacExtend",
            "aeee0acc3f58624763f3a544c13ccde712a8bf43"
        ],
        [
            "intros ptd.",
            "VernacExtend",
            "a15e6ac8f2219c359da145da8f77015bc183cb25"
        ],
        [
            "rewrite Riemann_sum_plus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sym_eq, @scal_distr_l.",
            "VernacExtend",
            "5bcc63ec0ec903fdfd7fe3cce23d9b37860c2d76"
        ],
        [
            "apply filterlim_comp_2 with (1 := Hf) (2 := Hg).",
            "VernacExtend",
            "90f14116174fa2f5c8bba0fb9475ab5a74463bdf"
        ],
        [
            "apply: filterlim_plus.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_plus : forall (f g : R -> V) (a b : R), ex_RInt f a b -> ex_RInt g a b -> ex_RInt (fun y => plus (f y) (g y)) a b.",
            "VernacStartTheoremProof",
            "5254b2de67b701f327e46df49b1b156562436d60"
        ],
        [
            "intros f g a b [If Hf] [Ig Hg].",
            "VernacExtend",
            "5c851d5936a781ec09ccb189f129c394e9805509"
        ],
        [
            "exists (plus If Ig).",
            "VernacExtend",
            "625f87977f8b903225ac4060408068a4ab91fd3f"
        ],
        [
            "now apply is_RInt_plus.",
            "VernacExtend",
            "323152cdbc67baee4ed2d5904f51ee7f45ac38dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_minus : forall (f g : R -> V) (a b : R) (If Ig : V), is_RInt f a b If -> is_RInt g a b Ig -> is_RInt (fun y => minus (f y) (g y)) a b (minus If Ig).",
            "VernacStartTheoremProof",
            "35db92c4400d6e706a22b83fda7d4d55316b5af2"
        ],
        [
            "intros f g a b If Ig Hf Hg.",
            "VernacExtend",
            "16f72297ddea44e0760e1fcd207928d03e1031b4"
        ],
        [
            "apply filterlim_ext with (fun ptd => (plus (scal (sign (b - a)) (Riemann_sum f ptd)) (scal (opp 1) (scal (sign (b - a)) (Riemann_sum g ptd))))).",
            "VernacExtend",
            "7085fae8dda64584df200f1eadb24628f06033b6"
        ],
        [
            "intros ptd.",
            "VernacExtend",
            "a15e6ac8f2219c359da145da8f77015bc183cb25"
        ],
        [
            "rewrite Riemann_sum_minus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "unfold minus.",
            "VernacExtend",
            "eaede5182dbc40e4f7fe412bffb3a50f68f73568"
        ],
        [
            "rewrite scal_opp_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -scal_opp_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sym_eq, @scal_distr_l.",
            "VernacExtend",
            "5bcc63ec0ec903fdfd7fe3cce23d9b37860c2d76"
        ],
        [
            "eapply filterlim_comp_2 with (1 := Hf).",
            "VernacExtend",
            "b82051f70b42e3d62cd02d47a572f720c032d3de"
        ],
        [
            "apply filterlim_comp with (1 := Hg).",
            "VernacExtend",
            "fce81c20e6f839822729c5e222296ffbd9200abf"
        ],
        [
            "eapply @filterlim_scal_r.",
            "VernacExtend",
            "66fbe5e0fa72938ede1b98b0eb18bde5fdbe8103"
        ],
        [
            "rewrite scal_opp_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: filterlim_plus.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_minus : forall (f g : R -> V) (a b : R), ex_RInt f a b -> ex_RInt g a b -> ex_RInt (fun y => minus (f y) (g y)) a b.",
            "VernacStartTheoremProof",
            "31b3e231bffb2b9f838cb07d1266f9d4b0b991dc"
        ],
        [
            "intros f g a b [If Hf] [Ig Hg].",
            "VernacExtend",
            "5c851d5936a781ec09ccb189f129c394e9805509"
        ],
        [
            "exists (minus If Ig).",
            "VernacExtend",
            "ea7b9fc93b5c77cc4b5325b866d308de2b74e79a"
        ],
        [
            "now apply is_RInt_minus.",
            "VernacExtend",
            "225eab513980d389b7a3ee5b1a6eaf3468419baf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End is_RInt.",
            "VernacEndSegment",
            "c0e708546b435a079f726709c2c1a3751630aeb0"
        ],
        [
            "Lemma ex_RInt_Chasles_1 {V : CompleteNormedModule R_AbsRing} (f : R -> V) (a b c : R) : a <= b <= c -> ex_RInt f a c -> ex_RInt f a b.",
            "VernacStartTheoremProof",
            "f9adcbf524741c9669952ba3bd554e0396a9721c"
        ],
        [
            "intros [Hab Hbc] If.",
            "VernacExtend",
            "e405470856da564b1478cb014146402ff1c8a6cb"
        ],
        [
            "case: Hab => [Hab | <- ].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "2: by apply ex_RInt_point.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "assert (H1 := filterlim_locally_cauchy (F := (Riemann_fine a b)) (fun ptd : SF_seq => scal (sign (b - a)) (Riemann_sum f ptd))).",
            "VernacExtend",
            "179bebd797d1609d252bed7e0797ad2e00f8477b"
        ],
        [
            "apply H1 ; clear H1.",
            "VernacExtend",
            "1fac79bcd43acc188f570a903023e6bca1a58c38"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "set (M := @norm_factor _ V).",
            "VernacExtend",
            "b1148d82e767a40b269f66a788eefc9afa99335b"
        ],
        [
            "assert (He : 0 < eps / M).",
            "VernacExtend",
            "2567d659c684e72c5d5a0206c037c60fc0432187"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply norm_factor_gt_0.",
            "VernacExtend",
            "c21e5c842b3a171fd394566edf1ef5867669763c"
        ],
        [
            "assert (H1 := proj2 (filterlim_locally_cauchy (F := (Riemann_fine a c)) (fun ptd : SF_seq => scal (sign (c - a)) (Riemann_sum f ptd)))).",
            "VernacExtend",
            "ec86cff12aa7d061f205fc76079dcc6670cd4842"
        ],
        [
            "destruct (H1 If (mkposreal _ He)) as [P [[alpha HP] H2]] ; clear If H1 ; rename H2 into If.",
            "VernacExtend",
            "c35c51b5d827de7a461792668a16eac369d4cbf5"
        ],
        [
            "destruct (filter_ex (F := Riemann_fine b c) (fun y => seq_step (SF_lx y) < alpha /\\ pointed_subdiv y /\\ SF_h y = Rmin b c /\\ seq.last (SF_h y) (SF_lx y) = Rmax b c)) as [y' Hy'].",
            "VernacExtend",
            "2e5e7a443bbaeb02aad90cad95799910d1d801c5"
        ],
        [
            "by exists alpha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (fun y => P (SF_cat y y') /\\ last (SF_h y) (SF_lx y) = Rmax a b) ; split.",
            "VernacExtend",
            "f342cc244735a3674a5f6af7b57ad9c7a440292c"
        ],
        [
            "exists alpha ; intros.",
            "VernacExtend",
            "181938cb9acd7775d36efcf66a37494caa00121f"
        ],
        [
            "assert (last 0 (SF_lx y) = head 0 (SF_lx y')).",
            "VernacExtend",
            "f9646c6c8357aee1a092c6dd1d7c4df9fb1d93a3"
        ],
        [
            "simpl in H0, Hy' |- *.",
            "VernacExtend",
            "16a2c710fb724dc540182af4965b34ecb8537727"
        ],
        [
            "rewrite (proj1 (proj2 (proj2 Hy'))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (proj2 (proj2 H0)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /Rmin ; case: Rle_dec => // _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply HP ; intuition.",
            "VernacExtend",
            "05852d0e747bf85d99a7be10a90df11d165245a7"
        ],
        [
            "rewrite SF_lx_cat seq_step_cat.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rmax_case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply SF_cat_pointed => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite H3 /Rmin ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case: Rle_dec (Rlt_le _ _ (Rlt_le_trans _ _ _ Hab Hbc)) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite SF_last_cat // H8.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case: Rle_dec (Rlt_le _ _ (Rlt_le_trans _ _ _ Hab Hbc)) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "specialize (If _ _ (proj1 H) (proj1 H0)).",
            "VernacExtend",
            "3fbc994217af0f9be8e3828c8c9fd80a92c69d74"
        ],
        [
            "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
            "VernacExtend",
            "fca02487127bf9775753594d7fee9b399ab3dff1"
        ],
        [
            "rewrite -> sign_eq_1 in If by now apply Rlt_Rminus, Rlt_le_trans with b.",
            "VernacExtend",
            "de566218ad34acf6f584ad73eddca3061ca078ca"
        ],
        [
            "apply: norm_compat1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "eapply Rlt_le_trans.",
            "VernacExtend",
            "bdafc71d9925d26027c5427e9077cdbbfdc3ee27"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "2: apply norm_compat2 with (1 := If).",
            "VernacExtend",
            "a602f75b921d642ff3db667ee45502bd8fa696cd"
        ],
        [
            "apply Req_le, f_equal.",
            "VernacExtend",
            "611305432bb56a049c3263355c95dcb6f09bd9a0"
        ],
        [
            "rewrite !scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: H => _ ; case: H0 => _ ; clear ; intros.",
            "VernacExtend",
            "ddf6dafdcb8df4763e146c282d74ca47a6cf151e"
        ],
        [
            "rewrite -b1 in b0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: v u b0 y' {b1}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply (SF_cons_ind (fun v => forall u : SF_seq, last (SF_h v) (SF_lx v) = last (SF_h u) (SF_lx u) -> forall y' : SF_seq, minus (Riemann_sum f v) (Riemann_sum f u) = minus (Riemann_sum f (SF_cat v y')) (Riemann_sum f (SF_cat u y')))) => [v0 | v0 v IH u Huv y].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (SF_cons_ind (fun u => last (SF_h (SF_nil v0)) (SF_lx (SF_nil v0)) = last (SF_h u) (SF_lx u) -> forall y' : SF_seq, minus (Riemann_sum f (SF_nil v0)) (Riemann_sum f u) = minus (Riemann_sum f (SF_cat (SF_nil v0) y')) (Riemann_sum f (SF_cat u y')))) => [u0 /= Huv | u0 u IH Huv y].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (SF_cons_ind (fun y' : SF_seq => minus (Riemann_sum f (SF_nil v0)) (Riemann_sum f (SF_nil u0)) = minus (Riemann_sum f (SF_cat (SF_nil v0) y')) (Riemann_sum f (SF_cat (SF_nil u0) y')))) => [y0 | y0 y IH].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl in Huv.",
            "VernacExtend",
            "5a1a3cce075089595ea2ce54bb69980bb153a1e6"
        ],
        [
            "rewrite Huv /SF_cat /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (Riemann_sum_cons _ (u0,snd y0)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /minus opp_plus (plus_comm (scal _ _)) -plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now rewrite (plus_assoc (scal _ _)) !plus_opp_r plus_zero_l plus_opp_r.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite -SF_cons_cat !Riemann_sum_cons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /minus !opp_plus !(plus_comm (opp (scal _ _))) !plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -!/(minus _ _) -IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -SF_cons_cat !Riemann_sum_cons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /minus -!plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -!/(minus _ _) -IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "fold M.",
            "VernacExtend",
            "0fc0c5dc58ee8041d50d73313da218b8d7ecef70"
        ],
        [
            "apply Req_le ; simpl ; field.",
            "VernacExtend",
            "62ebdcf2986467736645409950d1800935a4942d"
        ],
        [
            "by apply Rgt_not_eq, norm_factor_gt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_Chasles_2 {V : CompleteNormedModule R_AbsRing} (f : R -> V) (a b c : R) : a <= b <= c -> ex_RInt f a c -> ex_RInt f b c.",
            "VernacStartTheoremProof",
            "ea9887c627cb46a1c15b65d465c57579f21e93df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite -(Ropp_involutive a) -(Ropp_involutive c) in H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply ex_RInt_comp_opp in H0.",
            "VernacExtend",
            "c1c3dfe7c65f29aa1d2df786bce71b8c721a2894"
        ],
        [
            "apply ex_RInt_swap in H0.",
            "VernacExtend",
            "19077463744f6611ed19dab5ec4be5a3de4713e1"
        ],
        [
            "eapply ex_RInt_Chasles_1 in H0.",
            "VernacExtend",
            "0931d7553ba659553f7f2718c9e45cbbd7af6f31"
        ],
        [
            "apply ex_RInt_comp_opp in H0.",
            "VernacExtend",
            "c1c3dfe7c65f29aa1d2df786bce71b8c721a2894"
        ],
        [
            "apply ex_RInt_swap in H0.",
            "VernacExtend",
            "19077463744f6611ed19dab5ec4be5a3de4713e1"
        ],
        [
            "move: H0 ; apply ex_RInt_ext => x _.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite opp_opp Ropp_involutive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split ; apply Ropp_le_contravar ; apply H.",
            "VernacExtend",
            "499042287cbd738d9432eef1549a63fb8b2f12ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_inside {V : CompleteNormedModule R_AbsRing} : forall (f : R -> V) (a b x e : R), ex_RInt f (x-e) (x+e) -> Rabs (a-x) <= e -> Rabs (b-x) <= e -> ex_RInt f a b.",
            "VernacStartTheoremProof",
            "574bf31fbc45c027e36ba5a7815887dda815b613"
        ],
        [
            "intros f a b x e Hf Ha Hb.",
            "VernacExtend",
            "4f882ab0bc75f8ed1e6c0628ca3ca34063478f40"
        ],
        [
            "wlog: a b Ha Hb / (a <= b) => [Hw | Hab].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case (Rle_or_lt a b); intros H.",
            "VernacExtend",
            "c9ec44647471b13a3ec080d83c62e0a1ee107cc0"
        ],
        [
            "now apply Hw.",
            "VernacExtend",
            "2ed5659bd12b3902c98ca802731515ab0621d5cf"
        ],
        [
            "apply ex_RInt_swap.",
            "VernacExtend",
            "89c0ce32c33068aab97da96f72c393050e6d66fd"
        ],
        [
            "apply Hw; try easy.",
            "VernacExtend",
            "274a67644227ce167473890f2b29696edce94a39"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "apply (ex_RInt_Chasles_1 f a b) with (x+e).",
            "VernacExtend",
            "30da1166ad6ddcecfad9a7e9450eeab4e869b0c0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact Hab.",
            "VernacExtend",
            "f3d0f5752a150a91e25c080a5fc3ae0ed192bc4f"
        ],
        [
            "assert (x-e <= b <= x+e) by now apply Rabs_le_between'.",
            "VernacExtend",
            "8a2822433879bb998d98eb9c4d2a999f2e2dd049"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply ex_RInt_Chasles_2 with (x-e).",
            "VernacExtend",
            "65150dc79ad7ce0b392a896d1fabb56dc303f518"
        ],
        [
            "now apply Rabs_le_between'.",
            "VernacExtend",
            "1d4657e8b7b1811ac5b690fde586e513cf7b67dc"
        ],
        [
            "exact Hf.",
            "VernacExtend",
            "e25e6849230bea1fb4d4eb83c79000be517c04a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filterlim_RInt {U} {V : CompleteNormedModule R_AbsRing} : forall (f : U -> R -> V) (a b : R) F (FF : ProperFilter F) g h, (forall x, is_RInt (f x) a b (h x)) -> (filterlim f F (locally g)) -> exists If, filterlim h F (locally If) /\\ is_RInt g a b If.",
            "VernacStartTheoremProof",
            "c9e17ac212a5a6dc8678bc3733608c224cdf6046"
        ],
        [
            "intros f a b F FF g h Hfh Hfg.",
            "VernacExtend",
            "cf50a8c998db60effeaf72485289205898e5c5ce"
        ],
        [
            "wlog: a b h Hfh / (a <= b) => [Hw | Hab].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_lt_dec a b) => Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct (Hw b a (fun x => opp (h x))) as [If [Hfh' Hfg']].",
            "VernacExtend",
            "1b45b31b8a3a7f3167f620e995f65e6b9254af2c"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "by apply @is_RInt_swap.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (opp If) ; split.",
            "VernacExtend",
            "3d1d3f1b65e97e9fc3a90b5ea5328363b4ab8183"
        ],
        [
            "apply filterlim_ext with (fun x => opp (opp (h x))).",
            "VernacExtend",
            "a217b6be13f4dd1865195414cc15d1722ba939c3"
        ],
        [
            "move => x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply opp_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply (filterlim_comp _ _ _ (fun x => opp (h x)) opp).",
            "VernacExtend",
            "12b4ec121c33c7e870b2ab12e4bcaad4b5d31088"
        ],
        [
            "by apply Hfh'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "now generalize (filterlim_opp If).",
            "VernacExtend",
            "1bd6c9c96a6063e6a147a20a0d899a79731990b3"
        ],
        [
            "by apply @is_RInt_swap.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Hab => Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "destruct (fun FF2 HF2 => filterlim_switch_dom F FF (locally_dist (fun ptd : SF_seq.SF_seq => SF_seq.seq_step (SF_seq.SF_lx ptd))) FF2 (fun ptd : SF_seq.SF_seq => SF_seq.pointed_subdiv ptd /\\ SF_seq.SF_h ptd = Rmin a b /\\ seq.last (SF_seq.SF_h ptd) (SF_seq.SF_lx ptd) = Rmax a b) HF2 (fun (x : U) ptd => scal (sign (b - a)) (Riemann_sum (f x) ptd)) (fun ptd => scal (sign (b - a)) (Riemann_sum g ptd)) h) as [If [Hh Hg]].",
            "VernacExtend",
            "47f559791f862235714368303595c623f90c935c"
        ],
        [
            "by apply locally_dist_filter.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros P [eP HP].",
            "VernacExtend",
            "f383576871764236a452a9e0aea0a9e04b60cb2a"
        ],
        [
            "assert (Hn : 0 <= ((b - a) / eP)).",
            "VernacExtend",
            "1055dd4c8e95d5216b290504337aa2e0939da2fd"
        ],
        [
            "apply Rdiv_le_0_compat.",
            "VernacExtend",
            "693e22205d4e08285736e8c5e96457827d9a8003"
        ],
        [
            "apply -> Rminus_le_0.",
            "VernacExtend",
            "eb3010996ade724f542511d5c9a56441498f4fba"
        ],
        [
            "apply Rlt_le, Hab.",
            "VernacExtend",
            "36ed886166bb137db610f28d6f4f55b850c611b5"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "set n := (nfloor _ Hn).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists (SF_seq.SF_seq_f2 (fun x y => x) (SF_seq.unif_part (Rmin a b) (Rmax a b) n)).",
            "VernacExtend",
            "c5d8968c8b10fb4a95f935211817e1b8cfd74d7b"
        ],
        [
            "destruct (Riemann_fine_unif_part (fun x y => x) a b n).",
            "VernacExtend",
            "8506a3f4ec937c36b11a0d7a98084f9452d97060"
        ],
        [
            "intros u v Huv.",
            "VernacExtend",
            "c59a5590067caf30f060cb4ee9822eca158778e8"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "exact Huv.",
            "VernacExtend",
            "80a538f09eff8e8adb82553ad067398e9f6557a4"
        ],
        [
            "now apply Rlt_le, Hab.",
            "VernacExtend",
            "2cf690611cc23e09b8dd11582979e2f3dcfe5b0c"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "apply Rle_lt_trans with (1 := H).",
            "VernacExtend",
            "790f8088dd95dc3479d6aacd82345a55d22040af"
        ],
        [
            "apply Rlt_div_l.",
            "VernacExtend",
            "4198c2770a4c425c9ede77a90e885e8d7fd9f290"
        ],
        [
            "apply INRp1_pos.",
            "VernacExtend",
            "6d8a33bc49ba04ed52b7fbeba70394e66163cebe"
        ],
        [
            "unfold n, nfloor.",
            "VernacExtend",
            "c6098d294bc13be32e9f174d47f32d1466dd8088"
        ],
        [
            "destruct nfloor_ex as [n' Hn'].",
            "VernacExtend",
            "9b13b0ede1797d2ee044a8536296ec7f1c157e86"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_div_l.",
            "VernacExtend",
            "4198c2770a4c425c9ede77a90e885e8d7fd9f290"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Hn'.",
            "VernacExtend",
            "065665c7b826721bd7b9fc2408982b5fed908cf1"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "2: by apply Hfh.",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "set (M := @norm_factor _ V).",
            "VernacExtend",
            "b1148d82e767a40b269f66a788eefc9afa99335b"
        ],
        [
            "intros P [eps HP].",
            "VernacExtend",
            "7724fc0c4f9593d55b17b85cc4dfb21ca70833c1"
        ],
        [
            "have He: 0 < (eps / (b - a)) / (2 * M).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -Rminus_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply norm_factor_gt_0.",
            "VernacExtend",
            "c21e5c842b3a171fd394566edf1ef5867669763c"
        ],
        [
            "generalize (Hfg _ (locally_ball g (mkposreal _ He))) => {Hfg Hfh}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "unfold filtermap ; apply filter_imp => x Hx.",
            "VernacExtend",
            "7180f0c337d390d1a81ab747c006a2bb2e7a0946"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "case => t [Ht [Ha Hb]] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
            "VernacExtend",
            "fca02487127bf9775753594d7fee9b399ab3dff1"
        ],
        [
            "rewrite 2!scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: norm_compat1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "generalize (Riemann_sum_minus (f x) g t) => <-.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "refine (_ (Riemann_sum_norm (fun x0 : R => minus (f x x0) (g x0)) (fun _ => M * ((eps / (b - a)) / (2 * M))) t Ht _)).",
            "VernacExtend",
            "c855070644be471c4965eeb431524177b5d884d3"
        ],
        [
            "move => H ; apply Rle_lt_trans with (1 := H).",
            "VernacExtend",
            "e117b8da0aca6bf0c96e10a64479c08d8f04af9d"
        ],
        [
            "rewrite Riemann_sum_const.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Hb Ha.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace ((b - a) * (M * ((eps / (b - a)) / (2 * M)))) with (eps / 2).",
            "VernacExtend",
            "82ddc6260403f23dbcf31d2c9b82c4b31bfc8573"
        ],
        [
            "rewrite {2}(double_var eps) -{1}(Rplus_0_l (eps / 2)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply Rlt_gt.",
            "VernacExtend",
            "e34ddef003ac82796fe0271c6208421472fc39e2"
        ],
        [
            "by rewrite -Rminus_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "apply norm_factor_gt_0.",
            "VernacExtend",
            "c21e5c842b3a171fd394566edf1ef5867669763c"
        ],
        [
            "intros t0 Ht0.",
            "VernacExtend",
            "77e5c73ca1d10996f368caa595bc5ca5f0e30d21"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply (norm_compat2 _ _ (mkposreal _ He) (Hx t0)).",
            "VernacExtend",
            "54fb890dad1ddc0cede1d9311b947d91122594dc"
        ],
        [
            "exists If ; split.",
            "VernacExtend",
            "b1e5902300dbe9fca5e07d2030f8a2f59a193f0f"
        ],
        [
            "by apply Hh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists zero.",
            "VernacExtend",
            "97051b1c4ee7ca02d3f0535c1f0318b711f86eda"
        ],
        [
            "rewrite -Hab in Hfh |- * => {b Hab}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply filterlim_ext with (fun _ => zero).",
            "VernacExtend",
            "a1e81284291e0dacd3b8c59a9601be671eaad83a"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply filterlim_locally_unique with (2 := Hfh x).",
            "VernacExtend",
            "8aba6fdf8c0843ca36876ce8d53ee7b60d53f20c"
        ],
        [
            "apply is_RInt_point.",
            "VernacExtend",
            "c5caf530fa3586239405dbbe22a8e7c8cdd1850d"
        ],
        [
            "apply filterlim_const.",
            "VernacExtend",
            "ff971edf84d1cf6e134869f4729acc40969816e1"
        ],
        [
            "apply is_RInt_point.",
            "VernacExtend",
            "c5caf530fa3586239405dbbe22a8e7c8cdd1850d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section StepFun.",
            "VernacBeginSection",
            "efdff058bda9ddde26cf08f33c5234c7c50b389d"
        ],
        [
            "Context {V : NormedModule R_AbsRing}.",
            "VernacContext",
            "5d56ede25ce8804229ff69d29b81c4721f84018a"
        ],
        [
            "Lemma is_RInt_SF (f : R -> V) (s : SF_seq) : SF_sorted Rle s -> let a := SF_h s in let b := last (SF_h s) (unzip1 (SF_t s)) in is_RInt (SF_fun (SF_map f s) zero) a b (Riemann_sum f s).",
            "VernacStartTheoremProof",
            "693f750eaa78b4093406ddebee47e3636b6693ad"
        ],
        [
            "apply SF_cons_ind with (s := s) => {s} [ x0 | x0 s IH] Hsort a b.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Riemann_sum_zero //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply is_RInt_point.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Riemann_sum_cons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_RInt_Chasles with (SF_h s).",
            "VernacExtend",
            "6d3000a684b7bb950bb3bcc355f2b4a90e44870c"
        ],
        [
            "move: (proj1 Hsort) ; unfold a ; clear IH Hsort a b ; simpl => Hab.",
            "VernacExtend",
            "9dc59dd3b86fb4ce7a807cd43c1b47717165d5d5"
        ],
        [
            "eapply is_RInt_ext, is_RInt_const.",
            "VernacExtend",
            "e3f577cfdc22cd177b7b00c6fce898442f4051da"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec => // _ x Hx.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "unfold SF_fun ; simpl.",
            "VernacExtend",
            "7d550aecebede3ed84f88fe697d51a71d4179bf7"
        ],
        [
            "case: Rlt_dec => //= H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict H ; apply Rle_not_lt, Rlt_le, Hx.",
            "VernacExtend",
            "6a4d48262a9a1f8371c60aa31f259931cfb6e674"
        ],
        [
            "move: Hab Hx ; apply SF_cons_dec with (s := s) => {s} /= [x1 | x1 s] Hab Hx.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "case: Rle_dec (Rlt_le _ _ (proj2 Hx)) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rlt_dec (proj2 Hx) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply is_RInt_ext, IH.",
            "VernacExtend",
            "648002d30618f241dfdb2ac46402499c22c602b2"
        ],
        [
            "clear a IH.",
            "VernacExtend",
            "0c5503dedb3a94f4d658146e10080e8fda2cb7cc"
        ],
        [
            "revert b ; simpl.",
            "VernacExtend",
            "3f215c098b7c4cd270e46009394336e8ee3d936b"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec => // Hab x Hx.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /SF_fun /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rlt_dec => /= Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict Hx0.",
            "VernacExtend",
            "ee37c8a39e119865a14ea707ef84d51e6c42b16e"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "eapply Rle_trans, Rlt_le, Hx.",
            "VernacExtend",
            "1b6bfd4cd2e64d87438e03c7fda1e656eb034844"
        ],
        [
            "by apply Hsort.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: Hab Hx Hsort ; apply SF_cons_dec with (s := s) => {s} [x1 | x1 s] //= Hab Hx Hsort.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "case: Hx => H H'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict H' ; by apply Rle_not_lt, Rlt_le.",
            "VernacExtend",
            "43042460e42a309a80e4a8fb22aeca4a030c3671"
        ],
        [
            "case: Rlt_dec => //= H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict H ; by apply Rle_not_lt, Rlt_le, Hx.",
            "VernacExtend",
            "3c26dcba9e578f112cb42e360e20b3fb78a8b9cf"
        ],
        [
            "contradict Hab.",
            "VernacExtend",
            "d531e774813f18ac4f672077f0bb7af0e9083a7d"
        ],
        [
            "apply (sorted_last ((SF_h s) :: (unzip1 (SF_t s))) O (proj2 Hsort) (lt_O_Sn _) (SF_h s)).",
            "VernacExtend",
            "c3c798b5932e36146cc5be847fc833432e68b073"
        ],
        [
            "by apply Hsort.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_SF (f : R -> V) (s : SF_seq) : SF_sorted Rle s -> let a := SF_h s in let b := last (SF_h s) (unzip1 (SF_t s)) in ex_RInt (SF_fun (SF_map f s) zero) a b.",
            "VernacStartTheoremProof",
            "1223caecca04d4f4023a007c310370ad97fd7151"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "by apply is_RInt_SF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End StepFun.",
            "VernacEndSegment",
            "161565c2205c9479a062563e64520e804e4d5e8b"
        ],
        [
            "Lemma ex_RInt_continuous {V : CompleteNormedModule R_AbsRing} (f : R -> V) (a b : R) : (forall z, Rmin a b <= z <= Rmax a b -> continuous f z) -> ex_RInt f a b.",
            "VernacStartTheoremProof",
            "3d43f0cc5c99d15b7c82de1bf0513a6d4de089bd"
        ],
        [
            "wlog: f / (forall z : R, continuous f z) => [ Hw Cf | Cf _ ].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct (C0_extension_le f (Rmin a b) (Rmax a b)) as [g [Cg Hg]].",
            "VernacExtend",
            "704321570840bad624ff73ee81141bc17dfb48cf"
        ],
        [
            "by apply Cf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_RInt_ext with g.",
            "VernacExtend",
            "f17936e0c6dd8bfbfd484a3b96ff3cfc762bcb23"
        ],
        [
            "intros x Hx ; apply Hg ; split ; apply Rlt_le ; apply Hx.",
            "VernacExtend",
            "ed532e9ddffc5462b006d22eccf99b23972558dc"
        ],
        [
            "apply Hw => // z _ ; by apply Cg.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "wlog: a b / (a < b) => [Hw | Hab].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_lt_dec a b) => Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Hab => Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hab ; by apply ex_RInt_point.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply ex_RInt_swap.",
            "VernacExtend",
            "89c0ce32c33068aab97da96f72c393050e6d66fd"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (H := unifcont_normed_1d f a b (fun x Hx => Cf x)).",
            "VernacExtend",
            "93cc2a2b4804cb8de28d1cedf5055cc973effa71"
        ],
        [
            "set n := fun eps => proj1_sig (seq_step_unif_part_ex a b (proj1_sig (H eps))).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set s := fun eps => (SF_seq_f2 (fun x y => ((x+y)/2)%R) (unif_part a b (n eps))).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set (f_eps := fun eps => fun x => match (Rle_dec a x) with | left _ => match (Rle_dec x b) with | left _ => SF_fun (SF_map f (s eps)) zero x | right _ => f x end | right _ => f x end).",
            "VernacExtend",
            "ca651782a40fd4fc3c139063a1812b930b8ae038"
        ],
        [
            "set F := fun (P : posreal -> Prop) => exists eps : posreal, forall x : posreal, x < eps -> P x.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set If_eps := fun eps => Riemann_sum f (s eps).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "assert (FF : ProperFilter F).",
            "VernacExtend",
            "021d4acccb8b7b5f889a0577b49d2a555d17ea13"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (forall P, F P <-> at_right 0 (fun x => 0 < x /\\ forall Hx, P (mkposreal x Hx))).",
            "VernacExtend",
            "1a2c54b651b76fb039f627bf0e800992b2ac53cd"
        ],
        [
            "split ; intros [e He].",
            "VernacExtend",
            "7fb6f45ea78c7adfa7dde9b9c638bb651e4ee131"
        ],
        [
            "exists e => y Hy H0 ; split => //.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "move => {H0} H0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "eapply Rle_lt_trans, Hy.",
            "VernacExtend",
            "5d7b9881fa7bedfd08a0475ca10bafb618d939dd"
        ],
        [
            "rewrite minus_zero_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Req_le, sym_eq, Rabs_pos_eq, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists e ; intros [ y H0] Hy.",
            "VernacExtend",
            "50131665446c95b8618b0655b2459e6779e8d7cf"
        ],
        [
            "apply He.",
            "VernacExtend",
            "18c2a1fef64f9cbf0d79d376e6910aa33bebafb1"
        ],
        [
            "apply Rabs_lt_between.",
            "VernacExtend",
            "e6f85b3aaad12ae4c778c49c79154f50d9d4fdb3"
        ],
        [
            "rewrite minus_zero_r ; split.",
            "VernacExtend",
            "f4b7ef80d95d0131def61ae7f69c6275a20261d3"
        ],
        [
            "eapply Rlt_trans, H0.",
            "VernacExtend",
            "d78e571192a320203e919849bfb173ca95704197"
        ],
        [
            "rewrite -Ropp_0 ; apply Ropp_lt_contravar, e.",
            "VernacExtend",
            "74365c0092a4b21c0bb89ea78247686d98d973bf"
        ],
        [
            "by apply Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (at_right_proper_filter 0) => H1 H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros P HP.",
            "VernacExtend",
            "55e2f4eebfad5cc358bd93712ab9be7674f934e9"
        ],
        [
            "apply H0 in HP.",
            "VernacExtend",
            "8f0a0c42317da9de2b493ea8af2a28a18e5edd9a"
        ],
        [
            "destruct (H1 _ HP) as [x [Hx Px]].",
            "VernacExtend",
            "6c58b1e2ab05f7140c6f6f4b3e4b313c3a244fcf"
        ],
        [
            "by exists (mkposreal x Hx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct H2 ; split.",
            "VernacExtend",
            "b61b9c1b130f25cd04c9ff7dc160dfb1a27d06e2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by exists (mkposreal _ Rlt_0_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "eapply filter_imp.",
            "VernacExtend",
            "bf3d126874cf320edb00f681aadb1db062bce3fd"
        ],
        [
            "2: apply filter_and ; apply H0.",
            "VernacExtend",
            "fa64018295662707de1bbd45a63e4db7dd0a1fcb"
        ],
        [
            "2: apply H2.",
            "VernacExtend",
            "9588a0701c01ca043af7c1806458664f85491ded"
        ],
        [
            "2: apply H3.",
            "VernacExtend",
            "a32f4a13e73a956d577a55a99b30492beae75bce"
        ],
        [
            "intuition ; apply H4.",
            "VernacExtend",
            "7aa1398dcc79db7020039d34589f1d60b58fd519"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "eapply filter_imp.",
            "VernacExtend",
            "bf3d126874cf320edb00f681aadb1db062bce3fd"
        ],
        [
            "2: apply H0 ; apply H3.",
            "VernacExtend",
            "05c6a9a7da3ead78ec2225736dd4246bef61de5c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "by apply H4.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H2, H4.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (Ha : forall eps, a = (SF_h (s eps))).",
            "VernacExtend",
            "c5a7773207dbe508df253c2528a9a6e590770c1b"
        ],
        [
            "intros eps ; simpl.",
            "VernacExtend",
            "3e6d6db7d1d61e66a9d628e97c01ea21e2874d75"
        ],
        [
            "rewrite /Rdiv ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "assert (Hb : forall eps, b = (last (SF_h (s eps)) (unzip1 (SF_t (s eps))))).",
            "VernacExtend",
            "a5d18846b0958343c266447c478f2abc74c2541f"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "rewrite -(last_unif_part 0 a b (n eps)) ; simpl.",
            "VernacExtend",
            "098b55457c4818143077b1c537d807f1600477c2"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "elim: {2 4}(n eps) (a + 1 * (b - a) / (INR (n eps) + 1))%R (2%nat) => [ | m IH] //= x0 k.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite -IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct (filterlim_RInt f_eps a b F FF f If_eps) as [If HI].",
            "VernacExtend",
            "3cfdc5560fb2d810cf5a2fe22452402995c607d2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "rewrite (Ha eps) (Hb eps).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply is_RInt_ext.",
            "VernacExtend",
            "b9795a42c44cfae89eaa80f65b7bf8f8cb0e2a03"
        ],
        [
            "2: apply (is_RInt_SF f (s eps)).",
            "VernacExtend",
            "6f002f1dec4746f4b5de9731bc33e6f9c134162d"
        ],
        [
            "rewrite -Hb -Ha.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _ x [Hax Hxb].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /f_eps.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec (Rlt_le _ _ Hax) => // _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec (Rlt_le _ _ Hxb) => // _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /s /SF_sorted SF_lx_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (filterlim_locally f_eps) => /= eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /ball /= /fct_ball.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exists eps => e He t.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "eapply ball_le.",
            "VernacExtend",
            "4814d357427ce89fc81ab892964f7bb46c2a63f8"
        ],
        [
            "apply Rlt_le, He.",
            "VernacExtend",
            "5d8c1d7b828ddd590f6c76ace41f6017a0a70b03"
        ],
        [
            "apply (norm_compat1 (f t) (f_eps e t) e).",
            "VernacExtend",
            "82eaca8380db6582fdd80ae71af2bf8c3979ce1b"
        ],
        [
            "rewrite /f_eps.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec => Hat.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec => Hta.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite SF_fun_incr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite SF_map_lx SF_lx_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite SF_map_lx SF_lx_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite last_unif_part head_unif_part.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros Hsort Ht.",
            "VernacExtend",
            "082dc3085a6d604e36fb72d56e5b8d0b77948ef5"
        ],
        [
            "case: sorted_dec.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite SF_map_lx SF_lx_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros Hi ; set i := proj1_sig Hi.",
            "VernacExtend",
            "60ea3c99efc33984c988bfd35bb96214da2700bf"
        ],
        [
            "rewrite SF_map_ly (nth_map 0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (proj2_sig (H e)).",
            "VernacExtend",
            "7830f28a336ebf53b5807679e2337e720cf483eb"
        ],
        [
            "by split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split ; eapply Rle_trans.",
            "VernacExtend",
            "ebd6c12e04e6069ac370f59566e1a6dcdff0fb09"
        ],
        [
            "2: apply ptd_f2.",
            "VernacExtend",
            "c803be049c6b733087eb285eef80762f9f73aa84"
        ],
        [
            "rewrite SF_lx_f2 {1}(Ha e).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sorted_head.",
            "VernacExtend",
            "aeb9bf5d017a0679a6122714697c03479574eb46"
        ],
        [
            "apply unif_part_sort.",
            "VernacExtend",
            "34bc2aaa211f6a7ea621c12c0db64bd68bb04027"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply lt_trans, (proj2_sig Hi).",
            "VernacExtend",
            "7f4faca1225ae4d5cb8a0392d192965575b84343"
        ],
        [
            "eapply lt_trans ; apply lt_n_Sn.",
            "VernacExtend",
            "9cab7001f12843729a463466b5372b4f214bf7d8"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "rewrite SF_size_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (proj2 (proj2_sig Hi)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "unfold i.",
            "VernacExtend",
            "f25b2c686dfadeec0b230b882179ba976f095182"
        ],
        [
            "case: (size (unif_part a b (n e))) (proj1_sig Hi) => [ | m] /= k Hk.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply lt_n_O in Hk.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply lt_S_n.",
            "VernacExtend",
            "0207638f6e9dea4c2a8a3945f23446b376d8318e"
        ],
        [
            "eapply lt_trans, Hk.",
            "VernacExtend",
            "b56bef591930cd51f6c9c636d8f690cf2115e571"
        ],
        [
            "by apply lt_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ptd_f2.",
            "VernacExtend",
            "f5d06e0bc006c1af16be6cf313aeee8dca181b89"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "rewrite SF_size_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (proj2 (proj2_sig Hi)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "unfold i ; case: (size (unif_part a b (n e))) (proj1_sig Hi) => [ | m] /= k Hk.",
            "VernacExtend",
            "abb0ad67b39cfdbd50de0e144b01a22fb0ddf4c6"
        ],
        [
            "by apply lt_n_O in Hk.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply lt_S_n.",
            "VernacExtend",
            "0207638f6e9dea4c2a8a3945f23446b376d8318e"
        ],
        [
            "eapply lt_trans, Hk.",
            "VernacExtend",
            "b56bef591930cd51f6c9c636d8f690cf2115e571"
        ],
        [
            "by apply lt_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite SF_lx_f2 ; try by apply lt_O_Sn.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "rewrite {2}(Hb e).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_trans, (sorted_last _ i).",
            "VernacExtend",
            "9a3c2435748cdce58c3000144a0fd8fc3b544eb2"
        ],
        [
            "apply Req_le.",
            "VernacExtend",
            "b69ffc9461f465218c69f379ac293728d3f8e7bd"
        ],
        [
            "unfold s ; simpl.",
            "VernacExtend",
            "e3f11fdeba2a79a9fd124d3bf4b9120ba5a27314"
        ],
        [
            "unfold i ; elim: {1 3 6}(n e) (2%nat) (a + 1 * (b - a) / (INR (n e) + 1))%R (proj1_sig Hi) (proj2 (proj2_sig Hi)) => [ | m IH] // k x0 j Hj.",
            "VernacExtend",
            "83579c945778be29cb618838b8f0112f338e4bb4"
        ],
        [
            "simpl in Hj ; by apply lt_S_n, lt_S_n, lt_n_O in Hj.",
            "VernacExtend",
            "cafe5e69e8c856d3f6ab630edea380d0a71e51da"
        ],
        [
            "case: j Hj => [ | j] Hj //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -IH //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply lt_S_n.",
            "VernacExtend",
            "0207638f6e9dea4c2a8a3945f23446b376d8318e"
        ],
        [
            "rewrite size_mkseq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite size_mkseq in Hj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (unif_part_sort a b (n e) (Rlt_le _ _ Hab)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "unfold s.",
            "VernacExtend",
            "468b9a7311ea5214f512899350df06f1241bf032"
        ],
        [
            "elim: (unif_part a b (n e)) => [ | h] //=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "case => [ | h0 l] IH // [Hh Hl].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (IH Hl) => /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: l Hl {IH} => //= ; split => // ; by apply Hl.",
            "VernacExtend",
            "20f993a7a1da4042b2dc7a4ec2173fd01b9243a9"
        ],
        [
            "rewrite size_mkseq in Hi, i |- *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply lt_S_n.",
            "VernacExtend",
            "0207638f6e9dea4c2a8a3945f23446b376d8318e"
        ],
        [
            "eapply lt_le_trans.",
            "VernacExtend",
            "042d590b5417a6b6962f8a6c75b0734ff7de748e"
        ],
        [
            "eapply lt_trans, (proj2_sig Hi).",
            "VernacExtend",
            "7f4faca1225ae4d5cb8a0392d192965575b84343"
        ],
        [
            "by apply lt_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /s.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (n e) (a) (b) => [ | m IH] // a' b'.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "apply le_n_S ; rewrite unif_part_S ; by apply IH.",
            "VernacExtend",
            "211c159238412fa0315e6e887834b789af03a7aa"
        ],
        [
            "apply Rle_lt_trans with (norm (minus (nth 0 (unif_part a b (n e)) (S i)) (nth 0 (unif_part a b (n e)) i))).",
            "VernacExtend",
            "7bada1839f9123a351e844ec47135e5b376f07b7"
        ],
        [
            "change norm with Rabs.",
            "VernacExtend",
            "5e6f3b65898dd20963c970c24b42f3a1b2ed6ad1"
        ],
        [
            "apply Rabs_le_between ; rewrite Rabs_pos_eq.",
            "VernacExtend",
            "8c994a82f0042252e7c727b9b2c538848355554c"
        ],
        [
            "change minus with Rminus ; rewrite Ropp_minus_distr'.",
            "VernacExtend",
            "9033b3e42106c28c6d8a8cfe86bfc5c859ef8492"
        ],
        [
            "rewrite /i {i}.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "destruct Hi as [i [[H1 H2] H3]].",
            "VernacExtend",
            "5a36f20387339e2afb320834041c4a9ed1a20702"
        ],
        [
            "simpl sval.",
            "VernacExtend",
            "91f9e6840c98f41b3b0ca3f55df616b1c8256dbf"
        ],
        [
            "cut (nth 0 (unif_part a b (n e)) i <= nth 0 (SF_ly (s e)) i <= nth 0 (unif_part a b (n e)) (S i)).",
            "VernacExtend",
            "6660620945981e812f810902b8b036365c52dbba"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "rewrite SF_ly_f2 nth_behead (nth_pairmap 0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: {-2 4}(S i) H2 => Si /= ; clear -H1 H3 ; lra.",
            "VernacExtend",
            "6dad4b189237bb41039d4a1af123b898016560f9"
        ],
        [
            "now apply SSR_leq, lt_le_weak.",
            "VernacExtend",
            "1d35f2286fffb67079c1b101677bdba058806486"
        ],
        [
            "apply -> Rminus_le_0.",
            "VernacExtend",
            "eb3010996ade724f542511d5c9a56441498f4fba"
        ],
        [
            "apply (sorted_nth Rle (unif_part a b (n e))).",
            "VernacExtend",
            "ed83ad82f0053c3df8886fe387598f2b460a5abf"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (proj2 (proj2_sig Hi)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "unfold i ; case: (size (unif_part a b (n e))) (proj1_sig Hi) => [ | m] j /= Hm.",
            "VernacExtend",
            "abb0ad67b39cfdbd50de0e144b01a22fb0ddf4c6"
        ],
        [
            "by apply lt_n_O in Hm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply lt_S_n.",
            "VernacExtend",
            "0207638f6e9dea4c2a8a3945f23446b376d8318e"
        ],
        [
            "eapply lt_trans, Hm.",
            "VernacExtend",
            "6d1ec922b1ab72e09905f65b967105ff3764469a"
        ],
        [
            "by apply lt_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply nth_le_seq_step.",
            "VernacExtend",
            "1341346f23cc80ea90f841df6384edca0e33c38e"
        ],
        [
            "eapply lt_trans, (proj2_sig Hi).",
            "VernacExtend",
            "7f4faca1225ae4d5cb8a0392d192965575b84343"
        ],
        [
            "by apply lt_n_S.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (proj2_sig (seq_step_unif_part_ex a b (proj1_sig (H e)))).",
            "VernacExtend",
            "cd8ce044e77de9df05d10269135a45cf3d91cfd6"
        ],
        [
            "rewrite SSR_leq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite SF_size_ly.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply le_S_n ; rewrite -SF_size_lx.",
            "VernacExtend",
            "1a4dc6c518524ddaf41243eb84381adde1957b91"
        ],
        [
            "rewrite SF_lx_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply lt_le_weak, (proj2_sig Hi).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros Hi.",
            "VernacExtend",
            "1760e50437fee0aca9b028404143ef4a8c472680"
        ],
        [
            "move: Hsort Ht Hi.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite SF_map_lx SF_size_map SF_size_lx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite SF_lx_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -SF_size_ly SF_ly_f2 size_behead size_pairmap size_mkseq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl (S (Peano.pred (S (S (n e)))) - 2)%nat.",
            "VernacExtend",
            "0a8cf4fa79f7cb4d9a21de5cd6a50dd8167c412f"
        ],
        [
            "simpl (S (Peano.pred (S (S (n e)))) - 1)%nat.",
            "VernacExtend",
            "6c5df7b69fad05a6a019ac514990300c7f7d2d4b"
        ],
        [
            "simpl (Peano.pred (S (S (n e))) - 1)%nat.",
            "VernacExtend",
            "f98c7eeb39c530ab76e0a027d9eb01a36db1b926"
        ],
        [
            "rewrite -minus_n_O.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros Hsort Ht Hi.",
            "VernacExtend",
            "9e8499bbbe95d011f19f5bcbdcbd5bb7a629c494"
        ],
        [
            "rewrite SF_map_ly (nth_map 0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (proj2_sig (H e)).",
            "VernacExtend",
            "7830f28a336ebf53b5807679e2337e720cf483eb"
        ],
        [
            "by split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split ; eapply Rle_trans.",
            "VernacExtend",
            "ebd6c12e04e6069ac370f59566e1a6dcdff0fb09"
        ],
        [
            "2: apply ptd_f2.",
            "VernacExtend",
            "c803be049c6b733087eb285eef80762f9f73aa84"
        ],
        [
            "rewrite SF_lx_f2 {1}(Ha e).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sorted_head.",
            "VernacExtend",
            "aeb9bf5d017a0679a6122714697c03479574eb46"
        ],
        [
            "apply unif_part_sort.",
            "VernacExtend",
            "34bc2aaa211f6a7ea621c12c0db64bd68bb04027"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_mkseq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply lt_trans ; apply lt_n_Sn.",
            "VernacExtend",
            "9cab7001f12843729a463466b5372b4f214bf7d8"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "rewrite SF_size_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite size_mkseq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply lt_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ptd_f2.",
            "VernacExtend",
            "f5d06e0bc006c1af16be6cf313aeee8dca181b89"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "rewrite SF_size_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite size_mkseq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply lt_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite SF_lx_f2 ; try by apply lt_O_Sn.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "rewrite {2}(Hb e).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Req_le.",
            "VernacExtend",
            "b69ffc9461f465218c69f379ac293728d3f8e7bd"
        ],
        [
            "rewrite (last_unzip1 _ 0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "fold (SF_last 0 (s e)).",
            "VernacExtend",
            "3ad31afa45a9314e7bfc5fd77ec4758ac917b6fe"
        ],
        [
            "rewrite SF_last_lx SF_lx_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (last_nth 0) size_mkseq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "apply Rle_lt_trans with (norm (minus (nth 0 (unif_part a b (n e)) (S (n e))) (nth 0 (unif_part a b (n e)) (n e)))).",
            "VernacExtend",
            "dc043acd7c69cc742485e6f9bcc22df1a1c89c0b"
        ],
        [
            "change norm with Rabs.",
            "VernacExtend",
            "5e6f3b65898dd20963c970c24b42f3a1b2ed6ad1"
        ],
        [
            "apply Rabs_le_between ; rewrite Rabs_pos_eq.",
            "VernacExtend",
            "8c994a82f0042252e7c727b9b2c538848355554c"
        ],
        [
            "change minus with Rminus ; rewrite Ropp_minus_distr'.",
            "VernacExtend",
            "9033b3e42106c28c6d8a8cfe86bfc5c859ef8492"
        ],
        [
            "cut (nth 0 (unif_part a b (n e)) (n e) <= nth 0 (SF_ly (s e)) (n e) <= nth 0 (unif_part a b (n e)) (S (n e))).",
            "VernacExtend",
            "850278907ac88152c04719b3c2754470ebafe243"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "rewrite SF_ly_f2 nth_behead (nth_pairmap 0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: {-2 4}(S (n e)) Hi => Si /= ; clear ; lra.",
            "VernacExtend",
            "deb93d8cb90e47d6953df4528eac98361aa6288c"
        ],
        [
            "rewrite size_mkseq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply SSR_leq, le_refl.",
            "VernacExtend",
            "5124c1ca92107e2bb616166c684b0ace378e9172"
        ],
        [
            "apply -> Rminus_le_0.",
            "VernacExtend",
            "eb3010996ade724f542511d5c9a56441498f4fba"
        ],
        [
            "apply (sorted_nth Rle (unif_part a b (n e))).",
            "VernacExtend",
            "ed83ad82f0053c3df8886fe387598f2b460a5abf"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_mkseq ; by apply lt_n_Sn.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply nth_le_seq_step.",
            "VernacExtend",
            "1341346f23cc80ea90f841df6384edca0e33c38e"
        ],
        [
            "rewrite size_mkseq ; by apply lt_n_Sn.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply (proj2_sig (seq_step_unif_part_ex a b (proj1_sig (H e)))).",
            "VernacExtend",
            "cd8ce044e77de9df05d10269135a45cf3d91cfd6"
        ],
        [
            "rewrite SSR_leq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite SF_size_ly.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply le_S_n ; rewrite -SF_size_lx.",
            "VernacExtend",
            "1a4dc6c518524ddaf41243eb84381adde1957b91"
        ],
        [
            "rewrite SF_lx_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite size_mkseq ; by apply le_refl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite minus_eq_zero norm_zero ; by apply e.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite minus_eq_zero norm_zero ; by apply e.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "now exists If.",
            "VernacExtend",
            "44872adf3eea10a7aa4abffd59275e53d636b0e2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section norm_RInt.",
            "VernacBeginSection",
            "6e2dc10dc5fd7a952ded98755e70f53fb32282a8"
        ],
        [
            "Context {V : NormedModule R_AbsRing}.",
            "VernacContext",
            "5d56ede25ce8804229ff69d29b81c4721f84018a"
        ],
        [
            "Lemma norm_RInt_le : forall (f : R -> V) (g : R -> R) (a b : R) (lf : V) (lg : R), a <= b -> (forall x, a <= x <= b -> norm (f x) <= g x) -> is_RInt f a b lf -> is_RInt g a b lg -> norm lf <= lg.",
            "VernacStartTheoremProof",
            "4ae21f816cf4d6df14b185694905933689bed1be"
        ],
        [
            "intros f g a b lf lg Hab H Hf Hg.",
            "VernacExtend",
            "789a833a75dde05823375b9990382a0fabdaf13d"
        ],
        [
            "change (Rbar_le (norm lf) lg).",
            "VernacExtend",
            "4fa5eff808dd044aa003bd6dd6b319c345663e2d"
        ],
        [
            "apply (filterlim_le (F := Riemann_fine a b)) with (fun ptd : SF_seq => norm (scal (sign (b - a)) (Riemann_sum f ptd))) (fun ptd : SF_seq => scal (sign (b - a)) (Riemann_sum g ptd)).",
            "VernacExtend",
            "f14362238545bd76b56e2009c364ad1c417d4169"
        ],
        [
            "3: apply Hg.",
            "VernacExtend",
            "bcdcdf54912eb3fdedb5b99632fe3e19ab15acc2"
        ],
        [
            "exists (mkposreal _ Rlt_0_1) => ptd _ [Hptd [Hh Hl]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct Hab as [Hab|Hab].",
            "VernacExtend",
            "c9af174c984827f77fc97d74d36b7b352f251da9"
        ],
        [
            "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
            "VernacExtend",
            "fca02487127bf9775753594d7fee9b399ab3dff1"
        ],
        [
            "rewrite !scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Riemann_sum_norm.",
            "VernacExtend",
            "2a8f238295a7e7b900ffa89f8b01ad13b16f5f06"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => t.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Hl Hh /Rmin /Rmax ; case: Rle_dec => [_|].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "move => /Rnot_le_lt Hab'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim (Rlt_not_le _ _ Hab).",
            "VernacExtend",
            "208092224bdf367bc600442b0fc170eb016eeec1"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "rewrite -> Rminus_diag_eq by now apply sym_eq.",
            "VernacExtend",
            "63257bb21ab679503ac174c4357bf63238086350"
        ],
        [
            "rewrite sign_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite 2!scal_zero_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite norm_zero ; by right.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply filterlim_comp with (locally lf).",
            "VernacExtend",
            "7c3cb0768007c3c81ba01b392fe08b4b6791f6f9"
        ],
        [
            "by apply Hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply filterlim_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_RInt_le_const : forall (f : R -> V) (a b : R) (lf : V) (M : R), a <= b -> (forall x, a <= x <= b -> norm (f x) <= M) -> is_RInt f a b lf -> norm lf <= (b - a) * M.",
            "VernacStartTheoremProof",
            "f8d3899a8e0c7daf1c7041b05879a985454d7c1c"
        ],
        [
            "intros f a b lf M Hab H Hf.",
            "VernacExtend",
            "360f3370ff7732094afbcd52e81fca36cdce3172"
        ],
        [
            "apply norm_RInt_le with (1 := Hab) (2 := H) (3 := Hf).",
            "VernacExtend",
            "6a837c3cde32ffcea19818caa12c6212a3f2a89e"
        ],
        [
            "apply: is_RInt_const.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_RInt_le_const_abs : forall (f : R -> V) (a b : R) (lf : V) (M : R), (forall x, Rmin a b <= x <= Rmax a b -> norm (f x) <= M) -> is_RInt f a b lf -> norm lf <= Rabs (b - a) * M.",
            "VernacStartTheoremProof",
            "6a6fe42288da4ca30b0778ff0c3183f9e29a1311"
        ],
        [
            "intros f a b lf M H Hf.",
            "VernacExtend",
            "568d0f538dde2e5336845b74d92568ce1605d051"
        ],
        [
            "unfold Rabs.",
            "VernacExtend",
            "32b62f5465b04c4380fa7a8bf154e157fb296719"
        ],
        [
            "case Rcase_abs => Hab.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rminus_lt in Hab.",
            "VernacExtend",
            "498e0af65c436199945ad80928e3bc063aec9d5b"
        ],
        [
            "rewrite Ropp_minus_distr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_RInt_swap in Hf.",
            "VernacExtend",
            "d4cd1ce950d1228e40be6732892eedd62c5f8bd4"
        ],
        [
            "rewrite <- norm_opp.",
            "VernacExtend",
            "688e5e408d03458837b7145146c92cd2b97487f4"
        ],
        [
            "apply norm_RInt_le_const with (3 := Hf).",
            "VernacExtend",
            "dca32d60911e001ac9ad576f972bc66b44897cb4"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "now rewrite -> Rmin_right, Rmax_left by now apply Rlt_le.",
            "VernacExtend",
            "a586550e24cd77c0a43fb91e44b59cd732b85532"
        ],
        [
            "apply Rminus_ge in Hab.",
            "VernacExtend",
            "917acffa7e82b6b7596937784709a8b502b0d6fa"
        ],
        [
            "apply Rge_le in Hab.",
            "VernacExtend",
            "c5109c3a58e59d3e1ffe5532a094091411fb23cb"
        ],
        [
            "apply norm_RInt_le_const with (1 := Hab) (3 := Hf).",
            "VernacExtend",
            "c92656e7480fefed81901a78ebe991de31862a2c"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "now rewrite -> Rmin_left, Rmax_right.",
            "VernacExtend",
            "74485de7b7e2031a3653323785b836a7b02d5470"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End norm_RInt.",
            "VernacEndSegment",
            "c1af8e13a5336b4d7830aae6926563bd21f98a8e"
        ],
        [
            "Section prod.",
            "VernacBeginSection",
            "1d8996ea1e72147eceffa678f50a07033a976174"
        ],
        [
            "Context {U V : NormedModule R_AbsRing}.",
            "VernacContext",
            "9aa41916b9575f0335b43a3d72c50998a6cc6cc1"
        ],
        [
            "Lemma is_RInt_fct_extend_fst (f : R -> U * V) (a b : R) (l : U * V) : is_RInt f a b l -> is_RInt (fun t => fst (f t)) a b (fst l).",
            "VernacStartTheoremProof",
            "62d986e200c8098d746d0e815bf78e0a5c2a4adb"
        ],
        [
            "intros Hf P [eP HP].",
            "VernacExtend",
            "91c89d4fd628da0bb6ebba92564a827cdb9123a0"
        ],
        [
            "destruct (Hf (fun u : U * V => P (fst u))) as [ef Hf'].",
            "VernacExtend",
            "ed6e519df32df2df51a72dc54fd79906dcd1dbc9"
        ],
        [
            "exists eP => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "apply Hy.",
            "VernacExtend",
            "80f07477a1dd0a8c39407b7d0aa65b768d8a6d0b"
        ],
        [
            "exists ef => y H1 H2.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (Riemann_sum (fun t : R => fst (f t)) y) with (fst (Riemann_sum f y)).",
            "VernacExtend",
            "0b9c3a783cbf4a0b5f05a66123e1aeedfad8a265"
        ],
        [
            "by apply Hf'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "apply SF_cons_ind with (s := y) => {y} [x0 | [x1 y0] y IH].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite /Riemann_sum /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ?Riemann_sum_cons /= IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_fct_extend_snd (f : R -> U * V) (a b : R) (l : U * V) : is_RInt f a b l -> is_RInt (fun t => snd (f t)) a b (snd l).",
            "VernacStartTheoremProof",
            "6cabdeb778ccdfa4a1cf8d944c5f653a66e12673"
        ],
        [
            "intros Hf P [eP HP].",
            "VernacExtend",
            "91c89d4fd628da0bb6ebba92564a827cdb9123a0"
        ],
        [
            "destruct (Hf (fun u : U * V => P (snd u))) as [ef Hf'].",
            "VernacExtend",
            "4677521e81196b7c0eebde55133a76cdb78c3259"
        ],
        [
            "exists eP => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "apply Hy.",
            "VernacExtend",
            "80f07477a1dd0a8c39407b7d0aa65b768d8a6d0b"
        ],
        [
            "exists ef => y H1 H2.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (Riemann_sum (fun t : R => snd (f t)) y) with (snd (Riemann_sum f y)).",
            "VernacExtend",
            "6ae2c6cda2421915d4bded8e87c004e84aa0d41d"
        ],
        [
            "by apply Hf'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "apply SF_cons_ind with (s := y) => {y} [x0 | [x1 y0] y IH].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite /Riemann_sum /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ?Riemann_sum_cons /= IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_fct_extend_pair (f : R -> U * V) (a b : R) lu lv : is_RInt (fun t => fst (f t)) a b lu -> is_RInt (fun t => snd (f t)) a b lv -> is_RInt f a b (lu,lv).",
            "VernacStartTheoremProof",
            "685b5815d326b1e580bf67963180d99a93ef7432"
        ],
        [
            "move => H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterlim_locally => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (proj1 (filterlim_locally _ _) H1 eps) => {H1} ; intros [d1 H1].",
            "VernacExtend",
            "b6fc4cdfed6345215376d4b20794c8416dcd71a4"
        ],
        [
            "generalize (proj1 (filterlim_locally _ _) H2 eps) => {H2} ; intros [d2 H2].",
            "VernacExtend",
            "0b76ee98eb329a469291e19601d389a9f4613045"
        ],
        [
            "simpl in H1, H2.",
            "VernacExtend",
            "ae044167b9c10bc3a51d1a9967e6758b4481a4a1"
        ],
        [
            "exists (mkposreal _ (Rmin_stable_in_posreal d1 d2)) => /= ptd Hstep Hptd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (Riemann_sum_pair f ptd) ; simpl.",
            "VernacExtend",
            "098b55457c4818143077b1c537d807f1600477c2"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H1 => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rlt_le_trans with (2 := Rmin_l d1 d2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply H2 => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rlt_le_trans with (2 := Rmin_r d1 d2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_fct_extend_fst (f : R -> U * V) (a b : R) : ex_RInt f a b -> ex_RInt (fun t => fst (f t)) a b.",
            "VernacStartTheoremProof",
            "dbc2e37708bc1cb8da69d151999e280bf1f821c1"
        ],
        [
            "intros [l Hl].",
            "VernacExtend",
            "e57b129728f1404a6b858b17bad3620408feae13"
        ],
        [
            "exists (fst l).",
            "VernacExtend",
            "4be23b6402bebef0cf65f280c3e0aa6c4bd95868"
        ],
        [
            "by apply is_RInt_fct_extend_fst.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_fct_extend_snd (f : R -> U * V) (a b : R) : ex_RInt f a b -> ex_RInt (fun t => snd (f t)) a b.",
            "VernacStartTheoremProof",
            "15c11fc582da36fc1e46e6440a2e96f3a95a3a91"
        ],
        [
            "intros [l Hl].",
            "VernacExtend",
            "e57b129728f1404a6b858b17bad3620408feae13"
        ],
        [
            "exists (snd l).",
            "VernacExtend",
            "042092fdbaecdd77755b1eef203bfd399fe6cc36"
        ],
        [
            "by apply is_RInt_fct_extend_snd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_fct_extend_pair (f : R -> U * V) (a b : R) : ex_RInt (fun t => fst (f t)) a b -> ex_RInt (fun t => snd (f t)) a b -> ex_RInt f a b.",
            "VernacStartTheoremProof",
            "7547a7446c4b6de048067c7a2ac6560b5095fad9"
        ],
        [
            "move => [l1 H1] [l2 H2].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (l1,l2).",
            "VernacExtend",
            "43cfec2c2e1e0f1e928321f0789a967cb416382f"
        ],
        [
            "by apply is_RInt_fct_extend_pair.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_fct_extend_pair (U_RInt : (R -> U) -> R -> R -> U) (V_RInt : (R -> V) -> R -> R -> V) : (forall f a b l, is_RInt f a b l -> U_RInt f a b = l) -> (forall f a b l, is_RInt f a b l -> V_RInt f a b = l) -> forall f a b l, is_RInt f a b l -> (U_RInt (fun t => fst (f t)) a b, V_RInt (fun t => snd (f t)) a b) = l.",
            "VernacStartTheoremProof",
            "77b111367d758b6b1b3772721bc85d9e5c409d7f"
        ],
        [
            "intros HU HV f a b l Hf.",
            "VernacExtend",
            "05f08b655dbd0d7977d5cc5e5660a98fc093d0c7"
        ],
        [
            "apply injective_projections ; simpl.",
            "VernacExtend",
            "a29cc8f4966e828577843e7892e5291a3c2a57a7"
        ],
        [
            "apply HU ; by apply is_RInt_fct_extend_fst.",
            "VernacExtend",
            "fba0b20a6f008c830945df2b25296f55a5e390f5"
        ],
        [
            "apply HV ; by apply is_RInt_fct_extend_snd.",
            "VernacExtend",
            "b0f2a9e262c5ee2c47a10a1d3816691222111fba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End prod.",
            "VernacEndSegment",
            "9a583a0b9c1dc7a0fb124b7d20e3c23e1cb0d930"
        ],
        [
            "Section RInt.",
            "VernacBeginSection",
            "f36aebed8dee9bd2a171c63c7953108959a4d106"
        ],
        [
            "Context {V : CompleteNormedModule R_AbsRing}.",
            "VernacContext",
            "16c4b3f33e70363c3ac567c0829be7da47fe68b4"
        ],
        [
            "Definition RInt (f : R -> V) (a b : R) := iota (is_RInt f a b).",
            "VernacDefinition",
            "b47a8101b5826a1bb07d8a6cd7b5bd90ea7427ef"
        ],
        [
            "Lemma is_RInt_unique (f : R -> V) (a b : R) (l : V) : is_RInt f a b l -> RInt f a b = l.",
            "VernacStartTheoremProof",
            "a6f5bcbf0cd96c8e163ec322d334334c187d81a8"
        ],
        [
            "apply iota_filterlim_locally.",
            "VernacExtend",
            "036a6608cdeb171499483642282e22c18d7d6976"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_correct (f : R -> V) (a b : R) : ex_RInt f a b -> is_RInt f a b (RInt f a b).",
            "VernacStartTheoremProof",
            "797c44b235ee4e82cddd92362e8e4cff266dc75a"
        ],
        [
            "intros [If HIf].",
            "VernacExtend",
            "ff28d60bc88a49319e8176bdff27fccd91ef2300"
        ],
        [
            "erewrite is_RInt_unique ; exact HIf.",
            "VernacExtend",
            "fed8767803c032f33d11b10613331ef5e80e94d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_RInt_swap : forall f a b, ex_RInt f a b -> opp (RInt f a b) = RInt f b a.",
            "VernacStartTheoremProof",
            "52973546cd329ea06f9bf0a12deb26aea5337d43"
        ],
        [
            "intros f a b [If HIf].",
            "VernacExtend",
            "91b0c9eeea5d89f20a77b23d0d2c8d1f7920959b"
        ],
        [
            "apply sym_eq, is_RInt_unique.",
            "VernacExtend",
            "86c83224718f4f32403768ac62929921f412303d"
        ],
        [
            "apply: is_RInt_swap.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply RInt_correct.",
            "VernacExtend",
            "fcc9abd19dabf90138d53932ff2d622c1d53b283"
        ],
        [
            "now exists If.",
            "VernacExtend",
            "44872adf3eea10a7aa4abffd59275e53d636b0e2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_ext (f g : R -> V) (a b : R) : (forall x, Rmin a b < x < Rmax a b -> f x = g x) -> RInt f a b = RInt g a b.",
            "VernacStartTheoremProof",
            "7c659185d1b324e7cc9f45c310628ffef84d6651"
        ],
        [
            "intros Hfg.",
            "VernacExtend",
            "1d828439a906ddbbe5d5759ad4b679b9213dc106"
        ],
        [
            "apply eq_close.",
            "VernacExtend",
            "0709fabb64bf0c7032812f7540a92f4ea3d7b26d"
        ],
        [
            "apply: close_iota ; split ; apply is_RInt_ext.",
            "VernacExtend",
            "eb4da8d9a56624b0f2ef773a8051dd06cb680d34"
        ],
        [
            "exact Hfg.",
            "VernacExtend",
            "41211937fb7246de4dd2bd369d52a3257cfdbe66"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "now apply sym_eq, Hfg.",
            "VernacExtend",
            "c2965ded3917ca0aec655925b4df8e1e96fc1925"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_point (a : R) (f : R -> V) : RInt f a a = zero.",
            "VernacStartTheoremProof",
            "1f21bf817f309a0b77e23d6895e28759f80ccf08"
        ],
        [
            "apply is_RInt_unique.",
            "VernacExtend",
            "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
        ],
        [
            "exact: is_RInt_point.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_const (a b : R) (c : V) : RInt (fun _ => c) a b = scal (b - a) c.",
            "VernacStartTheoremProof",
            "cc1562fb07ea6cb185933bd01d2bc7513214cf80"
        ],
        [
            "apply is_RInt_unique.",
            "VernacExtend",
            "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
        ],
        [
            "exact: is_RInt_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_comp_lin (f : R -> V) (u v a b : R) : ex_RInt f (u * a + v) (u * b + v) -> RInt (fun y => scal u (f (u * y + v))) a b = RInt f (u * a + v) (u * b + v).",
            "VernacStartTheoremProof",
            "a7305c6783b8f7ae4e8f4c124446ccf6d2c150ee"
        ],
        [
            "intros Hf.",
            "VernacExtend",
            "0a34d3f570a7fa7521ff666decd218fe609c954f"
        ],
        [
            "apply is_RInt_unique.",
            "VernacExtend",
            "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
        ],
        [
            "apply: is_RInt_comp_lin.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: RInt_correct.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_Chasles : forall f a b c, ex_RInt f a b -> ex_RInt f b c -> plus (RInt f a b) (RInt f b c) = RInt f a c.",
            "VernacStartTheoremProof",
            "dd90e0d13fcd7f0360a546b12cb18efb2767c82f"
        ],
        [
            "intros f a b c H1 H2.",
            "VernacExtend",
            "798e2964fb1583624b7045b12ede978fb92efe88"
        ],
        [
            "apply sym_eq, is_RInt_unique.",
            "VernacExtend",
            "86c83224718f4f32403768ac62929921f412303d"
        ],
        [
            "apply: is_RInt_Chasles ; now apply RInt_correct.",
            "VernacExtend",
            "f43aa43d70327c10f96eeae7280392e28fdeed50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_scal (f : R -> V) (a b l : R) : ex_RInt f a b -> RInt (fun x => scal l (f x)) a b = scal l (RInt f a b).",
            "VernacStartTheoremProof",
            "e6bb54284b7bede0d76a465f248a3aaf905783d0"
        ],
        [
            "intros Hf.",
            "VernacExtend",
            "0a34d3f570a7fa7521ff666decd218fe609c954f"
        ],
        [
            "apply is_RInt_unique.",
            "VernacExtend",
            "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
        ],
        [
            "apply: is_RInt_scal.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: RInt_correct.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_opp (f : R -> V) (a b : R) : ex_RInt f a b -> RInt (fun x => opp (f x)) a b = opp (RInt f a b).",
            "VernacStartTheoremProof",
            "522960e71140b402b74050bfdc6c59386ee1a62c"
        ],
        [
            "intros Hf.",
            "VernacExtend",
            "0a34d3f570a7fa7521ff666decd218fe609c954f"
        ],
        [
            "apply is_RInt_unique.",
            "VernacExtend",
            "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
        ],
        [
            "apply: is_RInt_opp.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: RInt_correct.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_plus : forall f g a b, ex_RInt f a b -> ex_RInt g a b -> RInt (fun x => plus (f x) (g x)) a b = plus (RInt f a b) (RInt g a b).",
            "VernacStartTheoremProof",
            "74c702f0a0a6d239940d28a389f0c8a2ea9cf38f"
        ],
        [
            "intros f g a b Hf Hg.",
            "VernacExtend",
            "b03342365ff196da067c09cfdd98ae23d8d6a1e6"
        ],
        [
            "apply is_RInt_unique.",
            "VernacExtend",
            "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
        ],
        [
            "apply: is_RInt_plus ; now apply RInt_correct.",
            "VernacExtend",
            "f43aa43d70327c10f96eeae7280392e28fdeed50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_minus : forall f g a b, ex_RInt f a b -> ex_RInt g a b -> RInt (fun x => minus (f x) (g x)) a b = minus (RInt f a b) (RInt g a b).",
            "VernacStartTheoremProof",
            "84224aa3fe71439f58ff8504804c0f5b42fa66aa"
        ],
        [
            "intros f g a b Hf Hg.",
            "VernacExtend",
            "b03342365ff196da067c09cfdd98ae23d8d6a1e6"
        ],
        [
            "apply is_RInt_unique.",
            "VernacExtend",
            "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
        ],
        [
            "apply: is_RInt_minus ; now apply RInt_correct.",
            "VernacExtend",
            "f43aa43d70327c10f96eeae7280392e28fdeed50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RInt.",
            "VernacEndSegment",
            "e4af849fa5dbedb937ce94f419e001b26c0ec2d8"
        ],
        [
            "Lemma is_RInt_ge_0 (f : R -> R) (a b If : R) : a <= b -> is_RInt f a b If -> (forall x, a < x < b -> 0 <= f x) -> 0 <= If.",
            "VernacStartTheoremProof",
            "a70e1be232e6a60720f58c8c9a7e14ead0ce2495"
        ],
        [
            "intros Hab HIf Hf.",
            "VernacExtend",
            "7ce9dc8b23270b42cf82a1bbc6e5e5857b99277d"
        ],
        [
            "set (f' := fun x => if Rle_dec x a then 0 else if Rle_dec b x then 0 else f x).",
            "VernacExtend",
            "b6ec528e779147a9f551f361dfc34072018eb860"
        ],
        [
            "apply is_RInt_ext with (g := f') in HIf.",
            "VernacExtend",
            "103cd60995353eb82ccfb25c3244676781343398"
        ],
        [
            "apply closed_filterlim_loc with (1 := HIf) (3 := closed_ge 0).",
            "VernacExtend",
            "8b6afb485e5eeb43b746885c8ce8e9fab2b65015"
        ],
        [
            "unfold Riemann_fine, within.",
            "VernacExtend",
            "a8938c9c8285080ebba6315e8f767801610f378d"
        ],
        [
            "apply filter_forall.",
            "VernacExtend",
            "8c32dc4f52f30e2c1af34a6c3ce57fe2d3feab75"
        ],
        [
            "intros ptd Hptd.",
            "VernacExtend",
            "302a60e535ea972ec6747b449f232837b7830d2e"
        ],
        [
            "replace 0 with (scal (sign (b - a)) (Riemann_sum (fun _ => 0) ptd)).",
            "VernacExtend",
            "45ad6207c013eb7e66e4ce60a164635aab017316"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply sign_ge_0.",
            "VernacExtend",
            "5378aa842441b00da7af367a845010f891d32e16"
        ],
        [
            "now apply Rge_le, Rge_minus, Rle_ge.",
            "VernacExtend",
            "23cdfaaed13f11ab3f6f2e2ed2fc37babf3865bd"
        ],
        [
            "apply Riemann_sum_le.",
            "VernacExtend",
            "040591a44294ff63991bb6377534e285a53d0783"
        ],
        [
            "apply Hptd.",
            "VernacExtend",
            "642b5b4e030170e900507553551a629877fed957"
        ],
        [
            "intros t _.",
            "VernacExtend",
            "d1fd05346a070a90b76a5589b4607b767bbbeb6f"
        ],
        [
            "unfold f'.",
            "VernacExtend",
            "d5030c9006a9df78825d4b9238ed86129ec6a957"
        ],
        [
            "case Rle_dec as [H1|H1].",
            "VernacExtend",
            "a13be68c970f56a897812cfd1c31bc4e77a3d03c"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "case Rle_dec as [H2|H2].",
            "VernacExtend",
            "e1fb9650d2e744d1441d0a6420fad99b5a7075af"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply Hf.",
            "VernacExtend",
            "44e8b4102d20ba355038f72fc52240fc6cb8650c"
        ],
        [
            "now split; apply Rnot_le_lt.",
            "VernacExtend",
            "987c864efd9f6a8c00f8e1de5bc3fad543cc4e0c"
        ],
        [
            "rewrite Riemann_sum_const.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !scal_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (Rmin_left _ _ Hab) (Rmax_right _ _ Hab).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "unfold f'.",
            "VernacExtend",
            "d5030c9006a9df78825d4b9238ed86129ec6a957"
        ],
        [
            "case Rle_dec as [H1|H1].",
            "VernacExtend",
            "a13be68c970f56a897812cfd1c31bc4e77a3d03c"
        ],
        [
            "now elim (Rle_not_lt _ _ H1).",
            "VernacExtend",
            "28d00179bac65d52c853e05f1c6e0e112e97235a"
        ],
        [
            "case Rle_dec as [H2|H2].",
            "VernacExtend",
            "e1fb9650d2e744d1441d0a6420fad99b5a7075af"
        ],
        [
            "now elim (Rle_not_lt _ _ H2).",
            "VernacExtend",
            "16534de2b5dde3a62e0c015860cafc11fec07592"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_ge_0 (f : R -> R) (a b : R) : a <= b -> ex_RInt f a b -> (forall x, a < x < b -> 0 <= f x) -> 0 <= RInt f a b.",
            "VernacStartTheoremProof",
            "9653a5557d01fcbec28becd53ef466f6d4018007"
        ],
        [
            "intros Hab Hf Hpos.",
            "VernacExtend",
            "d50101ba3b1b68ceb6ba353a2a7712632ee9392a"
        ],
        [
            "apply: is_RInt_ge_0 Hab _ Hpos.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: RInt_correct.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_RInt_le (f g : R -> R) (a b If Ig : R) : a <= b -> is_RInt f a b If -> is_RInt g a b Ig -> (forall x, a < x < b -> f x <= g x) -> If <= Ig.",
            "VernacStartTheoremProof",
            "f14ef04cb87498dd0a1a5c3f756ba35fb2092be9"
        ],
        [
            "intros Hab Hf Hg Hfg.",
            "VernacExtend",
            "607222431d3fce7296b1fd3e9464a16423b28d86"
        ],
        [
            "apply Rminus_le_0.",
            "VernacExtend",
            "79ba7fff2b7dbdb704707b2f87011a5a974cd791"
        ],
        [
            "apply: is_RInt_ge_0 Hab _ _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: is_RInt_minus Hg Hf.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "apply -> Rminus_le_0.",
            "VernacExtend",
            "eb3010996ade724f542511d5c9a56441498f4fba"
        ],
        [
            "apply Hfg, Hx.",
            "VernacExtend",
            "af395052f6827104673c0bfeb6822a6d1a8947a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_le (f g : R -> R) (a b : R) : a <= b -> ex_RInt f a b -> ex_RInt g a b-> (forall x, a < x < b -> f x <= g x) -> RInt f a b <= RInt g a b.",
            "VernacStartTheoremProof",
            "49eb43fbf33ea9f92ad13798b446dbf521a2238f"
        ],
        [
            "intros Hab Hf Hg Hfg.",
            "VernacExtend",
            "607222431d3fce7296b1fd3e9464a16423b28d86"
        ],
        [
            "apply: is_RInt_le Hab _ _ Hfg.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: RInt_correct.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: RInt_correct.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_gt_0 (g : R -> R) (a b : R) : (a < b) -> (forall x, a < x < b -> (0 < g x)) -> (forall x, a <= x <= b -> continuous g x) -> 0 < RInt g a b.",
            "VernacStartTheoremProof",
            "ccb9fb3f8a7e68704e3315591b7641ff9294fe8a"
        ],
        [
            "intros Hab Hg Cg.",
            "VernacExtend",
            "93fee47b562f289a5b32b0ced649c5d2577b1571"
        ],
        [
            "set c := (a + b) / 2.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "assert (Hc : a < c < b).",
            "VernacExtend",
            "44f4ab22c3d734d954c0b75d95fefb2ef0b3fe9c"
        ],
        [
            "unfold c ; lra.",
            "VernacExtend",
            "a0f9d7ad1a79342c6632b84ae2185068cac1ac36"
        ],
        [
            "assert (H : locally c (fun (x : R) => g c / 2 <= g x)).",
            "VernacExtend",
            "320d22887185fae25d9dd3d502fcb6d82d45ee27"
        ],
        [
            "specialize (Hg _ Hc).",
            "VernacExtend",
            "f5e7d8d88b5997bc9503e9cba54f2b7f0b045145"
        ],
        [
            "specialize (Cg c (conj (Rlt_le _ _ (proj1 Hc)) (Rlt_le _ _ (proj2 Hc)))).",
            "VernacExtend",
            "8bb0637be61e6fc4d424732def194278df28d23c"
        ],
        [
            "case: (proj1 (filterlim_locally _ _) Cg (pos_div_2 (mkposreal _ Hg))) => /= d Hd.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists d => /= x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (Hd _ Hx).",
            "VernacExtend",
            "d18a5354f4cd3f2b91d0add1336110d97cb272d7"
        ],
        [
            "rewrite /ball /= /AbsRing_ball in Hd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rabs_lt_between' in Hd.",
            "VernacExtend",
            "fb5f229c327145e25359c0df6441f221ec717f7e"
        ],
        [
            "field_simplify (g c - g c / 2) in Hd.",
            "VernacExtend",
            "c6b411be7136f06a4c31e6406ec3f883b5c6f62b"
        ],
        [
            "by apply Rlt_le, Hd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (Ig : ex_RInt g a b).",
            "VernacExtend",
            "d6d915e1fa2755345860144ce6dc66028170305f"
        ],
        [
            "apply @ex_RInt_continuous.",
            "VernacExtend",
            "805e429c528bf81c611e1ac7a45cee4163d3dc54"
        ],
        [
            "rewrite Rmin_left.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rmax_right.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply Cg.",
            "VernacExtend",
            "69636881cf47f16eaa668d76de3c4bee2813fe96"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: H => /= d Hd.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "set a' := Rmax (c - d / 2) ((a + c) / 2).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set b' := Rmin (c + d / 2) ((c + b) / 2).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "assert (Hab' : a' < b').",
            "VernacExtend",
            "0408b140fb94b2c0a907717de6302fa71f6ccdee"
        ],
        [
            "apply Rlt_trans with c.",
            "VernacExtend",
            "f0d99091b0bb5d60cce8dde7f3e0cd0addb819e0"
        ],
        [
            "apply Rmax_case.",
            "VernacExtend",
            "cfd24564dbeed7e74b25ea72bdae495929c2ce09"
        ],
        [
            "generalize (cond_pos d) ; lra.",
            "VernacExtend",
            "675d2c3aad1a5938669cabf4a9405119ed0af795"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "apply Rmin_case.",
            "VernacExtend",
            "06bee284b3ab9229517272cc3728705bdc7b95ba"
        ],
        [
            "generalize (cond_pos d) ; lra.",
            "VernacExtend",
            "675d2c3aad1a5938669cabf4a9405119ed0af795"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "assert (Ha' : a < a' < b).",
            "VernacExtend",
            "5fca6eb03c946ecbf6b8c92fd2e285737e1fa2b5"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply Rlt_le_trans, Rmax_r.",
            "VernacExtend",
            "9bc0a1efe11d54854c9eb12370836a99854b49dc"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "apply Rmax_case.",
            "VernacExtend",
            "cfd24564dbeed7e74b25ea72bdae495929c2ce09"
        ],
        [
            "generalize (cond_pos d) ; lra.",
            "VernacExtend",
            "675d2c3aad1a5938669cabf4a9405119ed0af795"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "assert (Hb' : a < b' < b).",
            "VernacExtend",
            "c053d94061f74509288d00f8706bc98ec7c7e91c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply Rmin_r.",
            "VernacExtend",
            "d165954e4d055817b42cbc8960efd3fee45e4f16"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "assert (ex_RInt g a a').",
            "VernacExtend",
            "fb5387c086b3d94a7da693a6eabb7a4d46015ec8"
        ],
        [
            "eapply @ex_RInt_Chasles_1, Ig ; split ; by apply Rlt_le, Ha'.",
            "VernacExtend",
            "1cb178456538478f9c3c90d3c0950e385ac93a42"
        ],
        [
            "assert (ex_RInt g a' b).",
            "VernacExtend",
            "f8c666b429fd0fbde83b2b84d29bd5abe22fe0c5"
        ],
        [
            "eapply @ex_RInt_Chasles_2, Ig ; split ; by apply Rlt_le, Ha'.",
            "VernacExtend",
            "aedc3246a98310270a12b72610923d29acc7cfaa"
        ],
        [
            "assert (ex_RInt g a' b').",
            "VernacExtend",
            "27b37eccb73cb9688bafa171e77b933f00d1ede7"
        ],
        [
            "eapply @ex_RInt_Chasles_1, H0 ; split => // ; apply Rlt_le => //.",
            "VernacExtend",
            "b2d998a549f8850235eb4ba434b04ceeb2b8c4bc"
        ],
        [
            "by apply Hb'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (ex_RInt g b' b).",
            "VernacExtend",
            "507b866c6e4167066c6b407bbaab96e7d069fef1"
        ],
        [
            "eapply @ex_RInt_Chasles_2, H0 ; split => // ; apply Rlt_le => //.",
            "VernacExtend",
            "6bbf744bc4905a67b83a058be9e34f542b8e9fb4"
        ],
        [
            "by apply Hb'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(RInt_Chasles g a a' b) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_lt_0_compat.",
            "VernacExtend",
            "f52234f44384644fc6f21adef182d5c4067417f5"
        ],
        [
            "apply (is_RInt_ge_0 g a a').",
            "VernacExtend",
            "51627dd3fc7105d1bd571b7a48025e0c5457899a"
        ],
        [
            "by apply Rlt_le, Ha'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: RInt_correct.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "intros ; apply Rlt_le, Hg ; split.",
            "VernacExtend",
            "d8d04f4aa3ebab55aaa818131d8dc3ca00f63ed5"
        ],
        [
            "by apply H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rlt_trans, Ha'.",
            "VernacExtend",
            "f003690568782df7af744bfc114bc4289b113ded"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "rewrite -(RInt_Chasles g a' b' b) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_le_0_compat.",
            "VernacExtend",
            "5e363743b3a664026479ef3d5136c2f2648889ae"
        ],
        [
            "apply Rlt_le_trans with ((b' - a') * (g c / 2)).",
            "VernacExtend",
            "ed86f086fcc1c596f9a580b3b5e00ca2a7344c4c"
        ],
        [
            "specialize (Hg _ Hc).",
            "VernacExtend",
            "f5e7d8d88b5997bc9503e9cba54f2b7f0b045145"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "by apply -> Rminus_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rdiv_lt_0_compat => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply is_RInt_le.",
            "VernacExtend",
            "777613ff11452fbfdbdea41bf430fac0d62b06c0"
        ],
        [
            "apply Rlt_le, Hab'.",
            "VernacExtend",
            "be42da9824a5d93fc6dda6ae86f2209536b4692c"
        ],
        [
            "apply @is_RInt_const.",
            "VernacExtend",
            "635bf97c83cff99e215e93c52f7f8e3b88970230"
        ],
        [
            "exact: RInt_correct.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "intros ; apply Hd.",
            "VernacExtend",
            "2cdf969a263464a5407e4f86499977fccec7481b"
        ],
        [
            "rewrite (double_var d).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rabs_lt_between' ; split.",
            "VernacExtend",
            "219fa8a18e1bec41b3e80f61c4b73c04c06468a8"
        ],
        [
            "eapply Rlt_trans, H3.",
            "VernacExtend",
            "0e813af8d1c70e3b7635d184ff2adc9e72f170cc"
        ],
        [
            "eapply Rlt_le_trans, Rmax_l.",
            "VernacExtend",
            "4652174ee5227e1c8551c5914ce4e531aaf862ed"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify.",
            "VernacExtend",
            "969fc87537fdaad612d2a1aa70d377f614654753"
        ],
        [
            "by apply is_pos_div_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rlt_trans.",
            "VernacExtend",
            "680e916b99a4206ca68b8a6681793ad9d4abf6e8"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply Rmin_l.",
            "VernacExtend",
            "19942458506c6b3427aea84d1ee7179f00e19f1c"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify.",
            "VernacExtend",
            "969fc87537fdaad612d2a1aa70d377f614654753"
        ],
        [
            "by apply is_pos_div_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply is_RInt_ge_0.",
            "VernacExtend",
            "024a6782e13a2338b307e453e7b2294369e8997b"
        ],
        [
            "2: exact: RInt_correct.",
            "VernacExtend",
            "09939b7357f78e989632ff3782b1516d7394745a"
        ],
        [
            "apply Rlt_le, Hb'.",
            "VernacExtend",
            "527ca8da82627a1261cb6a553e3950486b5841ee"
        ],
        [
            "intros ; apply Rlt_le, Hg.",
            "VernacExtend",
            "551002a13d9dd01e07287322dac6c8e952aa7270"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply Rlt_trans, H3.",
            "VernacExtend",
            "0e813af8d1c70e3b7635d184ff2adc9e72f170cc"
        ],
        [
            "by apply Hb'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_lt (f g : R -> R) (a b : R) : a < b -> (forall x : R, a <= x <= b ->continuous g x) -> (forall x : R, a <= x <= b ->continuous f x) -> (forall x : R, a < x < b -> f x < g x) -> RInt f a b < RInt g a b.",
            "VernacStartTheoremProof",
            "56030ccdef3187b3eac53864e4dfa39718460133"
        ],
        [
            "intros Hab Cg Cf Hfg.",
            "VernacExtend",
            "6d39b5481172a634483821ebecd57f1e21250a0d"
        ],
        [
            "apply Rminus_lt_0.",
            "VernacExtend",
            "266ec80c870ca91ace5efd2beddab25e945c4342"
        ],
        [
            "assert (Ig : ex_RInt g a b).",
            "VernacExtend",
            "d6d915e1fa2755345860144ce6dc66028170305f"
        ],
        [
            "apply @ex_RInt_continuous.",
            "VernacExtend",
            "805e429c528bf81c611e1ac7a45cee4163d3dc54"
        ],
        [
            "rewrite Rmin_left.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rmax_right.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply Cg.",
            "VernacExtend",
            "69636881cf47f16eaa668d76de3c4bee2813fe96"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (ex_RInt f a b).",
            "VernacExtend",
            "45b755b1d90798ec22287b16b20e1a070029af7f"
        ],
        [
            "apply @ex_RInt_continuous.",
            "VernacExtend",
            "805e429c528bf81c611e1ac7a45cee4163d3dc54"
        ],
        [
            "rewrite Rmin_left.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rmax_right.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply Cf.",
            "VernacExtend",
            "8b2a93b9c540e05419f8d9aafc9391eadc576c23"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -[Rminus]/(@minus R_AbelianGroup) -RInt_minus //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply RInt_gt_0 => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now intros ; apply -> Rminus_lt_0 ; apply Hfg.",
            "VernacExtend",
            "e2768033b17eb8bfdb248ce7ba9b89d3c266b3c1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply @continuous_minus.",
            "VernacExtend",
            "fe5e5907f865ddbd9467c08df0599c2babd1c10c"
        ],
        [
            "by apply Cg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Cf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abs_RInt_le_const : forall (f : R -> R) a b M, a <= b -> ex_RInt f a b -> (forall t, a <= t <= b -> Rabs (f t) <= M) -> Rabs (RInt f a b) <= (b - a) * M.",
            "VernacStartTheoremProof",
            "2ee9bed410c18a7483e83fab089b3d39306ac7ef"
        ],
        [
            "intros f a b M Hab If H.",
            "VernacExtend",
            "56b8d724c1e1cb3081d9773b0af108887ac8af9d"
        ],
        [
            "apply: (norm_RInt_le_const f) => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: RInt_correct.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_Reals_aux_1 (f : R -> R) (a b : R) : forall pr : Riemann_integrable f a b, is_RInt f a b (RiemannInt pr).",
            "VernacStartTheoremProof",
            "5c4179778e3b76ba07ae5e601cf10800d9de4de3"
        ],
        [
            "wlog: a b / (a < b) => [Hw | Hab].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (total_order_T a b) => [[Hab | <-] | Hab] pr.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite RiemannInt_P9.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: is_RInt_point.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move: (RiemannInt_P1 pr) => pr'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (RiemannInt_P8 pr pr').",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: is_RInt_swap.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply Hw => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /is_RInt.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros pr.",
            "VernacExtend",
            "7bef946b109ee1bdf0f09752f318f1e57335c8c0"
        ],
        [
            "apply filterlim_locally.",
            "VernacExtend",
            "3ff3a9612e2ccfd2231ba92f1d95cd7277851a18"
        ],
        [
            "unfold Riemann_fine.",
            "VernacExtend",
            "92cf17224b82c06754f9262aff9a8ec090d45cd9"
        ],
        [
            "rewrite Rmin_left.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "2: now apply Rlt_le.",
            "VernacExtend",
            "9f23ebd721c661ddcc58b37b3d2937dd87b4451e"
        ],
        [
            "rewrite Rmax_right.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "2: now apply Rlt_le.",
            "VernacExtend",
            "9f23ebd721c661ddcc58b37b3d2937dd87b4451e"
        ],
        [
            "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
            "VernacExtend",
            "fca02487127bf9775753594d7fee9b399ab3dff1"
        ],
        [
            "cut (forall (phi : StepFun a b) (eps : posreal), exists alpha : posreal, forall ptd : SF_seq, pointed_subdiv ptd -> seq_step (SF_lx ptd) < alpha -> SF_h ptd = a -> last (SF_h ptd) (unzip1 (SF_t ptd)) = b -> Rabs (RiemannInt_SF phi - 1 * Riemann_sum phi ptd) <= eps).",
            "VernacExtend",
            "6acbab6de5bb708a2d22f16e06a7384e2719981d"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "rewrite /RiemannInt /= -/(Rminus _ _) => eps ; case: RiemannInt_exists => If HIf.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "set eps2 := pos_div_2 eps.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set eps4 := pos_div_2 eps2.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "case: (HIf _ (cond_pos eps4)) => {HIf} N HIf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (nfloor_ex (/eps4) (Rlt_le _ _ (Rinv_0_lt_compat _ (cond_pos eps4)))) => n Hn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (HIf (N+n)%nat (le_plus_l _ _)) => {HIf}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /phi_sequence /R_dist ; case: pr => phi [psi pr] ; simpl RiemannInt_SF => HIf.",
            "VernacExtend",
            "2253759ff5c580854290fce82296a80357452125"
        ],
        [
            "have H0 : Rabs (RiemannInt_SF psi) < eps4.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 pr).",
            "VernacExtend",
            "3447f06e29cf5d3d22616c82e25eb5e59123d706"
        ],
        [
            "rewrite -(Rinv_involutive eps4 (Rgt_not_eq _ _ (cond_pos eps4))) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_Rinv.",
            "VernacExtend",
            "1c2230e335301795a7c124c6298eabc78161766e"
        ],
        [
            "apply Rinv_0_lt_compat, eps4.",
            "VernacExtend",
            "15c92e40100c756b01432e168821936a70dc8dc1"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply Rlt_le, Rlt_le_trans with (1 := proj2 Hn).",
            "VernacExtend",
            "7ac9b651597952ee1352d7c42cce9bdcb356b2a2"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "apply le_INR, le_plus_r.",
            "VernacExtend",
            "b38ac1302b165d7ed0859dd038824917d5d0f5f4"
        ],
        [
            "case: (H phi eps4) => alpha0 Hphi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (H psi eps4) => {H} alpha1 Hpsi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have Halpha : (0 < Rmin alpha0 alpha1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rmin_case_strong => _ ; [apply alpha0 | apply alpha1].",
            "VernacExtend",
            "d3eee5af4444419980a12f16151974209ee42ce1"
        ],
        [
            "set alpha := mkposreal _ Halpha.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists alpha => ptd Hstep [Hsort [Ha Hb]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (double_var eps) 1?(double_var (eps/2)) ?Rplus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /abs /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rabs_minus_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (_-_) with (-(RiemannInt_SF phi - If) + (RiemannInt_SF phi - Riemann_sum f ptd)) ; [ | rewrite /scal /= /mult /= ; by ring_simplify ].",
            "VernacExtend",
            "83ef38f663aba81330916afc46f0acc52d65299e"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _), Rplus_lt_le_compat.",
            "VernacExtend",
            "ae608eef59e7a8c86ade67ce5987676b69929b3a"
        ],
        [
            "rewrite Rabs_Ropp ; apply HIf.",
            "VernacExtend",
            "1a7648aa9bcfb311073dd0f0fb7aa5415f36e0aa"
        ],
        [
            "clear HIf ; replace (_-_) with ((RiemannInt_SF phi - 1* Riemann_sum phi ptd) + (Riemann_sum phi ptd - Riemann_sum f ptd)) ; [ | by ring_simplify].",
            "VernacExtend",
            "4019724006aaf3c5a7daf2c91c5b9f1086231ecf"
        ],
        [
            "apply Rle_trans with (1 := Rabs_triang _ _), Rplus_le_compat.",
            "VernacExtend",
            "7229a71b69e5162ae452b4898d41b2e940a4d511"
        ],
        [
            "apply Hphi => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rlt_le_trans with (1 := Hstep) ; rewrite /alpha ; apply Rmin_l.",
            "VernacExtend",
            "86b5be0a329cfa55826d260a03b9fb840ecd29f8"
        ],
        [
            "rewrite -Ropp_minus_distr' Rabs_Ropp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "change Rminus with (@minus R_AbelianGroup).",
            "VernacExtend",
            "13c7988be1f5587f51a918106cc817237cec041e"
        ],
        [
            "rewrite -Riemann_sum_minus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have H1 : (forall t : R, SF_h ptd <= t <= last (SF_h ptd) (SF_lx ptd) -> Rabs (f t - phi t) <= psi t).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => t Ht.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply pr ; move: (Rlt_le _ _ Hab) ; rewrite /Rmin /Rmax ; case: Rle_dec => // _ _ ; rewrite -Ha -Hb //.",
            "VernacExtend",
            "c7333dd4382e44dc13ea98581c57d1eaa5e344f3"
        ],
        [
            "apply Rle_trans with (1 := Riemann_sum_norm (fun t => f t - phi t) _ _ Hsort H1).",
            "VernacExtend",
            "66d19f247b50ff25279d7c3a84bd7219866b6bb7"
        ],
        [
            "apply Rle_trans with (1 := Rle_abs _).",
            "VernacExtend",
            "1a58cad437532711b1f8990871ecb35f24713c82"
        ],
        [
            "replace (Riemann_sum psi ptd) with (-(RiemannInt_SF psi - 1* Riemann_sum psi ptd) + RiemannInt_SF psi) ; [ | by ring_simplify].",
            "VernacExtend",
            "da5b634fcd39e5832ba6a4aec6974d263b41d17d"
        ],
        [
            "apply Rle_trans with (1 := Rabs_triang _ _), Rplus_le_compat.",
            "VernacExtend",
            "7229a71b69e5162ae452b4898d41b2e940a4d511"
        ],
        [
            "rewrite Rabs_Ropp ; apply Hpsi => //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "apply Rlt_le_trans with (1 := Hstep) ; rewrite /alpha ; apply Rmin_r.",
            "VernacExtend",
            "77496774101dbab08aba548f60b52899562ef868"
        ],
        [
            "apply Rlt_le, H0.",
            "VernacExtend",
            "a1dd94bddc97ddeefbd28f22f3a1aef1bdf5a09e"
        ],
        [
            "case => phi [lx [ly Hphi]] eps /= ; rewrite /RiemannInt_SF /subdivision /subdivision_val ; move: (Rlt_le _ _ Hab) ; case: Rle_dec => //= _ _.",
            "VernacExtend",
            "328f6c12c0daf778b95f29a50e9d2299e2ba65a3"
        ],
        [
            "clear pr.",
            "VernacExtend",
            "b40694c56518ab93e538c58a2e3d9a69b02c3ea8"
        ],
        [
            "move: (Rlt_le _ _ Hab) Hphi => {Hab} ; elim: lx ly eps a b => [ | lx0 lx IH] ly eps a b Hab.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "case ; intuition ; by [].",
            "VernacExtend",
            "eca8d6e370d13aadc33954f72503204fc6e08151"
        ],
        [
            "case: lx IH ly => [ | lx1 lx] IH ; case => [ {IH} | ly0 ly] Had ; try by (case: Had ; intuition ; by []).",
            "VernacExtend",
            "2906658ba5c272b473591a601bf1dd046b109346"
        ],
        [
            "exists eps => ptd Hptd Hstep Ha Hb /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Riemann_sum_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rmult_0_r Rminus_0_r Rabs_R0 ; apply Rlt_le, eps.",
            "VernacExtend",
            "90dca4ceb943fe839d0eb932eed524897e186059"
        ],
        [
            "by apply ptd_sort.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /SF_lx /= Hb Ha ; case: Had => {Ha Hb} _ [Ha [Hb _]] ; move: Ha Hb ; rewrite /Rmin /Rmax ; case: Rle_dec => // _ <- <- //.",
            "VernacExtend",
            "2e226b685dda0e0f23912adae173892db4cbc27f"
        ],
        [
            "set eps2 := pos_div_2 eps ; set eps4 := pos_div_2 eps2.",
            "VernacExtend",
            "7405ffc63057f1493a790d3f39e251cc5fefe81f"
        ],
        [
            "case: (IH ly eps4 lx1 b) => {IH}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "replace b with (last 0 (Rlist2seq (RList.cons lx0 (RList.cons lx1 lx)))).",
            "VernacExtend",
            "e6ac35f8201fbc7a99f9164e0a420d64f486fac3"
        ],
        [
            "apply (sorted_last (Rlist2seq (RList.cons lx0 (RList.cons lx1 lx))) 1%nat) with (x0 := 0).",
            "VernacExtend",
            "055c16d4d606a86a21d37c4075ac622af3a8bfd1"
        ],
        [
            "apply sorted_compat ; rewrite seq2Rlist_bij ; apply Had.",
            "VernacExtend",
            "88c1d3d9b49ca0a476a3339facddc3a69a1a0048"
        ],
        [
            "simpl ; apply lt_n_S, lt_O_Sn.",
            "VernacExtend",
            "233e374688342cdb55c03aed8f45fd14dcbe62a2"
        ],
        [
            "case: Had => /= _ [_ [Hb _]] ; move: Hb ; rewrite /Rmax ; case : Rle_dec => //= _ ; elim: (lx) lx1 => //= h s IH _ ; apply IH.",
            "VernacExtend",
            "1c989fd84f7e21f36375fdec055d88c745d8b6ca"
        ],
        [
            "apply (StepFun_P7 Hab Had).",
            "VernacExtend",
            "10e093a160f434d057c50b7d9425756ace6bab40"
        ],
        [
            "move => /= alpha1 IH.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "cut (forall eps : posreal, exists alpha : posreal, forall ptd : SF_seq, pointed_subdiv ptd -> seq_step (SF_lx ptd) < alpha -> SF_h ptd = a -> last (SF_h ptd) (SF_lx ptd) = lx1 -> Rabs (ly0 * (lx1 - lx0) - Riemann_sum phi ptd) <= eps).",
            "VernacExtend",
            "7b6e9c7cb25b3fd8112ad58abf5cc2e0710d4482"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "case: (H eps4) => {H} alpha2 H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "set fmin1 := foldr Rmin 0 (ly0::Rlist2seq ly).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set fmin2 := foldr Rmin 0 (map phi (lx0::lx1::Rlist2seq lx)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set fmin := Rmin fmin1 fmin2.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set fmax1 := foldr Rmax 0 (ly0::Rlist2seq ly).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set fmax2 := foldr Rmax 0 (map phi (lx0::lx1::Rlist2seq lx)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set fmax := Rmax fmax1 fmax2.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have Ha3 : (0 < eps4 / (Rmax (fmax - fmin) 1)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rdiv_lt_0_compat ; [ apply eps4 | ].",
            "VernacExtend",
            "039ce4d191a418f5b008bab29adc3246e5d54846"
        ],
        [
            "apply Rlt_le_trans with (2 := RmaxLess2 _ _), Rlt_0_1.",
            "VernacExtend",
            "e7aaf283fd616169c70d518a8da829bc7a08cbca"
        ],
        [
            "set alpha3 := mkposreal _ Ha3.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have Halpha : (0 < Rmin (Rmin alpha1 alpha2) alpha3).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rmin_case_strong => _ ; [ | apply alpha3].",
            "VernacExtend",
            "8ca2dab06d144caf2916166e4047c9a0e6e7a13d"
        ],
        [
            "apply Rmin_case_strong => _ ; [ apply alpha1 | apply alpha2].",
            "VernacExtend",
            "8ed32fc67cdfbcc1cd668f0f48123e723fca6d9e"
        ],
        [
            "set alpha := mkposreal _ Halpha.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists alpha => ptd Hptd Hstep Ha Hb.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "suff Hff : forall x, a <= x <= b -> fmin <= phi x <= fmax.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "suff Hab1 : forall i, (i <= SF_size ptd)%nat -> a <= nth 0 (SF_lx ptd) i <= b.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "suff Hab0 : a <= lx1 <= b.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "rewrite (SF_Chasles _ _ lx1 (SF_h ptd)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (_-_) with ((ly0 * (lx1 - lx0) - 1* Riemann_sum phi (SF_cut_down' ptd lx1 (SF_h ptd))) + (Int_SF ly (RList.cons lx1 lx) - 1* Riemann_sum phi (SF_cut_up' ptd lx1 (SF_h ptd)))) ; [ | rewrite /plus /= ; by ring_simplify].",
            "VernacExtend",
            "6bd8f4cfa124b4fbed1bd5ef3da3809f28329a63"
        ],
        [
            "rewrite (double_var eps) ; apply Rle_trans with (1 := Rabs_triang _ _), Rplus_le_compat.",
            "VernacExtend",
            "e9a4e711f9385b2888a50077d780298524fa9cba"
        ],
        [
            "set ptd_r_last := (SF_last a (SF_cut_down' ptd lx1 a)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set ptd_r_belast := (SF_belast (SF_cut_down' ptd lx1 a)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set ptd_r := SF_rcons ptd_r_belast (lx1, (fst (SF_last a ptd_r_belast) + lx1)/2).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "move: (H ptd_r) => {H} H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace (_-_) with ((ly0 * (lx1 - lx0) - Riemann_sum phi ptd_r) + (phi ((fst (SF_last 0 ptd_r_belast) + lx1)/2) - phi (snd ptd_r_last)) * (lx1 - fst (SF_last 0 ptd_r_belast))).",
            "VernacExtend",
            "399ea5b680301efeb834de3e08c11f99f6cbb120"
        ],
        [
            "rewrite (double_var (eps/2)) ; apply Rle_trans with (1 := Rabs_triang _ _), Rplus_le_compat.",
            "VernacExtend",
            "e9a4e711f9385b2888a50077d780298524fa9cba"
        ],
        [
            "apply: H => {IH}.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Focus 3.",
            "VernacFocus",
            "10a01787535cf3dcd1cb140219c5b96865dda5c0"
        ],
        [
            "rewrite -Ha /ptd_r /ptd_r_belast.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (proj1 Hab0) ; rewrite -Ha.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply SF_cons_dec with (s := ptd) => [x0 | [x0 y0] s] //= Hx0 ; by case: Rle_dec.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "Focus 3.",
            "VernacFocus",
            "10a01787535cf3dcd1cb140219c5b96865dda5c0"
        ],
        [
            "revert ptd_r_belast ptd_r ; move: (proj1 Hab0) ; rewrite -Ha ; apply SF_cons_ind with (s := ptd) => [x0 | [x0 y0] s IH] //= Hx0 ; case: Rle_dec => //= _.",
            "VernacExtend",
            "2486a35a47366872742e66224912eaa8fc025dcd"
        ],
        [
            "by rewrite unzip1_rcons /= last_rcons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "revert ptd_r_belast ptd_r Hptd ; apply SF_cons_ind with (s := ptd) => /= [ x0 | [x0 y0] s IH ] Hptd.",
            "VernacExtend",
            "b3c27df2427ede8f341b9666ee53b66119323cd5"
        ],
        [
            "rewrite /SF_cut_down' /SF_belast /SF_last /SF_rcons /SF_ly /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -?(last_map (@fst R R)) -unzip1_fst /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?unzip2_rcons ?unzip1_rcons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?unzip1_belast ?unzip2_belast /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?unzip1_behead ?unzip2_behead /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case => /= [ _ | i Hi] .",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec => //= Hx0 ; lra.",
            "VernacExtend",
            "71af18e7fd216f2cb34e4b8f8166e25c3faef19a"
        ],
        [
            "contradict Hi ; apply le_not_lt.",
            "VernacExtend",
            "53ca4983643b12e288313af360b00137256c8acf"
        ],
        [
            "case: Rle_dec => //= Hx0 ; rewrite /SF_size /= ; apply le_n_S, le_O_n.",
            "VernacExtend",
            "60aa7c864173f5a220255cf5552853c9a3c4e586"
        ],
        [
            "move: (IH (ptd_cons _ _ Hptd)) => {IH} IH.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case => [ _ | i Hi].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /SF_cut_down' /SF_belast /SF_last /SF_rcons /SF_ly /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -?(last_map (@fst R R)) -unzip1_fst /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?unzip2_rcons ?unzip1_rcons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?unzip1_belast ?unzip2_belast /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?unzip1_behead ?unzip2_behead /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec => //= Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec => //= Hx1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: Hptd Hx1 ; apply SF_cons_dec with (s := s) => {s IH} /= [x1 | [x1 y1] s] //= Hptd Hx1.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by apply (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Rle_dec => //= Hx2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "move: Hi (IH i) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite ?SF_size_rcons -?SF_size_lx ?SF_lx_rcons ?SF_ly_rcons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /SF_cut_down' /SF_belast /SF_last /SF_rcons /SF_ly /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -?(last_map (@fst R R)) -?unzip1_fst.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?unzip2_rcons ?unzip1_rcons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?unzip1_belast ?unzip2_belast /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?unzip1_behead ?unzip2_behead /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec (SF_h s) lx1) => //= Hx1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite size_belast size_belast'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: Hx1 ; apply SF_cons_dec with (s := s) => {s Hptd} /= [ x1 | [x1 y1] s] //= Hx1.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move => Hi IH ; apply IH ; by apply lt_S_n.",
            "VernacExtend",
            "1dc6cfffa043c59ffee1358f5af350ac5318eefd"
        ],
        [
            "case: Rle_dec => //= Hx2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => Hi IH ; apply IH ; by apply lt_S_n.",
            "VernacExtend",
            "1dc6cfffa043c59ffee1358f5af350ac5318eefd"
        ],
        [
            "move => Hi IH ; apply IH ; by apply lt_S_n.",
            "VernacExtend",
            "1dc6cfffa043c59ffee1358f5af350ac5318eefd"
        ],
        [
            "move => Hi ; by apply lt_S_n, lt_n_O in Hi.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "move => Hi ; by apply lt_S_n, lt_n_O in Hi.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmin_r alpha1 alpha2) ; apply Rlt_le_trans with (2 := Rmin_l _ alpha3).",
            "VernacExtend",
            "e1dfe73b784624fbaad4e473452de4ff3b7d54f3"
        ],
        [
            "apply Rle_lt_trans with (2 := Hstep) => {Hstep}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: Hab0 ; rewrite -Ha -Hb ; revert ptd_r_belast ptd_r => {Hab1} ; apply SF_cons_ind with (s := ptd) => /= [x0 | [x0 y0] s IH] //= Hab0.",
            "VernacExtend",
            "9629d9ed114c79b5c6da2bdee38f8e6fd5f7ed97"
        ],
        [
            "rewrite /SF_lx /SF_rcons /SF_belast /SF_last /SF_cut_down' /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (proj1 Hab0) ; case: Rle_dec => //= _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "rewrite (Rle_antisym _ _ (proj1 Hab0) (proj2 Hab0)) /seq_step /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rminus_eq_0 Rabs_R0 ; apply Rmax_case_strong ; by intuition.",
            "VernacExtend",
            "be4be804ab68391c53b1e9a84927f1790ac154e5"
        ],
        [
            "move: Hab0 (fun Hx1 => IH (conj Hx1 (proj2 Hab0))) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s} /= [x1 | [x1 y1] s] //= Hab0 IH.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /SF_cut_down' /SF_belast /SF_last /SF_rcons /SF_lx /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (proj1 Hab0) ; case: (Rle_dec x0 lx1) => //= _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "case: Rle_dec => //= Hx1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /seq_step /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_max_compat_l.",
            "VernacExtend",
            "d6c5077a02ec996ed75766dc21906acc6362fdc2"
        ],
        [
            "rewrite (Rle_antisym _ _ Hx1 (proj2 Hab0)) Rminus_eq_0 Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmax_case_strong ; by intuition.",
            "VernacExtend",
            "2ef132429f57f0489b6d980e704e14c92cf06057"
        ],
        [
            "rewrite /seq_step /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_max_compat_r.",
            "VernacExtend",
            "4a212470a37281f8c5db528307f77c27e6bca0c3"
        ],
        [
            "apply Rle_trans with (2 := Rle_abs _) ; rewrite Rabs_right.",
            "VernacExtend",
            "9f29c0c4ccc0e58f3137074e1a31d19f54c3e62a"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "by apply Rlt_le, Rnot_le_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_ge ; rewrite -Rminus_le_0 ; by apply Hab0.",
            "VernacExtend",
            "fa743cd59a66c77d79e2ef907066890fccdd46fd"
        ],
        [
            "move: IH ; rewrite /SF_cut_down' /SF_belast /SF_last /SF_rcons /SF_lx /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move: (proj1 Hab0) ; case: (Rle_dec x0 lx1) => //= _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1 IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (IH Hx1) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Rle_dec (SF_h s) lx1) => //= Hx2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /seq_step -?(last_map (@fst R R)) /= => IH ; apply Rle_max_compat_l, IH.",
            "VernacExtend",
            "51662ffa647da78802bd7fd4f0862147102f80f8"
        ],
        [
            "rewrite /seq_step /= ; apply Rle_max_compat_l.",
            "VernacExtend",
            "c0a9ef9c3316d39d1d5f769af73e37eb89bba8b3"
        ],
        [
            "rewrite /seq_step /= ; apply Rmax_le_compat.",
            "VernacExtend",
            "a218f4f6154c0743958807b78d1f1d69e4079b7d"
        ],
        [
            "apply Rle_trans with (2 := Rle_abs _) ; rewrite Rabs_right.",
            "VernacExtend",
            "9f29c0c4ccc0e58f3137074e1a31d19f54c3e62a"
        ],
        [
            "by apply Rplus_le_compat_r, Rlt_le, Rnot_le_lt, Hx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_ge ; rewrite -Rminus_le_0 ; apply Hab0.",
            "VernacExtend",
            "7dce1b8fefbed31dc50454637fa6636f296a44bd"
        ],
        [
            "apply Rmax_case_strong => _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "apply SF_cons_ind with (s := s) => {s IH Hab0} /= [x2 | [x2 y2] s IH] //=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exact: Rle_refl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Rmax_case_strong => _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "exact: IH.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "clear H IH.",
            "VernacExtend",
            "9232024a2339a771a45f635d960bfc383fef74e9"
        ],
        [
            "apply Rle_trans with ((fmax - fmin) * alpha3).",
            "VernacExtend",
            "4b014bb31e2409d39c9facedfa95f41e3be11df2"
        ],
        [
            "rewrite Rabs_mult ; apply Rmult_le_compat ; try apply Rabs_pos.",
            "VernacExtend",
            "d81f2a3201095401254d4f6dcedb3c0068021318"
        ],
        [
            "apply Rabs_le_between.",
            "VernacExtend",
            "797611e08509d5447c3eba540cc1fb22a3c90419"
        ],
        [
            "rewrite Ropp_minus_distr'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff H0 : a <= (fst (SF_last 0 ptd_r_belast) + lx1) / 2 <= b.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "suff H1 : a <= snd ptd_r_last <= b.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "split ; apply Rplus_le_compat, Ropp_le_contravar ; by apply Hff.",
            "VernacExtend",
            "521471bef610e85c83f6e7d6c3418939dfb5e39b"
        ],
        [
            "revert ptd_r_last Hab1 Hptd.",
            "VernacExtend",
            "158abd814010b0e8e5e872bfe3a78b7b4485e63f"
        ],
        [
            "apply SF_cons_ind with (s := ptd) => /= [ x0 | [x0 y0] s IH] // Hab1 Hptd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /SF_cut_down' /= ; case: Rle_dec => //= ; by intuition.",
            "VernacExtend",
            "edc181ae1523612867809723d78a66d7ba4793ea"
        ],
        [
            "rewrite SF_size_cons in Hab1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (IH (fun i Hi => Hab1 (S i) (le_n_S _ _ Hi)) (ptd_cons _ _ Hptd)) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: Hptd (Hab1 O (le_O_n _)) (Hab1 1%nat (le_n_S _ _ (le_0_n _))) => {Hab1}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s Hab0} /= [ x1 | [x1 y1] s] //= Hptd Hx0 Hx1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /SF_cut_down' /SF_last /= -?(last_map (@snd R R)) -?unzip2_snd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "apply Rle_trans with (1 := proj1 Hx0), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "df7c1d559c1b2e1631520fe374081689c1889215"
        ],
        [
            "apply Rle_trans with (2 := proj2 Hx1), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "06f8ec2c148684920f137a66a8444db866bfad38"
        ],
        [
            "move => _ ; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "apply Rle_trans with (1 := proj1 Hx0), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "df7c1d559c1b2e1631520fe374081689c1889215"
        ],
        [
            "apply Rle_trans with (2 := proj2 Hx1), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "06f8ec2c148684920f137a66a8444db866bfad38"
        ],
        [
            "move => _ ; by intuition.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "rewrite /SF_cut_down' /SF_last /= -?(last_map (@snd R R)) -?unzip2_snd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec _ lx1) => //= Hx2'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "apply Rle_trans with (1 := proj1 Hx0), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "df7c1d559c1b2e1631520fe374081689c1889215"
        ],
        [
            "apply Rle_trans with (2 := proj2 Hx1), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "06f8ec2c148684920f137a66a8444db866bfad38"
        ],
        [
            "move => _ ; by intuition.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "cut (a <= fst (SF_last 0 ptd_r_belast) <= b).",
            "VernacExtend",
            "ad24d1c5bd416bf6f4e30c755d3c9ca8faa72b8a"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "revert ptd_r_belast ptd_r Hab1 Hptd.",
            "VernacExtend",
            "7adc2ca1a3d8102d1f90b1d7afda108c1412f1c1"
        ],
        [
            "apply SF_cons_ind with (s := ptd) => /= [ x0 | [x0 y0] s IH] // Hab1 Hptd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /SF_cut_down' /= ; case: Rle_dec => //= Hx0.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply (Hab1 O (le_O_n _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hab0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite SF_size_cons in Hab1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (IH (fun i Hi => Hab1 (S i) (le_n_S _ _ Hi)) (ptd_cons _ _ Hptd)) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: Hptd (Hab1 O (le_O_n _)) (Hab1 1%nat (le_n_S _ _ (le_0_n _))) => {Hab1}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s} /= [ x1 | [x1 y1] s] //= Hptd Hx0 Hx1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /SF_cut_down' /SF_last /= -?(last_map (@fst R R)) -?unzip1_fst.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; by apply Hx0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; by apply Hab0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "rewrite /SF_cut_down' /SF_last /= -?(last_map (@fst R R)) -?unzip1_fst.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec _ lx1) => //= Hx2'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; by apply Hx0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; by apply Hab0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "revert ptd_r_belast ptd_r Hab1 Hptd.",
            "VernacExtend",
            "7adc2ca1a3d8102d1f90b1d7afda108c1412f1c1"
        ],
        [
            "apply SF_cons_ind with (s := ptd) => /= [ x0 | [x0 y0] s IH] // Hab1 Hptd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /SF_cut_down' /= ; case: Rle_dec => //= Hx0.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply (Hab1 O (le_O_n _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hab0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite SF_size_cons in Hab1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (IH (fun i Hi => Hab1 (S i) (le_n_S _ _ Hi)) (ptd_cons _ _ Hptd)) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: Hptd (Hab1 O (le_O_n _)) (Hab1 1%nat (le_n_S _ _ (le_0_n _))) => {Hab1}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s} /= [ x1 | [x1 y1] s] //= Hptd Hx0 Hx1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /SF_cut_down' /SF_last /= -?(last_map (@fst R R)) -?unzip1_fst.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; by apply Hx0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; by apply Hab0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "rewrite /SF_cut_down' /SF_last /= -?(last_map (@fst R R)) -?unzip1_fst.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec _ lx1) => //= Hx2'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; by apply Hx0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; by apply Hab0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "apply Rle_trans with (2 := Rmin_r (Rmin alpha1 alpha2) alpha3).",
            "VernacExtend",
            "81c6543ebe806622fd24255e5788d9e80e853c80"
        ],
        [
            "apply Rle_trans with (2 := Rlt_le _ _ Hstep).",
            "VernacExtend",
            "496d0abecbb3b28a07f3b47c424bd5c3ccb2fc2d"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Ha -Hb in Hab0 ; revert ptd_r_belast ptd_r Hptd Hab0 ; apply SF_cons_ind with (s := ptd) => /= [x0 | [x0 y0] s IH] //=.",
            "VernacExtend",
            "6dab47bd4f5769b1640f96e2b27c5b55c77f3df1"
        ],
        [
            "rewrite /SF_cut_down' /SF_belast /SF_last /seq_step /= => Hptd Hab0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: (proj1 Hab0) ; case: Rle_dec => //= _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "rewrite (Rle_antisym _ _ (proj1 Hab0) (proj2 Hab0)) ; apply Req_le ; by ring.",
            "VernacExtend",
            "1d67ac49af71d51b111446463aa10d0d01adeaee"
        ],
        [
            "move => Hptd Hab0 ; move: (fun Hx1 => IH (ptd_cons _ _ Hptd) (conj Hx1 (proj2 Hab0))) => {IH}.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite /SF_cut_down' /SF_belast /SF_last /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (proj1 Hab0) ; case: (Rle_dec x0 _) => //= _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "case: (Rle_dec (SF_h s)) => //= Hx1 IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (proj1 Hab0) Hx1 (IH Hx1) => {IH Hab0} Hx0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s Hptd} /= [x1 | [x1 y1] s] /= Hx1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /seq_step /= => IH.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_trans with (1 := IH) ; by apply RmaxLess2.",
            "VernacExtend",
            "4ad9db0b1c0dcaccefa812757223bcc83584fa85"
        ],
        [
            "case: (Rle_dec (SF_h s)) => //= Hx2 IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: Hx2 IH ; apply SF_cons_dec with (s := s) => {s} /= [x2 | [x2 y2] s] /= Hx2.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite /seq_step /= => IH.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_trans with (1 := IH) ; by apply RmaxLess2.",
            "VernacExtend",
            "4ad9db0b1c0dcaccefa812757223bcc83584fa85"
        ],
        [
            "case: (Rle_dec (SF_h s)) => //= Hx3 IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_trans with (1 := IH).",
            "VernacExtend",
            "7edff2fefc3e3d55d4db068dd3dc9e178b58a76c"
        ],
        [
            "rewrite /seq_step /= ; by apply RmaxLess2.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite /seq_step /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess2 _ _).",
            "VernacExtend",
            "432c14b8c59cdd6113568821c7cb457e4b47a707"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess2 _ _).",
            "VernacExtend",
            "432c14b8c59cdd6113568821c7cb457e4b47a707"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess1 _ _).",
            "VernacExtend",
            "3db0e4bc85c3790a615cc62634372484c629a331"
        ],
        [
            "apply Rle_trans with (2 := Rle_abs _), Rplus_le_compat_r, Rlt_le, Rnot_le_lt, Hx3.",
            "VernacExtend",
            "9b23aa9f9aec0b386b3c77f611814c6079306ff1"
        ],
        [
            "rewrite /seq_step /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess2 _ _).",
            "VernacExtend",
            "432c14b8c59cdd6113568821c7cb457e4b47a707"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess1 _ _).",
            "VernacExtend",
            "3db0e4bc85c3790a615cc62634372484c629a331"
        ],
        [
            "apply Rle_trans with (2 := Rle_abs _), Rplus_le_compat_r, Rlt_le, Rnot_le_lt, Hx2.",
            "VernacExtend",
            "11c5ca780928d844985145dd69221ac5dc1b550e"
        ],
        [
            "rewrite /seq_step /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess1 _ _).",
            "VernacExtend",
            "3db0e4bc85c3790a615cc62634372484c629a331"
        ],
        [
            "apply Rle_trans with (2 := Rle_abs _), Rplus_le_compat_r, Rlt_le, Rnot_le_lt, Hx1.",
            "VernacExtend",
            "92b01f7bdb8bd79882a821cc5ce7aa0278c01064"
        ],
        [
            "apply Rle_ge ; rewrite -Rminus_le_0.",
            "VernacExtend",
            "a19cf933ee7df0b58ca0f845458260ba7655b90b"
        ],
        [
            "revert ptd_r_belast ptd_r ; rewrite -Ha in Hab0 ; move: (proj1 Hab0) ; apply SF_cons_ind with (s := ptd) => /= [x0 | [x0 y0] s IH] /= Hx0.",
            "VernacExtend",
            "d67757d4dc22b748f7441e543d6906095d8f8f47"
        ],
        [
            "rewrite /SF_cut_down' /SF_belast /SF_last /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: Rle_dec.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: IH ; rewrite /SF_cut_down' /SF_belast /SF_last /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: (Rle_dec x0 _) => //= _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec (SF_h s) _) => //= Hx1 IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: Hx1 (IH Hx1) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s} /= [x1 | [x1 y1] s] //= Hx1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_dec (SF_h s) _) => //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s} /= [x2 | [x2 y2] s] //= Hx2.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_dec (SF_h s) _) => //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /alpha3 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (Rmax_case_strong (fmax - fmin)) => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Req_le ; field.",
            "VernacExtend",
            "2174f1ccde93a7e8aa969bbcd29fd5556bc786df"
        ],
        [
            "apply Rgt_not_eq, Rlt_le_trans with 1 ; by intuition.",
            "VernacExtend",
            "3d39a47c6a4cbe9fe9fc20f7fffc808a1dc960bf"
        ],
        [
            "rewrite Rdiv_1 -{2}(Rmult_1_l (eps/2/2)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_r, H.",
            "VernacExtend",
            "029a33f40dd42a572d9b313f66be3d13a6242849"
        ],
        [
            "apply Rlt_le, eps4.",
            "VernacExtend",
            "f942f900d427fbee33f1f184a49bfade686eb5e7"
        ],
        [
            "clear H IH.",
            "VernacExtend",
            "9232024a2339a771a45f635d960bfc383fef74e9"
        ],
        [
            "rewrite Rplus_assoc Rmult_1_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (f_equal (Rplus (ly0 * (lx1 - lx0)))).",
            "VernacExtend",
            "44d3d67a470ba9ac14754dcee305156c04e142bb"
        ],
        [
            "rewrite -(Ropp_involutive (-_+_)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Ropp_eq_compat.",
            "VernacExtend",
            "0a7e593df75dda4a02ea72003a8c07176275c9fe"
        ],
        [
            "rewrite Ropp_plus_distr Ropp_involutive.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "revert ptd_r_last ptd_r_belast ptd_r ; move: (proj1 Hab0) ; rewrite -Ha => {Hab0} ; apply SF_cons_ind with (s := ptd) => /= [x0 | [x0 y0] s IH] /= Hx0.",
            "VernacExtend",
            "31caa0884fd8da969fac5dd252a906cd4a49a03a"
        ],
        [
            "rewrite /SF_cut_down' /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /Riemann_sum /= /plus /zero /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by ring.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Rle_dec (SF_h s) lx1) => //= Hx1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: Hx1 (IH Hx1) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s} [x1 | [x1 y1] s] /= Hx1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /SF_cut_down' /= ; case: (Rle_dec x0 _) => //= _ ; case: (Rle_dec x1 _) => //= _.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "rewrite /Riemann_sum /= => _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /plus /zero /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite /SF_cut_down' /= ; case: (Rle_dec x0 _) => //= _ ; case: (Rle_dec x1 _) => //= _ ; case: (Rle_dec (SF_h s) _) => //= Hx2.",
            "VernacExtend",
            "50667d214cae8650aa9de6980f2da478db33826d"
        ],
        [
            "rewrite /SF_belast /SF_last /SF_rcons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (Riemann_sum_cons phi (x0,y0) ({| SF_h := x1; SF_t := (SF_h s, y1) :: seq_cut_down' (SF_t s) lx1 y1 |})).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (Riemann_sum_cons phi (x0,y0) ({| SF_h := x1; SF_t := rcons (seq.belast (SF_h s, y1) (seq_cut_down' (SF_t s) lx1 y1)) (lx1, (fst (last (x1, y0) (seq.belast (SF_h s, y1) (seq_cut_down' (SF_t s) lx1 y1))) + lx1) / 2) |})).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => <- /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Rplus_assoc ; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "rewrite -!(last_map (@fst R R)) -!unzip1_fst /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite /Riemann_sum /= => _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /plus /zero /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite /SF_cut_down' /= ; case: Rle_dec => //= _ ; case: Rle_dec => //= _.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "rewrite /Riemann_sum /= /plus /zero /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "set ptd_l_head := (SF_head a (SF_cut_up' ptd lx1 a)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set ptd_l_behead := (SF_behead (SF_cut_up' ptd lx1 a)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set ptd_l := SF_cons (lx1, (lx1 + fst (SF_head a ptd_l_behead))/2) ptd_l_behead.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "move: (IH ptd_l) => {IH} IH.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace (_-_) with ((Int_SF ly (RList.cons lx1 lx) - 1 * Riemann_sum phi ptd_l) - (phi ((lx1 + fst (SF_head 0 ptd_l_behead))/2) - phi (snd ptd_l_head)) * (lx1 - fst (SF_head 0 ptd_l_behead))).",
            "VernacExtend",
            "f3e4540aa0d0a2c04218d02a05b6c076ff3ebfd6"
        ],
        [
            "rewrite (double_var (eps/2)) ; apply Rle_trans with (1 := Rabs_triang _ _), Rplus_le_compat.",
            "VernacExtend",
            "e9a4e711f9385b2888a50077d780298524fa9cba"
        ],
        [
            "apply: IH.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "case.",
            "VernacExtend",
            "3dfaa17e8190d1522b22601372c66b9913f6a1e2"
        ],
        [
            "move => _ ; move: (proj1 Hab0) ; rewrite -Ha => /= Hx0 ; case: Rle_dec => //= _.",
            "VernacExtend",
            "7607a9e2ec564130fe4467b073183fde9c69c5a6"
        ],
        [
            "rewrite seq_cut_up_head'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: Hx0 ; apply SF_cons_ind with (s := ptd) => /= [x0 | [x0 y0] s IH] /= Hx0.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "split ; apply Req_le ; field.",
            "VernacExtend",
            "06753893b7ccdb40825d406b56a356c9209893b9"
        ],
        [
            "case: Rle_dec => //= Hx1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: Hx1 (IH Hx1) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s} /= [x1 | [x1 y1] s] //= Hx1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: Rle_dec => //= Hx2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "rewrite /ptd_l SF_lx_cons SF_ly_cons SF_size_cons => i Hi ; move: i {Hi} (lt_S_n _ _ Hi).",
            "VernacExtend",
            "d382ad451ae594d67a86f477726931c094e27e38"
        ],
        [
            "revert ptd_l_behead ptd_l Hptd ; apply SF_cons_ind with (s := ptd) => /= [x0 | [x0 y0] s IH] /= Hptd.",
            "VernacExtend",
            "28c08bf4d40d0ab1a69368f76c1f94b9ecda08ec"
        ],
        [
            "rewrite /SF_cut_up' /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec => //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /SF_size /SF_behead /= => _ i Hi ; by apply lt_n_O in Hi.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "move: (IH (ptd_cons _ _ Hptd)) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /SF_cut_up' /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 _) => //= Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec (SF_h s) _) => //= Hx1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite !seq_cut_up_head'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: Hx1 ; apply SF_cons_dec with (s := s) => {s Hptd} /= [x1 | [x1 y1] s] //= Hx1.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "case: (Rle_dec (SF_h s) _) => //= Hx2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmin_l alpha1 alpha2).",
            "VernacExtend",
            "ec7d4dc67c978ea3aa2ce2daf5d8b31fe8f3da60"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmin_l _ alpha3).",
            "VernacExtend",
            "14fb242b2e1363d5d1083badce12f71fcf1e018a"
        ],
        [
            "apply Rle_lt_trans with (2 := Hstep).",
            "VernacExtend",
            "191245f2fee6e3ef180f76b0596fd7b13639c377"
        ],
        [
            "revert ptd_l_behead ptd_l ; move :(proj1 Hab0) ; rewrite -Ha ; apply SF_cons_ind with (s := ptd) => /= [x0 | [x0 y0] /= s IH] Hx0.",
            "VernacExtend",
            "b819940e5c72fa12e99c0643a3e10f9bfc3078fc"
        ],
        [
            "rewrite /SF_cut_up' /= ; case: (Rle_dec x0 _) => //= _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /seq_step /= Rminus_eq_0 Rabs_R0 ; apply Rmax_case_strong ; by intuition.",
            "VernacExtend",
            "be4be804ab68391c53b1e9a84927f1790ac154e5"
        ],
        [
            "rewrite /SF_cut_up' /= ; case: (Rle_dec x0 _) => //= _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "move: IH ; rewrite /SF_cut_up' /= ; case: (Rle_dec (SF_h s) _) => //= Hx1 ; rewrite ?seq_cut_up_head' => IH.",
            "VernacExtend",
            "dc9f04331235d96f3741e544c71c0f829fec1670"
        ],
        [
            "move: Hx1 (IH Hx1) => {IH} ; apply SF_cons_dec with (s := s) => {s} /= [x1 | [x1 y1] /= s] Hx1 IH.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply Rle_trans with (1 := IH) => {IH} ; rewrite /seq_step /= ; exact: RmaxLess2.",
            "VernacExtend",
            "b52b0ebeb6aad14f40b2379bb58ab83fc3457be7"
        ],
        [
            "move: IH ; case: (Rle_dec (SF_h s) _) => //= Hx2 IH.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "apply Rle_trans with (1 := IH) => {IH} ; rewrite /seq_step /= ; exact: RmaxLess2.",
            "VernacExtend",
            "b52b0ebeb6aad14f40b2379bb58ab83fc3457be7"
        ],
        [
            "apply Rle_trans with (1 := IH) => {IH} ; rewrite /seq_step /= ; exact: RmaxLess2.",
            "VernacExtend",
            "b52b0ebeb6aad14f40b2379bb58ab83fc3457be7"
        ],
        [
            "clear IH ; rewrite /seq_step /=.",
            "VernacExtend",
            "d664c6d98e2db8979f80a32b3f3b622baa5dcd4d"
        ],
        [
            "apply Rle_max_compat_r.",
            "VernacExtend",
            "4a212470a37281f8c5db528307f77c27e6bca0c3"
        ],
        [
            "apply Rle_trans with (2 := Rle_abs _) ; rewrite Rabs_right.",
            "VernacExtend",
            "9f29c0c4ccc0e58f3137074e1a31d19f54c3e62a"
        ],
        [
            "by apply Rplus_le_compat_l, Ropp_le_contravar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_ge, (Rminus_le_0 lx1 _), Rlt_le, Rnot_le_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /ptd_l /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Hb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (proj1 Hab0) ; rewrite -Ha /=; case: (Rle_dec (SF_h ptd) lx1) => //= _ _.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "rewrite seq_cut_up_head'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: Hab0 ; rewrite -Ha -Hb ; apply SF_cons_ind with (s := ptd) => /= [x0 | [x0 y0] s IH] /= [Hx0 Hlx1].",
            "VernacExtend",
            "9a27d4cdb663815a1a2248bb21e31e19d3d61cb9"
        ],
        [
            "by apply Rle_antisym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (fun Hx1 => IH (conj Hx1 Hlx1)) => {IH} ; case: (Rle_dec (SF_h s) _) => //= Hx1.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "move => IH ; rewrite -(IH Hx1) => {IH}.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move: Hx1 Hlx1 ; apply SF_cons_dec with (s := s) => {s} /= [x1 | [x1 y1] /= s ] Hx1 Hlx1.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Rle_dec (SF_h s) _) => /= Hx2 ; by [].",
            "VernacExtend",
            "14b141a2d70f00681f703015bc169478d399fe62"
        ],
        [
            "clear H IH.",
            "VernacExtend",
            "9232024a2339a771a45f635d960bfc383fef74e9"
        ],
        [
            "apply Rle_trans with ((fmax - fmin) * alpha3).",
            "VernacExtend",
            "4b014bb31e2409d39c9facedfa95f41e3be11df2"
        ],
        [
            "rewrite Rabs_Ropp Rabs_mult ; apply Rmult_le_compat ; try apply Rabs_pos.",
            "VernacExtend",
            "d81f2a3201095401254d4f6dcedb3c0068021318"
        ],
        [
            "apply Rabs_le_between.",
            "VernacExtend",
            "797611e08509d5447c3eba540cc1fb22a3c90419"
        ],
        [
            "rewrite Ropp_minus_distr'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff H0 : a <= (lx1 + fst (SF_head 0 ptd_l_behead)) / 2 <= b.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "suff H1 : a <= snd ptd_l_head <= b.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "split ; apply Rplus_le_compat, Ropp_le_contravar ; by apply Hff.",
            "VernacExtend",
            "521471bef610e85c83f6e7d6c3418939dfb5e39b"
        ],
        [
            "revert ptd_l_head Hab1 Hptd.",
            "VernacExtend",
            "e3e8696109b4d9b9dcf89bc79bfcd28a4952227c"
        ],
        [
            "apply SF_cons_ind with (s := ptd) => /= [ x0 | [x0 y0] s IH] // Hab1 Hptd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /SF_cut_up' /= ; case: Rle_dec => //= ; by intuition.",
            "VernacExtend",
            "edc181ae1523612867809723d78a66d7ba4793ea"
        ],
        [
            "rewrite SF_size_cons in Hab1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (IH (fun i Hi => Hab1 (S i) (le_n_S _ _ Hi)) (ptd_cons _ _ Hptd)) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: Hptd (Hab1 O (le_O_n _)) (Hab1 1%nat (le_n_S _ _ (le_0_n _))) => {Hab1}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s Hab0} /= [ x1 | [x1 y1] s] //= Hptd Hx0 Hx1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /SF_cut_up' /SF_head /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "apply Rle_trans with (1 := proj1 Hx0), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "df7c1d559c1b2e1631520fe374081689c1889215"
        ],
        [
            "apply Rle_trans with (2 := proj2 Hx1), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "06f8ec2c148684920f137a66a8444db866bfad38"
        ],
        [
            "move => _ ; by intuition.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "rewrite /SF_cut_up' /SF_head /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec _ lx1) => //= Hx2'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "apply Rle_trans with (1 := proj1 Hx0), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "df7c1d559c1b2e1631520fe374081689c1889215"
        ],
        [
            "apply Rle_trans with (2 := proj2 Hx1), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "06f8ec2c148684920f137a66a8444db866bfad38"
        ],
        [
            "move => _ ; by intuition.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "cut (a <= fst (SF_head 0 ptd_l_behead) <= b).",
            "VernacExtend",
            "937a9a40fe8b334bb492047accb4fbba016b2dce"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "revert ptd_l_behead ptd_l Hab1 Hptd.",
            "VernacExtend",
            "4fad2e2d6ad9ca6ecd99cfda5d8a1c897bc41795"
        ],
        [
            "apply SF_cons_ind with (s := ptd) => /= [ x0 | [x0 y0] s IH] // Hab1 Hptd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /SF_cut_down' /= ; case: Rle_dec => //= Hx0.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply Hab0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply (Hab1 O (le_O_n _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite SF_size_cons in Hab1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (IH (fun i Hi => Hab1 (S i) (le_n_S _ _ Hi)) (ptd_cons _ _ Hptd)) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: Hptd (Hab1 O (le_O_n _)) (Hab1 1%nat (le_n_S _ _ (le_0_n _))) => {Hab1}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s} /= [ x1 | [x1 y1] s] //= Hptd Hx0 Hx1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /SF_cut_up' /SF_head /= -?(head_map (@fst R R)) -?unzip1_fst.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; by apply Hx0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec _ lx1) => //= Hx2'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite ?seq_cut_up_head'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; by apply Hx0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "move => _ ; by apply Hx0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "revert ptd_l_behead ptd_l Hab1 Hptd.",
            "VernacExtend",
            "4fad2e2d6ad9ca6ecd99cfda5d8a1c897bc41795"
        ],
        [
            "apply SF_cons_ind with (s := ptd) => /= [ x0 | [x0 y0] s IH] // Hab1 Hptd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: Rle_dec => //= Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hab0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply (Hab1 O (le_O_n _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite SF_size_cons in Hab1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (IH (fun i Hi => Hab1 (S i) (le_n_S _ _ Hi)) (ptd_cons _ _ Hptd)) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: Hptd (Hab1 O (le_O_n _)) (Hab1 1%nat (le_n_S _ _ (le_0_n _))) => {Hab1}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s} /= [ x1 | [x1 y1] s] //= Hptd Hx0 Hx1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -?(head_map (@fst R R)) -?unzip1_fst.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; by apply Hx0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "move => _ ; by apply Hx0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "case: (Rle_dec x0 lx1) => //= Hx0'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec _ lx1) => //= Hx2'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite !seq_cut_up_head'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Rle_dec x1 lx1) => //= Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_dec _ lx1) => //= Hx2'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ ; by apply Hx0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "move => _ ; by apply Hx0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "move => _ ; by apply Hx0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "apply Rle_trans with (2 := Rmin_r (Rmin alpha1 alpha2) alpha3).",
            "VernacExtend",
            "81c6543ebe806622fd24255e5788d9e80e853c80"
        ],
        [
            "apply Rle_trans with (2 := Rlt_le _ _ Hstep).",
            "VernacExtend",
            "496d0abecbb3b28a07f3b47c424bd5c3ccb2fc2d"
        ],
        [
            "rewrite -Rabs_Ropp Rabs_right ?Ropp_minus_distr'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Ha -Hb in Hab0 ; revert ptd_l_behead ptd_l Hptd Hab0 ; apply SF_cons_ind with (s := ptd) => /= [x0 | [x0 y0] s IH] //=.",
            "VernacExtend",
            "0aa4b6f0d061752b15c1020f04a03be4bfbc0536"
        ],
        [
            "rewrite /seq_step /= => Hptd Hab0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: (proj1 Hab0) ; case: Rle_dec => //= _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "apply Req_le ; by ring.",
            "VernacExtend",
            "fdd86c8b41cf87891f8fea6ff1f4ad7a7f20d9c0"
        ],
        [
            "move => Hptd Hab0 ; move: (fun Hx1 => IH (ptd_cons _ _ Hptd) (conj Hx1 (proj2 Hab0))) => {IH}.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "move: (proj1 Hab0) ; case: (Rle_dec x0 _) => //= _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "case: (Rle_dec (SF_h s)) => //= Hx1 IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (proj1 Hab0) Hx1 (IH Hx1) => {IH Hab0} Hx0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_dec with (s := s) => {s Hptd} /= [x1 | [x1 y1] s] /= Hx1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /seq_step /= => IH.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_trans with (1 := IH) ; by apply RmaxLess2.",
            "VernacExtend",
            "4ad9db0b1c0dcaccefa812757223bcc83584fa85"
        ],
        [
            "case: (Rle_dec (SF_h s)) => //= Hx2 IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: Hx2 IH ; apply SF_cons_dec with (s := s) => {s} /= [x2 | [x2 y2] s] /= Hx2.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite /seq_step /= => IH.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_trans with (1 := IH) ; by apply RmaxLess2.",
            "VernacExtend",
            "4ad9db0b1c0dcaccefa812757223bcc83584fa85"
        ],
        [
            "case: (Rle_dec (SF_h s)) => //= Hx3 IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite !seq_cut_up_head' in IH |-*.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (1 := IH).",
            "VernacExtend",
            "7edff2fefc3e3d55d4db068dd3dc9e178b58a76c"
        ],
        [
            "rewrite /seq_step /= ; by apply RmaxLess2.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite /seq_step /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess2 _ _).",
            "VernacExtend",
            "432c14b8c59cdd6113568821c7cb457e4b47a707"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess2 _ _).",
            "VernacExtend",
            "432c14b8c59cdd6113568821c7cb457e4b47a707"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess1 _ _).",
            "VernacExtend",
            "3db0e4bc85c3790a615cc62634372484c629a331"
        ],
        [
            "by apply Rle_trans with (2 := Rle_abs _), Rplus_le_compat_l, Ropp_le_contravar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /seq_step /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess2 _ _).",
            "VernacExtend",
            "432c14b8c59cdd6113568821c7cb457e4b47a707"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess1 _ _).",
            "VernacExtend",
            "3db0e4bc85c3790a615cc62634372484c629a331"
        ],
        [
            "by apply Rle_trans with (2 := Rle_abs _), Rplus_le_compat_l, Ropp_le_contravar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /seq_step /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess1 _ _).",
            "VernacExtend",
            "3db0e4bc85c3790a615cc62634372484c629a331"
        ],
        [
            "apply Rle_trans with (2 := Rle_abs _), Rplus_le_compat_l, Ropp_le_contravar, Hab0.",
            "VernacExtend",
            "153f12814f15d225c1c94fedee6147c4b4f96987"
        ],
        [
            "apply Rle_ge, (Rminus_le_0 lx1).",
            "VernacExtend",
            "927157d3acabe515b63b120e67d954beeea67019"
        ],
        [
            "revert ptd_l_behead ptd_l ; rewrite -Ha -Hb in Hab0 ; move: Hab0 ; apply SF_cons_ind with (s := ptd) => /= [x0 | [x0 y0] s IH] /= Hx0.",
            "VernacExtend",
            "e6f2753f240b73b270a15608b173744d8d3fea68"
        ],
        [
            "case: Rle_dec => /= _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exact: Rle_refl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: (proj2 Hx0).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "move: (proj1 Hx0) ; case: Rle_dec => //= _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "move: (fun Hx1 => IH (conj Hx1 (proj2 Hx0))) => {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Rle_dec (SF_h s)) => //= Hx1 IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite !seq_cut_up_head' in IH |-* ; move: (IH Hx1) => {IH}.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "move: Hx0 Hx1 ; apply SF_cons_dec with (s := s) => {s} /= [x1 | [x1 y1] /= s] Hx0 Hx1 IH.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "exact: Rle_refl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "move: IH ; case: (Rle_dec (SF_h s)) => /= Hx2.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le, Rnot_le_lt, Hx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /alpha3 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (Rmax_case_strong (fmax - fmin)) => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Req_le ; field.",
            "VernacExtend",
            "2174f1ccde93a7e8aa969bbcd29fd5556bc786df"
        ],
        [
            "apply Rgt_not_eq, Rlt_le_trans with 1 ; by intuition.",
            "VernacExtend",
            "3d39a47c6a4cbe9fe9fc20f7fffc808a1dc960bf"
        ],
        [
            "rewrite Rdiv_1 -{2}(Rmult_1_l (eps/2/2)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_r, H.",
            "VernacExtend",
            "029a33f40dd42a572d9b313f66be3d13a6242849"
        ],
        [
            "apply Rlt_le, eps4.",
            "VernacExtend",
            "f942f900d427fbee33f1f184a49bfade686eb5e7"
        ],
        [
            "clear H IH.",
            "VernacExtend",
            "9232024a2339a771a45f635d960bfc383fef74e9"
        ],
        [
            "rewrite !Rmult_1_l {1 2}/Rminus Rplus_assoc -Ropp_plus_distr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (f_equal (Rminus _)) => /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /ptd_l /ptd_l_behead /ptd_l_head /= /SF_cut_up' /= ; move: Hab0 ; rewrite -Ha -Hb /= ; case => [Hx0 Hlx1].",
            "VernacExtend",
            "3dff8e1de268d5e1883939f82692078c6d67dcdc"
        ],
        [
            "case: (Rle_dec (SF_h ptd)) => //= _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite ?seq_cut_up_head' /SF_ly /= Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: Hx0 Hlx1 ; apply SF_cons_ind with (s := ptd) => [x0 | [x0 y0] s /= IH] /= Hx0 Hlx1.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite /Riemann_sum /= /plus /zero /scal /= /mult /= ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "case: (Rle_dec (SF_h s)) => //= Hx1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (IH Hx1 Hlx1) => /= {IH}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: Hx1 Hlx1 ; apply SF_cons_dec with (s := s) => {s} [x1 | [x1 y1] s /=] /= Hx1 Hlx1 IH.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite /Riemann_sum /= /plus /zero /scal /= /mult /= ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "move: IH ; case: (Rle_dec (SF_h s)) => //= Hx2.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "move => <- ; apply Rminus_diag_uniq ; ring_simplify.",
            "VernacExtend",
            "0a695fbe790c86abf2a833cd96cb07c8431d1962"
        ],
        [
            "move: Hx2 Hlx1 y1 ; apply SF_cons_ind with (s := s) => {s} [x2 | [x2 y2] s /= IH] /= Hx2 Hlx1 y1.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "case: (Rle_dec (SF_h s)) => //= Hx3.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite /Riemann_sum /= /plus /zero /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "repeat apply f_equal.",
            "VernacExtend",
            "998600d7663151cc7094e6b99854d685cb2c2956"
        ],
        [
            "by elim: (SF_t s) (0) (y0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (fst (last (SF_h ptd, SF_h ptd) (SF_t ptd))) with (last (SF_h ptd) (unzip1 (SF_t ptd))).",
            "VernacExtend",
            "78501f3939d86b7503870fba9c78f4485d3fb609"
        ],
        [
            "Focus 2.",
            "VernacFocus",
            "485d4f15aaf5c71ed130bd270976f9fc4e12a61f"
        ],
        [
            "pattern (SF_h ptd) at 1.",
            "VernacExtend",
            "ae770fcc0f12d097491be1c0bbaec47e32c28c7d"
        ],
        [
            "replace (SF_h ptd) with (fst (SF_h ptd, SF_h ptd)) by auto.",
            "VernacExtend",
            "06ef2567becb6a166bd8a8e7fbd492555a9b121c"
        ],
        [
            "elim: (SF_t ptd) (SF_h ptd, SF_h ptd) => //=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite Hb Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace lx1 with (pos_Rl (RList.cons lx0 (RList.cons lx1 lx)) 1) by reflexivity.",
            "VernacExtend",
            "297d0c8783d46f1c7a164558a6f0398cecb58e2d"
        ],
        [
            "move: (proj1 (proj2 Had)) (proj1 (proj2 (proj2 Had))) ; rewrite /Rmin /Rmax ; case: Rle_dec => // _ <- <-.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "rewrite -(seq2Rlist_bij (RList.cons lx0 _)) !nth_compat size_compat.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite nth0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (sorted_head (Rlist2seq (RList.cons lx0 (RList.cons lx1 lx))) 1).",
            "VernacExtend",
            "3c58fa4427dfbc678649d6420909c9a640574d0a"
        ],
        [
            "apply sorted_compat ; rewrite seq2Rlist_bij ; apply Had.",
            "VernacExtend",
            "88c1d3d9b49ca0a476a3339facddc3a69a1a0048"
        ],
        [
            "simpl ; by apply lt_n_S, lt_O_Sn.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "simpl ; rewrite -last_nth.",
            "VernacExtend",
            "41a60d2a21e0df8ab3a4b72b6ef6cfa8908df0b5"
        ],
        [
            "apply (sorted_last (Rlist2seq (RList.cons lx0 (RList.cons lx1 lx))) 1) with (x0 := 0).",
            "VernacExtend",
            "8ee31a2f49fc56ae7ac1a0a8cb64227803f06bcb"
        ],
        [
            "apply sorted_compat ; rewrite seq2Rlist_bij ; apply Had.",
            "VernacExtend",
            "88c1d3d9b49ca0a476a3339facddc3a69a1a0048"
        ],
        [
            "simpl ; by apply lt_n_S, lt_O_Sn.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "rewrite -Ha -Hb /SF_lx /= => i Hi.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply le_lt_n_Sm in Hi ; rewrite -SF_size_lx /SF_lx in Hi.",
            "VernacExtend",
            "27628bce6992d42fca0d47883649ebca164332a7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact: (sorted_head (SF_h ptd :: unzip1 (SF_t ptd)) i (ptd_sort _ Hptd) Hi).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: (sorted_last (SF_h ptd :: unzip1 (SF_t ptd)) i (ptd_sort _ Hptd) Hi).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "clear H IH.",
            "VernacExtend",
            "9232024a2339a771a45f635d960bfc383fef74e9"
        ],
        [
            "move => x Hx ; case: (sorted_dec ([:: lx0, lx1 & Rlist2seq lx]) 0 x).",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "apply sorted_compat ; rewrite /= seq2Rlist_bij ; apply Had.",
            "VernacExtend",
            "88c1d3d9b49ca0a476a3339facddc3a69a1a0048"
        ],
        [
            "move: (proj1 (proj2 Had)) (proj1 (proj2 (proj2 Had))) ; rewrite /Rmin /Rmax ; case: Rle_dec => // _.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "rewrite -nth0 -nth_last /= => -> Hb'.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: (lx) (lx1) Hb' => /= [ | h1 s IH] h0 Hb'.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite Hb' ; by apply Hx.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => i ; case ; case ; case => {Hx} Hx Hx' Hi.",
            "VernacExtend",
            "e4cc2e495ebb046fb98f5aa7fccce6e6ef839806"
        ],
        [
            "rewrite (proj2 (proj2 (proj2 (proj2 Had))) i).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff H : fmin1 <= pos_Rl (RList.cons ly0 ly) i <= fmax1.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_trans with (1 := Rmin_l _ _), H.",
            "VernacExtend",
            "50d44337701446d38f144e4e59cd1405502e210b"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess1 _ _), H.",
            "VernacExtend",
            "2840c82871b877079ea4914450f3f6f525febc84"
        ],
        [
            "rewrite -(seq2Rlist_bij (RList.cons ly0 _)) nth_compat /= /fmin1 /fmax1 .",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have : (S i < size (ly0 :: Rlist2seq ly))%nat.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (proj1 (proj2 (proj2 (proj2 Had)))) Hi.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /= -{1}(seq2Rlist_bij lx) -{1}(seq2Rlist_bij ly) ?size_compat /= => -> ; exact: lt_S_n.",
            "VernacExtend",
            "159e705bf0bc5dc6b8a21c17ad53c38e9e8c73db"
        ],
        [
            "move: i {Hx Hx' Hi}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: (ly0 :: Rlist2seq ly) => [ | h0 s IH] i Hi.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: i Hi => /= [ | i] Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split ; [exact: Rmin_l | exact: RmaxLess1].",
            "VernacExtend",
            "a45db6695a2a2718c1140894f6b591b5c16fcf56"
        ],
        [
            "split ; [apply Rle_trans with (1 := Rmin_r _ _) | apply Rle_trans with (2 := RmaxLess2 _ _)] ; apply IH ; by apply lt_S_n.",
            "VernacExtend",
            "8d405105e6d119dae45c4f4124e7c762ed6f845b"
        ],
        [
            "simpl in Hi |-* ; rewrite -size_compat seq2Rlist_bij in Hi ; by intuition.",
            "VernacExtend",
            "343e8a10f9c7ccb5ccabd9a2bd0fd5788c57cbf9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite -nth_compat /= seq2Rlist_bij in Hx ; exact: Hx.",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "rewrite -nth_compat /= seq2Rlist_bij in Hx' ; exact: Hx'.",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "rewrite -Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff H : fmin2 <= phi (nth 0 [:: lx0, lx1 & Rlist2seq lx] i) <= fmax2.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_trans with (1 := Rmin_r _ _), H.",
            "VernacExtend",
            "91107e796884dbb1691ea19a9cd47abcf1b83134"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess2 _ _), H.",
            "VernacExtend",
            "3e344cfc77f170a48d0d60c81aa1a2af1bbc1f79"
        ],
        [
            "rewrite /fmin2 /fmax2 .",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: i Hi {Hx Hx'}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: ([:: lx0, lx1 & Rlist2seq lx]) => [ | h0 s IH] i Hi.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: i Hi => /= [ | i] Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split ; [exact: Rmin_l | exact: RmaxLess1].",
            "VernacExtend",
            "a45db6695a2a2718c1140894f6b591b5c16fcf56"
        ],
        [
            "split ; [apply Rle_trans with (1 := Rmin_r _ _) | apply Rle_trans with (2 := RmaxLess2 _ _)] ; apply IH ; by apply lt_S_n.",
            "VernacExtend",
            "8d405105e6d119dae45c4f4124e7c762ed6f845b"
        ],
        [
            "have : (((size [:: lx0, lx1 & Rlist2seq lx] - 1)%nat) < size [:: lx0, lx1 & Rlist2seq lx])%nat.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (size [:: lx0, lx1 & Rlist2seq lx] - 1)%nat with (S (size [:: lx0, lx1 & Rlist2seq lx] - 2)) by (simpl ; intuition).",
            "VernacExtend",
            "36ad555acecc70d8a49e1967718afa9bada65b27"
        ],
        [
            "move: (size [:: lx0, lx1 & Rlist2seq lx] - 2)%nat => i Hi.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case ; case => {Hx} Hx ; [ case => Hx' | move => _ ].",
            "VernacExtend",
            "347fb02e86f2267468f2eb464e266dba95267e6a"
        ],
        [
            "rewrite (proj2 (proj2 (proj2 (proj2 Had))) i).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff H : fmin1 <= pos_Rl (RList.cons ly0 ly) i <= fmax1.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_trans with (1 := Rmin_l _ _), H.",
            "VernacExtend",
            "50d44337701446d38f144e4e59cd1405502e210b"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess1 _ _), H.",
            "VernacExtend",
            "2840c82871b877079ea4914450f3f6f525febc84"
        ],
        [
            "rewrite -(seq2Rlist_bij (RList.cons ly0 _)) nth_compat /= /fmin1 /fmax1 .",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have : (i < size (ly0 :: Rlist2seq ly))%nat.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (proj1 (proj2 (proj2 (proj2 Had)))) Hi.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /= -{1}(seq2Rlist_bij lx) -{1}(seq2Rlist_bij ly) ?size_compat /= => -> ; exact: lt_S_n.",
            "VernacExtend",
            "159e705bf0bc5dc6b8a21c17ad53c38e9e8c73db"
        ],
        [
            "move: i {Hx Hx' Hi}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: (ly0 :: Rlist2seq ly) => [ | h0 s IH] i Hi.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: i Hi => /= [ | i] Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split ; [exact: Rmin_l | exact: RmaxLess1].",
            "VernacExtend",
            "a45db6695a2a2718c1140894f6b591b5c16fcf56"
        ],
        [
            "split ; [apply Rle_trans with (1 := Rmin_r _ _) | apply Rle_trans with (2 := RmaxLess2 _ _)] ; apply IH ; by apply lt_S_n.",
            "VernacExtend",
            "8d405105e6d119dae45c4f4124e7c762ed6f845b"
        ],
        [
            "simpl in Hi |-* ; rewrite -size_compat seq2Rlist_bij in Hi ; by intuition.",
            "VernacExtend",
            "343e8a10f9c7ccb5ccabd9a2bd0fd5788c57cbf9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite -nth_compat /= seq2Rlist_bij in Hx ; exact: Hx.",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "rewrite -nth_compat /= seq2Rlist_bij in Hx' ; exact: Hx'.",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "rewrite Hx'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff H : fmin2 <= phi (nth 0 [:: lx0, lx1 & Rlist2seq lx] (S i)) <= fmax2.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_trans with (1 := Rmin_r _ _), H.",
            "VernacExtend",
            "91107e796884dbb1691ea19a9cd47abcf1b83134"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess2 _ _), H.",
            "VernacExtend",
            "3e344cfc77f170a48d0d60c81aa1a2af1bbc1f79"
        ],
        [
            "rewrite /fmin2 /fmax2 .",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: i Hi {Hx Hx'}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: ([:: lx0, lx1 & Rlist2seq lx]) => [ | h0 s IH] i Hi.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: s IH Hi => /= [ | h1 s] IH Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply lt_S_n, lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: i Hi => /= [ | i] Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split ; [ apply Rle_trans with (1 := Rmin_r _ _) ; exact: Rmin_l | apply Rle_trans with (2 := RmaxLess2 _ _) ; exact: RmaxLess1].",
            "VernacExtend",
            "8e2f322a1e2edc88e766a8d5fb5ea318e890b0d2"
        ],
        [
            "split ; [apply Rle_trans with (1 := Rmin_r _ _) | apply Rle_trans with (2 := RmaxLess2 _ _)] ; apply IH ; by apply lt_S_n.",
            "VernacExtend",
            "8d405105e6d119dae45c4f4124e7c762ed6f845b"
        ],
        [
            "rewrite -Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff H : fmin2 <= phi (nth 0 [:: lx0, lx1 & Rlist2seq lx] i) <= fmax2.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_trans with (1 := Rmin_r _ _), H.",
            "VernacExtend",
            "91107e796884dbb1691ea19a9cd47abcf1b83134"
        ],
        [
            "apply Rle_trans with (2 := RmaxLess2 _ _), H.",
            "VernacExtend",
            "3e344cfc77f170a48d0d60c81aa1a2af1bbc1f79"
        ],
        [
            "rewrite /fmin2 /fmax2 .",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: i Hi {Hx}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: ([:: lx0, lx1 & Rlist2seq lx]) => [ | h0 s IH] i Hi.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: i Hi => /= [ | i] Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split ; [exact: Rmin_l | exact: RmaxLess1].",
            "VernacExtend",
            "a45db6695a2a2718c1140894f6b591b5c16fcf56"
        ],
        [
            "split ; [apply Rle_trans with (1 := Rmin_r _ _) | apply Rle_trans with (2 := RmaxLess2 _ _)] ; apply IH ; by apply lt_S_n.",
            "VernacExtend",
            "8d405105e6d119dae45c4f4124e7c762ed6f845b"
        ],
        [
            "clear eps eps2 IH eps4 alpha1.",
            "VernacExtend",
            "c896cb98edaac48ca8e016a09ca90a0bb8c693be"
        ],
        [
            "move: (proj1 (proj2 Had)) => /= ; rewrite /Rmin ; case: Rle_dec => //= _ <-.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "move: (proj1 Had O (lt_O_Sn _)) => /= Hl0l1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (proj2 (proj2 (proj2 (proj2 Had))) O (lt_O_Sn _)) => /= Hval.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "clear a b Hab Had lx ly.",
            "VernacExtend",
            "5fbc949841408eefb99fd5cb91897ac68b95b2ce"
        ],
        [
            "rename lx0 into a ; rename lx1 into b ; rename ly0 into c ; rename Hl0l1 into Hab.",
            "VernacExtend",
            "189069de057bf49064ec7cf40f2e9775863fdfaf"
        ],
        [
            "set fmin := Rmin (Rmin (phi a) (phi b)) c.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set fmax := Rmax (Rmax (phi a) (phi b)) c.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "move => eps ; set eps2 := pos_div_2 eps.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "have Halpha : 0 < eps2 / (Rmax (fmax - fmin) 1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "apply eps2.",
            "VernacExtend",
            "2a5ac675535e6a3a56d768d7179043253bc92823"
        ],
        [
            "apply Rlt_le_trans with (2 := RmaxLess2 _ _), Rlt_0_1.",
            "VernacExtend",
            "e7aaf283fd616169c70d518a8da829bc7a08cbca"
        ],
        [
            "set alpha := mkposreal _ Halpha.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists alpha => ptd.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply SF_cons_ind with (s := ptd) => {ptd} [x0 | [x0 y0] ptd IH] Hptd Hstep Ha Hb ; simpl in Ha, Hb.",
            "VernacExtend",
            "80df275f743c01abfb121a12b6106cfc7bd8b42a"
        ],
        [
            "rewrite -Ha -Hb /Riemann_sum /= ; rewrite Rminus_eq_0 Rmult_0_r Rminus_0_r Rabs_R0.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by apply Rlt_le, eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (fun Ha => IH (ptd_cons _ _ Hptd) (Rle_lt_trans _ _ _ (RmaxLess2 _ _) Hstep) Ha Hb) => {IH} IH.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (proj1 (ptd_sort _ Hptd)) ; rewrite Ha in Hptd, Hstep |- * => {x0 Ha} ; case => /= Ha.",
            "VernacExtend",
            "0141855bf989b515603527748435689146bc68ca"
        ],
        [
            "rewrite Riemann_sum_cons /= /plus /zero /scal /= /mult /= => {IH}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (_-_) with ((c-phi y0) * (SF_h ptd - a) + (c * (b - SF_h ptd) - Riemann_sum phi ptd)) by ring.",
            "VernacExtend",
            "b1ca663cea463ca7a61e2c2da92a33c95304afa4"
        ],
        [
            "rewrite (double_var eps) ; apply Rle_trans with (1 := Rabs_triang _ _), Rplus_le_compat.",
            "VernacExtend",
            "e9a4e711f9385b2888a50077d780298524fa9cba"
        ],
        [
            "apply Rle_trans with ((fmax - fmin) * alpha).",
            "VernacExtend",
            "846596c998b3940c49915dc15be80a6224b6c840"
        ],
        [
            "rewrite Rabs_mult ; apply Rmult_le_compat ; try exact: Rabs_pos.",
            "VernacExtend",
            "d9b588b84f31bcca7e3d99b13d6f62b889e0d39d"
        ],
        [
            "suff : a <= y0 <= b.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case ; case => Ha'.",
            "VernacExtend",
            "f5c637551d7ace847ffea0c2c9ae9f848858e99e"
        ],
        [
            "case => Hb'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Hval.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rminus_eq_0 Rabs_R0 -Rminus_le_0 /fmin /fmax.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec ; case: Rle_dec ; case: Rle_dec => // H0 H1 H2.",
            "VernacExtend",
            "50667d214cae8650aa9de6980f2da478db33826d"
        ],
        [
            "by apply Rlt_le, Rnot_le_lt, H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le, Rnot_le_lt, H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le, Rnot_le_lt, H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hb' ; apply Rabs_le_between ; rewrite Ropp_minus_distr' ; split ; apply Rplus_le_compat, Ropp_le_contravar.",
            "VernacExtend",
            "a5322393091285c085b191bf2ff7ba72d9e7a26d"
        ],
        [
            "by apply Rmin_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with (2 := RmaxLess1 _ _), RmaxLess2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply RmaxLess2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with (1 := Rmin_l _ _), Rmin_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Ha' => _ ; apply Rabs_le_between ; rewrite Ropp_minus_distr' ; split ; apply Rplus_le_compat, Ropp_le_contravar.",
            "VernacExtend",
            "6378de7404cb249db97448dd137c9a25572ae8fe"
        ],
        [
            "by apply Rmin_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with (2 := RmaxLess1 _ _), RmaxLess1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply RmaxLess2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with (1 := Rmin_l _ _), Rmin_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "7beefd7a817b6ff454f9772d9f270f49025cc2c9"
        ],
        [
            "apply Rle_trans with (SF_h ptd).",
            "VernacExtend",
            "e1ea0550bff1b1baaf0daa741cb2c3fdc11c853f"
        ],
        [
            "apply (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "7beefd7a817b6ff454f9772d9f270f49025cc2c9"
        ],
        [
            "rewrite -Hb ; apply (sorted_last (SF_lx ptd) 0 (proj2 (ptd_sort _ Hptd)) (lt_O_Sn _)) with (x0 := 0).",
            "VernacExtend",
            "468905fa5b64da48bb2f00412bd8b7967623e114"
        ],
        [
            "apply Rlt_le, Rle_lt_trans with (2 := Hstep) ; rewrite /seq_step /= ; apply RmaxLess1.",
            "VernacExtend",
            "fc87e3552fcfe27043aca52be0d6984ef864d479"
        ],
        [
            "rewrite /alpha /= ; apply (Rmax_case_strong (fmax-fmin)) => H.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "apply Req_le ; field.",
            "VernacExtend",
            "2174f1ccde93a7e8aa969bbcd29fd5556bc786df"
        ],
        [
            "by apply Rgt_not_eq, Rlt_le_trans with (1 := Rlt_0_1), H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rdiv_1 -{2}(Rmult_1_l (eps/2)) ; apply Rmult_le_compat_r.",
            "VernacExtend",
            "ddbf30d2ddb593597e7b8495166e3e9187848b01"
        ],
        [
            "apply Rlt_le, eps2.",
            "VernacExtend",
            "2a9d4eedc4064234c2033bf80e80765ff81c7d41"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "move: (ptd_cons _ _ Hptd) (Rle_lt_trans _ _ _ (RmaxLess2 _ _) Hstep : seq_step (SF_lx ptd) < alpha) Ha Hb => {Hptd Hstep y0} Hptd Hstep Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suff : SF_h ptd <= b.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case => Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: Hptd Hstep Ha Hb Hx0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply SF_cons_ind with (s := ptd) => {ptd} [x0 | [x0 y0] ptd IH] Hptd Hstep /= Ha Hb Hx0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "contradict Hb ; apply Rlt_not_eq, Hx0.",
            "VernacExtend",
            "c0d8041f5df14d75f30f0e82c790aba8ca42a4fb"
        ],
        [
            "move: (fun Hx1 => IH (ptd_cons _ _ Hptd) (Rle_lt_trans _ _ _ (RmaxLess2 _ _) Hstep) (Rlt_le_trans _ _ _ Ha (proj1 (ptd_sort _ Hptd))) Hb Hx1) => {IH} IH.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have : SF_h ptd <= b.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -Hb ; apply (sorted_last ((SF_h ptd)::(unzip1 (SF_t ptd))) O) with (x0 := 0).",
            "VernacExtend",
            "a45dbdceabff045fea61b168e2cf0743faac37f8"
        ],
        [
            "apply ptd_sort, (ptd_cons (x0,y0)), Hptd.",
            "VernacExtend",
            "a5b5938c7c74f4aa1ed4d050bc0bf375fbc534b8"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "case => Hx1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Hval /plus /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (_-_) with (c * (b - SF_h ptd) - Riemann_sum phi ptd) by ring.",
            "VernacExtend",
            "145aa69e697abe2b19261a78ab2b0ba42df3c99a"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_le_trans with (1 := Ha), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "0cc2e03185968f730c50379bc0734d9bbfa9bc6f"
        ],
        [
            "apply Rle_lt_trans with (2 := Hx1), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "35cb8d02dfc348305c68f6b7ddce823f9155f49a"
        ],
        [
            "rewrite Hx1 Riemann_sum_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "change zero with 0.",
            "VernacExtend",
            "0c06a0e393cc3ced7dd889696d44977c71c025a8"
        ],
        [
            "rewrite /plus /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (_ - _) with ((c - phi y0) * (b - x0)) by ring.",
            "VernacExtend",
            "7e6972973978b5027381e165e97b555ec19c41a1"
        ],
        [
            "apply Rle_trans with ((fmax - fmin) * alpha).",
            "VernacExtend",
            "846596c998b3940c49915dc15be80a6224b6c840"
        ],
        [
            "rewrite Rabs_mult ; apply Rmult_le_compat ; try exact: Rabs_pos.",
            "VernacExtend",
            "d9b588b84f31bcca7e3d99b13d6f62b889e0d39d"
        ],
        [
            "suff : a <= y0 <= b.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case ; case => Ha'.",
            "VernacExtend",
            "f5c637551d7ace847ffea0c2c9ae9f848858e99e"
        ],
        [
            "case => Hb'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Hval.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rminus_eq_0 Rabs_R0 -Rminus_le_0 /fmin /fmax.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec ; case: Rle_dec ; case: Rle_dec => // H0 H1 H2.",
            "VernacExtend",
            "50667d214cae8650aa9de6980f2da478db33826d"
        ],
        [
            "by apply Rlt_le, Rnot_le_lt, H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le, Rnot_le_lt, H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le, Rnot_le_lt, H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hb' ; apply Rabs_le_between ; rewrite Ropp_minus_distr' ; split ; apply Rplus_le_compat, Ropp_le_contravar.",
            "VernacExtend",
            "a5322393091285c085b191bf2ff7ba72d9e7a26d"
        ],
        [
            "by apply Rmin_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with (2 := RmaxLess1 _ _), RmaxLess2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply RmaxLess2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with (1 := Rmin_l _ _), Rmin_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Ha' => _ ; apply Rabs_le_between ; rewrite Ropp_minus_distr' ; split ; apply Rplus_le_compat, Ropp_le_contravar.",
            "VernacExtend",
            "6378de7404cb249db97448dd137c9a25572ae8fe"
        ],
        [
            "by apply Rmin_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with (2 := RmaxLess1 _ _), RmaxLess1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply RmaxLess2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with (1 := Rmin_l _ _), Rmin_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_le, Rlt_le_trans with (1 := Ha), (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "1beaeebe0ea6b7cc5c30c4624e562cfe10594aba"
        ],
        [
            "apply Rle_trans with (SF_h ptd).",
            "VernacExtend",
            "e1ea0550bff1b1baaf0daa741cb2c3fdc11c853f"
        ],
        [
            "apply (Hptd O (lt_O_Sn _)).",
            "VernacExtend",
            "7beefd7a817b6ff454f9772d9f270f49025cc2c9"
        ],
        [
            "by apply Req_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_le, Rle_lt_trans with (2 := Hstep) ; rewrite /seq_step /= -Hx1 ; apply RmaxLess1.",
            "VernacExtend",
            "fc87e3552fcfe27043aca52be0d6984ef864d479"
        ],
        [
            "rewrite /alpha /= ; apply (Rmax_case_strong (fmax-fmin)) => H.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "apply Req_le ; field.",
            "VernacExtend",
            "2174f1ccde93a7e8aa969bbcd29fd5556bc786df"
        ],
        [
            "by apply Rgt_not_eq, Rlt_le_trans with (1 := Rlt_0_1), H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rdiv_1 -{2}(Rmult_1_l (eps/2)) ; apply Rmult_le_compat_r.",
            "VernacExtend",
            "ddbf30d2ddb593597e7b8495166e3e9187848b01"
        ],
        [
            "apply Rlt_le, eps2.",
            "VernacExtend",
            "2a9d4eedc4064234c2033bf80e80765ff81c7d41"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply ptd_sort, (ptd_cons (x0,y0)), Hptd.",
            "VernacExtend",
            "a5b5938c7c74f4aa1ed4d050bc0bf375fbc534b8"
        ],
        [
            "by rewrite /SF_lx /= Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hx0 Riemann_sum_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "change zero with 0.",
            "VernacExtend",
            "0c06a0e393cc3ced7dd889696d44977c71c025a8"
        ],
        [
            "replace (c * (b - b) - 0) with 0 by ring.",
            "VernacExtend",
            "bb96fcfb927061bfb84b72920f972ad112255a9b"
        ],
        [
            "rewrite Rabs_R0 ; apply Rlt_le, eps2.",
            "VernacExtend",
            "13b25978f350be7a39c464069e0b3dd95393508d"
        ],
        [
            "apply ptd_sort, Hptd.",
            "VernacExtend",
            "3a7296bf6d5f265a3b1feae8a75b5dfe4bcd7391"
        ],
        [
            "by rewrite /SF_lx /= Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Hb ; apply (sorted_last ((SF_h ptd)::(unzip1 (SF_t ptd))) O) with (x0 := 0).",
            "VernacExtend",
            "a45dbdceabff045fea61b168e2cf0743faac37f8"
        ],
        [
            "apply ptd_sort, Hptd.",
            "VernacExtend",
            "3a7296bf6d5f265a3b1feae8a75b5dfe4bcd7391"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "rewrite Riemann_sum_cons /= -Ha.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rminus_eq_0 scal_zero_l plus_zero_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_Reals_1 (f : R -> R) (a b : R) : Riemann_integrable f a b -> ex_RInt f a b.",
            "VernacStartTheoremProof",
            "01441fc0b5775fa2ff342c099ed3d3766f94f3ba"
        ],
        [
            "move => pr ; exists (RiemannInt pr).",
            "VernacExtend",
            "ba13dd07a2b0306678d4fd6a29398a2fc74356d5"
        ],
        [
            "exact: ex_RInt_Reals_aux_1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_Reals_0 (f : R -> R) (a b : R) : ex_RInt f a b -> Riemann_integrable f a b.",
            "VernacStartTheoremProof",
            "d98a484d9a2ef1b5e87c187600d55c2d126bbce9"
        ],
        [
            "wlog: a b /(a < b) => [Hw | Hab ] Hex.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_lt_dec a b) => Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_lt_or_eq_dec _ _ Hab) => {Hab} Hab.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Hab.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply RiemannInt_P7.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_RInt_swap in Hex ; apply RiemannInt_P1 ; by apply Hw.",
            "VernacExtend",
            "7bd5bc02f9b2cfec11d6bcd5140e454567fa9e3e"
        ],
        [
            "assert ({If : R | is_RInt f a b If}).",
            "VernacExtend",
            "c0137bdfccdda6f94f8d11ca43de7d91f3f18c9d"
        ],
        [
            "exists (RInt f a b).",
            "VernacExtend",
            "9311aaa2e81370e79ae7ce6aed52d3955f05be44"
        ],
        [
            "exact: RInt_correct.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "case: H => If HIf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "generalize (proj1 (filterlim_locally _ If) HIf).",
            "VernacExtend",
            "e678409ffff40509c31c257676465e29a849d7c5"
        ],
        [
            "clear HIf.",
            "VernacExtend",
            "f0cdfa2fe1bfee378ea442a55344ad0b2f5a7f17"
        ],
        [
            "intros HIf.",
            "VernacExtend",
            "9011706ecf261aab3518a61fa8d222be7a7ac963"
        ],
        [
            "set (E := fun eps : posreal => (fun alpha => 0 < alpha <= b-a + 1 /\\ forall ptd : SF_seq, pointed_subdiv ptd -> seq_step (SF_lx ptd) < alpha -> SF_h ptd = Rmin a b -> last (SF_h ptd) (SF_lx ptd) = Rmax a b -> Rabs (If - sign (b - a) * Riemann_sum f ptd) < eps)).",
            "VernacExtend",
            "7add38c046da5396c8a75207bf8e44189b139be4"
        ],
        [
            "have E_bnd : forall eps : posreal, bound (E eps).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => eps ; exists (b-a+1) => x [Hx _] ; by apply Hx.",
            "VernacExtend",
            "dd76215f84b5ec723bc22942b73281b86cf324ad"
        ],
        [
            "have E_ex : forall eps : posreal, exists x, (E eps x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => eps ; case: (HIf eps) => {HIf} alpha HIf.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "exists (Rmin alpha (b-a + 1)) ; split.",
            "VernacExtend",
            "8bfb155be9b36b7582a0fad8a48ae8a221e41c1b"
        ],
        [
            "apply Rmin_case_strong => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply alpha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: H.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rplus_le_lt_0_compat.",
            "VernacExtend",
            "f52234f44384644fc6f21adef182d5c4067417f5"
        ],
        [
            "by apply (Rminus_le_0 a b), Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: Rlt_0_1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: Rle_refl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Rabs_minus_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: HIf.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move: H0 ; apply Rmin_case_strong.",
            "VernacExtend",
            "be44d4868cb0f4813c8e8196045a495bbb1d508c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => Halp Hstep ; by apply Rlt_le_trans with (b-a+1).",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact: H.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact: H1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: H2.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "set alpha := fun eps : posreal => proj1_sig (completeness (E eps) (E_bnd eps) (E_ex eps)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have Ealpha : forall eps : posreal, (E eps (alpha eps)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "revert alpha ; move => /= eps.",
            "VernacExtend",
            "c0ea257275818e1cc20252cdf84e6f27635bf875"
        ],
        [
            "case: (E_ex eps) => alp H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: completeness => alpha [ub lub] /= ; split.",
            "VernacExtend",
            "88c25af51ded328891892c53c941b62f68d72bd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_le_trans with alp.",
            "VernacExtend",
            "5c6b053e25325bd0ca7a59ad9cac5f57fc4f18a2"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply ub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: lub => x [Hx _] ; by apply Hx.",
            "VernacExtend",
            "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rnot_le_lt ; contradict H1.",
            "VernacExtend",
            "af7d8d677b78fde4fd8ee16b1a1868f7f4e85cb0"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "apply: lub => x [Hx1 Hx2].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply Rnot_lt_le ; contradict H1.",
            "VernacExtend",
            "8396916a850180ffd057be065294bf7fcf0a7535"
        ],
        [
            "by apply Rlt_not_le, Hx2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Hn : forall eps : posreal, {n : nat | (b-a)/(INR n + 1) < alpha eps}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have Hn : 0 <= (b-a)/(alpha eps).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rdiv_le_0_compat.",
            "VernacExtend",
            "693e22205d4e08285736e8c5e96457827d9a8003"
        ],
        [
            "by apply Rlt_le, Rgt_minus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Ealpha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set n := (nfloor _ Hn).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists n.",
            "VernacExtend",
            "a97204a252e0d9b7444ffed9b38570a756391511"
        ],
        [
            "apply Rlt_div_l.",
            "VernacExtend",
            "4198c2770a4c425c9ede77a90e885e8d7fd9f290"
        ],
        [
            "by apply INRp1_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rmult_comm ; apply Rlt_div_l.",
            "VernacExtend",
            "ad4548a5215923665bf1a4e0a493dbd7f6be2e81"
        ],
        [
            "by apply Ealpha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /n /nfloor ; case: nfloor_ex => /= n' Hn'.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply Hn'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Riemann_integrable.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff H : forall eps : posreal, {phi : StepFun a b & {psi : StepFun a b | (forall t : R, Rmin a b <= t <= Rmax a b -> Rabs (f t - phi t) <= psi t) /\\ Rabs (RiemannInt_SF psi) <= eps}}.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "move => eps ; set eps2 := pos_div_2 eps.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "case: (H eps2) => {H} phi [psi [H H0]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists phi ; exists psi ; split.",
            "VernacExtend",
            "894946bd793a97197b4035768b5f5790922f992e"
        ],
        [
            "exact: H.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Rle_lt_trans with (1 := H0).",
            "VernacExtend",
            "c5a9efbfb5d03556d102a4aa69a797776aa68931"
        ],
        [
            "apply Rminus_gt ; simpl ; field_simplify ; rewrite Rdiv_1 ; by apply eps2.",
            "VernacExtend",
            "3ff0dc4bbebf7c61a35049fcccdfe1e0ac4f6caf"
        ],
        [
            "move => eps ; set eps2 := pos_div_2 eps.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "case: (Hn eps2) => {Hn} n Hn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Ealpha eps2) => {HIf} Halpha HIf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "set phi := sf_SF_val_fun f a b n.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists phi.",
            "VernacExtend",
            "e4748d2a617fd9c0396d54224763ca0f4db95d27"
        ],
        [
            "set psi1 := SF_sup_r (fun t => Rabs (f t - phi t)) a b n.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have Haux : forall x, {i : nat | x = nth 0 (unif_part a b n) i /\\ (i < size (unif_part a b n))%nat} + {(forall i, (i < size (unif_part a b n))%nat -> x <> nth 0 (unif_part a b n) i)}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have : {n0 : nat | x = nth 0 (unif_part a b n) n0 /\\ (n0 < size (unif_part a b n))%nat} + {(forall n0 : nat, ~ (x = nth 0 (unif_part a b n) n0 /\\ (n0 < size (unif_part a b n))%nat))}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply (LPO (fun i => x = nth 0 (unif_part a b n) i /\\ (i < size (unif_part a b n))%nat)).",
            "VernacExtend",
            "605c70a61e9d2ebf51ea7a68cc4f39f3381172dd"
        ],
        [
            "move => i.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Req_EM_T x (nth 0 (unif_part a b n) i)) => Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (lt_dec i (size (unif_part a b n))) => Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "left ; split ; by [].",
            "VernacExtend",
            "7f39917ce898cd4de329655c11cd252d7b56013f"
        ],
        [
            "right ; contradict Hi ; by apply Hi.",
            "VernacExtend",
            "f4cdad8b2412065bf47700404413d8274f4408c2"
        ],
        [
            "right ; contradict Hx ; by apply Hx.",
            "VernacExtend",
            "8714f029607c59853085024fdeaa12e1f11e56be"
        ],
        [
            "case => [[i Hi] | Hx].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "left ; by exists i.",
            "VernacExtend",
            "8d1d3855bd3af5f36952354b4669569e4c0e7e37"
        ],
        [
            "right => i Hi ; move: (Hx i) => {Hx} Hx ; contradict Hx ; by split.",
            "VernacExtend",
            "5448bb301382c5fb5b1ae8065c649fac15ddc271"
        ],
        [
            "set psi2_aux := fun x => match Haux x with | inleft Hi => Rabs (f x - phi x) - psi1 x | inright _ => 0 end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set psi2_ly := seq2Rlist (SF_ly (SF_seq_f1 (fun _ => 0) (unif_part a b n))).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have psi2_ad : adapted_couple psi2_aux a b (seq2Rlist (unif_part a b n)) psi2_ly.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply sorted_compat, unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite /Rmin ; case: Rle_dec (Rlt_le _ _ Hab) => //= _ _ ; field ; apply Rgt_not_eq ; by intuition.",
            "VernacExtend",
            "8e4d2490016e7ffc54353f85c648f7dc321e4b06"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite size_compat size_mkseq nth_compat nth_mkseq ?S_INR /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _ ; field ; apply Rgt_not_eq ; by intuition.",
            "VernacExtend",
            "8e4d2490016e7ffc54353f85c648f7dc321e4b06"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by rewrite !size_compat SF_ly_f1 size_belast' size_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_compat => i Hi ; rewrite !nth_compat SF_ly_f1 => x Hx.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "rewrite /psi2_aux => {psi2_aux} ; case: Haux => [ [j [Hx' Hj]] | Hx' ].",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "rewrite Hx' in Hx |- * ; case: Hx => Hxi Hxj.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case: (lt_dec i j) => Hij.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict Hxj ; apply Rle_not_lt.",
            "VernacExtend",
            "c51fedf9f296c254f921cf8fa1c5c0f543260291"
        ],
        [
            "apply sorted_incr.",
            "VernacExtend",
            "c6bc1f90306b67549371e2313bb31b0103af0f7e"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict Hxi ; apply Rle_not_lt.",
            "VernacExtend",
            "7d69432e25786e020533da595699da249704e788"
        ],
        [
            "apply sorted_incr.",
            "VernacExtend",
            "c6bc1f90306b67549371e2313bb31b0103af0f7e"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply not_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: i Hi {Hx} ; elim: (unif_part a b n) => /= [ i Hi | x0].",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "by apply lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => /= [ | x1 s] IH i Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: i Hi => /= [ | i] Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply IH, lt_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have psi2_is : IsStepFun psi2_aux a b.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (seq2Rlist (unif_part a b n)).",
            "VernacExtend",
            "9aaf98a02a38438c11db98c9877323192f24194c"
        ],
        [
            "exists psi2_ly.",
            "VernacExtend",
            "dfcb89bbcf8fff9c15d706ce72eaa033760d3983"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set psi2 := mkStepFun psi2_is.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set psi := mkStepFun (StepFun_P28 1 psi1 psi2).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists psi.",
            "VernacExtend",
            "c443326986973597518a4950c345c218e9c36b57"
        ],
        [
            "have Hfin : forall i, (S i < size (unif_part a b n))%nat -> is_finite (Sup_fct (fun t0 : R => Rabs (f t0 - phi t0)) (nth 0 (unif_part a b n) i) (nth 0 (unif_part a b n) (S i))).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (ex_RInt_ub f a b Hex) => M HM.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (StepFun_bound phi) => M' HM'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have : exists m, forall x : R, Rmin a b <= x <= Rmax a b -> m <= phi x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (StepFun_bound (mkStepFun (StepFun_P28 (-1) (mkStepFun (StepFun_P4 a b 0)) phi))) => /= m' Hm'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (-m') => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (phi x) with (- (fct_cte 0 x + -1 * phi x)) by (rewrite /fct_cte /= ; ring).",
            "VernacExtend",
            "e73ad1962afc49407a64132634bc365967e10833"
        ],
        [
            "by apply Ropp_le_contravar, Hm'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => m' Hm' i ; rewrite size_mkseq => Hi ; rewrite !nth_mkseq.",
            "VernacExtend",
            "542210a47a00777c20d1f6f8652bacd8b220a943"
        ],
        [
            "rewrite /Sup_fct.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have H : (a + INR i * (b - a) / (INR n + 1)) < (a + (INR (S i)) * (b - a) / (INR n + 1)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite S_INR ; apply Rminus_gt ; field_simplify.",
            "VernacExtend",
            "9ae63c6cb63b09adb5d7b44caec91fe14055fc2d"
        ],
        [
            "rewrite Rdiv_1 Rplus_comm ; apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "57ecaad9d990347a1606a4b33388d3a024b2e064"
        ],
        [
            "by apply Rgt_minus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply INRp1_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rgt_not_eq, INRp1_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (Rlt_not_eq _ _ H) ; case: Req_EM_T => // H0 _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ H) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /Lub_Rbar ; case: ex_lub_Rbar ; case => [l | | ] [ub lub] /=.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (lub (Finite (Rmax (M - m') (-(-M - M'))))) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ [x [-> Hx]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rabs_le_between_Rmax.",
            "VernacExtend",
            "55b8affc13552650ca800abea9a91488c39e396b"
        ],
        [
            "suff H2 : Rmin a b <= x <= Rmax a b.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "split ; apply Rplus_le_compat, Ropp_le_contravar.",
            "VernacExtend",
            "6c18211dc5d282ce471e3116930d7b9f435f2951"
        ],
        [
            "apply Ropp_le_cancel, Rle_trans with (Rabs (f x)).",
            "VernacExtend",
            "ac3af81144b10dc3bac7247a7ee2d06d923305b8"
        ],
        [
            "by apply Rabs_maj2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Ropp_involutive ; by apply HM.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by apply HM'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_trans with (Rabs (f x)).",
            "VernacExtend",
            "5d26d9777d45325bc36f074c0a720e439daebaae"
        ],
        [
            "by apply Rle_abs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply HM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hm'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _ ; split ; apply Rlt_le.",
            "VernacExtend",
            "e8011c73be3794522cdd449910e4a6d791f00734"
        ],
        [
            "replace a with (a + INR O * (b - a) / (INR n + 1)) by (simpl ; field ; apply Rgt_not_eq, INRp1_pos).",
            "VernacExtend",
            "1d5d5a6b48c8c235b00b1e6b0b1e6930bb4d8637"
        ],
        [
            "apply Rle_lt_trans with (2 := proj1 Hx).",
            "VernacExtend",
            "d80120e8022753d2b32dffabe8710b2e96c2a457"
        ],
        [
            "apply Rplus_le_compat_l, Rmult_le_compat_r.",
            "VernacExtend",
            "394254587bda2c85b15518507da26d959944af03"
        ],
        [
            "apply Rlt_le, Rinv_0_lt_compat ; by intuition.",
            "VernacExtend",
            "5d08f3cb1f698d169b6cfed00a3221259c1b4d5e"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "by apply Rlt_le, Rgt_minus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply le_INR ; by intuition.",
            "VernacExtend",
            "e15990d201cde72502509ffdf18a1192b92b762d"
        ],
        [
            "replace b with (a + INR (S n) * (b - a) / (INR n + 1)) by (rewrite S_INR ; field ; apply Rgt_not_eq, INRp1_pos).",
            "VernacExtend",
            "d64751fddeece5b5c5f61bfaaf265d48a99768f0"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 Hx).",
            "VernacExtend",
            "e7ca6c9a098514e50bc26584178aaf1bac3efdda"
        ],
        [
            "apply Rplus_le_compat_l, Rmult_le_compat_r.",
            "VernacExtend",
            "394254587bda2c85b15518507da26d959944af03"
        ],
        [
            "apply Rlt_le, Rinv_0_lt_compat ; by intuition.",
            "VernacExtend",
            "5d08f3cb1f698d169b6cfed00a3221259c1b4d5e"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "by apply Rlt_le, Rgt_minus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply le_INR ; by intuition.",
            "VernacExtend",
            "e15990d201cde72502509ffdf18a1192b92b762d"
        ],
        [
            "move: (a + INR i * (b - a) / (INR n + 1)) (a + INR (S i) * (b - a) / (INR n + 1)) ub H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "clear => a0 b0 ub H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (ub (Rabs (f ((a0 + b0) / 2) - phi ((a0 + b0) / 2)))) ; simpl in ub.",
            "VernacExtend",
            "ab00ec117830903dfaaf09328d980e7170a98644"
        ],
        [
            "assert (exists x : R, Rabs (f ((a0 + b0) / 2) - phi ((a0 + b0) / 2)) = Rabs (f x - phi x) /\\ a0 < x < b0).",
            "VernacExtend",
            "7d0fb75fc8731393495480f8b2c60a2bdd604759"
        ],
        [
            "eexists ; split => //.",
            "VernacExtend",
            "3c0195384676f2f0cd2ee145bc6df237c3a3e53d"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "have Hfin' : forall t, is_finite (SF_sup_fun (fun t : R => Rabs (f t - phi t)) a b n t).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /SF_sup_fun ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /SF_fun /SF_sup_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (unif_part a b n) Hfin => [ | x0 sx] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ t ; by case: Rle_dec.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "case: sx => [ | x1 sx] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => _ t ; by case: Rle_dec.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "move => H t.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: Rlt_dec => Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: sx x0 x1 H Hx0 => [ | x2 sx IH] x0 x1 /= H Hx0.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "case: Rle_dec => Hx1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply (H O) ; by intuition.",
            "VernacExtend",
            "8b340a329ffcb0146cfc89e433bbaef8241dd5c2"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Rlt_dec => Hx1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply (H O) ; by intuition.",
            "VernacExtend",
            "8b340a329ffcb0146cfc89e433bbaef8241dd5c2"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "move => i Hi ; apply (H (S i) (lt_n_S _ _ Hi)).",
            "VernacExtend",
            "2e02ce7439fad7b498197188c3ef292c5cb66ef7"
        ],
        [
            "exact: Hx1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => t Ht_ab.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: Ht_ab ; rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _ Ht_ab.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "rewrite /= /psi2_aux /= ; case: (Haux t) => [ [i Hi] | Hi ] ; ring_simplify.",
            "VernacExtend",
            "267e1edf1e63e150d67095b2f4a475472a83adc2"
        ],
        [
            "exact: Rle_refl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "change (Rbar_le (Rabs (f t - phi t)) (real (SF_sup_fun (fun t0 : R => Rabs (f t0 - phi t0)) a b n t))).",
            "VernacExtend",
            "3d144eb8b505a576b5849747539a1b968fe3a9fe"
        ],
        [
            "rewrite Hfin'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /SF_sup_fun ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /SF_fun /SF_sup_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (unif_part_sort a b n (Rlt_le _ _ Hab)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: Ht_ab.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "pattern b at 1 ; replace b with (last 0 (unif_part a b n)).",
            "VernacExtend",
            "d3db17e2520394d86845eca9577aa0f8dfa0d25a"
        ],
        [
            "pattern a at 1 ; replace a with (head 0 (unif_part a b n)).",
            "VernacExtend",
            "b2f18f8718006720f52cff465e478ecdc5e04f08"
        ],
        [
            "have : (0 < size (unif_part a b n))%nat.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite size_mkseq ; exact: lt_O_Sn.",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "case: (unif_part a b n) Hi => [ | x0 sx] Hi Hsx Ht_ab Hsort /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply lt_irrefl in Hsx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear Hsx.",
            "VernacExtend",
            "4b25f02dc112c9f417522cb1178eddfe6ce48a92"
        ],
        [
            "case: sx Hsort Hi Ht_ab => [ | x1 sx] Hsort /= Hi [Ht_a Ht_b].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Rle_antisym _ _ Ht_b Ht_a) => Ht.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "contradict Ht ; apply (Hi O (lt_n_Sn _)).",
            "VernacExtend",
            "433b35857c086ef8c6c4afea495eab58b37a4097"
        ],
        [
            "apply Rle_not_lt in Ht_a.",
            "VernacExtend",
            "66f7f76f5ff5a582a196f270b76a8f90c35968f7"
        ],
        [
            "case: Rlt_dec => // _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "elim: sx x0 x1 Hsort Ht_a Ht_b Hi => [ | x2 sx IH] x0 x1 Hsort /= Ht_a Ht_b Hi.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "case: Rle_dec => // _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /Sup_fct /Lub_Rbar.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have H : x0 < x1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rlt_trans with t.",
            "VernacExtend",
            "ccc70bf398f4d1320304ce3494d9d88d008cf972"
        ],
        [
            "apply Rnot_lt_le in Ht_a ; case: Ht_a => Ht_a.",
            "VernacExtend",
            "f1cdc450f9d895a78f957f984d0e6c83622d193c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict Ht_a ; apply sym_not_eq, (Hi O).",
            "VernacExtend",
            "ddf8bd706d507b5b1bb748f636b3454350c82246"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Ht_b => Ht_b.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict Ht_b ; apply (Hi 1%nat).",
            "VernacExtend",
            "1ec2b0c15b6ef01e9613e0d83f960d1a34763345"
        ],
        [
            "by apply lt_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (Rlt_not_eq _ _ H) ; case: Req_EM_T => // H0 _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "case: ex_lub_Rbar => l lub /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply lub ; exists t ; split.",
            "VernacExtend",
            "116ebc8d3699daed7be9c80c4adcb5e09388fa27"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (proj1 Hsort) => // _ _ ; split.",
            "VernacExtend",
            "61f826c012c5f2f73295738b96b915b05778290f"
        ],
        [
            "apply Rnot_lt_le in Ht_a ; case: Ht_a => Ht_a.",
            "VernacExtend",
            "f1cdc450f9d895a78f957f984d0e6c83622d193c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict Ht_a ; apply sym_not_eq, (Hi O).",
            "VernacExtend",
            "ddf8bd706d507b5b1bb748f636b3454350c82246"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Ht_b => Ht_b.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict Ht_b ; apply (Hi 1%nat).",
            "VernacExtend",
            "1ec2b0c15b6ef01e9613e0d83f960d1a34763345"
        ],
        [
            "by apply lt_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Rlt_dec => Hx1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /Sup_fct /Lub_Rbar.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have H : x0 < x1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rlt_trans with t.",
            "VernacExtend",
            "ccc70bf398f4d1320304ce3494d9d88d008cf972"
        ],
        [
            "apply Rnot_lt_le in Ht_a ; case: Ht_a => Ht_a.",
            "VernacExtend",
            "f1cdc450f9d895a78f957f984d0e6c83622d193c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict Ht_a ; apply sym_not_eq, (Hi O).",
            "VernacExtend",
            "ddf8bd706d507b5b1bb748f636b3454350c82246"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (Rlt_not_eq _ _ H) ; case: Req_EM_T => // H0 _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "case: ex_lub_Rbar => l lub /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply lub ; exists t ; split.",
            "VernacExtend",
            "116ebc8d3699daed7be9c80c4adcb5e09388fa27"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (proj1 Hsort) => // _ _ ; split.",
            "VernacExtend",
            "61f826c012c5f2f73295738b96b915b05778290f"
        ],
        [
            "apply Rnot_lt_le in Ht_a ; case: Ht_a => Ht_a.",
            "VernacExtend",
            "f1cdc450f9d895a78f957f984d0e6c83622d193c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict Ht_a ; apply sym_not_eq, (Hi O).",
            "VernacExtend",
            "ddf8bd706d507b5b1bb748f636b3454350c82246"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "exact: (proj2 Hsort).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: Hx1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: Ht_b.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "move => j Hj ; apply (Hi (S j) (lt_n_S _ _ Hj)).",
            "VernacExtend",
            "86abcc32e0a31f0bebff7a170c484b5052fa2657"
        ],
        [
            "apply head_unif_part.",
            "VernacExtend",
            "b0bceba99846c59838f47a6d860d83d99fdf8e31"
        ],
        [
            "apply last_unif_part.",
            "VernacExtend",
            "3b49fd4fd44633dd2b027307aeaaab4b7662851f"
        ],
        [
            "assert (forall g : R -> R -> R, let ptd := SF_seq_f2 g (unif_part a b n) in pointed_subdiv ptd -> Rabs (If - sign (b-a) * Riemann_sum f ptd) < eps2).",
            "VernacExtend",
            "f929dbeb60d7a44b6fe5da9f0e8789a7c30a202a"
        ],
        [
            "move => g ptd Hptd.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply HIf.",
            "VernacExtend",
            "8a463569bf1fc36d6efa0c99adeaeb03d795769f"
        ],
        [
            "exact: Hptd.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite SF_lx_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff : forall i, (S i < size (unif_part a b n))%nat -> nth 0 (unif_part a b n) (S i) - nth 0 (unif_part a b n) i = (b-a)/(INR n + 1).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "elim: (unif_part a b n) => /= [ | h0 t IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "move => _ ; by apply Ealpha.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "case: t IH => /= [ | h1 t] IH Hnth.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Ealpha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (seq_step _) with (Rmax (Rabs (h1 - h0)) (seq_step (h1::t))) by auto.",
            "VernacExtend",
            "df8dc173e90381f7a83ae12f2abd1e60a41a1797"
        ],
        [
            "apply (Rmax_case_strong (Rabs (h1 - h0))) => /= _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (Hnth O (lt_n_S _ _ (lt_O_Sn _))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: Hn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Rle_ge, Rdiv_le_0_compat.",
            "VernacExtend",
            "8dbf8cf107492e65a88c15b21a9b6838acd0dbf2"
        ],
        [
            "by apply Rlt_le, Rgt_minus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply IH => i Hi.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply (Hnth (S i)), lt_n_S.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => i ; rewrite size_mkseq => Hi ; rewrite !nth_mkseq.",
            "VernacExtend",
            "6b509b6a448d912d761bbad76ff3082e795e01f6"
        ],
        [
            "rewrite S_INR ; field ; apply Rgt_not_eq ; by intuition.",
            "VernacExtend",
            "4e684d547a4d472ebe41e06c21b58d3a9cce1cf7"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "by apply lt_0_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -> Rmin_left by now apply Rlt_le.",
            "VernacExtend",
            "712f32c47391383902ebecccc3f05fc5053cc46b"
        ],
        [
            "apply head_unif_part.",
            "VernacExtend",
            "b0bceba99846c59838f47a6d860d83d99fdf8e31"
        ],
        [
            "rewrite -nth_last SF_lx_f2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "change (head 0 (unif_part a b n) :: behead (unif_part a b n)) with (unif_part a b n).",
            "VernacExtend",
            "b7cda7b8b0b270dee45f2b84ca3931be73e0fc25"
        ],
        [
            "rewrite -> Rmax_right by now apply Rlt_le.",
            "VernacExtend",
            "d063f664be6750eb7fe86ea6d28af887b6dae285"
        ],
        [
            "rewrite size_mkseq nth_mkseq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl ssrnat.predn ; rewrite S_INR ; field ; apply Rgt_not_eq ; by intuition.",
            "VernacExtend",
            "479d766302502d0f3e89c69a71045184760ee389"
        ],
        [
            "simpl ; apply SSR_leq, le_refl.",
            "VernacExtend",
            "2dc244da2b7ac191bd5c5d89d6cdb529bd0b6087"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: H => {HIf} HIf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "assert (forall g1 g2 : R -> R -> R, let ptd1 := SF_seq_f2 g1 (unif_part a b n) in let ptd2 := SF_seq_f2 g2 (unif_part a b n) in pointed_subdiv ptd1 -> pointed_subdiv ptd2 -> Rabs (Riemann_sum f ptd1 - Riemann_sum f ptd2) < eps).",
            "VernacExtend",
            "da08e862ee68697f323715cbc7a2901db2048a3b"
        ],
        [
            "move => g1 g2 ptd1 ptd2 H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace (Riemann_sum f ptd1 - Riemann_sum f ptd2) with ((If - sign (b - a) * Riemann_sum f ptd2) - (If - sign (b - a) * Riemann_sum f ptd1)).",
            "VernacExtend",
            "1dcaea97f366340ec4a8f5b671eaf00c7c89bfd4"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "rewrite Rabs_Ropp (double_var eps) ; apply Rplus_lt_compat ; by apply HIf.",
            "VernacExtend",
            "cd5867e12d2faa05d5691c6f309fc03718fb0887"
        ],
        [
            "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
            "VernacExtend",
            "fca02487127bf9775753594d7fee9b399ab3dff1"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "move: H => {HIf} HIf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /Riemann_sum in HIf.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "assert (forall g1 g2 : R -> R -> R, let ptd1 := SF_seq_f2 g1 (unif_part a b n) in let ptd2 := SF_seq_f2 g2 (unif_part a b n) in pointed_subdiv ptd1 -> pointed_subdiv ptd2 -> Rabs (Riemann_sum (fun x => x) (SF_seq_f2 (fun x y => f (g1 x y) - f (g2 x y)) (unif_part a b n))) < eps).",
            "VernacExtend",
            "acb10f100b06ae5400e828028c3871a24281c09a"
        ],
        [
            "move => g1 g2 ptd1 pdt2 H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace (Riemann_sum _ _ : R) with (Riemann_sum f (SF_seq_f2 g1 (unif_part a b n)) - Riemann_sum f (SF_seq_f2 g2 (unif_part a b n))).",
            "VernacExtend",
            "3c82476333de290148d352c31f97c3c0984f6d00"
        ],
        [
            "apply HIf.",
            "VernacExtend",
            "8a463569bf1fc36d6efa0c99adeaeb03d795769f"
        ],
        [
            "exact: H1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: H2.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "elim: (unif_part a b n) => /= [ | h0].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite /Riemann_sum /= /plus /zero /= ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "case => /= [ | h1 t] IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /Riemann_sum /= /plus /zero /= ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "rewrite !(SF_cons_f2 _ h0) /= ; try by intuition.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "rewrite !Riemann_sum_cons /= -IH /plus /scal /= /mult /= ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "move:H => {HIf} HIf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "assert (forall g1 g2 : R -> R -> R, let ptd1 := SF_seq_f2 g1 (unif_part a b n) in let ptd2 := SF_seq_f2 g2 (unif_part a b n) in pointed_subdiv ptd1 -> pointed_subdiv ptd2 -> Riemann_sum id (SF_seq_f2 (fun x y : R => Rabs (f (g1 x y) - f (g2 x y))) (unif_part a b n)) < eps).",
            "VernacExtend",
            "ee66f27c59300a0fd1d04e283f6f830369eca98f"
        ],
        [
            "move => g1 g2 ptd1 ptd2 H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "set h1 := fun x y => match Rle_dec (f (g1 x y)) (f (g2 x y)) with | left _ => g2 x y | right _ => g1 x y end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set h2 := fun x y => match Rle_dec (f (g1 x y)) (f (g2 x y)) with | left _ => g1 x y | right _ => g2 x y end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "replace (Riemann_sum id (SF_seq_f2 (fun x y : R => Rabs (f (g1 x y) - f (g2 x y))) (unif_part a b n))) with (Riemann_sum id (SF_seq_f2 (fun x y : R => (f (h1 x y) - f (h2 x y))) (unif_part a b n))).",
            "VernacExtend",
            "d73ee38f2bee9bbdb5934753cd526bbace83305e"
        ],
        [
            "apply Rle_lt_trans with (1 := Rle_abs _).",
            "VernacExtend",
            "135a8d900205d7b612754e3cd7bd2bca409d80e3"
        ],
        [
            "apply HIf.",
            "VernacExtend",
            "8a463569bf1fc36d6efa0c99adeaeb03d795769f"
        ],
        [
            "revert ptd1 ptd2 H1 H2.",
            "VernacExtend",
            "ff6effd70df63b07509df2ebec62e81c286d011c"
        ],
        [
            "elim: (unif_part a b n) (0) => [z /= _ _ | x0].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "move => i ; rewrite /SF_size /= => Hi ; by apply lt_n_O in Hi.",
            "VernacExtend",
            "dd76215f84b5ec723bc22942b73281b86cf324ad"
        ],
        [
            "case => [ | x1 t] /= IH z H1 H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => i ; rewrite /SF_size /= => Hi ; by apply lt_n_O in Hi.",
            "VernacExtend",
            "dd76215f84b5ec723bc22942b73281b86cf324ad"
        ],
        [
            "move: H1 H2 ; rewrite !(SF_cons_f2 _ x0) /= ; try by intuition.",
            "VernacExtend",
            "4da78f7c3b390ceb65b9b619f9eb1866815bc4ec"
        ],
        [
            "move => H1 H2 ; case => [ | i] /= Hi.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "rewrite /h1 ; case: Rle_dec => //= _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply (H2 O (lt_O_Sn _)).",
            "VernacExtend",
            "4f48981edc355c396c14019bf0076429f6ba911a"
        ],
        [
            "apply (H1 O (lt_O_Sn _)).",
            "VernacExtend",
            "265657f9c56af82efd02da9de71db60468ee1301"
        ],
        [
            "apply (IH x0 (ptd_cons _ _ H1) (ptd_cons _ _ H2)).",
            "VernacExtend",
            "48f33b6337d90e5d3513d1c796a4c7ca7aa318b9"
        ],
        [
            "apply lt_S_n, Hi.",
            "VernacExtend",
            "cb813add265ec9cda3f77173b317301fe7ef111b"
        ],
        [
            "revert ptd1 ptd2 H1 H2.",
            "VernacExtend",
            "ff6effd70df63b07509df2ebec62e81c286d011c"
        ],
        [
            "elim: (unif_part a b n) (0) => [z /= _ _ | x0].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "move => i ; rewrite /SF_size /= => Hi ; by apply lt_n_O in Hi.",
            "VernacExtend",
            "dd76215f84b5ec723bc22942b73281b86cf324ad"
        ],
        [
            "case => [ | x1 t] /= IH z H1 H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => i ; rewrite /SF_size /= => Hi ; by apply lt_n_O in Hi.",
            "VernacExtend",
            "dd76215f84b5ec723bc22942b73281b86cf324ad"
        ],
        [
            "move: H1 H2 ; rewrite !(SF_cons_f2 _ x0) /= ; try by intuition.",
            "VernacExtend",
            "4da78f7c3b390ceb65b9b619f9eb1866815bc4ec"
        ],
        [
            "move => H1 H2 ; case => [ | i] /= Hi.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "rewrite /h2 ; case: Rle_dec => //= _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply (H1 O (lt_O_Sn _)).",
            "VernacExtend",
            "265657f9c56af82efd02da9de71db60468ee1301"
        ],
        [
            "apply (H2 O (lt_O_Sn _)).",
            "VernacExtend",
            "4f48981edc355c396c14019bf0076429f6ba911a"
        ],
        [
            "apply (IH x0 (ptd_cons _ _ H1) (ptd_cons _ _ H2)).",
            "VernacExtend",
            "48f33b6337d90e5d3513d1c796a4c7ca7aa318b9"
        ],
        [
            "apply lt_S_n, Hi.",
            "VernacExtend",
            "cb813add265ec9cda3f77173b317301fe7ef111b"
        ],
        [
            "elim: (unif_part a b n) (0) => [x0 | x0].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite /Riemann_sum /= .",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => [ | x1 t] IH z.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite /Riemann_sum /= .",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !(SF_cons_f2 _ x0) /= ; try by intuition.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "rewrite !Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "rewrite /h1 /h2 /id ; case: Rle_dec => H0.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite Rabs_left1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "simpl ; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "by apply Rle_minus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "simpl ; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "by apply Rgt_ge, Rgt_minus, Rnot_le_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: H => {HIf} HIf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "assert (forall g : R -> R -> R, (forall i j, (S i < size (unif_part a b n))%nat -> (j < size (unif_part a b n))%nat -> g (nth 0 (unif_part a b n) i) (nth 0 (unif_part a b n) (S i)) <> nth 0 (unif_part a b n) j) -> let ptd := SF_seq_f2 g (unif_part a b n) in pointed_subdiv ptd -> Riemann_sum id (SF_seq_f2 (fun x y : R => Rabs (f (g x y) - phi (g x y))) (unif_part a b n)) < eps).",
            "VernacExtend",
            "f350977a1edd68a2ac49d80724918c47ef7bac7d"
        ],
        [
            "move => g1 Hg1 ptd1 H1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /phi /sf_SF_val_fun ; case: Rle_dec (Rlt_le _ _ Hab) => //= _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "move: (unif_part_nat a b n) => Hp.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "set h := fun t => match Rle_dec a t with | right _ => t | left Ha => match Rle_dec t b with | right _ => t | left Hb => match Hp t (conj Ha Hb) with | inleft H => (a + (INR (proj1_sig H) + /2) * (b - a) / (INR n + 1)) | inright _ => (a + (INR n + /2) * (b - a) / (INR n + 1)) end end end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set g2 := fun x y => h (g1 x y).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set ptd2 := SF_seq_f2 g2 (unif_part a b n).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have H2 : pointed_subdiv ptd2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => i ; move: (H1 i) => {H1}.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite !SF_lx_f2 ; (try by apply lt_O_Sn) ; rewrite !SF_ly_f2 !SF_size_f2 size_mkseq.",
            "VernacExtend",
            "052f1d9a81d634f7015677b02ceedc4ff87489e7"
        ],
        [
            "move => H1 Hi ; move: (H1 Hi) => {H1}.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "simpl in Hi.",
            "VernacExtend",
            "9a3f12b4161c46e477680e4a707994e937e8c506"
        ],
        [
            "rewrite !nth_behead !(nth_pairmap 0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (nth 0 (0 :: unif_part a b n) (S i)) with (nth 0 (unif_part a b n) i) by auto.",
            "VernacExtend",
            "1c7787888b34700ed3475c8b924ae017f7ae2cf4"
        ],
        [
            "rewrite /g2 /h => {h g2 ptd2 ptd1} H1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: Rle_dec => Ha.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec => Hb.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Hp => [ [j [Ht Hj]] | Ht] ; simpl proj1_sig.",
            "VernacExtend",
            "df82625a5e4080596a437308dc84f9fbd8429810"
        ],
        [
            "suff Hij : j = i.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "rewrite Hij in Ht, Hj |- * => {j Hij}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite !nth_mkseq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite S_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split ; simpl ; apply Rminus_le_0 ; field_simplify.",
            "VernacExtend",
            "939415031bdb125d65d7362b2a673d16d02a6f26"
        ],
        [
            "rewrite Rdiv_1 ; apply Rdiv_le_0_compat.",
            "VernacExtend",
            "7a4aeee37200d3ca4759cf7867923996788bf908"
        ],
        [
            "rewrite Rplus_comm -Rminus_le_0 ; exact: (Rlt_le _ _ Hab).",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "generalize (pos_INR n) ; lra.",
            "VernacExtend",
            "05bf1f59d9210c9a6316977e34e111f7fed31a01"
        ],
        [
            "apply Rgt_not_eq ; by intuition.",
            "VernacExtend",
            "92af0628b21dcd185979b38106b401f044a9fed5"
        ],
        [
            "rewrite Rdiv_1 ; apply Rdiv_le_0_compat.",
            "VernacExtend",
            "7a4aeee37200d3ca4759cf7867923996788bf908"
        ],
        [
            "rewrite Rplus_comm -Rminus_le_0 ; exact: (Rlt_le _ _ Hab).",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "generalize (pos_INR n) ; lra.",
            "VernacExtend",
            "05bf1f59d9210c9a6316977e34e111f7fed31a01"
        ],
        [
            "apply Rgt_not_eq ; by intuition.",
            "VernacExtend",
            "92af0628b21dcd185979b38106b401f044a9fed5"
        ],
        [
            "apply SSR_leq ; rewrite size_mkseq in Hi, Hj ; by intuition.",
            "VernacExtend",
            "ebcaa399379412488b7be1f5189822ea0f660169"
        ],
        [
            "apply SSR_leq ; rewrite size_mkseq in Hi, Hj ; by intuition.",
            "VernacExtend",
            "ebcaa399379412488b7be1f5189822ea0f660169"
        ],
        [
            "apply le_antisym ; apply not_lt.",
            "VernacExtend",
            "09444735607f87fd7711fbc8bcefb2b8bab8b1d6"
        ],
        [
            "have Hij : nth 0 (unif_part a b n) j < nth 0 (unif_part a b n) (S i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rle_lt_trans with (g1 (nth 0 (unif_part a b n) i) (nth 0 (unif_part a b n) (S i))).",
            "VernacExtend",
            "554de2b4913d52bdb5b00f6c3d16f644be36aabf"
        ],
        [
            "by apply Ht.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (proj2 H1) => {H1} H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exact: H1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "contradict H1 ; apply (Hg1 i (S i)).",
            "VernacExtend",
            "d66968023073586ad85cbb532d94da7c3f2f63bf"
        ],
        [
            "rewrite size_mkseq ; by apply lt_n_S.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite size_mkseq ; by apply lt_n_S.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "contradict Hij.",
            "VernacExtend",
            "528a2c715d701a2da3067abdf8eb0d21a2564e24"
        ],
        [
            "apply Rle_not_lt, sorted_incr.",
            "VernacExtend",
            "1b8195636701a53df1f90c0d6e9e1c01f5812349"
        ],
        [
            "apply unif_part_sort, Rlt_le, Hab.",
            "VernacExtend",
            "048a61b49c11c833dfd4e037827b1a5b0f2b7879"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (Rle_lt_trans _ _ _ (proj1 H1) (proj2 Ht)) => Hij.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "contradict Hij.",
            "VernacExtend",
            "528a2c715d701a2da3067abdf8eb0d21a2564e24"
        ],
        [
            "apply Rle_not_lt, sorted_incr.",
            "VernacExtend",
            "1b8195636701a53df1f90c0d6e9e1c01f5812349"
        ],
        [
            "apply unif_part_sort, Rlt_le, Hab.",
            "VernacExtend",
            "048a61b49c11c833dfd4e037827b1a5b0f2b7879"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_mkseq ; by intuition.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "suff : i = n.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "move => ->.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite !nth_mkseq ?S_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split ; simpl ; apply Rminus_le_0 ; field_simplify.",
            "VernacExtend",
            "939415031bdb125d65d7362b2a673d16d02a6f26"
        ],
        [
            "rewrite Rdiv_1 ; apply Rdiv_le_0_compat.",
            "VernacExtend",
            "7a4aeee37200d3ca4759cf7867923996788bf908"
        ],
        [
            "rewrite Rplus_comm -Rminus_le_0 ; exact: (Rlt_le _ _ Hab).",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "generalize (pos_INR n) ; lra.",
            "VernacExtend",
            "05bf1f59d9210c9a6316977e34e111f7fed31a01"
        ],
        [
            "apply Rgt_not_eq ; by intuition.",
            "VernacExtend",
            "92af0628b21dcd185979b38106b401f044a9fed5"
        ],
        [
            "rewrite Rdiv_1 ; apply Rdiv_le_0_compat.",
            "VernacExtend",
            "7a4aeee37200d3ca4759cf7867923996788bf908"
        ],
        [
            "rewrite Rplus_comm -Rminus_le_0 ; exact: (Rlt_le _ _ Hab).",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "generalize (pos_INR n) ; lra.",
            "VernacExtend",
            "05bf1f59d9210c9a6316977e34e111f7fed31a01"
        ],
        [
            "apply Rgt_not_eq ; by intuition.",
            "VernacExtend",
            "92af0628b21dcd185979b38106b401f044a9fed5"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "apply le_antisym ; apply not_lt.",
            "VernacExtend",
            "09444735607f87fd7711fbc8bcefb2b8bab8b1d6"
        ],
        [
            "have Hij : nth 0 (unif_part a b n) i < nth 0 (unif_part a b n) (S n).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rle_lt_trans with (g1 (nth 0 (unif_part a b n) i) (nth 0 (unif_part a b n) (S i))).",
            "VernacExtend",
            "554de2b4913d52bdb5b00f6c3d16f644be36aabf"
        ],
        [
            "by apply H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (proj2 Ht) => {Ht} Ht.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exact: Ht.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "contradict Ht ; apply Hg1.",
            "VernacExtend",
            "2cc9ae53ed3ac2ae9ba86021e37d59aee42a5625"
        ],
        [
            "rewrite size_mkseq ; by apply lt_n_S.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite size_mkseq ; by apply lt_n_Sn.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "contradict Hij.",
            "VernacExtend",
            "528a2c715d701a2da3067abdf8eb0d21a2564e24"
        ],
        [
            "apply Rle_not_lt, sorted_incr.",
            "VernacExtend",
            "1b8195636701a53df1f90c0d6e9e1c01f5812349"
        ],
        [
            "apply unif_part_sort, Rlt_le , Hab.",
            "VernacExtend",
            "048a61b49c11c833dfd4e037827b1a5b0f2b7879"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_mkseq ; by intuition.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "have Hij : nth 0 (unif_part a b n) (n) < nth 0 (unif_part a b n) (S i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rle_lt_trans with (g1 (nth 0 (unif_part a b n) i) (nth 0 (unif_part a b n) (S i))).",
            "VernacExtend",
            "554de2b4913d52bdb5b00f6c3d16f644be36aabf"
        ],
        [
            "by apply Ht.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (proj2 H1) => {H1} H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exact: H1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "contradict H1 ; apply Hg1.",
            "VernacExtend",
            "505cafc049ba0456537213cafe391bf175ce6c7e"
        ],
        [
            "rewrite size_mkseq ; by intuition.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite size_mkseq ; by intuition.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "contradict Hij.",
            "VernacExtend",
            "528a2c715d701a2da3067abdf8eb0d21a2564e24"
        ],
        [
            "apply Rle_not_lt, sorted_incr.",
            "VernacExtend",
            "1b8195636701a53df1f90c0d6e9e1c01f5812349"
        ],
        [
            "apply unif_part_sort, Rlt_le, Hab.",
            "VernacExtend",
            "048a61b49c11c833dfd4e037827b1a5b0f2b7879"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_mkseq ; by intuition.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "exact: H1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: H1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply SSR_leq ; rewrite size_mkseq ; by intuition.",
            "VernacExtend",
            "ebcaa399379412488b7be1f5189822ea0f660169"
        ],
        [
            "apply SSR_leq ; rewrite size_mkseq ; by intuition.",
            "VernacExtend",
            "ebcaa399379412488b7be1f5189822ea0f660169"
        ],
        [
            "move: (HIf g1 g2 H1 H2).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace (SF_seq_f2 (fun x y : R => Rabs (f (g1 x y) - SF_val_fun f a b n (g1 x y))) (unif_part a b n)) with (SF_seq_f2 (fun x y : R => Rabs (f (g1 x y) - f (g2 x y))) (unif_part a b n)).",
            "VernacExtend",
            "1b640295fa5b6daeb9cd5ff780ac82c0dc0c75fc"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have H0 : forall t, a <= t <= b -> SF_val_fun f a b n t = f (h t).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => t Ht.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /h SF_val_fun_rw.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Ht => Ha Hb.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec => // Ha'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec => // Hb'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: unif_part_nat => [ [i [Ht Hi]] | Ht] ; case: Hp {h g2 ptd2 H2} => [ [j [Ht' Hj]] | Ht'] ; simpl proj1_sig.",
            "VernacExtend",
            "702201dfd1c9b765f31589827cde75eab10f9521"
        ],
        [
            "apply (f_equal (fun i => f (a + (INR i + /2) * (b - a) / (INR n + 1)))).",
            "VernacExtend",
            "db7720c91eac0fd7a61885f8a802f754cbe7a270"
        ],
        [
            "apply le_antisym ; apply not_lt.",
            "VernacExtend",
            "09444735607f87fd7711fbc8bcefb2b8bab8b1d6"
        ],
        [
            "move: (Rle_lt_trans _ _ _ (proj1 Ht) (proj2 Ht')) => Hij ; contradict Hij.",
            "VernacExtend",
            "02b7a5eadc0d354ff1068459de23b4cc012cd246"
        ],
        [
            "apply Rle_not_lt, sorted_incr.",
            "VernacExtend",
            "1b8195636701a53df1f90c0d6e9e1c01f5812349"
        ],
        [
            "apply unif_part_sort, Rlt_le, Hab.",
            "VernacExtend",
            "048a61b49c11c833dfd4e037827b1a5b0f2b7879"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (Rle_lt_trans _ _ _ (proj1 Ht') (proj2 Ht)) => Hij ; contradict Hij.",
            "VernacExtend",
            "02b7a5eadc0d354ff1068459de23b4cc012cd246"
        ],
        [
            "apply Rle_not_lt, sorted_incr.",
            "VernacExtend",
            "1b8195636701a53df1f90c0d6e9e1c01f5812349"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "absurd (i < n)%nat.",
            "VernacExtend",
            "65972d568075cef7df82003ef4c7a24fdeb208f3"
        ],
        [
            "move: (Rle_lt_trans _ _ _ (proj1 Ht') (proj2 Ht)) => Hij ; contradict Hij.",
            "VernacExtend",
            "02b7a5eadc0d354ff1068459de23b4cc012cd246"
        ],
        [
            "apply Rle_not_lt, sorted_incr.",
            "VernacExtend",
            "1b8195636701a53df1f90c0d6e9e1c01f5812349"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_mkseq ; by intuition.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite size_mkseq in Hi ; by intuition.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "absurd (j < n)%nat.",
            "VernacExtend",
            "98099145e1e2c833252642166b6f560d4c15d38b"
        ],
        [
            "move: (Rle_lt_trans _ _ _ (proj1 Ht) (proj2 Ht')) => Hij ; contradict Hij.",
            "VernacExtend",
            "02b7a5eadc0d354ff1068459de23b4cc012cd246"
        ],
        [
            "apply Rle_not_lt, sorted_incr.",
            "VernacExtend",
            "1b8195636701a53df1f90c0d6e9e1c01f5812349"
        ],
        [
            "by apply unif_part_sort, Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_mkseq ; by intuition.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite size_mkseq in Hj ; by intuition.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /g2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have : forall i, (i < size (unif_part a b n))%nat -> a <= nth 0 (unif_part a b n) i <= b.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => i ; rewrite size_mkseq => Hi ; rewrite nth_mkseq.",
            "VernacExtend",
            "6b509b6a448d912d761bbad76ff3082e795e01f6"
        ],
        [
            "pattern b at 3 ; replace b with (a + (INR n + 1) * (b - a) / (INR n + 1)) by (field ; apply Rgt_not_eq ; intuition).",
            "VernacExtend",
            "3abb2bd5a32d56596d5f8aa0fb2fa43d880e67e7"
        ],
        [
            "pattern a at 1 ; replace a with (a + 0 * (b - a) / (INR n + 1)) by (field ; apply Rgt_not_eq ; intuition).",
            "VernacExtend",
            "e51d5f2c03780ec682be0ea24275815555251c2e"
        ],
        [
            "apply Rgt_minus in Hab.",
            "VernacExtend",
            "e341a83a5849330bb8923ee79257310b041dfd13"
        ],
        [
            "split ; apply Rplus_le_compat_l ; repeat apply Rmult_le_compat_r ; try by intuition.",
            "VernacExtend",
            "a58ffab1cb584bbc78b8f677e4d243eb8ab0b5a2"
        ],
        [
            "rewrite -S_INR ; apply le_INR ; by intuition.",
            "VernacExtend",
            "04be620df9d6e8c21cdcdadde681605c4fd8f4ea"
        ],
        [
            "by apply SSR_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "revert ptd1 H1 ; elim: (unif_part a b n) => [ ptd1 H1 Hnth | x0 ].",
            "VernacExtend",
            "733d0832aefcdc89649bdf6e9fd4600237cc2403"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => [ | x1 s] IH ptd1 H1 Hnth.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "revert ptd1 H1 ; rewrite !(SF_cons_f2 _ x0) /= ; try by intuition.",
            "VernacExtend",
            "7663f48bdecc8a3a7397d0359439a6b6789641d2"
        ],
        [
            "intro ; apply (f_equal2 (fun x y => SF_cons (x0, Rabs (f (g1 x0 x1) - x)) y)).",
            "VernacExtend",
            "83e37a58411c409306ecb99a3694c7694754c5f0"
        ],
        [
            "apply sym_equal, H0.",
            "VernacExtend",
            "163184eadf5d7c0bd26ad47115f09be03bb49846"
        ],
        [
            "move: (H1 O (lt_O_Sn _)) (Hnth O (lt_O_Sn _)) (Hnth 1%nat (lt_n_S _ _ (lt_O_Sn _))) => /= ; intuition.",
            "VernacExtend",
            "96755459c4138d81e02849602fc4789e08ed6a82"
        ],
        [
            "by apply Rle_trans with x0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with x1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (IH (ptd_cons _ _ H1)).",
            "VernacExtend",
            "22fa7111c35a7182f5cb904c9a3310af21208ff4"
        ],
        [
            "move => i Hi ; apply (Hnth (S i)) ; simpl in Hi |- * ; by apply lt_n_S.",
            "VernacExtend",
            "4a09ad7931b8edebf8905f7ab0b9b49b762643b0"
        ],
        [
            "move: H => {HIf} HIf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (RiemannInt_SF psi) with (Riemann_sum id (SF_seq_f2 (fun x y : R => real (Sup_fct (fun t => Rabs (f t - phi t)) x y)) (unif_part a b n))).",
            "VernacExtend",
            "ff349d8926f1b8c9a91a9c03658470ffb32db07f"
        ],
        [
            "set (F := fun s val => exists g : R -> R -> R, (forall (i j : nat), (S i < size s)%nat -> (j < size s)%nat -> g (nth 0 s i) (nth 0 s (S i)) <> nth 0 s j) /\\ (let ptd := SF_seq_f2 g s in pointed_subdiv ptd) /\\ Riemann_sum id (SF_seq_f2 (fun x y : R => Rabs (f (g x y) - phi (g x y))) s) = val).",
            "VernacExtend",
            "045da499b73497425e9ac14076301dda704c899f"
        ],
        [
            "cut (is_lub (F (unif_part a b n)) (Riemann_sum id (SF_seq_f2 (fun x y : R => real (Sup_fct (fun t : R => Rabs (f t - phi t)) x y)) (unif_part a b n)))) => [ Hlub | ].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Hlub => val [g [Hnth [H0 Hval]]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rlt_le ; rewrite -Hval.",
            "VernacExtend",
            "713371f484e049d3d85a389f29302f6710a6fd68"
        ],
        [
            "apply HIf.",
            "VernacExtend",
            "8a463569bf1fc36d6efa0c99adeaeb03d795769f"
        ],
        [
            "exact: Hnth.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: H0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Focus 2.",
            "VernacFocus",
            "485d4f15aaf5c71ed130bd270976f9fc4e12a61f"
        ],
        [
            "rewrite StepFun_P30.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (RiemannInt_SF psi2) with 0.",
            "VernacExtend",
            "2c56a3641b5b9fe718d0c494ad94dc3a07d9a04c"
        ],
        [
            "rewrite Rmult_0_r Rplus_0_r /RiemannInt_SF SF_sup_subdiv SF_sup_subdiv_val ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "elim: (unif_part a b n) (unif_part_sort a b n (Rlt_le _ _ Hab)) => [ Hsort | x0 ].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => [ | x1 s] IH Hsort.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite SF_cons_f2 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply f_equal, IH, Hsort.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: lt_O_Sn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite /RiemannInt_SF ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite (StepFun_P17 (StepFun_P1 psi2) psi2_ad).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "clear psi2_ad.",
            "VernacExtend",
            "6e254cf351488f1ded590f816d62fd1302fd6e31"
        ],
        [
            "revert psi2_ly ; elim: (unif_part a b n) => /= [ | x0].",
            "VernacExtend",
            "58d229f01beeffc52c76386cc8feabce1260b46a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => /= [ | x1 s] IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -IH ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "Focus 2.",
            "VernacFocus",
            "485d4f15aaf5c71ed130bd270976f9fc4e12a61f"
        ],
        [
            "rewrite StepFun_P30.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (RiemannInt_SF psi2) with 0.",
            "VernacExtend",
            "2c56a3641b5b9fe718d0c494ad94dc3a07d9a04c"
        ],
        [
            "rewrite Rmult_0_r Rplus_0_r ; rewrite /RiemannInt_SF SF_sup_subdiv SF_sup_subdiv_val ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
            "VernacExtend",
            "926ad997ff7c5bb12fc6a25f23d15d25fbc7c82c"
        ],
        [
            "elim: (unif_part a b n) (unif_part_sort a b n (Rlt_le _ _ Hab)) => [ Hsort /= | x0].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply Rge_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => [ | x1 s] IH Hsort /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rge_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_ge, Rplus_le_le_0_compat.",
            "VernacExtend",
            "4d17a772003d4fd1a76f797980c196a7b1c131de"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "rewrite /Sup_fct /Lub_Rbar.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Req_EM_T => Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ex_lub_Rbar ; case => [l | | ] [ub lub] /=.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "apply Rle_trans with (Rabs (f ((x0+x1)/2) - phi ((x0+x1)/2))).",
            "VernacExtend",
            "dc3353b970e531bf3371a6c4ede01ebd92750166"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "apply ub.",
            "VernacExtend",
            "0aaba5b3ce3b959fa8fd601234deea2b97b96fe6"
        ],
        [
            "exists ((x0+x1)/2) ; split.",
            "VernacExtend",
            "d1727490449970ab92664f1602b68768fa969774"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (proj1 Hsort) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "pattern x1 at 3 ; replace x1 with ((x1 + x1)/2) by field.",
            "VernacExtend",
            "7e12334dc0cb146e44929b708de80fe188cd0af5"
        ],
        [
            "pattern x0 at 1 ; replace x0 with ((x0 + x0)/2) by field.",
            "VernacExtend",
            "4ac877ff6e62277cfc0bbc07b7409b10e57009d2"
        ],
        [
            "split ; apply Rmult_lt_compat_r.",
            "VernacExtend",
            "047f2dd6238eb58cc0684ea3712692d7cee55637"
        ],
        [
            "by apply Rinv_0_lt_compat, Rlt_R0_R2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rplus_lt_compat_l ; by case: (proj1 Hsort).",
            "VernacExtend",
            "b9f5c615143940f59ed5384785de4ba38152e7a7"
        ],
        [
            "by apply Rinv_0_lt_compat, Rlt_R0_R2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rplus_lt_compat_r ; by case: (proj1 Hsort).",
            "VernacExtend",
            "45c800767a04a8bb0ea8d900752bbfd486924a4d"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply -> Rminus_le_0 ; apply Hsort.",
            "VernacExtend",
            "e5f578a9d422b1092a6c74aee551e96c06687389"
        ],
        [
            "apply Rge_le, IH, Hsort.",
            "VernacExtend",
            "54fda499c561a84b059f98a1ba5176af01253b5e"
        ],
        [
            "rewrite /RiemannInt_SF ; case: Rle_dec (Rlt_le _ _ Hab) => // _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite (StepFun_P17 (StepFun_P1 psi2) psi2_ad).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "clear psi2_ad.",
            "VernacExtend",
            "6e254cf351488f1ded590f816d62fd1302fd6e31"
        ],
        [
            "revert psi2_ly ; elim: (unif_part a b n) => /= [ | x0].",
            "VernacExtend",
            "58d229f01beeffc52c76386cc8feabce1260b46a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => /= [ | x1 s] IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -IH ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "move: Hfin.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have : sorted Rlt (unif_part a b n).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply sorted_nth => i.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite size_mkseq => Hi x0 ; rewrite !nth_mkseq.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "apply Rminus_gt ; rewrite S_INR ; field_simplify.",
            "VernacExtend",
            "f7ad2aa142794d23e35e9d262c235d1908563c98"
        ],
        [
            "rewrite Rdiv_1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "rewrite Rplus_comm ; by apply Rgt_minus.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rgt_not_eq ; by intuition.",
            "VernacExtend",
            "92af0628b21dcd185979b38106b401f044a9fed5"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "elim: (unif_part a b n) (unif_part_sort a b n (Rlt_le _ _ Hab)) => [ Hle Hlt Hfin | x1].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "split ; rewrite /Riemann_sum /=.",
            "VernacExtend",
            "23414b1aa23418a1670d952f6b338db06304aa88"
        ],
        [
            "move => val [g [Hnth [Hptd Hval]]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -Hval ; by apply Rle_refl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "move => ub Hub ; apply: Hub.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "exists (fun _ _ => 0).",
            "VernacExtend",
            "a57899e201cda62d8aeae0b948f3d6e7c2a10b29"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => i j Hi Hj ; by apply lt_n_O in Hi.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => ptd i Hi ; by apply lt_n_O in Hi.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "case => [ | x2 s] IH Hle Hlt Hfin.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split ; rewrite /Riemann_sum /=.",
            "VernacExtend",
            "23414b1aa23418a1670d952f6b338db06304aa88"
        ],
        [
            "move => val [g [Hnth [Hptd Hval]]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -Hval ; by apply Rle_refl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "move => ub Hub ; apply: Hub.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "exists (fun _ _ => 0).",
            "VernacExtend",
            "a57899e201cda62d8aeae0b948f3d6e7c2a10b29"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => i j Hi Hj.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "simpl in Hi ; by apply lt_S_n, lt_n_O in Hi.",
            "VernacExtend",
            "42f4e58902b7896686acbb3e83e3ebb9da90162a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => ptd i Hi ; by apply lt_n_O in Hi.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite SF_cons_f2 /= ; last by apply lt_O_Sn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set F0 := fun x => exists t, x1 < t < x2 /\\ x = Rabs (f t - phi t) * (x2 - x1).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set set_plus := fun (F : R -> Prop) (G : R -> Prop) (x : R) => exists y, exists z, x = y + z /\\ F y /\\ G z.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "suff H0 : forall (x : R), F [:: x1, x2 & s] x <-> (set_plus (F0) (F (x2::s))) x.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "cut (is_lub (set_plus (F0) (F (x2::s))) (real (Sup_fct (fun t : R => Rabs (f t - phi t)) x1 x2) * (x2 - x1) + Riemann_sum id (SF_seq_f2 (fun x y : R => real (Sup_fct (fun t : R => Rabs (f t - phi t)) x y)) (x2 :: s)))) => [H1 | ].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => x Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /plus /scal /= /mult /= Rmult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply H1, H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => ub Hub.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /plus /scal /= /mult /= Rmult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply H1 => x Hx ; by apply Hub, H0.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "suff H_F0 : is_lub (F0) (real (Sup_fct (fun t : R => Rabs (f t - phi t)) x1 x2) * (x2 - x1)).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "have Hfin0 : (forall i : nat, (S i < size (x2 :: s))%nat -> is_finite (Sup_fct (fun t0 : R => Rabs (f t0 - phi t0)) (nth 0 (x2 :: s) i) (nth 0 (x2 :: s) (S i)))).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => i /= Hi ; move: (Hfin (S i) (lt_n_S _ _ Hi)) => /= {Hfin}.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: H_F0 (IH (proj2 Hle) (proj2 Hlt) Hfin0).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (F0 (pos_div_2 eps)) (F (x2::s) (pos_div_2 eps)) (real (Sup_fct (fun t : R => Rabs (f t - phi t)) x1 x2) * (x2 - x1)) (Riemann_sum id (SF_seq_f2 (fun x4 y : R => real (Sup_fct (fun t : R => Rabs (f t - phi t)) x4 y)) (x2 :: s))).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move => F1 F2 l1 l2 Hl1 Hl2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => _ [y [z [-> Hx]]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "by apply Hl1, Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hl2, Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => ub Hub.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace ub with ((ub-l2) + l2) by ring.",
            "VernacExtend",
            "c10a35d4df4e41e9f1bf7323c2bc3c2fd9cf0856"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "apply Hl1 => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace y with (l2 + (y - l2)) by ring.",
            "VernacExtend",
            "45cbfcdd080681faab94e274c74cfa37402c9b69"
        ],
        [
            "replace (ub-l2) with ((ub - y) + (y - l2)) by ring.",
            "VernacExtend",
            "46460da9dd57b42458b0e9f099bb292a733419f0"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "apply Hl2 => z Hz.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace z with ((y+z) - y) by ring.",
            "VernacExtend",
            "a4f21619de6e5d71c0a6ce76d5a9d8eb07908994"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "apply Hub.",
            "VernacExtend",
            "88ecc2488b63e46827735699f592921a85d0a25a"
        ],
        [
            "exists y ; exists z ; by intuition.",
            "VernacExtend",
            "8466bcb72cece414a824666d69ad11714e3b09c9"
        ],
        [
            "move: (Hfin O (lt_n_S _ _ (lt_O_Sn _))).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /Sup_fct /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (Rlt_not_eq _ _ (proj1 Hlt)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: Req_EM_T => // Hx1 _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /Lub_Rbar ; case: ex_lub_Rbar ; case => [l | | ] [ub lub] ; simpl.",
            "VernacExtend",
            "db9d5348cd91daca5c6c63922057157ddd699055"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => _ [t [Ht ->]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply -> Rminus_le_0 ; apply Hle.",
            "VernacExtend",
            "67002b500ab66ffc9bd2cc6c893120823ee9e746"
        ],
        [
            "apply ub ; exists t ; split.",
            "VernacExtend",
            "b8c7d0b96d3ed8b116a63ff01bd12e8e8a60eaa6"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Rmin /Rmax ; case: Rle_dec (proj1 Hle) => // _ _ ; by intuition.",
            "VernacExtend",
            "edc181ae1523612867809723d78a66d7ba4793ea"
        ],
        [
            "move => b0 Hb0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (Rgt_minus _ _ (proj1 Hlt)) => H1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace b0 with ((b0 / (x2 - x1)) * (x2 - x1)) by (field ; by apply Rgt_not_eq).",
            "VernacExtend",
            "7d8c4f843422732de6c2a82f8e7d534bd17c449f"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "change (Rbar_le l (b0 / (x2 - x1))).",
            "VernacExtend",
            "c1a8e11c68b2c052f9e6365d8d19803d5d0d4dc2"
        ],
        [
            "apply lub => _ [t [-> Ht]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (Rabs (f t - phi t)) with ((Rabs (f t - phi t) * (x2 - x1)) / (x2 - x1)) by (field ; by apply Rgt_not_eq).",
            "VernacExtend",
            "2cffb84aa6f4c09305bd644904f4182ccd2dd70f"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "by apply Rlt_le, Rinv_0_lt_compat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hb0 ; exists t.",
            "VernacExtend",
            "742d2f797ce6b1c8f2ee5dd07b3cc593d67566f0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move: Ht ; rewrite /Rmin /Rmax ; case: Rle_dec (proj1 Hle) => //.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => val ; split => Hval.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "case: Hval => g [Hnth [Hptd <-]] {val}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite SF_cons_f2 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exists (Rabs (f (g x1 x2) - phi (g x1 x2)) * (x2 - x1)).",
            "VernacExtend",
            "2dff808d22095657e3155709ee3674eda3dfb1b3"
        ],
        [
            "exists (Riemann_sum id (SF_seq_f2 (fun x y : R => Rabs (f (g x y) - phi (g x y))) (x2 :: s))).",
            "VernacExtend",
            "896acba2d3668375f4db8eceaa3ca92fb8a83ee8"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exists (g x1 x2) ; split.",
            "VernacExtend",
            "428e61a540fcaf8b7465b67651a3010d0c543757"
        ],
        [
            "case: (Hptd O) => /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite SF_size_f2 /= ; exact: lt_O_Sn.",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "case => Hx1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case => Hx2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict Hx2 ; apply (Hnth O 1%nat).",
            "VernacExtend",
            "8175c5a726e1f0fd563ed767085e0c0b4c52a2fe"
        ],
        [
            "simpl ; by intuition.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "simpl ; by intuition.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "contradict Hx1 ; apply sym_not_eq, (Hnth O O).",
            "VernacExtend",
            "aad763ab3fdd59dd6daa6f8550e6baae63908811"
        ],
        [
            "simpl ; by intuition.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "simpl ; by intuition.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists g.",
            "VernacExtend",
            "27aef793382f0ac61c5ffc2a36b3cd54d16ac982"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => i j Hi Hj.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply (Hnth (S i) (S j)).",
            "VernacExtend",
            "0549a1c82b8da07bad144a3a286ee13e36afa28e"
        ],
        [
            "simpl ; apply lt_n_S, Hi.",
            "VernacExtend",
            "517efd1b801fcb512f67dcdbfdf93f7269ff842b"
        ],
        [
            "simpl ; apply lt_n_S, Hj.",
            "VernacExtend",
            "ddb53215567a0b8166dbec79c8b15426d9087f76"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move: Hptd => /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite SF_cons_f2 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply ptd_cons.",
            "VernacExtend",
            "f49f8c91c50246f8b256d7005689081ffcc385a8"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact: lt_O_Sn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "case: Hval => /= y Hy.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Hy => /= z [-> [F0y Fz]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: F0y => t [Ht ->].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Fz => g [Hnth [Hpdt <-]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "set g0 := fun x y => match Req_EM_T x x1 with | left _ => match Req_EM_T y x2 with | left _ => t | right _ => g x y end | right _ => g x y end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists g0.",
            "VernacExtend",
            "fdd27aac854e7b03e9d315efcec0ab3e3e03e3b2"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => {val y z} i j Hi Hj.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /g0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Req_EM_T => Hx1'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Req_EM_T => Hx2'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: j Hj => /= [ | j] Hj.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rgt_not_eq, Ht.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply lt_S_n in Hj ; case: j Hj => /= [ | j] Hj.",
            "VernacExtend",
            "30fecd504be37d5a5ad85a46b27115138aea9943"
        ],
        [
            "by apply Rlt_not_eq, Ht.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (proj2 Hle : sorted Rle (x2 :: s)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply lt_S_n in Hj ; move: (proj2 Ht) ; elim: j x2 s Hj {IH Hle Hlt Hfin Hnth Hpdt F0 Ht g0 Hx2' Hx1' i Hi} => [ | i IH] x0 ; case => {x1} [ | x1 s] Hi Ht Hle ; simpl.",
            "VernacExtend",
            "feea7c91a3d39e08e2f98bc3077a313d64f04196"
        ],
        [
            "by apply lt_irrefl in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_not_eq, Rlt_le_trans with (1 := Ht).",
            "VernacExtend",
            "ca2abb4a081b1e6b48b6eaffe661849d365f2e14"
        ],
        [
            "by apply Hle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (IH x1).",
            "VernacExtend",
            "6311ce4c7d43d28f60200739f68542755855e767"
        ],
        [
            "by apply lt_S_n, Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_le_trans with (1 := Ht).",
            "VernacExtend",
            "dfd0bbde7830541a4dc24a9afd9ce084e8d44239"
        ],
        [
            "by apply Hle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: i j Hi Hj Hx1' Hx2' => /= [ | i] j Hi Hj Hx1' Hx2'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: j Hj => /= [ | j] Hj.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rgt_not_eq, Rlt_le_trans with x2.",
            "VernacExtend",
            "93a2baa6bb5a634faf09cb0696fd7d3637129203"
        ],
        [
            "apply Rlt_trans with t ; by intuition.",
            "VernacExtend",
            "5f404de768b542ed94e96cac7e07b53a4bdd74de"
        ],
        [
            "apply Rle_trans with (nth 0 (x2 :: s) i).",
            "VernacExtend",
            "db8b20bbf04d987c2e27085d2d0702e088257fe3"
        ],
        [
            "apply (sorted_incr (x2 :: s) O i).",
            "VernacExtend",
            "39f489310d2973d42f23b9d305a87e7fc52b9c3b"
        ],
        [
            "move: (ptd_sort _ Hpdt).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /SF_sorted SF_lx_f2 // ; by apply lt_O_Sn.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl ; by intuition.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "move: (Hpdt i).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite SF_size_f2 SF_lx_f2 ; (try by apply lt_O_Sn) ; rewrite SF_ly_f2 (nth_pairmap 0) /=.",
            "VernacExtend",
            "052f1d9a81d634f7015677b02ceedc4ff87489e7"
        ],
        [
            "move => H ; apply H.",
            "VernacExtend",
            "d83b68a11a10a2d3f66d5ad53a43cca8ae591b9e"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "apply Hnth.",
            "VernacExtend",
            "b7b7b282a408c11bd8248149959cfd21d26e6619"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl in Hi ; apply lt_S_n in Hi ; case: i Hi Hx1' => /= [ | i] Hi Hx1'.",
            "VernacExtend",
            "7870b0a5f497ff4d6adf1eb590692f654959a3f4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: j Hj => /= [ | j] Hj.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rgt_not_eq, Rlt_le_trans with x2.",
            "VernacExtend",
            "93a2baa6bb5a634faf09cb0696fd7d3637129203"
        ],
        [
            "apply Rlt_trans with t ; by intuition.",
            "VernacExtend",
            "5f404de768b542ed94e96cac7e07b53a4bdd74de"
        ],
        [
            "apply Rle_trans with (nth 0 (x2 :: s) i).",
            "VernacExtend",
            "db8b20bbf04d987c2e27085d2d0702e088257fe3"
        ],
        [
            "apply (sorted_incr (x2 :: s) O i).",
            "VernacExtend",
            "39f489310d2973d42f23b9d305a87e7fc52b9c3b"
        ],
        [
            "move: (ptd_sort _ Hpdt).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /SF_sorted SF_lx_f2 // ; apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl ; by intuition.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "move: (Hpdt i).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite SF_size_f2 SF_lx_f2 ; (try by apply lt_O_Sn) ; rewrite SF_ly_f2 (nth_pairmap 0) /=.",
            "VernacExtend",
            "052f1d9a81d634f7015677b02ceedc4ff87489e7"
        ],
        [
            "move => H ; apply H.",
            "VernacExtend",
            "d83b68a11a10a2d3f66d5ad53a43cca8ae591b9e"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "apply Hnth.",
            "VernacExtend",
            "b7b7b282a408c11bd8248149959cfd21d26e6619"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => ptd i Hi.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite SF_size_f2 /= in Hi.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite SF_lx_f2 ; (try by apply lt_O_Sn) ; rewrite SF_ly_f2 nth_behead (nth_pairmap 0) /=.",
            "VernacExtend",
            "052f1d9a81d634f7015677b02ceedc4ff87489e7"
        ],
        [
            "case: i Hi => /= [ | i] Hi ; rewrite /g0.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "move: (refl_equal x1) ; case: Req_EM_T => // _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "move: (refl_equal x2) ; case: Req_EM_T => // _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "split ; apply Rlt_le ; by intuition.",
            "VernacExtend",
            "96d22a79845eec25d3d412d4f7328bceb2a70c60"
        ],
        [
            "suff : (nth 0 (x2 :: s) i) <> x1.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case: Req_EM_T => // _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Hpdt i).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite SF_size_f2 SF_lx_f2 ; (try by apply lt_O_Sn) ; rewrite SF_ly_f2 nth_behead (nth_pairmap 0) /=.",
            "VernacExtend",
            "052f1d9a81d634f7015677b02ceedc4ff87489e7"
        ],
        [
            "move => H ; apply H ; by intuition.",
            "VernacExtend",
            "8586c155bb76b5850339da6beabc5577d82b5177"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "apply Rgt_not_eq, Rlt_le_trans with x2.",
            "VernacExtend",
            "93a2baa6bb5a634faf09cb0696fd7d3637129203"
        ],
        [
            "apply Rlt_trans with t ; by intuition.",
            "VernacExtend",
            "5f404de768b542ed94e96cac7e07b53a4bdd74de"
        ],
        [
            "apply (sorted_incr (x2 :: s) O i).",
            "VernacExtend",
            "39f489310d2973d42f23b9d305a87e7fc52b9c3b"
        ],
        [
            "move: (ptd_sort _ Hpdt).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /SF_sorted SF_lx_f2 // ; apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl ; by intuition.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "apply SSR_leq ; by intuition.",
            "VernacExtend",
            "996b6547cf6c4ea1a33be5d7cd062d52d43e8548"
        ],
        [
            "rewrite SF_cons_f2 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "rewrite /g0 ; move: (refl_equal x1) ; case: Req_EM_T => // _ _.",
            "VernacExtend",
            "94b585b2dd67662a1bfccf9de340af322f43f6e9"
        ],
        [
            "move: (refl_equal x2) ; case: Req_EM_T => // _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "case: s Hlt {Hpdt IH Hle Hfin F0 Ht Hnth} => [ | x3 s] Hlt /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "rewrite !(SF_cons_f2 _ _ (x3 :: _)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "rewrite /g0 /id ; move: (Rgt_not_eq _ _ (proj1 Hlt)) ; by case: Req_EM_T.",
            "VernacExtend",
            "b7f6e087994998c639607bfca56b5e52b98acef7"
        ],
        [
            "elim: s (x2) x3 Hlt => [ | x4 s IH] x2' x3 Hlt.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "exact: refl_equal.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite !(SF_cons_f2 _ _ (x4 :: _)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !Riemann_sum_cons /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "rewrite /g0 ; move: (Rgt_not_eq _ _ (Rlt_trans _ _ _ (proj1 Hlt) (proj1 (proj2 Hlt)))) ; by case: Req_EM_T.",
            "VernacExtend",
            "b7f6e087994998c639607bfca56b5e52b98acef7"
        ],
        [
            "apply (IH x3).",
            "VernacExtend",
            "4f009dbd4675b719c871679f3351df9ecc3c4818"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_trans with x2' ; apply Hlt.",
            "VernacExtend",
            "415cae20fee1f62fd3db2dff4cba307e9baead2f"
        ],
        [
            "apply Hlt.",
            "VernacExtend",
            "b07ea4c51489bd1f1a3ab9521cadeda0ed645275"
        ],
        [
            "exact: lt_O_Sn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: lt_O_Sn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: lt_O_Sn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: lt_O_Sn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: lt_O_Sn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RInt_Reals (f : R -> R) (a b : R) : forall pr, RInt f a b = @RiemannInt f a b pr.",
            "VernacStartTheoremProof",
            "aa397b3f988cd82c1129fa279a191ec5d8c10404"
        ],
        [
            "intros pr.",
            "VernacExtend",
            "7bef946b109ee1bdf0f09752f318f1e57335c8c0"
        ],
        [
            "apply is_RInt_unique.",
            "VernacExtend",
            "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
        ],
        [
            "apply ex_RInt_Reals_aux_1.",
            "VernacExtend",
            "1170b94bd8e351eb3673681f0cebdf075ad31fc4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_RInt_norm : forall (f : R -> R) a b, ex_RInt f a b -> ex_RInt (fun x => norm (f x)) a b.",
            "VernacStartTheoremProof",
            "8be3edd3fed94cee96e1b7af63228bc15012adeb"
        ],
        [
            "intros f a b If.",
            "VernacExtend",
            "79c211bc11498a4a8e56cd39d041b4590a383330"
        ],
        [
            "apply ex_RInt_Reals_1.",
            "VernacExtend",
            "156a2d7e5d7b08cd678bc7c1f27149c419d44841"
        ],
        [
            "apply RiemannInt_P16.",
            "VernacExtend",
            "5c232397c51f346de5ab7bafc943ca21dc8ac54a"
        ],
        [
            "now apply ex_RInt_Reals_0.",
            "VernacExtend",
            "72de9c83c1f8f3c1da5322630ae55c50087f0184"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abs_RInt_le : forall (f : R -> R) a b, a <= b -> ex_RInt f a b -> Rabs (RInt f a b) <= RInt (fun t => Rabs (f t)) a b.",
            "VernacStartTheoremProof",
            "6216d40ca3acaa7f1d6c9fa8d9432db3c5fdc2be"
        ],
        [
            "intros f a b H1 If.",
            "VernacExtend",
            "da24adf7770cb037af19a1ebf74efe591ea73cf2"
        ],
        [
            "apply: (norm_RInt_le f (fun t : R => norm (f t)) a b).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact H1.",
            "VernacExtend",
            "c03ab82d1e411e1dcd211c59917a4946e039be00"
        ],
        [
            "move => x _ ; by apply Rle_refl.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "exact: RInt_correct.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply: RInt_correct.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: ex_RInt_norm.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "is_RInt_point",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros f a.",
                        "VernacExtend",
                        "68506e505aef9fd8d1b888104e16326facad7c42"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_locally.",
                        "VernacExtend",
                        "3ff3a9612e2ccfd2231ba92f1d95cd7277851a18"
                    ]
                },
                {
                    "command": [
                        "move => eps ; exists (mkposreal _ Rlt_0_1) => ptd _ [Hptd [Hh Hl]].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite Riemann_sum_zero.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_zero_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply ball_center.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply ptd_sort.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: Hl Hh ; rewrite /Rmin /Rmax ; by case: Rle_dec (Rle_refl a) => _ _ ->.",
                        "VernacExtend",
                        "9316342455eb51a3e1204d3e55750c03c1806191"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_point",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros f a.",
                        "VernacExtend",
                        "68506e505aef9fd8d1b888104e16326facad7c42"
                    ]
                },
                {
                    "command": [
                        "exists zero ; by apply is_RInt_point.",
                        "VernacExtend",
                        "b918120fdf1c25da749282a357189796df9886c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_RInt_swap",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "unfold is_RInt.",
                        "VernacExtend",
                        "06f6343fbd6b4d42242efeda5e98fcd1112c830c"
                    ]
                },
                {
                    "command": [
                        "intros f a b If HIf.",
                        "VernacExtend",
                        "fa9cd160b25795da17260205bc64f03d4a12042a"
                    ]
                },
                {
                    "command": [
                        "rewrite -scal_opp_one /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun ptd => scal (opp (one : R)) (scal (sign (a - b)) (Riemann_sum f ptd))).",
                        "VernacExtend",
                        "d29b0a2a9b61864511a1427a902c2756bd4d5902"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun s => scal s _)).",
                        "VernacExtend",
                        "4d056efe23084f70c1fa069ee62efd22ea38fc1b"
                    ]
                },
                {
                    "command": [
                        "rewrite /mult /opp /one /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(Ropp_minus_distr' b a) sign_opp /= Ropp_mult_distr_l_reverse Rmult_1_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "unfold Riemann_fine.",
                        "VernacExtend",
                        "92cf17224b82c06754f9262aff9a8ec090d45cd9"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmin_comm Rmax_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (1 := HIf).",
                        "VernacExtend",
                        "cda2c19761fcbdc20ec8266b86fae1fc77a96cdc"
                    ]
                },
                {
                    "command": [
                        "apply: filterlim_scal_r.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_swap",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros f a b.",
                        "VernacExtend",
                        "6f3f174cbf11191c970affca4f2ed17081558a64"
                    ]
                },
                {
                    "command": [
                        "case => If HIf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (opp If).",
                        "VernacExtend",
                        "b6e34294998db212a83307baeb1cbea8290c0208"
                    ]
                },
                {
                    "command": [
                        "now apply is_RInt_swap.",
                        "VernacExtend",
                        "90ccd1b34525fb14c76361fed24822211a464252"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_ext",
            "line_nb": 493,
            "steps": [
                {
                    "command": [
                        "intros f g a b Heq [If Hex].",
                        "VernacExtend",
                        "4a7ed9d166b65a7e87bbe588239d51d59d99f7d3"
                    ]
                },
                {
                    "command": [
                        "exists If.",
                        "VernacExtend",
                        "289047dc7c651d47a5a9a5605cb272ad18884cb9"
                    ]
                },
                {
                    "command": [
                        "revert Hex.",
                        "VernacExtend",
                        "ed2585126c212c5b410b343a5c13bc558129165b"
                    ]
                },
                {
                    "command": [
                        "now apply is_RInt_ext.",
                        "VernacExtend",
                        "2d1ec89f1b194f510d9ab25a28e117b0ae0a05af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_const",
            "line_nb": 510,
            "steps": [
                {
                    "command": [
                        "intros a b v.",
                        "VernacExtend",
                        "0487359be0e958d0db658bf7732976d924962d43"
                    ]
                },
                {
                    "command": [
                        "exists (scal (b - a) v).",
                        "VernacExtend",
                        "20dc2384ad8e5672a4ff2bbf456ecb7f5a98dd96"
                    ]
                },
                {
                    "command": [
                        "apply is_RInt_const.",
                        "VernacExtend",
                        "0b1ddb4a67dc6dd9a159b2d66bf059b0995ba35b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_comp_opp",
            "line_nb": 639,
            "steps": [
                {
                    "command": [
                        "intros f a b [l If].",
                        "VernacExtend",
                        "7da9b2ec00e35f44d4da67da22b9fda07e05e667"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "by apply is_RInt_comp_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_comp_lin",
            "line_nb": 742,
            "steps": [
                {
                    "command": [
                        "case => l Hf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "by apply is_RInt_comp_lin.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_RInt_Chasles_0",
            "line_nb": 747,
            "steps": [
                {
                    "command": [
                        "intros [Hab Hbc] H1 H2.",
                        "VernacExtend",
                        "d68ef2f1c760e0d7b78cc46ed2814af97edf5987"
                    ]
                },
                {
                    "command": [
                        "case: (ex_RInt_ub f a b).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by exists l1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => //= _ _ M1 HM1.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "case: (ex_RInt_ub f b c).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by exists l2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hbc) => //= _ _ M2 HM2.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_locally_ball_norm => eps.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "generalize (proj1 (filterlim_locally_ball_norm _ _) H1 (pos_div_2 (pos_div_2 eps))) => {H1} H1.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "generalize (proj1 (filterlim_locally_ball_norm _ _) H2 (pos_div_2 (pos_div_2 eps))) => {H2} H2.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: H1 => d1 H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: H2 => d2 H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: H1 ; rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hab) => //= _ _ H1.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "move: H2 ; rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ Hbc) => //= _ _ H2.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "have Hd3 : 0 < eps / (4 * ((M1 + 1) + (M2 + 1))).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
                    ]
                },
                {
                    "command": [
                        "by apply eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "repeat apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "fbf27bd9d083b541c05452c398f83000dae05970"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_0_2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_0_2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_0_compat ; apply Rplus_le_lt_0_compat, Rlt_0_1.",
                        "VernacExtend",
                        "87e764825d8e63440f52e2401eb6e1614c56363c"
                    ]
                },
                {
                    "command": [
                        "specialize (HM1 _ (conj (Rle_refl _) (Rlt_le _ _ Hab))).",
                        "VernacExtend",
                        "7aa58aeb6a3046b29e9002d01fa94f93795ad0a8"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := HM1), norm_ge_0.",
                        "VernacExtend",
                        "6b44add16bc73dd6ee22b2c1a321ef895f2c326a"
                    ]
                },
                {
                    "command": [
                        "specialize (HM2 _ (conj (Rle_refl _) (Rlt_le _ _ Hbc))).",
                        "VernacExtend",
                        "8957020b73308c09088ad01ea4db3903706c784e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := HM2), norm_ge_0.",
                        "VernacExtend",
                        "42f9db4688cae84387aa2473d30d98240df641aa"
                    ]
                },
                {
                    "command": [
                        "have Hd : 0 < Rmin (Rmin d1 d2) (mkposreal _ Hd3).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "repeat apply Rmin_case.",
                        "VernacExtend",
                        "2493aa83afccc4ebd9cd6cf176e4f5e0f4e4e4e9"
                    ]
                },
                {
                    "command": [
                        "by apply d1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply d2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hd3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ Hd) => /= ptd Hstep [Hptd [Hh Hl]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move: Hh Hl ; rewrite /Rmin /Rmax ; case: Rle_dec (Rlt_le _ _ (Rlt_trans _ _ _ Hab Hbc)) => //= _ _ Hh Hl.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "rewrite -> sign_eq_1 by now apply Rlt_Rminus, Rlt_trans with b.",
                        "VernacExtend",
                        "8dc6e1f8ae0f807f41ede2f1ba31113b23549279"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_one.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball_norm (double_var eps).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (norm (minus (Riemann_sum f ptd) (plus (Riemann_sum f (SF_cut_down ptd b)) (Riemann_sum f (SF_cut_up ptd b)))) + norm (minus (plus (Riemann_sum f (SF_cut_down ptd b)) (Riemann_sum f (SF_cut_up ptd b))) (plus l1 l2))).",
                        "VernacExtend",
                        "6f6b5b132e57c31455c2b8e63b4a7b1fd3943c3a"
                    ]
                },
                {
                    "command": [
                        "set v:= minus _ (plus l1 l2).",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "replace v with (plus (minus (Riemann_sum f ptd) (plus (Riemann_sum f (SF_cut_down ptd b)) (Riemann_sum f (SF_cut_up ptd b)))) (minus (plus (Riemann_sum f (SF_cut_down ptd b)) (Riemann_sum f (SF_cut_up ptd b))) (plus l1 l2))).",
                        "VernacExtend",
                        "4dbc58d277a2ef2969b5201d3a1f168d2d32fb33"
                    ]
                },
                {
                    "command": [
                        "exact: norm_triangle.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "rewrite /v /minus -plus_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "by rewrite plus_assoc plus_opp_l plus_zero_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat.",
                        "VernacExtend",
                        "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Rmin_r _ _) in Hstep.",
                        "VernacExtend",
                        "1fa6e02a8ff926e14e937b0626332b397ddce09e"
                    ]
                },
                {
                    "command": [
                        "generalize (fun H H0 => Riemann_sum_Chasles_0 f (M1 + 1 + (M2 + 1)) b ptd (mkposreal _ Hd3) H H0 Hptd Hstep).",
                        "VernacExtend",
                        "39d67c55900ee786bdbe3ceddfeb50d21e14b58e"
                    ]
                },
                {
                    "command": [
                        "rewrite /= Hl Hh => H.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "replace (eps / 2) with (2 * (mkposreal _ Hd3) * (M1 + 1 + (M2 + 1))).",
                        "VernacExtend",
                        "f1a1ccc6907f9049ef86ebd4aee2a63b44064d93"
                    ]
                },
                {
                    "command": [
                        "rewrite -norm_opp opp_plus opp_opp plus_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "simpl ; apply H.",
                        "VernacExtend",
                        "3410d91927336a4dd1f499cdd5b70bdccaeed032"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "case: (Rle_lt_dec x b) => Hxb.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (M1 + 1).",
                        "VernacExtend",
                        "38b1595a5960842dd7997c98fd6699570efdb5f9"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with M1.",
                        "VernacExtend",
                        "25a0ba16826f29e4877ed82068f15e8dc905ff92"
                    ]
                },
                {
                    "command": [
                        "apply HM1 ; split.",
                        "VernacExtend",
                        "043a11208a2d6217a6fe56ef04cf225cf09a9142"
                    ]
                },
                {
                    "command": [
                        "by apply Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hxb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; ring_simplify ; by apply Rlt_0_1.",
                        "VernacExtend",
                        "e384eae955b0244fa5ffb15789f2a204a411a7e6"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; ring_simplify.",
                        "VernacExtend",
                        "969fc87537fdaad612d2a1aa70d377f614654753"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_lt_0_compat with (2 := Rlt_0_1).",
                        "VernacExtend",
                        "9c33add5b2c6f81da56aa5a01d10e9c609a51d55"
                    ]
                },
                {
                    "command": [
                        "specialize (HM2 _ (conj (Rle_refl _) (Rlt_le _ _ Hbc))).",
                        "VernacExtend",
                        "8957020b73308c09088ad01ea4db3903706c784e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := HM2), norm_ge_0.",
                        "VernacExtend",
                        "42f9db4688cae84387aa2473d30d98240df641aa"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (M2 + 1).",
                        "VernacExtend",
                        "996f56611e47e45b7df5a2f6d2502808351b92b4"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with M2.",
                        "VernacExtend",
                        "57587167ed54a571530bb84d83544f0a0ba374a9"
                    ]
                },
                {
                    "command": [
                        "apply HM2 ; split.",
                        "VernacExtend",
                        "f18c0a989dc21999606ce95b17ceb5bc5e16d301"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, Hxb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; ring_simplify ; by apply Rlt_0_1.",
                        "VernacExtend",
                        "e384eae955b0244fa5ffb15789f2a204a411a7e6"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; ring_simplify.",
                        "VernacExtend",
                        "969fc87537fdaad612d2a1aa70d377f614654753"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_lt_0_compat with (2 := Rlt_0_1).",
                        "VernacExtend",
                        "9c33add5b2c6f81da56aa5a01d10e9c609a51d55"
                    ]
                },
                {
                    "command": [
                        "specialize (HM1 _ (conj (Rle_refl _) (Rlt_le _ _ Hab))).",
                        "VernacExtend",
                        "7aa58aeb6a3046b29e9002d01fa94f93795ad0a8"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := HM1), norm_ge_0.",
                        "VernacExtend",
                        "6b44add16bc73dd6ee22b2c1a321ef895f2c326a"
                    ]
                },
                {
                    "command": [
                        "split ; by apply Rlt_le.",
                        "VernacExtend",
                        "9c392753fd6384a52f43e9d349afde47af3b3aa5"
                    ]
                },
                {
                    "command": [
                        "simpl ; field.",
                        "VernacExtend",
                        "db84c8cac4d419667c5dc078fea83a0aa7cc0138"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq.",
                        "VernacExtend",
                        "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_0_compat ; apply Rplus_le_lt_0_compat, Rlt_0_1.",
                        "VernacExtend",
                        "87e764825d8e63440f52e2401eb6e1614c56363c"
                    ]
                },
                {
                    "command": [
                        "specialize (HM1 _ (conj (Rle_refl _) (Rlt_le _ _ Hab))).",
                        "VernacExtend",
                        "7aa58aeb6a3046b29e9002d01fa94f93795ad0a8"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := HM1), norm_ge_0.",
                        "VernacExtend",
                        "6b44add16bc73dd6ee22b2c1a321ef895f2c326a"
                    ]
                },
                {
                    "command": [
                        "specialize (HM2 _ (conj (Rle_refl _) (Rlt_le _ _ Hbc))).",
                        "VernacExtend",
                        "8957020b73308c09088ad01ea4db3903706c784e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := HM2), norm_ge_0.",
                        "VernacExtend",
                        "42f9db4688cae84387aa2473d30d98240df641aa"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Rmin_l _ _) in Hstep.",
                        "VernacExtend",
                        "0751436f8fcf8757cad95d1b6fdf95b88de36727"
                    ]
                },
                {
                    "command": [
                        "specialize (H1 (SF_cut_down ptd b)).",
                        "VernacExtend",
                        "ac66b5f5a9a45cce176b9648d4e0cb4c92cd397c"
                    ]
                },
                {
                    "command": [
                        "specialize (H2 (SF_cut_up ptd b)).",
                        "VernacExtend",
                        "6e0e15cc13fecb36bbdad0d94f73120612d5e277"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (norm (minus (scal (sign (b - a)) (Riemann_sum f (SF_cut_down ptd b))) l1) + norm (minus (scal (sign (c - b)) (Riemann_sum f (SF_cut_up ptd b))) l2)).",
                        "VernacExtend",
                        "df861b30abd5f4d3a833735e91080bd8ed51230b"
                    ]
                },
                {
                    "command": [
                        "replace (minus (plus (Riemann_sum f (SF_cut_down ptd b)) (Riemann_sum f (SF_cut_up ptd b))) (plus l1 l2)) with (plus (minus (scal (sign (b - a)) (Riemann_sum f (SF_cut_down ptd b))) l1) (minus (scal (sign (c - b)) (Riemann_sum f (SF_cut_up ptd b))) l2)).",
                        "VernacExtend",
                        "d0188526afe2e01fd7d976481f7247d0a284af4b"
                    ]
                },
                {
                    "command": [
                        "apply @norm_triangle.",
                        "VernacExtend",
                        "85c8761fbfefc33c72371b73f65134f967a6f807"
                    ]
                },
                {
                    "command": [
                        "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
                        "VernacExtend",
                        "fca02487127bf9775753594d7fee9b399ab3dff1"
                    ]
                },
                {
                    "command": [
                        "rewrite -> sign_eq_1 by exact: Rlt_Rminus.",
                        "VernacExtend",
                        "fca02487127bf9775753594d7fee9b399ab3dff1"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!scal_one /minus opp_plus -2!plus_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm -plus_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "by apply plus_comm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (double_var (eps / 2)) ; apply Rplus_lt_compat.",
                        "VernacExtend",
                        "68370f805bb00ad5628efdfec3fb6834ec7a64c7"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "apply SF_cut_down_step.",
                        "VernacExtend",
                        "973883a1d5ba4a4edec0015f398984eec8df635a"
                    ]
                },
                {
                    "command": [
                        "rewrite /= Hl Hh ; split ; by apply Rlt_le.",
                        "VernacExtend",
                        "0c608ac53f2a4ebb8cc2468a3e8df8d5212b3fd3"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le_trans with (1 := Hstep), Rmin_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply SF_cut_down_pointed.",
                        "VernacExtend",
                        "fce44e18b9b2c3c74afa63c3a27d2058af584914"
                    ]
                },
                {
                    "command": [
                        "rewrite Hh ; by apply Rlt_le.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite SF_cut_down_h.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Hh.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hh ; by apply Rlt_le.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "move: (SF_cut_down_l ptd b) => //=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "apply SF_cut_up_step.",
                        "VernacExtend",
                        "b72d33f57f4048474d30bd4a7fae24481a451593"
                    ]
                },
                {
                    "command": [
                        "rewrite /= Hl Hh ; split ; by apply Rlt_le.",
                        "VernacExtend",
                        "0c608ac53f2a4ebb8cc2468a3e8df8d5212b3fd3"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le_trans with (1 := Hstep), Rmin_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply SF_cut_up_pointed.",
                        "VernacExtend",
                        "95c2002006708f715f45fb20af688df294152125"
                    ]
                },
                {
                    "command": [
                        "rewrite Hh ; by apply Rlt_le.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by rewrite SF_cut_up_h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (SF_cut_up_l ptd b) => /= ->.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply Hl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hl ; by apply Rlt_le.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_Chasles_0",
            "line_nb": 868,
            "steps": [
                {
                    "command": [
                        "case => Hab Hbc H1 H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Hab => [ Hab | -> ] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Hbc => [ Hbc | <- ] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: H1 => [l1 H1] ; case: H2 => [l2 H2].",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "exists (plus l1 l2).",
                        "VernacExtend",
                        "dc62b1263389a86dd39ad76510110c9e0b608d7f"
                    ]
                },
                {
                    "command": [
                        "apply is_RInt_Chasles_0 with b ; try assumption.",
                        "VernacExtend",
                        "c6d9d5d53ac0c538865ecb8cff35ec944ad157d5"
                    ]
                },
                {
                    "command": [
                        "by split.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_RInt_Chasles_2",
            "line_nb": 953,
            "steps": [
                {
                    "command": [
                        "intros [Hab Hbc] H1 H2.",
                        "VernacExtend",
                        "d68ef2f1c760e0d7b78cc46ed2814af97edf5987"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Ropp_involutive a) -(Ropp_involutive b) -(Ropp_involutive c) in H1 H2.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_RInt_comp_opp, is_RInt_swap in H1.",
                        "VernacExtend",
                        "362f5167f676c8c2a14ed64c458e194d7dc03841"
                    ]
                },
                {
                    "command": [
                        "apply is_RInt_comp_opp, is_RInt_swap in H2.",
                        "VernacExtend",
                        "4a04768fbb420d9209e3aba8f440335351a7c134"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_contravar in Hab.",
                        "VernacExtend",
                        "25b3d9282486f946b684397fd3c2185bbc478ab5"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_contravar in Hbc.",
                        "VernacExtend",
                        "3d06e4bb7e5a1cb6b907199fa07c206cbe4fcd59"
                    ]
                },
                {
                    "command": [
                        "generalize (is_RInt_Chasles_1 _ _ _ _ _ _ (conj Hbc Hab) H1 H2).",
                        "VernacExtend",
                        "a3f7ef5d81a3a30769d505aa3c3cf0b8029bfc54"
                    ]
                },
                {
                    "command": [
                        "clear => H.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply is_RInt_comp_opp, is_RInt_swap in H.",
                        "VernacExtend",
                        "c90d1202359d1ac70a1bfb35b8d302a5cd9d08fb"
                    ]
                },
                {
                    "command": [
                        "replace (minus l1 l2) with (opp (minus (opp l1) (opp l2))).",
                        "VernacExtend",
                        "fe55fe0e6d1ab6a54407f82b3ae33cf48ef6d986"
                    ]
                },
                {
                    "command": [
                        "move: H ; apply is_RInt_ext.",
                        "VernacExtend",
                        "6ba87b91ed36bd273ea6028505662b85e6ee38a8"
                    ]
                },
                {
                    "command": [
                        "now move => x _ ; rewrite opp_opp Ropp_involutive.",
                        "VernacExtend",
                        "36045468657dbf1c235f83bdd82b3dab5f23c635"
                    ]
                },
                {
                    "command": [
                        "by rewrite /minus opp_plus 2!opp_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_Chasles",
            "line_nb": 1061,
            "steps": [
                {
                    "command": [
                        "intros [l1 H1] [l2 H2].",
                        "VernacExtend",
                        "57bbef9f7d6a9e91a62f910c0a85adc4ee3d46dd"
                    ]
                },
                {
                    "command": [
                        "exists (plus l1 l2).",
                        "VernacExtend",
                        "dc62b1263389a86dd39ad76510110c9e0b608d7f"
                    ]
                },
                {
                    "command": [
                        "by apply is_RInt_Chasles with b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_RInt_scal",
            "line_nb": 1066,
            "steps": [
                {
                    "command": [
                        "intros f a b k If Hf.",
                        "VernacExtend",
                        "af247dd44260d88b943b4819db92ab72366d19fc"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun ptd => scal k (scal (sign (b - a)) (Riemann_sum f ptd))).",
                        "VernacExtend",
                        "42d0f5ee40f828d99f3c65ab62878d543611a6c6"
                    ]
                },
                {
                    "command": [
                        "intros ptd.",
                        "VernacExtend",
                        "a15e6ac8f2219c359da145da8f77015bc183cb25"
                    ]
                },
                {
                    "command": [
                        "rewrite Riemann_sum_scal.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!scal_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun x => scal x _)).",
                        "VernacExtend",
                        "917dc945971ee121b956f0848f6cee6ae19ec91b"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_comm.",
                        "VernacExtend",
                        "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (1 := Hf).",
                        "VernacExtend",
                        "209cf5da6d51c8d7df4d7d409f93566eeae11560"
                    ]
                },
                {
                    "command": [
                        "apply: filterlim_scal_r.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_scal",
            "line_nb": 1077,
            "steps": [
                {
                    "command": [
                        "intros f a b k [If Hf].",
                        "VernacExtend",
                        "84e3bf7594b25a0f0cb6d1314f097b14bae697f4"
                    ]
                },
                {
                    "command": [
                        "exists (scal k If).",
                        "VernacExtend",
                        "282ec9b35a7bad249a26cc98d5d7b639b2403616"
                    ]
                },
                {
                    "command": [
                        "now apply is_RInt_scal.",
                        "VernacExtend",
                        "1ac4cb8c33dbd8178aec024da02e8515b418ddd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_RInt_opp",
            "line_nb": 1082,
            "steps": [
                {
                    "command": [
                        "intros f a b If Hf.",
                        "VernacExtend",
                        "d8904d19bc6482b9b089ff0d30af6899bb2aee91"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun ptd => (scal (opp 1) (scal (sign (b - a)) (Riemann_sum f ptd)))).",
                        "VernacExtend",
                        "9067ea4f46a71bac44e302993b4a32d434d3fa78"
                    ]
                },
                {
                    "command": [
                        "intros ptd.",
                        "VernacExtend",
                        "a15e6ac8f2219c359da145da8f77015bc183cb25"
                    ]
                },
                {
                    "command": [
                        "rewrite Riemann_sum_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_opp_one.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, scal_opp_r.",
                        "VernacExtend",
                        "1e165b9628add2ef384e7b74654aab5ce36727bb"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (1 := Hf).",
                        "VernacExtend",
                        "209cf5da6d51c8d7df4d7d409f93566eeae11560"
                    ]
                },
                {
                    "command": [
                        "rewrite -(scal_opp_one If).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: filterlim_scal_r.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_opp",
            "line_nb": 1093,
            "steps": [
                {
                    "command": [
                        "intros f a b [If Hf].",
                        "VernacExtend",
                        "25283180315704f655ab21982ca1d30bb73af4d5"
                    ]
                },
                {
                    "command": [
                        "exists (opp If).",
                        "VernacExtend",
                        "b6e34294998db212a83307baeb1cbea8290c0208"
                    ]
                },
                {
                    "command": [
                        "now apply is_RInt_opp.",
                        "VernacExtend",
                        "50e812791d898ce12d1bacd49babd6624d888270"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_RInt_plus",
            "line_nb": 1098,
            "steps": [
                {
                    "command": [
                        "intros f g a b If Ig Hf Hg.",
                        "VernacExtend",
                        "16f72297ddea44e0760e1fcd207928d03e1031b4"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun ptd => (plus (scal (sign (b - a)) (Riemann_sum f ptd)) (scal (sign (b - a)) (Riemann_sum g ptd)))).",
                        "VernacExtend",
                        "aeee0acc3f58624763f3a544c13ccde712a8bf43"
                    ]
                },
                {
                    "command": [
                        "intros ptd.",
                        "VernacExtend",
                        "a15e6ac8f2219c359da145da8f77015bc183cb25"
                    ]
                },
                {
                    "command": [
                        "rewrite Riemann_sum_plus.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, @scal_distr_l.",
                        "VernacExtend",
                        "5bcc63ec0ec903fdfd7fe3cce23d9b37860c2d76"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp_2 with (1 := Hf) (2 := Hg).",
                        "VernacExtend",
                        "90f14116174fa2f5c8bba0fb9475ab5a74463bdf"
                    ]
                },
                {
                    "command": [
                        "apply: filterlim_plus.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_plus",
            "line_nb": 1107,
            "steps": [
                {
                    "command": [
                        "intros f g a b [If Hf] [Ig Hg].",
                        "VernacExtend",
                        "5c851d5936a781ec09ccb189f129c394e9805509"
                    ]
                },
                {
                    "command": [
                        "exists (plus If Ig).",
                        "VernacExtend",
                        "625f87977f8b903225ac4060408068a4ab91fd3f"
                    ]
                },
                {
                    "command": [
                        "now apply is_RInt_plus.",
                        "VernacExtend",
                        "323152cdbc67baee4ed2d5904f51ee7f45ac38dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_minus",
            "line_nb": 1127,
            "steps": [
                {
                    "command": [
                        "intros f g a b [If Hf] [Ig Hg].",
                        "VernacExtend",
                        "5c851d5936a781ec09ccb189f129c394e9805509"
                    ]
                },
                {
                    "command": [
                        "exists (minus If Ig).",
                        "VernacExtend",
                        "ea7b9fc93b5c77cc4b5325b866d308de2b74e79a"
                    ]
                },
                {
                    "command": [
                        "now apply is_RInt_minus.",
                        "VernacExtend",
                        "225eab513980d389b7a3ee5b1a6eaf3468419baf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_inside",
            "line_nb": 1215,
            "steps": [
                {
                    "command": [
                        "intros f a b x e Hf Ha Hb.",
                        "VernacExtend",
                        "4f882ab0bc75f8ed1e6c0628ca3ca34063478f40"
                    ]
                },
                {
                    "command": [
                        "wlog: a b Ha Hb / (a <= b) => [Hw | Hab].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt a b); intros H.",
                        "VernacExtend",
                        "c9ec44647471b13a3ec080d83c62e0a1ee107cc0"
                    ]
                },
                {
                    "command": [
                        "now apply Hw.",
                        "VernacExtend",
                        "2ed5659bd12b3902c98ca802731515ab0621d5cf"
                    ]
                },
                {
                    "command": [
                        "apply ex_RInt_swap.",
                        "VernacExtend",
                        "89c0ce32c33068aab97da96f72c393050e6d66fd"
                    ]
                },
                {
                    "command": [
                        "apply Hw; try easy.",
                        "VernacExtend",
                        "274a67644227ce167473890f2b29696edce94a39"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "apply (ex_RInt_Chasles_1 f a b) with (x+e).",
                        "VernacExtend",
                        "30da1166ad6ddcecfad9a7e9450eeab4e869b0c0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact Hab.",
                        "VernacExtend",
                        "f3d0f5752a150a91e25c080a5fc3ae0ed192bc4f"
                    ]
                },
                {
                    "command": [
                        "assert (x-e <= b <= x+e) by now apply Rabs_le_between'.",
                        "VernacExtend",
                        "8a2822433879bb998d98eb9c4d2a999f2e2dd049"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply ex_RInt_Chasles_2 with (x-e).",
                        "VernacExtend",
                        "65150dc79ad7ce0b392a896d1fabb56dc303f518"
                    ]
                },
                {
                    "command": [
                        "now apply Rabs_le_between'.",
                        "VernacExtend",
                        "1d4657e8b7b1811ac5b690fde586e513cf7b67dc"
                    ]
                },
                {
                    "command": [
                        "exact Hf.",
                        "VernacExtend",
                        "e25e6849230bea1fb4d4eb83c79000be517c04a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_RInt_SF",
            "line_nb": 1336,
            "steps": [
                {
                    "command": [
                        "apply SF_cons_ind with (s := s) => {s} [ x0 | x0 s IH] Hsort a b.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite Riemann_sum_zero //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply is_RInt_point.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Riemann_sum_cons.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_RInt_Chasles with (SF_h s).",
                        "VernacExtend",
                        "6d3000a684b7bb950bb3bcc355f2b4a90e44870c"
                    ]
                },
                {
                    "command": [
                        "move: (proj1 Hsort) ; unfold a ; clear IH Hsort a b ; simpl => Hab.",
                        "VernacExtend",
                        "9dc59dd3b86fb4ce7a807cd43c1b47717165d5d5"
                    ]
                },
                {
                    "command": [
                        "eapply is_RInt_ext, is_RInt_const.",
                        "VernacExtend",
                        "e3f577cfdc22cd177b7b00c6fce898442f4051da"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmin /Rmax ; case: Rle_dec => // _ x Hx.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "unfold SF_fun ; simpl.",
                        "VernacExtend",
                        "7d550aecebede3ed84f88fe697d51a71d4179bf7"
                    ]
                },
                {
                    "command": [
                        "case: Rlt_dec => //= H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "contradict H ; apply Rle_not_lt, Rlt_le, Hx.",
                        "VernacExtend",
                        "6a4d48262a9a1f8371c60aa31f259931cfb6e674"
                    ]
                },
                {
                    "command": [
                        "move: Hab Hx ; apply SF_cons_dec with (s := s) => {s} /= [x1 | x1 s] Hab Hx.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rlt_le _ _ (proj2 Hx)) => //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rlt_dec (proj2 Hx) => //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply is_RInt_ext, IH.",
                        "VernacExtend",
                        "648002d30618f241dfdb2ac46402499c22c602b2"
                    ]
                },
                {
                    "command": [
                        "clear a IH.",
                        "VernacExtend",
                        "0c5503dedb3a94f4d658146e10080e8fda2cb7cc"
                    ]
                },
                {
                    "command": [
                        "revert b ; simpl.",
                        "VernacExtend",
                        "3f215c098b7c4cd270e46009394336e8ee3d936b"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rmin /Rmax ; case: Rle_dec => // Hab x Hx.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite /SF_fun /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Rlt_dec => /= Hx0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "contradict Hx0.",
                        "VernacExtend",
                        "ee37c8a39e119865a14ea707ef84d51e6c42b16e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt.",
                        "VernacExtend",
                        "1f0f6b47a7d49626d97b2585f7610e291096035d"
                    ]
                },
                {
                    "command": [
                        "eapply Rle_trans, Rlt_le, Hx.",
                        "VernacExtend",
                        "1b6bfd4cd2e64d87438e03c7fda1e656eb034844"
                    ]
                },
                {
                    "command": [
                        "by apply Hsort.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: Hab Hx Hsort ; apply SF_cons_dec with (s := s) => {s} [x1 | x1 s] //= Hab Hx Hsort.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "case: Hx => H H'.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "contradict H' ; by apply Rle_not_lt, Rlt_le.",
                        "VernacExtend",
                        "43042460e42a309a80e4a8fb22aeca4a030c3671"
                    ]
                },
                {
                    "command": [
                        "case: Rlt_dec => //= H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "contradict H ; by apply Rle_not_lt, Rlt_le, Hx.",
                        "VernacExtend",
                        "3c26dcba9e578f112cb42e360e20b3fb78a8b9cf"
                    ]
                },
                {
                    "command": [
                        "contradict Hab.",
                        "VernacExtend",
                        "d531e774813f18ac4f672077f0bb7af0e9083a7d"
                    ]
                },
                {
                    "command": [
                        "apply (sorted_last ((SF_h s) :: (unzip1 (SF_t s))) O (proj2 Hsort) (lt_O_Sn _) (SF_h s)).",
                        "VernacExtend",
                        "c3c798b5932e36146cc5be847fc833432e68b073"
                    ]
                },
                {
                    "command": [
                        "by apply Hsort.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_RInt_le_const",
            "line_nb": 1681,
            "steps": [
                {
                    "command": [
                        "intros f a b lf M Hab H Hf.",
                        "VernacExtend",
                        "360f3370ff7732094afbcd52e81fca36cdce3172"
                    ]
                },
                {
                    "command": [
                        "apply norm_RInt_le with (1 := Hab) (2 := H) (3 := Hf).",
                        "VernacExtend",
                        "6a837c3cde32ffcea19818caa12c6212a3f2a89e"
                    ]
                },
                {
                    "command": [
                        "apply: is_RInt_const.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_RInt_le_const_abs",
            "line_nb": 1686,
            "steps": [
                {
                    "command": [
                        "intros f a b lf M H Hf.",
                        "VernacExtend",
                        "568d0f538dde2e5336845b74d92568ce1605d051"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs.",
                        "VernacExtend",
                        "32b62f5465b04c4380fa7a8bf154e157fb296719"
                    ]
                },
                {
                    "command": [
                        "case Rcase_abs => Hab.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt in Hab.",
                        "VernacExtend",
                        "498e0af65c436199945ad80928e3bc063aec9d5b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_minus_distr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_RInt_swap in Hf.",
                        "VernacExtend",
                        "d4cd1ce950d1228e40be6732892eedd62c5f8bd4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- norm_opp.",
                        "VernacExtend",
                        "688e5e408d03458837b7145146c92cd2b97487f4"
                    ]
                },
                {
                    "command": [
                        "apply norm_RInt_le_const with (3 := Hf).",
                        "VernacExtend",
                        "dca32d60911e001ac9ad576f972bc66b44897cb4"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "now rewrite -> Rmin_right, Rmax_left by now apply Rlt_le.",
                        "VernacExtend",
                        "a586550e24cd77c0a43fb91e44b59cd732b85532"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_ge in Hab.",
                        "VernacExtend",
                        "917acffa7e82b6b7596937784709a8b502b0d6fa"
                    ]
                },
                {
                    "command": [
                        "apply Rge_le in Hab.",
                        "VernacExtend",
                        "c5109c3a58e59d3e1ffe5532a094091411fb23cb"
                    ]
                },
                {
                    "command": [
                        "apply norm_RInt_le_const with (1 := Hab) (3 := Hf).",
                        "VernacExtend",
                        "c92656e7480fefed81901a78ebe991de31862a2c"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "now rewrite -> Rmin_left, Rmax_right.",
                        "VernacExtend",
                        "74485de7b7e2031a3653323785b836a7b02d5470"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_RInt_fct_extend_fst",
            "line_nb": 1709,
            "steps": [
                {
                    "command": [
                        "intros Hf P [eP HP].",
                        "VernacExtend",
                        "91c89d4fd628da0bb6ebba92564a827cdb9123a0"
                    ]
                },
                {
                    "command": [
                        "destruct (Hf (fun u : U * V => P (fst u))) as [ef Hf'].",
                        "VernacExtend",
                        "ed6e519df32df2df51a72dc54fd79906dcd1dbc9"
                    ]
                },
                {
                    "command": [
                        "exists eP => y Hy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply HP.",
                        "VernacExtend",
                        "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
                    ]
                },
                {
                    "command": [
                        "apply Hy.",
                        "VernacExtend",
                        "80f07477a1dd0a8c39407b7d0aa65b768d8a6d0b"
                    ]
                },
                {
                    "command": [
                        "exists ef => y H1 H2.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "replace (Riemann_sum (fun t : R => fst (f t)) y) with (fst (Riemann_sum f y)).",
                        "VernacExtend",
                        "0b9c3a783cbf4a0b5f05a66123e1aeedfad8a265"
                    ]
                },
                {
                    "command": [
                        "by apply Hf'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "apply SF_cons_ind with (s := y) => {y} [x0 | [x1 y0] y IH].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite /Riemann_sum /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ?Riemann_sum_cons /= IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_RInt_fct_extend_snd",
            "line_nb": 1723,
            "steps": [
                {
                    "command": [
                        "intros Hf P [eP HP].",
                        "VernacExtend",
                        "91c89d4fd628da0bb6ebba92564a827cdb9123a0"
                    ]
                },
                {
                    "command": [
                        "destruct (Hf (fun u : U * V => P (snd u))) as [ef Hf'].",
                        "VernacExtend",
                        "4677521e81196b7c0eebde55133a76cdb78c3259"
                    ]
                },
                {
                    "command": [
                        "exists eP => y Hy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply HP.",
                        "VernacExtend",
                        "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
                    ]
                },
                {
                    "command": [
                        "apply Hy.",
                        "VernacExtend",
                        "80f07477a1dd0a8c39407b7d0aa65b768d8a6d0b"
                    ]
                },
                {
                    "command": [
                        "exists ef => y H1 H2.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "replace (Riemann_sum (fun t : R => snd (f t)) y) with (snd (Riemann_sum f y)).",
                        "VernacExtend",
                        "6ae2c6cda2421915d4bded8e87c004e84aa0d41d"
                    ]
                },
                {
                    "command": [
                        "by apply Hf'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "apply SF_cons_ind with (s := y) => {y} [x0 | [x1 y0] y IH].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite /Riemann_sum /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ?Riemann_sum_cons /= IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_RInt_fct_extend_pair",
            "line_nb": 1737,
            "steps": [
                {
                    "command": [
                        "move => H1 H2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_locally => eps.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "generalize (proj1 (filterlim_locally _ _) H1 eps) => {H1} ; intros [d1 H1].",
                        "VernacExtend",
                        "b6fc4cdfed6345215376d4b20794c8416dcd71a4"
                    ]
                },
                {
                    "command": [
                        "generalize (proj1 (filterlim_locally _ _) H2 eps) => {H2} ; intros [d2 H2].",
                        "VernacExtend",
                        "0b76ee98eb329a469291e19601d389a9f4613045"
                    ]
                },
                {
                    "command": [
                        "simpl in H1, H2.",
                        "VernacExtend",
                        "ae044167b9c10bc3a51d1a9967e6758b4481a4a1"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ (Rmin_stable_in_posreal d1 d2)) => /= ptd Hstep Hptd.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite (Riemann_sum_pair f ptd) ; simpl.",
                        "VernacExtend",
                        "098b55457c4818143077b1c537d807f1600477c2"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply H1 => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le_trans with (2 := Rmin_l d1 d2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply H2 => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le_trans with (2 := Rmin_r d1 d2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_fct_extend_fst",
            "line_nb": 1751,
            "steps": [
                {
                    "command": [
                        "intros [l Hl].",
                        "VernacExtend",
                        "e57b129728f1404a6b858b17bad3620408feae13"
                    ]
                },
                {
                    "command": [
                        "exists (fst l).",
                        "VernacExtend",
                        "4be23b6402bebef0cf65f280c3e0aa6c4bd95868"
                    ]
                },
                {
                    "command": [
                        "by apply is_RInt_fct_extend_fst.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_fct_extend_snd",
            "line_nb": 1756,
            "steps": [
                {
                    "command": [
                        "intros [l Hl].",
                        "VernacExtend",
                        "e57b129728f1404a6b858b17bad3620408feae13"
                    ]
                },
                {
                    "command": [
                        "exists (snd l).",
                        "VernacExtend",
                        "042092fdbaecdd77755b1eef203bfd399fe6cc36"
                    ]
                },
                {
                    "command": [
                        "by apply is_RInt_fct_extend_snd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_fct_extend_pair",
            "line_nb": 1761,
            "steps": [
                {
                    "command": [
                        "move => [l1 H1] [l2 H2].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (l1,l2).",
                        "VernacExtend",
                        "43cfec2c2e1e0f1e928321f0789a967cb416382f"
                    ]
                },
                {
                    "command": [
                        "by apply is_RInt_fct_extend_pair.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RInt_fct_extend_pair",
            "line_nb": 1766,
            "steps": [
                {
                    "command": [
                        "intros HU HV f a b l Hf.",
                        "VernacExtend",
                        "05f08b655dbd0d7977d5cc5e5660a98fc093d0c7"
                    ]
                },
                {
                    "command": [
                        "apply injective_projections ; simpl.",
                        "VernacExtend",
                        "a29cc8f4966e828577843e7892e5291a3c2a57a7"
                    ]
                },
                {
                    "command": [
                        "apply HU ; by apply is_RInt_fct_extend_fst.",
                        "VernacExtend",
                        "fba0b20a6f008c830945df2b25296f55a5e390f5"
                    ]
                },
                {
                    "command": [
                        "apply HV ; by apply is_RInt_fct_extend_snd.",
                        "VernacExtend",
                        "b0f2a9e262c5ee2c47a10a1d3816691222111fba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_RInt_unique",
            "line_nb": 1776,
            "steps": [
                {
                    "command": [
                        "apply iota_filterlim_locally.",
                        "VernacExtend",
                        "036a6608cdeb171499483642282e22c18d7d6976"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RInt_correct",
            "line_nb": 1779,
            "steps": [
                {
                    "command": [
                        "intros [If HIf].",
                        "VernacExtend",
                        "ff28d60bc88a49319e8176bdff27fccd91ef2300"
                    ]
                },
                {
                    "command": [
                        "erewrite is_RInt_unique ; exact HIf.",
                        "VernacExtend",
                        "fed8767803c032f33d11b10613331ef5e80e94d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RInt_ext",
            "line_nb": 1790,
            "steps": [
                {
                    "command": [
                        "intros Hfg.",
                        "VernacExtend",
                        "1d828439a906ddbbe5d5759ad4b679b9213dc106"
                    ]
                },
                {
                    "command": [
                        "apply eq_close.",
                        "VernacExtend",
                        "0709fabb64bf0c7032812f7540a92f4ea3d7b26d"
                    ]
                },
                {
                    "command": [
                        "apply: close_iota ; split ; apply is_RInt_ext.",
                        "VernacExtend",
                        "eb4da8d9a56624b0f2ef773a8051dd06cb680d34"
                    ]
                },
                {
                    "command": [
                        "exact Hfg.",
                        "VernacExtend",
                        "41211937fb7246de4dd2bd369d52a3257cfdbe66"
                    ]
                },
                {
                    "command": [
                        "intros t Ht.",
                        "VernacExtend",
                        "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
                    ]
                },
                {
                    "command": [
                        "now apply sym_eq, Hfg.",
                        "VernacExtend",
                        "c2965ded3917ca0aec655925b4df8e1e96fc1925"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RInt_point",
            "line_nb": 1798,
            "steps": [
                {
                    "command": [
                        "apply is_RInt_unique.",
                        "VernacExtend",
                        "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
                    ]
                },
                {
                    "command": [
                        "exact: is_RInt_point.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RInt_const",
            "line_nb": 1802,
            "steps": [
                {
                    "command": [
                        "apply is_RInt_unique.",
                        "VernacExtend",
                        "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
                    ]
                },
                {
                    "command": [
                        "exact: is_RInt_const.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RInt_Chasles",
            "line_nb": 1812,
            "steps": [
                {
                    "command": [
                        "intros f a b c H1 H2.",
                        "VernacExtend",
                        "798e2964fb1583624b7045b12ede978fb92efe88"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, is_RInt_unique.",
                        "VernacExtend",
                        "86c83224718f4f32403768ac62929921f412303d"
                    ]
                },
                {
                    "command": [
                        "apply: is_RInt_Chasles ; now apply RInt_correct.",
                        "VernacExtend",
                        "f43aa43d70327c10f96eeae7280392e28fdeed50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RInt_plus",
            "line_nb": 1829,
            "steps": [
                {
                    "command": [
                        "intros f g a b Hf Hg.",
                        "VernacExtend",
                        "b03342365ff196da067c09cfdd98ae23d8d6a1e6"
                    ]
                },
                {
                    "command": [
                        "apply is_RInt_unique.",
                        "VernacExtend",
                        "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
                    ]
                },
                {
                    "command": [
                        "apply: is_RInt_plus ; now apply RInt_correct.",
                        "VernacExtend",
                        "f43aa43d70327c10f96eeae7280392e28fdeed50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RInt_minus",
            "line_nb": 1834,
            "steps": [
                {
                    "command": [
                        "intros f g a b Hf Hg.",
                        "VernacExtend",
                        "b03342365ff196da067c09cfdd98ae23d8d6a1e6"
                    ]
                },
                {
                    "command": [
                        "apply is_RInt_unique.",
                        "VernacExtend",
                        "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
                    ]
                },
                {
                    "command": [
                        "apply: is_RInt_minus ; now apply RInt_correct.",
                        "VernacExtend",
                        "f43aa43d70327c10f96eeae7280392e28fdeed50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_RInt_ge_0",
            "line_nb": 1840,
            "steps": [
                {
                    "command": [
                        "intros Hab HIf Hf.",
                        "VernacExtend",
                        "7ce9dc8b23270b42cf82a1bbc6e5e5857b99277d"
                    ]
                },
                {
                    "command": [
                        "set (f' := fun x => if Rle_dec x a then 0 else if Rle_dec b x then 0 else f x).",
                        "VernacExtend",
                        "b6ec528e779147a9f551f361dfc34072018eb860"
                    ]
                },
                {
                    "command": [
                        "apply is_RInt_ext with (g := f') in HIf.",
                        "VernacExtend",
                        "103cd60995353eb82ccfb25c3244676781343398"
                    ]
                },
                {
                    "command": [
                        "apply closed_filterlim_loc with (1 := HIf) (3 := closed_ge 0).",
                        "VernacExtend",
                        "8b6afb485e5eeb43b746885c8ce8e9fab2b65015"
                    ]
                },
                {
                    "command": [
                        "unfold Riemann_fine, within.",
                        "VernacExtend",
                        "a8938c9c8285080ebba6315e8f767801610f378d"
                    ]
                },
                {
                    "command": [
                        "apply filter_forall.",
                        "VernacExtend",
                        "8c32dc4f52f30e2c1af34a6c3ce57fe2d3feab75"
                    ]
                },
                {
                    "command": [
                        "intros ptd Hptd.",
                        "VernacExtend",
                        "302a60e535ea972ec6747b449f232837b7830d2e"
                    ]
                },
                {
                    "command": [
                        "replace 0 with (scal (sign (b - a)) (Riemann_sum (fun _ => 0) ptd)).",
                        "VernacExtend",
                        "45ad6207c013eb7e66e4ce60a164635aab017316"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "apply sign_ge_0.",
                        "VernacExtend",
                        "5378aa842441b00da7af367a845010f891d32e16"
                    ]
                },
                {
                    "command": [
                        "now apply Rge_le, Rge_minus, Rle_ge.",
                        "VernacExtend",
                        "23cdfaaed13f11ab3f6f2e2ed2fc37babf3865bd"
                    ]
                },
                {
                    "command": [
                        "apply Riemann_sum_le.",
                        "VernacExtend",
                        "040591a44294ff63991bb6377534e285a53d0783"
                    ]
                },
                {
                    "command": [
                        "apply Hptd.",
                        "VernacExtend",
                        "642b5b4e030170e900507553551a629877fed957"
                    ]
                },
                {
                    "command": [
                        "intros t _.",
                        "VernacExtend",
                        "d1fd05346a070a90b76a5589b4607b767bbbeb6f"
                    ]
                },
                {
                    "command": [
                        "unfold f'.",
                        "VernacExtend",
                        "d5030c9006a9df78825d4b9238ed86129ec6a957"
                    ]
                },
                {
                    "command": [
                        "case Rle_dec as [H1|H1].",
                        "VernacExtend",
                        "a13be68c970f56a897812cfd1c31bc4e77a3d03c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "case Rle_dec as [H2|H2].",
                        "VernacExtend",
                        "e1fb9650d2e744d1441d0a6420fad99b5a7075af"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "apply Hf.",
                        "VernacExtend",
                        "44e8b4102d20ba355038f72fc52240fc6cb8650c"
                    ]
                },
                {
                    "command": [
                        "now split; apply Rnot_le_lt.",
                        "VernacExtend",
                        "987c864efd9f6a8c00f8e1de5bc3fad543cc4e0c"
                    ]
                },
                {
                    "command": [
                        "rewrite Riemann_sum_const.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !scal_zero_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmin_left _ _ Hab) (Rmax_right _ _ Hab).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "unfold f'.",
                        "VernacExtend",
                        "d5030c9006a9df78825d4b9238ed86129ec6a957"
                    ]
                },
                {
                    "command": [
                        "case Rle_dec as [H1|H1].",
                        "VernacExtend",
                        "a13be68c970f56a897812cfd1c31bc4e77a3d03c"
                    ]
                },
                {
                    "command": [
                        "now elim (Rle_not_lt _ _ H1).",
                        "VernacExtend",
                        "28d00179bac65d52c853e05f1c6e0e112e97235a"
                    ]
                },
                {
                    "command": [
                        "case Rle_dec as [H2|H2].",
                        "VernacExtend",
                        "e1fb9650d2e744d1441d0a6420fad99b5a7075af"
                    ]
                },
                {
                    "command": [
                        "now elim (Rle_not_lt _ _ H2).",
                        "VernacExtend",
                        "16534de2b5dde3a62e0c015860cafc11fec07592"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RInt_ge_0",
            "line_nb": 1873,
            "steps": [
                {
                    "command": [
                        "intros Hab Hf Hpos.",
                        "VernacExtend",
                        "d50101ba3b1b68ceb6ba353a2a7712632ee9392a"
                    ]
                },
                {
                    "command": [
                        "apply: is_RInt_ge_0 Hab _ Hpos.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "exact: RInt_correct.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RInt_le",
            "line_nb": 1887,
            "steps": [
                {
                    "command": [
                        "intros Hab Hf Hg Hfg.",
                        "VernacExtend",
                        "607222431d3fce7296b1fd3e9464a16423b28d86"
                    ]
                },
                {
                    "command": [
                        "apply: is_RInt_le Hab _ _ Hfg.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "exact: RInt_correct.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "exact: RInt_correct.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RInt_lt",
            "line_nb": 1993,
            "steps": [
                {
                    "command": [
                        "intros Hab Cg Cf Hfg.",
                        "VernacExtend",
                        "6d39b5481172a634483821ebecd57f1e21250a0d"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0.",
                        "VernacExtend",
                        "266ec80c870ca91ace5efd2beddab25e945c4342"
                    ]
                },
                {
                    "command": [
                        "assert (Ig : ex_RInt g a b).",
                        "VernacExtend",
                        "d6d915e1fa2755345860144ce6dc66028170305f"
                    ]
                },
                {
                    "command": [
                        "apply @ex_RInt_continuous.",
                        "VernacExtend",
                        "805e429c528bf81c611e1ac7a45cee4163d3dc54"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmin_left.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmax_right.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now apply Cg.",
                        "VernacExtend",
                        "69636881cf47f16eaa668d76de3c4bee2813fe96"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "assert (ex_RInt f a b).",
                        "VernacExtend",
                        "45b755b1d90798ec22287b16b20e1a070029af7f"
                    ]
                },
                {
                    "command": [
                        "apply @ex_RInt_continuous.",
                        "VernacExtend",
                        "805e429c528bf81c611e1ac7a45cee4163d3dc54"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmin_left.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmax_right.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now apply Cf.",
                        "VernacExtend",
                        "8b2a93b9c540e05419f8d9aafc9391eadc576c23"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -[Rminus]/(@minus R_AbelianGroup) -RInt_minus //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply RInt_gt_0 => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "now intros ; apply -> Rminus_lt_0 ; apply Hfg.",
                        "VernacExtend",
                        "e2768033b17eb8bfdb248ce7ba9b89d3c266b3c1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply @continuous_minus.",
                        "VernacExtend",
                        "fe5e5907f865ddbd9467c08df0599c2babd1c10c"
                    ]
                },
                {
                    "command": [
                        "by apply Cg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Cf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_Reals_1",
            "line_nb": 2858,
            "steps": [
                {
                    "command": [
                        "move => pr ; exists (RiemannInt pr).",
                        "VernacExtend",
                        "ba13dd07a2b0306678d4fd6a29398a2fc74356d5"
                    ]
                },
                {
                    "command": [
                        "exact: ex_RInt_Reals_aux_1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RInt_Reals",
            "line_nb": 3734,
            "steps": [
                {
                    "command": [
                        "intros pr.",
                        "VernacExtend",
                        "7bef946b109ee1bdf0f09752f318f1e57335c8c0"
                    ]
                },
                {
                    "command": [
                        "apply is_RInt_unique.",
                        "VernacExtend",
                        "55e1fce943ed6f8cd8f81129591b491bbb38c55d"
                    ]
                },
                {
                    "command": [
                        "apply ex_RInt_Reals_aux_1.",
                        "VernacExtend",
                        "1170b94bd8e351eb3673681f0cebdf075ad31fc4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_RInt_norm",
            "line_nb": 3739,
            "steps": [
                {
                    "command": [
                        "intros f a b If.",
                        "VernacExtend",
                        "79c211bc11498a4a8e56cd39d041b4590a383330"
                    ]
                },
                {
                    "command": [
                        "apply ex_RInt_Reals_1.",
                        "VernacExtend",
                        "156a2d7e5d7b08cd678bc7c1f27149c419d44841"
                    ]
                },
                {
                    "command": [
                        "apply RiemannInt_P16.",
                        "VernacExtend",
                        "5c232397c51f346de5ab7bafc943ca21dc8ac54a"
                    ]
                },
                {
                    "command": [
                        "now apply ex_RInt_Reals_0.",
                        "VernacExtend",
                        "72de9c83c1f8f3c1da5322630ae55c50087f0184"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}