{
    "filename": "theories/Compactness.v",
    "coq_project": "coquelicot",
    "vernac_cmds": [
        [
            "Require Import Reals.",
            "VernacRequire",
            "45681fd6487015ca7aa8c8e9b408e40e3103ca14"
        ],
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import Rcomplements.",
            "VernacRequire",
            "6092419151bd74aa7f83ac953c7ed042021bf7ad"
        ],
        [
            "Open Scope R_scope.",
            "VernacOpenCloseScope",
            "e9e2b017da79049aff27c5418fe22258c29a75e7"
        ],
        [
            "Lemma completeness_any : forall P : R -> Prop, ( forall x y, x <= y -> P y -> P x ) -> forall He : (exists x, P x), forall Hb : (bound P), forall x, x < proj1_sig (completeness _ Hb He) -> ~ ~ P x.",
            "VernacStartTheoremProof",
            "03c8a77539006afe44cecd4f11d2723d108e0f97"
        ],
        [
            "intros P HP He Hb x.",
            "VernacExtend",
            "00b5b30746e9b4e05f0133d8570373dff27589e9"
        ],
        [
            "case completeness => y [Hy1 Hy2] /= Hxy Px.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_not_lt with (2 := Hxy).",
            "VernacExtend",
            "26df89fa908f28b507f156e10918864a6e1270ce"
        ],
        [
            "apply Hy2 => t Pt.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rnot_lt_le => Hxt.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Px.",
            "VernacExtend",
            "7856e2c10caeb9477280bdc03c055ead021a17e3"
        ],
        [
            "apply: HP Pt.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma false_not_not : forall P Q : Prop, (P -> ~Q) -> (~~P -> ~Q).",
            "VernacStartTheoremProof",
            "dfd344d47a3b19ab8da36624ff0fa4769181939a"
        ],
        [
            "intros P Q H HP HQ.",
            "VernacExtend",
            "229b7d8716c35bcc7500b242c4510e8feea39e1f"
        ],
        [
            "apply HP.",
            "VernacExtend",
            "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
        ],
        [
            "intros H'.",
            "VernacExtend",
            "d7903418c9c01fda86d2cc847b39424719d50154"
        ],
        [
            "now apply H.",
            "VernacExtend",
            "e28edffe226486c29d50d204164561fb199b8c97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Compactness.",
            "VernacBeginSection",
            "83f5ba25122d4ff2f9f610cc915eaa2593f4cf87"
        ],
        [
            "Fixpoint Tn n T : Type := match n with | O => unit | S n => (T * Tn n T)%type end.",
            "VernacFixpoint",
            "9c18ec39b4a96db463ba9dc57ffaf3790df4634b"
        ],
        [
            "Fixpoint bounded_n n : Tn n R -> Tn n R -> Tn n R -> Prop := match n return Tn n R -> Tn n R -> Tn n R -> Prop with | O => fun a b x : Tn O R => True | S n => fun a b x : Tn (S n) R => let '(a1,a2) := a in let '(b1,b2) := b in let '(x1,x2) := x in a1 <= x1 <= b1 /\\ bounded_n n a2 b2 x2 end.",
            "VernacFixpoint",
            "63f3840b9e7e425ef79a4c99c7afae5850fb0bcb"
        ],
        [
            "Fixpoint close_n n d : Tn n R -> Tn n R -> Prop := match n return Tn n R -> Tn n R -> Prop with | O => fun x t : Tn O R => True | S n => fun x t : Tn (S n) R => let '(x1,x2) := x in let '(t1,t2) := t in Rabs (x1 - t1) < d /\\ close_n n d x2 t2 end.",
            "VernacFixpoint",
            "957a92d346fbda35d871d6a8bdbd8ae4bcb212fd"
        ],
        [
            "Lemma compactness_list : forall n a b (delta : Tn n R -> posreal), ~~ exists l, forall x, bounded_n n a b x -> exists t, In t l /\\ bounded_n n a b t /\\ close_n n (delta t) x t.",
            "VernacStartTheoremProof",
            "ae0a7c6b677603ca3347f7f9b5e93b19b0f2a26c"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "intros a b delta.",
            "VernacExtend",
            "82dc48a5654d6afc4a46c7c32cdffbfbcfd50814"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "exists (tt :: nil).",
            "VernacExtend",
            "e40ace24423941aa1834d7e78723a1b970fcac89"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "exists tt.",
            "VernacExtend",
            "639e33b302b52977945fb6b9a759f7856096b141"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros (a,a') (b,b') delta.",
            "VernacExtend",
            "754c702273bf20fdba5c55af3b2bd0cb12af4563"
        ],
        [
            "destruct (Rlt_le_dec b a) as [Hab|Hab].",
            "VernacExtend",
            "f20602a71a5f75fe573c13a47d896f31b422a31b"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "exists nil.",
            "VernacExtend",
            "847d8d4ad29a6619a1a271a81b4b6128a169751f"
        ],
        [
            "intros (x,x') (Hx,_).",
            "VernacExtend",
            "a81b164a321156f8f3f804765d397d8d1775a2d2"
        ],
        [
            "elim (Rlt_irrefl a).",
            "VernacExtend",
            "5c5dd0539fe3eed95de5f4fe8c9cb8c1c6a725ee"
        ],
        [
            "apply Rle_lt_trans with (2 := Hab).",
            "VernacExtend",
            "87a900e3810f0085925d1f1c1fb768d080e0d738"
        ],
        [
            "now apply Rle_trans with x.",
            "VernacExtend",
            "381907d0581fe6251ec6925f400def12cb378dd8"
        ],
        [
            "set (P y := y <= b /\\ ~~exists l, forall x, bounded_n (S n) (a,a') (y,b') x -> exists t, In t l /\\ bounded_n (S n) (a,a') (b,b') t /\\ close_n (S n) (delta t) x t).",
            "VernacExtend",
            "8ccc7d0db14dee63c1eea0dc750e14738f28ae45"
        ],
        [
            "assert (P1': P a).",
            "VernacExtend",
            "f72594f228242e0debbd6072db53c3176f670387"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Hab.",
            "VernacExtend",
            "c308a650ed7a30bacb9ff3d65aa0dd3cb21cb89b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "specialize (IHn a' b' (fun x' => delta (a,x'))).",
            "VernacExtend",
            "e6775a5c58cf6b7ce4c455d662d0ceaf6c690ca6"
        ],
        [
            "contradict IHn.",
            "VernacExtend",
            "7db6f3b8835e7a6499ab68abf7284a51843d74f6"
        ],
        [
            "contradict IHn.",
            "VernacExtend",
            "7db6f3b8835e7a6499ab68abf7284a51843d74f6"
        ],
        [
            "destruct IHn as (l,Hl).",
            "VernacExtend",
            "37f37c90fb50c554b833b7290148d8398bd456bd"
        ],
        [
            "exists (fold_right (fun x' acc => (a,x')::acc) nil l).",
            "VernacExtend",
            "b5b00f2d9ab9e45162f76d65cb8eae4948461f3c"
        ],
        [
            "intros (x,x') (Hx,Hx').",
            "VernacExtend",
            "fc9ef247c6f3c3a01fde76514c765e1ccb28a65d"
        ],
        [
            "replace x with a by now apply Rle_antisym.",
            "VernacExtend",
            "26a7fb4eaf78893765d319a1ee580f479c33274e"
        ],
        [
            "destruct (Hl x' Hx') as (t',(Ht1,Ht2)).",
            "VernacExtend",
            "df3f1412ed46ad35e9aca5b59e55a414fa524e9c"
        ],
        [
            "exists (a,t').",
            "VernacExtend",
            "e0e172ea64f14acfa448aa990fab99a28a2e38d4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "clear -Ht1.",
            "VernacExtend",
            "bbc871ca66a279cac1af2bccbeb7d736cef723ce"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl in Ht1 |- *.",
            "VernacExtend",
            "3d7ac02ce4e77beaf9a590b38df04a8cbb11eedc"
        ],
        [
            "destruct Ht1 as [Ht1|Ht1].",
            "VernacExtend",
            "80813ffa62ede2b8a6aef6dba0a3a180311292ad"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "now apply f_equal2.",
            "VernacExtend",
            "fd8b7073ddc65b7d9e76f5b599484af9bca5fe1a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "now apply IHl.",
            "VernacExtend",
            "3fc417997870147ed2c9600b1a2f8a7a33be8f4a"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "exact Hab.",
            "VernacExtend",
            "f3d0f5752a150a91e25c080a5fc3ae0ed192bc4f"
        ],
        [
            "apply Ht2.",
            "VernacExtend",
            "c63cdd12629ec0018d770dcdd04711bb5c373c8f"
        ],
        [
            "rewrite /Rminus Rplus_opp_r Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Ht2.",
            "VernacExtend",
            "c63cdd12629ec0018d770dcdd04711bb5c373c8f"
        ],
        [
            "assert (P2: bound P).",
            "VernacExtend",
            "7f8201522db2050a62761d8790d58826990a8419"
        ],
        [
            "exists b => y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Hy.",
            "VernacExtend",
            "80f07477a1dd0a8c39407b7d0aa65b768d8a6d0b"
        ],
        [
            "assert (P3: forall x y, x <= y -> P y -> P x).",
            "VernacExtend",
            "88e32cf60f3b2005377c7538976d451463e3f301"
        ],
        [
            "intros x y Hxy (Py1,Py2).",
            "VernacExtend",
            "e27063f7525ec5cb7357cf0f6e1510689293d76f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply Rle_trans with y.",
            "VernacExtend",
            "ef0c28938bef7690962e60fbc863c598d4fb1394"
        ],
        [
            "contradict Py2.",
            "VernacExtend",
            "3cfcd3aa4288d5d99378e9f4b378fc3668280119"
        ],
        [
            "contradict Py2.",
            "VernacExtend",
            "3cfcd3aa4288d5d99378e9f4b378fc3668280119"
        ],
        [
            "destruct Py2 as (l,Py2).",
            "VernacExtend",
            "b93252fab34e226c537dc9062ba158094eef73de"
        ],
        [
            "exists l => [[z z']] Hz.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Py2.",
            "VernacExtend",
            "22033d70af12a762e46e25d4de48696a36b80f49"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Hz.",
            "VernacExtend",
            "71cdd6a47391f832f50fda29a195d5f7934a633c"
        ],
        [
            "now apply Rle_trans with (1 := proj2 (proj1 Hz)).",
            "VernacExtend",
            "34f47286e7302ceca974c8e770294ac1ba831c35"
        ],
        [
            "apply Hz.",
            "VernacExtend",
            "71cdd6a47391f832f50fda29a195d5f7934a633c"
        ],
        [
            "assert (P1: exists x, P x).",
            "VernacExtend",
            "79478b9b7c2a0a319aff69148f7fe6bf8e6c2500"
        ],
        [
            "now exists a.",
            "VernacExtend",
            "543185bfde82207d58537ccd8917a16d29655aae"
        ],
        [
            "set (y := proj1_sig (completeness _ P2 P1)).",
            "VernacExtend",
            "8e02d0b6970b2a11ca8da0da0e0a33d1d6ceda89"
        ],
        [
            "assert (P4: ~~exists d : posreal, P (Rmin b (y + d))).",
            "VernacExtend",
            "684db3dfaad1c81da7da33b4beac1bd244e06844"
        ],
        [
            "specialize (IHn a' b' (fun x' => delta (y,x'))).",
            "VernacExtend",
            "b4379e939229223d867cab5ad7a9c4d985f56af3"
        ],
        [
            "contradict IHn.",
            "VernacExtend",
            "7db6f3b8835e7a6499ab68abf7284a51843d74f6"
        ],
        [
            "contradict IHn.",
            "VernacExtend",
            "7db6f3b8835e7a6499ab68abf7284a51843d74f6"
        ],
        [
            "destruct IHn as (l, Hl).",
            "VernacExtend",
            "37f37c90fb50c554b833b7290148d8398bd456bd"
        ],
        [
            "set (d := fold_right (fun t acc => mkposreal _ (Rmin_stable_in_posreal (delta (y,t)) acc)) (mkposreal _ Rlt_0_1) l).",
            "VernacExtend",
            "c2a947b76feac6c65ca78ee9b557c2f03c93c810"
        ],
        [
            "assert (Hd: 0 < d/2).",
            "VernacExtend",
            "9af6d3acad4cf2bbe2b2211fdaa03f51a4591d15"
        ],
        [
            "apply Fourier_util.Rlt_mult_inv_pos.",
            "VernacExtend",
            "15838fc1e5b6e4085ab824d30e8ab5f4e68b2f10"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Rlt_R0_R2.",
            "VernacExtend",
            "56f346f7d456ea9d1535a96ac932a1c35a8ac229"
        ],
        [
            "exists (mkposreal _ Hd).",
            "VernacExtend",
            "bbf8ce3911148514706fcf55d920882adabf82b8"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rmin_l.",
            "VernacExtend",
            "19942458506c6b3427aea84d1ee7179f00e19f1c"
        ],
        [
            "refine (_ (completeness_any _ P3 P1 P2 (y - d) _)).",
            "VernacExtend",
            "30819fde9721c2cc3cf3029700d7ccbb8b70847a"
        ],
        [
            "intros Hy.",
            "VernacExtend",
            "dde1f3a11f7e3e65a050aa4d13dc38c854979033"
        ],
        [
            "apply: false_not_not Hy => Hy.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "destruct Hy as (Hy1,Hy2).",
            "VernacExtend",
            "4c333db28b104caab4dee67e2e0ffee3560363dc"
        ],
        [
            "apply: false_not_not Hy2 => Hy2.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply.",
            "VernacExtend",
            "34478a74ad5500dd9adb1e3c1f8d65111f36f8e8"
        ],
        [
            "destruct Hy2 as (l',Hl').",
            "VernacExtend",
            "736ecc5166f7ccf8b9b9ba30bf5d0d2edee9591c"
        ],
        [
            "exists (app (fold_right (fun x' acc => (y,x')::acc) nil l) l').",
            "VernacExtend",
            "4e0aa9fb5903d59a5202f60d1d886f2dfd79cf04"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros (x,x') (Hx,Hx').",
            "VernacExtend",
            "fc9ef247c6f3c3a01fde76514c765e1ccb28a65d"
        ],
        [
            "destruct (Rle_or_lt x (y - d)) as [Hxy|Hxy].",
            "VernacExtend",
            "699b71d4e617821ba14b9cd061a416ca254d9103"
        ],
        [
            "destruct (Hl' (x,x') (conj (conj (proj1 Hx) Hxy) Hx')) as (t,(Ht1,Ht2)).",
            "VernacExtend",
            "cf275bbfd3f2c2a93fec3c916b7cf59a0c167658"
        ],
        [
            "exists t.",
            "VernacExtend",
            "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "exact Ht2.",
            "VernacExtend",
            "b166c42da7ef0cb23ddc56c444af588132fb4a09"
        ],
        [
            "destruct (Hl x' Hx') as (t',(Ht1,Ht2)).",
            "VernacExtend",
            "df3f1412ed46ad35e9aca5b59e55a414fa524e9c"
        ],
        [
            "exists (y, t').",
            "VernacExtend",
            "2f663cf734bfefa65c7ea6ca698ffb4cd71e0ad6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "clear -Ht1.",
            "VernacExtend",
            "bbc871ca66a279cac1af2bccbeb7d736cef723ce"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl in Ht1 |- *.",
            "VernacExtend",
            "3d7ac02ce4e77beaf9a590b38df04a8cbb11eedc"
        ],
        [
            "destruct Ht1 as [Ht1|Ht1].",
            "VernacExtend",
            "80813ffa62ede2b8a6aef6dba0a3a180311292ad"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "now apply f_equal2.",
            "VernacExtend",
            "fd8b7073ddc65b7d9e76f5b599484af9bca5fe1a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "now apply IHl.",
            "VernacExtend",
            "3fc417997870147ed2c9600b1a2f8a7a33be8f4a"
        ],
        [
            "do 2 split.",
            "VernacExtend",
            "eb0cf5b49aa01c8dd26593d3c4ebd232a13fce4c"
        ],
        [
            "unfold y.",
            "VernacExtend",
            "29a8f7868cdd745151dd20abb7f3c232bfc6cb70"
        ],
        [
            "case completeness => /= z [Hz1 Hz2].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply Hz1.",
            "VernacExtend",
            "60713feb54a41e6ed116ab9920d90f24eeb55383"
        ],
        [
            "apply Hz2.",
            "VernacExtend",
            "01bed73a419d8b94ce1d9b5ead3d06d35dad8ab4"
        ],
        [
            "intros w Hw.",
            "VernacExtend",
            "7cbb68a59f8350d4c3d1b9ec69abf3efae782e21"
        ],
        [
            "apply Hw.",
            "VernacExtend",
            "8a661025dc679026191beb09fb44e1db1e042d6a"
        ],
        [
            "apply Ht2.",
            "VernacExtend",
            "c63cdd12629ec0018d770dcdd04711bb5c373c8f"
        ],
        [
            "apply Rlt_le_trans with d.",
            "VernacExtend",
            "b52ff55bef9ad5addb1fecdf2400d126e9411b24"
        ],
        [
            "apply Rabs_def1.",
            "VernacExtend",
            "1ac2b969bbf5e41161bd7a3c24a781c485dfb615"
        ],
        [
            "apply Rplus_lt_reg_r with y.",
            "VernacExtend",
            "1969a74bc1a6b1cd70c4bb05b1a7538f4d8f074f"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "apply Rle_lt_trans with (y + d/2).",
            "VernacExtend",
            "116ad5777616a58a3028c4575889735d99f83559"
        ],
        [
            "now apply Rle_trans with (2 := Rmin_r b _).",
            "VernacExtend",
            "346e0568059c90fec4b1403a6e25386c9790cba8"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "rewrite -(Rplus_0_r (d/2)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite {2}(double_var d).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply Rplus_lt_compat_l.",
            "VernacExtend",
            "3bd4c5b4b87c1bf314aa40391ee053f817c7bc6d"
        ],
        [
            "apply Rplus_lt_reg_l with y.",
            "VernacExtend",
            "89ad4ced1daa63a533089fe92e0d5ecc3cf8824f"
        ],
        [
            "now ring_simplify (y + (x - y)).",
            "VernacExtend",
            "c8fbb8646b89c7ec9866a03ead6fa13bc0a799bd"
        ],
        [
            "clearbody y.",
            "VernacExtend",
            "11ffc52c6d9a112388123c8dce04bcbe03cf95e0"
        ],
        [
            "clear -Ht1.",
            "VernacExtend",
            "bbc871ca66a279cac1af2bccbeb7d736cef723ce"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl in Ht1.",
            "VernacExtend",
            "60c3fa16214acf1453df59cd1b4534c75d232bdc"
        ],
        [
            "destruct Ht1 as [Ht1|Ht1].",
            "VernacExtend",
            "80813ffa62ede2b8a6aef6dba0a3a180311292ad"
        ],
        [
            "rewrite -Ht1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: Rmin_l.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "unfold d.",
            "VernacExtend",
            "76098dd1c777f09ddbb61e803c51b93547ecc2dd"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Rle_trans with (1 := Rmin_r _ _).",
            "VernacExtend",
            "e5ff800d1b0f9c0b825e26d998126d4b213f8095"
        ],
        [
            "now apply IHl.",
            "VernacExtend",
            "3fc417997870147ed2c9600b1a2f8a7a33be8f4a"
        ],
        [
            "apply Ht2.",
            "VernacExtend",
            "c63cdd12629ec0018d770dcdd04711bb5c373c8f"
        ],
        [
            "fold y.",
            "VernacExtend",
            "abaf125d94ffd7a302bd0bf3738a40bdf102cdd9"
        ],
        [
            "rewrite -{2}(Rplus_0_r y) -Ropp_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply: false_not_not P4 => P4.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "destruct P4 as (d,P4).",
            "VernacExtend",
            "e0ccd41c484bd6ee8c7b6289d979ec717f49f6d3"
        ],
        [
            "destruct (Rle_or_lt b y) as [Hby|Hby].",
            "VernacExtend",
            "5e171000aca743b1a86f462ce971f5d2256a68fe"
        ],
        [
            "rewrite Rmin_left in P4.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply P4.",
            "VernacExtend",
            "2840ccefab8d597e779d0718123e2642ede9eb1b"
        ],
        [
            "rewrite -(Rplus_0_r b).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat with (1 := Hby).",
            "VernacExtend",
            "0d0c3f08ea31c5d06622c6d524186ec27b8ca829"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "unfold y in *.",
            "VernacExtend",
            "076df2deaca6df90bba99d911ca63fd58603fc2a"
        ],
        [
            "clear y.",
            "VernacExtend",
            "511d70a5a7a86a9e4066c9ba3b5a692ac0b32d83"
        ],
        [
            "revert P4 Hby.",
            "VernacExtend",
            "3f3b66e1e1f4802793d4405ea0a9c06baa52ae08"
        ],
        [
            "case completeness => /= y [Hy1 Hy2] P4 Hby.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_not_lt with (1 := Hy1 (Rmin b (y + d)) P4).",
            "VernacExtend",
            "1dee67373e3a7a9830f0e0f7bd591c8aec28fcbd"
        ],
        [
            "apply Rmin_case.",
            "VernacExtend",
            "06bee284b3ab9229517272cc3728705bdc7b95ba"
        ],
        [
            "exact Hby.",
            "VernacExtend",
            "9591c8a7b9e91b9d0d0694cd862fcaa0ede582af"
        ],
        [
            "rewrite -{1}(Rplus_0_r y).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compactness_value : forall n a b (delta : Tn n R -> posreal), { d : posreal | forall x, bounded_n n a b x -> ~~ exists t, bounded_n n a b t /\\ close_n n (delta t) x t /\\ d <= delta t }.",
            "VernacStartTheoremProof",
            "12e438729f747323a7d98951721e7236196ee873"
        ],
        [
            "intros n a b delta.",
            "VernacExtend",
            "91311adbac751751c8fa18d12fcb673d75d01d7c"
        ],
        [
            "set (P d := d <= 1 /\\ forall x, bounded_n n a b x -> exists t, bounded_n n a b t /\\ close_n n (delta t) x t /\\ d <= delta t).",
            "VernacExtend",
            "8baf8341f3e3590663039efe5a5ad3dc23e9d218"
        ],
        [
            "assert (P1 : exists d, P d).",
            "VernacExtend",
            "8102af1ffbee37383a1685012b20547212f39842"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_0_1.",
            "VernacExtend",
            "996937b485ab0b0ab64abfd08ec0786445ae12e3"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact Hx.",
            "VernacExtend",
            "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "destruct x as (x,x').",
            "VernacExtend",
            "ea72694b3274f2965ee148352f07514a59909f82"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite /Rminus Rplus_opp_r Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply (IHn (fun x' => delta (x,x'))).",
            "VernacExtend",
            "f34a5d80d69f6028c116d911ad85e858fedc23ec"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "assert (P2 : bound P).",
            "VernacExtend",
            "7f8201522db2050a62761d8790d58826990a8419"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "now intros d (Hd,_).",
            "VernacExtend",
            "60694a413ab93d50f13a08387a007e62eda5ced9"
        ],
        [
            "set (d := completeness P P2 P1).",
            "VernacExtend",
            "4199f1e971385ac233d3456032c7b48297320900"
        ],
        [
            "assert (P3 : 0 < proj1_sig d).",
            "VernacExtend",
            "a8d7de963799e90038add1012d1f6c5d621257a8"
        ],
        [
            "revert d.",
            "VernacExtend",
            "3cd0655037ebae3d30e13bf8826a0b6955fb7080"
        ],
        [
            "case completeness.",
            "VernacExtend",
            "7cd6c5cae7a24c101b7ae94b8b49c75405561a30"
        ],
        [
            "intros d (Hd1,Hd2).",
            "VernacExtend",
            "075277914ad201063c4cb624d6c6b656fc37acc1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Rnot_le_lt.",
            "VernacExtend",
            "b6f8b57a60bfd6845f42e4c68c9a5305f4b60dd7"
        ],
        [
            "intros Hd3.",
            "VernacExtend",
            "fdf5540b15ab9aadb747f98edacb12e049a40788"
        ],
        [
            "apply (compactness_list n a b delta).",
            "VernacExtend",
            "381fe5aad6b92ce9c55209d3806f3b71f83c98e0"
        ],
        [
            "intros (l,Hl).",
            "VernacExtend",
            "2bd31ac56eb5573734dcd556f8f6f258628c0e15"
        ],
        [
            "set (v := fold_right (fun t acc => mkposreal _ (Rmin_stable_in_posreal (delta t) acc)) (mkposreal _ Rlt_0_1) l).",
            "VernacExtend",
            "dc4fdcc13894eb631ab3da26a5f78c4586b52bae"
        ],
        [
            "apply (Rlt_not_le _ _ (cond_pos v)).",
            "VernacExtend",
            "1146554d1887f138a864b956f2b6ee453df465df"
        ],
        [
            "apply Rle_trans with (2 := Hd3).",
            "VernacExtend",
            "163e72a01ea83078622794087f53e9ccbb02ed65"
        ],
        [
            "apply Hd1.",
            "VernacExtend",
            "61da7cd36190808e34f602a40abf52062d20b1e7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold v.",
            "VernacExtend",
            "dd01bfef1ec7e9ca0e58bc815f93a1cd7c22ac51"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Rle_trans with (2 := IHl).",
            "VernacExtend",
            "3570d47d4318d752486e0f3cdf6570fbb2c3eab7"
        ],
        [
            "apply Rmin_r.",
            "VernacExtend",
            "d165954e4d055817b42cbc8960efd3fee45e4f16"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "destruct (Hl x Hx) as (t,(Ht1,Ht2)).",
            "VernacExtend",
            "d0357ccebbec01ddda3e3a686a6e9d3f6c60c0de"
        ],
        [
            "exists t.",
            "VernacExtend",
            "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Ht2.",
            "VernacExtend",
            "c63cdd12629ec0018d770dcdd04711bb5c373c8f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Ht2.",
            "VernacExtend",
            "c63cdd12629ec0018d770dcdd04711bb5c373c8f"
        ],
        [
            "clear -Ht1.",
            "VernacExtend",
            "bbc871ca66a279cac1af2bccbeb7d736cef723ce"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl in Ht1.",
            "VernacExtend",
            "60c3fa16214acf1453df59cd1b4534c75d232bdc"
        ],
        [
            "destruct Ht1 as [Ht1|Ht1].",
            "VernacExtend",
            "80813ffa62ede2b8a6aef6dba0a3a180311292ad"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Ht1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmin_l.",
            "VernacExtend",
            "19942458506c6b3427aea84d1ee7179f00e19f1c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eapply Rle_trans with (1 := Rmin_r _ _).",
            "VernacExtend",
            "31a1dd39a3ff14bfa3920984834547d0d386aef2"
        ],
        [
            "now apply IHl.",
            "VernacExtend",
            "3fc417997870147ed2c9600b1a2f8a7a33be8f4a"
        ],
        [
            "exists (mkposreal _ (Fourier_util.Rlt_mult_inv_pos _ _ P3 Rlt_R0_R2)).",
            "VernacExtend",
            "f3d9fd1c3890f5e47667d75753eb31ee48e855c0"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "refine (_ (completeness_any P _ P1 P2 (proj1_sig d / 2) _)).",
            "VernacExtend",
            "602ac42e7e37f558125ec15e5f17950d00ae8c87"
        ],
        [
            "intros HP.",
            "VernacExtend",
            "0ec01adecbfe701ee27244a41ef8fa3cd51b55e4"
        ],
        [
            "contradict HP.",
            "VernacExtend",
            "d186909e87cec954a14f42ce3537bf7f0789c397"
        ],
        [
            "contradict HP.",
            "VernacExtend",
            "d186909e87cec954a14f42ce3537bf7f0789c397"
        ],
        [
            "destruct HP as (_,HP).",
            "VernacExtend",
            "ad576fc394026159d596cbddb9ade3fa09ab321e"
        ],
        [
            "now apply HP.",
            "VernacExtend",
            "1dbf37580193a0b3ad1359912189144857e883cb"
        ],
        [
            "intros u v Huv (Pv1,Pv2).",
            "VernacExtend",
            "405232d37c92812a256a10146657cf2b58c7e3ac"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply Rle_trans with v.",
            "VernacExtend",
            "b0b32110e4735c781f96712eae7917e5b218b5fd"
        ],
        [
            "intros z Hz.",
            "VernacExtend",
            "4248c0300130ba18200d4779d5d54ab29d4b84b6"
        ],
        [
            "destruct (Pv2 z Hz) as (t,Ht).",
            "VernacExtend",
            "619c6bd45fa7c3a473e0cf5fbe79e93b6d2dc510"
        ],
        [
            "exists t.",
            "VernacExtend",
            "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Ht.",
            "VernacExtend",
            "3d48a1d94ba28df584299891c553d27a6a6c227e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Ht.",
            "VernacExtend",
            "3d48a1d94ba28df584299891c553d27a6a6c227e"
        ],
        [
            "apply Rle_trans with (1 := Huv).",
            "VernacExtend",
            "a80dfcd9a92fadb114a08e1341f3874826a62a12"
        ],
        [
            "apply Ht.",
            "VernacExtend",
            "3d48a1d94ba28df584299891c553d27a6a6c227e"
        ],
        [
            "fold d.",
            "VernacExtend",
            "5eaff88183703fbe67e3fe4c12f5818c2b7486c9"
        ],
        [
            "rewrite -(Rplus_0_r (proj1_sig d / 2)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite {2}(double_var (proj1_sig d)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Fourier_util.Rlt_mult_inv_pos.",
            "VernacExtend",
            "15838fc1e5b6e4085ab824d30e8ab5f4e68b2f10"
        ],
        [
            "exact P3.",
            "VernacExtend",
            "a5a7b0fedd332413227c4222a4bbd0a64b03a89f"
        ],
        [
            "apply Rlt_R0_R2.",
            "VernacExtend",
            "56f346f7d456ea9d1535a96ac932a1c35a8ac229"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Compactness.",
            "VernacEndSegment",
            "934266ae3a3665fe4c256518c650d9049bf98e2f"
        ],
        [
            "Lemma compactness_value_1d : forall a b (delta : R -> posreal), { d : posreal | forall x, a <= x <= b -> ~~ exists t, a <= t <= b /\\ Rabs (x - t) < delta t /\\ d <= delta t }.",
            "VernacStartTheoremProof",
            "0f329085636e40053029b7e4ea5dcd3509f1dd77"
        ],
        [
            "intros a b delta.",
            "VernacExtend",
            "82dc48a5654d6afc4a46c7c32cdffbfbcfd50814"
        ],
        [
            "destruct (compactness_value 1 (a,tt) (b,tt) (fun t => let '(t,_) := t in delta t)) as (d, Hd).",
            "VernacExtend",
            "ff4fac3dc5eae0e717f54572fc2731368fbb558b"
        ],
        [
            "exists d.",
            "VernacExtend",
            "39cea21d4e04fa9463f57be4e5a423277681d456"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "specialize (Hd (x,tt) (conj Hx I)).",
            "VernacExtend",
            "5de770695ed07387e0415bcde8abcd62d8169cbd"
        ],
        [
            "do 2 contradict Hd.",
            "VernacExtend",
            "3ffd14fda756161eba6946bcebb015d322f3dc16"
        ],
        [
            "destruct Hd as ((t,t'),Ht).",
            "VernacExtend",
            "0b413807a6a23430103a46aabd22b684fc6673d5"
        ],
        [
            "exists t.",
            "VernacExtend",
            "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
        ],
        [
            "repeat split ; apply Ht.",
            "VernacExtend",
            "dbf189878c3d7ac525f2ad2c690d2fe9a3731cbe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compactness_value_2d : forall a b a' b' (delta : R -> R -> posreal), { d : posreal | forall x y, a <= x <= b -> a' <= y <= b' -> ~~ exists u, exists v, a <= u <= b /\\ a' <= v <= b' /\\ Rabs (x - u) < delta u v /\\ Rabs (y - v) < delta u v /\\ d <= delta u v }.",
            "VernacStartTheoremProof",
            "19f30e559b479bab1eb522f768c921397d901745"
        ],
        [
            "intros a b a' b' delta.",
            "VernacExtend",
            "28d54fdba0f3dba659f0cc0d60632f159dd00698"
        ],
        [
            "destruct (compactness_value 2 (a,(a',tt)) (b,(b',tt)) (fun t => let '(u,(v,_)) := t in delta u v)) as (d, Hd).",
            "VernacExtend",
            "13e17cb2578913b62f2ad6b7ec4c3ec9a50026c6"
        ],
        [
            "exists d.",
            "VernacExtend",
            "39cea21d4e04fa9463f57be4e5a423277681d456"
        ],
        [
            "intros x y Hx Hy.",
            "VernacExtend",
            "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
        ],
        [
            "specialize (Hd (x,(y,tt)) (conj Hx (conj Hy I))).",
            "VernacExtend",
            "dbd6a5855ce4c4ff3f1f7354ac086a35e6a49853"
        ],
        [
            "do 2 contradict Hd.",
            "VernacExtend",
            "3ffd14fda756161eba6946bcebb015d322f3dc16"
        ],
        [
            "destruct Hd as ((u,(v,w)),Ht).",
            "VernacExtend",
            "022daabbf5095f2d59b238bf1855e3a3693b9e5b"
        ],
        [
            "exists u.",
            "VernacExtend",
            "2af7d32a2a88e37a4d44700a22dfcddd239848b3"
        ],
        [
            "exists v.",
            "VernacExtend",
            "07e9a3324bfa0e7b5dc708d0101cf063e8084497"
        ],
        [
            "simpl in Ht.",
            "VernacExtend",
            "f3647f468667e683097b7de90a7362183d8a63fa"
        ],
        [
            "repeat split ; apply Ht.",
            "VernacExtend",
            "dbf189878c3d7ac525f2ad2c690d2fe9a3731cbe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "completeness_any",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros P HP He Hb x.",
                        "VernacExtend",
                        "00b5b30746e9b4e05f0133d8570373dff27589e9"
                    ]
                },
                {
                    "command": [
                        "case completeness => y [Hy1 Hy2] /= Hxy Px.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (2 := Hxy).",
                        "VernacExtend",
                        "26df89fa908f28b507f156e10918864a6e1270ce"
                    ]
                },
                {
                    "command": [
                        "apply Hy2 => t Pt.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le => Hxt.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Px.",
                        "VernacExtend",
                        "7856e2c10caeb9477280bdc03c055ead021a17e3"
                    ]
                },
                {
                    "command": [
                        "apply: HP Pt.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "false_not_not",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros P Q H HP HQ.",
                        "VernacExtend",
                        "229b7d8716c35bcc7500b242c4510e8feea39e1f"
                    ]
                },
                {
                    "command": [
                        "apply HP.",
                        "VernacExtend",
                        "ca37aebd7e8ae00878bfd4cba5592ae8e97d86d9"
                    ]
                },
                {
                    "command": [
                        "intros H'.",
                        "VernacExtend",
                        "d7903418c9c01fda86d2cc847b39424719d50154"
                    ]
                },
                {
                    "command": [
                        "now apply H.",
                        "VernacExtend",
                        "e28edffe226486c29d50d204164561fb199b8c97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compactness_list",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "intros a b delta.",
                        "VernacExtend",
                        "82dc48a5654d6afc4a46c7c32cdffbfbcfd50814"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "exists (tt :: nil).",
                        "VernacExtend",
                        "e40ace24423941aa1834d7e78723a1b970fcac89"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "exists tt.",
                        "VernacExtend",
                        "639e33b302b52977945fb6b9a759f7856096b141"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros (a,a') (b,b') delta.",
                        "VernacExtend",
                        "754c702273bf20fdba5c55af3b2bd0cb12af4563"
                    ]
                },
                {
                    "command": [
                        "destruct (Rlt_le_dec b a) as [Hab|Hab].",
                        "VernacExtend",
                        "f20602a71a5f75fe573c13a47d896f31b422a31b"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "exists nil.",
                        "VernacExtend",
                        "847d8d4ad29a6619a1a271a81b4b6128a169751f"
                    ]
                },
                {
                    "command": [
                        "intros (x,x') (Hx,_).",
                        "VernacExtend",
                        "a81b164a321156f8f3f804765d397d8d1775a2d2"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl a).",
                        "VernacExtend",
                        "5c5dd0539fe3eed95de5f4fe8c9cb8c1c6a725ee"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := Hab).",
                        "VernacExtend",
                        "87a900e3810f0085925d1f1c1fb768d080e0d738"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_trans with x.",
                        "VernacExtend",
                        "381907d0581fe6251ec6925f400def12cb378dd8"
                    ]
                },
                {
                    "command": [
                        "set (P y := y <= b /\\ ~~exists l, forall x, bounded_n (S n) (a,a') (y,b') x -> exists t, In t l /\\ bounded_n (S n) (a,a') (b,b') t /\\ close_n (S n) (delta t) x t).",
                        "VernacExtend",
                        "8ccc7d0db14dee63c1eea0dc750e14738f28ae45"
                    ]
                },
                {
                    "command": [
                        "assert (P1': P a).",
                        "VernacExtend",
                        "f72594f228242e0debbd6072db53c3176f670387"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Hab.",
                        "VernacExtend",
                        "c308a650ed7a30bacb9ff3d65aa0dd3cb21cb89b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "specialize (IHn a' b' (fun x' => delta (a,x'))).",
                        "VernacExtend",
                        "e6775a5c58cf6b7ce4c455d662d0ceaf6c690ca6"
                    ]
                },
                {
                    "command": [
                        "contradict IHn.",
                        "VernacExtend",
                        "7db6f3b8835e7a6499ab68abf7284a51843d74f6"
                    ]
                },
                {
                    "command": [
                        "contradict IHn.",
                        "VernacExtend",
                        "7db6f3b8835e7a6499ab68abf7284a51843d74f6"
                    ]
                },
                {
                    "command": [
                        "destruct IHn as (l,Hl).",
                        "VernacExtend",
                        "37f37c90fb50c554b833b7290148d8398bd456bd"
                    ]
                },
                {
                    "command": [
                        "exists (fold_right (fun x' acc => (a,x')::acc) nil l).",
                        "VernacExtend",
                        "b5b00f2d9ab9e45162f76d65cb8eae4948461f3c"
                    ]
                },
                {
                    "command": [
                        "intros (x,x') (Hx,Hx').",
                        "VernacExtend",
                        "fc9ef247c6f3c3a01fde76514c765e1ccb28a65d"
                    ]
                },
                {
                    "command": [
                        "replace x with a by now apply Rle_antisym.",
                        "VernacExtend",
                        "26a7fb4eaf78893765d319a1ee580f479c33274e"
                    ]
                },
                {
                    "command": [
                        "destruct (Hl x' Hx') as (t',(Ht1,Ht2)).",
                        "VernacExtend",
                        "df3f1412ed46ad35e9aca5b59e55a414fa524e9c"
                    ]
                },
                {
                    "command": [
                        "exists (a,t').",
                        "VernacExtend",
                        "e0e172ea64f14acfa448aa990fab99a28a2e38d4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "clear -Ht1.",
                        "VernacExtend",
                        "bbc871ca66a279cac1af2bccbeb7d736cef723ce"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "simpl in Ht1 |- *.",
                        "VernacExtend",
                        "3d7ac02ce4e77beaf9a590b38df04a8cbb11eedc"
                    ]
                },
                {
                    "command": [
                        "destruct Ht1 as [Ht1|Ht1].",
                        "VernacExtend",
                        "80813ffa62ede2b8a6aef6dba0a3a180311292ad"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "now apply f_equal2.",
                        "VernacExtend",
                        "fd8b7073ddc65b7d9e76f5b599484af9bca5fe1a"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "now apply IHl.",
                        "VernacExtend",
                        "3fc417997870147ed2c9600b1a2f8a7a33be8f4a"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "exact Hab.",
                        "VernacExtend",
                        "f3d0f5752a150a91e25c080a5fc3ae0ed192bc4f"
                    ]
                },
                {
                    "command": [
                        "apply Ht2.",
                        "VernacExtend",
                        "c63cdd12629ec0018d770dcdd04711bb5c373c8f"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rminus Rplus_opp_r Rabs_R0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "apply Ht2.",
                        "VernacExtend",
                        "c63cdd12629ec0018d770dcdd04711bb5c373c8f"
                    ]
                },
                {
                    "command": [
                        "assert (P2: bound P).",
                        "VernacExtend",
                        "7f8201522db2050a62761d8790d58826990a8419"
                    ]
                },
                {
                    "command": [
                        "exists b => y Hy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Hy.",
                        "VernacExtend",
                        "80f07477a1dd0a8c39407b7d0aa65b768d8a6d0b"
                    ]
                },
                {
                    "command": [
                        "assert (P3: forall x y, x <= y -> P y -> P x).",
                        "VernacExtend",
                        "88e32cf60f3b2005377c7538976d451463e3f301"
                    ]
                },
                {
                    "command": [
                        "intros x y Hxy (Py1,Py2).",
                        "VernacExtend",
                        "e27063f7525ec5cb7357cf0f6e1510689293d76f"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_trans with y.",
                        "VernacExtend",
                        "ef0c28938bef7690962e60fbc863c598d4fb1394"
                    ]
                },
                {
                    "command": [
                        "contradict Py2.",
                        "VernacExtend",
                        "3cfcd3aa4288d5d99378e9f4b378fc3668280119"
                    ]
                },
                {
                    "command": [
                        "contradict Py2.",
                        "VernacExtend",
                        "3cfcd3aa4288d5d99378e9f4b378fc3668280119"
                    ]
                },
                {
                    "command": [
                        "destruct Py2 as (l,Py2).",
                        "VernacExtend",
                        "b93252fab34e226c537dc9062ba158094eef73de"
                    ]
                },
                {
                    "command": [
                        "exists l => [[z z']] Hz.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Py2.",
                        "VernacExtend",
                        "22033d70af12a762e46e25d4de48696a36b80f49"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Hz.",
                        "VernacExtend",
                        "71cdd6a47391f832f50fda29a195d5f7934a633c"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_trans with (1 := proj2 (proj1 Hz)).",
                        "VernacExtend",
                        "34f47286e7302ceca974c8e770294ac1ba831c35"
                    ]
                },
                {
                    "command": [
                        "apply Hz.",
                        "VernacExtend",
                        "71cdd6a47391f832f50fda29a195d5f7934a633c"
                    ]
                },
                {
                    "command": [
                        "assert (P1: exists x, P x).",
                        "VernacExtend",
                        "79478b9b7c2a0a319aff69148f7fe6bf8e6c2500"
                    ]
                },
                {
                    "command": [
                        "now exists a.",
                        "VernacExtend",
                        "543185bfde82207d58537ccd8917a16d29655aae"
                    ]
                },
                {
                    "command": [
                        "set (y := proj1_sig (completeness _ P2 P1)).",
                        "VernacExtend",
                        "8e02d0b6970b2a11ca8da0da0e0a33d1d6ceda89"
                    ]
                },
                {
                    "command": [
                        "assert (P4: ~~exists d : posreal, P (Rmin b (y + d))).",
                        "VernacExtend",
                        "684db3dfaad1c81da7da33b4beac1bd244e06844"
                    ]
                },
                {
                    "command": [
                        "specialize (IHn a' b' (fun x' => delta (y,x'))).",
                        "VernacExtend",
                        "b4379e939229223d867cab5ad7a9c4d985f56af3"
                    ]
                },
                {
                    "command": [
                        "contradict IHn.",
                        "VernacExtend",
                        "7db6f3b8835e7a6499ab68abf7284a51843d74f6"
                    ]
                },
                {
                    "command": [
                        "contradict IHn.",
                        "VernacExtend",
                        "7db6f3b8835e7a6499ab68abf7284a51843d74f6"
                    ]
                },
                {
                    "command": [
                        "destruct IHn as (l, Hl).",
                        "VernacExtend",
                        "37f37c90fb50c554b833b7290148d8398bd456bd"
                    ]
                },
                {
                    "command": [
                        "set (d := fold_right (fun t acc => mkposreal _ (Rmin_stable_in_posreal (delta (y,t)) acc)) (mkposreal _ Rlt_0_1) l).",
                        "VernacExtend",
                        "c2a947b76feac6c65ca78ee9b557c2f03c93c810"
                    ]
                },
                {
                    "command": [
                        "assert (Hd: 0 < d/2).",
                        "VernacExtend",
                        "9af6d3acad4cf2bbe2b2211fdaa03f51a4591d15"
                    ]
                },
                {
                    "command": [
                        "apply Fourier_util.Rlt_mult_inv_pos.",
                        "VernacExtend",
                        "15838fc1e5b6e4085ab824d30e8ab5f4e68b2f10"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_R0_R2.",
                        "VernacExtend",
                        "56f346f7d456ea9d1535a96ac932a1c35a8ac229"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ Hd).",
                        "VernacExtend",
                        "bbf8ce3911148514706fcf55d920882adabf82b8"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rmin_l.",
                        "VernacExtend",
                        "19942458506c6b3427aea84d1ee7179f00e19f1c"
                    ]
                },
                {
                    "command": [
                        "refine (_ (completeness_any _ P3 P1 P2 (y - d) _)).",
                        "VernacExtend",
                        "30819fde9721c2cc3cf3029700d7ccbb8b70847a"
                    ]
                },
                {
                    "command": [
                        "intros Hy.",
                        "VernacExtend",
                        "dde1f3a11f7e3e65a050aa4d13dc38c854979033"
                    ]
                },
                {
                    "command": [
                        "apply: false_not_not Hy => Hy.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "destruct Hy as (Hy1,Hy2).",
                        "VernacExtend",
                        "4c333db28b104caab4dee67e2e0ffee3560363dc"
                    ]
                },
                {
                    "command": [
                        "apply: false_not_not Hy2 => Hy2.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply.",
                        "VernacExtend",
                        "34478a74ad5500dd9adb1e3c1f8d65111f36f8e8"
                    ]
                },
                {
                    "command": [
                        "destruct Hy2 as (l',Hl').",
                        "VernacExtend",
                        "736ecc5166f7ccf8b9b9ba30bf5d0d2edee9591c"
                    ]
                },
                {
                    "command": [
                        "exists (app (fold_right (fun x' acc => (y,x')::acc) nil l) l').",
                        "VernacExtend",
                        "4e0aa9fb5903d59a5202f60d1d886f2dfd79cf04"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros (x,x') (Hx,Hx').",
                        "VernacExtend",
                        "fc9ef247c6f3c3a01fde76514c765e1ccb28a65d"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_or_lt x (y - d)) as [Hxy|Hxy].",
                        "VernacExtend",
                        "699b71d4e617821ba14b9cd061a416ca254d9103"
                    ]
                },
                {
                    "command": [
                        "destruct (Hl' (x,x') (conj (conj (proj1 Hx) Hxy) Hx')) as (t,(Ht1,Ht2)).",
                        "VernacExtend",
                        "cf275bbfd3f2c2a93fec3c916b7cf59a0c167658"
                    ]
                },
                {
                    "command": [
                        "exists t.",
                        "VernacExtend",
                        "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app.",
                        "VernacExtend",
                        "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "exact Ht2.",
                        "VernacExtend",
                        "b166c42da7ef0cb23ddc56c444af588132fb4a09"
                    ]
                },
                {
                    "command": [
                        "destruct (Hl x' Hx') as (t',(Ht1,Ht2)).",
                        "VernacExtend",
                        "df3f1412ed46ad35e9aca5b59e55a414fa524e9c"
                    ]
                },
                {
                    "command": [
                        "exists (y, t').",
                        "VernacExtend",
                        "2f663cf734bfefa65c7ea6ca698ffb4cd71e0ad6"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app.",
                        "VernacExtend",
                        "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "clear -Ht1.",
                        "VernacExtend",
                        "bbc871ca66a279cac1af2bccbeb7d736cef723ce"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "simpl in Ht1 |- *.",
                        "VernacExtend",
                        "3d7ac02ce4e77beaf9a590b38df04a8cbb11eedc"
                    ]
                },
                {
                    "command": [
                        "destruct Ht1 as [Ht1|Ht1].",
                        "VernacExtend",
                        "80813ffa62ede2b8a6aef6dba0a3a180311292ad"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "now apply f_equal2.",
                        "VernacExtend",
                        "fd8b7073ddc65b7d9e76f5b599484af9bca5fe1a"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "now apply IHl.",
                        "VernacExtend",
                        "3fc417997870147ed2c9600b1a2f8a7a33be8f4a"
                    ]
                },
                {
                    "command": [
                        "do 2 split.",
                        "VernacExtend",
                        "eb0cf5b49aa01c8dd26593d3c4ebd232a13fce4c"
                    ]
                },
                {
                    "command": [
                        "unfold y.",
                        "VernacExtend",
                        "29a8f7868cdd745151dd20abb7f3c232bfc6cb70"
                    ]
                },
                {
                    "command": [
                        "case completeness => /= z [Hz1 Hz2].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now apply Hz1.",
                        "VernacExtend",
                        "60713feb54a41e6ed116ab9920d90f24eeb55383"
                    ]
                },
                {
                    "command": [
                        "apply Hz2.",
                        "VernacExtend",
                        "01bed73a419d8b94ce1d9b5ead3d06d35dad8ab4"
                    ]
                },
                {
                    "command": [
                        "intros w Hw.",
                        "VernacExtend",
                        "7cbb68a59f8350d4c3d1b9ec69abf3efae782e21"
                    ]
                },
                {
                    "command": [
                        "apply Hw.",
                        "VernacExtend",
                        "8a661025dc679026191beb09fb44e1db1e042d6a"
                    ]
                },
                {
                    "command": [
                        "apply Ht2.",
                        "VernacExtend",
                        "c63cdd12629ec0018d770dcdd04711bb5c373c8f"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with d.",
                        "VernacExtend",
                        "b52ff55bef9ad5addb1fecdf2400d126e9411b24"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_def1.",
                        "VernacExtend",
                        "1ac2b969bbf5e41161bd7a3c24a781c485dfb615"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_r with y.",
                        "VernacExtend",
                        "1969a74bc1a6b1cd70c4bb05b1a7538f4d8f074f"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (y + d/2).",
                        "VernacExtend",
                        "116ad5777616a58a3028c4575889735d99f83559"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_trans with (2 := Rmin_r b _).",
                        "VernacExtend",
                        "346e0568059c90fec4b1403a6e25386c9790cba8"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rplus_0_r (d/2)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite {2}(double_var d).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "3bd4c5b4b87c1bf314aa40391ee053f817c7bc6d"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with y.",
                        "VernacExtend",
                        "89ad4ced1daa63a533089fe92e0d5ecc3cf8824f"
                    ]
                },
                {
                    "command": [
                        "now ring_simplify (y + (x - y)).",
                        "VernacExtend",
                        "c8fbb8646b89c7ec9866a03ead6fa13bc0a799bd"
                    ]
                },
                {
                    "command": [
                        "clearbody y.",
                        "VernacExtend",
                        "11ffc52c6d9a112388123c8dce04bcbe03cf95e0"
                    ]
                },
                {
                    "command": [
                        "clear -Ht1.",
                        "VernacExtend",
                        "bbc871ca66a279cac1af2bccbeb7d736cef723ce"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "simpl in Ht1.",
                        "VernacExtend",
                        "60c3fa16214acf1453df59cd1b4534c75d232bdc"
                    ]
                },
                {
                    "command": [
                        "destruct Ht1 as [Ht1|Ht1].",
                        "VernacExtend",
                        "80813ffa62ede2b8a6aef6dba0a3a180311292ad"
                    ]
                },
                {
                    "command": [
                        "rewrite -Ht1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: Rmin_l.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "unfold d.",
                        "VernacExtend",
                        "76098dd1c777f09ddbb61e803c51b93547ecc2dd"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := Rmin_r _ _).",
                        "VernacExtend",
                        "e5ff800d1b0f9c0b825e26d998126d4b213f8095"
                    ]
                },
                {
                    "command": [
                        "now apply IHl.",
                        "VernacExtend",
                        "3fc417997870147ed2c9600b1a2f8a7a33be8f4a"
                    ]
                },
                {
                    "command": [
                        "apply Ht2.",
                        "VernacExtend",
                        "c63cdd12629ec0018d770dcdd04711bb5c373c8f"
                    ]
                },
                {
                    "command": [
                        "fold y.",
                        "VernacExtend",
                        "abaf125d94ffd7a302bd0bf3738a40bdf102cdd9"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}(Rplus_0_r y) -Ropp_0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_contravar.",
                        "VernacExtend",
                        "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "apply: false_not_not P4 => P4.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "destruct P4 as (d,P4).",
                        "VernacExtend",
                        "e0ccd41c484bd6ee8c7b6289d979ec717f49f6d3"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_or_lt b y) as [Hby|Hby].",
                        "VernacExtend",
                        "5e171000aca743b1a86f462ce971f5d2256a68fe"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmin_left in P4.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply P4.",
                        "VernacExtend",
                        "2840ccefab8d597e779d0718123e2642ede9eb1b"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rplus_0_r b).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat with (1 := Hby).",
                        "VernacExtend",
                        "0d0c3f08ea31c5d06622c6d524186ec27b8ca829"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "unfold y in *.",
                        "VernacExtend",
                        "076df2deaca6df90bba99d911ca63fd58603fc2a"
                    ]
                },
                {
                    "command": [
                        "clear y.",
                        "VernacExtend",
                        "511d70a5a7a86a9e4066c9ba3b5a692ac0b32d83"
                    ]
                },
                {
                    "command": [
                        "revert P4 Hby.",
                        "VernacExtend",
                        "3f3b66e1e1f4802793d4405ea0a9c06baa52ae08"
                    ]
                },
                {
                    "command": [
                        "case completeness => /= y [Hy1 Hy2] P4 Hby.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt with (1 := Hy1 (Rmin b (y + d)) P4).",
                        "VernacExtend",
                        "1dee67373e3a7a9830f0e0f7bd591c8aec28fcbd"
                    ]
                },
                {
                    "command": [
                        "apply Rmin_case.",
                        "VernacExtend",
                        "06bee284b3ab9229517272cc3728705bdc7b95ba"
                    ]
                },
                {
                    "command": [
                        "exact Hby.",
                        "VernacExtend",
                        "9591c8a7b9e91b9d0d0694cd862fcaa0ede582af"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}(Rplus_0_r y).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compactness_value",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "intros n a b delta.",
                        "VernacExtend",
                        "91311adbac751751c8fa18d12fcb673d75d01d7c"
                    ]
                },
                {
                    "command": [
                        "set (P d := d <= 1 /\\ forall x, bounded_n n a b x -> exists t, bounded_n n a b t /\\ close_n n (delta t) x t /\\ d <= delta t).",
                        "VernacExtend",
                        "8baf8341f3e3590663039efe5a5ad3dc23e9d218"
                    ]
                },
                {
                    "command": [
                        "assert (P1 : exists d, P d).",
                        "VernacExtend",
                        "8102af1ffbee37383a1685012b20547212f39842"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_0_1.",
                        "VernacExtend",
                        "996937b485ab0b0ab64abfd08ec0786445ae12e3"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact Hx.",
                        "VernacExtend",
                        "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "destruct x as (x,x').",
                        "VernacExtend",
                        "ea72694b3274f2965ee148352f07514a59909f82"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rminus Rplus_opp_r Rabs_R0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "apply (IHn (fun x' => delta (x,x'))).",
                        "VernacExtend",
                        "f34a5d80d69f6028c116d911ad85e858fedc23ec"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "assert (P2 : bound P).",
                        "VernacExtend",
                        "7f8201522db2050a62761d8790d58826990a8419"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "now intros d (Hd,_).",
                        "VernacExtend",
                        "60694a413ab93d50f13a08387a007e62eda5ced9"
                    ]
                },
                {
                    "command": [
                        "set (d := completeness P P2 P1).",
                        "VernacExtend",
                        "4199f1e971385ac233d3456032c7b48297320900"
                    ]
                },
                {
                    "command": [
                        "assert (P3 : 0 < proj1_sig d).",
                        "VernacExtend",
                        "a8d7de963799e90038add1012d1f6c5d621257a8"
                    ]
                },
                {
                    "command": [
                        "revert d.",
                        "VernacExtend",
                        "3cd0655037ebae3d30e13bf8826a0b6955fb7080"
                    ]
                },
                {
                    "command": [
                        "case completeness.",
                        "VernacExtend",
                        "7cd6c5cae7a24c101b7ae94b8b49c75405561a30"
                    ]
                },
                {
                    "command": [
                        "intros d (Hd1,Hd2).",
                        "VernacExtend",
                        "075277914ad201063c4cb624d6c6b656fc37acc1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_le_lt.",
                        "VernacExtend",
                        "b6f8b57a60bfd6845f42e4c68c9a5305f4b60dd7"
                    ]
                },
                {
                    "command": [
                        "intros Hd3.",
                        "VernacExtend",
                        "fdf5540b15ab9aadb747f98edacb12e049a40788"
                    ]
                },
                {
                    "command": [
                        "apply (compactness_list n a b delta).",
                        "VernacExtend",
                        "381fe5aad6b92ce9c55209d3806f3b71f83c98e0"
                    ]
                },
                {
                    "command": [
                        "intros (l,Hl).",
                        "VernacExtend",
                        "2bd31ac56eb5573734dcd556f8f6f258628c0e15"
                    ]
                },
                {
                    "command": [
                        "set (v := fold_right (fun t acc => mkposreal _ (Rmin_stable_in_posreal (delta t) acc)) (mkposreal _ Rlt_0_1) l).",
                        "VernacExtend",
                        "dc4fdcc13894eb631ab3da26a5f78c4586b52bae"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_not_le _ _ (cond_pos v)).",
                        "VernacExtend",
                        "1146554d1887f138a864b956f2b6ee453df465df"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Hd3).",
                        "VernacExtend",
                        "163e72a01ea83078622794087f53e9ccbb02ed65"
                    ]
                },
                {
                    "command": [
                        "apply Hd1.",
                        "VernacExtend",
                        "61da7cd36190808e34f602a40abf52062d20b1e7"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold v.",
                        "VernacExtend",
                        "dd01bfef1ec7e9ca0e58bc815f93a1cd7c22ac51"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := IHl).",
                        "VernacExtend",
                        "3570d47d4318d752486e0f3cdf6570fbb2c3eab7"
                    ]
                },
                {
                    "command": [
                        "apply Rmin_r.",
                        "VernacExtend",
                        "d165954e4d055817b42cbc8960efd3fee45e4f16"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "destruct (Hl x Hx) as (t,(Ht1,Ht2)).",
                        "VernacExtend",
                        "d0357ccebbec01ddda3e3a686a6e9d3f6c60c0de"
                    ]
                },
                {
                    "command": [
                        "exists t.",
                        "VernacExtend",
                        "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Ht2.",
                        "VernacExtend",
                        "c63cdd12629ec0018d770dcdd04711bb5c373c8f"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Ht2.",
                        "VernacExtend",
                        "c63cdd12629ec0018d770dcdd04711bb5c373c8f"
                    ]
                },
                {
                    "command": [
                        "clear -Ht1.",
                        "VernacExtend",
                        "bbc871ca66a279cac1af2bccbeb7d736cef723ce"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "simpl in Ht1.",
                        "VernacExtend",
                        "60c3fa16214acf1453df59cd1b4534c75d232bdc"
                    ]
                },
                {
                    "command": [
                        "destruct Ht1 as [Ht1|Ht1].",
                        "VernacExtend",
                        "80813ffa62ede2b8a6aef6dba0a3a180311292ad"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Ht1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmin_l.",
                        "VernacExtend",
                        "19942458506c6b3427aea84d1ee7179f00e19f1c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "eapply Rle_trans with (1 := Rmin_r _ _).",
                        "VernacExtend",
                        "31a1dd39a3ff14bfa3920984834547d0d386aef2"
                    ]
                },
                {
                    "command": [
                        "now apply IHl.",
                        "VernacExtend",
                        "3fc417997870147ed2c9600b1a2f8a7a33be8f4a"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ (Fourier_util.Rlt_mult_inv_pos _ _ P3 Rlt_R0_R2)).",
                        "VernacExtend",
                        "f3d9fd1c3890f5e47667d75753eb31ee48e855c0"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "refine (_ (completeness_any P _ P1 P2 (proj1_sig d / 2) _)).",
                        "VernacExtend",
                        "602ac42e7e37f558125ec15e5f17950d00ae8c87"
                    ]
                },
                {
                    "command": [
                        "intros HP.",
                        "VernacExtend",
                        "0ec01adecbfe701ee27244a41ef8fa3cd51b55e4"
                    ]
                },
                {
                    "command": [
                        "contradict HP.",
                        "VernacExtend",
                        "d186909e87cec954a14f42ce3537bf7f0789c397"
                    ]
                },
                {
                    "command": [
                        "contradict HP.",
                        "VernacExtend",
                        "d186909e87cec954a14f42ce3537bf7f0789c397"
                    ]
                },
                {
                    "command": [
                        "destruct HP as (_,HP).",
                        "VernacExtend",
                        "ad576fc394026159d596cbddb9ade3fa09ab321e"
                    ]
                },
                {
                    "command": [
                        "now apply HP.",
                        "VernacExtend",
                        "1dbf37580193a0b3ad1359912189144857e883cb"
                    ]
                },
                {
                    "command": [
                        "intros u v Huv (Pv1,Pv2).",
                        "VernacExtend",
                        "405232d37c92812a256a10146657cf2b58c7e3ac"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_trans with v.",
                        "VernacExtend",
                        "b0b32110e4735c781f96712eae7917e5b218b5fd"
                    ]
                },
                {
                    "command": [
                        "intros z Hz.",
                        "VernacExtend",
                        "4248c0300130ba18200d4779d5d54ab29d4b84b6"
                    ]
                },
                {
                    "command": [
                        "destruct (Pv2 z Hz) as (t,Ht).",
                        "VernacExtend",
                        "619c6bd45fa7c3a473e0cf5fbe79e93b6d2dc510"
                    ]
                },
                {
                    "command": [
                        "exists t.",
                        "VernacExtend",
                        "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Ht.",
                        "VernacExtend",
                        "3d48a1d94ba28df584299891c553d27a6a6c227e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Ht.",
                        "VernacExtend",
                        "3d48a1d94ba28df584299891c553d27a6a6c227e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := Huv).",
                        "VernacExtend",
                        "a80dfcd9a92fadb114a08e1341f3874826a62a12"
                    ]
                },
                {
                    "command": [
                        "apply Ht.",
                        "VernacExtend",
                        "3d48a1d94ba28df584299891c553d27a6a6c227e"
                    ]
                },
                {
                    "command": [
                        "fold d.",
                        "VernacExtend",
                        "5eaff88183703fbe67e3fe4c12f5818c2b7486c9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rplus_0_r (proj1_sig d / 2)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite {2}(double_var (proj1_sig d)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "apply Fourier_util.Rlt_mult_inv_pos.",
                        "VernacExtend",
                        "15838fc1e5b6e4085ab824d30e8ab5f4e68b2f10"
                    ]
                },
                {
                    "command": [
                        "exact P3.",
                        "VernacExtend",
                        "a5a7b0fedd332413227c4222a4bbd0a64b03a89f"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_R0_R2.",
                        "VernacExtend",
                        "56f346f7d456ea9d1535a96ac932a1c35a8ac229"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compactness_value_1d",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "intros a b delta.",
                        "VernacExtend",
                        "82dc48a5654d6afc4a46c7c32cdffbfbcfd50814"
                    ]
                },
                {
                    "command": [
                        "destruct (compactness_value 1 (a,tt) (b,tt) (fun t => let '(t,_) := t in delta t)) as (d, Hd).",
                        "VernacExtend",
                        "ff4fac3dc5eae0e717f54572fc2731368fbb558b"
                    ]
                },
                {
                    "command": [
                        "exists d.",
                        "VernacExtend",
                        "39cea21d4e04fa9463f57be4e5a423277681d456"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "specialize (Hd (x,tt) (conj Hx I)).",
                        "VernacExtend",
                        "5de770695ed07387e0415bcde8abcd62d8169cbd"
                    ]
                },
                {
                    "command": [
                        "do 2 contradict Hd.",
                        "VernacExtend",
                        "3ffd14fda756161eba6946bcebb015d322f3dc16"
                    ]
                },
                {
                    "command": [
                        "destruct Hd as ((t,t'),Ht).",
                        "VernacExtend",
                        "0b413807a6a23430103a46aabd22b684fc6673d5"
                    ]
                },
                {
                    "command": [
                        "exists t.",
                        "VernacExtend",
                        "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
                    ]
                },
                {
                    "command": [
                        "repeat split ; apply Ht.",
                        "VernacExtend",
                        "dbf189878c3d7ac525f2ad2c690d2fe9a3731cbe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compactness_value_2d",
            "line_nb": 306,
            "steps": [
                {
                    "command": [
                        "intros a b a' b' delta.",
                        "VernacExtend",
                        "28d54fdba0f3dba659f0cc0d60632f159dd00698"
                    ]
                },
                {
                    "command": [
                        "destruct (compactness_value 2 (a,(a',tt)) (b,(b',tt)) (fun t => let '(u,(v,_)) := t in delta u v)) as (d, Hd).",
                        "VernacExtend",
                        "13e17cb2578913b62f2ad6b7ec4c3ec9a50026c6"
                    ]
                },
                {
                    "command": [
                        "exists d.",
                        "VernacExtend",
                        "39cea21d4e04fa9463f57be4e5a423277681d456"
                    ]
                },
                {
                    "command": [
                        "intros x y Hx Hy.",
                        "VernacExtend",
                        "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
                    ]
                },
                {
                    "command": [
                        "specialize (Hd (x,(y,tt)) (conj Hx (conj Hy I))).",
                        "VernacExtend",
                        "dbd6a5855ce4c4ff3f1f7354ac086a35e6a49853"
                    ]
                },
                {
                    "command": [
                        "do 2 contradict Hd.",
                        "VernacExtend",
                        "3ffd14fda756161eba6946bcebb015d322f3dc16"
                    ]
                },
                {
                    "command": [
                        "destruct Hd as ((u,(v,w)),Ht).",
                        "VernacExtend",
                        "022daabbf5095f2d59b238bf1855e3a3693b9e5b"
                    ]
                },
                {
                    "command": [
                        "exists u.",
                        "VernacExtend",
                        "2af7d32a2a88e37a4d44700a22dfcddd239848b3"
                    ]
                },
                {
                    "command": [
                        "exists v.",
                        "VernacExtend",
                        "07e9a3324bfa0e7b5dc708d0101cf063e8084497"
                    ]
                },
                {
                    "command": [
                        "simpl in Ht.",
                        "VernacExtend",
                        "f3647f468667e683097b7de90a7362183d8a63fa"
                    ]
                },
                {
                    "command": [
                        "repeat split ; apply Ht.",
                        "VernacExtend",
                        "dbf189878c3d7ac525f2ad2c690d2fe9a3731cbe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}