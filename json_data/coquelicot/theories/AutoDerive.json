{
    "filename": "theories/AutoDerive.v",
    "coq_project": "coquelicot",
    "vernac_cmds": [
        [
            "Require Import Reals.",
            "VernacRequire",
            "45681fd6487015ca7aa8c8e9b408e40e3103ca14"
        ],
        [
            "Require Import Rcomplements Hierarchy Derive RInt RInt_analysis Derive_2d Continuity ElemFct.",
            "VernacRequire",
            "78ef489d2e9afc29a5ceec7fa6d3e016f78bd7d8"
        ],
        [
            "Require Import mathcomp.ssreflect.ssreflect mathcomp.ssreflect.ssrbool mathcomp.ssreflect.seq Datatypes.",
            "VernacRequire",
            "c664c75e4a774e7a4700abbb08ded91638556369"
        ],
        [
            "Fixpoint Rn n T := match n with | O => T | S n => R -> Rn n T end.",
            "VernacFixpoint",
            "01b681778d9dccbde7b2398b4e9724bcbb4705af"
        ],
        [
            "Inductive bop := | Eplus | Emult.",
            "VernacInductive",
            "9a0cf700e7e76b6722915bcce401a136294015ff"
        ],
        [
            "Inductive uop := | Eopp | Einv | Efct : forall (f f' : R -> R), (forall x, is_derive f x (f' x)) -> uop | Efct' : forall (f f' : R -> R) (df : R -> Prop), (forall x, df x -> is_derive f x (f' x)) -> uop.",
            "VernacInductive",
            "48bf7a071ebe2fa4587cbeb7bcb215551fa23802"
        ],
        [
            "Inductive expr := | Var : nat -> expr | AppExt : forall k, Rn k R -> seq expr -> expr | AppExtD : forall k, Rn k R -> nat -> seq expr -> expr | App : expr -> expr -> expr | Subst : expr -> expr -> expr | Cst : R -> expr | Binary : bop -> expr -> expr -> expr | Unary : uop -> expr -> expr | Int : expr -> expr -> expr -> expr.",
            "VernacInductive",
            "573f8830dc56c21cdf9b7aa26459ee2039b8c2a4"
        ],
        [
            "Section ExprInduction.",
            "VernacBeginSection",
            "8674ff6670777b89e4812d43a18271ee1c9dd8d2"
        ],
        [
            "Hypothesis P : expr -> Prop.",
            "VernacAssumption",
            "8a6e26db90bb8f3859bbebf05526c66914217f05"
        ],
        [
            "Hypothesis P_Var : forall n, P (Var n).",
            "VernacAssumption",
            "84741ed7ad72280bc608e1b559e2ca8b814c529b"
        ],
        [
            "Hypothesis P_AppExt : forall k f le, foldr (fun e acc => P e /\\ acc) True le -> P (AppExt k f le).",
            "VernacAssumption",
            "30f3adb609f995e4ad434cf8402b91fb177e9e42"
        ],
        [
            "Hypothesis P_AppExtD : forall k f n le, foldr (fun e acc => P e /\\ acc) True le -> P (AppExtD k f n le).",
            "VernacAssumption",
            "8d719469d47e22ec451c0f7e452e35478b12cea0"
        ],
        [
            "Hypothesis P_App : forall e1 e2, P e1 -> P e2 -> P (App e1 e2).",
            "VernacAssumption",
            "db619862c7bfb87f5024cd1255923d7b5f024225"
        ],
        [
            "Hypothesis P_Subst : forall e1 e2, P e1 -> P e2 -> P (Subst e1 e2).",
            "VernacAssumption",
            "b82362323d14b36096a5cf99950495bda3a4ea28"
        ],
        [
            "Hypothesis P_Cst : forall r, P (Cst r).",
            "VernacAssumption",
            "fbc016a473363ed0c02c5e27a0e8cdcacb548acb"
        ],
        [
            "Hypothesis P_Binary : forall o e1 e2, P e1 -> P e2 -> P (Binary o e1 e2).",
            "VernacAssumption",
            "36b2e0f59b1f3e223b186d40c919adc084619c16"
        ],
        [
            "Hypothesis P_Unary : forall o e, P e -> P (Unary o e).",
            "VernacAssumption",
            "7432b437069e4b89c12e9addbfa10124cde5741b"
        ],
        [
            "Hypothesis P_Int : forall f e1 e2, P f -> P e1 -> P e2 -> P (Int f e1 e2).",
            "VernacAssumption",
            "2818471930a1ab1aa6534c1be37d9c9b3c073e66"
        ],
        [
            "Fixpoint expr_ind' (e : expr) : P e := match e return P e with | Var n => P_Var n | AppExt k f le => P_AppExt k f le ((fix expr_ind'' (le : seq expr) : foldr (fun e acc => P e /\\ acc) True le := match le return foldr (fun e acc => P e /\\ acc) True le with | nil => I | cons h q => conj (expr_ind' h) (expr_ind'' q) end) le) | AppExtD k f n le => P_AppExtD k f n le ((fix expr_ind'' (le : seq expr) : foldr (fun e acc => P e /\\ acc) True le := match le return foldr (fun e acc => P e /\\ acc) True le with | nil => I | cons h q => conj (expr_ind' h) (expr_ind'' q) end) le) | App e1 e2 => P_App e1 e2 (expr_ind' e1) (expr_ind' e2) | Subst e1 e2 => P_Subst e1 e2 (expr_ind' e1) (expr_ind' e2) | Cst r => P_Cst r | Binary o e1 e2 => P_Binary o e1 e2 (expr_ind' e1) (expr_ind' e2) | Unary o e => P_Unary o e (expr_ind' e) | Int f e1 e2 => P_Int f e1 e2 (expr_ind' f) (expr_ind' e1) (expr_ind' e2) end.",
            "VernacFixpoint",
            "d905e4782cfc906efb3389de253bf246528660a6"
        ],
        [
            "End ExprInduction.",
            "VernacEndSegment",
            "d2c49a3b29a7a8a34ade0e59184196db92ad6cfc"
        ],
        [
            "Fixpoint apply {T} p : Rn p T -> (nat -> R) -> T := match p return Rn p T -> _ -> T with | O => fun (x : T) _ => x | S p => fun (f : Rn (S p) T) g => apply p (f (g p)) g end.",
            "VernacFixpoint",
            "24eda556890a3e6e04ac4642641b2293f86a220d"
        ],
        [
            "Lemma apply_ext : forall T k (f : Rn k T) g1 g2, (forall n, (n < k)%nat -> g1 n = g2 n) -> apply k f g1 = apply k f g2.",
            "VernacStartTheoremProof",
            "dd8113a7938ddf115cf1adf9aee0f908c61f6885"
        ],
        [
            "intros T k f g1 g2 Hg.",
            "VernacExtend",
            "a8f34e1dc59fa9170d61e44f45879c3555beb217"
        ],
        [
            "revert f.",
            "VernacExtend",
            "c97f81cbc07fdc8c49875e2ee7958808979dddbc"
        ],
        [
            "induction k.",
            "VernacExtend",
            "40c5b84c7f25c7c24e470db498af5e654cfce415"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros f.",
            "VernacExtend",
            "d55304fde379b586a2d23f40fabc5399298bf19a"
        ],
        [
            "rewrite Hg.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply IHk.",
            "VernacExtend",
            "1daf2f29fa394c82d6059a2f49d308ae2b5305da"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "apply Hg.",
            "VernacExtend",
            "01c1d3461bd6fa059f36624dcd703fe73a0894a8"
        ],
        [
            "now apply lt_S.",
            "VernacExtend",
            "c5df6da0ed6232be994e34c8035ccb6061cd5cab"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Derive_Rn n (f : Rn n R) p g := Derive (fun x => apply n f (fun i => if ssrnat.eqn i p then x else g i)) (g p).",
            "VernacDefinition",
            "03519ed35a2f93411c1bacf561ef8834c524a8fc"
        ],
        [
            "Definition ex_derive_Rn n (f : Rn n R) p g := ex_derive (fun x => apply n f (fun i => if ssrnat.eqn i p then x else g i)) (g p).",
            "VernacDefinition",
            "c1881edfcff124edf26b732a67597c379a900528"
        ],
        [
            "Fixpoint interp (l : seq R) (e : expr) : R := match e with | Var n => nth R0 l n | AppExt k f le => apply k f (nth 0 (map (interp l) le)) | AppExtD k f n le => Derive_Rn k f n (nth 0 (map (interp l) le)) | App e1 e2 => interp ((interp l e2) :: l) e1 | Subst e1 e2 => interp (set_nth R0 l 0 (interp l e2)) e1 | Cst c => c | Binary o e1 e2 => match o with Eplus => Rplus | Emult => Rmult end (interp l e1) (interp l e2) | Unary o e => match o with Eopp => Ropp | Einv => Rinv | Efct f f' H => f | Efct' f f' df H => f end (interp l e) | Int e1 e2 e3 => RInt (fun x => interp (x :: l) e1) (interp l e2) (interp l e3) end.",
            "VernacFixpoint",
            "c5a987fe1635ac6c2f6d10c85eb178d783618d6d"
        ],
        [
            "Inductive domain := | Never : domain | Always : domain | Partial : (R -> Prop) -> expr -> domain | Derivable : nat -> forall k, Rn k R -> seq expr -> domain | Derivable2 : nat -> nat -> forall k, Rn k R -> seq expr -> domain | Continuous : nat -> expr -> domain | Continuous2 : nat -> nat -> expr -> domain | Integrable : expr -> expr -> expr -> domain | ParamIntegrable : nat -> expr -> expr -> expr -> domain | LocallyParamIntegrable : nat -> expr -> expr -> domain | And : seq domain -> domain | Forall : expr -> expr -> domain -> domain | Forone : expr -> domain -> domain | Locally : nat -> domain -> domain | Locally2 : nat -> nat -> domain -> domain | ForallWide : nat -> expr -> expr -> domain -> domain.",
            "VernacInductive",
            "950ab74e4cead8bf33352f0b645d12f0ad67fee1"
        ],
        [
            "Section DomainInduction.",
            "VernacBeginSection",
            "a8a96da292a5f538d910faeed299fd8cb641005b"
        ],
        [
            "Hypothesis P : domain -> Prop.",
            "VernacAssumption",
            "727c4e37586aca7fc95dd8a08c319fad038f2446"
        ],
        [
            "Hypothesis P_Never : P Never.",
            "VernacAssumption",
            "f983bc740dc0a1d7e17a2fc903eb3f253780d02b"
        ],
        [
            "Hypothesis P_Always : P Always.",
            "VernacAssumption",
            "334d103bb72e478b2c486500b95ac06fc5021783"
        ],
        [
            "Hypothesis P_Partial : forall p e, P (Partial p e).",
            "VernacAssumption",
            "748f504544289ebf97f587099237665c0291df1d"
        ],
        [
            "Hypothesis P_Derivable : forall n k f le, P (Derivable n k f le).",
            "VernacAssumption",
            "858071c7d4b66ba2051815465f4b4090d3d79bff"
        ],
        [
            "Hypothesis P_Derivable2 : forall m n k f le, P (Derivable2 m n k f le).",
            "VernacAssumption",
            "86aa4adc28ea9fbb348514e340cdc435cb899d31"
        ],
        [
            "Hypothesis P_Continuous : forall n e, P (Continuous n e).",
            "VernacAssumption",
            "5cfd506f39b86cb86d6ff3c04e2033931272f84b"
        ],
        [
            "Hypothesis P_Continuous2 : forall m n e, P (Continuous2 m n e).",
            "VernacAssumption",
            "ca5f16914609531207e1500e5b5aaa0acc3b6882"
        ],
        [
            "Hypothesis P_Integrable : forall f e1 e2, P (Integrable f e1 e2).",
            "VernacAssumption",
            "b28b97a9acca2642746e0dce2ad41046c692b752"
        ],
        [
            "Hypothesis P_ParamIntegrable : forall n f e1 e2, P (ParamIntegrable n f e1 e2).",
            "VernacAssumption",
            "cbc2a2cb561aec4da476b6fe9cb5f3dd1b80c436"
        ],
        [
            "Hypothesis P_LocallyParamIntegrable : forall n f e, P (LocallyParamIntegrable n f e).",
            "VernacAssumption",
            "8bdfd8caf0e6b733ddff156defc2fe4070b631ce"
        ],
        [
            "Hypothesis P_And : forall ld, foldr (fun d acc => P d /\\ acc) True ld -> P (And ld).",
            "VernacAssumption",
            "befd370cf089fb0920dd916e76c346d5da38e992"
        ],
        [
            "Hypothesis P_Forall : forall e1 e2 d, P d -> P (Forall e1 e2 d).",
            "VernacAssumption",
            "3848adf9fbd690103c6f101dd99d2f1c5c7c9a01"
        ],
        [
            "Hypothesis P_Forone : forall e d, P d -> P (Forone e d).",
            "VernacAssumption",
            "67f7b37c22b7cfd718c85d18b6007a06ac3bc2e2"
        ],
        [
            "Hypothesis P_Locally : forall n d, P d -> P (Locally n d).",
            "VernacAssumption",
            "07f8d84b4fde658d38289bd36348e20072796092"
        ],
        [
            "Hypothesis P_Locally2 : forall m n d, P d -> P (Locally2 m n d).",
            "VernacAssumption",
            "96f08fd1556dce7adf49b385ecfbe7027d174908"
        ],
        [
            "Hypothesis P_ForallWide : forall n e1 e2 d, P d -> P (ForallWide n e1 e2 d).",
            "VernacAssumption",
            "545d4b43d29d472cd3565723f2e704aae708ac9e"
        ],
        [
            "Fixpoint domain_ind' (d : domain) : P d := match d return P d with | Never => P_Never | Always => P_Always | Partial d e => P_Partial d e | Derivable n k f le => P_Derivable n k f le | Derivable2 m n k f le => P_Derivable2 m n k f le | Continuous n e => P_Continuous n e | Continuous2 m n e => P_Continuous2 m n e | Integrable f e1 e2 => P_Integrable f e1 e2 | ParamIntegrable n f e1 e2 => P_ParamIntegrable n f e1 e2 | LocallyParamIntegrable n f e => P_LocallyParamIntegrable n f e | And ld => P_And ld ((fix domain_ind'' (ld : seq domain) : foldr (fun d acc => P d /\\ acc) True ld := match ld return foldr (fun d acc => P d /\\ acc) True ld with | nil => I | cons h q => conj (domain_ind' h) (domain_ind'' q) end) ld) | Forall e1 e2 d => P_Forall e1 e2 d (domain_ind' d) | Forone e d => P_Forone e d (domain_ind' d) | Locally n d => P_Locally n d (domain_ind' d) | Locally2 m n d => P_Locally2 m n d (domain_ind' d) | ForallWide n e1 e2 d => P_ForallWide n e1 e2 d (domain_ind' d) end.",
            "VernacFixpoint",
            "02a71a8350b8486ae4f80e22058ad642ffde0227"
        ],
        [
            "End DomainInduction.",
            "VernacEndSegment",
            "4d3ebdaaed72e66643d2d5f0878b27772bd400c6"
        ],
        [
            "Lemma foldr_prop_nth : forall {T} {P: T -> Prop} d l n, foldr (fun d acc => P d /\\ acc) True l -> P d -> P (nth d l n).",
            "VernacStartTheoremProof",
            "b201e0b4ebbcbb0e2c7927d306b3f4067eef7c69"
        ],
        [
            "intros T P d l n Hl Hd.",
            "VernacExtend",
            "4c08bd0c5c4a8b347d7fa0629088da2660f30e34"
        ],
        [
            "revert l n Hl.",
            "VernacExtend",
            "4b4220c8d5d92d8cdfbf21e3daa582a7e7b1a0d1"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "intros n _.",
            "VernacExtend",
            "41d8c008b414e870b3087cc6cbefb3f03d1da66e"
        ],
        [
            "now rewrite nth_nil.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "intros [|n].",
            "VernacExtend",
            "43bec745667d2fc0e7c5252f9dc776453f0890e2"
        ],
        [
            "now intros (H,_).",
            "VernacExtend",
            "f6f0ba5692602cae726e2a2aa1ca390f8b30fb58"
        ],
        [
            "intros (_,H).",
            "VernacExtend",
            "25f6a2cd1cb0bd6a2f0d7abf0ed531ec59abb9ee"
        ],
        [
            "now apply IHl.",
            "VernacExtend",
            "3fc417997870147ed2c9600b1a2f8a7a33be8f4a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint interp_domain (l : seq R) (d : domain) : Prop := match d with | Never => False | Always => True | Partial p e => p (interp l e) | Derivable n k f le => ex_derive_Rn k f n (nth 0 (map (interp l) le)) | Derivable2 m n k f le => let le' := map (interp l) le in locally_2d (fun u v => ex_derive_Rn k f m (fun i => if ssrnat.eqn i m then u else if ssrnat.eqn i n then v else nth 0 le' i)) (nth 0 le' m) (nth 0 le' n) /\\ continuity_2d_pt (fun u v => Derive_Rn k f m (fun i => if ssrnat.eqn i m then u else if ssrnat.eqn i n then v else nth 0 le' i)) (nth 0 le' m) (nth 0 le' n) | Continuous n f => continuity_pt (fun x => interp (set_nth R0 l n x) f) (nth R0 l n) | Continuous2 m n f => continuity_2d_pt (fun x y => interp (set_nth R0 (set_nth R0 l n y) m x) f) (nth R0 l m) (nth R0 l n) | Integrable f e1 e2 => ex_RInt (fun x => interp (x :: l) f) (interp l e1) (interp l e2) | ParamIntegrable n f e1 e2 => locally (nth R0 l n) (fun y => ex_RInt (fun t => interp (t :: set_nth R0 l n y) f) (interp l e1) (interp l e2)) | LocallyParamIntegrable n f e => let a := interp l e in exists eps : posreal, locally (nth R0 l n) (fun y => ex_RInt (fun t => interp (t :: set_nth R0 l n y) f) (a - eps) (a + eps)) | And ld => foldr (fun d acc => interp_domain l d /\\ acc) True ld | Forall e1 e2 s => let a1 := interp l e1 in let a2 := interp l e2 in forall t, Rmin a1 a2 <= t <= Rmax a1 a2 -> interp_domain (t :: l) s | Forone e s => interp_domain (interp l e :: l) s | Locally n s => locally (nth R0 l n) (fun x => interp_domain (set_nth R0 l n x) s) | Locally2 m n s => locally_2d (fun x y => interp_domain (set_nth R0 (set_nth R0 l n y) m x) s) (nth R0 l m) (nth R0 l n) | ForallWide n e1 e2 s => let a1 := interp l e1 in let a2 := interp l e2 in exists d : posreal, forall t u, Rmin a1 a2 - d < t < Rmax a1 a2 + d -> Rabs (u - nth R0 l n) < d -> interp_domain (t :: set_nth R0 l n u) s end.",
            "VernacFixpoint",
            "e1f34001396ffd52c0c6175883cd48e082665e09"
        ],
        [
            "Fixpoint is_const (e : expr) n : bool := match e with | Var v => negb (ssrnat.eqn v n) | AppExt k f le => foldr (fun v acc => andb (is_const v n) acc) true le | AppExtD k f p le => false | App f e => andb (is_const f (S n)) (is_const e n) | Subst f e => andb (orb (ssrnat.eqn n 0) (is_const f n)) (is_const e n) | Cst _ => true | Binary b e1 e2 => andb (is_const e1 n) (is_const e2 n) | Unary u e => is_const e n | Int f e1 e2 => andb (is_const f (S n)) (andb (is_const e1 n) (is_const e2 n)) end.",
            "VernacFixpoint",
            "a6096ab571ddaf7e058c2807d5293c05b839629d"
        ],
        [
            "Lemma is_const_correct : forall e n, is_const e n = true -> forall l x1 x2, interp (set_nth 0 l n x1) e = interp (set_nth 0 l n x2) e.",
            "VernacStartTheoremProof",
            "8cccf5ea86598c0ef61bbcb23dee050bdd7cbe79"
        ],
        [
            "induction e using expr_ind'.",
            "VernacExtend",
            "6a34bff1f7203e29c107a185ad58979b6f3e856b"
        ],
        [
            "simpl => k Hk l x1 x2.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite 2!nth_set_nth /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now rewrite -ssrnat.eqnE (ssrbool.negbTE Hk).",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "simpl => n Hc l x1 x2.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply apply_ext.",
            "VernacExtend",
            "4eb7dcf62760237fa17ced634daa34a66caf7a6e"
        ],
        [
            "intros m _.",
            "VernacExtend",
            "383c849a9ea3da2af8245df03c1b9e0ef7ab6339"
        ],
        [
            "revert m.",
            "VernacExtend",
            "43cfb708640da71e43e04c57468c99e6fc662c0f"
        ],
        [
            "induction le.",
            "VernacExtend",
            "3c5d47e111a78b836cf99158239e39e0e694e505"
        ],
        [
            "intros m.",
            "VernacExtend",
            "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
        ],
        [
            "now rewrite nth_nil.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "apply andb_prop in Hc.",
            "VernacExtend",
            "6e35ac8c4d96720e6679a99ed3250897b1947d2e"
        ],
        [
            "intros [|m].",
            "VernacExtend",
            "3cf60c86032d06e38a93188eef18f1e089d81598"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now apply H.",
            "VernacExtend",
            "e28edffe226486c29d50d204164561fb199b8c97"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply IHle.",
            "VernacExtend",
            "643780f977855f945532866720a558f5a34ca960"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Hc.",
            "VernacExtend",
            "b900f3304ba75d1bc8becba9c3e19edfabbb7700"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move /ssrbool.andP => [H1 H2] l x1 x2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (IHe2 n H2 l x1 x2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply: (IHe1 (S n) _ (interp (set_nth 0 l n x2) e2 :: l)).",
            "VernacExtend",
            "0dc5011c548c783484f0908a5a62d8c809131988"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "simpl is_const.",
            "VernacExtend",
            "1eeb9d83143ca3670a68391119546b0cf0fd4d24"
        ],
        [
            "move /ssrbool.andP => [H1 H2] l x1 x2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "change (interp (set_nth 0 (set_nth 0 l n x1) 0 (interp (set_nth 0 l n x1) e2)) e1 = interp (set_nth 0 (set_nth 0 l n x2) 0 (interp (set_nth 0 l n x2) e2)) e1).",
            "VernacExtend",
            "b28a34eac11b1fa6ce26b43b44de78fbf64cc4ab"
        ],
        [
            "move: H1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace (orb (ssrnat.eqn n 0) (is_const e1 n)) with (orb (ssrnat.eqn n 0) (andb (negb (ssrnat.eqn n 0)) (is_const e1 n))).",
            "VernacExtend",
            "ed627d4736d77853a159098aa218afba3c80d1ed"
        ],
        [
            "move /ssrbool.orP => [H1|].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite set_set_nth (set_set_nth 0 l n x2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -ssrnat.eqnE H1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now rewrite (IHe2 n H2 l x1 x2).",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "move /ssrbool.andP => [H1 H3].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite set_set_nth (set_set_nth 0 l n x2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -ssrnat.eqnE (ssrbool.negbTE H1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (IHe2 n H2 l x1 x2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply IHe1.",
            "VernacExtend",
            "c175ccb3c07c4a158940a44a7cba42e92bcb57a4"
        ],
        [
            "now case (ssrnat.eqn n 0).",
            "VernacExtend",
            "86959f24c9ee8c35588d209ee1fd1b19856f608e"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move /ssrbool.andP => [H1 H2] l x1 x2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "now rewrite (IHe1 n H1 l x1 x2) (IHe2 n H2 l x1 x2).",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "simpl => n H l x1 x2.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now rewrite (IHe n H l x1 x2).",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "simpl => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move /ssrbool.andP => [H1].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move /ssrbool.andP => [H2 H3] l x1 x2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (IHe2 n H2 l x1 x2) (IHe3 n H3 l x1 x2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply RInt_ext => x _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (IHe1 _ H1 (x :: l)).",
            "VernacExtend",
            "1583b26a55763bc97e8222a3e3970fc4808d1960"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_map' : forall {T1} x1 {T2} (f : T1 -> T2) n s, nth (f x1) (map f s) n = f (nth x1 s n).",
            "VernacStartTheoremProof",
            "f5fa1eedbc3279a94ae915260d1e4ead735d0078"
        ],
        [
            "intros T1 x T2 f n s.",
            "VernacExtend",
            "c3ff0eb30655b929085a6c41d7169d59a213c4d0"
        ],
        [
            "case (ssrnat.leqP (size s) n) => Hs.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite 2?nth_default ?size_map //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply nth_map.",
            "VernacExtend",
            "efd529d8fa8f15409ff6db5dcc249c5e27f0f7d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma interp_ext : forall l1 l2 e, (forall k, nth 0 l1 k = nth 0 l2 k) -> interp l1 e = interp l2 e.",
            "VernacStartTheoremProof",
            "6e3a599742a814f4bcaeab7aa18752e00be41e1d"
        ],
        [
            "intros l1 l2 e Hl.",
            "VernacExtend",
            "dff07aae9c6a3ee007b2f350dc89602327c59259"
        ],
        [
            "revert l1 l2 Hl.",
            "VernacExtend",
            "836b9876cc98c1b8cc432ab6dcde6124705acfdb"
        ],
        [
            "induction e using expr_ind'.",
            "VernacExtend",
            "6a34bff1f7203e29c107a185ad58979b6f3e856b"
        ],
        [
            "now simpl => l1 l2 Hl.",
            "VernacExtend",
            "11b5461ec014b2c024111f05e9fbd95b72b076c3"
        ],
        [
            "simpl => l1 l2 Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply apply_ext.",
            "VernacExtend",
            "4eb7dcf62760237fa17ced634daa34a66caf7a6e"
        ],
        [
            "intros n _.",
            "VernacExtend",
            "41d8c008b414e870b3087cc6cbefb3f03d1da66e"
        ],
        [
            "revert n.",
            "VernacExtend",
            "dfe642a551e2c983f16aa55151347c851d754720"
        ],
        [
            "induction le.",
            "VernacExtend",
            "3c5d47e111a78b836cf99158239e39e0e694e505"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl in H |- *.",
            "VernacExtend",
            "83f76a13eeb5aba1a599462a48e3e57b0a31d2bc"
        ],
        [
            "destruct H as (Ha,Hb).",
            "VernacExtend",
            "0271ae4b34154abfded579fdaa0113115dc74c54"
        ],
        [
            "intros [|n].",
            "VernacExtend",
            "43bec745667d2fc0e7c5252f9dc776453f0890e2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now apply Ha.",
            "VernacExtend",
            "7437b013620dcad02ad2116f39228c11f88e39f5"
        ],
        [
            "now apply IHle.",
            "VernacExtend",
            "a1b3a3064cd18a267e5b8c2830ace8a48408d76f"
        ],
        [
            "simpl => l1 l2 Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "unfold Derive_Rn.",
            "VernacExtend",
            "59a46db28515156db9499f1e926e54ff9778ec31"
        ],
        [
            "assert (Hn: forall n, nth 0 (map (interp l1) le) n = nth 0 (map (interp l2) le) n).",
            "VernacExtend",
            "4be72a4e3a5a72f05c4fa92d46f20790ecb0ecdd"
        ],
        [
            "intros p.",
            "VernacExtend",
            "223e3cb70cff95972873720780e7195aeb57b9fc"
        ],
        [
            "rewrite (nth_map' (Cst 0) (interp l1)) (nth_map' (Cst 0) (interp l2)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply (foldr_prop_nth _ _ _ H).",
            "VernacExtend",
            "bd518a2ffc3fc8f32146f02ffdf74e9196f02f59"
        ],
        [
            "rewrite Hn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Derive_ext => t.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply apply_ext => p Hp.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now rewrite Hn.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "simpl => l1 l2 Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply IHe1.",
            "VernacExtend",
            "ddaa93aa43ddb4f900e76824ad1deadc6c04a2ef"
        ],
        [
            "intros [|k].",
            "VernacExtend",
            "17ed4cb94ccbe888b3457daf9accd95143560509"
        ],
        [
            "now apply IHe2.",
            "VernacExtend",
            "ad0d075ae3d767aeda9053db59968c9f5b8909bf"
        ],
        [
            "apply Hl.",
            "VernacExtend",
            "02df804151e4adadf6baf4a5ea9b58097df0f911"
        ],
        [
            "intros l1 l2 Hl.",
            "VernacExtend",
            "c980f7f2a802e7939e11e601682f9746e65037f2"
        ],
        [
            "rewrite /interp -/interp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply IHe1 => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite 2!nth_set_nth /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case eqtype.eq_op.",
            "VernacExtend",
            "e8c563d43573662672eaee5952d723379732123f"
        ],
        [
            "now apply IHe2.",
            "VernacExtend",
            "ad0d075ae3d767aeda9053db59968c9f5b8909bf"
        ],
        [
            "apply Hl.",
            "VernacExtend",
            "02df804151e4adadf6baf4a5ea9b58097df0f911"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl => l1 l2 Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "now apply IHe1.",
            "VernacExtend",
            "c175ccb3c07c4a158940a44a7cba42e92bcb57a4"
        ],
        [
            "now apply IHe2.",
            "VernacExtend",
            "ad0d075ae3d767aeda9053db59968c9f5b8909bf"
        ],
        [
            "simpl => l1 l2 Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "now apply IHe.",
            "VernacExtend",
            "e420788c115cf43b5aec20f81e81ec6d5f73997f"
        ],
        [
            "simpl => l1 l2 Hl.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (IHe2 l1 l2 Hl) (IHe3 l1 l2 Hl).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply RInt_ext => x _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply IHe1.",
            "VernacExtend",
            "ddaa93aa43ddb4f900e76824ad1deadc6c04a2ef"
        ],
        [
            "intros [|k].",
            "VernacExtend",
            "17ed4cb94ccbe888b3457daf9accd95143560509"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "apply Hl.",
            "VernacExtend",
            "02df804151e4adadf6baf4a5ea9b58097df0f911"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma interp_set_nth : forall n l e, interp (set_nth 0 l n (nth 0 l n)) e = interp l e.",
            "VernacStartTheoremProof",
            "d64773fbd489d085ecebcb631c7c281ce0d0cadc"
        ],
        [
            "intros n l e.",
            "VernacExtend",
            "3152c72fd100824c81835b214e93a4a991b97e2f"
        ],
        [
            "apply interp_ext.",
            "VernacExtend",
            "ad38074b3d1cfc784bf0fbd97e7ee76dff8a1efd"
        ],
        [
            "intros k.",
            "VernacExtend",
            "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
        ],
        [
            "rewrite nth_set_nth /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case ssrnat.eqnP.",
            "VernacExtend",
            "2d5c8f6ed702cd80d860357e5a77c226ce0cacd3"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "now apply f_equal.",
            "VernacExtend",
            "2be51066ac0713afbd2686f67010448cf5cd7ac9"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma interp_domain_ext : forall l1 l2 b, (forall k, nth 0 l1 k = nth 0 l2 k) -> interp_domain l1 b -> interp_domain l2 b.",
            "VernacStartTheoremProof",
            "9411fe4cf7fe4d07541d0438304140e4b77980b8"
        ],
        [
            "intros l1 l2 b Hl.",
            "VernacExtend",
            "2110ec739c1b11dc51a168e41eb8908627209227"
        ],
        [
            "revert l1 l2 Hl.",
            "VernacExtend",
            "836b9876cc98c1b8cc432ab6dcde6124705acfdb"
        ],
        [
            "induction b using domain_ind' ; try easy ; simpl => l1 l2 Hl.",
            "VernacExtend",
            "ef32396349412c8767716418a1e649cf9250f066"
        ],
        [
            "by rewrite (interp_ext _ _ _ Hl).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "now rewrite -(eq_map (fun e => interp_ext _ _ e Hl)).",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "intros Hb.",
            "VernacExtend",
            "bf28ce675f0c35f7a6ee80ebcc4714ae6cf11f4b"
        ],
        [
            "now rewrite -(eq_map (fun e => interp_ext _ _ e Hl)).",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite Hl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply continuity_pt_ext => x.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply interp_ext => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite 2!nth_set_nth /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now case eqtype.eq_op.",
            "VernacExtend",
            "81dac4791e6af713e255e6e9ba5f2a42ea189f9d"
        ],
        [
            "rewrite 2!Hl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply continuity_2d_pt_ext => x y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply interp_ext => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite 2!nth_set_nth /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case eqtype.eq_op => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite 2!nth_set_nth /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now case eqtype.eq_op.",
            "VernacExtend",
            "81dac4791e6af713e255e6e9ba5f2a42ea189f9d"
        ],
        [
            "rewrite 2!(interp_ext _ _ _ Hl).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply ex_RInt_ext.",
            "VernacExtend",
            "51adf38d2a1d01657c7d04f4d2f6d47917651f1c"
        ],
        [
            "intros x _.",
            "VernacExtend",
            "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
        ],
        [
            "apply interp_ext.",
            "VernacExtend",
            "ad38074b3d1cfc784bf0fbd97e7ee76dff8a1efd"
        ],
        [
            "intros [|k].",
            "VernacExtend",
            "17ed4cb94ccbe888b3457daf9accd95143560509"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "apply Hl.",
            "VernacExtend",
            "02df804151e4adadf6baf4a5ea9b58097df0f911"
        ],
        [
            "rewrite Hl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply filter_imp => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite 2!(interp_ext _ _ _ Hl).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply ex_RInt_ext.",
            "VernacExtend",
            "51adf38d2a1d01657c7d04f4d2f6d47917651f1c"
        ],
        [
            "intros x _.",
            "VernacExtend",
            "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
        ],
        [
            "apply interp_ext.",
            "VernacExtend",
            "ad38074b3d1cfc784bf0fbd97e7ee76dff8a1efd"
        ],
        [
            "intros [|k].",
            "VernacExtend",
            "17ed4cb94ccbe888b3457daf9accd95143560509"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "now rewrite /= 2!nth_set_nth /= Hl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "intros (d,H).",
            "VernacExtend",
            "b9f87ec29410a0d268867e68404dac5bdcc53919"
        ],
        [
            "exists d.",
            "VernacExtend",
            "39cea21d4e04fa9463f57be4e5a423277681d456"
        ],
        [
            "rewrite -Hl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: H ; apply filter_imp => y.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite (interp_ext _ _ _ Hl).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply ex_RInt_ext.",
            "VernacExtend",
            "51adf38d2a1d01657c7d04f4d2f6d47917651f1c"
        ],
        [
            "intros x _.",
            "VernacExtend",
            "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
        ],
        [
            "apply interp_ext.",
            "VernacExtend",
            "ad38074b3d1cfc784bf0fbd97e7ee76dff8a1efd"
        ],
        [
            "intros [|k].",
            "VernacExtend",
            "17ed4cb94ccbe888b3457daf9accd95143560509"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "now rewrite /= 2!nth_set_nth /= Hl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "induction ld.",
            "VernacExtend",
            "107e2470b62b32ff0e5a1b77eef9296bd4aea616"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl in H |- *.",
            "VernacExtend",
            "83f76a13eeb5aba1a599462a48e3e57b0a31d2bc"
        ],
        [
            "intros (H1,H2).",
            "VernacExtend",
            "cbe4fae06561c7d97a3cceb65a0c2d56dc027b9e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (proj1 H _ _ Hl H1).",
            "VernacExtend",
            "909c32f92a7c1f77360114475637e8fd6e69f2e6"
        ],
        [
            "now apply IHld.",
            "VernacExtend",
            "c9230ba54c9a76d622b02444d96b0e8edb91690e"
        ],
        [
            "rewrite 2!(interp_ext _ _ _ Hl).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros H t Ht.",
            "VernacExtend",
            "1de58bb06ab2b1d021dff764cece3818599f3117"
        ],
        [
            "apply (IHb (t :: l1)).",
            "VernacExtend",
            "d5d703fa1bd840acd01ea5c384823405af59a42e"
        ],
        [
            "intros [|k].",
            "VernacExtend",
            "17ed4cb94ccbe888b3457daf9accd95143560509"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "apply Hl.",
            "VernacExtend",
            "02df804151e4adadf6baf4a5ea9b58097df0f911"
        ],
        [
            "now apply H.",
            "VernacExtend",
            "e28edffe226486c29d50d204164561fb199b8c97"
        ],
        [
            "apply IHb.",
            "VernacExtend",
            "55d9e7ec2f3b99e177dec889d87448cefeb44ac4"
        ],
        [
            "intros [|k].",
            "VernacExtend",
            "17ed4cb94ccbe888b3457daf9accd95143560509"
        ],
        [
            "now apply interp_ext.",
            "VernacExtend",
            "a06feaa664f986d39174179b253149d0f679694c"
        ],
        [
            "apply Hl.",
            "VernacExtend",
            "02df804151e4adadf6baf4a5ea9b58097df0f911"
        ],
        [
            "rewrite Hl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply filter_imp => y.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply IHb => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now rewrite 2!nth_set_nth /= Hl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite 2!Hl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply locally_2d_impl.",
            "VernacExtend",
            "79216e466e9b140cb94fb885c192fee3ad8e1edf"
        ],
        [
            "apply locally_2d_forall => u v.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply IHb => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite 2!nth_set_nth /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case eqtype.eq_op => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite 2!nth_set_nth /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now case eqtype.eq_op.",
            "VernacExtend",
            "81dac4791e6af713e255e6e9ba5f2a42ea189f9d"
        ],
        [
            "rewrite Hl 2!(interp_ext _ _ _ Hl).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros (d,Hd).",
            "VernacExtend",
            "e9c112965f05db158ecf7a274a4e808e8c381359"
        ],
        [
            "exists d => t u Ht Hu.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: IHb (Hd t u Ht Hu).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "intros [|k].",
            "VernacExtend",
            "17ed4cb94ccbe888b3457daf9accd95143560509"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "now rewrite /= 2!nth_set_nth /= Hl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma interp_domain_set_nth : forall n l b, interp_domain (set_nth 0 l n (nth 0 l n)) b <-> interp_domain l b.",
            "VernacStartTheoremProof",
            "7f5b06a6f4bc574267414c873e8f73b62e4fdda8"
        ],
        [
            "intros n l b.",
            "VernacExtend",
            "4ec1548a9a44e62bf50a74691a9341756aa30945"
        ],
        [
            "split ; apply interp_domain_ext => k.",
            "VernacExtend",
            "6bff1d22f26f73e2af6bbb2e9c65e0bfad7c6104"
        ],
        [
            "rewrite nth_set_nth /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case ssrnat.eqnP.",
            "VernacExtend",
            "2d5c8f6ed702cd80d860357e5a77c226ce0cacd3"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "now apply f_equal.",
            "VernacExtend",
            "2be51066ac0713afbd2686f67010448cf5cd7ac9"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "rewrite nth_set_nth /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case ssrnat.eqnP.",
            "VernacExtend",
            "2d5c8f6ed702cd80d860357e5a77c226ce0cacd3"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "now apply f_equal.",
            "VernacExtend",
            "2be51066ac0713afbd2686f67010448cf5cd7ac9"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition index_not_const l n := filter (fun v => ~~ is_const (nth (Cst 0) l v) n) (iota 0 (size l)).",
            "VernacDefinition",
            "c88c7ca4d7219cb7a046429be1fb0b7c1f32930d"
        ],
        [
            "Lemma uniq_index_not_const : forall n l, uniq (T:=ssrnat.nat_eqType) (index_not_const l n).",
            "VernacStartTheoremProof",
            "e52a6129d2bee441a7ef50224f0301cbe5694f0b"
        ],
        [
            "intros n l.",
            "VernacExtend",
            "d15a0b6304d5de3931ed94d7fd1378867aca9f17"
        ],
        [
            "unfold index_not_const.",
            "VernacExtend",
            "f4d1f8af2e0346194870a6749ff90d793ff0eedf"
        ],
        [
            "apply filter_uniq.",
            "VernacExtend",
            "6274bbc75d1df4fed6e3ab84f97cc64110c21398"
        ],
        [
            "apply iota_uniq.",
            "VernacExtend",
            "cd6089f164e6328583f8d8bd5e4296cad3ecaafd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical ssrnat.nat_eqType.",
            "VernacCanonical",
            "0a8de34fa842768b415eeb987b04b90645296313"
        ],
        [
            "Lemma index_not_const_correct : forall n l (k : nat), not (in_mem k (mem (index_not_const l n))) -> is_const (nth (Cst 0) l k) n = true.",
            "VernacStartTheoremProof",
            "1d77cd3c16cb06cb554cdc7c0011942a7c6e4b45"
        ],
        [
            "intros n l k.",
            "VernacExtend",
            "1c7f86e0028f5520b060c312e1121eb557bac846"
        ],
        [
            "rewrite /index_not_const (@mem_filter ssrnat.nat_eqType) mem_iota /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ssrnat.add0n.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case E: ssrnat.leq.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case is_const.",
            "VernacExtend",
            "43533b2121bd4abf69daa75fea711042519546ed"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "now elim.",
            "VernacExtend",
            "2b13d7e32b7c2253786b05d87633ef340e5a61df"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "rewrite nth_default //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "revert E.",
            "VernacExtend",
            "d662cded303c06da8a5e4209974759f5e1f58a8d"
        ],
        [
            "rewrite ssrnat.ltnNge.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now case ssrnat.leq.",
            "VernacExtend",
            "a03c99c6bb447ede55691a331d89b363f4923210"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma interp_AppExt_set_nth_not_const : forall k f le l n x, interp (set_nth 0 l n x) (AppExt k f le) = apply k f (foldr (fun v acc i => if ssrnat.eqn i v then interp (set_nth 0 l n x) (nth (Cst 0) le v) else acc i) (nth 0 (map (interp l) le)) (index_not_const le n)).",
            "VernacStartTheoremProof",
            "955c10f8a62f0ca50adca2640aac23856968d71e"
        ],
        [
            "intros k f le l n x.",
            "VernacExtend",
            "499c92c7828a24c161f4fc781f3fde8cd9e5d2df"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply apply_ext => m _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (index_not_const_correct n le m).",
            "VernacExtend",
            "96823b933ecad5e53d82275232148a08e44c7d54"
        ],
        [
            "induction (index_not_const le n) as [|t s IHs].",
            "VernacExtend",
            "250cf44a6455caf1ed6190b9e0391c1e6e7e9b57"
        ],
        [
            "simpl => Hp.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case (ssrnat.leqP (size le) m) => Hs.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite 2?nth_default ?size_map //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite 2?(nth_map (Cst 0)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (is_const_correct _ n _ l x (nth 0 l n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply interp_set_nth.",
            "VernacExtend",
            "a783486c4f5fe9e5f8a115a364259d67ae5d4df7"
        ],
        [
            "now apply Hp.",
            "VernacExtend",
            "d0d05fd0d86482bd1c693dda5b76cb3301f48ede"
        ],
        [
            "rewrite (@in_cons ssrnat.nat_eqType) /= -ssrnat.eqnE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case E: (ssrnat.eqn m t).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "rewrite (ssrnat.eqnP E).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case (ssrnat.leqP (size le) t) => Hs.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now rewrite 2?nth_default ?size_map.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "now rewrite (nth_map (Cst 0)).",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply IHs.",
            "VernacExtend",
            "11b7ae33b06262d123e684b34b43a53f41906714"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint D (e : expr) n {struct e} : expr * domain := match e with | Var v => (if ssrnat.eqn v n then Cst 1 else Cst 0, Always) | Cst _ => (Cst 0, Always) | AppExt k f le => let lnc := index_not_const le n in let ld := map (fun e => D e n) le in match lnc with | nil => (Cst 0, Always) | v :: nil => let '(d1,d2) := nth (Cst 0,Never) ld v in (Binary Emult d1 (AppExtD k f v le), And (Derivable v k f le :: d2 :: nil)) | v1 :: v2 :: nil => let '(d1,d2) := nth (Cst 0,Never) ld v1 in let '(d3,d4) := nth (Cst 0,Never) ld v2 in (Binary Eplus (Binary Emult d1 (AppExtD k f v1 le)) (Binary Emult d3 (AppExtD k f v2 le)), And (Derivable2 v1 v2 k f le :: d2 :: Derivable v2 k f le :: d4 :: nil)) | _ => (Cst 0, Never) end | AppExtD k f v le => (Cst 0, Never) | App f e => (Cst 0, Never) | Subst f e => (Cst 0, Never) | Binary b e1 e2 => let '(a1,b1) := D e1 n in let '(a2,b2) := D e2 n in match b, is_const e1 n, is_const e2 n with | Eplus, true, _ => (a2, b2) | Eplus, _, true => (a1, b1) | Eplus, _, _ => (Binary Eplus a1 a2, And (b1::b2::nil)) | Emult, true, _ => (Binary Emult e1 a2, b2) | Emult, _, true => (Binary Emult a1 e2, b1) | Emult, _, _ => (Binary Eplus (Binary Emult a1 e2) (Binary Emult e1 a2), And (b1::b2::nil)) end | Unary u e => let '(a,b) := D e n in match u with | Eopp => (Unary Eopp a, b) | Einv => (Binary Emult (Unary Eopp a) (Unary Einv (Binary Emult e e)), And (b:: (Partial (fun x => x <> 0) e) :: nil)) | Efct f f' H => (Binary Emult a (AppExt 1 f' [:: e]), b) | Efct' f f' df H => (Binary Emult a (AppExt 1 f' [:: e]), And (b :: (Partial df e) :: nil)) end | Int f e1 e2 => let '(a1,b1) := D e1 n in let '(a2,b2) := D e2 n in let '(a3,b3) := D f (S n) in match is_const f (S n), is_const e1 n, is_const e2 n with | true, true, _ => (Binary Emult a2 (App f e2), And (b2::(Integrable f e1 e2)::(Forone e2 (Locally 0 (Continuous 0 f)))::nil)) | true, false, true => (Unary Eopp (Binary Emult a1 (App f e1)), And (b1::(Integrable f e1 e2)::(Forone e1 (Locally 0 (Continuous 0 f)))::nil)) | true, false, false => (Binary Eplus (Binary Emult a2 (App f e2)) (Unary Eopp (Binary Emult a1 (App f e1))), And (b1::b2::(Integrable f e1 e2)::(Forone e1 (Locally 0 (Continuous 0 f)))::(Forone e2 (Locally 0 (Continuous 0 f)))::nil)) | false, true, true => (Int a3 e1 e2, And ((ForallWide n e1 e2 b3)::(Locally n (Integrable f e1 e2)):: (Forall e1 e2 (Continuous2 (S n) 0 a3))::nil)) | false, false, true => (Binary Eplus (Unary Eopp (Binary Emult a1 (App f e1))) (Int a3 e1 e2), And ((Forone e1 (Locally2 (S n) 0 (Continuous2 (S n) 0 a3))):: (Forall e1 e2 (Continuous2 (S n) 0 a3)):: b1::(Forone e1 (Locally 0 (Continuous 0 f))):: ParamIntegrable n f e1 e2::LocallyParamIntegrable n f e1:: ForallWide n e1 e2 b3::nil)) | false, true, false => (Binary Eplus (Binary Emult a2 (App f e2)) (Int a3 e1 e2), And ((Forone e2 (Locally2 (S n) 0 (Continuous2 (S n) 0 a3))):: (Forall e1 e2 (Continuous2 (S n) 0 a3)):: b2::(Forone e2 (Locally 0 (Continuous 0 f))):: ParamIntegrable n f e1 e2::LocallyParamIntegrable n f e2:: ForallWide n e1 e2 b3::nil)) | false, false, false => (Binary Eplus (Binary Eplus (Binary Emult a2 (App f e2)) (Unary Eopp (Binary Emult a1 (App f e1)))) (Int a3 e1 e2), And ((Forone e1 (Locally2 (S n) 0 (Continuous2 (S n) 0 a3))):: (Forone e2 (Locally2 (S n) 0 (Continuous2 (S n) 0 a3))):: (Forall e1 e2 (Continuous2 (S n) 0 a3)):: b1::(Forone e1 (Locally 0 (Continuous 0 f))):: b2::(Forone e2 (Locally 0 (Continuous 0 f))):: ParamIntegrable n f e1 e2::LocallyParamIntegrable n f e1::LocallyParamIntegrable n f e2:: ForallWide n e1 e2 b3::nil)) end end.",
            "VernacFixpoint",
            "e6abe97372f4d0788a391ee4abbfd2c81659d97c"
        ],
        [
            "Lemma D_correct : forall (e : expr) l n, let '(a,b) := D e n in interp_domain l b -> is_derive (fun x => interp (set_nth R0 l n x) e) (nth R0 l n) (interp l a).",
            "VernacStartTheoremProof",
            "a097d159cf7ed1e13a7ed1c86997ec240298b999"
        ],
        [
            "induction e using expr_ind'.",
            "VernacExtend",
            "6a34bff1f7203e29c107a185ad58979b6f3e856b"
        ],
        [
            "simpl => l k _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply is_derive_ext with (fun x => if ssrnat.eqn n k then x else nth 0 l n).",
            "VernacExtend",
            "4132c619d3615a3e524a879f142de9401d967884"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "now rewrite nth_set_nth.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "case ssrnat.eqnP => [H|H].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply filterdiff_id.",
            "VernacExtend",
            "12259268ad0a0068e2e8b64e904b09a3cdea1818"
        ],
        [
            "simpl => y ; apply sym_eq, Rmult_1_r.",
            "VernacExtend",
            "1cbc6a9998da090a34586486f6ea8f856867a9a4"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply filterdiff_const.",
            "VernacExtend",
            "c4a3824a24254aaf40d1d1004814f7d9b4bb02eb"
        ],
        [
            "simpl => y ; apply sym_eq, Rmult_0_r.",
            "VernacExtend",
            "1eb16c6bce953e6387adf0d5b3989cfb16a4b5b1"
        ],
        [
            "simpl D => l n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "assert (Dle: forall v n l, let '(a,b) := D (nth (Cst 0) le v) n in interp_domain l b -> is_derive (fun x => interp (set_nth 0 l n x) (nth (Cst 0) le v)) (nth 0 l n) (interp l a)).",
            "VernacExtend",
            "911866700474d1ce3a17d816e0767848cf23a916"
        ],
        [
            "clear n l.",
            "VernacExtend",
            "d9c8b443a1ce039ee0da9a7549780cdda0ed1baf"
        ],
        [
            "induction le => v n l.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite nth_nil /= => _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: is_derive_const.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "simpl in H |- *.",
            "VernacExtend",
            "83f76a13eeb5aba1a599462a48e3e57b0a31d2bc"
        ],
        [
            "destruct v as [|v].",
            "VernacExtend",
            "c45b7b95df36b18b86dd5e37b2829eb83f1c8e4b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now apply IHle.",
            "VernacExtend",
            "a1b3a3064cd18a267e5b8c2830ace8a48408d76f"
        ],
        [
            "move: (interp_AppExt_set_nth_not_const k f le l n) (uniq_index_not_const n le).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case (index_not_const le n) => [|v1 [|v2 [|v3 q]]] /= Hc.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "intros _ _.",
            "VernacExtend",
            "95d87eaa905098932d683036fadece3b7ae69933"
        ],
        [
            "apply is_derive_ext with (fun x => apply k f (nth 0 (map (interp l) le))).",
            "VernacExtend",
            "e2400ac19b13ca8b8ed91a09e362e5b8b8588c4a"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply Hc.",
            "VernacExtend",
            "b900f3304ba75d1bc8becba9c3e19edfabbb7700"
        ],
        [
            "apply: is_derive_const.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "case (ssrnat.leqP (size le) v1) => Hv1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite nth_default ?size_map //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now intros (_&F&_).",
            "VernacExtend",
            "03c7b2cb88a0ae480202cf1ac05912df038d3fff"
        ],
        [
            "rewrite (nth_map (Cst 0)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (Dle v1 n l).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case (D (nth (Cst 0) le v1)) => /= [d1 d2] {Dle} Dle [H1 [H2 _]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (Dle H2).",
            "VernacExtend",
            "7a295a756d1ee0897ade91c63d7cb9578150aaee"
        ],
        [
            "apply is_derive_ext with (fun x => apply k f (fun i => if ssrnat.eqn i v1 then interp (set_nth 0 l n x) (nth (Cst 0) le v1) else nth 0 (map (interp l) le) i)).",
            "VernacExtend",
            "e48aaa2e96cea0c48673e9ace9d37747a42a9ee7"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "now apply sym_eq.",
            "VernacExtend",
            "fef6d39327ad6dbcb8bd592a66f35c86d0ac26ba"
        ],
        [
            "apply: (is_derive_comp (fun x => apply k f (fun i => if ssrnat.eqn i v1 then x else nth 0 (map (interp l) le) i))) Dle.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(nth_map (Cst 0) 0) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply Derive_correct.",
            "VernacExtend",
            "59cf6ada08ffe860cb73a9fcbe9605f7d8bbc2b3"
        ],
        [
            "intros Hv.",
            "VernacExtend",
            "672b82ed856df7a1700ed9629182e30a87eecbd8"
        ],
        [
            "case (ssrnat.leqP (size le) v1) => Hv1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite nth_default ?size_map //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case (nth (Cst 0, Never) (map (fun e => D e n) le) v2) => [d3 d4].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now intros (_&F&_).",
            "VernacExtend",
            "03c7b2cb88a0ae480202cf1ac05912df038d3fff"
        ],
        [
            "rewrite (nth_map (Cst 0)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (Dle v1 n l).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case (D (nth (Cst 0) le v1)) => /= [d1 d2] Dle1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case (ssrnat.leqP (size le) v2) => Hv2.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite nth_default ?size_map //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now intros (_&_&_&F&_).",
            "VernacExtend",
            "fd6b85fb7699879b2d5f0d3e8b1a0e6fd31266f6"
        ],
        [
            "rewrite (nth_map (Cst 0)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (Dle v2 n l).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case (D (nth (Cst 0) le v2)) => /= [d3 d4] Dle2 {Dle} [[H1 H2] [H3 [H4 [H5 _]]]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Rmult_comm (Rmult_comm (interp l d3) _).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "specialize (Dle1 H3).",
            "VernacExtend",
            "48dc661364bbbcc9d83137964259cd606b34a814"
        ],
        [
            "specialize (Dle2 H5).",
            "VernacExtend",
            "00fc3a88efa6a5d3c0144d5f39c540d449f1dad9"
        ],
        [
            "set (g u v := apply k f (fun i => if ssrnat.eqn i v1 then u else if ssrnat.eqn i v2 then v else nth 0 (map (interp l) le) i)).",
            "VernacExtend",
            "905b5e169aed09c35b8356b10562acf5fae4f7cc"
        ],
        [
            "apply is_derive_ext with (fun x => g (interp (set_nth 0 l n x) (nth (Cst 0) le v1)) (interp (set_nth 0 l n x) (nth (Cst 0) le v2))).",
            "VernacExtend",
            "1c84eb686a8a2077ed91c73384ba61b8dda99f61"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "unfold g.",
            "VernacExtend",
            "fd78415b188602b878d030c2cbc915af33ab1e1d"
        ],
        [
            "now apply sym_eq.",
            "VernacExtend",
            "fef6d39327ad6dbcb8bd592a66f35c86d0ac26ba"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "apply derivable_pt_lim_comp_2d with (f1 := g).",
            "VernacExtend",
            "7f36c1ad4eb59ef8dde290c94171cbcd4ffc9546"
        ],
        [
            "rewrite 2!interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "assert (H1': ex_derive_Rn k f v1 (nth 0 (map (interp l) le))).",
            "VernacExtend",
            "470b4fc8ac5dface3fb4e98e1ade830bc51ed92b"
        ],
        [
            "apply locally_2d_singleton in H1.",
            "VernacExtend",
            "c43622ed70158027f04e3ea8461e1b53e3160c33"
        ],
        [
            "unfold ex_derive_Rn in H1 |- *.",
            "VernacExtend",
            "eb6a5bbe5c2de34ddd697f3424c5dfcb54e61a62"
        ],
        [
            "rewrite ssrnat.eqnE eqtype.eq_refl in H1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: ex_derive_ext H1 => t.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply apply_ext => p Hp.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -ssrnat.eqnE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case E: (ssrnat.eqn p v1) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case E': (ssrnat.eqn p v2) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "now rewrite (ssrnat.eqnP E').",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite /Derive_Rn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(nth_map (Cst 0) 0 (interp l) Hv1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(nth_map (Cst 0) 0 (interp l) Hv2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(Derive_ext (fun x => g x (nth 0 (map (interp l) le) v2))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply filterdiff_differentiable_pt_lim.",
            "VernacExtend",
            "a7e2fb86e8499f521c0bef586436fa4ace753499"
        ],
        [
            "eapply filterdiff_ext_lin.",
            "VernacExtend",
            "95ec423140e8c1a0927774f978482d971b43a652"
        ],
        [
            "apply (is_derive_filterdiff g).",
            "VernacExtend",
            "0a176bcfddb24f809e36bf17173fcd6266d968e3"
        ],
        [
            "apply filter_imp with ( 2 := proj1 (locally_2d_locally _ _ _) H1).",
            "VernacExtend",
            "5dbaa2da516b60cccfaced58ce4a39a8e035e42c"
        ],
        [
            "case => u v H'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "unfold g.",
            "VernacExtend",
            "fd78415b188602b878d030c2cbc915af33ab1e1d"
        ],
        [
            "unfold ex_derive_Rn in H'.",
            "VernacExtend",
            "71b79ae886623f2df1fceda76b23565a22223474"
        ],
        [
            "rewrite ssrnat.eqnE eqtype.eq_refl in H'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply Derive_correct.",
            "VernacExtend",
            "054d04eb27571fc0e213d6f8fb7c853041966304"
        ],
        [
            "apply: ex_derive_ext H' => t.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply apply_ext => p Hp.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -ssrnat.eqnE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now case E: (ssrnat.eqn p v1).",
            "VernacExtend",
            "9b5dc78914ea71d33248c1f7ec7d76670ed43b8d"
        ],
        [
            "simpl ; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "apply is_derive_ext with (2 := Derive_correct _ _ H4) => t.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply apply_ext => p Hp.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case E: (ssrnat.eqn p v1) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite (ssrnat.eqnP E).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "revert Hv.",
            "VernacExtend",
            "388988f478ffe44c03f27b9cc825df7ab781940a"
        ],
        [
            "rewrite /in_mem /= ssrnat.eqnE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now case eqtype.eq_op.",
            "VernacExtend",
            "81dac4791e6af713e255e6e9ba5f2a42ea189f9d"
        ],
        [
            "apply continuity_2d_pt_filterlim in H2.",
            "VernacExtend",
            "d9763ec06e3a2d97ce57a70f83f6615b88124536"
        ],
        [
            "apply: continuous_ext H2 => [[u v]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "unfold Derive_Rn.",
            "VernacExtend",
            "59a46db28515156db9499f1e926e54ff9778ec31"
        ],
        [
            "rewrite ssrnat.eqnE eqtype.eq_refl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Derive_ext => t.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply apply_ext => p Hp.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -ssrnat.eqnE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now case E: (ssrnat.eqn p v1).",
            "VernacExtend",
            "9b5dc78914ea71d33248c1f7ec7d76670ed43b8d"
        ],
        [
            "intros t ; reflexivity.",
            "VernacExtend",
            "9b9ae9ae3362eb4ba758e93966b2ef7127beef5c"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "apply apply_ext.",
            "VernacExtend",
            "4eb7dcf62760237fa17ced634daa34a66caf7a6e"
        ],
        [
            "intros p Hp.",
            "VernacExtend",
            "cf737bd4e185c03175335af1ca6ae52da34cba56"
        ],
        [
            "case (ssrnat.eqn p v1) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case E: (ssrnat.eqn p v2) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "now rewrite (ssrnat.eqnP E).",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "apply is_derive_Reals, Dle1.",
            "VernacExtend",
            "b4ea85d88ac152c70132ce9f237b1ab2ca02c825"
        ],
        [
            "apply is_derive_Reals, Dle2.",
            "VernacExtend",
            "412ff6cc1c57741c78618c7752992ca735d64ee5"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl => l p [].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "simpl => l n [].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "simpl => l n [].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "simpl => l n _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: is_derive_const.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "simpl => l n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (IHe1 l n).",
            "VernacExtend",
            "76d3acdc6c2d984f806c3fd6fb5d502c2840d8a6"
        ],
        [
            "specialize (IHe2 l n).",
            "VernacExtend",
            "c63c8e92bd530247222efddc1fbc5db199a5a3cf"
        ],
        [
            "destruct (D e1 n) as (a1,b1).",
            "VernacExtend",
            "a5cdd95ad5e2bb974eadcba82679398531bd6b14"
        ],
        [
            "destruct (D e2 n) as (a2,b2).",
            "VernacExtend",
            "4fe9390dafeca5008a6da0f33f4d2677cf837722"
        ],
        [
            "case C1: (is_const e1 n).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "assert (H1 := is_const_correct e1 n C1 l).",
            "VernacExtend",
            "0a2fcd40bb772d1fd174a7dfd57f70f64264c701"
        ],
        [
            "case o ; intros H2.",
            "VernacExtend",
            "d3e39f70e36f5366c140cd384d2c7024cbe8f34d"
        ],
        [
            "rewrite -(Rplus_0_l (interp l a2)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: is_derive_plus.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply is_derive_ext with (fun x => interp (set_nth 0 l n 0) e1).",
            "VernacExtend",
            "09b21de36fbbd394d9b2ac8cbe5f051ece79b7e3"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply: is_derive_const.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "now apply IHe2.",
            "VernacExtend",
            "ad0d075ae3d767aeda9053db59968c9f5b8909bf"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (interp l e1 * interp l a2) with (0 * interp (set_nth 0 l n (nth 0 l n)) e2 + interp l e1 * interp l a2) by ring.",
            "VernacExtend",
            "04eca406a00cee320f13fdd9a900cfbe1f724513"
        ],
        [
            "rewrite -(interp_set_nth n _ e1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "apply (derivable_pt_lim_mult (fun x => interp (set_nth 0 l n x) e1) (fun x => interp (set_nth 0 l n x) e2)).",
            "VernacExtend",
            "378774712a9a7a267ed9778ea7b39b504c5163a7"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "apply is_derive_ext with (fun x => interp (set_nth 0 l n 0) e1).",
            "VernacExtend",
            "09b21de36fbbd394d9b2ac8cbe5f051ece79b7e3"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply: is_derive_const.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "now apply IHe2.",
            "VernacExtend",
            "ad0d075ae3d767aeda9053db59968c9f5b8909bf"
        ],
        [
            "case C2: (is_const e2 n) => {C1}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "assert (H2 := is_const_correct e2 n C2 l).",
            "VernacExtend",
            "69ba3788349d89edc7bb7c2e06e8d476f0aa6942"
        ],
        [
            "case o ; intros H1.",
            "VernacExtend",
            "84598785c82d1fcba39bfd685ce8e58f24dcca5f"
        ],
        [
            "rewrite -(Rplus_0_r (interp l a1)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: is_derive_plus.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "now apply IHe1.",
            "VernacExtend",
            "c175ccb3c07c4a158940a44a7cba42e92bcb57a4"
        ],
        [
            "apply is_derive_ext with (fun x => interp (set_nth 0 l n 0) e2).",
            "VernacExtend",
            "eb896dc52eb9504d347c108bc162d61c91ea095d"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply: is_derive_const.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (interp l a1 * interp l e2) with (interp l a1 * interp l e2 + interp (set_nth 0 l n (nth 0 l n)) e1 * 0) by ring.",
            "VernacExtend",
            "2eee65fd508d0a65c67c66c1015caf9c0cef44c5"
        ],
        [
            "rewrite -(interp_set_nth n _ e2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "apply (derivable_pt_lim_mult (fun x => interp (set_nth 0 l n x) e1) (fun x => interp (set_nth 0 l n x) e2)).",
            "VernacExtend",
            "378774712a9a7a267ed9778ea7b39b504c5163a7"
        ],
        [
            "now apply is_derive_Reals, IHe1.",
            "VernacExtend",
            "5ce88b57f93b641af438c3f31575f378323f5425"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "apply is_derive_ext with (fun x => interp (set_nth 0 l n 0) e2).",
            "VernacExtend",
            "eb896dc52eb9504d347c108bc162d61c91ea095d"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply: is_derive_const.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "clear C2.",
            "VernacExtend",
            "8501ef7691a157069ea822a991ea4256a879dd60"
        ],
        [
            "case o ; simpl ; intros (H1&H2&_) ; specialize (IHe1 H1) ; specialize (IHe2 H2).",
            "VernacExtend",
            "a617e3c6cbcf77e1ab36270e01c7bf7c6ae13c5c"
        ],
        [
            "now apply: is_derive_plus.",
            "VernacExtend",
            "0dc5011c548c783484f0908a5a62d8c809131988"
        ],
        [
            "rewrite -(interp_set_nth n _ e1) -(interp_set_nth n _ e2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_Reals.",
            "VernacExtend",
            "50ffedc276e75c32dd6244cd073b4227506b2788"
        ],
        [
            "apply (derivable_pt_lim_mult (fun x => interp (set_nth 0 l n x) e1) (fun x => interp (set_nth 0 l n x) e2)) ; now apply is_derive_Reals.",
            "VernacExtend",
            "21175ab84cf57fa8be951788d0f063da381f1027"
        ],
        [
            "simpl => l n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (IHe l n).",
            "VernacExtend",
            "b745cfa361e8fba2526b789ad1c5650b43b2380b"
        ],
        [
            "destruct (D e n) as (a,b).",
            "VernacExtend",
            "f6d7422addc9a4e137db1a38c844bbdf68e7606d"
        ],
        [
            "case o.",
            "VernacExtend",
            "dcbfe54150ca4af82fdaa554ec33ad0102d913f0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply: is_derive_opp.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "now apply IHe.",
            "VernacExtend",
            "e420788c115cf43b5aec20f81e81ec6d5f73997f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros (H,(H0,_)).",
            "VernacExtend",
            "a6b5138487e9362ce6dd6b56e1f2640f3b984874"
        ],
        [
            "rewrite -{2}(Rmult_1_r (interp l e)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(interp_set_nth n l e) in H0 |-*.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_inv.",
            "VernacExtend",
            "cf5c1152da784b34bb3b57844076c5758c8383b3"
        ],
        [
            "now apply IHe.",
            "VernacExtend",
            "e420788c115cf43b5aec20f81e81ec6d5f73997f"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros f f' Df H.",
            "VernacExtend",
            "c860aaee7734ce3592a73a442335a3c2b01e88a1"
        ],
        [
            "rewrite -(interp_set_nth n l e).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: is_derive_comp.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply Df.",
            "VernacExtend",
            "6977200c5ed42f07be5c070bbdde02d6c91f143c"
        ],
        [
            "now apply IHe.",
            "VernacExtend",
            "e420788c115cf43b5aec20f81e81ec6d5f73997f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros f f' df Df (H,(H0,_)).",
            "VernacExtend",
            "33144125f800a05c5b1dae2de56a45c204ab169c"
        ],
        [
            "rewrite -(interp_set_nth n l e) in H0 |-*.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: is_derive_comp.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply Df.",
            "VernacExtend",
            "6977200c5ed42f07be5c070bbdde02d6c91f143c"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "now apply IHe.",
            "VernacExtend",
            "e420788c115cf43b5aec20f81e81ec6d5f73997f"
        ],
        [
            "simpl => l n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "specialize (IHe2 l n).",
            "VernacExtend",
            "c63c8e92bd530247222efddc1fbc5db199a5a3cf"
        ],
        [
            "specialize (IHe3 l n).",
            "VernacExtend",
            "846c7661f4d6b86185a8030cc2006ae6eca06704"
        ],
        [
            "move: (fun l => IHe1 l (S n)) => {IHe1} IHe1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "destruct (D e1 (S n)) as (a1,b1).",
            "VernacExtend",
            "501d1e4c274b2ba8f8c840afa0736c5dbb171912"
        ],
        [
            "destruct (D e2 n) as (a2,b2).",
            "VernacExtend",
            "4fe9390dafeca5008a6da0f33f4d2677cf837722"
        ],
        [
            "destruct (D e3 n) as (a3,b3).",
            "VernacExtend",
            "42027bfc46a0ea1bfc1c6fd15bbcc67508acf109"
        ],
        [
            "assert (HexI: forall f x, locally x (fun x => continuity_pt f x) -> exists eps : posreal, ex_RInt f (x - eps) (x + eps)).",
            "VernacExtend",
            "b22790368b7b5c4d5fc41ade3cddd3461b3bc90b"
        ],
        [
            "clear => f x [eps H].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exists (pos_div_2 eps).",
            "VernacExtend",
            "e2502591105fa2e42ef85ba46ac8de51c530f252"
        ],
        [
            "apply ex_RInt_Reals_1.",
            "VernacExtend",
            "156a2d7e5d7b08cd678bc7c1f27149c419d44841"
        ],
        [
            "apply RiemannInt_P6.",
            "VernacExtend",
            "f58df1c76e62aae5442214c55625a5a63bf1391e"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Rle_lt_trans with (2 := cond_pos _).",
            "VernacExtend",
            "3dc49a9ce6335ffcdc0463be6a101e65ff4a1093"
        ],
        [
            "rewrite -Ropp_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "intros u Hu.",
            "VernacExtend",
            "a26ee17805b1be6754886b68c7de9213f8c779e3"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Rle_lt_trans with (pos_div_2 eps).",
            "VernacExtend",
            "062640c55c2bf1a309ec54702b0f4db6829b8a02"
        ],
        [
            "now apply Rabs_le_between'.",
            "VernacExtend",
            "1d4657e8b7b1811ac5b690fde586e513cf7b67dc"
        ],
        [
            "rewrite (double_var eps).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(Rplus_0_r (pos_div_2 eps)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply (cond_pos (pos_div_2 eps)).",
            "VernacExtend",
            "4c7ae94a618d3537948f2a6943fe051fb333222f"
        ],
        [
            "assert (HexD: ( exists d : posreal, forall t u, Rmin (interp l e2) (interp l e3) - d < t < Rmax (interp l e2) (interp l e3) + d -> Rabs (u - nth 0 l n) < d -> interp_domain (t :: set_nth 0 l n u) b1 ) -> forall t, Rmin (interp l e2) (interp l e3) <= t <= Rmax (interp l e2) (interp l e3) -> locally_2d (fun u v => is_derive (fun x => interp (v :: set_nth 0 l n x) e1) u (interp (v :: set_nth 0 l n u) a1)) (nth 0 l n) t).",
            "VernacExtend",
            "3a3413aad85c86dca33c36d0f04da0493cbe7675"
        ],
        [
            "intros (e,H) t Ht.",
            "VernacExtend",
            "35308cc4d675e98e523b1b20cfa6ba9dd0e9bab3"
        ],
        [
            "exists e => /= u v Hu Hv.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "assert (H': Rmin (interp l e2) (interp l e3) - e < v < Rmax (interp l e2) (interp l e3) + e).",
            "VernacExtend",
            "a9a67c8b093157c0933b986d5184c0a0c1164b15"
        ],
        [
            "apply (Rlt_le_trans _ _ e) in Hv.",
            "VernacExtend",
            "dd20a06882b739653103da8e8ca71a981b867356"
        ],
        [
            "2: apply Rle_refl.",
            "VernacExtend",
            "82c5ff5b5cad97e3961efcc9eb38f647cacc8982"
        ],
        [
            "apply Rabs_lt_between' in Hv.",
            "VernacExtend",
            "1e7fa1293a0a48b522ce98554f59762261b067f2"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_lt_trans with (2 := proj1 Hv).",
            "VernacExtend",
            "0614dca691e4202618723add4ad339293c5c8c7e"
        ],
        [
            "now apply Rplus_le_compat_r.",
            "VernacExtend",
            "8182aad22e58bd21105c801af074d763818ebcdd"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 Hv).",
            "VernacExtend",
            "a242a8e9ada4f4b8806d666ccbf11fdc9d1e283a"
        ],
        [
            "now apply Rplus_le_compat_r.",
            "VernacExtend",
            "8182aad22e58bd21105c801af074d763818ebcdd"
        ],
        [
            "move: (IHe1 _ (H v u H' Hu)) => {IHe1} /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite nth_set_nth /= eqtype.eq_refl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_ext => z.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now rewrite set_set_nth /= eqtype.eq_refl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "assert (Htw: forall e : posreal, forall t, Rmin (interp l e2) (interp l e3) <= t <= Rmax (interp l e2) (interp l e3) -> Rmin (interp l e2) (interp l e3) - e < t < Rmax (interp l e2) (interp l e3) + e).",
            "VernacExtend",
            "0e30f14cf771d5e856560881a03d471c30b39552"
        ],
        [
            "intros e t Ht.",
            "VernacExtend",
            "0ee02d75721ff2b4553121ca179061fd8825524d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_le_trans with (2 := proj1 Ht).",
            "VernacExtend",
            "a4d45846e1eddac0d9950c16584935fb5d2a8c3f"
        ],
        [
            "rewrite -{2}[Rmin _ _]Rplus_0_r -Ropp_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Rle_lt_trans with (1 := proj2 Ht).",
            "VernacExtend",
            "68442faef38e4ecd91c335a8e2ef50c417df5581"
        ],
        [
            "rewrite -{1}[Rmax _ _]Rplus_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "case C1: (is_const e1 (S n)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "clear IHe1.",
            "VernacExtend",
            "4fc24d1a601f1c805dda5ff193ed17c5e799c3ce"
        ],
        [
            "case C2: (is_const e2 n).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros (H3&Hi&H1&_).",
            "VernacExtend",
            "5c7775847cc99d0d2691e512d9623c8df3975020"
        ],
        [
            "apply is_derive_ext with (comp (fun x => RInt (fun t => interp (t :: l) e1) (interp (set_nth 0 l n (nth 0 l n)) e2) x) (fun x => interp (set_nth 0 l n x) e3)).",
            "VernacExtend",
            "4ecd4f2baf9d70650a8d118e7d5da2e1ba20a8e3"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "unfold comp.",
            "VernacExtend",
            "b8c595984ddc3a4857a83b585333ec689de2b811"
        ],
        [
            "rewrite -(is_const_correct e2 n C2 l (nth 0 l n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply RInt_ext.",
            "VernacExtend",
            "1399615b6aed8cb80ec7cd7a72e9c35a08e51271"
        ],
        [
            "intros z _.",
            "VernacExtend",
            "d6d93de5b2978c3b46ae4ca26215f3c71565b5f9"
        ],
        [
            "rewrite -(interp_set_nth (S n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_const_correct e1 (S n) C1 (z :: l)).",
            "VernacExtend",
            "b6817025d6c02976617aac01dec8aaf1911a191e"
        ],
        [
            "apply: is_derive_comp.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite 2!interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_derive_RInt (fun t : R => interp (t :: l)%SEQ e1) _ (interp l e2)).",
            "VernacExtend",
            "c3a2526e7918b1bdfdf3cec806fdadef02b752e5"
        ],
        [
            "apply HexI in H1.",
            "VernacExtend",
            "0dc95b0ffaae4fba0194c53761d5bdfdf964fea9"
        ],
        [
            "case: H1 => e He.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists e => /= y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: RInt_correct.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "eapply ex_RInt_Chasles.",
            "VernacExtend",
            "35f5dd4d6bb38ba05552ae502d41600a5b02b9d4"
        ],
        [
            "apply Hi.",
            "VernacExtend",
            "b7959f73b24cea8febda147e5d8d404627f1652f"
        ],
        [
            "eapply ex_RInt_Chasles.",
            "VernacExtend",
            "35f5dd4d6bb38ba05552ae502d41600a5b02b9d4"
        ],
        [
            "eapply ex_RInt_Chasles, He.",
            "VernacExtend",
            "0c5e5dc3ed5201cd91aaf68142405b98df6696e5"
        ],
        [
            "eapply ex_RInt_swap, @ex_RInt_Chasles_1, He.",
            "VernacExtend",
            "8215926123d5141029b6dd7448b20abd070986dd"
        ],
        [
            "apply Rabs_le_between'.",
            "VernacExtend",
            "18ac0f066ec0a3fa096b48f5fb19e422bf5473dc"
        ],
        [
            "rewrite Rminus_eq_0 Rabs_R0 ; by apply Rlt_le, e.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "eapply ex_RInt_swap, @ex_RInt_Chasles_2, He.",
            "VernacExtend",
            "5f96f55a3560c1461d7b4038c716f623eaefd42c"
        ],
        [
            "apply Rabs_le_between'.",
            "VernacExtend",
            "18ac0f066ec0a3fa096b48f5fb19e422bf5473dc"
        ],
        [
            "by apply Rlt_le, Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "now apply continuity_pt_filterlim, locally_singleton.",
            "VernacExtend",
            "1c58ae58f6e939b05e14a581fa10bcd00f8b4831"
        ],
        [
            "now apply IHe3.",
            "VernacExtend",
            "ab40f6488ca22ef2797c55bb4cd9afdc4bfd1985"
        ],
        [
            "clear C2.",
            "VernacExtend",
            "8501ef7691a157069ea822a991ea4256a879dd60"
        ],
        [
            "case C3: (is_const e3 n).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros (H2&Hi&H1&_).",
            "VernacExtend",
            "3be6244ec227d4f3ec4d597da02430725014f7a0"
        ],
        [
            "rewrite -Ropp_mult_distr_r_reverse.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_ext with (fun x => comp (fun x => RInt (fun t => interp (t :: l) e1) x (interp (set_nth 0 l n (nth 0 l n)) e3)) (fun x => interp (set_nth 0 l n x) e2) x).",
            "VernacExtend",
            "9d6e895a256939fb41f3153561407cd5c2a98373"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "unfold comp.",
            "VernacExtend",
            "b8c595984ddc3a4857a83b585333ec689de2b811"
        ],
        [
            "rewrite -(is_const_correct e3 n C3 l (nth 0 l n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply RInt_ext.",
            "VernacExtend",
            "1399615b6aed8cb80ec7cd7a72e9c35a08e51271"
        ],
        [
            "intros z _.",
            "VernacExtend",
            "d6d93de5b2978c3b46ae4ca26215f3c71565b5f9"
        ],
        [
            "rewrite -(interp_set_nth (S n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_const_correct e1 (S n) C1 (z :: l)).",
            "VernacExtend",
            "b6817025d6c02976617aac01dec8aaf1911a191e"
        ],
        [
            "apply: (is_derive_comp (fun x0 : R => RInt (fun t : R => interp (t :: l) e1) x0 (interp (set_nth 0 l n (nth 0 l n)) e3)) (fun x0 : R => interp (set_nth 0 l n x0) e2)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite 2!interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_derive_RInt' (fun t : R => interp (t :: l)%SEQ e1) _ _ (interp l e3)).",
            "VernacExtend",
            "06a37f44fc7244746f0b36c51843a69684e30321"
        ],
        [
            "apply HexI in H1.",
            "VernacExtend",
            "0dc95b0ffaae4fba0194c53761d5bdfdf964fea9"
        ],
        [
            "case: H1 => e He.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists e => /= y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: RInt_correct.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "eapply ex_RInt_Chasles, Hi.",
            "VernacExtend",
            "1447882e18a3f45ce301c901c47aaac3156be733"
        ],
        [
            "eapply ex_RInt_Chasles.",
            "VernacExtend",
            "35f5dd4d6bb38ba05552ae502d41600a5b02b9d4"
        ],
        [
            "eapply ex_RInt_Chasles, He.",
            "VernacExtend",
            "0c5e5dc3ed5201cd91aaf68142405b98df6696e5"
        ],
        [
            "eapply ex_RInt_swap, @ex_RInt_Chasles_1, He.",
            "VernacExtend",
            "8215926123d5141029b6dd7448b20abd070986dd"
        ],
        [
            "apply Rabs_le_between'.",
            "VernacExtend",
            "18ac0f066ec0a3fa096b48f5fb19e422bf5473dc"
        ],
        [
            "by apply Rlt_le, Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply ex_RInt_swap, @ex_RInt_Chasles_2, He.",
            "VernacExtend",
            "5f96f55a3560c1461d7b4038c716f623eaefd42c"
        ],
        [
            "apply Rabs_le_between'.",
            "VernacExtend",
            "18ac0f066ec0a3fa096b48f5fb19e422bf5473dc"
        ],
        [
            "rewrite Rminus_eq_0 Rabs_R0 ; by apply Rlt_le, e.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "now apply continuity_pt_filterlim, locally_singleton.",
            "VernacExtend",
            "1c58ae58f6e939b05e14a581fa10bcd00f8b4831"
        ],
        [
            "now apply IHe2.",
            "VernacExtend",
            "ad0d075ae3d767aeda9053db59968c9f5b8909bf"
        ],
        [
            "clear C3.",
            "VernacExtend",
            "40075669225a7133a08a49404773bc86bdd2e31b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros (H2&H3&Hi&H12&H13&_).",
            "VernacExtend",
            "a7e23122172e3a8415cc31ca30600945040715e0"
        ],
        [
            "apply is_derive_ext with (fun x => RInt (fun t => interp (t :: l) e1) (interp (set_nth 0 l n x) e2) (interp (set_nth 0 l n x) e3)).",
            "VernacExtend",
            "9b85bdafef4e833ce6fb42ce781af1c07cf5f8bb"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "apply RInt_ext.",
            "VernacExtend",
            "1399615b6aed8cb80ec7cd7a72e9c35a08e51271"
        ],
        [
            "intros z _.",
            "VernacExtend",
            "d6d93de5b2978c3b46ae4ca26215f3c71565b5f9"
        ],
        [
            "rewrite -(interp_set_nth (S n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_const_correct e1 (S n) C1 (z :: l)).",
            "VernacExtend",
            "b6817025d6c02976617aac01dec8aaf1911a191e"
        ],
        [
            "rewrite -(interp_set_nth n l e2) -(interp_set_nth n l e3).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "evar_last.",
            "VernacExtend",
            "66189d18eff3abe5c0f87ca72027637c063094b4"
        ],
        [
            "apply (is_derive_RInt_bound_comp (fun t : R => interp (t :: l)%SEQ e1)).",
            "VernacExtend",
            "01ce4825506a5a93f1138a532ea8773e7648e00f"
        ],
        [
            "rewrite 2!interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply filter_imp.",
            "VernacExtend",
            "bf3d126874cf320edb00f681aadb1db062bce3fd"
        ],
        [
            "intros x Hx ; simpl.",
            "VernacExtend",
            "3acc4e0c3662edb6fb862a57ef0afb79e5091b93"
        ],
        [
            "apply: RInt_correct.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: Hx.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply @ex_RInt_locally => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now apply HexI.",
            "VernacExtend",
            "eff63ce522bd298f9fa3ce6da6fc7c10bb9e401e"
        ],
        [
            "now apply HexI.",
            "VernacExtend",
            "eff63ce522bd298f9fa3ce6da6fc7c10bb9e401e"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply continuity_pt_filterlim, locally_singleton.",
            "VernacExtend",
            "1c58ae58f6e939b05e14a581fa10bcd00f8b4831"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply continuity_pt_filterlim, locally_singleton.",
            "VernacExtend",
            "1c58ae58f6e939b05e14a581fa10bcd00f8b4831"
        ],
        [
            "now apply IHe2.",
            "VernacExtend",
            "ad0d075ae3d767aeda9053db59968c9f5b8909bf"
        ],
        [
            "now apply IHe3.",
            "VernacExtend",
            "ab40f6488ca22ef2797c55bb4cd9afdc4bfd1985"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "case C2: (is_const e2 n).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "clear IHe2.",
            "VernacExtend",
            "fa0cf8f288afac22cee19dc729c5f22dff8907da"
        ],
        [
            "case C3: (is_const e3 n).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "clear IHe3.",
            "VernacExtend",
            "7a78bc49b5deacd46dcef65382cc8c7dcce2021f"
        ],
        [
            "clear C1.",
            "VernacExtend",
            "7d098099453ef5141c683721654e380d69eb3f9f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros (H3&H2&H4&_).",
            "VernacExtend",
            "dc2164db41ec4eea158d2c9a0fda267ef87d9ca7"
        ],
        [
            "apply is_derive_ext with (fun x => RInt (fun t => interp (t :: set_nth 0 l n x) e1) (interp (set_nth 0 l n (nth 0 l n)) e2) (interp (set_nth 0 l n (nth 0 l n)) e3)).",
            "VernacExtend",
            "effefdf7d8dd50a436b1d1079ccc7f5f213735dc"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "now apply is_const_correct.",
            "VernacExtend",
            "fdd747b1847ddd74e67e3b9f8f3ba03c72e5b17d"
        ],
        [
            "now apply is_const_correct.",
            "VernacExtend",
            "fdd747b1847ddd74e67e3b9f8f3ba03c72e5b17d"
        ],
        [
            "rewrite 2!interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "destruct H3 as (d,H3).",
            "VernacExtend",
            "88a8b6a3666a8a7ba0127cece3e9c73564e54489"
        ],
        [
            "assert (H3': locally (nth R0 l n) (fun x => forall t, Rmin (interp l e2) (interp l e3) <= t <= Rmax (interp l e2) (interp l e3) -> interp_domain (set_nth 0 (t :: l) (S n) x) b1)).",
            "VernacExtend",
            "0de28907c9dcc9e38758bc5e834805d6baa951f6"
        ],
        [
            "exists d => y Hy t Ht.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_le_trans with (2 := proj1 Ht).",
            "VernacExtend",
            "a4d45846e1eddac0d9950c16584935fb5d2a8c3f"
        ],
        [
            "rewrite -{2}[Rmin _ _]Rplus_0_r -Ropp_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "apply Rle_lt_trans with (1 := proj2 Ht).",
            "VernacExtend",
            "68442faef38e4ecd91c335a8e2ef50c417df5581"
        ],
        [
            "rewrite -{1}[Rmax _ _]Rplus_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "exact Hy.",
            "VernacExtend",
            "def2ddcf2b089fdcc58626c840dcc230a388ad11"
        ],
        [
            "rewrite (RInt_ext (fun x => interp (x :: l) a1) (fun x => Derive (fun t => interp (set_nth 0 (x :: l) (S n) t) e1) (nth 0 (x :: l) (S n)))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_RInt_param.",
            "VernacExtend",
            "536021473f757c927a36c60230a7feba750a8fe6"
        ],
        [
            "move: H3' ; apply filter_imp => y H3' t Ht.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "specialize (IHe1 _ (H3' t Ht)).",
            "VernacExtend",
            "92c120e0c9918a88d5d98a246da613d0ebd406ca"
        ],
        [
            "rewrite nth_set_nth /= eqtype.eq_refl in IHe1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exists (interp (set_nth 0 (t :: l) (S n) y) a1).",
            "VernacExtend",
            "d667aae2682ca4803051af701b736427fd119535"
        ],
        [
            "apply is_derive_ext with (f := fun x => interp (set_nth 0 (set_nth 0 (t :: l) (S n) y) (S n) x) e1) (2 := IHe1).",
            "VernacExtend",
            "cc4f128d17f3d8ffaa05676463e35532cda98892"
        ],
        [
            "intros t'.",
            "VernacExtend",
            "7aff54d6ad1eae66812eefd25eb7a7438976d31a"
        ],
        [
            "now rewrite set_set_nth eqtype.eq_refl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "apply continuity_2d_pt_ext_loc with (f := fun x y => interp (set_nth 0 (y :: l) (S n) x) a1).",
            "VernacExtend",
            "29b6c5c213970b5834f9235379fe4bb5461c6200"
        ],
        [
            "exists d => u v Hu Hv.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "apply is_derive_ext with (f := fun z => interp (set_nth 0 (set_nth 0 (v :: l) (S n) u) (S n) z) e1).",
            "VernacExtend",
            "cb9b2038b426414858f09db106e256c1224adec6"
        ],
        [
            "intros z.",
            "VernacExtend",
            "82bb9cf582454326fafaf47a12d759aa1a4692c0"
        ],
        [
            "now rewrite set_set_nth eqtype.eq_refl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "pattern u at 2; replace u with (nth 0 (set_nth 0 (v :: l) (S n) u) (S n)).",
            "VernacExtend",
            "229b94c0edf2962fd382b8d534de8e36e6446ca6"
        ],
        [
            "apply IHe1.",
            "VernacExtend",
            "ddaa93aa43ddb4f900e76824ad1deadc6c04a2ef"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply Rabs_lt_between' in Hv.",
            "VernacExtend",
            "1e7fa1293a0a48b522ce98554f59762261b067f2"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rle_lt_trans with (2 := proj1 Hv).",
            "VernacExtend",
            "0614dca691e4202618723add4ad339293c5c8c7e"
        ],
        [
            "now apply Rplus_le_compat_r.",
            "VernacExtend",
            "8182aad22e58bd21105c801af074d763818ebcdd"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 Hv).",
            "VernacExtend",
            "a242a8e9ada4f4b8806d666ccbf11fdc9d1e283a"
        ],
        [
            "now apply Rplus_le_compat_r.",
            "VernacExtend",
            "8182aad22e58bd21105c801af074d763818ebcdd"
        ],
        [
            "exact Hu.",
            "VernacExtend",
            "2ef276b73f30adea6147a9e5bb93e0371d61e365"
        ],
        [
            "now rewrite nth_set_nth /= eqtype.eq_refl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "now apply H4.",
            "VernacExtend",
            "3f1e12b378cc4047989bbac2a6de1264923a62ab"
        ],
        [
            "move: H2 ; apply filter_imp => y.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite (is_const_correct e2 n C2 l y (nth 0 l n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (is_const_correct e3 n C3 l y (nth 0 l n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now rewrite 2!interp_set_nth.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "apply locally_singleton in H3'.",
            "VernacExtend",
            "a2bc1c08c9129499882eb37ca58adfffdbd9842b"
        ],
        [
            "apply (IHe1 (t :: l)).",
            "VernacExtend",
            "5e222b97a45738065ab5c2a89d6f74898271f7b1"
        ],
        [
            "cut (interp_domain (set_nth 0 (t :: l)%SEQ (S n) (nth 0 l n)) b1).",
            "VernacExtend",
            "88bdae82b56491b144062b36038662bdadc38ea9"
        ],
        [
            "apply (interp_domain_set_nth (S n) (t :: l)).",
            "VernacExtend",
            "ff53f5f429095882f3cafe89973c7105676dbcb4"
        ],
        [
            "apply H3'.",
            "VernacExtend",
            "43e527e74677ba3c29972f8a233111cbe94f728c"
        ],
        [
            "now split ; apply Rlt_le.",
            "VernacExtend",
            "18caeaea4693bc748a4bb9d3a9fec641e51c24eb"
        ],
        [
            "clear C1 C3.",
            "VernacExtend",
            "58ed5131053eb4e983f20f87ba953b87630cc494"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros (H2&H3&H6&H7&H8&H10&H11&_).",
            "VernacExtend",
            "a874d07b3a5b521189b4d7025c86dc7f942dbb82"
        ],
        [
            "rewrite Rplus_comm Rmult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_ext with (fun x => RInt (fun t => interp (t :: set_nth 0 l n x) e1) (interp l e2) (interp (set_nth 0 l n x) e3)).",
            "VernacExtend",
            "de00a644d584565e392535ca36250e042bbada76"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "rewrite (is_const_correct e2 n C2 l x (nth 0 l n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now rewrite interp_set_nth.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite -(RInt_ext (fun x => Derive (fun t => interp (x :: set_nth 0 l n t) e1) (nth 0 l n))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(interp_set_nth (S n) (interp l e3 :: l) e1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(interp_set_nth n l e3) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_derive_RInt_param_bound_comp_aux3 (fun x t => interp (t :: set_nth 0 l n x) e1) (interp l e2) (fun x => interp (set_nth 0 l n x) e3)).",
            "VernacExtend",
            "e41dc4ed83f01ed79d90ea681526f1bad080108f"
        ],
        [
            "now rewrite interp_set_nth.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "now rewrite interp_set_nth.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "now apply IHe3.",
            "VernacExtend",
            "ab40f6488ca22ef2797c55bb4cd9afdc4bfd1985"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "destruct H11 as (e&H11).",
            "VernacExtend",
            "df3824b81b76ccc916491a91b47352b0388667eb"
        ],
        [
            "exists (pos_div_2 e).",
            "VernacExtend",
            "627b6c7e7cf6f0b50d79b321c647f3d77763e5f9"
        ],
        [
            "exists e => y Hy t Ht.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "assert (Ht': Rmin (interp l e2) (interp l e3) - e < t < Rmax (interp l e2) (interp l e3) + e).",
            "VernacExtend",
            "6467960f5825fe35e7fbbaf9beaaee3b4e72c375"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_le_trans with (2 := proj1 Ht).",
            "VernacExtend",
            "a4d45846e1eddac0d9950c16584935fb5d2a8c3f"
        ],
        [
            "apply Rlt_le_trans with (Rmin (interp l e2) (interp l e3) - pos_div_2 e).",
            "VernacExtend",
            "e9110a58db49661034c790e5d8d91b9bb4f7b58f"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "rewrite -(Rplus_0_r (pos_div_2 e)) /= {2}(double_var e).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply is_pos_div_2.",
            "VernacExtend",
            "34ece1c858dc4d1fc16b226888abddacb10f0a54"
        ],
        [
            "rewrite /Rminus Rplus_min_distr_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_min_compat_r.",
            "VernacExtend",
            "ef119676c11ff33f17ac83853ba24dcb15f6fa27"
        ],
        [
            "rewrite -{2}[interp l e2]Rplus_0_r -Ropp_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "apply Rlt_le, cond_pos.",
            "VernacExtend",
            "ff3f7853fb1c5ee252cc69395bf907f925ace13b"
        ],
        [
            "apply Rle_lt_trans with (1 := proj2 Ht).",
            "VernacExtend",
            "68442faef38e4ecd91c335a8e2ef50c417df5581"
        ],
        [
            "apply Rle_lt_trans with (Rmax (interp l e2) (interp l e3) + pos_div_2 e).",
            "VernacExtend",
            "41a51df1ebc918a5e7b3ddf68edb407fc2600e95"
        ],
        [
            "rewrite /Rminus Rplus_max_distr_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_max_compat_r.",
            "VernacExtend",
            "4a212470a37281f8c5db528307f77c27e6bca0c3"
        ],
        [
            "rewrite -{1}[interp l e2]Rplus_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply Rlt_le, cond_pos.",
            "VernacExtend",
            "ff3f7853fb1c5ee252cc69395bf907f925ace13b"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "rewrite -(Rplus_0_r (pos_div_2 e)) /= {2}(double_var e).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply is_pos_div_2.",
            "VernacExtend",
            "34ece1c858dc4d1fc16b226888abddacb10f0a54"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "move: (IHe1 _ (H11 t y Ht' Hy)) => {IHe1} /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite nth_set_nth /= eqtype.eq_refl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_ext => z.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now rewrite set_set_nth eqtype.eq_refl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "apply continuity_2d_pt_ext_loc with (f := fun x y => interp (set_nth 0 (y :: l) (S n) x) a1).",
            "VernacExtend",
            "29b6c5c213970b5834f9235379fe4bb5461c6200"
        ],
        [
            "apply: locally_2d_impl (HexD H11 t Ht).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply locally_2d_forall => u v H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "now apply is_derive_unique.",
            "VernacExtend",
            "5c4d198f7fe512d6f8828a7c5e5b68d89df0a4fd"
        ],
        [
            "now apply H3.",
            "VernacExtend",
            "f917ddde98dd95560005caf51b5aefd938dcadfb"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: locally_2d_impl H2.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "specialize (HexD H11 _ (conj (Rmin_r _ _) (Rmax_r _ _))).",
            "VernacExtend",
            "8641f477fe29fc81dc96ab489536d421c5fe4e54"
        ],
        [
            "apply: locally_2d_impl_strong HexD.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply locally_2d_forall => u v H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite nth_set_nth /= eqtype.eq_refl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply continuity_2d_pt_ext_loc.",
            "VernacExtend",
            "00fecdf6acdaa228426119fac2c7acca1526c50a"
        ],
        [
            "apply: locally_2d_impl H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply locally_2d_forall => u' v' H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "now rewrite set_set_nth eqtype.eq_refl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply locally_singleton in H7.",
            "VernacExtend",
            "8ed90b51089d3f3dfe5ca40de42fb4671be93f12"
        ],
        [
            "apply: continuity_pt_ext H7.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply (interp_set_nth (S n) (t :: l)).",
            "VernacExtend",
            "396cc323b47afd3c0a7f86eed864094f2cda3209"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "apply (IHe1 (t :: l)).",
            "VernacExtend",
            "5e222b97a45738065ab5c2a89d6f74898271f7b1"
        ],
        [
            "destruct H11 as (e,H11).",
            "VernacExtend",
            "df3824b81b76ccc916491a91b47352b0388667eb"
        ],
        [
            "specialize (H11 t (nth 0 l n)).",
            "VernacExtend",
            "d86a8175f165da7a1325ebb23b80dde94fcc2fe2"
        ],
        [
            "rewrite -(interp_domain_set_nth (S n)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply Htw.",
            "VernacExtend",
            "895fc85e4ccbdbbc0e9deb7b260771a96e34686f"
        ],
        [
            "now split ; apply Rlt_le.",
            "VernacExtend",
            "18caeaea4693bc748a4bb9d3a9fec641e51c24eb"
        ],
        [
            "rewrite /Rminus Rplus_opp_r Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "case C3: (is_const e3 n).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "clear IHe3.",
            "VernacExtend",
            "7a78bc49b5deacd46dcef65382cc8c7dcce2021f"
        ],
        [
            "clear C1 C2.",
            "VernacExtend",
            "eb3f8026f0fd495a035089e466b6b70d3ed1b085"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros (H2&H3&H6&H7&H8&H10&H11&_).",
            "VernacExtend",
            "a874d07b3a5b521189b4d7025c86dc7f942dbb82"
        ],
        [
            "rewrite Rplus_comm Rmult_comm -Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_ext with (fun x => RInt (fun t => interp (t :: set_nth 0 l n x) e1) (interp (set_nth 0 l n x) e2) (interp l e3)).",
            "VernacExtend",
            "53a55900845417df73e1048849d06f840972689f"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "rewrite (is_const_correct e3 n C3 l x (nth 0 l n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now rewrite interp_set_nth.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite -(RInt_ext (fun x => Derive (fun t => interp (x :: set_nth 0 l n t) e1) (nth 0 l n))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(interp_set_nth (S n) (interp l e2 :: l) e1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(interp_set_nth n l e2) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_derive_RInt_param_bound_comp_aux2 (fun x t => interp (t :: set_nth 0 l n x) e1) (fun x => interp (set_nth 0 l n x) e2) (interp l e3)).",
            "VernacExtend",
            "a3c18ae866af240ee527c6f6975882963abd8c7e"
        ],
        [
            "now rewrite interp_set_nth.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "now rewrite interp_set_nth.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "now apply IHe2.",
            "VernacExtend",
            "ad0d075ae3d767aeda9053db59968c9f5b8909bf"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "destruct H11 as (e&H11).",
            "VernacExtend",
            "df3824b81b76ccc916491a91b47352b0388667eb"
        ],
        [
            "exists (pos_div_2 e).",
            "VernacExtend",
            "627b6c7e7cf6f0b50d79b321c647f3d77763e5f9"
        ],
        [
            "exists e => y Hy t Ht.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "assert (Ht': Rmin (interp l e2) (interp l e3) - e < t < Rmax (interp l e2) (interp l e3) + e).",
            "VernacExtend",
            "6467960f5825fe35e7fbbaf9beaaee3b4e72c375"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_le_trans with (2 := proj1 Ht).",
            "VernacExtend",
            "a4d45846e1eddac0d9950c16584935fb5d2a8c3f"
        ],
        [
            "apply Rlt_le_trans with (Rmin (interp l e2) (interp l e3) - pos_div_2 e).",
            "VernacExtend",
            "e9110a58db49661034c790e5d8d91b9bb4f7b58f"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "rewrite -(Rplus_0_r (pos_div_2 e)) /= {2}(double_var e).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply is_pos_div_2.",
            "VernacExtend",
            "34ece1c858dc4d1fc16b226888abddacb10f0a54"
        ],
        [
            "rewrite /Rminus Rplus_min_distr_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_min_compat_l.",
            "VernacExtend",
            "83ed5173e556e6d26ebeab274db6e351c1c4a7d2"
        ],
        [
            "rewrite -{2}[interp l e3]Rplus_0_r -Ropp_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "apply Rlt_le, cond_pos.",
            "VernacExtend",
            "ff3f7853fb1c5ee252cc69395bf907f925ace13b"
        ],
        [
            "apply Rle_lt_trans with (1 := proj2 Ht).",
            "VernacExtend",
            "68442faef38e4ecd91c335a8e2ef50c417df5581"
        ],
        [
            "apply Rle_lt_trans with (Rmax (interp l e2) (interp l e3) + pos_div_2 e).",
            "VernacExtend",
            "41a51df1ebc918a5e7b3ddf68edb407fc2600e95"
        ],
        [
            "rewrite /Rminus Rplus_max_distr_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_max_compat_l.",
            "VernacExtend",
            "d6c5077a02ec996ed75766dc21906acc6362fdc2"
        ],
        [
            "rewrite -{1}[interp l e3]Rplus_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply Rlt_le, cond_pos.",
            "VernacExtend",
            "ff3f7853fb1c5ee252cc69395bf907f925ace13b"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "rewrite -(Rplus_0_r (pos_div_2 e)) /= {2}(double_var e).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply is_pos_div_2.",
            "VernacExtend",
            "34ece1c858dc4d1fc16b226888abddacb10f0a54"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "move: (IHe1 _ (H11 t y Ht' Hy)) => {IHe1} /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite nth_set_nth /= eqtype.eq_refl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_ext => z.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now rewrite set_set_nth eqtype.eq_refl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "apply continuity_2d_pt_ext_loc with (f := fun x y => interp (set_nth 0 (y :: l) (S n) x) a1).",
            "VernacExtend",
            "29b6c5c213970b5834f9235379fe4bb5461c6200"
        ],
        [
            "apply: locally_2d_impl (HexD H11 t Ht).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply locally_2d_forall => u v H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "now apply is_derive_unique.",
            "VernacExtend",
            "5c4d198f7fe512d6f8828a7c5e5b68d89df0a4fd"
        ],
        [
            "now apply H3.",
            "VernacExtend",
            "f917ddde98dd95560005caf51b5aefd938dcadfb"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: locally_2d_impl H2.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "specialize (HexD H11 _ (conj (Rmin_l _ _) (Rmax_l _ _))).",
            "VernacExtend",
            "605d0b0275a57e700ccf55c0bf370b1de19a13cf"
        ],
        [
            "apply: locally_2d_impl_strong HexD.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply locally_2d_forall => u v H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite nth_set_nth /= eqtype.eq_refl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply continuity_2d_pt_ext_loc.",
            "VernacExtend",
            "00fecdf6acdaa228426119fac2c7acca1526c50a"
        ],
        [
            "apply: locally_2d_impl H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply locally_2d_forall => u' v' H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "now rewrite set_set_nth eqtype.eq_refl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply locally_singleton in H7.",
            "VernacExtend",
            "8ed90b51089d3f3dfe5ca40de42fb4671be93f12"
        ],
        [
            "apply: continuity_pt_ext H7.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply (interp_set_nth (S n) (t :: l)).",
            "VernacExtend",
            "396cc323b47afd3c0a7f86eed864094f2cda3209"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "apply (IHe1 (t :: l)).",
            "VernacExtend",
            "5e222b97a45738065ab5c2a89d6f74898271f7b1"
        ],
        [
            "destruct H11 as (e,H11).",
            "VernacExtend",
            "df3824b81b76ccc916491a91b47352b0388667eb"
        ],
        [
            "specialize (H11 t (nth 0 l n)).",
            "VernacExtend",
            "d86a8175f165da7a1325ebb23b80dde94fcc2fe2"
        ],
        [
            "rewrite -(interp_domain_set_nth (S n)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply Htw.",
            "VernacExtend",
            "895fc85e4ccbdbbc0e9deb7b260771a96e34686f"
        ],
        [
            "now split ; apply Rlt_le.",
            "VernacExtend",
            "18caeaea4693bc748a4bb9d3a9fec641e51c24eb"
        ],
        [
            "rewrite /Rminus Rplus_opp_r Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "clear C1 C2 C3.",
            "VernacExtend",
            "a2fa7ad8de8b5d7d4ff69500f9faf3f053b37ca7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros (H1&H2&H3&H4&H5&H6&H7&H8&H9&H10&H11&_).",
            "VernacExtend",
            "fd3306c274d14badead010e6a97604d8ad1ff166"
        ],
        [
            "rewrite Rplus_comm Rmult_comm (Rmult_comm (interp l a2)) -Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [_*_+_]Rplus_comm -Rplus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(RInt_ext (fun x => Derive (fun t => interp (x :: set_nth 0 l n t) e1) (nth 0 l n))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(interp_set_nth (S n) (interp l e2 :: l) e1) -(interp_set_nth (S n) (interp l e3 :: l) e1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(interp_set_nth n l e2) -(interp_set_nth n l e3) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_derive_RInt_param_bound_comp (fun x t => interp (t :: set_nth 0 l n x) e1) (fun x => interp (set_nth 0 l n x) e2) (fun x => interp (set_nth 0 l n x) e3)).",
            "VernacExtend",
            "ba989ad594f26495dd2c3146fbc52f06ed1b30a6"
        ],
        [
            "rewrite 2!interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact H8.",
            "VernacExtend",
            "125096764f05c2e6b59a11140e6c3ad0b07b1f9e"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact H9.",
            "VernacExtend",
            "6afcdb5a3ddac99d13c019fefd4457c64d0b9ba5"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact H10.",
            "VernacExtend",
            "32c404a06a1e2ccc508df6d866090a31ba6555a5"
        ],
        [
            "now apply IHe2.",
            "VernacExtend",
            "ad0d075ae3d767aeda9053db59968c9f5b8909bf"
        ],
        [
            "now apply IHe3.",
            "VernacExtend",
            "ab40f6488ca22ef2797c55bb4cd9afdc4bfd1985"
        ],
        [
            "rewrite 2!interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "destruct H11 as (e&H11).",
            "VernacExtend",
            "df3824b81b76ccc916491a91b47352b0388667eb"
        ],
        [
            "exists (pos_div_2 e).",
            "VernacExtend",
            "627b6c7e7cf6f0b50d79b321c647f3d77763e5f9"
        ],
        [
            "exists e => y Hy t Ht.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "assert (Ht': Rmin (interp l e2) (interp l e3) - e < t < Rmax (interp l e2) (interp l e3) + e).",
            "VernacExtend",
            "6467960f5825fe35e7fbbaf9beaaee3b4e72c375"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_le_trans with (2 := proj1 Ht).",
            "VernacExtend",
            "a4d45846e1eddac0d9950c16584935fb5d2a8c3f"
        ],
        [
            "rewrite /Rminus -Rplus_min_distr_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Ropp_lt_contravar.",
            "VernacExtend",
            "d8e11ebac93d435105a924a8c0c7fe0b21db4797"
        ],
        [
            "rewrite -(Rplus_0_r (pos_div_2 e)) /= {2}(double_var e).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply is_pos_div_2.",
            "VernacExtend",
            "34ece1c858dc4d1fc16b226888abddacb10f0a54"
        ],
        [
            "apply Rle_lt_trans with (1 := proj2 Ht).",
            "VernacExtend",
            "68442faef38e4ecd91c335a8e2ef50c417df5581"
        ],
        [
            "rewrite -Rplus_max_distr_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "rewrite -(Rplus_0_r (pos_div_2 e)) /= {2}(double_var e).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply is_pos_div_2.",
            "VernacExtend",
            "34ece1c858dc4d1fc16b226888abddacb10f0a54"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "move: (IHe1 _ (H11 t y Ht' Hy)) => {IHe1} /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite nth_set_nth /= eqtype.eq_refl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_ext => z.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now rewrite set_set_nth eqtype.eq_refl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite 2!interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "apply continuity_2d_pt_ext_loc with (f := fun x y => interp (set_nth 0 (y :: l) (S n) x) a1).",
            "VernacExtend",
            "29b6c5c213970b5834f9235379fe4bb5461c6200"
        ],
        [
            "apply: locally_2d_impl (HexD H11 t Ht).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply locally_2d_forall => u v H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "now apply is_derive_unique.",
            "VernacExtend",
            "5c4d198f7fe512d6f8828a7c5e5b68d89df0a4fd"
        ],
        [
            "now apply H3.",
            "VernacExtend",
            "f917ddde98dd95560005caf51b5aefd938dcadfb"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: locally_2d_impl H1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "specialize (HexD H11 _ (conj (Rmin_l _ _) (Rmax_l _ _))).",
            "VernacExtend",
            "605d0b0275a57e700ccf55c0bf370b1de19a13cf"
        ],
        [
            "apply: locally_2d_impl_strong HexD.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply locally_2d_forall => u v H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite nth_set_nth /= eqtype.eq_refl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply continuity_2d_pt_ext_loc.",
            "VernacExtend",
            "00fecdf6acdaa228426119fac2c7acca1526c50a"
        ],
        [
            "apply: locally_2d_impl H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply locally_2d_forall => u' v' H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "now rewrite set_set_nth eqtype.eq_refl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: locally_2d_impl H2.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "specialize (HexD H11 _ (conj (Rmin_r _ _) (Rmax_r _ _))).",
            "VernacExtend",
            "8641f477fe29fc81dc96ab489536d421c5fe4e54"
        ],
        [
            "apply: locally_2d_impl_strong HexD.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply locally_2d_forall => u v H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite nth_set_nth /= eqtype.eq_refl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply continuity_2d_pt_ext_loc.",
            "VernacExtend",
            "00fecdf6acdaa228426119fac2c7acca1526c50a"
        ],
        [
            "apply: locally_2d_impl H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply locally_2d_forall => u' v' H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "now rewrite set_set_nth eqtype.eq_refl.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply locally_singleton in H5.",
            "VernacExtend",
            "f008fd20ed21ed161f5cbd6cfeac65e100df1c75"
        ],
        [
            "apply: continuity_pt_ext H5.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply (interp_set_nth (S n) (t :: l)).",
            "VernacExtend",
            "396cc323b47afd3c0a7f86eed864094f2cda3209"
        ],
        [
            "rewrite interp_set_nth.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply locally_singleton in H7.",
            "VernacExtend",
            "8ed90b51089d3f3dfe5ca40de42fb4671be93f12"
        ],
        [
            "apply: continuity_pt_ext H7.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "intros t.",
            "VernacExtend",
            "3c4fe6f257739f9d979bf15fca5e899c1914c76d"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply (interp_set_nth (S n) (t :: l)).",
            "VernacExtend",
            "396cc323b47afd3c0a7f86eed864094f2cda3209"
        ],
        [
            "intros t Ht.",
            "VernacExtend",
            "9b73bd01b7eab131fc4e1775831ff0e7de378f43"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "apply (IHe1 (t :: l)).",
            "VernacExtend",
            "5e222b97a45738065ab5c2a89d6f74898271f7b1"
        ],
        [
            "destruct H11 as (e,H11).",
            "VernacExtend",
            "df3824b81b76ccc916491a91b47352b0388667eb"
        ],
        [
            "specialize (H11 t (nth 0 l n)).",
            "VernacExtend",
            "d86a8175f165da7a1325ebb23b80dde94fcc2fe2"
        ],
        [
            "rewrite -(interp_domain_set_nth (S n)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply Htw.",
            "VernacExtend",
            "895fc85e4ccbdbbc0e9deb7b260771a96e34686f"
        ],
        [
            "now split ; apply Rlt_le.",
            "VernacExtend",
            "18caeaea4693bc748a4bb9d3a9fec641e51c24eb"
        ],
        [
            "rewrite /Rminus Rplus_opp_r Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint simplify_domain (d : domain) : domain := match d with | And ld => let l := foldr (fun d acc => let d' := simplify_domain d in match d' with | Always => acc | And l => cat l acc | Never => Never :: nil | _ => d' :: acc end) nil ld in match l with | nil => Always | d :: nil => d | _ => And l end | Forall e1 e2 d => let d' := simplify_domain d in match d' with | Always => Always | Never => Never | _ => Forall e1 e2 d' end | Forone e d => let d' := simplify_domain d in match d' with | Always => Always | Never => Never | _ => Forone e d' end | Locally n d => let d' := simplify_domain d in match d' with | Always => Always | Never => Never | _ => Locally n d' end | Locally2 m n d => let d' := simplify_domain d in match d' with | Always => Always | Never => Never | _ => Locally2 m n d' end | ForallWide n e1 e2 d => let d' := simplify_domain d in match d' with | Always => Always | Never => Never | _ => ForallWide n e1 e2 d' end | _ => d end.",
            "VernacFixpoint",
            "0223ae72695b32860e969d69dfd14f31823227fe"
        ],
        [
            "Lemma simplify_domain_correct : forall d l, interp_domain l (simplify_domain d) -> interp_domain l d.",
            "VernacStartTheoremProof",
            "30c204685bbf9829fa1f4720a5243855b389ab74"
        ],
        [
            "intros d.",
            "VernacExtend",
            "e8ab4b88beb8f424cf134586a17ddfc843e85932"
        ],
        [
            "induction d using domain_ind' => l ; try easy ; simpl.",
            "VernacExtend",
            "b78905e3c75de7cc8b9c1b6f563b83d30c8c4635"
        ],
        [
            "set (f := fun (d : domain) (acc : seq domain) => match simplify_domain d with | Never => Never :: nil | Always => acc | And l0 => l0 ++ acc | _ => simplify_domain d :: acc end).",
            "VernacExtend",
            "76c279c56db9e251932e39a28d179ddd35513397"
        ],
        [
            "intros H'.",
            "VernacExtend",
            "d7903418c9c01fda86d2cc847b39424719d50154"
        ],
        [
            "have: (foldr (fun d acc => interp_domain l d /\\ acc) True (foldr f nil ld)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move: (foldr f nil ld) H' => [|h [|s]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear H'.",
            "VernacExtend",
            "053b39d0dfa861b2c59b449f4900580d7dff03b7"
        ],
        [
            "revert H.",
            "VernacExtend",
            "6842e040dd98a07b1eb54bbabc9c3f1076566a9a"
        ],
        [
            "induction ld as [|t] => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl in H |- *.",
            "VernacExtend",
            "83f76a13eeb5aba1a599462a48e3e57b0a31d2bc"
        ],
        [
            "destruct H as (Ha,Hb).",
            "VernacExtend",
            "0271ae4b34154abfded579fdaa0113115dc74c54"
        ],
        [
            "revert Ha.",
            "VernacExtend",
            "5fc72e927a9c23a75fca5f24247434c12f31b353"
        ],
        [
            "rewrite /f -/f.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case (simplify_domain t) ; simpl.",
            "VernacExtend",
            "a6ba20d248c3534bff6887242b0b82931d2d37a3"
        ],
        [
            "now intros _ (H,_).",
            "VernacExtend",
            "d47153e63c57319afba7685869a0291e1eece96f"
        ],
        [
            "exact (fun H1 H2 => conj (H1 l I) (IHld Hb H2)).",
            "VernacExtend",
            "6510ca49bf0c424de2fed4ce2b1d6a92ddb1c42c"
        ],
        [
            "intros df e H1 (H2,H3).",
            "VernacExtend",
            "30df95f8eddd51cf9c7e0ac74875b8e25686f4e7"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "intros n k f' le H1 (H2,H3).",
            "VernacExtend",
            "968663493f70c01866a66a1ef743ae4ad86e5461"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "intros m n k f' le H1 (H2,H3).",
            "VernacExtend",
            "f2a85debcb80192fe4640da4378d80820a0c9cf7"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "intros n e H1 (H2,H3).",
            "VernacExtend",
            "9500bf9c5ec277125d881573d19169de96cdcdd8"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "intros m n e H1 (H2,H3).",
            "VernacExtend",
            "71baa4c94e46110221d588882702d5d367ae7a57"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "intros e0 e1 e2 H1 (H2,H3).",
            "VernacExtend",
            "ac9d2e10e5c89613e3e1c77986385d04fc39845b"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "intros n e0 e1 e2 H1 (H2,H3).",
            "VernacExtend",
            "2ed6b3e83b45af360b9b7c5e67aab1cb93e8dc57"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "intros n e0 e1 H1 (H2,H3).",
            "VernacExtend",
            "2f5973ebec265138da23d220241c709c97f58eff"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "intros ls H1 H2.",
            "VernacExtend",
            "31526368afa79c60acbeaef5cf98410630ffb639"
        ],
        [
            "rewrite foldr_cat in H2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "refine ((fun H => conj (H1 l (proj1 H)) (IHld Hb (proj2 H))) _).",
            "VernacExtend",
            "c6e30854f196f3676859f12fa927ca6a95e61f9f"
        ],
        [
            "revert H2.",
            "VernacExtend",
            "bf608dd02211921a8a3468ac1ffcc4e8bdf3c9e3"
        ],
        [
            "generalize (foldr f nil ld).",
            "VernacExtend",
            "ab97e403497408ab9e0b17714f258ab73e1ac596"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "induction ls.",
            "VernacExtend",
            "4e7eb24907f05c6a866f99d59aa9e6b33e2b2ba0"
        ],
        [
            "done.",
            "VernacExtend",
            "095062641163274af3d1e226cbd993f0dbb6e000"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "eapply (fun s H => proj1 (IHls s H)).",
            "VernacExtend",
            "709316c33c4b460687524e20833a7d9213359eda"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "now apply IHls.",
            "VernacExtend",
            "4fc5a78c7f2bf143b603bcc52b69a0ce2b7b76b4"
        ],
        [
            "intros e1 e2 d H1 (H2,H3).",
            "VernacExtend",
            "158a81d5847e793b82be899253fc02dead9327fe"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "intros e d H1 (H2,H3).",
            "VernacExtend",
            "aaa20590f0a4805e3364d545b84d121d8515343e"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "intros n d H1 (H2,H3).",
            "VernacExtend",
            "1424af3aa1493271c652ab38a92887893b95bdc1"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "intros m n d H1 (H2,H3).",
            "VernacExtend",
            "89e56f2a836801f15ec300a872b174967cde7a45"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "intros n e1 e2 d H1 (H2,H3).",
            "VernacExtend",
            "16e15f09809bd5d250232c8341c389a31fd7e5d2"
        ],
        [
            "exact (conj (H1 l H2) (IHld Hb H3)).",
            "VernacExtend",
            "dc1e161eb1225ce45852f658c3db071774ac49fa"
        ],
        [
            "revert IHd.",
            "VernacExtend",
            "423631bc2df8d1430bb1f24ab141ed9547298568"
        ],
        [
            "assert (HH: forall d', (forall l, interp_domain l d' -> interp_domain l d) -> interp_domain l (Forall e1 e2 d') -> interp_domain l (Forall e1 e2 d)).",
            "VernacExtend",
            "6de314a0b116803a7adfd94590c9f94ff069b89a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros d' H1 H2 t Ht.",
            "VernacExtend",
            "05c8412c9b567acca8c48ab5a1d836c6d2b5dd10"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "now apply H2.",
            "VernacExtend",
            "24cee18271b1e351879d2c867b57a8b1f3948c7d"
        ],
        [
            "destruct (simplify_domain d) ; try (apply HH ; fail).",
            "VernacExtend",
            "7e941471c9c16d8c800c1452f600bb9a5c52dae9"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros H _ t Ht.",
            "VernacExtend",
            "74adabd419f2766fa60345c145e5b20e2c909bb9"
        ],
        [
            "now apply H.",
            "VernacExtend",
            "e28edffe226486c29d50d204164561fb199b8c97"
        ],
        [
            "revert IHd.",
            "VernacExtend",
            "423631bc2df8d1430bb1f24ab141ed9547298568"
        ],
        [
            "assert (HH: forall d', (forall l, interp_domain l d' -> interp_domain l d) -> interp_domain l (Forone e d') -> interp_domain l (Forone e d)).",
            "VernacExtend",
            "94e200c934db91996ea7c1fa3fc7d34f2073324b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros d' H1 H2.",
            "VernacExtend",
            "8dd3f9bdb0aa60ac2dcdc2e16db068f788286706"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "now apply H2.",
            "VernacExtend",
            "24cee18271b1e351879d2c867b57a8b1f3948c7d"
        ],
        [
            "destruct (simplify_domain d) ; apply HH.",
            "VernacExtend",
            "1f4197486755145ca458e82832f73e5a8b861b7b"
        ],
        [
            "revert IHd.",
            "VernacExtend",
            "423631bc2df8d1430bb1f24ab141ed9547298568"
        ],
        [
            "assert (HH: forall d', (forall l, interp_domain l d' -> interp_domain l d) -> interp_domain l (Locally n d') -> interp_domain l (Locally n d)).",
            "VernacExtend",
            "537e225ccb36c3821849cc09dd6961713eb31023"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros d' H1 (eps,H2).",
            "VernacExtend",
            "8e627af5743c61411a67da3b07709990066703cf"
        ],
        [
            "exists eps => t Ht.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "now apply H2.",
            "VernacExtend",
            "24cee18271b1e351879d2c867b57a8b1f3948c7d"
        ],
        [
            "destruct (simplify_domain d) ; try (apply HH ; fail).",
            "VernacExtend",
            "7e941471c9c16d8c800c1452f600bb9a5c52dae9"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros H _.",
            "VernacExtend",
            "6e2b7d9d2d8e0291f671d657bfcc45a19d4bf80e"
        ],
        [
            "exists (mkposreal _ Rlt_0_1) => t Ht.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now apply H.",
            "VernacExtend",
            "e28edffe226486c29d50d204164561fb199b8c97"
        ],
        [
            "revert IHd.",
            "VernacExtend",
            "423631bc2df8d1430bb1f24ab141ed9547298568"
        ],
        [
            "assert (HH: forall d', (forall l, interp_domain l d' -> interp_domain l d) -> interp_domain l (Locally2 m n d') -> interp_domain l (Locally2 m n d)).",
            "VernacExtend",
            "a2acbdd5df2f69696e31143f20df97e75d9c1844"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros d' H1 (eps,H2).",
            "VernacExtend",
            "8e627af5743c61411a67da3b07709990066703cf"
        ],
        [
            "exists eps => u v Hu Hv.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "now apply H2.",
            "VernacExtend",
            "24cee18271b1e351879d2c867b57a8b1f3948c7d"
        ],
        [
            "destruct (simplify_domain d) ; try (apply HH ; fail).",
            "VernacExtend",
            "7e941471c9c16d8c800c1452f600bb9a5c52dae9"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros H _.",
            "VernacExtend",
            "6e2b7d9d2d8e0291f671d657bfcc45a19d4bf80e"
        ],
        [
            "exists (mkposreal _ Rlt_0_1) => u v Hu Hv.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now apply H.",
            "VernacExtend",
            "e28edffe226486c29d50d204164561fb199b8c97"
        ],
        [
            "revert IHd.",
            "VernacExtend",
            "423631bc2df8d1430bb1f24ab141ed9547298568"
        ],
        [
            "assert (HH: forall d', (forall l, interp_domain l d' -> interp_domain l d) -> interp_domain l (ForallWide n e1 e2 d') -> interp_domain l (ForallWide n e1 e2 d)).",
            "VernacExtend",
            "92151fe09305138fb6fc76869f26498011ad1931"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros d' H1 (e,H2).",
            "VernacExtend",
            "1535f6671fcb6153da4f5ef08f91de66a743b238"
        ],
        [
            "exists e => t u Ht Hu.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "now apply H2.",
            "VernacExtend",
            "24cee18271b1e351879d2c867b57a8b1f3948c7d"
        ],
        [
            "destruct (simplify_domain d) ; try (apply HH ; fail).",
            "VernacExtend",
            "7e941471c9c16d8c800c1452f600bb9a5c52dae9"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros H _.",
            "VernacExtend",
            "6e2b7d9d2d8e0291f671d657bfcc45a19d4bf80e"
        ],
        [
            "exists (mkposreal _ Rlt_0_1) => u v Hu Hv.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now apply H.",
            "VernacExtend",
            "e28edffe226486c29d50d204164561fb199b8c97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class UnaryDiff f := {UnaryDiff_f' : R -> R ; UnaryDiff_H : forall x, is_derive f x (UnaryDiff_f' x)}.",
            "VernacInductive",
            "1708f158f3bd2cc8fa19d41f1a66ea5c3e789ea3"
        ],
        [
            "Class UnaryDiff' f := {UnaryDiff'_f' : R -> R ; UnaryDiff'_df : R -> Prop ; UnaryDiff'_H : forall x, UnaryDiff'_df x -> is_derive f x (UnaryDiff'_f' x)}.",
            "VernacInductive",
            "f2e03a585db06b6c4fa163da4c162153b9166f59"
        ],
        [
            "Global Instance UnaryDiff_exp : UnaryDiff exp.",
            "VernacInstance",
            "080fb4cd5a826fc5452e25298bcdd33f4021a002"
        ],
        [
            "exists exp.",
            "VernacExtend",
            "f2b9a75fa7c57a12804298e83d9e579b1bc206bf"
        ],
        [
            "move => x ; by apply is_derive_Reals, derivable_pt_lim_exp.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance UnaryDiff_pow : forall n : nat, UnaryDiff (fun x => pow x n).",
            "VernacInstance",
            "eb40291f2dd6164f5e7e5f0d296c39e9e31f517a"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "exists (fun x => INR n * x ^ (Peano.pred n)).",
            "VernacExtend",
            "820c7fc1ed8fa634bdebdb6f727c9ed1585b1c95"
        ],
        [
            "move => x ; by apply is_derive_Reals, derivable_pt_lim_pow.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance UnaryDiff_Rabs : UnaryDiff' Rabs.",
            "VernacInstance",
            "c5b83d28836e02fc415e76b32ef2d1beaba302ab"
        ],
        [
            "exists (fun x => sign x) (fun x => x <> 0).",
            "VernacExtend",
            "ba2500851270e1f5e4467512d17ab3bf604f490d"
        ],
        [
            "move => x Hx0 ; by apply filterdiff_Rabs.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance UnaryDiff_Rsqr : UnaryDiff Rsqr.",
            "VernacInstance",
            "69bc820c6bcfcea6f759396809dd0871d3ec935b"
        ],
        [
            "exists (fun x => 2 * x).",
            "VernacExtend",
            "e20640285590c409035bfe1510e3aaa5fb5b3948"
        ],
        [
            "move => x ; by apply is_derive_Reals, derivable_pt_lim_Rsqr.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance UnaryDiff_cosh : UnaryDiff cosh.",
            "VernacInstance",
            "dae9efe93ea084f75909890d032d058235cab4d7"
        ],
        [
            "exists sinh.",
            "VernacExtend",
            "f8539fe609887f6a18ed6f5dec6db2a6fe27ffd3"
        ],
        [
            "move => x ; by apply is_derive_Reals, derivable_pt_lim_cosh.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance UnaryDiff_sinh : UnaryDiff sinh.",
            "VernacInstance",
            "9183ed67ab92c941d8c23238f5dc08c843b16b9b"
        ],
        [
            "exists (fun x => cosh x).",
            "VernacExtend",
            "06d0a14480d5998e723e3fd45cdc0ebe342ff30f"
        ],
        [
            "move => x ; by apply is_derive_Reals, derivable_pt_lim_sinh.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance UnaryDiff_ps_atan : UnaryDiff' ps_atan.",
            "VernacInstance",
            "d5eae4a954239b8f4154e58ee8b667adb71111dc"
        ],
        [
            "exists (fun x => /(1+x^2)) (fun x => -1 < x < 1).",
            "VernacExtend",
            "953cb511b94da6144165f0ca6dfff7b34c5d37c9"
        ],
        [
            "move => x Hx ; by apply is_derive_Reals, derivable_pt_lim_ps_atan.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance UnaryDiff_atan : UnaryDiff atan.",
            "VernacInstance",
            "112d3a3eaa4bb1ebb3b5054d9a20a8912c127733"
        ],
        [
            "exists (fun x => /(1+x^2)).",
            "VernacExtend",
            "7e0dfa97d5450329e5c251e03df6c5b6a90ed67c"
        ],
        [
            "move => x ; by apply is_derive_Reals, derivable_pt_lim_atan.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance UnaryDiff_ln : UnaryDiff' ln.",
            "VernacInstance",
            "7eb6a985654d8bd54c064ec921ccafed17c9ead1"
        ],
        [
            "exists (fun x => /x) (fun x => 0 < x).",
            "VernacExtend",
            "3611d93a7cb150f4535c07160b3a662fb126c8dc"
        ],
        [
            "move => x Hx ; by apply is_derive_Reals, derivable_pt_lim_ln.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance UnaryDiff_cos : UnaryDiff cos.",
            "VernacInstance",
            "48829e939fe9d8a0abef89c18a3497d264f31d5b"
        ],
        [
            "exists (fun x => - sin x ).",
            "VernacExtend",
            "09e349577d1ce2b151f3bf5f56d900968df19909"
        ],
        [
            "move => x ; by apply is_derive_Reals, derivable_pt_lim_cos.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance UnaryDiff_sin : UnaryDiff sin.",
            "VernacInstance",
            "d07c4a27cf20b1ab5d1c9ce81cd56c297026f724"
        ],
        [
            "exists cos.",
            "VernacExtend",
            "05deb7b623975a49f0bfb131d236840ad64d0eb0"
        ],
        [
            "move => x ; by apply is_derive_Reals, derivable_pt_lim_sin.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance UnaryDiff_sqrt : UnaryDiff' sqrt.",
            "VernacInstance",
            "a83523cb2746b90f520a81c91ebad772110016e5"
        ],
        [
            "exists (fun x => / (2 * sqrt x)) (fun x => 0 < x).",
            "VernacExtend",
            "33d6aba532aec2000091bd4515ad78f2d0564155"
        ],
        [
            "move => x Hx ; by apply is_derive_Reals, derivable_pt_lim_sqrt.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition var : nat -> R.",
            "VernacDefinition",
            "c32ab67d4347c66929d11dece9a621a76a1ee337"
        ],
        [
            "exact (fun _ => R0).",
            "VernacExtend",
            "9562b4db84a34528273732ab7ac64cb696b1a81c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac reify_helper a b z d := match a with | Cst _ => match b with | Cst _ => constr:(Cst d) | _ => z end | _ => z end.",
            "VernacExtend",
            "20713dfddcf010814578989e471bb6d405fc2f3c"
        ],
        [
            "Ltac reify fct nb := let rec reify_aux fct l i := match fct with | ?f ?a => let e := reify a nb in reify_aux f (e :: l) (S i) | _ => constr:((fct, rev l, i)) end in match fct with | var ?i => eval vm_compute in (Var (nb - i)) | Rplus ?a ?b => let a' := reify a nb in let b' := reify b nb in reify_helper a' b' (Binary Eplus a' b') fct | Ropp ?a => let a' := reify a nb in match a' with | Cst _ => constr:(Cst fct) | _ => constr:(Unary Eopp a') end | Rminus ?a ?b => let a' := reify a nb in let b' := reify b nb in reify_helper a' b' (Binary Eplus a' (Unary Eopp b')) fct | Rmult ?a ?b => let a' := reify a nb in let b' := reify b nb in reify_helper a' b' (Binary Emult a' b') fct | Rinv ?a => let a' := reify a nb in match a' with | Cst _ => constr:(Cst fct) | _ => constr:(Unary Einv a') end | Rdiv ?a ?b => let a' := reify a nb in let b' := reify b nb in reify_helper a' b' (Binary Emult a' (Unary Einv b')) fct | RInt ?f ?a ?b => let f := eval cbv beta in (f (var (S nb))) in let f' := reify f (S nb) in let a' := reify a nb in let b' := reify b nb in constr:(Int f' a' b') | pow ?f ?n => reify ((fun x => pow x n) f) nb | context [var ?i] => match fct with | ?f ?a => let e := reify a nb in let ud := constr:(_ : UnaryDiff f) in constr:(Unary (Efct f (@UnaryDiff_f' f ud) (@UnaryDiff_H f ud)) e) | ?f ?a => let e := reify a nb in let ud := constr:(_ : UnaryDiff' f) in constr:(Unary (Efct' f (@UnaryDiff'_f' f ud) (@UnaryDiff'_df f ud) (@UnaryDiff'_H f ud)) e) | _ => match reify_aux fct (Nil expr) O with | (?f,?le,?k) => constr:(AppExt k f le) end end | _ => constr:(Cst fct) end.",
            "VernacExtend",
            "21da97e62144cdb7aee09a8a9174a1d4465a4f79"
        ],
        [
            "Lemma auto_derive_helper : forall (e : expr) l n, let '(a,b) := D e n in interp_domain l (simplify_domain b) -> is_derive (fun x => interp (set_nth R0 l n x) e) (nth R0 l n) (interp l a).",
            "VernacStartTheoremProof",
            "dd87964195ec03121aa5362882906f7995a289ac"
        ],
        [
            "intros e l n.",
            "VernacExtend",
            "737910d9939abfb5b7c50492ece00055cde14157"
        ],
        [
            "generalize (D_correct e l n).",
            "VernacExtend",
            "54a5edd90fbfe3a0ff3549889089431b69d3f4cc"
        ],
        [
            "destruct (D e n) as (d1,d2).",
            "VernacExtend",
            "9d06c75950ab8a78d8d03fe3646aedd825ca5379"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "now apply simplify_domain_correct.",
            "VernacExtend",
            "1c0c6cb864ff844700353881ff261704cb21a7c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac auto_derive_fun f := let f := eval cbv beta in (f (var O)) in let e := reify f O in let H := fresh \"H\" in assert (H := fun x => auto_derive_helper e (x :: nil) 0) ; simpl in H ; unfold Derive_Rn, ex_derive_Rn in H ; simpl in H ; revert H.",
            "VernacExtend",
            "8eb14eda00619271d89a417889dd2b605710ff4d"
        ],
        [
            "Ltac auto_derive := match goal with | |- is_derive ?f ?v ?l => auto_derive_fun f ; let H := fresh \"H\" in intro H ; refine (@eq_ind R _ (is_derive f v) (H v _) l _) ; clear H | |- ex_derive ?f ?v => eexists ; auto_derive_fun f ; let H := fresh \"H\" in intro H ; apply (H v) ; clear H | |- derivable_pt_lim ?f ?v ?l => apply is_derive_Reals ; auto_derive | |- derivable_pt ?f ?v => apply ex_derive_Reals_0 ; auto_derive end.",
            "VernacExtend",
            "463ea88a76a19d3288b3a84a2f41cf10125fc44b"
        ]
    ],
    "proofs": [
        {
            "name": "apply_ext",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros T k f g1 g2 Hg.",
                        "VernacExtend",
                        "a8f34e1dc59fa9170d61e44f45879c3555beb217"
                    ]
                },
                {
                    "command": [
                        "revert f.",
                        "VernacExtend",
                        "c97f81cbc07fdc8c49875e2ee7958808979dddbc"
                    ]
                },
                {
                    "command": [
                        "induction k.",
                        "VernacExtend",
                        "40c5b84c7f25c7c24e470db498af5e654cfce415"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros f.",
                        "VernacExtend",
                        "d55304fde379b586a2d23f40fabc5399298bf19a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hg.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply IHk.",
                        "VernacExtend",
                        "1daf2f29fa394c82d6059a2f49d308ae2b5305da"
                    ]
                },
                {
                    "command": [
                        "intros n Hn.",
                        "VernacExtend",
                        "4a15d287eb245c84eabfb58cba2e377ac025029a"
                    ]
                },
                {
                    "command": [
                        "apply Hg.",
                        "VernacExtend",
                        "01c1d3461bd6fa059f36624dcd703fe73a0894a8"
                    ]
                },
                {
                    "command": [
                        "now apply lt_S.",
                        "VernacExtend",
                        "c5df6da0ed6232be994e34c8035ccb6061cd5cab"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sn.",
                        "VernacExtend",
                        "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "foldr_prop_nth",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros T P d l n Hl Hd.",
                        "VernacExtend",
                        "4c08bd0c5c4a8b347d7fa0629088da2660f30e34"
                    ]
                },
                {
                    "command": [
                        "revert l n Hl.",
                        "VernacExtend",
                        "4b4220c8d5d92d8cdfbf21e3daa582a7e7b1a0d1"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "intros n _.",
                        "VernacExtend",
                        "41d8c008b414e870b3087cc6cbefb3f03d1da66e"
                    ]
                },
                {
                    "command": [
                        "now rewrite nth_nil.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "intros [|n].",
                        "VernacExtend",
                        "43bec745667d2fc0e7c5252f9dc776453f0890e2"
                    ]
                },
                {
                    "command": [
                        "now intros (H,_).",
                        "VernacExtend",
                        "f6f0ba5692602cae726e2a2aa1ca390f8b30fb58"
                    ]
                },
                {
                    "command": [
                        "intros (_,H).",
                        "VernacExtend",
                        "25f6a2cd1cb0bd6a2f0d7abf0ed531ec59abb9ee"
                    ]
                },
                {
                    "command": [
                        "now apply IHl.",
                        "VernacExtend",
                        "3fc417997870147ed2c9600b1a2f8a7a33be8f4a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_const_correct",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "induction e using expr_ind'.",
                        "VernacExtend",
                        "6a34bff1f7203e29c107a185ad58979b6f3e856b"
                    ]
                },
                {
                    "command": [
                        "simpl => k Hk l x1 x2.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!nth_set_nth /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now rewrite -ssrnat.eqnE (ssrbool.negbTE Hk).",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "simpl => n Hc l x1 x2.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply apply_ext.",
                        "VernacExtend",
                        "4eb7dcf62760237fa17ced634daa34a66caf7a6e"
                    ]
                },
                {
                    "command": [
                        "intros m _.",
                        "VernacExtend",
                        "383c849a9ea3da2af8245df03c1b9e0ef7ab6339"
                    ]
                },
                {
                    "command": [
                        "revert m.",
                        "VernacExtend",
                        "43cfb708640da71e43e04c57468c99e6fc662c0f"
                    ]
                },
                {
                    "command": [
                        "induction le.",
                        "VernacExtend",
                        "3c5d47e111a78b836cf99158239e39e0e694e505"
                    ]
                },
                {
                    "command": [
                        "intros m.",
                        "VernacExtend",
                        "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
                    ]
                },
                {
                    "command": [
                        "now rewrite nth_nil.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "apply andb_prop in Hc.",
                        "VernacExtend",
                        "6e35ac8c4d96720e6679a99ed3250897b1947d2e"
                    ]
                },
                {
                    "command": [
                        "intros [|m].",
                        "VernacExtend",
                        "3cf60c86032d06e38a93188eef18f1e089d81598"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now apply H.",
                        "VernacExtend",
                        "e28edffe226486c29d50d204164561fb199b8c97"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply IHle.",
                        "VernacExtend",
                        "643780f977855f945532866720a558f5a34ca960"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Hc.",
                        "VernacExtend",
                        "b900f3304ba75d1bc8becba9c3e19edfabbb7700"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "simpl => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move /ssrbool.andP => [H1 H2] l x1 x2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHe2 n H2 l x1 x2).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now apply: (IHe1 (S n) _ (interp (set_nth 0 l n x2) e2 :: l)).",
                        "VernacExtend",
                        "0dc5011c548c783484f0908a5a62d8c809131988"
                    ]
                },
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "simpl is_const.",
                        "VernacExtend",
                        "1eeb9d83143ca3670a68391119546b0cf0fd4d24"
                    ]
                },
                {
                    "command": [
                        "move /ssrbool.andP => [H1 H2] l x1 x2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "change (interp (set_nth 0 (set_nth 0 l n x1) 0 (interp (set_nth 0 l n x1) e2)) e1 = interp (set_nth 0 (set_nth 0 l n x2) 0 (interp (set_nth 0 l n x2) e2)) e1).",
                        "VernacExtend",
                        "b28a34eac11b1fa6ce26b43b44de78fbf64cc4ab"
                    ]
                },
                {
                    "command": [
                        "move: H1.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "replace (orb (ssrnat.eqn n 0) (is_const e1 n)) with (orb (ssrnat.eqn n 0) (andb (negb (ssrnat.eqn n 0)) (is_const e1 n))).",
                        "VernacExtend",
                        "ed627d4736d77853a159098aa218afba3c80d1ed"
                    ]
                },
                {
                    "command": [
                        "move /ssrbool.orP => [H1|].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite set_set_nth (set_set_nth 0 l n x2).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -ssrnat.eqnE H1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now rewrite (IHe2 n H2 l x1 x2).",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "move /ssrbool.andP => [H1 H3].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite set_set_nth (set_set_nth 0 l n x2).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -ssrnat.eqnE (ssrbool.negbTE H1).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHe2 n H2 l x1 x2).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now apply IHe1.",
                        "VernacExtend",
                        "c175ccb3c07c4a158940a44a7cba42e92bcb57a4"
                    ]
                },
                {
                    "command": [
                        "now case (ssrnat.eqn n 0).",
                        "VernacExtend",
                        "86959f24c9ee8c35588d209ee1fd1b19856f608e"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "simpl => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move /ssrbool.andP => [H1 H2] l x1 x2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "now rewrite (IHe1 n H1 l x1 x2) (IHe2 n H2 l x1 x2).",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "simpl => n H l x1 x2.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "now rewrite (IHe n H l x1 x2).",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "simpl => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move /ssrbool.andP => [H1].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move /ssrbool.andP => [H2 H3] l x1 x2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHe2 n H2 l x1 x2) (IHe3 n H3 l x1 x2).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply RInt_ext => x _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply (IHe1 _ H1 (x :: l)).",
                        "VernacExtend",
                        "1583b26a55763bc97e8222a3e3970fc4808d1960"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_map'",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros T1 x T2 f n s.",
                        "VernacExtend",
                        "c3ff0eb30655b929085a6c41d7169d59a213c4d0"
                    ]
                },
                {
                    "command": [
                        "case (ssrnat.leqP (size s) n) => Hs.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite 2?nth_default ?size_map //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now apply nth_map.",
                        "VernacExtend",
                        "efd529d8fa8f15409ff6db5dcc249c5e27f0f7d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "interp_ext",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "intros l1 l2 e Hl.",
                        "VernacExtend",
                        "dff07aae9c6a3ee007b2f350dc89602327c59259"
                    ]
                },
                {
                    "command": [
                        "revert l1 l2 Hl.",
                        "VernacExtend",
                        "836b9876cc98c1b8cc432ab6dcde6124705acfdb"
                    ]
                },
                {
                    "command": [
                        "induction e using expr_ind'.",
                        "VernacExtend",
                        "6a34bff1f7203e29c107a185ad58979b6f3e856b"
                    ]
                },
                {
                    "command": [
                        "now simpl => l1 l2 Hl.",
                        "VernacExtend",
                        "11b5461ec014b2c024111f05e9fbd95b72b076c3"
                    ]
                },
                {
                    "command": [
                        "simpl => l1 l2 Hl.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply apply_ext.",
                        "VernacExtend",
                        "4eb7dcf62760237fa17ced634daa34a66caf7a6e"
                    ]
                },
                {
                    "command": [
                        "intros n _.",
                        "VernacExtend",
                        "41d8c008b414e870b3087cc6cbefb3f03d1da66e"
                    ]
                },
                {
                    "command": [
                        "revert n.",
                        "VernacExtend",
                        "dfe642a551e2c983f16aa55151347c851d754720"
                    ]
                },
                {
                    "command": [
                        "induction le.",
                        "VernacExtend",
                        "3c5d47e111a78b836cf99158239e39e0e694e505"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "simpl in H |- *.",
                        "VernacExtend",
                        "83f76a13eeb5aba1a599462a48e3e57b0a31d2bc"
                    ]
                },
                {
                    "command": [
                        "destruct H as (Ha,Hb).",
                        "VernacExtend",
                        "0271ae4b34154abfded579fdaa0113115dc74c54"
                    ]
                },
                {
                    "command": [
                        "intros [|n].",
                        "VernacExtend",
                        "43bec745667d2fc0e7c5252f9dc776453f0890e2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now apply Ha.",
                        "VernacExtend",
                        "7437b013620dcad02ad2116f39228c11f88e39f5"
                    ]
                },
                {
                    "command": [
                        "now apply IHle.",
                        "VernacExtend",
                        "a1b3a3064cd18a267e5b8c2830ace8a48408d76f"
                    ]
                },
                {
                    "command": [
                        "simpl => l1 l2 Hl.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "unfold Derive_Rn.",
                        "VernacExtend",
                        "59a46db28515156db9499f1e926e54ff9778ec31"
                    ]
                },
                {
                    "command": [
                        "assert (Hn: forall n, nth 0 (map (interp l1) le) n = nth 0 (map (interp l2) le) n).",
                        "VernacExtend",
                        "4be72a4e3a5a72f05c4fa92d46f20790ecb0ecdd"
                    ]
                },
                {
                    "command": [
                        "intros p.",
                        "VernacExtend",
                        "223e3cb70cff95972873720780e7195aeb57b9fc"
                    ]
                },
                {
                    "command": [
                        "rewrite (nth_map' (Cst 0) (interp l1)) (nth_map' (Cst 0) (interp l2)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now apply (foldr_prop_nth _ _ _ H).",
                        "VernacExtend",
                        "bd518a2ffc3fc8f32146f02ffdf74e9196f02f59"
                    ]
                },
                {
                    "command": [
                        "rewrite Hn.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Derive_ext => t.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply apply_ext => p Hp.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hn.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "simpl => l1 l2 Hl.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply IHe1.",
                        "VernacExtend",
                        "ddaa93aa43ddb4f900e76824ad1deadc6c04a2ef"
                    ]
                },
                {
                    "command": [
                        "intros [|k].",
                        "VernacExtend",
                        "17ed4cb94ccbe888b3457daf9accd95143560509"
                    ]
                },
                {
                    "command": [
                        "now apply IHe2.",
                        "VernacExtend",
                        "ad0d075ae3d767aeda9053db59968c9f5b8909bf"
                    ]
                },
                {
                    "command": [
                        "apply Hl.",
                        "VernacExtend",
                        "02df804151e4adadf6baf4a5ea9b58097df0f911"
                    ]
                },
                {
                    "command": [
                        "intros l1 l2 Hl.",
                        "VernacExtend",
                        "c980f7f2a802e7939e11e601682f9746e65037f2"
                    ]
                },
                {
                    "command": [
                        "rewrite /interp -/interp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply IHe1 => k.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!nth_set_nth /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case eqtype.eq_op.",
                        "VernacExtend",
                        "e8c563d43573662672eaee5952d723379732123f"
                    ]
                },
                {
                    "command": [
                        "now apply IHe2.",
                        "VernacExtend",
                        "ad0d075ae3d767aeda9053db59968c9f5b8909bf"
                    ]
                },
                {
                    "command": [
                        "apply Hl.",
                        "VernacExtend",
                        "02df804151e4adadf6baf4a5ea9b58097df0f911"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "simpl => l1 l2 Hl.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2.",
                        "VernacExtend",
                        "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
                    ]
                },
                {
                    "command": [
                        "now apply IHe1.",
                        "VernacExtend",
                        "c175ccb3c07c4a158940a44a7cba42e92bcb57a4"
                    ]
                },
                {
                    "command": [
                        "now apply IHe2.",
                        "VernacExtend",
                        "ad0d075ae3d767aeda9053db59968c9f5b8909bf"
                    ]
                },
                {
                    "command": [
                        "simpl => l1 l2 Hl.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "now apply IHe.",
                        "VernacExtend",
                        "e420788c115cf43b5aec20f81e81ec6d5f73997f"
                    ]
                },
                {
                    "command": [
                        "simpl => l1 l2 Hl.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHe2 l1 l2 Hl) (IHe3 l1 l2 Hl).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply RInt_ext => x _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply IHe1.",
                        "VernacExtend",
                        "ddaa93aa43ddb4f900e76824ad1deadc6c04a2ef"
                    ]
                },
                {
                    "command": [
                        "intros [|k].",
                        "VernacExtend",
                        "17ed4cb94ccbe888b3457daf9accd95143560509"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "apply Hl.",
                        "VernacExtend",
                        "02df804151e4adadf6baf4a5ea9b58097df0f911"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "interp_set_nth",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "intros n l e.",
                        "VernacExtend",
                        "3152c72fd100824c81835b214e93a4a991b97e2f"
                    ]
                },
                {
                    "command": [
                        "apply interp_ext.",
                        "VernacExtend",
                        "ad38074b3d1cfc784bf0fbd97e7ee76dff8a1efd"
                    ]
                },
                {
                    "command": [
                        "intros k.",
                        "VernacExtend",
                        "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_set_nth /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case ssrnat.eqnP.",
                        "VernacExtend",
                        "2d5c8f6ed702cd80d860357e5a77c226ce0cacd3"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "now apply f_equal.",
                        "VernacExtend",
                        "2be51066ac0713afbd2686f67010448cf5cd7ac9"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "interp_domain_ext",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros l1 l2 b Hl.",
                        "VernacExtend",
                        "2110ec739c1b11dc51a168e41eb8908627209227"
                    ]
                },
                {
                    "command": [
                        "revert l1 l2 Hl.",
                        "VernacExtend",
                        "836b9876cc98c1b8cc432ab6dcde6124705acfdb"
                    ]
                },
                {
                    "command": [
                        "induction b using domain_ind' ; try easy ; simpl => l1 l2 Hl.",
                        "VernacExtend",
                        "ef32396349412c8767716418a1e649cf9250f066"
                    ]
                },
                {
                    "command": [
                        "by rewrite (interp_ext _ _ _ Hl).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "now rewrite -(eq_map (fun e => interp_ext _ _ e Hl)).",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "intros Hb.",
                        "VernacExtend",
                        "bf28ce675f0c35f7a6ee80ebcc4714ae6cf11f4b"
                    ]
                },
                {
                    "command": [
                        "now rewrite -(eq_map (fun e => interp_ext _ _ e Hl)).",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "rewrite Hl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_ext => x.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply interp_ext => k.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!nth_set_nth /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now case eqtype.eq_op.",
                        "VernacExtend",
                        "81dac4791e6af713e255e6e9ba5f2a42ea189f9d"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!Hl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply continuity_2d_pt_ext => x y.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply interp_ext => k.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!nth_set_nth /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case eqtype.eq_op => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!nth_set_nth /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now case eqtype.eq_op.",
                        "VernacExtend",
                        "81dac4791e6af713e255e6e9ba5f2a42ea189f9d"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!(interp_ext _ _ _ Hl).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply ex_RInt_ext.",
                        "VernacExtend",
                        "51adf38d2a1d01657c7d04f4d2f6d47917651f1c"
                    ]
                },
                {
                    "command": [
                        "intros x _.",
                        "VernacExtend",
                        "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
                    ]
                },
                {
                    "command": [
                        "apply interp_ext.",
                        "VernacExtend",
                        "ad38074b3d1cfc784bf0fbd97e7ee76dff8a1efd"
                    ]
                },
                {
                    "command": [
                        "intros [|k].",
                        "VernacExtend",
                        "17ed4cb94ccbe888b3457daf9accd95143560509"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "apply Hl.",
                        "VernacExtend",
                        "02df804151e4adadf6baf4a5ea9b58097df0f911"
                    ]
                },
                {
                    "command": [
                        "rewrite Hl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp => y.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!(interp_ext _ _ _ Hl).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply ex_RInt_ext.",
                        "VernacExtend",
                        "51adf38d2a1d01657c7d04f4d2f6d47917651f1c"
                    ]
                },
                {
                    "command": [
                        "intros x _.",
                        "VernacExtend",
                        "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
                    ]
                },
                {
                    "command": [
                        "apply interp_ext.",
                        "VernacExtend",
                        "ad38074b3d1cfc784bf0fbd97e7ee76dff8a1efd"
                    ]
                },
                {
                    "command": [
                        "intros [|k].",
                        "VernacExtend",
                        "17ed4cb94ccbe888b3457daf9accd95143560509"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "now rewrite /= 2!nth_set_nth /= Hl.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "intros (d,H).",
                        "VernacExtend",
                        "b9f87ec29410a0d268867e68404dac5bdcc53919"
                    ]
                },
                {
                    "command": [
                        "exists d.",
                        "VernacExtend",
                        "39cea21d4e04fa9463f57be4e5a423277681d456"
                    ]
                },
                {
                    "command": [
                        "rewrite -Hl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move: H ; apply filter_imp => y.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite (interp_ext _ _ _ Hl).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply ex_RInt_ext.",
                        "VernacExtend",
                        "51adf38d2a1d01657c7d04f4d2f6d47917651f1c"
                    ]
                },
                {
                    "command": [
                        "intros x _.",
                        "VernacExtend",
                        "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
                    ]
                },
                {
                    "command": [
                        "apply interp_ext.",
                        "VernacExtend",
                        "ad38074b3d1cfc784bf0fbd97e7ee76dff8a1efd"
                    ]
                },
                {
                    "command": [
                        "intros [|k].",
                        "VernacExtend",
                        "17ed4cb94ccbe888b3457daf9accd95143560509"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "now rewrite /= 2!nth_set_nth /= Hl.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "induction ld.",
                        "VernacExtend",
                        "107e2470b62b32ff0e5a1b77eef9296bd4aea616"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "simpl in H |- *.",
                        "VernacExtend",
                        "83f76a13eeb5aba1a599462a48e3e57b0a31d2bc"
                    ]
                },
                {
                    "command": [
                        "intros (H1,H2).",
                        "VernacExtend",
                        "cbe4fae06561c7d97a3cceb65a0c2d56dc027b9e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply (proj1 H _ _ Hl H1).",
                        "VernacExtend",
                        "909c32f92a7c1f77360114475637e8fd6e69f2e6"
                    ]
                },
                {
                    "command": [
                        "now apply IHld.",
                        "VernacExtend",
                        "c9230ba54c9a76d622b02444d96b0e8edb91690e"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!(interp_ext _ _ _ Hl).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "intros H t Ht.",
                        "VernacExtend",
                        "1de58bb06ab2b1d021dff764cece3818599f3117"
                    ]
                },
                {
                    "command": [
                        "apply (IHb (t :: l1)).",
                        "VernacExtend",
                        "d5d703fa1bd840acd01ea5c384823405af59a42e"
                    ]
                },
                {
                    "command": [
                        "intros [|k].",
                        "VernacExtend",
                        "17ed4cb94ccbe888b3457daf9accd95143560509"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "apply Hl.",
                        "VernacExtend",
                        "02df804151e4adadf6baf4a5ea9b58097df0f911"
                    ]
                },
                {
                    "command": [
                        "now apply H.",
                        "VernacExtend",
                        "e28edffe226486c29d50d204164561fb199b8c97"
                    ]
                },
                {
                    "command": [
                        "apply IHb.",
                        "VernacExtend",
                        "55d9e7ec2f3b99e177dec889d87448cefeb44ac4"
                    ]
                },
                {
                    "command": [
                        "intros [|k].",
                        "VernacExtend",
                        "17ed4cb94ccbe888b3457daf9accd95143560509"
                    ]
                },
                {
                    "command": [
                        "now apply interp_ext.",
                        "VernacExtend",
                        "a06feaa664f986d39174179b253149d0f679694c"
                    ]
                },
                {
                    "command": [
                        "apply Hl.",
                        "VernacExtend",
                        "02df804151e4adadf6baf4a5ea9b58097df0f911"
                    ]
                },
                {
                    "command": [
                        "rewrite Hl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply filter_imp => y.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply IHb => k.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2!nth_set_nth /= Hl.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!Hl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply locally_2d_impl.",
                        "VernacExtend",
                        "79216e466e9b140cb94fb885c192fee3ad8e1edf"
                    ]
                },
                {
                    "command": [
                        "apply locally_2d_forall => u v.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply IHb => k.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!nth_set_nth /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case eqtype.eq_op => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!nth_set_nth /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now case eqtype.eq_op.",
                        "VernacExtend",
                        "81dac4791e6af713e255e6e9ba5f2a42ea189f9d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hl 2!(interp_ext _ _ _ Hl).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "intros (d,Hd).",
                        "VernacExtend",
                        "e9c112965f05db158ecf7a274a4e808e8c381359"
                    ]
                },
                {
                    "command": [
                        "exists d => t u Ht Hu.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply: IHb (Hd t u Ht Hu).",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "intros [|k].",
                        "VernacExtend",
                        "17ed4cb94ccbe888b3457daf9accd95143560509"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "now rewrite /= 2!nth_set_nth /= Hl.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "interp_domain_set_nth",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "intros n l b.",
                        "VernacExtend",
                        "4ec1548a9a44e62bf50a74691a9341756aa30945"
                    ]
                },
                {
                    "command": [
                        "split ; apply interp_domain_ext => k.",
                        "VernacExtend",
                        "6bff1d22f26f73e2af6bbb2e9c65e0bfad7c6104"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_set_nth /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case ssrnat.eqnP.",
                        "VernacExtend",
                        "2d5c8f6ed702cd80d860357e5a77c226ce0cacd3"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "now apply f_equal.",
                        "VernacExtend",
                        "2be51066ac0713afbd2686f67010448cf5cd7ac9"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_set_nth /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case ssrnat.eqnP.",
                        "VernacExtend",
                        "2d5c8f6ed702cd80d860357e5a77c226ce0cacd3"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "now apply f_equal.",
                        "VernacExtend",
                        "2be51066ac0713afbd2686f67010448cf5cd7ac9"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniq_index_not_const",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "intros n l.",
                        "VernacExtend",
                        "d15a0b6304d5de3931ed94d7fd1378867aca9f17"
                    ]
                },
                {
                    "command": [
                        "unfold index_not_const.",
                        "VernacExtend",
                        "f4d1f8af2e0346194870a6749ff90d793ff0eedf"
                    ]
                },
                {
                    "command": [
                        "apply filter_uniq.",
                        "VernacExtend",
                        "6274bbc75d1df4fed6e3ab84f97cc64110c21398"
                    ]
                },
                {
                    "command": [
                        "apply iota_uniq.",
                        "VernacExtend",
                        "cd6089f164e6328583f8d8bd5e4296cad3ecaafd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "index_not_const_correct",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "intros n l k.",
                        "VernacExtend",
                        "1c7f86e0028f5520b060c312e1121eb557bac846"
                    ]
                },
                {
                    "command": [
                        "rewrite /index_not_const (@mem_filter ssrnat.nat_eqType) mem_iota /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite ssrnat.add0n.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case E: ssrnat.leq.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case is_const.",
                        "VernacExtend",
                        "43533b2121bd4abf69daa75fea711042519546ed"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "now elim.",
                        "VernacExtend",
                        "2b13d7e32b7c2253786b05d87633ef340e5a61df"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_default //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "revert E.",
                        "VernacExtend",
                        "d662cded303c06da8a5e4209974759f5e1f58a8d"
                    ]
                },
                {
                    "command": [
                        "rewrite ssrnat.ltnNge.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now case ssrnat.leq.",
                        "VernacExtend",
                        "a03c99c6bb447ede55691a331d89b363f4923210"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "interp_AppExt_set_nth_not_const",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "intros k f le l n x.",
                        "VernacExtend",
                        "499c92c7828a24c161f4fc781f3fde8cd9e5d2df"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply apply_ext => m _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "generalize (index_not_const_correct n le m).",
                        "VernacExtend",
                        "96823b933ecad5e53d82275232148a08e44c7d54"
                    ]
                },
                {
                    "command": [
                        "induction (index_not_const le n) as [|t s IHs].",
                        "VernacExtend",
                        "250cf44a6455caf1ed6190b9e0391c1e6e7e9b57"
                    ]
                },
                {
                    "command": [
                        "simpl => Hp.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case (ssrnat.leqP (size le) m) => Hs.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite 2?nth_default ?size_map //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite 2?(nth_map (Cst 0)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_const_correct _ n _ l x (nth 0 l n)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply interp_set_nth.",
                        "VernacExtend",
                        "a783486c4f5fe9e5f8a115a364259d67ae5d4df7"
                    ]
                },
                {
                    "command": [
                        "now apply Hp.",
                        "VernacExtend",
                        "d0d05fd0d86482bd1c693dda5b76cb3301f48ede"
                    ]
                },
                {
                    "command": [
                        "rewrite (@in_cons ssrnat.nat_eqType) /= -ssrnat.eqnE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case E: (ssrnat.eqn m t).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "rewrite (ssrnat.eqnP E).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case (ssrnat.leqP (size le) t) => Hs.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2?nth_default ?size_map.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "now rewrite (nth_map (Cst 0)).",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply IHs.",
                        "VernacExtend",
                        "11b7ae33b06262d123e684b34b43a53f41906714"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UnaryDiff_exp",
            "line_nb": 1158,
            "steps": [
                {
                    "command": [
                        "exists exp.",
                        "VernacExtend",
                        "f2b9a75fa7c57a12804298e83d9e579b1bc206bf"
                    ]
                },
                {
                    "command": [
                        "move => x ; by apply is_derive_Reals, derivable_pt_lim_exp.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UnaryDiff_pow",
            "line_nb": 1162,
            "steps": [
                {
                    "command": [
                        "intro n.",
                        "VernacExtend",
                        "7b184e6f13215b0f6a04b4277e277a724a645d52"
                    ]
                },
                {
                    "command": [
                        "exists (fun x => INR n * x ^ (Peano.pred n)).",
                        "VernacExtend",
                        "820c7fc1ed8fa634bdebdb6f727c9ed1585b1c95"
                    ]
                },
                {
                    "command": [
                        "move => x ; by apply is_derive_Reals, derivable_pt_lim_pow.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UnaryDiff_Rabs",
            "line_nb": 1167,
            "steps": [
                {
                    "command": [
                        "exists (fun x => sign x) (fun x => x <> 0).",
                        "VernacExtend",
                        "ba2500851270e1f5e4467512d17ab3bf604f490d"
                    ]
                },
                {
                    "command": [
                        "move => x Hx0 ; by apply filterdiff_Rabs.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UnaryDiff_Rsqr",
            "line_nb": 1171,
            "steps": [
                {
                    "command": [
                        "exists (fun x => 2 * x).",
                        "VernacExtend",
                        "e20640285590c409035bfe1510e3aaa5fb5b3948"
                    ]
                },
                {
                    "command": [
                        "move => x ; by apply is_derive_Reals, derivable_pt_lim_Rsqr.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UnaryDiff_cosh",
            "line_nb": 1175,
            "steps": [
                {
                    "command": [
                        "exists sinh.",
                        "VernacExtend",
                        "f8539fe609887f6a18ed6f5dec6db2a6fe27ffd3"
                    ]
                },
                {
                    "command": [
                        "move => x ; by apply is_derive_Reals, derivable_pt_lim_cosh.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UnaryDiff_sinh",
            "line_nb": 1179,
            "steps": [
                {
                    "command": [
                        "exists (fun x => cosh x).",
                        "VernacExtend",
                        "06d0a14480d5998e723e3fd45cdc0ebe342ff30f"
                    ]
                },
                {
                    "command": [
                        "move => x ; by apply is_derive_Reals, derivable_pt_lim_sinh.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UnaryDiff_ps_atan",
            "line_nb": 1183,
            "steps": [
                {
                    "command": [
                        "exists (fun x => /(1+x^2)) (fun x => -1 < x < 1).",
                        "VernacExtend",
                        "953cb511b94da6144165f0ca6dfff7b34c5d37c9"
                    ]
                },
                {
                    "command": [
                        "move => x Hx ; by apply is_derive_Reals, derivable_pt_lim_ps_atan.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UnaryDiff_atan",
            "line_nb": 1187,
            "steps": [
                {
                    "command": [
                        "exists (fun x => /(1+x^2)).",
                        "VernacExtend",
                        "7e0dfa97d5450329e5c251e03df6c5b6a90ed67c"
                    ]
                },
                {
                    "command": [
                        "move => x ; by apply is_derive_Reals, derivable_pt_lim_atan.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UnaryDiff_ln",
            "line_nb": 1191,
            "steps": [
                {
                    "command": [
                        "exists (fun x => /x) (fun x => 0 < x).",
                        "VernacExtend",
                        "3611d93a7cb150f4535c07160b3a662fb126c8dc"
                    ]
                },
                {
                    "command": [
                        "move => x Hx ; by apply is_derive_Reals, derivable_pt_lim_ln.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UnaryDiff_cos",
            "line_nb": 1195,
            "steps": [
                {
                    "command": [
                        "exists (fun x => - sin x ).",
                        "VernacExtend",
                        "09e349577d1ce2b151f3bf5f56d900968df19909"
                    ]
                },
                {
                    "command": [
                        "move => x ; by apply is_derive_Reals, derivable_pt_lim_cos.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UnaryDiff_sin",
            "line_nb": 1199,
            "steps": [
                {
                    "command": [
                        "exists cos.",
                        "VernacExtend",
                        "05deb7b623975a49f0bfb131d236840ad64d0eb0"
                    ]
                },
                {
                    "command": [
                        "move => x ; by apply is_derive_Reals, derivable_pt_lim_sin.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UnaryDiff_sqrt",
            "line_nb": 1203,
            "steps": [
                {
                    "command": [
                        "exists (fun x => / (2 * sqrt x)) (fun x => 0 < x).",
                        "VernacExtend",
                        "33d6aba532aec2000091bd4515ad78f2d0564155"
                    ]
                },
                {
                    "command": [
                        "move => x Hx ; by apply is_derive_Reals, derivable_pt_lim_sqrt.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "var",
            "line_nb": 1207,
            "steps": [
                {
                    "command": [
                        "exact (fun _ => R0).",
                        "VernacExtend",
                        "9562b4db84a34528273732ab7ac64cb696b1a81c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "auto_derive_helper",
            "line_nb": 1212,
            "steps": [
                {
                    "command": [
                        "intros e l n.",
                        "VernacExtend",
                        "737910d9939abfb5b7c50492ece00055cde14157"
                    ]
                },
                {
                    "command": [
                        "generalize (D_correct e l n).",
                        "VernacExtend",
                        "54a5edd90fbfe3a0ff3549889089431b69d3f4cc"
                    ]
                },
                {
                    "command": [
                        "destruct (D e n) as (d1,d2).",
                        "VernacExtend",
                        "9d06c75950ab8a78d8d03fe3646aedd825ca5379"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "now apply simplify_domain_correct.",
                        "VernacExtend",
                        "1c0c6cb864ff844700353881ff261704cb21a7c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}