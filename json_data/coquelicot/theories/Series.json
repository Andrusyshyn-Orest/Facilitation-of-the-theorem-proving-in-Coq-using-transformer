{
    "filename": "theories/Series.v",
    "coq_project": "coquelicot",
    "vernac_cmds": [
        [
            "Require Import Reals Omega Psatz.",
            "VernacRequire",
            "67186d45054a622054bcfd070636bf44ec85c323"
        ],
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "Require Import Rcomplements.",
            "VernacRequire",
            "6092419151bd74aa7f83ac953c7ed042021bf7ad"
        ],
        [
            "Require Import Lim_seq Rbar Hierarchy.",
            "VernacRequire",
            "eeadc0898e044483eb6be36c827f8d85b1f11c04"
        ],
        [
            "Section Definitions.",
            "VernacBeginSection",
            "44c8aeee6f7e234b1ae876a1cda441d352768d1b"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Definition is_series (a : nat -> V) (l : V) := filterlim (sum_n a) (eventually) (locally l).",
            "VernacDefinition",
            "c0900629d52d39a204f54f7a4ab7366f3c6fc54b"
        ],
        [
            "Definition ex_series (a : nat -> V) := exists l : V, is_series a l.",
            "VernacDefinition",
            "fadd722810fc9068dcac4b59db1d952cdc8d25d1"
        ],
        [
            "Definition Cauchy_series (a : nat -> V) := forall eps : posreal, exists N : nat, forall n m : nat, (N <= n)%nat -> (N <= m)%nat -> norm (sum_n_m a n m) < eps.",
            "VernacDefinition",
            "ff19e42ab862a6e24b9f0ab6e3400bdaa00d7f4e"
        ],
        [
            "End Definitions.",
            "VernacEndSegment",
            "a9ff902ce1bf921ade03bc4535b4de21f2fcc02c"
        ],
        [
            "Definition Series (a : nat -> R) : R := real (Lim_seq (sum_n a)).",
            "VernacDefinition",
            "a38fffc9338bd6ffe5e4be3929eae711479e6126"
        ],
        [
            "Lemma ex_series_dec (a : nat -> R) : {ex_series a} + {~ ex_series a}.",
            "VernacStartTheoremProof",
            "2075110afa2949778722ec9b2325b78e7836e339"
        ],
        [
            "case: (ex_lim_seq_dec (sum_n a)) => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Lim_seq_correct in H.",
            "VernacExtend",
            "922d480e665803c534a201f4f7ce2163ea41d20e"
        ],
        [
            "case: (Lim_seq (sum_n a)) H => [l | | ] H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "left ; by exists l.",
            "VernacExtend",
            "8d1d3855bd3af5f36952354b4669569e4c0e7e37"
        ],
        [
            "right ; case => l H0.",
            "VernacExtend",
            "e985f090bbc3f2b716cbe18e96b8cccc4daa9e68"
        ],
        [
            "absurd (p_infty = Finite l) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -(is_lim_seq_unique _ _ H).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply is_lim_seq_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "right ; case => l H0.",
            "VernacExtend",
            "e985f090bbc3f2b716cbe18e96b8cccc4daa9e68"
        ],
        [
            "absurd (m_infty = Finite l) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -(is_lim_seq_unique _ _ H).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply is_lim_seq_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "right ; case => l.",
            "VernacExtend",
            "e985f090bbc3f2b716cbe18e96b8cccc4daa9e68"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "by exists l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_unique (a : nat -> R) (l : R) : is_series a l -> Series a = l.",
            "VernacStartTheoremProof",
            "0f5956362ffbdb7942f378aebb0a72c4ffd537ab"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace l with (real (Finite l)) by auto.",
            "VernacExtend",
            "73a04e6bc75bd526ae1172f9e0d93e041d09f5bb"
        ],
        [
            "apply (f_equal real).",
            "VernacExtend",
            "57e73bb5eae5aa448423da85c916d02b5d8e8198"
        ],
        [
            "by apply is_lim_seq_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Series_correct (a : nat -> R) : ex_series a -> is_series a (Series a).",
            "VernacStartTheoremProof",
            "14e1e8ef4fb250ae726f2a08ff2de85d517788bb"
        ],
        [
            "case => l Ha.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (is_series_unique a l).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_Reals (a : nat -> R) (l : R) : is_series a l <-> infinite_sum a l.",
            "VernacStartTheoremProof",
            "ef42c62ba282827ae5a7333bc46c4923285bfe91"
        ],
        [
            "split => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (is_lim_seq_spec _ l) in H.",
            "VernacExtend",
            "8d7a1e99e945e93ea5bf25bace819453d8c0d73a"
        ],
        [
            "move => e He ; set eps := mkposreal e He.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "case: (H eps) => /= {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite <- sum_n_Reals.",
            "VernacExtend",
            "0489649d8f03c9e398e73562605a58fa65a0f9e9"
        ],
        [
            "by apply (H n Hn).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (is_lim_seq_spec _ l).",
            "VernacExtend",
            "b647a8fffd8d7d14ce42956445e40a177c1ec806"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (H eps (cond_pos eps)) => {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite sum_n_Reals.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply (H n Hn).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_Reals_0 (a : nat -> R) : ex_series a -> { l:R | Un_cv (fun N:nat => sum_f_R0 a N) l }.",
            "VernacStartTheoremProof",
            "e793d9a6ad875cbb6306bccefa5765458fb87b91"
        ],
        [
            "move => H ; exists (Series a) ; case: H => l H.",
            "VernacExtend",
            "474cbc8d9ea0e93350e4c1452256b4257e299ed7"
        ],
        [
            "replace (Series a) with l.",
            "VernacExtend",
            "8b3766efccd9cf5bc1e90787dbe87e61c55c19de"
        ],
        [
            "move => e He ; set eps := mkposreal e He.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "apply (is_lim_seq_spec _ l) in H.",
            "VernacExtend",
            "8d7a1e99e945e93ea5bf25bace819453d8c0d73a"
        ],
        [
            "case: (H eps) => /= {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite <- sum_n_Reals.",
            "VernacExtend",
            "0489649d8f03c9e398e73562605a58fa65a0f9e9"
        ],
        [
            "by apply (H n Hn).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "rewrite /Series.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace l with (real (Finite l)) by auto.",
            "VernacExtend",
            "73a04e6bc75bd526ae1172f9e0d93e041d09f5bb"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "by apply is_lim_seq_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_Reals_1 (a : nat -> R) : { l:R | Un_cv (fun N:nat => sum_f_R0 a N) l } -> ex_series a.",
            "VernacStartTheoremProof",
            "10e86cf9767eec0c06863a5e43bf00d81e2fcd0b"
        ],
        [
            "case => l H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "apply (is_lim_seq_spec _ l).",
            "VernacExtend",
            "b647a8fffd8d7d14ce42956445e40a177c1ec806"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (H eps (cond_pos eps)) => {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite sum_n_Reals.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply (H n Hn).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cauchy_ex_series {K : AbsRing} {V : CompleteNormedModule K} (a : nat -> V) : ex_series a -> Cauchy_series a.",
            "VernacStartTheoremProof",
            "010b87946dd604d6f013d0c78396804b8b4e3b1b"
        ],
        [
            "intros [l Hl] eps.",
            "VernacExtend",
            "ea70ff61799fda0f1954afaf24cc655c5262582f"
        ],
        [
            "set (eps' := eps / (norm_factor (V := V))).",
            "VernacExtend",
            "2a2dd646fd7e217237ef4ddd0c2d576d3a9ea39b"
        ],
        [
            "assert (He: 0 < eps').",
            "VernacExtend",
            "5c9f183cc2ddbc3e9221fba8f4654e7799d828f4"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "apply eps.",
            "VernacExtend",
            "594d151b731c3f7a90933421f2349d84bc05293f"
        ],
        [
            "apply norm_factor_gt_0.",
            "VernacExtend",
            "c21e5c842b3a171fd394566edf1ef5867669763c"
        ],
        [
            "destruct (proj2 (filterlim_locally_cauchy (U := V) (F := eventually) (sum_n (fun k => a k))) (ex_intro _ l Hl) (mkposreal _ He)) as [P [[N HN] HP]].",
            "VernacExtend",
            "937c99baf552882439ea256d2847e7e9a6a904c1"
        ],
        [
            "exists (S N).",
            "VernacExtend",
            "e311edc001e909167c32da4a482b57888adfab8c"
        ],
        [
            "intros [|u] v Hu Hv.",
            "VernacExtend",
            "bfd050c0145ddb5730e1dd553ad93b92f1598c33"
        ],
        [
            "elim le_Sn_O with (1 := Hu).",
            "VernacExtend",
            "20b4bd459316560effd5d4208147417d5d3b9b7b"
        ],
        [
            "destruct (le_or_lt u v) as [Huv|Huv].",
            "VernacExtend",
            "4d771e5ffe4c31e1feede6ecb06721c6de6a01ab"
        ],
        [
            "rewrite -> sum_n_m_sum_n with (1 := Huv).",
            "VernacExtend",
            "dfcbe6d5eebb779a61952c5ab394f2cc28f2fcf0"
        ],
        [
            "replace (pos eps) with (norm_factor (V := V) * mkposreal _ He).",
            "VernacExtend",
            "24347993b8dccfd54d1768837f1e60ed261a1ba2"
        ],
        [
            "apply norm_compat2.",
            "VernacExtend",
            "92632c04f897a1a0dea9277f16ae54baa78f6cfe"
        ],
        [
            "apply HP ; apply HN.",
            "VernacExtend",
            "b209e83bc4523fc645892573dc1e9a1a7a3029ba"
        ],
        [
            "now apply le_S_n.",
            "VernacExtend",
            "172d1d429f1fcfbbf2a7810e3e9265685ea093bc"
        ],
        [
            "now apply le_Sn_le.",
            "VernacExtend",
            "77ac5ecceea8f817d622be32ed056989cfadda5a"
        ],
        [
            "rewrite /eps' /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply Rgt_not_eq, norm_factor_gt_0.",
            "VernacExtend",
            "bedcdb9c542523a7d0cb836687a677ddde20498a"
        ],
        [
            "rewrite sum_n_m_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite norm_zero.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply cond_pos.",
            "VernacExtend",
            "8ddb865849694c081c727a4dcd01494f171e402e"
        ],
        [
            "now apply lt_S.",
            "VernacExtend",
            "c5df6da0ed6232be994e34c8035ccb6061cd5cab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_Cauchy {K : AbsRing} {V : CompleteNormedModule K} (a : nat -> V) : Cauchy_series a -> ex_series a.",
            "VernacStartTheoremProof",
            "30c5becb1f6a29ff5986f05567549a7af5168982"
        ],
        [
            "intros Ca.",
            "VernacExtend",
            "53bb953df1090d40a3a180bddbeaa0f77ec6e9bf"
        ],
        [
            "destruct (proj1 (filterlim_locally_cauchy (U := V) (F := eventually) (sum_n a))) as [l Hl].",
            "VernacExtend",
            "9b6acc8b4c8712480b3719af0ed7cdbfbc8ac76f"
        ],
        [
            "2: now exists l.",
            "VernacExtend",
            "729dc00b610c94d992fd0fae892271bcd688d77f"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "destruct (Ca eps) as [N HN].",
            "VernacExtend",
            "f380375d953c7936be4f7d43e0178e5e953f8b64"
        ],
        [
            "exists (le N).",
            "VernacExtend",
            "8e3ccf744e56b629bee8962e2e2f4abae25ec559"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now exists N.",
            "VernacExtend",
            "359700554b320f369e0bf860e95be8bdf79ba0a0"
        ],
        [
            "intros u v.",
            "VernacExtend",
            "d0984daaf81b5a88d7b1c18dbba4c758cf27d325"
        ],
        [
            "wlog Huv: u v / (u <= v)%nat.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "destruct (le_or_lt u v) as [Huv|Huv].",
            "VernacExtend",
            "4d771e5ffe4c31e1feede6ecb06721c6de6a01ab"
        ],
        [
            "now apply H.",
            "VernacExtend",
            "e28edffe226486c29d50d204164561fb199b8c97"
        ],
        [
            "intros Hu Hv.",
            "VernacExtend",
            "5f83f1b777c4021d6dcbf70e9280765aa78a70b7"
        ],
        [
            "apply ball_sym.",
            "VernacExtend",
            "3909ece0d95951ed694abe7769c7f53cdc513353"
        ],
        [
            "apply H => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now apply lt_le_weak.",
            "VernacExtend",
            "011ffacd098aa65ac14a4c76fba8bc1bf047b12d"
        ],
        [
            "intros Hu Hv.",
            "VernacExtend",
            "5f83f1b777c4021d6dcbf70e9280765aa78a70b7"
        ],
        [
            "apply: norm_compat1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite <- sum_n_m_sum_n with (1 := Huv).",
            "VernacExtend",
            "12f574a290f84d68647920ca2c31b3aac67b8eba"
        ],
        [
            "apply HN => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "now apply le_S.",
            "VernacExtend",
            "83e46c3d4ad488778b4895d310e46eba5fd4cd36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Properties1.",
            "VernacBeginSection",
            "45bd09a1dee129b55dfdea21d0250310bdf4d239"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_series_ext (a b : nat -> V) (l : V) : (forall n, a n = b n) -> (is_series a l) -> is_series b l.",
            "VernacStartTheoremProof",
            "017a70dce1587c1b882dd0b4e086a783f5212503"
        ],
        [
            "move => Heq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterlim_ext.",
            "VernacExtend",
            "5a8de5597a216013626ab027ef1ab5ce9b617a16"
        ],
        [
            "intros x; now apply sum_n_m_ext.",
            "VernacExtend",
            "f7b04540f0c0eee4c3da73e1d1b3fcf15be75a05"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_ext (a b : nat -> V) : (forall n, a n = b n) -> ex_series a -> ex_series b.",
            "VernacStartTheoremProof",
            "dfbc170c217608137d2a1893706b719db1e0bf92"
        ],
        [
            "move => Heq [l Ha].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists l ; by apply is_series_ext with a.",
            "VernacExtend",
            "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Series_ext (a b : nat -> R) : (forall n, a n = b n) -> Series a = Series b.",
            "VernacStartTheoremProof",
            "646cd64e9f2ececdf0a551db3065a728c6367971"
        ],
        [
            "move => Heq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply (f_equal real).",
            "VernacExtend",
            "57e73bb5eae5aa448423da85c916d02b5d8e8198"
        ],
        [
            "apply Lim_seq_ext.",
            "VernacExtend",
            "7ea6f4316462f16e8e0201ec50e1735bb5bff76f"
        ],
        [
            "intros n; now apply sum_n_m_ext.",
            "VernacExtend",
            "c75c4a1e39b0f6483ae1eba03fd9ebcd64e308ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_incr_1 (a : nat -> V) (l : V) : is_series a (plus l (a O)) -> is_series (fun k => a (S k)%nat) l.",
            "VernacStartTheoremProof",
            "1ee644cc31f79c26df29f45541cf7fe6b875a132"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply filterlim_ext with (fun k => plus (sum_n a (S k)) (opp (a 0%nat))).",
            "VernacExtend",
            "4ce856236a795f0baffa1d09b11615c0d91dbe32"
        ],
        [
            "induction x; simpl.",
            "VernacExtend",
            "032ca6881eec9f6ca6ad619919b16fb530146db9"
        ],
        [
            "rewrite sum_Sn !sum_O (plus_comm _ (a 1%nat)); rewrite <- plus_assoc.",
            "VernacExtend",
            "85de7ed70a17bda19406399a8c343e9d14c2dde5"
        ],
        [
            "now rewrite plus_opp_r plus_zero_r.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite !sum_Sn -IHx -!sum_Sn sum_Sn; simpl.",
            "VernacExtend",
            "098b55457c4818143077b1c537d807f1600477c2"
        ],
        [
            "rewrite <- plus_assoc, <- (plus_assoc _ _ (a (S (S x)))).",
            "VernacExtend",
            "2ed3c1cdf49f668e4c51d9508f2aa5e52fbd52db"
        ],
        [
            "apply f_equal; apply plus_comm.",
            "VernacExtend",
            "3d2cc55c86a321d98fa1a409c785a4d528ba9b27"
        ],
        [
            "apply filterlim_comp with (G:=(locally (plus l (a 0%nat)))) (g:=fun x => plus x (opp (a 0%nat))).",
            "VernacExtend",
            "ac09d98e310e42ea1224c3f78248a064313e35e9"
        ],
        [
            "apply filterlim_comp with (f:= fun x => S x) (2:=H).",
            "VernacExtend",
            "ae54dffc394b6851f63a53cbe6f992bc3053ae49"
        ],
        [
            "apply eventually_subseq; intros n; omega.",
            "VernacExtend",
            "7526edbe28814bbfc9a6aabbc8457d8c9b2a1c54"
        ],
        [
            "pattern l at 2; replace l with (plus (plus l (a 0%nat)) (opp (a 0%nat))).",
            "VernacExtend",
            "37cd31eb4f7159d45d100c3833a96335f1c4fca5"
        ],
        [
            "apply filterlim_comp_2 with (3 := filterlim_plus _ _).",
            "VernacExtend",
            "1141fa965421259e149125bedfc97586ea306105"
        ],
        [
            "apply filterlim_id.",
            "VernacExtend",
            "0c9885f23d2ca915379801b6ded9080d6c98b8f7"
        ],
        [
            "apply filterlim_const.",
            "VernacExtend",
            "ff971edf84d1cf6e134869f4729acc40969816e1"
        ],
        [
            "rewrite <- plus_assoc, plus_opp_r.",
            "VernacExtend",
            "9c5474da6125e7672a3b10e4f242078193c755c5"
        ],
        [
            "apply plus_zero_r.",
            "VernacExtend",
            "747a1f63deb7f92de228bb2865fc0b3bae43f86f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_incr_n (a : nat -> V) (n : nat) (l : V) : (0 < n)%nat -> is_series a (plus l (sum_n a (pred n))) -> is_series (fun k => a (n + k)%nat) l.",
            "VernacStartTheoremProof",
            "4c72bec376fe3e864651a7c9f00fd414537cfaad"
        ],
        [
            "case: n => /= [ | n] Hn Ha.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply lt_irrefl in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear Hn.",
            "VernacExtend",
            "24a03c9d63807831b3b21f783ac6facdb799cd28"
        ],
        [
            "elim: n l Ha => [ | n IH] l Ha.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite sum_O in Ha.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply is_series_incr_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_series_ext with (fun k : nat => a (S (n + S k))).",
            "VernacExtend",
            "5b0871092fc532f1dc66dd6a6697e200fb77f705"
        ],
        [
            "move => k ; apply f_equal ; ring.",
            "VernacExtend",
            "b3aff1fc85ec19d5daa65781c1a3d49461b77e58"
        ],
        [
            "apply (is_series_incr_1 (fun k : nat => a (S (n + k))) l).",
            "VernacExtend",
            "3d4ec3f8221a8f3adcf4080925bfaaa010c30927"
        ],
        [
            "rewrite plus_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "replace (plus (plus l (a (S n))) (sum_n a n)) with (plus l (sum_n a (S n))).",
            "VernacExtend",
            "6ca30965a8d142db2c714371ff73bf386dacd7de"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- plus_assoc, sum_Sn; apply f_equal; simpl; apply plus_comm.",
            "VernacExtend",
            "c638bb07f7fd75bf7f492ea692ffa2512de2c8fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_decr_1 (a : nat -> V) (l : V) : is_series (fun k => a (S k)%nat) (plus l (opp (a O))) -> is_series a l.",
            "VernacStartTheoremProof",
            "d488801ba8c9bdb64a972d472476f61b26b0b30b"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply filterlim_ext_loc with (fun v => plus (a 0%nat) (sum_n (fun k : nat => a (S k)) (pred v))).",
            "VernacExtend",
            "af4959167106f1dd519591268c65cc573c5be7e7"
        ],
        [
            "exists 1%nat.",
            "VernacExtend",
            "a730d5780efb9f9e2ab7fc3bf879ff6ecdc4f5b8"
        ],
        [
            "intros n Hn; apply sym_eq.",
            "VernacExtend",
            "6c01962a86bb6f6c329fb59a6bf7639d1dcd1e4d"
        ],
        [
            "rewrite /sum_n sum_Sn_m.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite sum_n_m_S.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal ; omega.",
            "VernacExtend",
            "d8fed9aa921ba5b0e2a0262a4e314d45fa785d73"
        ],
        [
            "by apply le_O_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace l with (plus (a 0%nat) (plus l (opp (a 0%nat)))).",
            "VernacExtend",
            "c6936c790b58e189548cda480063ba565396ea03"
        ],
        [
            "apply filterlim_comp_2 with (3 := filterlim_plus _ _).",
            "VernacExtend",
            "1141fa965421259e149125bedfc97586ea306105"
        ],
        [
            "apply filterlim_id.",
            "VernacExtend",
            "0c9885f23d2ca915379801b6ded9080d6c98b8f7"
        ],
        [
            "apply filterlim_const.",
            "VernacExtend",
            "ff971edf84d1cf6e134869f4729acc40969816e1"
        ],
        [
            "apply filterlim_comp with (f:= fun x => pred x) (2:=H).",
            "VernacExtend",
            "b21886ff02b85a38acd4fb75c2ff729aead5dfbe"
        ],
        [
            "intros P (N1,HN1).",
            "VernacExtend",
            "416dee8de1a3618ffd30a6dbfb7c8c8ccdb2b13a"
        ],
        [
            "exists (S N1).",
            "VernacExtend",
            "3b971d84d848d1d9aa8c850e9c16bcb64454bf37"
        ],
        [
            "intros n Hn; apply HN1; omega.",
            "VernacExtend",
            "6c7236f8a0602d68d135f35a9db1523fdc1401be"
        ],
        [
            "rewrite plus_comm; rewrite <- plus_assoc.",
            "VernacExtend",
            "85de7ed70a17bda19406399a8c343e9d14c2dde5"
        ],
        [
            "rewrite (plus_comm _ (a 0%nat)); rewrite plus_opp_r.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "apply plus_zero_r.",
            "VernacExtend",
            "747a1f63deb7f92de228bb2865fc0b3bae43f86f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_decr_n (a : nat -> V) (n : nat) (l : V) : (0 < n)%nat -> is_series (fun k => a (n + k)%nat) (plus l (opp (sum_n a (pred n)))) -> is_series a l.",
            "VernacStartTheoremProof",
            "e0a693292494af7d2597e488224a7652bca86f16"
        ],
        [
            "case: n => /= [ | n] Hn Ha.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply lt_irrefl in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear Hn.",
            "VernacExtend",
            "24a03c9d63807831b3b21f783ac6facdb799cd28"
        ],
        [
            "elim: n a l Ha => [ | n IH] a l Ha.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite sum_O in Ha.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply is_series_decr_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_series_decr_1.",
            "VernacExtend",
            "5d46991db020641f24422c33867f8e8a43ffb8da"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "replace (plus (plus l (opp (a 0%nat))) (opp (sum_n (fun k : nat => a (S k)) n))) with (plus l (opp (sum_n a (S n)))).",
            "VernacExtend",
            "41f7106e9ae12d5c78769c519b5096bb54ab3491"
        ],
        [
            "by apply Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /sum_n sum_n_m_S sum_Sn_m /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite <- plus_assoc.",
            "VernacExtend",
            "84ba95263db170903fae6df6fe705836bbe227f3"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "now rewrite opp_plus.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "by apply le_O_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_incr_1 (a : nat -> V) : ex_series a <-> ex_series (fun k => a (S k)%nat).",
            "VernacStartTheoremProof",
            "3c54dbe4111e7da4af095447491cc8c3a16d0bd7"
        ],
        [
            "split ; move => [la Ha].",
            "VernacExtend",
            "762ea52ce3564fcd0b41ae75027c378295824fae"
        ],
        [
            "exists (plus la (opp (a O))).",
            "VernacExtend",
            "eb095b500f78daa4144769682781d0380b6633e2"
        ],
        [
            "apply is_series_incr_1.",
            "VernacExtend",
            "78b580b5fcb8e2f2f58c2e44431b5b5e832c4493"
        ],
        [
            "now rewrite <- plus_assoc, plus_opp_l, plus_zero_r.",
            "VernacExtend",
            "bada9cb75b6798b8afb469075774ed167cc6b2bd"
        ],
        [
            "exists (plus la (a O)).",
            "VernacExtend",
            "3bbd22867f2bb1b3c73495744b6574ddc1f7f147"
        ],
        [
            "apply is_series_decr_1.",
            "VernacExtend",
            "5d46991db020641f24422c33867f8e8a43ffb8da"
        ],
        [
            "now rewrite <- plus_assoc, plus_opp_r, plus_zero_r.",
            "VernacExtend",
            "c1875a20e746edb0833a10e277c46ef9ce85fb6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_incr_n (a : nat -> V) (n : nat) : ex_series a <-> ex_series (fun k => a (n + k)%nat).",
            "VernacStartTheoremProof",
            "ce261361d307ac68bb502d92eaf32ea7209bfefc"
        ],
        [
            "case: n => [ | n].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split ; apply ex_series_ext ; by intuition.",
            "VernacExtend",
            "d37acc3dc7410f61c30837d381f5a699d8b02e86"
        ],
        [
            "split ; move => [la Ha].",
            "VernacExtend",
            "762ea52ce3564fcd0b41ae75027c378295824fae"
        ],
        [
            "exists (plus la (opp (sum_n a (pred (S n))))).",
            "VernacExtend",
            "d8e3e4ab68f3d923cbb99ecc655915e6113dde74"
        ],
        [
            "apply is_series_incr_n.",
            "VernacExtend",
            "b9a27cf5d776b6248e1e4ebc5504cfaea6ade319"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "now rewrite <- plus_assoc, plus_opp_l, plus_zero_r.",
            "VernacExtend",
            "bada9cb75b6798b8afb469075774ed167cc6b2bd"
        ],
        [
            "exists (plus la (sum_n a (pred (S n)))).",
            "VernacExtend",
            "04eb381d05db897d842b671e9864ef021d3789c7"
        ],
        [
            "apply is_series_decr_n with (S n).",
            "VernacExtend",
            "3256f7f831f1d7d4b39ad4d6a31c9698479a39dc"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "now rewrite <- plus_assoc, plus_opp_r, plus_zero_r.",
            "VernacExtend",
            "c1875a20e746edb0833a10e277c46ef9ce85fb6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Properties1.",
            "VernacEndSegment",
            "209d48d2a23cb211a92b7017641cb1dcc4f902ad"
        ],
        [
            "Lemma Series_incr_1 (a : nat -> R) : ex_series a -> Series a = a O + Series (fun k => a (S k)).",
            "VernacStartTheoremProof",
            "458beb44dc3ef6556778dfd155466a4bbaade47f"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_series_unique.",
            "VernacExtend",
            "660f382307748728e0c26076611874798d98173c"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_series_decr_1.",
            "VernacExtend",
            "5d46991db020641f24422c33867f8e8a43ffb8da"
        ],
        [
            "rewrite /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify (Series (fun k : nat => a (S k)) + a 0%nat +- a 0%nat).",
            "VernacExtend",
            "5028dab4b0406dd6e0ed01be416f6685c4483410"
        ],
        [
            "apply Series_correct.",
            "VernacExtend",
            "fdea1c2ad906bf31eb70da24fe1e77d127b4cc6d"
        ],
        [
            "by apply (ex_series_incr_1 a).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Series_incr_n (a : nat -> R) (n : nat) : (0 < n)%nat -> ex_series a -> Series a = sum_f_R0 a (pred n) + Series (fun k => a (n + k)%nat).",
            "VernacStartTheoremProof",
            "722390913f878ce03aef43124cc59c4b8c1be5e9"
        ],
        [
            "move => Hn Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_series_unique.",
            "VernacExtend",
            "660f382307748728e0c26076611874798d98173c"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_series_decr_n with n.",
            "VernacExtend",
            "3e0b2f997d5001ac01955f40203030dab0832d05"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /plus /opp /= sum_n_Reals.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify (Series (fun k : nat => a (n+ k)%nat) + sum_f_R0 a (pred n) + - sum_f_R0 a (pred n)).",
            "VernacExtend",
            "89e8250b761c564544437670b50a0d6aa8b32bf8"
        ],
        [
            "apply Series_correct.",
            "VernacExtend",
            "fdea1c2ad906bf31eb70da24fe1e77d127b4cc6d"
        ],
        [
            "by apply ex_series_incr_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Series_incr_1_aux (a : nat -> R) : a O = 0 -> Series a = Series (fun k => a (S k)).",
            "VernacStartTheoremProof",
            "1bbfe27444e9c29770d06088fe3ea8fc0d683849"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /Series.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Lim_seq_incr_1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal, Lim_seq_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /sum_n sum_n_m_S sum_Sn_m.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Ha ; by apply Rplus_0_l.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by apply le_O_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Series_incr_n_aux (a : nat -> R) (n : nat) : (forall k, (k < n)%nat -> a k = 0) -> Series a = Series (fun k => a (n + k)%nat).",
            "VernacStartTheoremProof",
            "12300307cbdd9d8f1ed115e2f1d988d3762565a4"
        ],
        [
            "elim: n => [ | n IH] Ha.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply Series_ext => k.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite IH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Series_incr_1_aux.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Series_ext => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply f_equal ; ring.",
            "VernacExtend",
            "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "move => k Hk ; intuition.",
            "VernacExtend",
            "96755459c4138d81e02849602fc4789e08ed6a82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cauchy_series_Reals (a : nat -> R) : Cauchy_series a <-> Cauchy_crit_series a.",
            "VernacStartTheoremProof",
            "bdcf84b73db63aa6d60a54a0a5fa9bd8731751bd"
        ],
        [
            "split => Hcv.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply cv_cauchy_1, ex_series_Reals_0.",
            "VernacExtend",
            "041e00e285281f6447cc30091044f83b3eed1b20"
        ],
        [
            "by apply: ex_series_Cauchy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: Cauchy_ex_series.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply ex_series_Reals_1.",
            "VernacExtend",
            "442f938bfb081cc6fcc8a6d8c36db91cb8859ca6"
        ],
        [
            "apply cv_cauchy_2.",
            "VernacExtend",
            "1b9d0e4674b020189683d56bb2fcbe5bda3222d0"
        ],
        [
            "by apply Hcv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_lim_0 (a : nat -> R) : ex_series a -> is_lim_seq a 0.",
            "VernacStartTheoremProof",
            "ab18e459e03a8eb0ae528a31b16aec4ffba58d18"
        ],
        [
            "intros Hs.",
            "VernacExtend",
            "83b00eb0dca7fc32e65be9883ada2c4a75547fa8"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "apply (Cauchy_ex_series (V := R_CompleteNormedModule)) in Hs.",
            "VernacExtend",
            "cf30c999f481c039f09931dbd4bd1a9482f14262"
        ],
        [
            "case: (Hs eps) => {Hs} N Hs.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (S N) ; case => [ | n] Hn.",
            "VernacExtend",
            "14739dfc975777cc6d00724be62be6e83a8ee01a"
        ],
        [
            "by apply le_Sn_0 in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply le_S_n in Hn.",
            "VernacExtend",
            "d6c8198fae967fccd8ccb31dc7436bda9b4417f4"
        ],
        [
            "replace (a (S n) - 0) with (sum_n_m a (S n) (S n)).",
            "VernacExtend",
            "14a4d2a2bbf39ef2638a1d9f8e156600442d4c4c"
        ],
        [
            "apply Hs ; by intuition.",
            "VernacExtend",
            "e1cd664e0c5395f3409b394ef92e302715e99495"
        ],
        [
            "by rewrite sum_n_n Rminus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_Rabs (a : nat -> R) : ex_series (fun n => Rabs (a n)) -> ex_series a.",
            "VernacStartTheoremProof",
            "8c90722369cd92ebc82a11b2510f5071bd76968a"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: ex_series_Cauchy.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply Cauchy_series_Reals.",
            "VernacExtend",
            "6e3cff3699520e3439d77eefc00636513cc6bc1a"
        ],
        [
            "apply cauchy_abs.",
            "VernacExtend",
            "a1df9e931d188b753541aa8886a07c1f4b85af90"
        ],
        [
            "apply Cauchy_series_Reals.",
            "VernacExtend",
            "6e3cff3699520e3439d77eefc00636513cc6bc1a"
        ],
        [
            "by apply: Cauchy_ex_series.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Series_Rabs (a : nat -> R) : ex_series (fun n => Rabs (a n)) -> Rabs (Series a) <= Series (fun n => Rabs (a n)).",
            "VernacStartTheoremProof",
            "0b1235a8d4e1b1eb4bd726289cb0efd4a7a6263f"
        ],
        [
            "move => Hra.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have Ha := (ex_series_Rabs a Hra).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: Hra => lra Hra.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Ha => la Ha.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /is_series in Hra Ha.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /Series /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (Lim_seq (sum_n a)) with (Finite la).",
            "VernacExtend",
            "b15cea7c0060f1573269187e73bee60c921c4337"
        ],
        [
            "replace (Lim_seq (sum_n (fun k : nat => Rabs (a k)))) with (Finite lra).",
            "VernacExtend",
            "0bf8b7e7e85c84ca260d1a5354dc7c1cc8b8bf00"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (is_lim_seq_abs _ la) in Ha.",
            "VernacExtend",
            "7ab4f452e54bd834127e78d1ed5d275ad164c3f8"
        ],
        [
            "change (Rbar_le (Rabs la) lra).",
            "VernacExtend",
            "892c03b90ce49be18fa210c87c0852fbbecd20b3"
        ],
        [
            "eapply is_lim_seq_le with (2:=Ha).",
            "VernacExtend",
            "e72a48b0df2460ea48d597bc65838ac8b820d10e"
        ],
        [
            "2: apply Hra.",
            "VernacExtend",
            "6f93cc614ea1775ece63729c8d994900a651b7b5"
        ],
        [
            "elim => [ | n IH] /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite !sum_O.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !sum_Sn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "fc3ac622a6b1c2c359ba4392074f9e26d9cb28da"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply sym_eq, is_lim_seq_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply sym_eq, is_lim_seq_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_le {K : AbsRing} {V : CompleteNormedModule K} (a : nat -> V) (b : nat -> R) : (forall n : nat, norm (a n) <= b n) -> ex_series b -> ex_series a.",
            "VernacStartTheoremProof",
            "42cc789ec1b07f88724dcf03a29522eb31b47bbc"
        ],
        [
            "move => H Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply (Cauchy_ex_series (V := R_CompleteNormedModule)) in Hb.",
            "VernacExtend",
            "f4f96d8bdcb65d451088afc0ffc4d38c284e7744"
        ],
        [
            "apply ex_series_Cauchy.",
            "VernacExtend",
            "169c5dfd517964850e8230eb6c9174b7f10b766d"
        ],
        [
            "move => e.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case (Hb e) => {Hb} N Hb.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exists N => n m Hn Hm.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "eapply Rle_lt_trans, (Hb _ _ Hn Hm) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "apply norm_sum_n_m.",
            "VernacExtend",
            "b7c6b9359980cefd6deed45ea76c13bf74173d65"
        ],
        [
            "apply Rle_trans with (sum_n_m b n m).",
            "VernacExtend",
            "1619f156824876977a3d0e347e592e9aec3718c7"
        ],
        [
            "by apply sum_n_m_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assert (forall n, 0 <= b n).",
            "VernacExtend",
            "01494cc0a8ea089152ac7cd8f14d65b2c2411c28"
        ],
        [
            "intros k.",
            "VernacExtend",
            "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
        ],
        [
            "eapply Rle_trans, H.",
            "VernacExtend",
            "58727c29555198a402363c46f899a151e489ac91"
        ],
        [
            "by apply norm_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear -H0.",
            "VernacExtend",
            "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
        ],
        [
            "apply sym_eq, Rabs_pos_eq.",
            "VernacExtend",
            "cf4360fc65027516084592b2626c49231f44e3cf"
        ],
        [
            "elim: n m b H0 => /= [ | n IH] m b Hb.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "elim: m => /= [ | m IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite sum_n_n.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite sum_n_Sm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rplus_le_le_0_compat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply le_O_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: m => /= [ | m].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -sum_n_m_S.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply IH => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Series_le (a b : nat -> R) : (forall n : nat, 0 <= a n <= b n) -> ex_series b -> Series a <= Series b.",
            "VernacStartTheoremProof",
            "d6629e2a4ee6c00ece18c47a0eea79d56cd50227"
        ],
        [
            "move => Hn Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have Ha := (ex_series_le a b).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Lim_seq_correct' in Ha.",
            "VernacExtend",
            "02c7972708dee5336fc1d62df0fa3e81978b4f91"
        ],
        [
            "apply Lim_seq_correct' in Hb.",
            "VernacExtend",
            "14265613a0be801add3d3d99217a1af28c920aec"
        ],
        [
            "move: Ha Hb ; apply is_lim_seq_le.",
            "VernacExtend",
            "3ce5f8ff217c623d81d7389c52beb720851314bc"
        ],
        [
            "elim => [ | n IH] /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite !sum_O.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !sum_Sn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "rewrite /norm /= /abs /= Rabs_pos_eq ; by apply Hn.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by apply Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Properties2.",
            "VernacBeginSection",
            "65ab5096391e366ddab537119dccd0dc87890cf4"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_series_opp (a : nat -> V) (la : V) : is_series a la -> is_series (fun n => opp (a n)) (opp la).",
            "VernacStartTheoremProof",
            "8de15b627388fafbe5e7e3974717ad53071341fe"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterlim_ext with (fun n => opp (sum_n a n)).",
            "VernacExtend",
            "136848555d635805c1dd8652f953f41db81511d1"
        ],
        [
            "elim => [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite !sum_O ; easy.",
            "VernacExtend",
            "a6598bc8c5ebe71a1cb89e415003a241a0f63fcd"
        ],
        [
            "rewrite !sum_Sn -IH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply opp_plus.",
            "VernacExtend",
            "cb0a70422730fbec4f98da515fd987fc4a18f145"
        ],
        [
            "apply filterlim_comp with (1:=Ha).",
            "VernacExtend",
            "d37d3187285c6f35ac95b1654dbc40be4637dd24"
        ],
        [
            "apply filterlim_opp.",
            "VernacExtend",
            "1c7d45407daf68458a9dfcf6775f546f8d0dd506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_opp (a : nat -> V) : ex_series a -> ex_series (fun n => opp (a n)).",
            "VernacStartTheoremProof",
            "9aac630d16658a1bb4dc220b2d97926248fbbd3e"
        ],
        [
            "move => [la Ha].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (opp la).",
            "VernacExtend",
            "ce51b55feae3cda6149fba33c629578aeb217611"
        ],
        [
            "by apply is_series_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Series_opp (a : nat -> R) : Series (fun n => - a n) = - Series a.",
            "VernacStartTheoremProof",
            "532c16ddb15f3dda3063c3c84caa61910bca5721"
        ],
        [
            "rewrite /Series (Lim_seq_ext (sum_n (fun k : nat => - a k)) (fun n => - (sum_n (fun k => a k) n))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Lim_seq_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Rbar_opp_real.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim => [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite !sum_O ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "rewrite !sum_Sn IH /plus /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_plus (a b : nat -> V) (la lb : V) : is_series a la -> is_series b lb -> is_series (fun n => plus (a n) (b n)) (plus la lb).",
            "VernacStartTheoremProof",
            "dd9b22c1accd0a027ebe4abc34230ccf4fdb542c"
        ],
        [
            "move => Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterlim_ext with (fun n => plus (sum_n a n) (sum_n b n)).",
            "VernacExtend",
            "951cd19ef148449833d82661a2d6fa3af812cfac"
        ],
        [
            "elim => [ | n IH]; simpl.",
            "VernacExtend",
            "2294aa3ce7c36c79d785f125d6d11c50e2d01667"
        ],
        [
            "by rewrite !sum_O.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !sum_Sn -IH; rewrite <- 2!plus_assoc; apply f_equal.",
            "VernacExtend",
            "2fe9893787aed3e6edb2f182430e5d13f9ac5796"
        ],
        [
            "rewrite 2!plus_assoc; apply f_equal2; try easy.",
            "VernacExtend",
            "751ec8ed7f4ff015aaf31f44f0d998fcd38ac98c"
        ],
        [
            "apply plus_comm.",
            "VernacExtend",
            "12475eb4e354334e12b009d49112b8335e8ec9d3"
        ],
        [
            "now apply filterlim_comp_2 with (3 := filterlim_plus _ _).",
            "VernacExtend",
            "bc491bb0ee223a7c3bc2eaece28c459c34b6ae81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_plus (a b : nat -> V) : ex_series a -> ex_series b -> ex_series (fun n => plus (a n) (b n)).",
            "VernacStartTheoremProof",
            "7ee0b050bbfadc485fc23dbcb2f79a7d177ad017"
        ],
        [
            "move => [la Ha] [lb Hb].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (plus la lb).",
            "VernacExtend",
            "48cfd3bced3afc8aa7929a26ef624bea6c0ef154"
        ],
        [
            "by apply is_series_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_minus (a b : nat -> V) (la lb : V) : is_series a la -> is_series b lb -> is_series (fun n => plus (a n) (opp (b n))) (plus la (opp lb)).",
            "VernacStartTheoremProof",
            "ff6e9521b2c00a19a8e6bcb2491cf15c6a41594a"
        ],
        [
            "move => Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_series_plus => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply is_series_opp => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_minus (a b : nat -> V) : ex_series a -> ex_series b -> ex_series (fun n => plus (a n) (opp (b n))).",
            "VernacStartTheoremProof",
            "a9e1a3fc1d57a4e88a97faf316a6b7d4e79cd318"
        ],
        [
            "move => Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ex_series_plus => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply ex_series_opp => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Properties2.",
            "VernacEndSegment",
            "436e0b3c540bd171fff93497f85a4677b63f7e16"
        ],
        [
            "Lemma Series_plus (a b : nat -> R) : ex_series a -> ex_series b -> Series (fun n => a n + b n) = Series a + Series b.",
            "VernacStartTheoremProof",
            "1e27a0ca8e88ab515bcb737148d16d7b72ac9a94"
        ],
        [
            "intros Ha Hb.",
            "VernacExtend",
            "0c4ce3bbd15ba18416ad16c4ce047ec9c705752c"
        ],
        [
            "replace (Series a + Series b) with (real (Series a + Series b)) by auto.",
            "VernacExtend",
            "4293fa4b22a0b76ce695ae3e0154f22832fadb0a"
        ],
        [
            "apply (f_equal real), is_lim_seq_unique.",
            "VernacExtend",
            "1f216473c2bd59ab6ce05907549bcb8dc3b41177"
        ],
        [
            "apply: is_series_plus ; by apply Series_correct.",
            "VernacExtend",
            "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Series_minus (a b : nat -> R) : ex_series a -> ex_series b -> Series (fun n => a n - b n) = Series a - Series b.",
            "VernacStartTheoremProof",
            "b6ec3a18521f19507de17f02e9b479fa4e5ca0ad"
        ],
        [
            "intros Ha Hb.",
            "VernacExtend",
            "0c4ce3bbd15ba18416ad16c4ce047ec9c705752c"
        ],
        [
            "rewrite Series_plus => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Series_opp => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply ex_series_opp in Hb.",
            "VernacExtend",
            "4eea902e4b537c77c13062930cf7d7e762e1db7c"
        ],
        [
            "now simpl in Hb.",
            "VernacExtend",
            "bc8da1a28595f25999dfca1097ff38a5c1fa2fe2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Properties3.",
            "VernacBeginSection",
            "6c19efdf231771b62e79a05378a6eec4dbb3b6ca"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_series_scal (c : K) (a : nat -> V) (l : V) : is_series a l -> is_series (fun n => scal c (a n)) (scal c l).",
            "VernacStartTheoremProof",
            "cb85d9b595a42362583132bbe9470d0026166af8"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterlim_ext with (fun n => scal c (sum_n a n)).",
            "VernacExtend",
            "536672b0a1e040ed5a33c99daebcbea7a8f9f03d"
        ],
        [
            "elim => [ | n IH]; simpl.",
            "VernacExtend",
            "2294aa3ce7c36c79d785f125d6d11c50e2d01667"
        ],
        [
            "by rewrite !sum_O.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !sum_Sn -IH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: scal_distr_l.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "now apply filterlim_comp with (2 := filterlim_scal_r _ _).",
            "VernacExtend",
            "8df7affebf185af086317c0b87740f57c838efdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_scal_l : forall (c : K) (a : nat -> V) (l : V), is_series a l -> is_series (fun n => scal c (a n)) (scal c l).",
            "VernacStartTheoremProof",
            "928c6565c00b48999d82f11cbd16196579b7c42e"
        ],
        [
            "exact is_series_scal.",
            "VernacExtend",
            "65590ed9fe4c9f5fe29b5dd66de42c4a6bf3655e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_scal (c : K) (a : nat -> V) : ex_series a -> ex_series (fun n => scal c (a n)).",
            "VernacStartTheoremProof",
            "56c5c93a753ab3025809c65fb0d9af8ad38ee3bf"
        ],
        [
            "move => [l Ha].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (scal c l).",
            "VernacExtend",
            "b41b4fa84c6fcf433846ae2b70e9abb2d3b467cf"
        ],
        [
            "by apply: is_series_scal_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_scal_l : forall (c : K) (a : nat -> V), ex_series a -> ex_series (fun n => scal c (a n)).",
            "VernacStartTheoremProof",
            "86a42001a327f64921bbcd054e3d4b4f1cc50a3a"
        ],
        [
            "exact ex_series_scal.",
            "VernacExtend",
            "d123707f8b56ea556c8619bbad3e2e7974433e92"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Properties3.",
            "VernacEndSegment",
            "4377db9bc57c3f1963cc1f2a456a03381441b1de"
        ],
        [
            "Lemma Series_scal_l (c : R) (a : nat -> R) : Series (fun n => c * a n) = c * Series a.",
            "VernacStartTheoremProof",
            "69598d05487144bfdaac25fea6179fd45d4ca6f9"
        ],
        [
            "rewrite /Series.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have H0 : (forall x, c * Rbar.real x = Rbar.real (Rbar.Rbar_mult (Rbar.Finite c) x)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (Req_dec c 0) => [-> | Hk].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case => [x | | ] //= ; rewrite Rmult_0_l.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: Rle_dec (Rle_refl 0) => //= H0 _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rlt_irrefl 0) => //= _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec (Rle_refl 0) => //= H0 _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec (Rlt_irrefl 0) => //= _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case => [x | | ] //= ; rewrite Rmult_0_r.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: Rle_dec => //= H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_dec => //= H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite H0 -(Lim_seq_scal_l _ c).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal, Lim_seq_ext.",
            "VernacExtend",
            "e1cfa4da5ff991d74483661018e540e778c207e4"
        ],
        [
            "elim => [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite !sum_O ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "rewrite !sum_Sn IH /plus /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_scal_r (c : R) (a : nat -> R) (l : R) : is_series a l -> is_series (fun n => (a n) * c) (l * c).",
            "VernacStartTheoremProof",
            "12b51003da1568e520b1a4b73ccb51a5a100705e"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_series_ext with (fun n : nat => c * a n).",
            "VernacExtend",
            "d78b90b2c61052ce8d876617e0c6f576105f0c45"
        ],
        [
            "move => n ; apply Rmult_comm.",
            "VernacExtend",
            "b6f25f322c20b222576c0d7f281e11a1a0c72d8a"
        ],
        [
            "apply (is_series_scal_l _ _ _ Ha).",
            "VernacExtend",
            "74ea9e3c776a7bcc3241206b216d5757ce44d454"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_scal_r (c : R) (a : nat -> R) : ex_series a -> ex_series (fun n => a n * c).",
            "VernacStartTheoremProof",
            "13d2dbc2ae8d5782e859b63381c2dbddb3d3a1e0"
        ],
        [
            "intros [l Ha].",
            "VernacExtend",
            "13805e788d6d9749d8eebea714822e95b1e44fbd"
        ],
        [
            "exists (l * c).",
            "VernacExtend",
            "da4e2279969844fd1ac597e35f8a3956ca92d486"
        ],
        [
            "by apply is_series_scal_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Series_scal_r (c : R) (a : nat -> R) : Series (fun n => a n * c) = Series a * c.",
            "VernacStartTheoremProof",
            "f3dbba6378649ebe447a74804e78c932db4c73a7"
        ],
        [
            "rewrite Rmult_comm -Series_scal_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Series_ext.",
            "VernacExtend",
            "fdbcb56c0988c866fe0a698401ce4bfd1c6b2a6b"
        ],
        [
            "move => n ; apply Rmult_comm.",
            "VernacExtend",
            "b6f25f322c20b222576c0d7f281e11a1a0c72d8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_mult_pos (a b : nat -> R) (la lb : R) : is_series a la -> is_series b lb -> (forall n, 0 <= a n) -> (forall n, 0 <= b n) -> is_series (fun n => sum_f_R0 (fun k => a k * b (n - k)%nat) n) (la * lb).",
            "VernacStartTheoremProof",
            "34601d5883114840343322e99707ed8de0bb2441"
        ],
        [
            "move => Hla Hlb Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have H0 : forall n, sum_f_R0 (fun k : nat => sum_f_R0 (fun p : nat => a p * b (k - p)%nat) k) n <= sum_f_R0 a n * sum_f_R0 b n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case => [ | n].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "simpl ; apply Rle_refl.",
            "VernacExtend",
            "40d7d64fe72819c155d9ccfcd808551cc8b3d745"
        ],
        [
            "rewrite (cauchy_finite a b (S n) (lt_O_Sn n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rminus_le_0 ; ring_simplify.",
            "VernacExtend",
            "48c96302111e8edc2fcb95e79f4f71c3818d133f"
        ],
        [
            "apply cond_pos_sum => m.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply cond_pos_sum => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rmult_le_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have H1 : forall n, sum_f_R0 a n * sum_f_R0 b n <= sum_f_R0 (fun k : nat => sum_f_R0 (fun p : nat => a p * b (k - p)%nat) k) ((2*n)%nat).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case => [ /= | n].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (cauchy_finite a b (S n) (lt_O_Sn n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rplus_comm ; apply Rle_minus_r.",
            "VernacExtend",
            "b3348a6460c24169013fc350b32ef520658a5eb7"
        ],
        [
            "replace (pred (S n)) with n by auto.",
            "VernacExtend",
            "f659817da6bced182426db1c9eab3688294aa29d"
        ],
        [
            "replace (2 * S n)%nat with (S n + S n)%nat by ring.",
            "VernacExtend",
            "85ff16234cce82791178b302df24f50e3d4f792d"
        ],
        [
            "rewrite -sum_f_rw.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /sum_f.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (S n + S n - S (S n))%nat with n.",
            "VernacExtend",
            "52b68dd6a2cf7940b0504da8e3da4b98f56e23b5"
        ],
        [
            "elim: {1 5 8}n (le_refl n) => [ | m IH] Hm ; rewrite /sum_f_R0 -/sum_f_R0.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "rewrite -minus_n_O plus_0_l ; simpl pred.",
            "VernacExtend",
            "0dbae2f461f729b681b839c7feeb70f157314b25"
        ],
        [
            "rewrite -?sum_f_rw_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (sum_f 0 (S (S n)) (fun p : nat => a p * b (S (S n) - p)%nat)) with ((sum_f 0 (S (S n)) (fun p : nat => a p * b (S (S n) - p)%nat) - (fun p : nat => a p * b (S (S n) - p)%nat) 0%nat) + a O * b (S (S n))) by (rewrite -minus_n_O ; ring).",
            "VernacExtend",
            "f09ccc21c772848ae5d8d3122580b2c5f204acdc"
        ],
        [
            "rewrite -(sum_f_Sn_m _ O (S (S n))) ; [ | by apply lt_O_Sn].",
            "VernacExtend",
            "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
        ],
        [
            "rewrite sum_f_u_Sk ; [ | by apply le_O_n].",
            "VernacExtend",
            "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
        ],
        [
            "rewrite sum_f_n_Sm ; [ | by apply le_O_n].",
            "VernacExtend",
            "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
        ],
        [
            "apply Rle_trans with (sum_f 0 n (fun l0 : nat => a (S (l0 + 0)) * b (S n - l0)%nat) + a (S (S n)) * b (S (S n) - S (S n))%nat + a 0%nat * b (S (S n))).",
            "VernacExtend",
            "67a3120947290ce73372d7ab6158d32639fd6112"
        ],
        [
            "apply Rminus_le_0 ; ring_simplify.",
            "VernacExtend",
            "48c96302111e8edc2fcb95e79f4f71c3818d133f"
        ],
        [
            "apply Rplus_le_le_0_compat ; by apply Rmult_le_pos.",
            "VernacExtend",
            "f2fdd2635d5abfa5d5c90e0771769c09fa0b1b2a"
        ],
        [
            "repeat apply Rplus_le_compat_r.",
            "VernacExtend",
            "3bdd064897a8c8fc3c9f9e8ea168f240fc64579e"
        ],
        [
            "apply Req_le.",
            "VernacExtend",
            "b69ffc9461f465218c69f379ac293728d3f8e7bd"
        ],
        [
            "rewrite ?sum_f_rw_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: {1 4 6}n (le_refl n) => [ | k IH] Hk // ; rewrite /sum_f_R0 -/sum_f_R0.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "rewrite IH ; try by intuition.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "by rewrite plus_0_r /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "apply IH ; intuition.",
            "VernacExtend",
            "bd9c2ece5109c49ee8decab3d9e9664fc0cd4b5d"
        ],
        [
            "rewrite -?sum_f_rw_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite MyNat.sub_succ_l ; try by intuition.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "replace (pred (S (n - S m))) with (n - S m)%nat by auto.",
            "VernacExtend",
            "6523037e78093cdec73ea6486a150961a6a7cba0"
        ],
        [
            "rewrite plus_Sn_m -?plus_n_Sm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (sum_f 0 (S (S (S (m + n)))) (fun p : nat => a p * b (S (S (S (m + n))) - p)%nat)) with (sum_f 1 (S (S (S (m + n)))) (fun p : nat => a p * b (S (S (S (m + n))) - p)%nat) + a O * b (S (S (S (m + n))))).",
            "VernacExtend",
            "b44447288c2fa9a96b189a3042abe14bbdf03f15"
        ],
        [
            "rewrite -(Rplus_0_r (sum_f O _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "rewrite (sum_f_chasles _ O (S m) (S (S (S (m + n))))) ; try by intuition.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "rewrite -(Rplus_0_l (sum_f O _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "rewrite /sum_f.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (S m - 1)%nat => {IH} [ | k IH] ; rewrite /sum_f_R0 -/sum_f_R0 //.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "by apply Rmult_le_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rplus_le_le_0_compat.",
            "VernacExtend",
            "f2a4bb243ad7dc4026e4f9c4fede7e10c9e27124"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rmult_le_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (S (S m)) with (1 + S m)%nat by ring.",
            "VernacExtend",
            "75b16dce976f2ef9bfad00a29d4725717327673e"
        ],
        [
            "replace (S (S (S (m + n)))) with (S (S n) + S m )%nat by ring.",
            "VernacExtend",
            "3abbef27e7772d9d979c9fcf4a539480a2ff3c05"
        ],
        [
            "rewrite sum_f_u_add.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (sum_f_chasles _ O (S (n - S m)) (S (S n))) ; try by intuition.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "rewrite -(Rplus_0_r (sum_f O _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_compat.",
            "VernacExtend",
            "7a69898b466991bee51047e3a2fc51c3b80fbd93"
        ],
        [
            "rewrite sum_f_u_Sk.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?sum_f_rw_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Req_le.",
            "VernacExtend",
            "b69ffc9461f465218c69f379ac293728d3f8e7bd"
        ],
        [
            "elim: (n - S m)%nat => {IH} [ | k IH] ; rewrite /sum_f_R0 -/sum_f_R0 //.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "apply f_equal2 ; apply f_equal ; intuition.",
            "VernacExtend",
            "4c34a07c8b105737eb371ad26b0ec5f2e8681841"
        ],
        [
            "rewrite IH ; apply f_equal, f_equal2 ; apply f_equal.",
            "VernacExtend",
            "f06e269562cd7817aa798853a4544b2a08a04381"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite ?(Coq.Arith.Plus.plus_comm _ (S m)) -minus_plus_simpl_l_reverse //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply le_O_n.",
            "VernacExtend",
            "7fa25714b3e362fc6548cec817a7c173238f4970"
        ],
        [
            "rewrite /sum_f.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (S (S n) - S (S (n - S m)))%nat => {IH} [ | k IH] ; rewrite /sum_f_R0 -/sum_f_R0 //.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "by apply Rmult_le_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rplus_le_le_0_compat => // ; by apply Rmult_le_pos.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "by apply le_n_S, le_O_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rmult_le_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite sum_f_Sn_m -?minus_n_O ; try by intuition.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "replace (S (S n)) with (S n + 1)%nat.",
            "VernacExtend",
            "aace85815bb26859d9cd80acbad812ecbbc8a7a9"
        ],
        [
            "rewrite -minus_plus_simpl_l_reverse.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl; apply minus_n_O.",
            "VernacExtend",
            "19f56da0bfd6da3a65daa7bd96104ac76692ee30"
        ],
        [
            "now rewrite Coq.Arith.Plus.plus_comm.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "elim: n => [ | n IH] //.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite -plus_n_Sm plus_Sn_m.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply lt_n_S ; intuition.",
            "VernacExtend",
            "5d396e1636a3da4b36a7080c41c38b8fe544ad22"
        ],
        [
            "have H2 : forall n, sum_f_R0 a (Div2.div2 n)%nat * sum_f_R0 b (Div2.div2 n)%nat <= sum_f_R0 (fun k : nat => sum_f_R0 (fun p : nat => a p * b (k - p)%nat) k) n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (even_odd_cor n) => k ; case => -> {n}.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "rewrite div2_double.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite div2_S_double.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_trans with (1 := H1 _).",
            "VernacExtend",
            "d8a1c18db5899deca054eddd799ba3ff9d71db6d"
        ],
        [
            "apply Rminus_le_0 ; rewrite -sum_f_rw ; try by intuition.",
            "VernacExtend",
            "eb4274d0f5cb8d57a39f70a15b799800cccab571"
        ],
        [
            "rewrite /sum_f minus_diag /sum_f_R0 -/sum_f_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply cond_pos_sum => l ; by apply Rmult_le_pos.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "change (is_lim_seq (sum_n (fun n : nat => sum_f_R0 (fun k : nat => a k * b (n - k)%nat) n)) (Finite (la * lb))).",
            "VernacExtend",
            "1f1eed6e9b1d6d87d9415b527ae07999251994d2"
        ],
        [
            "apply is_lim_seq_le_le with (u := fun n => sum_f_R0 a (Div2.div2 n) * sum_f_R0 b (Div2.div2 n)) (w := fun n => sum_f_R0 a n * sum_f_R0 b n).",
            "VernacExtend",
            "a0c878cfa3c2ca1d1498e1ea929cc43059311fd4"
        ],
        [
            "intros n; rewrite sum_n_Reals.",
            "VernacExtend",
            "f965f570b70a3bcbf1641b23d677e188374f69a3"
        ],
        [
            "by split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (Finite (la * lb)) with (Rbar_mult la lb) by auto.",
            "VernacExtend",
            "a59eb86d8ef2a8ffdfce499b0cc8c4955a6eedfe"
        ],
        [
            "suff H : is_lim_seq (fun n : nat => sum_f_R0 a n * sum_f_R0 b n) (Rbar_mult la lb).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "apply is_lim_seq_spec in H.",
            "VernacExtend",
            "98ca61a735cdd6a0c67afeba86446058c65f378f"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (H eps) => {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (S (2 * N))%nat => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply le_double.",
            "VernacExtend",
            "afa53fd37ad6093b0affa9a9693761307de0b21a"
        ],
        [
            "apply le_S_n.",
            "VernacExtend",
            "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
        ],
        [
            "apply le_trans with (1 := Hn).",
            "VernacExtend",
            "8ac30d3ff1e4a07f44d84ea98e599463c400de71"
        ],
        [
            "apply (Div2.ind_0_1_SS (fun n => (n <= S (2 * Div2.div2 n))%nat)).",
            "VernacExtend",
            "68b5593262b67dbbeb6992c1ec45695d2a12b4a5"
        ],
        [
            "by apply le_O_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply le_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => k Hk.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace (Div2.div2 (S (S k))) with (S (Div2.div2 k)) by auto.",
            "VernacExtend",
            "44ee006fba3a24adba0c4de5137bd6356c3945a8"
        ],
        [
            "replace (2 * S (Div2.div2 k))%nat with (S (S (2 * Div2.div2 k))) by ring.",
            "VernacExtend",
            "74fe20bbdf742bed6277aa65caeb2c8899d7cd9a"
        ],
        [
            "by repeat apply le_n_S.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_mult'.",
            "VernacExtend",
            "c3b76a14bd90f9a5b789b242041b6743c0716dec"
        ],
        [
            "apply filterlim_ext with (2:=Hla); apply sum_n_Reals.",
            "VernacExtend",
            "2fcb25c04a8fd1ed3666e23556dd6620aaf12087"
        ],
        [
            "apply filterlim_ext with (2:=Hlb); apply sum_n_Reals.",
            "VernacExtend",
            "6f2282be6f84ef0b8a9d8e03094bfd80e065e328"
        ],
        [
            "apply is_lim_seq_mult'.",
            "VernacExtend",
            "c3b76a14bd90f9a5b789b242041b6743c0716dec"
        ],
        [
            "apply filterlim_ext with (2:=Hla); apply sum_n_Reals.",
            "VernacExtend",
            "2fcb25c04a8fd1ed3666e23556dd6620aaf12087"
        ],
        [
            "apply filterlim_ext with (2:=Hlb); apply sum_n_Reals.",
            "VernacExtend",
            "6f2282be6f84ef0b8a9d8e03094bfd80e065e328"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_mult (a b : nat -> R) (la lb : R) : is_series a la -> is_series b lb -> ex_series (fun n => Rabs (a n)) -> ex_series (fun n => Rabs (b n)) -> is_series (fun n => sum_f_R0 (fun k => a k * b (n - k)%nat) n) (la * lb).",
            "VernacStartTheoremProof",
            "f9103728b20130bbb396d39690b42d7042108130"
        ],
        [
            "move => Hla Hlb Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "set ap := fun n => (a n + Rabs (a n)) / 2.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set am := fun n => - (a n - Rabs (a n)) / 2.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set bp := fun n => (b n + Rabs (b n)) / 2.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set bm := fun n => - (b n - Rabs (b n)) / 2.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have Hap : forall n, 0 <= ap n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => n ; apply Rdiv_le_0_compat.",
            "VernacExtend",
            "e314495e607932fe8d71263b0b2e7e79c0531c9f"
        ],
        [
            "rewrite Rplus_comm ; apply Rle_minus_l ; rewrite Rminus_0_l.",
            "VernacExtend",
            "018ed5b5c3cf7261287fa992e92bb61d9be997a9"
        ],
        [
            "apply Rabs_maj2.",
            "VernacExtend",
            "6335c2f5bf52bb445ff122fd825dd485dfc5293d"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (Sap : ex_series ap).",
            "VernacExtend",
            "5bd480fd36a6435fe3f8562182cdd5b6e43a950f"
        ],
        [
            "apply ex_series_scal_r.",
            "VernacExtend",
            "053047afdd25b88b86f580d51c7eb0e91e89701b"
        ],
        [
            "apply (@ex_series_plus ) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by exists la.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Ham : forall n, 0 <= am n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => n ; apply Rdiv_le_0_compat.",
            "VernacExtend",
            "e314495e607932fe8d71263b0b2e7e79c0531c9f"
        ],
        [
            "rewrite Ropp_minus_distr'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (Rminus_le_0 (a _)).",
            "VernacExtend",
            "f1895491ca5a20b650bb952f39e5a743ee4c5e6c"
        ],
        [
            "by apply Rle_abs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (Sam : ex_series am).",
            "VernacExtend",
            "26661a735868e96455a5a39ed9d570349479645d"
        ],
        [
            "apply ex_series_scal_r.",
            "VernacExtend",
            "053047afdd25b88b86f580d51c7eb0e91e89701b"
        ],
        [
            "apply @ex_series_opp.",
            "VernacExtend",
            "5c00f5856084dba8f57fc4886ff4cd220a4526b7"
        ],
        [
            "apply @ex_series_minus => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by exists la.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Hbp : forall n, 0 <= bp n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => n ; apply Rdiv_le_0_compat.",
            "VernacExtend",
            "e314495e607932fe8d71263b0b2e7e79c0531c9f"
        ],
        [
            "rewrite Rplus_comm ; apply Rle_minus_l ; rewrite Rminus_0_l.",
            "VernacExtend",
            "018ed5b5c3cf7261287fa992e92bb61d9be997a9"
        ],
        [
            "apply Rabs_maj2.",
            "VernacExtend",
            "6335c2f5bf52bb445ff122fd825dd485dfc5293d"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (Sbp : ex_series bp).",
            "VernacExtend",
            "bd6fc306e55dc517faae814021e9f7ea8c06f4b4"
        ],
        [
            "apply ex_series_scal_r.",
            "VernacExtend",
            "053047afdd25b88b86f580d51c7eb0e91e89701b"
        ],
        [
            "apply @ex_series_plus => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by exists lb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Hbm : forall n, 0 <= bm n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => n ; apply Rdiv_le_0_compat.",
            "VernacExtend",
            "e314495e607932fe8d71263b0b2e7e79c0531c9f"
        ],
        [
            "rewrite Ropp_minus_distr'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (Rminus_le_0 (b _)).",
            "VernacExtend",
            "cbf77ada4270024d599b97dea1f1369f2b8c4b41"
        ],
        [
            "by apply Rle_abs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (Sbm : ex_series bm).",
            "VernacExtend",
            "c0cd66b88611e8e87a7d8cca240d8574fba57b8c"
        ],
        [
            "apply ex_series_scal_r.",
            "VernacExtend",
            "053047afdd25b88b86f580d51c7eb0e91e89701b"
        ],
        [
            "apply @ex_series_opp.",
            "VernacExtend",
            "5c00f5856084dba8f57fc4886ff4cd220a4526b7"
        ],
        [
            "apply @ex_series_minus => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by exists lb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_series_ext with (fun n => sum_f_R0 (fun k : nat => ap k * bp (n - k)%nat) n - sum_f_R0 (fun k : nat => am k * bp (n - k)%nat) n - sum_f_R0 (fun k : nat => ap k * bm (n - k)%nat) n + sum_f_R0 (fun k : nat => am k * bm (n - k)%nat) n).",
            "VernacExtend",
            "f46f24ec58d92667427c3264050330f69707ca7b"
        ],
        [
            "move => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -?minus_sum -plus_sum.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sum_eq => k _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /ap /am /bp /bm ; field.",
            "VernacExtend",
            "978748f3924ddecb0b5c0d464fc313237f2af3c9"
        ],
        [
            "replace (la*lb) with ((Series ap*Series bp-Series am*Series bp-Series ap*Series bm)+Series am*Series bm).",
            "VernacExtend",
            "a3701b263db6b233827966f13a25c3c6ed77fcc3"
        ],
        [
            "apply @is_series_plus.",
            "VernacExtend",
            "2aae80505c3c9d5d9c35aef47aaecd45fd9b1438"
        ],
        [
            "apply @is_series_minus.",
            "VernacExtend",
            "b1797eb47b5446d87902a67eae0974a28b93b6a2"
        ],
        [
            "apply @is_series_minus.",
            "VernacExtend",
            "b1797eb47b5446d87902a67eae0974a28b93b6a2"
        ],
        [
            "apply is_series_mult_pos => // ; by apply Series_correct.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "apply is_series_mult_pos => // ; by apply Series_correct.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "apply is_series_mult_pos => // ; by apply Series_correct.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "apply is_series_mult_pos => // ; by apply Series_correct.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "replace (la) with (Series ap - Series am).",
            "VernacExtend",
            "ea23045781cd5b9bb890b79b5bfbd3f47173679a"
        ],
        [
            "replace (lb) with (Series bp - Series bm).",
            "VernacExtend",
            "d26cc304dac2401688cddd040cbd477e0e8e32cc"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite -Series_minus // -(is_series_unique _ _ Hlb) ; apply Series_ext => n.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "rewrite /ap /am /bp /bm ; field.",
            "VernacExtend",
            "978748f3924ddecb0b5c0d464fc313237f2af3c9"
        ],
        [
            "rewrite -Series_minus // -(is_series_unique _ _ Hla) ; apply Series_ext => n.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "rewrite /ap /am /bp /bm ; field.",
            "VernacExtend",
            "978748f3924ddecb0b5c0d464fc313237f2af3c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_DAlembert (a : nat -> R) (k : R) : k < 1 -> (forall n, a n <> 0) -> is_lim_seq (fun n => Rabs (a (S n) / a n)) k -> ex_series (fun n => Rabs (a n)).",
            "VernacStartTheoremProof",
            "5a3996addc368da7ed7e4cb6d4029a83b0a4c7b7"
        ],
        [
            "move => Hk Ha H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have : exists N, forall n, (N <= n)%nat -> Rabs (a (S n) / a n) <= (k+1)/2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply is_lim_seq_spec in H.",
            "VernacExtend",
            "98ca61a735cdd6a0c67afeba86446058c65f378f"
        ],
        [
            "case: (fun He => H (mkposreal ((1-k)/2) He)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (fun He => is_pos_div_2 (mkposreal (1-k) He)) => /= He ; apply: He.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply -> Rminus_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => {H} /= Hk1 N H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: (H n Hn) => {H} H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rabs_lt_between' in H ; case: H => _ H ; field_simplify in H ; rewrite Rdiv_1 in H ; by apply Rlt_le.",
            "VernacExtend",
            "db317bf387ee077c4da4183da92e0f1aa7b836d6"
        ],
        [
            "case => {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply ex_series_incr_n with N.",
            "VernacExtend",
            "1c25566ecd9bcb0784d1495f7c1ba13209f2dc5c"
        ],
        [
            "apply @ex_series_le with (fun n => Rabs (a N) * ((k+1)/2)^n).",
            "VernacExtend",
            "1dbdae2287cff84e4a48488b943c72eeaaa5e023"
        ],
        [
            "move => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /norm /= /abs /= Rabs_Rabsolu.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rmult_comm ; apply Rle_div_l.",
            "VernacExtend",
            "d9d7ce9f929bd4344f0adb0806d64329a559ead8"
        ],
        [
            "by apply Rabs_pos_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Rabs_div.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: n => [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite plus_0_r /Rdiv Rinv_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rabs_R1 ; by apply Rle_refl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by apply Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (Rabs (a (N + S n)%nat / a N)) with (Rabs (a (S (N + n))/a (N+n)%nat) * Rabs (a (N + n)%nat / a N)).",
            "VernacExtend",
            "1649e4e1a22b0515ba3b5c66597ba1c4693310b9"
        ],
        [
            "simpl ; apply Rmult_le_compat.",
            "VernacExtend",
            "78440126b3af6370a42a8f42404ac7df34583846"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply H, le_plus_l.",
            "VernacExtend",
            "aec1829c1fda2e8c08fe869de93982e610b4c22d"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Rabs_mult ; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "rewrite plus_n_Sm ; field ; split ; by apply Ha.",
            "VernacExtend",
            "54637da7a28e5d9bf5ce3832ab484fbb1f028200"
        ],
        [
            "by apply Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply @ex_series_scal_l.",
            "VernacExtend",
            "23812c8b7384a383812730b01ff9a5634d0a810f"
        ],
        [
            "set k0 := ((k + 1) / 2).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists (/(1-k0) * (1-k0*0)).",
            "VernacExtend",
            "403db4575c252f9d80e529dd05fed72241054879"
        ],
        [
            "apply filterlim_ext with (fun N => / (1 - k0) * (1 - k0 ^ S N)).",
            "VernacExtend",
            "6956cccf8d20fe200943b4ebecfb100058c96077"
        ],
        [
            "move => n ; rewrite sum_n_Reals; rewrite tech3.",
            "VernacExtend",
            "e05f4a56f17e4b341df19faa23614b9e0a1c72d3"
        ],
        [
            "by apply Rmult_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "unfold k0 ; lra.",
            "VernacExtend",
            "dd6f02ac1334c66abf9cbb46327d108ec7b71499"
        ],
        [
            "apply (is_lim_seq_scal_l (fun N0 => (1 - k0 ^ S N0)) (/ (1 - k0)) (Finite (1-k0*0))).",
            "VernacExtend",
            "7c09bdf5b0dcd031caf914d187b15db45bc850b3"
        ],
        [
            "apply (is_lim_seq_minus _ _ (Finite 1) (Finite (k0*0))).",
            "VernacExtend",
            "4e0b544cbbdeef538fdfb933d2c84adb5907534e"
        ],
        [
            "by apply is_lim_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl pow ; apply (is_lim_seq_scal_l _ _ (Finite 0)).",
            "VernacExtend",
            "9bd5ea77d0e4456c08615fd56efcdeb726ca3f4d"
        ],
        [
            "apply (is_lim_seq_geom k0).",
            "VernacExtend",
            "e9e72039ec13bdee7ef825ac9807896ccd4bd3f9"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "unfold k0 ; lra.",
            "VernacExtend",
            "dd6f02ac1334c66abf9cbb46327d108ec7b71499"
        ],
        [
            "apply Rle_trans with (2 := H N (le_refl _)) ; by apply Rabs_pos.",
            "VernacExtend",
            "033aec36c1149ff50eb96afaa17facbeabd7a65b"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_ex_series_DAlembert (a : nat -> R) (l : R) : l > 1 -> (forall n, a n <> 0) -> is_lim_seq (fun n => Rabs (a (S n) / a n)) l -> ~ is_lim_seq a 0.",
            "VernacStartTheoremProof",
            "bd3d2bfec5cd2fc0761ce294e86ac51dce26db24"
        ],
        [
            "move => Hl Ha Hda Ha0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "set k := (l+1)/2.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have Hk1 : 1 < k.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "unfold k ; lra.",
            "VernacExtend",
            "fb9c3b23e784649bfe05a1a4ebac363d582c31c4"
        ],
        [
            "have : exists N, forall n, (N <= n)%nat -> k <= Rabs (a (S n) / a n).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply is_lim_seq_spec in Hda.",
            "VernacExtend",
            "4ce97100f666257e5ce85903594d0564c694075b"
        ],
        [
            "case: (fun H => Hda (mkposreal ((l-1)/2) H)) => [ | /= {Hda} H N Hda].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply -> Rminus_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_R0_R2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: (Hda n Hn) => {Hda} Hda.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rabs_lt_between' in Hda.",
            "VernacExtend",
            "d6f2b2969f1335997e873164114dc8c7450b7ccf"
        ],
        [
            "replace (k) with (l - (l - 1) / 2) by (unfold k ; field).",
            "VernacExtend",
            "0f85f415cd1a460a6e2d81c88a54fdb653fbddbd"
        ],
        [
            "by apply Rlt_le, Hda.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case => N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply is_lim_seq_abs_0, (is_lim_seq_incr_n _ N) in Ha0.",
            "VernacExtend",
            "18e7d3f417159a53afb31770f04a4baa4c995ca7"
        ],
        [
            "have : forall n, Rabs (a N) * k ^ n <= Rabs (a (n + N)%nat).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite Rmult_1_r ; by apply Rle_refl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "replace (Rabs (a (S (n + N)))) with (Rabs (a (S (n+N)) / a (n+N)%nat) * Rabs (a (n+N)%nat)) by (rewrite -Rabs_mult ; apply f_equal ; by field).",
            "VernacExtend",
            "1b316241a6b32f52fce6c1c0b0c4a46f1cbf0f1e"
        ],
        [
            "replace (Rabs (a N) * (k * k ^ n)) with (k * (Rabs (a N) * k ^ n)) by ring.",
            "VernacExtend",
            "221c558256e6a51cfd75bec0803ef8ebb046b33b"
        ],
        [
            "apply Rmult_le_compat.",
            "VernacExtend",
            "99a65cd1efb8e35313415d4b052731e2b0746daf"
        ],
        [
            "by apply Rlt_le, Rlt_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply pow_le.",
            "VernacExtend",
            "cc44161251b27644855953f8a9cda06edcf33960"
        ],
        [
            "by apply Rlt_le, Rlt_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H, le_plus_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => {H} H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have : Finite 0 = p_infty.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(Lim_seq_geom_p k Hk1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "apply is_lim_seq_ext with (fun n => / Rabs (a N) * (Rabs (a N) * k ^ n)).",
            "VernacExtend",
            "5714f816d30143103a38cfe7e7e46a89f4745401"
        ],
        [
            "move => n ; field ; by apply Rabs_no_R0.",
            "VernacExtend",
            "fadcb7a57cb80c649fa0fbbdd9a4c7fb34374058"
        ],
        [
            "rewrite -(Rmult_0_r (/Rabs (a N))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (is_lim_seq_scal_l _ _ (Finite 0)).",
            "VernacExtend",
            "635af26aa3a0610235b67fd00b69faa5f767deb5"
        ],
        [
            "apply is_lim_seq_le_le with (fun _ => 0) (fun n => Rabs (a (n + N)%nat)).",
            "VernacExtend",
            "065bd4ea3a3c1e97fb2d6c330d94ba6658793b70"
        ],
        [
            "move => n ; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply pow_le.",
            "VernacExtend",
            "cc44161251b27644855953f8a9cda06edcf33960"
        ],
        [
            "by apply Rlt_le, Rlt_trans with (1 := Rlt_0_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_lim_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Ha0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partial_summation_R (a b : nat -> R) : (exists M, forall n, norm (sum_n b n) <= M) -> filterlim a eventually (locally 0) -> ex_series (fun n => norm (minus (a (S n)) (a n))) -> ex_series (fun n => scal (a n) (b n)).",
            "VernacStartTheoremProof",
            "82850243dc6c88306baa7dc1d56bfef13edb4268"
        ],
        [
            "set B := fun n => sum_n b n.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "intros Hb Ha0 Ha.",
            "VernacExtend",
            "19427200798b900a085a03742003d11fea57f23d"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "unfold is_series.",
            "VernacExtend",
            "d2d6627db981f72bc2a186998bbb6394c29062f0"
        ],
        [
            "replace (@locally R_NormedModule) with (fun x => Rbar_locally (Finite x)) by auto.",
            "VernacExtend",
            "a4f54cd7469b89f342adb19827fd4235a3734d75"
        ],
        [
            "apply is_lim_seq_ext with (fun N => plus (scal (a N) (B N)) (match N with | O => zero | S N => sum_n (fun n => scal (minus (a n) (a (S n))) (B n)) N end)).",
            "VernacExtend",
            "1d689aab4df9109da44b5e02bfb966e0141a85bd"
        ],
        [
            "case => /= [ | N].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /B /= !sum_O ; by apply plus_zero_r.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite sum_Sn plus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: N => /= [ | N IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite /B /= !sum_Sn !sum_O /minus !scal_distr_r !scal_distr_l !scal_opp_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -!plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite plus_comm -!plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite plus_comm -!plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite plus_opp_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply plus_zero_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !sum_Sn -IH ; clear IH.",
            "VernacExtend",
            "3b12daffded2f6471201bc2fe68eff011be79b39"
        ],
        [
            "rewrite /B /= /minus !sum_Sn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "generalize (sum_n (fun n : nat => scal (plus (a n) (opp (a (S n)))) (sum_n b n)) N) => /= c.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "generalize (sum_n b N) => b'.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite !scal_distr_r !scal_distr_l -!plus_assoc !scal_opp_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "repeat apply f_equal.",
            "VernacExtend",
            "998600d7663151cc7094e6b99854d685cb2c2956"
        ],
        [
            "repeat rewrite (plus_comm (scal (a (S (S N))) b')) -!plus_assoc.",
            "VernacExtend",
            "c23cdc0c7bcb18627cd6e2b08e391fe6a16b1b34"
        ],
        [
            "rewrite plus_comm -!plus_assoc plus_opp_r plus_zero_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite plus_assoc plus_opp_l plus_zero_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_plus'.",
            "VernacExtend",
            "04776e08d06fd1a67e6ad9805d2ad1108f6952ad"
        ],
        [
            "instantiate (1 := 0).",
            "VernacExtend",
            "0a5a970845955ff1f59ab9f6daabacbe6eea4d49"
        ],
        [
            "apply filterlim_locally => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct Hb as [M Hb].",
            "VernacExtend",
            "d4704ef2ee77238363709b79a60b554f90967e06"
        ],
        [
            "eapply filter_imp.",
            "VernacExtend",
            "bf3d126874cf320edb00f681aadb1db062bce3fd"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "apply @norm_compat1.",
            "VernacExtend",
            "25d92ad411ec3d2377eb921e60728986e99a3476"
        ],
        [
            "rewrite /minus opp_zero plus_zero_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply @norm_scal.",
            "VernacExtend",
            "c6b7146cb6222d5cb71aafd018ad8cdb1926b185"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "by apply abs_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "by apply Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (Rmax_r 1).",
            "VernacExtend",
            "8027b3f6c00aefb859f1c47ccf57081ae30da38f"
        ],
        [
            "apply Rlt_div_r.",
            "VernacExtend",
            "f3a8151a1973e9e9720c6ac1d2553ca6f749e13b"
        ],
        [
            "eapply Rlt_le_trans, Rmax_l.",
            "VernacExtend",
            "4652174ee5227e1c8551c5914ce4e531aaf862ed"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hn.",
            "VernacExtend",
            "c5adcc6ecec47fdf9466a9526d44d536ffc16251"
        ],
        [
            "assert (0 < eps / Rmax 1 M).",
            "VernacExtend",
            "a6bffd4d6e47aeff25b588b3c498a3c8ef43922a"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rlt_le_trans, Rmax_l.",
            "VernacExtend",
            "4652174ee5227e1c8551c5914ce4e531aaf862ed"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "destruct (proj1 (filterlim_locally _ _) Ha0 (mkposreal _ H)) as [N HN].",
            "VernacExtend",
            "2842840bd1f9c80836bff869254ddfdab37939a0"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "eapply Rle_lt_trans, HN, Hn.",
            "VernacExtend",
            "d3b9db4b33cfedd303f208346f9397f30338e5ff"
        ],
        [
            "rewrite /minus opp_zero plus_zero_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rle_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_incr_1.",
            "VernacExtend",
            "8feb5d88cd2a761705b607c724cf7e02bdc1c5dc"
        ],
        [
            "apply (Lim_seq_correct' (fun n : nat => sum_n (fun n0 : nat => scal (minus (a n0) (a (S n0))) (B n0)) n)).",
            "VernacExtend",
            "d50ce30e38bf37e9d023d52913782d2cccda152e"
        ],
        [
            "case: Hb => M Hb.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "eapply @ex_series_le.",
            "VernacExtend",
            "5ccfb570514a2440c5c9be1ae972e3306d3ed9d6"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "apply @norm_scal.",
            "VernacExtend",
            "c6b7146cb6222d5cb71aafd018ad8cdb1926b185"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "by apply abs_ge_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_series_scal_r.",
            "VernacExtend",
            "053047afdd25b88b86f580d51c7eb0e91e89701b"
        ],
        [
            "move: Ha ; apply ex_series_ext => n.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite -norm_opp /minus opp_plus opp_opp plus_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_series_geom (q : R) : Rabs q < 1 -> is_series (fun n => q ^ n) (/ (1-q)).",
            "VernacStartTheoremProof",
            "62ccb9f1708ce8e0e6b893e75d7ea1cf0f118761"
        ],
        [
            "move => Hq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterlim_ext with (fun n => (1-q^(S n)) / (1-q)).",
            "VernacExtend",
            "1559919872e8d32b5580fa70ba27932a7c02aadd"
        ],
        [
            "move => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite sum_n_Reals; rewrite tech3.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply Rlt_not_eq.",
            "VernacExtend",
            "4d888fdf05ab3816c2e650b03b478096db638cf5"
        ],
        [
            "apply Rle_lt_trans with (2 := Hq).",
            "VernacExtend",
            "daacb4fbace6860b5332da2bff36d8b690bbcfee"
        ],
        [
            "apply Rle_abs.",
            "VernacExtend",
            "7222806352a7f01b48467f271bcdc35194fd1877"
        ],
        [
            "change (is_lim_seq (fun n : nat => (1 - q ^ S n) / (1 - q)) (/(1-q))).",
            "VernacExtend",
            "12ec51dad21b1510ea6cc07405a1b1fc6789fc41"
        ],
        [
            "replace ((/ (1 - q))) with (real (Rbar_mult (Rbar_minus 1 0) (/ (1 - q)))).",
            "VernacExtend",
            "6abdfb37d54c4b7e54ebd16d530a23d91debf258"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "apply (is_lim_seq_scal_r (fun n : nat => (1 - q ^ S n)) (/ (1 - q)) (Rbar_minus 1 0)).",
            "VernacExtend",
            "672a596db44b27c23cb0ca84737b547c4da54324"
        ],
        [
            "apply is_lim_seq_minus'.",
            "VernacExtend",
            "d40b84f9d4c6cdd5a953bb10ef3fce2a83fa3569"
        ],
        [
            "by apply is_lim_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (is_lim_seq_incr_1 (fun n => q^n)).",
            "VernacExtend",
            "9b2806e3aeb17511119eb5ecf6a4e3804d8c4479"
        ],
        [
            "by apply is_lim_seq_geom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_series_geom (q : R) : Rabs q < 1 -> ex_series (fun n => q ^ n).",
            "VernacStartTheoremProof",
            "1a85e77def6bb7dacc4a779646f02333235fc900"
        ],
        [
            "move => Hq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (/(1-q)).",
            "VernacExtend",
            "374750a87382504297811e637260c7be04927353"
        ],
        [
            "by apply is_series_geom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Series_geom (q : R) : Rabs q < 1 -> Series (fun n => q ^ n) = / (1-q).",
            "VernacStartTheoremProof",
            "7cb2a400eedd41e041cfeb416789ee2e041e82f7"
        ],
        [
            "move => Hq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_series_unique.",
            "VernacExtend",
            "660f382307748728e0c26076611874798d98173c"
        ],
        [
            "by apply is_series_geom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "ex_series_dec",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "case: (ex_lim_seq_dec (sum_n a)) => H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_correct in H.",
                        "VernacExtend",
                        "922d480e665803c534a201f4f7ce2163ea41d20e"
                    ]
                },
                {
                    "command": [
                        "case: (Lim_seq (sum_n a)) H => [l | | ] H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "left ; by exists l.",
                        "VernacExtend",
                        "8d1d3855bd3af5f36952354b4669569e4c0e7e37"
                    ]
                },
                {
                    "command": [
                        "right ; case => l H0.",
                        "VernacExtend",
                        "e985f090bbc3f2b716cbe18e96b8cccc4daa9e68"
                    ]
                },
                {
                    "command": [
                        "absurd (p_infty = Finite l) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -(is_lim_seq_unique _ _ H).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_unique.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "right ; case => l H0.",
                        "VernacExtend",
                        "e985f090bbc3f2b716cbe18e96b8cccc4daa9e68"
                    ]
                },
                {
                    "command": [
                        "absurd (m_infty = Finite l) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -(is_lim_seq_unique _ _ H).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_unique.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "right ; case => l.",
                        "VernacExtend",
                        "e985f090bbc3f2b716cbe18e96b8cccc4daa9e68"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "by exists l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_unique",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "move => Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "replace l with (real (Finite l)) by auto.",
                        "VernacExtend",
                        "73a04e6bc75bd526ae1172f9e0d93e041d09f5bb"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal real).",
                        "VernacExtend",
                        "57e73bb5eae5aa448423da85c916d02b5d8e8198"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_unique.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_correct",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "case => l Ha.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (is_series_unique a l).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_Reals",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "split => H.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_spec _ l) in H.",
                        "VernacExtend",
                        "8d7a1e99e945e93ea5bf25bace819453d8c0d73a"
                    ]
                },
                {
                    "command": [
                        "move => e He ; set eps := mkposreal e He.",
                        "VernacExtend",
                        "fd0300d8899563f42d81dc09cab8269e61be7289"
                    ]
                },
                {
                    "command": [
                        "case: (H eps) => /= {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sum_n_Reals.",
                        "VernacExtend",
                        "0489649d8f03c9e398e73562605a58fa65a0f9e9"
                    ]
                },
                {
                    "command": [
                        "by apply (H n Hn).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_spec _ l).",
                        "VernacExtend",
                        "b647a8fffd8d7d14ce42956445e40a177c1ec806"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (H eps (cond_pos eps)) => {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_n_Reals.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply (H n Hn).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_Reals_0",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "move => H ; exists (Series a) ; case: H => l H.",
                        "VernacExtend",
                        "474cbc8d9ea0e93350e4c1452256b4257e299ed7"
                    ]
                },
                {
                    "command": [
                        "replace (Series a) with l.",
                        "VernacExtend",
                        "8b3766efccd9cf5bc1e90787dbe87e61c55c19de"
                    ]
                },
                {
                    "command": [
                        "move => e He ; set eps := mkposreal e He.",
                        "VernacExtend",
                        "fd0300d8899563f42d81dc09cab8269e61be7289"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_spec _ l) in H.",
                        "VernacExtend",
                        "8d7a1e99e945e93ea5bf25bace819453d8c0d73a"
                    ]
                },
                {
                    "command": [
                        "case: (H eps) => /= {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sum_n_Reals.",
                        "VernacExtend",
                        "0489649d8f03c9e398e73562605a58fa65a0f9e9"
                    ]
                },
                {
                    "command": [
                        "by apply (H n Hn).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq.",
                        "VernacExtend",
                        "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
                    ]
                },
                {
                    "command": [
                        "rewrite /Series.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace l with (real (Finite l)) by auto.",
                        "VernacExtend",
                        "73a04e6bc75bd526ae1172f9e0d93e041d09f5bb"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_unique.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_Reals_1",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "case => l H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_spec _ l).",
                        "VernacExtend",
                        "b647a8fffd8d7d14ce42956445e40a177c1ec806"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (H eps (cond_pos eps)) => {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_n_Reals.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply (H n Hn).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cauchy_ex_series",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros [l Hl] eps.",
                        "VernacExtend",
                        "ea70ff61799fda0f1954afaf24cc655c5262582f"
                    ]
                },
                {
                    "command": [
                        "set (eps' := eps / (norm_factor (V := V))).",
                        "VernacExtend",
                        "2a2dd646fd7e217237ef4ddd0c2d576d3a9ea39b"
                    ]
                },
                {
                    "command": [
                        "assert (He: 0 < eps').",
                        "VernacExtend",
                        "5c9f183cc2ddbc3e9221fba8f4654e7799d828f4"
                    ]
                },
                {
                    "command": [
                        "apply Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
                    ]
                },
                {
                    "command": [
                        "apply eps.",
                        "VernacExtend",
                        "594d151b731c3f7a90933421f2349d84bc05293f"
                    ]
                },
                {
                    "command": [
                        "apply norm_factor_gt_0.",
                        "VernacExtend",
                        "c21e5c842b3a171fd394566edf1ef5867669763c"
                    ]
                },
                {
                    "command": [
                        "destruct (proj2 (filterlim_locally_cauchy (U := V) (F := eventually) (sum_n (fun k => a k))) (ex_intro _ l Hl) (mkposreal _ He)) as [P [[N HN] HP]].",
                        "VernacExtend",
                        "937c99baf552882439ea256d2847e7e9a6a904c1"
                    ]
                },
                {
                    "command": [
                        "exists (S N).",
                        "VernacExtend",
                        "e311edc001e909167c32da4a482b57888adfab8c"
                    ]
                },
                {
                    "command": [
                        "intros [|u] v Hu Hv.",
                        "VernacExtend",
                        "bfd050c0145ddb5730e1dd553ad93b92f1598c33"
                    ]
                },
                {
                    "command": [
                        "elim le_Sn_O with (1 := Hu).",
                        "VernacExtend",
                        "20b4bd459316560effd5d4208147417d5d3b9b7b"
                    ]
                },
                {
                    "command": [
                        "destruct (le_or_lt u v) as [Huv|Huv].",
                        "VernacExtend",
                        "4d771e5ffe4c31e1feede6ecb06721c6de6a01ab"
                    ]
                },
                {
                    "command": [
                        "rewrite -> sum_n_m_sum_n with (1 := Huv).",
                        "VernacExtend",
                        "dfcbe6d5eebb779a61952c5ab394f2cc28f2fcf0"
                    ]
                },
                {
                    "command": [
                        "replace (pos eps) with (norm_factor (V := V) * mkposreal _ He).",
                        "VernacExtend",
                        "24347993b8dccfd54d1768837f1e60ed261a1ba2"
                    ]
                },
                {
                    "command": [
                        "apply norm_compat2.",
                        "VernacExtend",
                        "92632c04f897a1a0dea9277f16ae54baa78f6cfe"
                    ]
                },
                {
                    "command": [
                        "apply HP ; apply HN.",
                        "VernacExtend",
                        "b209e83bc4523fc645892573dc1e9a1a7a3029ba"
                    ]
                },
                {
                    "command": [
                        "now apply le_S_n.",
                        "VernacExtend",
                        "172d1d429f1fcfbbf2a7810e3e9265685ea093bc"
                    ]
                },
                {
                    "command": [
                        "now apply le_Sn_le.",
                        "VernacExtend",
                        "77ac5ecceea8f817d622be32ed056989cfadda5a"
                    ]
                },
                {
                    "command": [
                        "rewrite /eps' /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq, norm_factor_gt_0.",
                        "VernacExtend",
                        "bedcdb9c542523a7d0cb836687a677ddde20498a"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_n_m_zero.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite norm_zero.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos.",
                        "VernacExtend",
                        "8ddb865849694c081c727a4dcd01494f171e402e"
                    ]
                },
                {
                    "command": [
                        "now apply lt_S.",
                        "VernacExtend",
                        "c5df6da0ed6232be994e34c8035ccb6061cd5cab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_ext",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "move => Heq.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext.",
                        "VernacExtend",
                        "5a8de5597a216013626ab027ef1ab5ce9b617a16"
                    ]
                },
                {
                    "command": [
                        "intros x; now apply sum_n_m_ext.",
                        "VernacExtend",
                        "f7b04540f0c0eee4c3da73e1d1b3fcf15be75a05"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_ext",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "move => Heq [l Ha].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists l ; by apply is_series_ext with a.",
                        "VernacExtend",
                        "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_ext",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "move => Heq.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal real).",
                        "VernacExtend",
                        "57e73bb5eae5aa448423da85c916d02b5d8e8198"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_ext.",
                        "VernacExtend",
                        "7ea6f4316462f16e8e0201ec50e1735bb5bff76f"
                    ]
                },
                {
                    "command": [
                        "intros n; now apply sum_n_m_ext.",
                        "VernacExtend",
                        "c75c4a1e39b0f6483ae1eba03fd9ebcd64e308ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_incr_1",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun k => plus (sum_n a (S k)) (opp (a 0%nat))).",
                        "VernacExtend",
                        "4ce856236a795f0baffa1d09b11615c0d91dbe32"
                    ]
                },
                {
                    "command": [
                        "induction x; simpl.",
                        "VernacExtend",
                        "032ca6881eec9f6ca6ad619919b16fb530146db9"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_Sn !sum_O (plus_comm _ (a 1%nat)); rewrite <- plus_assoc.",
                        "VernacExtend",
                        "85de7ed70a17bda19406399a8c343e9d14c2dde5"
                    ]
                },
                {
                    "command": [
                        "now rewrite plus_opp_r plus_zero_r.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_Sn -IHx -!sum_Sn sum_Sn; simpl.",
                        "VernacExtend",
                        "098b55457c4818143077b1c537d807f1600477c2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_assoc, <- (plus_assoc _ _ (a (S (S x)))).",
                        "VernacExtend",
                        "2ed3c1cdf49f668e4c51d9508f2aa5e52fbd52db"
                    ]
                },
                {
                    "command": [
                        "apply f_equal; apply plus_comm.",
                        "VernacExtend",
                        "3d2cc55c86a321d98fa1a409c785a4d528ba9b27"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (G:=(locally (plus l (a 0%nat)))) (g:=fun x => plus x (opp (a 0%nat))).",
                        "VernacExtend",
                        "ac09d98e310e42ea1224c3f78248a064313e35e9"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (f:= fun x => S x) (2:=H).",
                        "VernacExtend",
                        "ae54dffc394b6851f63a53cbe6f992bc3053ae49"
                    ]
                },
                {
                    "command": [
                        "apply eventually_subseq; intros n; omega.",
                        "VernacExtend",
                        "7526edbe28814bbfc9a6aabbc8457d8c9b2a1c54"
                    ]
                },
                {
                    "command": [
                        "pattern l at 2; replace l with (plus (plus l (a 0%nat)) (opp (a 0%nat))).",
                        "VernacExtend",
                        "37cd31eb4f7159d45d100c3833a96335f1c4fca5"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp_2 with (3 := filterlim_plus _ _).",
                        "VernacExtend",
                        "1141fa965421259e149125bedfc97586ea306105"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_id.",
                        "VernacExtend",
                        "0c9885f23d2ca915379801b6ded9080d6c98b8f7"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_const.",
                        "VernacExtend",
                        "ff971edf84d1cf6e134869f4729acc40969816e1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_assoc, plus_opp_r.",
                        "VernacExtend",
                        "9c5474da6125e7672a3b10e4f242078193c755c5"
                    ]
                },
                {
                    "command": [
                        "apply plus_zero_r.",
                        "VernacExtend",
                        "747a1f63deb7f92de228bb2865fc0b3bae43f86f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_incr_n",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "case: n => /= [ | n] Hn Ha.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply lt_irrefl in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "clear Hn.",
                        "VernacExtend",
                        "24a03c9d63807831b3b21f783ac6facdb799cd28"
                    ]
                },
                {
                    "command": [
                        "elim: n l Ha => [ | n IH] l Ha.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_O in Ha.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply is_series_incr_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_series_ext with (fun k : nat => a (S (n + S k))).",
                        "VernacExtend",
                        "5b0871092fc532f1dc66dd6a6697e200fb77f705"
                    ]
                },
                {
                    "command": [
                        "move => k ; apply f_equal ; ring.",
                        "VernacExtend",
                        "b3aff1fc85ec19d5daa65781c1a3d49461b77e58"
                    ]
                },
                {
                    "command": [
                        "apply (is_series_incr_1 (fun k : nat => a (S (n + k))) l).",
                        "VernacExtend",
                        "3d4ec3f8221a8f3adcf4080925bfaaa010c30927"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply IH.",
                        "VernacExtend",
                        "88103d45393d3ee3ab547447d913543854db8cea"
                    ]
                },
                {
                    "command": [
                        "replace (plus (plus l (a (S n))) (sum_n a n)) with (plus l (sum_n a (S n))).",
                        "VernacExtend",
                        "6ca30965a8d142db2c714371ff73bf386dacd7de"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_assoc, sum_Sn; apply f_equal; simpl; apply plus_comm.",
                        "VernacExtend",
                        "c638bb07f7fd75bf7f492ea692ffa2512de2c8fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_decr_1",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext_loc with (fun v => plus (a 0%nat) (sum_n (fun k : nat => a (S k)) (pred v))).",
                        "VernacExtend",
                        "af4959167106f1dd519591268c65cc573c5be7e7"
                    ]
                },
                {
                    "command": [
                        "exists 1%nat.",
                        "VernacExtend",
                        "a730d5780efb9f9e2ab7fc3bf879ff6ecdc4f5b8"
                    ]
                },
                {
                    "command": [
                        "intros n Hn; apply sym_eq.",
                        "VernacExtend",
                        "6c01962a86bb6f6c329fb59a6bf7639d1dcd1e4d"
                    ]
                },
                {
                    "command": [
                        "rewrite /sum_n sum_Sn_m.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_n_m_S.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal ; omega.",
                        "VernacExtend",
                        "d8fed9aa921ba5b0e2a0262a4e314d45fa785d73"
                    ]
                },
                {
                    "command": [
                        "by apply le_O_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace l with (plus (a 0%nat) (plus l (opp (a 0%nat)))).",
                        "VernacExtend",
                        "c6936c790b58e189548cda480063ba565396ea03"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp_2 with (3 := filterlim_plus _ _).",
                        "VernacExtend",
                        "1141fa965421259e149125bedfc97586ea306105"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_id.",
                        "VernacExtend",
                        "0c9885f23d2ca915379801b6ded9080d6c98b8f7"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_const.",
                        "VernacExtend",
                        "ff971edf84d1cf6e134869f4729acc40969816e1"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (f:= fun x => pred x) (2:=H).",
                        "VernacExtend",
                        "b21886ff02b85a38acd4fb75c2ff729aead5dfbe"
                    ]
                },
                {
                    "command": [
                        "intros P (N1,HN1).",
                        "VernacExtend",
                        "416dee8de1a3618ffd30a6dbfb7c8c8ccdb2b13a"
                    ]
                },
                {
                    "command": [
                        "exists (S N1).",
                        "VernacExtend",
                        "3b971d84d848d1d9aa8c850e9c16bcb64454bf37"
                    ]
                },
                {
                    "command": [
                        "intros n Hn; apply HN1; omega.",
                        "VernacExtend",
                        "6c7236f8a0602d68d135f35a9db1523fdc1401be"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; rewrite <- plus_assoc.",
                        "VernacExtend",
                        "85de7ed70a17bda19406399a8c343e9d14c2dde5"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_comm _ (a 0%nat)); rewrite plus_opp_r.",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "apply plus_zero_r.",
                        "VernacExtend",
                        "747a1f63deb7f92de228bb2865fc0b3bae43f86f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_decr_n",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "case: n => /= [ | n] Hn Ha.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply lt_irrefl in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "clear Hn.",
                        "VernacExtend",
                        "24a03c9d63807831b3b21f783ac6facdb799cd28"
                    ]
                },
                {
                    "command": [
                        "elim: n a l Ha => [ | n IH] a l Ha.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_O in Ha.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply is_series_decr_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_series_decr_1.",
                        "VernacExtend",
                        "5d46991db020641f24422c33867f8e8a43ffb8da"
                    ]
                },
                {
                    "command": [
                        "apply IH.",
                        "VernacExtend",
                        "88103d45393d3ee3ab547447d913543854db8cea"
                    ]
                },
                {
                    "command": [
                        "replace (plus (plus l (opp (a 0%nat))) (opp (sum_n (fun k : nat => a (S k)) n))) with (plus l (opp (sum_n a (S n)))).",
                        "VernacExtend",
                        "41f7106e9ae12d5c78769c519b5096bb54ab3491"
                    ]
                },
                {
                    "command": [
                        "by apply Ha.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /sum_n sum_n_m_S sum_Sn_m /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_assoc.",
                        "VernacExtend",
                        "84ba95263db170903fae6df6fe705836bbe227f3"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "now rewrite opp_plus.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "by apply le_O_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_incr_n",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "case: n => [ | n].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "split ; apply ex_series_ext ; by intuition.",
                        "VernacExtend",
                        "d37acc3dc7410f61c30837d381f5a699d8b02e86"
                    ]
                },
                {
                    "command": [
                        "split ; move => [la Ha].",
                        "VernacExtend",
                        "762ea52ce3564fcd0b41ae75027c378295824fae"
                    ]
                },
                {
                    "command": [
                        "exists (plus la (opp (sum_n a (pred (S n))))).",
                        "VernacExtend",
                        "d8e3e4ab68f3d923cbb99ecc655915e6113dde74"
                    ]
                },
                {
                    "command": [
                        "apply is_series_incr_n.",
                        "VernacExtend",
                        "b9a27cf5d776b6248e1e4ebc5504cfaea6ade319"
                    ]
                },
                {
                    "command": [
                        "by apply lt_O_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- plus_assoc, plus_opp_l, plus_zero_r.",
                        "VernacExtend",
                        "bada9cb75b6798b8afb469075774ed167cc6b2bd"
                    ]
                },
                {
                    "command": [
                        "exists (plus la (sum_n a (pred (S n)))).",
                        "VernacExtend",
                        "04eb381d05db897d842b671e9864ef021d3789c7"
                    ]
                },
                {
                    "command": [
                        "apply is_series_decr_n with (S n).",
                        "VernacExtend",
                        "3256f7f831f1d7d4b39ad4d6a31c9698479a39dc"
                    ]
                },
                {
                    "command": [
                        "by apply lt_O_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- plus_assoc, plus_opp_r, plus_zero_r.",
                        "VernacExtend",
                        "c1875a20e746edb0833a10e277c46ef9ce85fb6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_incr_1",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "move => Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_series_unique.",
                        "VernacExtend",
                        "660f382307748728e0c26076611874798d98173c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_series_decr_1.",
                        "VernacExtend",
                        "5d46991db020641f24422c33867f8e8a43ffb8da"
                    ]
                },
                {
                    "command": [
                        "rewrite /plus /opp /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring_simplify (Series (fun k : nat => a (S k)) + a 0%nat +- a 0%nat).",
                        "VernacExtend",
                        "5028dab4b0406dd6e0ed01be416f6685c4483410"
                    ]
                },
                {
                    "command": [
                        "apply Series_correct.",
                        "VernacExtend",
                        "fdea1c2ad906bf31eb70da24fe1e77d127b4cc6d"
                    ]
                },
                {
                    "command": [
                        "by apply (ex_series_incr_1 a).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_incr_n",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "move => Hn Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_series_unique.",
                        "VernacExtend",
                        "660f382307748728e0c26076611874798d98173c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_series_decr_n with n.",
                        "VernacExtend",
                        "3e0b2f997d5001ac01955f40203030dab0832d05"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /plus /opp /= sum_n_Reals.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring_simplify (Series (fun k : nat => a (n+ k)%nat) + sum_f_R0 a (pred n) + - sum_f_R0 a (pred n)).",
                        "VernacExtend",
                        "89e8250b761c564544437670b50a0d6aa8b32bf8"
                    ]
                },
                {
                    "command": [
                        "apply Series_correct.",
                        "VernacExtend",
                        "fdea1c2ad906bf31eb70da24fe1e77d127b4cc6d"
                    ]
                },
                {
                    "command": [
                        "by apply ex_series_incr_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_incr_1_aux",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "move => Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /Series.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -Lim_seq_incr_1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal, Lim_seq_ext => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /sum_n sum_n_m_S sum_Sn_m.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Ha ; by apply Rplus_0_l.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "by apply le_O_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_incr_n_aux",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "elim: n => [ | n IH] Ha.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by apply Series_ext => k.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite IH.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Series_incr_1_aux.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Series_ext => k.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply f_equal ; ring.",
                        "VernacExtend",
                        "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "move => k Hk ; intuition.",
                        "VernacExtend",
                        "96755459c4138d81e02849602fc4789e08ed6a82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_lim_0",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "intros Hs.",
                        "VernacExtend",
                        "83b00eb0dca7fc32e65be9883ada2c4a75547fa8"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "intros eps.",
                        "VernacExtend",
                        "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
                    ]
                },
                {
                    "command": [
                        "apply (Cauchy_ex_series (V := R_CompleteNormedModule)) in Hs.",
                        "VernacExtend",
                        "cf30c999f481c039f09931dbd4bd1a9482f14262"
                    ]
                },
                {
                    "command": [
                        "case: (Hs eps) => {Hs} N Hs.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (S N) ; case => [ | n] Hn.",
                        "VernacExtend",
                        "14739dfc975777cc6d00724be62be6e83a8ee01a"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_0 in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n in Hn.",
                        "VernacExtend",
                        "d6c8198fae967fccd8ccb31dc7436bda9b4417f4"
                    ]
                },
                {
                    "command": [
                        "replace (a (S n) - 0) with (sum_n_m a (S n) (S n)).",
                        "VernacExtend",
                        "14a4d2a2bbf39ef2638a1d9f8e156600442d4c4c"
                    ]
                },
                {
                    "command": [
                        "apply Hs ; by intuition.",
                        "VernacExtend",
                        "e1cd664e0c5395f3409b394ef92e302715e99495"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_n_n Rminus_0_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_le",
            "line_nb": 368,
            "steps": [
                {
                    "command": [
                        "move => Hn Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have Ha := (ex_series_le a b).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_correct' in Ha.",
                        "VernacExtend",
                        "02c7972708dee5336fc1d62df0fa3e81978b4f91"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_correct' in Hb.",
                        "VernacExtend",
                        "14265613a0be801add3d3d99217a1af28c920aec"
                    ]
                },
                {
                    "command": [
                        "move: Ha Hb ; apply is_lim_seq_le.",
                        "VernacExtend",
                        "3ce5f8ff217c623d81d7389c52beb720851314bc"
                    ]
                },
                {
                    "command": [
                        "elim => [ | n IH] /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_O.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_Sn.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat.",
                        "VernacExtend",
                        "7a69898b466991bee51047e3a2fc51c3b80fbd93"
                    ]
                },
                {
                    "command": [
                        "by apply IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "rewrite /norm /= /abs /= Rabs_pos_eq ; by apply Hn.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "by apply Hb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_opp",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "move => Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun n => opp (sum_n a n)).",
                        "VernacExtend",
                        "136848555d635805c1dd8652f953f41db81511d1"
                    ]
                },
                {
                    "command": [
                        "elim => [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_O ; easy.",
                        "VernacExtend",
                        "a6598bc8c5ebe71a1cb89e415003a241a0f63fcd"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_Sn -IH.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply opp_plus.",
                        "VernacExtend",
                        "cb0a70422730fbec4f98da515fd987fc4a18f145"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (1:=Ha).",
                        "VernacExtend",
                        "d37d3187285c6f35ac95b1654dbc40be4637dd24"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_opp.",
                        "VernacExtend",
                        "1c7d45407daf68458a9dfcf6775f546f8d0dd506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_opp",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "move => [la Ha].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (opp la).",
                        "VernacExtend",
                        "ce51b55feae3cda6149fba33c629578aeb217611"
                    ]
                },
                {
                    "command": [
                        "by apply is_series_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_opp",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "rewrite /Series (Lim_seq_ext (sum_n (fun k : nat => - a k)) (fun n => - (sum_n (fun k => a k) n))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Lim_seq_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rbar_opp_real.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim => [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_O ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_Sn IH /plus /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_plus",
            "line_nb": 411,
            "steps": [
                {
                    "command": [
                        "move => Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun n => plus (sum_n a n) (sum_n b n)).",
                        "VernacExtend",
                        "951cd19ef148449833d82661a2d6fa3af812cfac"
                    ]
                },
                {
                    "command": [
                        "elim => [ | n IH]; simpl.",
                        "VernacExtend",
                        "2294aa3ce7c36c79d785f125d6d11c50e2d01667"
                    ]
                },
                {
                    "command": [
                        "by rewrite !sum_O.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_Sn -IH; rewrite <- 2!plus_assoc; apply f_equal.",
                        "VernacExtend",
                        "2fe9893787aed3e6edb2f182430e5d13f9ac5796"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!plus_assoc; apply f_equal2; try easy.",
                        "VernacExtend",
                        "751ec8ed7f4ff015aaf31f44f0d998fcd38ac98c"
                    ]
                },
                {
                    "command": [
                        "apply plus_comm.",
                        "VernacExtend",
                        "12475eb4e354334e12b009d49112b8335e8ec9d3"
                    ]
                },
                {
                    "command": [
                        "now apply filterlim_comp_2 with (3 := filterlim_plus _ _).",
                        "VernacExtend",
                        "bc491bb0ee223a7c3bc2eaece28c459c34b6ae81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_plus",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "move => [la Ha] [lb Hb].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (plus la lb).",
                        "VernacExtend",
                        "48cfd3bced3afc8aa7929a26ef624bea6c0ef154"
                    ]
                },
                {
                    "command": [
                        "by apply is_series_plus.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_minus",
            "line_nb": 426,
            "steps": [
                {
                    "command": [
                        "move => Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_series_plus => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply is_series_opp => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_minus",
            "line_nb": 431,
            "steps": [
                {
                    "command": [
                        "move => Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_plus => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_opp => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_plus",
            "line_nb": 437,
            "steps": [
                {
                    "command": [
                        "intros Ha Hb.",
                        "VernacExtend",
                        "0c4ce3bbd15ba18416ad16c4ce047ec9c705752c"
                    ]
                },
                {
                    "command": [
                        "replace (Series a + Series b) with (real (Series a + Series b)) by auto.",
                        "VernacExtend",
                        "4293fa4b22a0b76ce695ae3e0154f22832fadb0a"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal real), is_lim_seq_unique.",
                        "VernacExtend",
                        "1f216473c2bd59ab6ce05907549bcb8dc3b41177"
                    ]
                },
                {
                    "command": [
                        "apply: is_series_plus ; by apply Series_correct.",
                        "VernacExtend",
                        "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_minus",
            "line_nb": 443,
            "steps": [
                {
                    "command": [
                        "intros Ha Hb.",
                        "VernacExtend",
                        "0c4ce3bbd15ba18416ad16c4ce047ec9c705752c"
                    ]
                },
                {
                    "command": [
                        "rewrite Series_plus => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite Series_opp => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_opp in Hb.",
                        "VernacExtend",
                        "4eea902e4b537c77c13062930cf7d7e762e1db7c"
                    ]
                },
                {
                    "command": [
                        "now simpl in Hb.",
                        "VernacExtend",
                        "bc8da1a28595f25999dfca1097ff38a5c1fa2fe2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_scal",
            "line_nb": 452,
            "steps": [
                {
                    "command": [
                        "move => Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun n => scal c (sum_n a n)).",
                        "VernacExtend",
                        "536672b0a1e040ed5a33c99daebcbea7a8f9f03d"
                    ]
                },
                {
                    "command": [
                        "elim => [ | n IH]; simpl.",
                        "VernacExtend",
                        "2294aa3ce7c36c79d785f125d6d11c50e2d01667"
                    ]
                },
                {
                    "command": [
                        "by rewrite !sum_O.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_Sn -IH.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: scal_distr_l.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "now apply filterlim_comp with (2 := filterlim_scal_r _ _).",
                        "VernacExtend",
                        "8df7affebf185af086317c0b87740f57c838efdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_scal_l",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "exact is_series_scal.",
                        "VernacExtend",
                        "65590ed9fe4c9f5fe29b5dd66de42c4a6bf3655e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_scal",
            "line_nb": 464,
            "steps": [
                {
                    "command": [
                        "move => [l Ha].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (scal c l).",
                        "VernacExtend",
                        "b41b4fa84c6fcf433846ae2b70e9abb2d3b467cf"
                    ]
                },
                {
                    "command": [
                        "by apply: is_series_scal_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_scal_l",
            "line_nb": 469,
            "steps": [
                {
                    "command": [
                        "exact ex_series_scal.",
                        "VernacExtend",
                        "d123707f8b56ea556c8619bbad3e2e7974433e92"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_scal_l",
            "line_nb": 473,
            "steps": [
                {
                    "command": [
                        "rewrite /Series.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have H0 : (forall x, c * Rbar.real x = Rbar.real (Rbar.Rbar_mult (Rbar.Finite c) x)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (Req_dec c 0) => [-> | Hk].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case => [x | | ] //= ; rewrite Rmult_0_l.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rle_refl 0) => //= H0 _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rlt_irrefl 0) => //= _ _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec (Rle_refl 0) => //= H0 _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec (Rlt_irrefl 0) => //= _ _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case => [x | | ] //= ; rewrite Rmult_0_r.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec => //= H0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec => //=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_dec => //= H0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Rle_lt_or_eq_dec => //=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 -(Lim_seq_scal_l _ c).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal, Lim_seq_ext.",
                        "VernacExtend",
                        "e1cfa4da5ff991d74483661018e540e778c207e4"
                    ]
                },
                {
                    "command": [
                        "elim => [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_O ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_Sn IH /plus /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_scal_r",
            "line_nb": 494,
            "steps": [
                {
                    "command": [
                        "move => Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_series_ext with (fun n : nat => c * a n).",
                        "VernacExtend",
                        "d78b90b2c61052ce8d876617e0c6f576105f0c45"
                    ]
                },
                {
                    "command": [
                        "move => n ; apply Rmult_comm.",
                        "VernacExtend",
                        "b6f25f322c20b222576c0d7f281e11a1a0c72d8a"
                    ]
                },
                {
                    "command": [
                        "apply (is_series_scal_l _ _ _ Ha).",
                        "VernacExtend",
                        "74ea9e3c776a7bcc3241206b216d5757ce44d454"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_scal_r",
            "line_nb": 501,
            "steps": [
                {
                    "command": [
                        "intros [l Ha].",
                        "VernacExtend",
                        "13805e788d6d9749d8eebea714822e95b1e44fbd"
                    ]
                },
                {
                    "command": [
                        "exists (l * c).",
                        "VernacExtend",
                        "da4e2279969844fd1ac597e35f8a3956ca92d486"
                    ]
                },
                {
                    "command": [
                        "by apply is_series_scal_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_scal_r",
            "line_nb": 506,
            "steps": [
                {
                    "command": [
                        "rewrite Rmult_comm -Series_scal_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Series_ext.",
                        "VernacExtend",
                        "fdbcb56c0988c866fe0a698401ce4bfd1c6b2a6b"
                    ]
                },
                {
                    "command": [
                        "move => n ; apply Rmult_comm.",
                        "VernacExtend",
                        "b6f25f322c20b222576c0d7f281e11a1a0c72d8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_mult_pos",
            "line_nb": 511,
            "steps": [
                {
                    "command": [
                        "move => Hla Hlb Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have H0 : forall n, sum_f_R0 (fun k : nat => sum_f_R0 (fun p : nat => a p * b (k - p)%nat) k) n <= sum_f_R0 a n * sum_f_R0 b n.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case => [ | n].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "simpl ; apply Rle_refl.",
                        "VernacExtend",
                        "40d7d64fe72819c155d9ccfcd808551cc8b3d745"
                    ]
                },
                {
                    "command": [
                        "rewrite (cauchy_finite a b (S n) (lt_O_Sn n)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_le_0 ; ring_simplify.",
                        "VernacExtend",
                        "48c96302111e8edc2fcb95e79f4f71c3818d133f"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos_sum => m.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos_sum => k.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply Rmult_le_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have H1 : forall n, sum_f_R0 a n * sum_f_R0 b n <= sum_f_R0 (fun k : nat => sum_f_R0 (fun p : nat => a p * b (k - p)%nat) k) ((2*n)%nat).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case => [ /= | n].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (cauchy_finite a b (S n) (lt_O_Sn n)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm ; apply Rle_minus_r.",
                        "VernacExtend",
                        "b3348a6460c24169013fc350b32ef520658a5eb7"
                    ]
                },
                {
                    "command": [
                        "replace (pred (S n)) with n by auto.",
                        "VernacExtend",
                        "f659817da6bced182426db1c9eab3688294aa29d"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S n)%nat with (S n + S n)%nat by ring.",
                        "VernacExtend",
                        "85ff16234cce82791178b302df24f50e3d4f792d"
                    ]
                },
                {
                    "command": [
                        "rewrite -sum_f_rw.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /sum_f.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (S n + S n - S (S n))%nat with n.",
                        "VernacExtend",
                        "52b68dd6a2cf7940b0504da8e3da4b98f56e23b5"
                    ]
                },
                {
                    "command": [
                        "elim: {1 5 8}n (le_refl n) => [ | m IH] Hm ; rewrite /sum_f_R0 -/sum_f_R0.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "rewrite -minus_n_O plus_0_l ; simpl pred.",
                        "VernacExtend",
                        "0dbae2f461f729b681b839c7feeb70f157314b25"
                    ]
                },
                {
                    "command": [
                        "rewrite -?sum_f_rw_0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f 0 (S (S n)) (fun p : nat => a p * b (S (S n) - p)%nat)) with ((sum_f 0 (S (S n)) (fun p : nat => a p * b (S (S n) - p)%nat) - (fun p : nat => a p * b (S (S n) - p)%nat) 0%nat) + a O * b (S (S n))) by (rewrite -minus_n_O ; ring).",
                        "VernacExtend",
                        "f09ccc21c772848ae5d8d3122580b2c5f204acdc"
                    ]
                },
                {
                    "command": [
                        "rewrite -(sum_f_Sn_m _ O (S (S n))) ; [ | by apply lt_O_Sn].",
                        "VernacExtend",
                        "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_f_u_Sk ; [ | by apply le_O_n].",
                        "VernacExtend",
                        "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_f_n_Sm ; [ | by apply le_O_n].",
                        "VernacExtend",
                        "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (sum_f 0 n (fun l0 : nat => a (S (l0 + 0)) * b (S n - l0)%nat) + a (S (S n)) * b (S (S n) - S (S n))%nat + a 0%nat * b (S (S n))).",
                        "VernacExtend",
                        "67a3120947290ce73372d7ab6158d32639fd6112"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_le_0 ; ring_simplify.",
                        "VernacExtend",
                        "48c96302111e8edc2fcb95e79f4f71c3818d133f"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat ; by apply Rmult_le_pos.",
                        "VernacExtend",
                        "f2fdd2635d5abfa5d5c90e0771769c09fa0b1b2a"
                    ]
                },
                {
                    "command": [
                        "repeat apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "3bdd064897a8c8fc3c9f9e8ea168f240fc64579e"
                    ]
                },
                {
                    "command": [
                        "apply Req_le.",
                        "VernacExtend",
                        "b69ffc9461f465218c69f379ac293728d3f8e7bd"
                    ]
                },
                {
                    "command": [
                        "rewrite ?sum_f_rw_0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: {1 4 6}n (le_refl n) => [ | k IH] Hk // ; rewrite /sum_f_R0 -/sum_f_R0.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "rewrite IH ; try by intuition.",
                        "VernacExtend",
                        "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "by rewrite plus_0_r /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat.",
                        "VernacExtend",
                        "7a69898b466991bee51047e3a2fc51c3b80fbd93"
                    ]
                },
                {
                    "command": [
                        "apply IH ; intuition.",
                        "VernacExtend",
                        "bd9c2ece5109c49ee8decab3d9e9664fc0cd4b5d"
                    ]
                },
                {
                    "command": [
                        "rewrite -?sum_f_rw_0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite MyNat.sub_succ_l ; try by intuition.",
                        "VernacExtend",
                        "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
                    ]
                },
                {
                    "command": [
                        "replace (pred (S (n - S m))) with (n - S m)%nat by auto.",
                        "VernacExtend",
                        "6523037e78093cdec73ea6486a150961a6a7cba0"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_Sn_m -?plus_n_Sm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f 0 (S (S (S (m + n)))) (fun p : nat => a p * b (S (S (S (m + n))) - p)%nat)) with (sum_f 1 (S (S (S (m + n)))) (fun p : nat => a p * b (S (S (S (m + n))) - p)%nat) + a O * b (S (S (S (m + n))))).",
                        "VernacExtend",
                        "b44447288c2fa9a96b189a3042abe14bbdf03f15"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rplus_0_r (sum_f O _ _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat.",
                        "VernacExtend",
                        "7a69898b466991bee51047e3a2fc51c3b80fbd93"
                    ]
                },
                {
                    "command": [
                        "rewrite (sum_f_chasles _ O (S m) (S (S (S (m + n))))) ; try by intuition.",
                        "VernacExtend",
                        "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rplus_0_l (sum_f O _ _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat.",
                        "VernacExtend",
                        "7a69898b466991bee51047e3a2fc51c3b80fbd93"
                    ]
                },
                {
                    "command": [
                        "rewrite /sum_f.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: (S m - 1)%nat => {IH} [ | k IH] ; rewrite /sum_f_R0 -/sum_f_R0 //.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "by apply Rmult_le_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat.",
                        "VernacExtend",
                        "f2a4bb243ad7dc4026e4f9c4fede7e10c9e27124"
                    ]
                },
                {
                    "command": [
                        "by apply IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rmult_le_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace (S (S m)) with (1 + S m)%nat by ring.",
                        "VernacExtend",
                        "75b16dce976f2ef9bfad00a29d4725717327673e"
                    ]
                },
                {
                    "command": [
                        "replace (S (S (S (m + n)))) with (S (S n) + S m )%nat by ring.",
                        "VernacExtend",
                        "3abbef27e7772d9d979c9fcf4a539480a2ff3c05"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_f_u_add.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (sum_f_chasles _ O (S (n - S m)) (S (S n))) ; try by intuition.",
                        "VernacExtend",
                        "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rplus_0_r (sum_f O _ _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat.",
                        "VernacExtend",
                        "7a69898b466991bee51047e3a2fc51c3b80fbd93"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_f_u_Sk.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite ?sum_f_rw_0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Req_le.",
                        "VernacExtend",
                        "b69ffc9461f465218c69f379ac293728d3f8e7bd"
                    ]
                },
                {
                    "command": [
                        "elim: (n - S m)%nat => {IH} [ | k IH] ; rewrite /sum_f_R0 -/sum_f_R0 //.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 ; apply f_equal ; intuition.",
                        "VernacExtend",
                        "4c34a07c8b105737eb371ad26b0ec5f2e8681841"
                    ]
                },
                {
                    "command": [
                        "rewrite IH ; apply f_equal, f_equal2 ; apply f_equal.",
                        "VernacExtend",
                        "f06e269562cd7817aa798853a4544b2a08a04381"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite ?(Coq.Arith.Plus.plus_comm _ (S m)) -minus_plus_simpl_l_reverse //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply le_O_n.",
                        "VernacExtend",
                        "7fa25714b3e362fc6548cec817a7c173238f4970"
                    ]
                },
                {
                    "command": [
                        "rewrite /sum_f.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: (S (S n) - S (S (n - S m)))%nat => {IH} [ | k IH] ; rewrite /sum_f_R0 -/sum_f_R0 //.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "by apply Rmult_le_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat => // ; by apply Rmult_le_pos.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "by apply le_n_S, le_O_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rmult_le_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_f_Sn_m -?minus_n_O ; try by intuition.",
                        "VernacExtend",
                        "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "replace (S (S n)) with (S n + 1)%nat.",
                        "VernacExtend",
                        "aace85815bb26859d9cd80acbad812ecbbc8a7a9"
                    ]
                },
                {
                    "command": [
                        "rewrite -minus_plus_simpl_l_reverse.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "simpl; apply minus_n_O.",
                        "VernacExtend",
                        "19f56da0bfd6da3a65daa7bd96104ac76692ee30"
                    ]
                },
                {
                    "command": [
                        "now rewrite Coq.Arith.Plus.plus_comm.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "elim: n => [ | n IH] //.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite -plus_n_Sm plus_Sn_m.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_S ; intuition.",
                        "VernacExtend",
                        "5d396e1636a3da4b36a7080c41c38b8fe544ad22"
                    ]
                },
                {
                    "command": [
                        "have H2 : forall n, sum_f_R0 a (Div2.div2 n)%nat * sum_f_R0 b (Div2.div2 n)%nat <= sum_f_R0 (fun k : nat => sum_f_R0 (fun p : nat => a p * b (k - p)%nat) k) n.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (even_odd_cor n) => k ; case => -> {n}.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "rewrite div2_double.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite div2_S_double.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := H1 _).",
                        "VernacExtend",
                        "d8a1c18db5899deca054eddd799ba3ff9d71db6d"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_le_0 ; rewrite -sum_f_rw ; try by intuition.",
                        "VernacExtend",
                        "eb4274d0f5cb8d57a39f70a15b799800cccab571"
                    ]
                },
                {
                    "command": [
                        "rewrite /sum_f minus_diag /sum_f_R0 -/sum_f_R0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos_sum => l ; by apply Rmult_le_pos.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "change (is_lim_seq (sum_n (fun n : nat => sum_f_R0 (fun k : nat => a k * b (n - k)%nat) n)) (Finite (la * lb))).",
                        "VernacExtend",
                        "1f1eed6e9b1d6d87d9415b527ae07999251994d2"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_le_le with (u := fun n => sum_f_R0 a (Div2.div2 n) * sum_f_R0 b (Div2.div2 n)) (w := fun n => sum_f_R0 a n * sum_f_R0 b n).",
                        "VernacExtend",
                        "a0c878cfa3c2ca1d1498e1ea929cc43059311fd4"
                    ]
                },
                {
                    "command": [
                        "intros n; rewrite sum_n_Reals.",
                        "VernacExtend",
                        "f965f570b70a3bcbf1641b23d677e188374f69a3"
                    ]
                },
                {
                    "command": [
                        "by split.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace (Finite (la * lb)) with (Rbar_mult la lb) by auto.",
                        "VernacExtend",
                        "a59eb86d8ef2a8ffdfce499b0cc8c4955a6eedfe"
                    ]
                },
                {
                    "command": [
                        "suff H : is_lim_seq (fun n : nat => sum_f_R0 a n * sum_f_R0 b n) (Rbar_mult la lb).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in H.",
                        "VernacExtend",
                        "98ca61a735cdd6a0c67afeba86446058c65f378f"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (H eps) => {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (S (2 * N))%nat => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply le_double.",
                        "VernacExtend",
                        "afa53fd37ad6093b0affa9a9693761307de0b21a"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n.",
                        "VernacExtend",
                        "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1 := Hn).",
                        "VernacExtend",
                        "8ac30d3ff1e4a07f44d84ea98e599463c400de71"
                    ]
                },
                {
                    "command": [
                        "apply (Div2.ind_0_1_SS (fun n => (n <= S (2 * Div2.div2 n))%nat)).",
                        "VernacExtend",
                        "68b5593262b67dbbeb6992c1ec45695d2a12b4a5"
                    ]
                },
                {
                    "command": [
                        "by apply le_O_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply le_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => k Hk.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "replace (Div2.div2 (S (S k))) with (S (Div2.div2 k)) by auto.",
                        "VernacExtend",
                        "44ee006fba3a24adba0c4de5137bd6356c3945a8"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S (Div2.div2 k))%nat with (S (S (2 * Div2.div2 k))) by ring.",
                        "VernacExtend",
                        "74fe20bbdf742bed6277aa65caeb2c8899d7cd9a"
                    ]
                },
                {
                    "command": [
                        "by repeat apply le_n_S.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_mult'.",
                        "VernacExtend",
                        "c3b76a14bd90f9a5b789b242041b6743c0716dec"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (2:=Hla); apply sum_n_Reals.",
                        "VernacExtend",
                        "2fcb25c04a8fd1ed3666e23556dd6620aaf12087"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (2:=Hlb); apply sum_n_Reals.",
                        "VernacExtend",
                        "6f2282be6f84ef0b8a9d8e03094bfd80e065e328"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_mult'.",
                        "VernacExtend",
                        "c3b76a14bd90f9a5b789b242041b6743c0716dec"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (2:=Hla); apply sum_n_Reals.",
                        "VernacExtend",
                        "2fcb25c04a8fd1ed3666e23556dd6620aaf12087"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (2:=Hlb); apply sum_n_Reals.",
                        "VernacExtend",
                        "6f2282be6f84ef0b8a9d8e03094bfd80e065e328"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_mult",
            "line_nb": 635,
            "steps": [
                {
                    "command": [
                        "move => Hla Hlb Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "set ap := fun n => (a n + Rabs (a n)) / 2.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "set am := fun n => - (a n - Rabs (a n)) / 2.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "set bp := fun n => (b n + Rabs (b n)) / 2.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "set bm := fun n => - (b n - Rabs (b n)) / 2.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "have Hap : forall n, 0 <= ap n.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => n ; apply Rdiv_le_0_compat.",
                        "VernacExtend",
                        "e314495e607932fe8d71263b0b2e7e79c0531c9f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm ; apply Rle_minus_l ; rewrite Rminus_0_l.",
                        "VernacExtend",
                        "018ed5b5c3cf7261287fa992e92bb61d9be997a9"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_maj2.",
                        "VernacExtend",
                        "6335c2f5bf52bb445ff122fd825dd485dfc5293d"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_0_2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "assert (Sap : ex_series ap).",
                        "VernacExtend",
                        "5bd480fd36a6435fe3f8562182cdd5b6e43a950f"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_scal_r.",
                        "VernacExtend",
                        "053047afdd25b88b86f580d51c7eb0e91e89701b"
                    ]
                },
                {
                    "command": [
                        "apply (@ex_series_plus ) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by exists la.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Ham : forall n, 0 <= am n.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => n ; apply Rdiv_le_0_compat.",
                        "VernacExtend",
                        "e314495e607932fe8d71263b0b2e7e79c0531c9f"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_minus_distr'.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply (Rminus_le_0 (a _)).",
                        "VernacExtend",
                        "f1895491ca5a20b650bb952f39e5a743ee4c5e6c"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_abs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_0_2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "assert (Sam : ex_series am).",
                        "VernacExtend",
                        "26661a735868e96455a5a39ed9d570349479645d"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_scal_r.",
                        "VernacExtend",
                        "053047afdd25b88b86f580d51c7eb0e91e89701b"
                    ]
                },
                {
                    "command": [
                        "apply @ex_series_opp.",
                        "VernacExtend",
                        "5c00f5856084dba8f57fc4886ff4cd220a4526b7"
                    ]
                },
                {
                    "command": [
                        "apply @ex_series_minus => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by exists la.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Hbp : forall n, 0 <= bp n.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => n ; apply Rdiv_le_0_compat.",
                        "VernacExtend",
                        "e314495e607932fe8d71263b0b2e7e79c0531c9f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm ; apply Rle_minus_l ; rewrite Rminus_0_l.",
                        "VernacExtend",
                        "018ed5b5c3cf7261287fa992e92bb61d9be997a9"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_maj2.",
                        "VernacExtend",
                        "6335c2f5bf52bb445ff122fd825dd485dfc5293d"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_0_2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "assert (Sbp : ex_series bp).",
                        "VernacExtend",
                        "bd6fc306e55dc517faae814021e9f7ea8c06f4b4"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_scal_r.",
                        "VernacExtend",
                        "053047afdd25b88b86f580d51c7eb0e91e89701b"
                    ]
                },
                {
                    "command": [
                        "apply @ex_series_plus => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by exists lb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Hbm : forall n, 0 <= bm n.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => n ; apply Rdiv_le_0_compat.",
                        "VernacExtend",
                        "e314495e607932fe8d71263b0b2e7e79c0531c9f"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_minus_distr'.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply (Rminus_le_0 (b _)).",
                        "VernacExtend",
                        "cbf77ada4270024d599b97dea1f1369f2b8c4b41"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_abs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_0_2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "assert (Sbm : ex_series bm).",
                        "VernacExtend",
                        "c0cd66b88611e8e87a7d8cca240d8574fba57b8c"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_scal_r.",
                        "VernacExtend",
                        "053047afdd25b88b86f580d51c7eb0e91e89701b"
                    ]
                },
                {
                    "command": [
                        "apply @ex_series_opp.",
                        "VernacExtend",
                        "5c00f5856084dba8f57fc4886ff4cd220a4526b7"
                    ]
                },
                {
                    "command": [
                        "apply @ex_series_minus => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by exists lb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_series_ext with (fun n => sum_f_R0 (fun k : nat => ap k * bp (n - k)%nat) n - sum_f_R0 (fun k : nat => am k * bp (n - k)%nat) n - sum_f_R0 (fun k : nat => ap k * bm (n - k)%nat) n + sum_f_R0 (fun k : nat => am k * bm (n - k)%nat) n).",
                        "VernacExtend",
                        "f46f24ec58d92667427c3264050330f69707ca7b"
                    ]
                },
                {
                    "command": [
                        "move => n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -?minus_sum -plus_sum.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply sum_eq => k _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /ap /am /bp /bm ; field.",
                        "VernacExtend",
                        "978748f3924ddecb0b5c0d464fc313237f2af3c9"
                    ]
                },
                {
                    "command": [
                        "replace (la*lb) with ((Series ap*Series bp-Series am*Series bp-Series ap*Series bm)+Series am*Series bm).",
                        "VernacExtend",
                        "a3701b263db6b233827966f13a25c3c6ed77fcc3"
                    ]
                },
                {
                    "command": [
                        "apply @is_series_plus.",
                        "VernacExtend",
                        "2aae80505c3c9d5d9c35aef47aaecd45fd9b1438"
                    ]
                },
                {
                    "command": [
                        "apply @is_series_minus.",
                        "VernacExtend",
                        "b1797eb47b5446d87902a67eae0974a28b93b6a2"
                    ]
                },
                {
                    "command": [
                        "apply @is_series_minus.",
                        "VernacExtend",
                        "b1797eb47b5446d87902a67eae0974a28b93b6a2"
                    ]
                },
                {
                    "command": [
                        "apply is_series_mult_pos => // ; by apply Series_correct.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "apply is_series_mult_pos => // ; by apply Series_correct.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "apply is_series_mult_pos => // ; by apply Series_correct.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "apply is_series_mult_pos => // ; by apply Series_correct.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "replace (la) with (Series ap - Series am).",
                        "VernacExtend",
                        "ea23045781cd5b9bb890b79b5bfbd3f47173679a"
                    ]
                },
                {
                    "command": [
                        "replace (lb) with (Series bp - Series bm).",
                        "VernacExtend",
                        "d26cc304dac2401688cddd040cbd477e0e8e32cc"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite -Series_minus // -(is_series_unique _ _ Hlb) ; apply Series_ext => n.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "rewrite /ap /am /bp /bm ; field.",
                        "VernacExtend",
                        "978748f3924ddecb0b5c0d464fc313237f2af3c9"
                    ]
                },
                {
                    "command": [
                        "rewrite -Series_minus // -(is_series_unique _ _ Hla) ; apply Series_ext => n.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "rewrite /ap /am /bp /bm ; field.",
                        "VernacExtend",
                        "978748f3924ddecb0b5c0d464fc313237f2af3c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_DAlembert",
            "line_nb": 702,
            "steps": [
                {
                    "command": [
                        "move => Hk Ha H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have : exists N, forall n, (N <= n)%nat -> Rabs (a (S n) / a n) <= (k+1)/2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in H.",
                        "VernacExtend",
                        "98ca61a735cdd6a0c67afeba86446058c65f378f"
                    ]
                },
                {
                    "command": [
                        "case: (fun He => H (mkposreal ((1-k)/2) He)).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (fun He => is_pos_div_2 (mkposreal (1-k) He)) => /= He ; apply: He.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by apply -> Rminus_lt_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => {H} /= Hk1 N H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move: (H n Hn) => {H} H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in H ; case: H => _ H ; field_simplify in H ; rewrite Rdiv_1 in H ; by apply Rlt_le.",
                        "VernacExtend",
                        "db317bf387ee077c4da4183da92e0f1aa7b836d6"
                    ]
                },
                {
                    "command": [
                        "case => {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_incr_n with N.",
                        "VernacExtend",
                        "1c25566ecd9bcb0784d1495f7c1ba13209f2dc5c"
                    ]
                },
                {
                    "command": [
                        "apply @ex_series_le with (fun n => Rabs (a N) * ((k+1)/2)^n).",
                        "VernacExtend",
                        "1dbdae2287cff84e4a48488b943c72eeaaa5e023"
                    ]
                },
                {
                    "command": [
                        "move => n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /norm /= /abs /= Rabs_Rabsolu.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm ; apply Rle_div_l.",
                        "VernacExtend",
                        "d9d7ce9f929bd4344f0adb0806d64329a559ead8"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos_lt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -Rabs_div.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: n => [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_r /Rdiv Rinv_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_R1 ; by apply Rle_refl.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "by apply Ha.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs (a (N + S n)%nat / a N)) with (Rabs (a (S (N + n))/a (N+n)%nat) * Rabs (a (N + n)%nat / a N)).",
                        "VernacExtend",
                        "1649e4e1a22b0515ba3b5c66597ba1c4693310b9"
                    ]
                },
                {
                    "command": [
                        "simpl ; apply Rmult_le_compat.",
                        "VernacExtend",
                        "78440126b3af6370a42a8f42404ac7df34583846"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply H, le_plus_l.",
                        "VernacExtend",
                        "aec1829c1fda2e8c08fe869de93982e610b4c22d"
                    ]
                },
                {
                    "command": [
                        "by apply IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -Rabs_mult ; apply f_equal.",
                        "VernacExtend",
                        "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_n_Sm ; field ; split ; by apply Ha.",
                        "VernacExtend",
                        "54637da7a28e5d9bf5ce3832ab484fbb1f028200"
                    ]
                },
                {
                    "command": [
                        "by apply Ha.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply @ex_series_scal_l.",
                        "VernacExtend",
                        "23812c8b7384a383812730b01ff9a5634d0a810f"
                    ]
                },
                {
                    "command": [
                        "set k0 := ((k + 1) / 2).",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "exists (/(1-k0) * (1-k0*0)).",
                        "VernacExtend",
                        "403db4575c252f9d80e529dd05fed72241054879"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun N => / (1 - k0) * (1 - k0 ^ S N)).",
                        "VernacExtend",
                        "6956cccf8d20fe200943b4ebecfb100058c96077"
                    ]
                },
                {
                    "command": [
                        "move => n ; rewrite sum_n_Reals; rewrite tech3.",
                        "VernacExtend",
                        "e05f4a56f17e4b341df19faa23614b9e0a1c72d3"
                    ]
                },
                {
                    "command": [
                        "by apply Rmult_comm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "unfold k0 ; lra.",
                        "VernacExtend",
                        "dd6f02ac1334c66abf9cbb46327d108ec7b71499"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_scal_l (fun N0 => (1 - k0 ^ S N0)) (/ (1 - k0)) (Finite (1-k0*0))).",
                        "VernacExtend",
                        "7c09bdf5b0dcd031caf914d187b15db45bc850b3"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_minus _ _ (Finite 1) (Finite (k0*0))).",
                        "VernacExtend",
                        "4e0b544cbbdeef538fdfb933d2c84adb5907534e"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "simpl pow ; apply (is_lim_seq_scal_l _ _ (Finite 0)).",
                        "VernacExtend",
                        "9bd5ea77d0e4456c08615fd56efcdeb726ca3f4d"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_geom k0).",
                        "VernacExtend",
                        "e9e72039ec13bdee7ef825ac9807896ccd4bd3f9"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "unfold k0 ; lra.",
                        "VernacExtend",
                        "dd6f02ac1334c66abf9cbb46327d108ec7b71499"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := H N (le_refl _)) ; by apply Rabs_pos.",
                        "VernacExtend",
                        "033aec36c1149ff50eb96afaa17facbeabd7a65b"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_ex_series_DAlembert",
            "line_nb": 751,
            "steps": [
                {
                    "command": [
                        "move => Hl Ha Hda Ha0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "set k := (l+1)/2.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "have Hk1 : 1 < k.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "unfold k ; lra.",
                        "VernacExtend",
                        "fb9c3b23e784649bfe05a1a4ebac363d582c31c4"
                    ]
                },
                {
                    "command": [
                        "have : exists N, forall n, (N <= n)%nat -> k <= Rabs (a (S n) / a n).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in Hda.",
                        "VernacExtend",
                        "4ce97100f666257e5ce85903594d0564c694075b"
                    ]
                },
                {
                    "command": [
                        "case: (fun H => Hda (mkposreal ((l-1)/2) H)) => [ | /= {Hda} H N Hda].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
                    ]
                },
                {
                    "command": [
                        "by apply -> Rminus_lt_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_R0_R2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move: (Hda n Hn) => {Hda} Hda.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in Hda.",
                        "VernacExtend",
                        "d6f2b2969f1335997e873164114dc8c7450b7ccf"
                    ]
                },
                {
                    "command": [
                        "replace (k) with (l - (l - 1) / 2) by (unfold k ; field).",
                        "VernacExtend",
                        "0f85f415cd1a460a6e2d81c88a54fdb653fbddbd"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, Hda.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case => N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_abs_0, (is_lim_seq_incr_n _ N) in Ha0.",
                        "VernacExtend",
                        "18e7d3f417159a53afb31770f04a4baa4c995ca7"
                    ]
                },
                {
                    "command": [
                        "have : forall n, Rabs (a N) * k ^ n <= Rabs (a (n + N)%nat).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "elim => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r ; by apply Rle_refl.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs (a (S (n + N)))) with (Rabs (a (S (n+N)) / a (n+N)%nat) * Rabs (a (n+N)%nat)) by (rewrite -Rabs_mult ; apply f_equal ; by field).",
                        "VernacExtend",
                        "1b316241a6b32f52fce6c1c0b0c4a46f1cbf0f1e"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs (a N) * (k * k ^ n)) with (k * (Rabs (a N) * k ^ n)) by ring.",
                        "VernacExtend",
                        "221c558256e6a51cfd75bec0803ef8ebb046b33b"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat.",
                        "VernacExtend",
                        "99a65cd1efb8e35313415d4b052731e2b0746daf"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, Rlt_trans with (1 := Rlt_0_1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply pow_le.",
                        "VernacExtend",
                        "cc44161251b27644855953f8a9cda06edcf33960"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, Rlt_trans with (1 := Rlt_0_1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply H, le_plus_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => {H} H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have : Finite 0 = p_infty.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Lim_seq_geom_p k Hk1).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal.",
                        "VernacExtend",
                        "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_unique.",
                        "VernacExtend",
                        "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_ext with (fun n => / Rabs (a N) * (Rabs (a N) * k ^ n)).",
                        "VernacExtend",
                        "5714f816d30143103a38cfe7e7e46a89f4745401"
                    ]
                },
                {
                    "command": [
                        "move => n ; field ; by apply Rabs_no_R0.",
                        "VernacExtend",
                        "fadcb7a57cb80c649fa0fbbdd9a4c7fb34374058"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rmult_0_r (/Rabs (a N))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_scal_l _ _ (Finite 0)).",
                        "VernacExtend",
                        "635af26aa3a0610235b67fd00b69faa5f767deb5"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_le_le with (fun _ => 0) (fun n => Rabs (a (n + N)%nat)).",
                        "VernacExtend",
                        "065bd4ea3a3c1e97fb2d6c330d94ba6658793b70"
                    ]
                },
                {
                    "command": [
                        "move => n ; split.",
                        "VernacExtend",
                        "22de1c5faad21de60fd48f882c8175e01347018a"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply pow_le.",
                        "VernacExtend",
                        "cc44161251b27644855953f8a9cda06edcf33960"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, Rlt_trans with (1 := Rlt_0_1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Ha0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_series_geom",
            "line_nb": 873,
            "steps": [
                {
                    "command": [
                        "move => Hq.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun n => (1-q^(S n)) / (1-q)).",
                        "VernacExtend",
                        "1559919872e8d32b5580fa70ba27932a7c02aadd"
                    ]
                },
                {
                    "command": [
                        "move => n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_n_Reals; rewrite tech3.",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_eq.",
                        "VernacExtend",
                        "4d888fdf05ab3816c2e650b03b478096db638cf5"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := Hq).",
                        "VernacExtend",
                        "daacb4fbace6860b5332da2bff36d8b690bbcfee"
                    ]
                },
                {
                    "command": [
                        "apply Rle_abs.",
                        "VernacExtend",
                        "7222806352a7f01b48467f271bcdc35194fd1877"
                    ]
                },
                {
                    "command": [
                        "change (is_lim_seq (fun n : nat => (1 - q ^ S n) / (1 - q)) (/(1-q))).",
                        "VernacExtend",
                        "12ec51dad21b1510ea6cc07405a1b1fc6789fc41"
                    ]
                },
                {
                    "command": [
                        "replace ((/ (1 - q))) with (real (Rbar_mult (Rbar_minus 1 0) (/ (1 - q)))).",
                        "VernacExtend",
                        "6abdfb37d54c4b7e54ebd16d530a23d91debf258"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv.",
                        "VernacExtend",
                        "d9820df68a5475147f48d29acf89824b27f71597"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_scal_r (fun n : nat => (1 - q ^ S n)) (/ (1 - q)) (Rbar_minus 1 0)).",
                        "VernacExtend",
                        "672a596db44b27c23cb0ca84737b547c4da54324"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_minus'.",
                        "VernacExtend",
                        "d40b84f9d4c6cdd5a953bb10ef3fce2a83fa3569"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_incr_1 (fun n => q^n)).",
                        "VernacExtend",
                        "9b2806e3aeb17511119eb5ecf6a4e3804d8c4479"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_geom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_series_geom",
            "line_nb": 892,
            "steps": [
                {
                    "command": [
                        "move => Hq.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (/(1-q)).",
                        "VernacExtend",
                        "374750a87382504297811e637260c7be04927353"
                    ]
                },
                {
                    "command": [
                        "by apply is_series_geom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Series_geom",
            "line_nb": 897,
            "steps": [
                {
                    "command": [
                        "move => Hq.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_series_unique.",
                        "VernacExtend",
                        "660f382307748728e0c26076611874798d98173c"
                    ]
                },
                {
                    "command": [
                        "by apply is_series_geom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}