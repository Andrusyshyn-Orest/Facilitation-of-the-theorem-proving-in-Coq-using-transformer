{
    "filename": "theories/Seq_fct.v",
    "coq_project": "coquelicot",
    "vernac_cmds": [
        [
            "Require Import Reals Psatz.",
            "VernacRequire",
            "aa71e9955fdefb9d3b0e58d51406978b644e60c0"
        ],
        [
            "Require Import mathcomp.ssreflect.ssreflect Rbar.",
            "VernacRequire",
            "92be520c4d2442899ca0b4bb7d96e3a1c8432c51"
        ],
        [
            "Require Import Rcomplements.",
            "VernacRequire",
            "6092419151bd74aa7f83ac953c7ed042021bf7ad"
        ],
        [
            "Require Import Lim_seq Continuity Derive Series.",
            "VernacRequire",
            "8f2d08782ffa1496fa7c59d786d90f7682893e62"
        ],
        [
            "Require Import Lub Hierarchy.",
            "VernacRequire",
            "2f1783e800a0c52c9fc43994cdd474f737ec18ca"
        ],
        [
            "Open Scope R_scope.",
            "VernacOpenCloseScope",
            "e9e2b017da79049aff27c5418fe22258c29a75e7"
        ],
        [
            "Definition CVS_dom (fn : nat -> R -> R) (D : R -> Prop) := forall x : R, D x -> ex_finite_lim_seq (fun n => fn n x).",
            "VernacDefinition",
            "22f90dc4f15e978282badff47ed8fd0fed939b89"
        ],
        [
            "Definition CVU_dom (fn : nat -> R -> R) (D : R -> Prop) := forall eps : posreal, eventually (fun n => forall x : R, D x -> Rabs ((fn n x) - real (Lim_seq (fun n => fn n x))) < eps).",
            "VernacDefinition",
            "2b8035516a248566ccc399d857406ea959e286ef"
        ],
        [
            "Definition CVU_cauchy (fn : nat -> R -> R) (D : R -> Prop) := forall eps : posreal, exists N : nat, forall (n m : nat) (x : R), D x -> (N <= n)%nat -> (N <= m)%nat -> Rabs (fn n x - fn m x) < eps.",
            "VernacDefinition",
            "492e97fe1d46eca8d1abee5d7d27ec39a730bc3c"
        ],
        [
            "Lemma CVU_dom_Reals (fn : nat -> R -> R) (f : R -> R) (x : R) (r : posreal) : (forall y, (Boule x r y) -> (Finite (f y)) = Lim_seq (fun n => fn n y)) -> (CVU fn f x r <-> CVU_dom fn (Boule x r)).",
            "VernacStartTheoremProof",
            "cd91a9c6696ebbed5555d8bd6e3fcbdc71506b91"
        ],
        [
            "split ; move => Hcvu.",
            "VernacExtend",
            "762ea52ce3564fcd0b41ae75027c378295824fae"
        ],
        [
            "have Hf : forall y, Boule x r y -> is_lim_seq (fun n => fn n y) (f y).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "move => [e He] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hcvu e He) => {Hcvu} N Hcvu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Ropp_minus_distr' Rabs_Ropp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hcvu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => [e He] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hcvu e He) => {Hcvu} N Hcvu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (is_lim_seq_unique (fun n0 : nat => fn n0 y) _ (Hf y Hy)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite -/(Rminus (fn n y) (f y)) -Ropp_minus_distr' Rabs_Ropp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hcvu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => e He ; set eps := mkposreal e He.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "case: (Hcvu eps) => {Hcvu} N Hcvu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n y Hn Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: (Hcvu n Hn y Hy).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -(H y Hy) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -Ropp_minus_distr' Rabs_Ropp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CVU_CVS_dom (fn : nat -> R -> R) (D : R -> Prop) : CVU_dom fn D -> CVS_dom fn D.",
            "VernacStartTheoremProof",
            "f8179bbed534db3309cc68440f02f8917bc5292c"
        ],
        [
            "move => Hcvu x Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (real (Lim_seq (fun n => fn n x))).",
            "VernacExtend",
            "f9cf0c269036dfe9bb8e9c991138adfa0d4f7f13"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "case: (Hcvu eps) => {Hcvu} N Hcvu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Hcvu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CVU_dom_cauchy (fn : nat -> R -> R) (D : R -> Prop) : CVU_dom fn D <-> CVU_cauchy fn D.",
            "VernacStartTheoremProof",
            "c212ca7d40c0eefc3695a10ef91fe39c3a79248e"
        ],
        [
            "split => H eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (H (pos_div_2 eps)) => {H} N /= H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n m x Hx Hn Hm.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (double_var eps).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (fn n x - fn m x) with ((fn n x - real (Lim_seq (fun n0 : nat => fn n0 x))) - (fn m x - real (Lim_seq (fun n0 : nat => fn n0 x)))) by ring.",
            "VernacExtend",
            "9a6834f105f3de39f214a1cfca9ed32035323c03"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _) ; rewrite Rabs_Ropp.",
            "VernacExtend",
            "a639791b2f269c8e4db3b22779f3210f9c22238c"
        ],
        [
            "apply Rplus_lt_compat ; by apply H.",
            "VernacExtend",
            "b3fdf994ea9deeef54321a210af276ae83c6c412"
        ],
        [
            "rewrite /Lim_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (H (pos_div_2 eps)) => {H} N /= H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /LimSup_seq ; case: ex_LimSup_seq ; case => [ls | | ] /= Hls.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "rewrite /LimInf_seq ; case: ex_LimInf_seq ; case => [li | | ] /= Hli.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "replace (fn n x - (ls + li) / 2) with (((fn n x - ls) + (fn n x - li))/2) by field.",
            "VernacExtend",
            "58a56a6984e1522c1ed418187d75cbd9cc38a8c6"
        ],
        [
            "rewrite Rabs_div ; [ | by apply Rgt_not_eq, Rlt_R0_R2].",
            "VernacExtend",
            "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
        ],
        [
            "rewrite (Rabs_pos_eq 2) ; [ | by apply Rlt_le, Rlt_R0_R2].",
            "VernacExtend",
            "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
        ],
        [
            "rewrite Rlt_div_l ; [ | by apply Rlt_R0_R2].",
            "VernacExtend",
            "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "replace (eps * 2) with (eps + eps) by ring.",
            "VernacExtend",
            "bd7dbe85b75d6caf7f5278e49c653a1d90dd1d9c"
        ],
        [
            "apply Rplus_lt_compat ; apply Rabs_lt_between'.",
            "VernacExtend",
            "c684f79354be7382ca7c982f9b4203217c74e274"
        ],
        [
            "case: (Hls (pos_div_2 eps)) => {Hls Hli} /= H0 [N0 H1] ; split.",
            "VernacExtend",
            "88c25af51ded328891892c53c941b62f68d72bd0"
        ],
        [
            "case: (H0 N) => {H0} m [Hm H0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rlt_trans with (fn m x - eps/2).",
            "VernacExtend",
            "8adf77e9589acd9db97799cc5ee6045ab922c035"
        ],
        [
            "replace (ls - eps) with ((ls - eps / 2) - eps/2) by field.",
            "VernacExtend",
            "437c32e8efa5f6a58473e4490a9c099c181be50b"
        ],
        [
            "by apply Rplus_lt_compat_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (fn n x) with (eps/2 + (fn n x - eps/2)) by ring.",
            "VernacExtend",
            "5b487e9d5dd19bc5b8a668eeed65b75c61a3d375"
        ],
        [
            "replace (fn m x - eps / 2) with ((fn m x - fn n x) + (fn n x - eps/2)) by ring.",
            "VernacExtend",
            "4ae66177aed6d9f7a9a12e9c0b5ac93d2f435168"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "apply Rle_lt_trans with (1 := Rle_abs _) ; by apply H.",
            "VernacExtend",
            "b973a9c86048ed5ba284ce789fe1d34c8096f3b6"
        ],
        [
            "apply Rlt_trans with (fn (n+N0)%nat x + eps/2).",
            "VernacExtend",
            "f4eacfe7970fcfe6bcd1a6f761b70504733b1631"
        ],
        [
            "replace (fn n x) with (fn (n + N0)%nat x + (fn n x - fn (n+N0)%nat x)) by ring.",
            "VernacExtend",
            "b8534a9d68182b7182c8b8cef35240306909ebbd"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Rle_lt_trans with (1 := Rle_abs _).",
            "VernacExtend",
            "135a8d900205d7b612754e3cd7bd2bca409d80e3"
        ],
        [
            "apply H ; by intuition.",
            "VernacExtend",
            "34fd41a308b5b35ebaca836e1d65b2bf94b36c8e"
        ],
        [
            "replace (ls + eps) with ((ls + eps/2) + eps/2) by field.",
            "VernacExtend",
            "692a425a6a7560111c8bd7760b13ca7185ed27ee"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "apply H1 ; by intuition.",
            "VernacExtend",
            "aef493c7aee2967137e61c0d1793668535a421cd"
        ],
        [
            "case: (Hli (pos_div_2 eps)) => {Hls Hli} /= H0 [N0 H1] ; split.",
            "VernacExtend",
            "88c25af51ded328891892c53c941b62f68d72bd0"
        ],
        [
            "apply Rlt_trans with (fn (n+N0)%nat x - eps/2).",
            "VernacExtend",
            "39399f1ee5d908fd89f8b75f24fa7a2201ce3dfc"
        ],
        [
            "replace (li - eps) with ((li - eps/2) - eps/2) by field.",
            "VernacExtend",
            "efdbc5e3f9994409af07b76cf14b64229e9fe6ea"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "apply H1 ; by intuition.",
            "VernacExtend",
            "aef493c7aee2967137e61c0d1793668535a421cd"
        ],
        [
            "replace (fn n x) with (eps/2 + (fn n x - eps/2)) by ring.",
            "VernacExtend",
            "5b487e9d5dd19bc5b8a668eeed65b75c61a3d375"
        ],
        [
            "replace (fn (n + N0)%nat x - eps / 2) with ((fn (n + N0)%nat x - fn n x) + (fn n x - eps/2)) by ring.",
            "VernacExtend",
            "1d3bed02c9476f93b6e53655ef59d4fb09e69e52"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "apply Rle_lt_trans with (1 := Rle_abs _).",
            "VernacExtend",
            "135a8d900205d7b612754e3cd7bd2bca409d80e3"
        ],
        [
            "apply H ; by intuition.",
            "VernacExtend",
            "34fd41a308b5b35ebaca836e1d65b2bf94b36c8e"
        ],
        [
            "case: (H0 N) => {H0} m [Hm H0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rlt_trans with (fn m x + eps/2).",
            "VernacExtend",
            "146e4b0e330a10fc491ceb5c305198f63d6d607c"
        ],
        [
            "replace (fn n x) with (fn m x + (fn n x - fn m x)) by ring.",
            "VernacExtend",
            "6d4ecb42ca45631a6aebc910c57b8e9eaf0e86c5"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Rle_lt_trans with (1 := Rle_abs _) ; by apply H.",
            "VernacExtend",
            "b973a9c86048ed5ba284ce789fe1d34c8096f3b6"
        ],
        [
            "replace (li + eps) with ((li + eps / 2) + eps/2) by field.",
            "VernacExtend",
            "aa9e049617c1d75b701d6ec4b53204b73b6e342e"
        ],
        [
            "by apply Rplus_lt_compat_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Hli (fn n x + eps / 2)) => {Hls Hli} N0 H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (H0 _ (le_plus_r N N0)) => {H0} H0 ; contradict H0.",
            "VernacExtend",
            "118b1e522ae6718127b6575b456e11661e537258"
        ],
        [
            "apply Rle_not_lt, Rlt_le.",
            "VernacExtend",
            "947b2491ad420e5f2f06b8e61d73f131b606c716"
        ],
        [
            "replace (fn (N + N0)%nat x) with (fn n x + (fn (N + N0)%nat x - fn n x)) by ring.",
            "VernacExtend",
            "f517262060e34835e20e17d6194815832c7df05b"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Rle_lt_trans with (1 := Rle_abs _).",
            "VernacExtend",
            "135a8d900205d7b612754e3cd7bd2bca409d80e3"
        ],
        [
            "apply H ; by intuition.",
            "VernacExtend",
            "34fd41a308b5b35ebaca836e1d65b2bf94b36c8e"
        ],
        [
            "case: (Hli (fn n x - eps / 2) N) => {Hls Hli} m [Hm H0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict H0.",
            "VernacExtend",
            "e9276d92c17ea182f1ef13aa74464b33eea923d9"
        ],
        [
            "apply Rle_not_lt, Rlt_le.",
            "VernacExtend",
            "947b2491ad420e5f2f06b8e61d73f131b606c716"
        ],
        [
            "replace (fn m x) with (eps/2 + (fn m x - eps/2)) by ring.",
            "VernacExtend",
            "7a9e3c62abc27972f55d767513adf82607bdb6c5"
        ],
        [
            "replace (fn n x - eps / 2) with ((fn n x - fn m x) + (fn m x - eps/2)) by ring.",
            "VernacExtend",
            "2d2553be4ecae90eda5e6acdb235fb42601d02db"
        ],
        [
            "apply Rplus_lt_compat_r, Rle_lt_trans with (1 := Rle_abs _) ; by apply H.",
            "VernacExtend",
            "9d2e8b0401438956b4acaf5169c99bb3701d0c45"
        ],
        [
            "case: (Hls (fn n x + eps / 2) N) => {Hls} m [Hm H0].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict H0.",
            "VernacExtend",
            "e9276d92c17ea182f1ef13aa74464b33eea923d9"
        ],
        [
            "apply Rle_not_lt, Rlt_le.",
            "VernacExtend",
            "947b2491ad420e5f2f06b8e61d73f131b606c716"
        ],
        [
            "replace (fn m x) with (fn n x + (fn m x - fn n x)) by ring.",
            "VernacExtend",
            "0e52442f073c44816425d2ac00ca9e1fb8c97fc1"
        ],
        [
            "apply Rplus_lt_compat_l, Rle_lt_trans with (1 := Rle_abs _) ; by apply H.",
            "VernacExtend",
            "e2609e9daa2171d4472e1820c57eb84ef5dd4e63"
        ],
        [
            "case: (Hls (fn n x - eps / 2)) => {Hls} N0 H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (H0 _ (le_plus_r N N0)) => {H0} H0 ; contradict H0.",
            "VernacExtend",
            "118b1e522ae6718127b6575b456e11661e537258"
        ],
        [
            "apply Rle_not_lt, Rlt_le.",
            "VernacExtend",
            "947b2491ad420e5f2f06b8e61d73f131b606c716"
        ],
        [
            "replace (fn (N + N0)%nat x) with (eps/2 + (fn (N + N0)%nat x - eps/2)) by ring.",
            "VernacExtend",
            "ad1862ea22aa1dc344a6d9e42fd4ba840deb23df"
        ],
        [
            "replace (fn n x - eps / 2) with ((fn n x - fn (N+N0)%nat x) + (fn (N+N0)%nat x - eps/2)) by ring.",
            "VernacExtend",
            "bccac8b71fd774d9bc7423628cd4b6422ff9c7ec"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "apply Rle_lt_trans with (1 := Rle_abs _).",
            "VernacExtend",
            "135a8d900205d7b612754e3cd7bd2bca409d80e3"
        ],
        [
            "apply H ; by intuition.",
            "VernacExtend",
            "34fd41a308b5b35ebaca836e1d65b2bf94b36c8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CVU_dom_include (fn : nat -> R -> R) (D1 D2 : R -> Prop) : (forall y, D2 y -> D1 y) -> CVU_dom fn D1 -> CVU_dom fn D2.",
            "VernacStartTheoremProof",
            "c66e66bff0221d0006f506c4216505f77ec48f8c"
        ],
        [
            "move => H H1 eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (H1 eps) => {H1} N H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "exact Hn.",
            "VernacExtend",
            "086d6e64eafd90345d404c3eab0e41622b5023c7"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_connected (D : R -> Prop) := forall a b x, D a -> D b -> a <= x <= b -> D x.",
            "VernacDefinition",
            "765bc22c9b165ac4953358b13fd50a8d8af5427e"
        ],
        [
            "Lemma CVU_limits_open (fn : nat -> R -> R) (D : R -> Prop) : open D -> CVU_dom fn D -> (forall x n, D x -> ex_finite_lim (fn n) x) -> forall x, D x -> ex_finite_lim_seq (fun n => real (Lim (fn n) x)) /\\ ex_finite_lim (fun y => real (Lim_seq (fun n => fn n y))) x /\\ real (Lim_seq (fun n => real (Lim (fn n) x))) = real (Lim (fun y => real (Lim_seq (fun n => fn n y))) x).",
            "VernacStartTheoremProof",
            "9fda6ca979829a4eccbf8369c3b0892ed3d57ee9"
        ],
        [
            "move => Ho Hfn Hex x Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have H : ex_finite_lim_seq (fun n : nat => real (Lim (fn n) x)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply CVU_dom_cauchy in Hfn.",
            "VernacExtend",
            "1183688c5260a0e791840d7220cf3bcc0a4a40c4"
        ],
        [
            "apply ex_lim_seq_cauchy_corr => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Hfn (pos_div_2 eps)) => {Hfn} /= N Hfn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n m Hn Hm.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Hex x n Hx) => ln Hex_n ; rewrite (is_lim_unique _ _ _ Hex_n).",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: (Hex x m Hx) => {Hex} lm Hex_m ; rewrite (is_lim_unique _ _ _ Hex_m).",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "apply is_lim_spec in Hex_n.",
            "VernacExtend",
            "173391af676924b4f4bb42b10a1c7294c1b3d299"
        ],
        [
            "apply is_lim_spec in Hex_m.",
            "VernacExtend",
            "4ef473a240887303451fc63e01d007eaf68e8fc5"
        ],
        [
            "case: (Hex_n (pos_div_2 (pos_div_2 eps))) => {Hex_n} /= dn Hex_n.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Hex_m (pos_div_2 (pos_div_2 eps))) => {Hex_m} /= dm Hex_m.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Ho x Hx) => {Ho} d0 Ho.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "set y := x + Rmin (Rmin dn dm) d0 / 2.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have Hd : 0 < Rmin (Rmin dn dm) d0 / 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "apply Rmin_case ; [ | by apply d0].",
            "VernacExtend",
            "cc49ee65df2ce00340433abdbb22713454b7fb2d"
        ],
        [
            "apply Rmin_case ; [ by apply dn | by apply dm].",
            "VernacExtend",
            "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
        ],
        [
            "exact: Rlt_R0_R2.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have Hy : Rabs (y - x) < d0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /y ; ring_simplify ((x + Rmin (Rmin dn dm) d0 / 2) - x).",
            "VernacExtend",
            "e658f630193b4d00129d641036c82dd9479aa178"
        ],
        [
            "rewrite (Rabs_pos_eq _ (Rlt_le _ _ Hd)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "generalize (Rmin_r (Rmin dn dm) d0).",
            "VernacExtend",
            "75d1c2d5aa239915169c49a9c2cfa5ca0f09a892"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "move : (Ho y Hy) => {Ho Hy} Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace (ln - lm) with (- (fn n y - ln) + (fn m y - lm) + (fn n y - fn m y)) by ring.",
            "VernacExtend",
            "9af514d4ad4268d5cebca6de334a4ea0b886ec01"
        ],
        [
            "rewrite (double_var eps) ; apply Rle_lt_trans with (1 := Rabs_triang _ _), Rplus_lt_compat.",
            "VernacExtend",
            "86d2d02d04ebda6e19abd54137b6ae4e3462b6ab"
        ],
        [
            "rewrite (double_var (eps/2)) ; apply Rle_lt_trans with (1 := Rabs_triang _ _), Rplus_lt_compat.",
            "VernacExtend",
            "86d2d02d04ebda6e19abd54137b6ae4e3462b6ab"
        ],
        [
            "rewrite Rabs_Ropp ; apply Hex_n.",
            "VernacExtend",
            "a43e388b3f8527646a168a9ab6f4de1cc2f17d1b"
        ],
        [
            "rewrite /y /ball /= /AbsRing_ball /= /minus /plus /opp /abs /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify ((x + Rmin (Rmin dn dm) d0 / 2) + - x).",
            "VernacExtend",
            "44adbd53cb3fdc5d549a0716f695070d16ec6232"
        ],
        [
            "rewrite (Rabs_pos_eq _ (Rlt_le _ _ Hd)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "generalize (Rmin_l (Rmin dn dm) d0) (Rmin_l dn dm).",
            "VernacExtend",
            "f00a974ea94fec331d8170533f6d3688427308fd"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "apply Rgt_not_eq, Rlt_gt, Rminus_lt_0.",
            "VernacExtend",
            "22c20e28969426e95bad8cb0de431b3b31dd0189"
        ],
        [
            "rewrite /y ; by ring_simplify ((x + Rmin (Rmin dn dm) d0 / 2) - x).",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply Hex_m.",
            "VernacExtend",
            "4c1158ef2f75338f6fe5ec4b21f44e62b3a2cefb"
        ],
        [
            "rewrite /y /ball /= /AbsRing_ball /= /minus /plus /opp /abs /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify ((x + Rmin (Rmin dn dm) d0 / 2) + - x).",
            "VernacExtend",
            "44adbd53cb3fdc5d549a0716f695070d16ec6232"
        ],
        [
            "rewrite (Rabs_pos_eq _ (Rlt_le _ _ Hd)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "generalize (Rmin_l (Rmin dn dm) d0) (Rmin_r dn dm).",
            "VernacExtend",
            "205678a6d7f5a6b5209e3c4adaf0f3c711881a85"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "apply Rgt_not_eq, Rlt_gt, Rminus_lt_0.",
            "VernacExtend",
            "22c20e28969426e95bad8cb0de431b3b31dd0189"
        ],
        [
            "rewrite /y ; by ring_simplify ((x + Rmin (Rmin dn dm) d0 / 2) - x).",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by apply Hfn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact: H.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Lim_seq_correct' in H.",
            "VernacExtend",
            "e10a8f5771016587c99cde2d7d7ba1c2d4f848e1"
        ],
        [
            "move: (real (Lim_seq (fun n : nat => real (Lim (fn n) x)))) H => l H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have H0 : is_lim (fun y : R => real (Lim_seq (fun n : nat => fn n y))) x l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_seq_spec in H.",
            "VernacExtend",
            "98ca61a735cdd6a0c67afeba86446058c65f378f"
        ],
        [
            "case: (Hfn (pos_div_2 (pos_div_2 eps))) => {Hfn} /= n1 Hfn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (H (pos_div_2 (pos_div_2 eps))) => {H} /= n2 H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "set n := (n1 + n2)%nat.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "move: (fun y Hy => Hfn n (le_plus_l _ _) y Hy) => {Hfn} Hfn.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (H n (le_plus_r _ _)) => {H} H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (Hex x n Hx) => {Hex} Hex.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Lim_correct' in Hex.",
            "VernacExtend",
            "e560a7bd0970a790fdc19fbaef7a116c4c97834a"
        ],
        [
            "apply is_lim_spec in Hex.",
            "VernacExtend",
            "9363dd3ab37c0b2665ef5f9fbff93169f04d4022"
        ],
        [
            "case: (Hex (pos_div_2 eps)) => {Hex} /= d1 Hex.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Ho x Hx) => {Ho} /= d0 Ho.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have Hd : 0 < Rmin d0 d1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rmin_case ; [by apply d0 | by apply d1].",
            "VernacExtend",
            "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
        ],
        [
            "exists (mkposreal _ Hd) => /= y Hy Hxy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (real (Lim_seq (fun n0 : nat => fn n0 y)) - l) with ((real (Lim (fn n) x) - l) - (fn n y - real (Lim_seq (fun n : nat => fn n y))) + (fn n y - real (Lim (fn n) x))) by ring.",
            "VernacExtend",
            "158f8908a00310ecc0d2c5b326269288adb30235"
        ],
        [
            "rewrite (double_var eps) ; apply Rle_lt_trans with (1 := Rabs_triang _ _), Rplus_lt_compat.",
            "VernacExtend",
            "86d2d02d04ebda6e19abd54137b6ae4e3462b6ab"
        ],
        [
            "rewrite (double_var (eps/2)) ; apply Rle_lt_trans with (1 := Rabs_triang _ _), Rplus_lt_compat.",
            "VernacExtend",
            "86d2d02d04ebda6e19abd54137b6ae4e3462b6ab"
        ],
        [
            "exact: H.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite Rabs_Ropp ; apply Hfn.",
            "VernacExtend",
            "44fe2e4642533f9ba5739a1a6f9af305a1bb832a"
        ],
        [
            "by apply Ho, Rlt_le_trans with (1 := Hy), Rmin_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hex.",
            "VernacExtend",
            "0626b143f310ba29c3689980df03ba1efdab98c5"
        ],
        [
            "by apply Rlt_le_trans with (1 := Hy), Rmin_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: Hxy.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by exists l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace l with (real l) by auto.",
            "VernacExtend",
            "86f98225f6d2e8f866ff6076f31a2c91ae379e9a"
        ],
        [
            "by apply sym_eq, (f_equal real), is_lim_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CVU_cont_open (fn : nat -> R -> R) (D : R -> Prop) : open D -> CVU_dom fn D -> (forall n, forall x, D x -> continuity_pt (fn n) x) -> forall x, D x -> continuity_pt (fun y => real (Lim_seq (fun n => fn n y))) x.",
            "VernacStartTheoremProof",
            "487d16f9840a4f89584661d5d612de97affcf27b"
        ],
        [
            "move => Ho Hfn Hc x Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (fun H => CVU_limits_open fn D Ho Hfn H x Hx) => [{x Hx} x n Hx | Hex_s [Hex_f Heq]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (fn n x).",
            "VernacExtend",
            "659181ac409112ecc54f9e28cd09922263be250b"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "case: (Hc n x Hx eps (cond_pos eps)) => {Hc} d [Hd Hc].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (mkposreal d Hd) => /= y Hy Hxy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (Hc y).",
            "VernacExtend",
            "33eb163adad3f0b4eaf08af6f53d2f3fe948e7e0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact: I.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply sym_not_eq, Hxy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: Hy.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Lim_correct' in Hex_f.",
            "VernacExtend",
            "52cb47afb652917d39b4190a136a6aa0e84f937f"
        ],
        [
            "rewrite -Heq in Hex_f => {Heq}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (Lim_seq (fun n : nat => real (Lim (fn n) x))) with (Lim_seq (fun n : nat => (fn n) x)) in Hex_f.",
            "VernacExtend",
            "1c51057fb66c3b9512d164584ce22ea7cdbbb58b"
        ],
        [
            "move => e He.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_spec in Hex_f.",
            "VernacExtend",
            "b4e7557822fff304c286cdc94cd051d6aa2b48f0"
        ],
        [
            "case: (Hex_f (mkposreal e He)) => {Hex_f} /= delta Hex_f.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists delta ; split => [ | y [[_ Hxy] Hy]].",
            "VernacExtend",
            "a38e9d7bf18a3a116c39588df52dcd5743c7d447"
        ],
        [
            "by apply delta.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hex_f.",
            "VernacExtend",
            "c16ffdb43eb3b763693547f3ab7645e77759b572"
        ],
        [
            "exact: Hy.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply sym_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Lim_seq_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (fn n x) with (real (fn n x)) by auto.",
            "VernacExtend",
            "aff37ab73a1615543f926b1864a7a9ec5c24796a"
        ],
        [
            "apply sym_eq, f_equal, is_lim_unique.",
            "VernacExtend",
            "9f21e9fb5f04ee133af541d009dba531c934be02"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hc n x Hx eps (cond_pos eps)) => {Hc} d [Hd Hc].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (mkposreal d Hd) => /= y Hy Hxy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (Hc y).",
            "VernacExtend",
            "33eb163adad3f0b4eaf08af6f53d2f3fe948e7e0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact: I.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply sym_not_eq, Hxy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: Hy.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CVU_Derive (fn : nat -> R -> R) (D : R -> Prop) : open D -> is_connected D -> CVU_dom fn D -> (forall n x, D x -> ex_derive (fn n) x) -> (forall n x, D x -> continuity_pt (Derive (fn n)) x) -> CVU_dom (fun n x => Derive (fn n) x) D -> (forall x , D x -> (is_derive (fun y => real (Lim_seq (fun n => fn n y))) x (real (Lim_seq (fun n => Derive (fn n) x))))).",
            "VernacStartTheoremProof",
            "0814fc3788485ada013f794ad081444a8cb64e6c"
        ],
        [
            "move => Ho Hc Hfn Edn Cdn Hdn.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "set rn := fun x n h => match (Req_EM_T h 0) with | left _ => Derive (fn n) x | right _ => (fn n (x+h) - fn n x)/h end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "assert (Ho' : forall x : R, open (fun h : R => D (x + h))).",
            "VernacExtend",
            "3c1dacffd7f5d495eea91305c215660ed6bf3db8"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply open_comp with (2 := Ho).",
            "VernacExtend",
            "04dcc66623cc91e97b2d400dc3febb3f4bfa4933"
        ],
        [
            "intros t _.",
            "VernacExtend",
            "d1fd05346a070a90b76a5589b4607b767bbbeb6f"
        ],
        [
            "eapply (filterlim_comp_2 (F := locally t)).",
            "VernacExtend",
            "0293a91c0a63507f8b25985c56758d35dfa52ecf"
        ],
        [
            "apply filterlim_const.",
            "VernacExtend",
            "ff971edf84d1cf6e134869f4729acc40969816e1"
        ],
        [
            "apply filterlim_id.",
            "VernacExtend",
            "0c9885f23d2ca915379801b6ded9080d6c98b8f7"
        ],
        [
            "apply: filterlim_plus.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have Crn : forall x, D x -> forall n h, D (x+h) -> is_lim (rn x n) h (rn x n h).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => x Hx n h Hh.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite {2}/rn ; case: (Req_EM_T h 0) => [-> | Hh0].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "cut (locally 0 (fun y : R => y <> 0 -> Rabs ((fn n (x + y) - fn n x) / y - Derive (fn n) x) < eps)).",
            "VernacExtend",
            "05bf050ed871bae2b1bedeef60eebc708f38fbf4"
        ],
        [
            "case => d H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists d => y Hy Hxy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /rn ; case: Req_EM_T => // _ ; by apply H.",
            "VernacExtend",
            "edc181ae1523612867809723d78a66d7ba4793ea"
        ],
        [
            "move: (Edn n x Hx) => {Edn} Edn.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Derive_correct in Edn.",
            "VernacExtend",
            "271713f15915e7540d8963f6bcfa1fd75db41bff"
        ],
        [
            "apply is_derive_Reals in Edn.",
            "VernacExtend",
            "59854be39b25c27eb7c116df8bc780f538178f61"
        ],
        [
            "case: (Edn eps (cond_pos eps)) => {Edn} delta Edn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists delta => y Hy Hxy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -/(Rminus _ _) Rminus_0_r in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Edn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have H : continuity_pt (fun h => ((fn n (x + h) - fn n x) / h)) h.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply derivable_continuous_pt.",
            "VernacExtend",
            "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
        ],
        [
            "apply derivable_pt_div.",
            "VernacExtend",
            "6a8efcd04f4e3e0a02f80beb83529441f6dfef12"
        ],
        [
            "apply derivable_pt_minus.",
            "VernacExtend",
            "ba0f12b0c6b1d9f0442014804620576081f54651"
        ],
        [
            "apply derivable_pt_comp.",
            "VernacExtend",
            "d38fa39fe57aaaad0cb3641eb177273295447a4b"
        ],
        [
            "apply (derivable_pt_plus (fun _ => x) (fun h => h) h).",
            "VernacExtend",
            "d2d4487a1f7362a01a957e9939ae8ea7e31276dd"
        ],
        [
            "exact: derivable_pt_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: derivable_pt_id.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exists (Derive (fn n) (x + h)) ; by apply is_derive_Reals, Derive_correct, Edn.",
            "VernacExtend",
            "285dbd206bb30cd060d93bb1fc4df7426917ec7b"
        ],
        [
            "exact: derivable_pt_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: derivable_pt_id.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: Hh0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (H eps (cond_pos eps)) => {H} d [Hd H].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have Hd0 : 0 < Rmin d (Rabs h).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rmin_case.",
            "VernacExtend",
            "06bee284b3ab9229517272cc3728705bdc7b95ba"
        ],
        [
            "exact: Hd.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply Rabs_pos_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (mkposreal _ Hd0) => /= y Hy Hhy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /rn ; case: Req_EM_T => /= Hy'.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "contradict Hy.",
            "VernacExtend",
            "5378912ae1f409840716e13b5c13ff1658002182"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "rewrite /abs /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Hy' -/(Rminus _ _) Rminus_0_l Rabs_Ropp ; by apply Rmin_r.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply (H y) ; split.",
            "VernacExtend",
            "c4615474c2847a9a1251a7645414ed4a115e8ea7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact: I.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply sym_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le_trans with (1 := Hy), Rmin_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Hrn : forall x, D x -> CVU_dom (rn x) (fun h : R => D (x + h)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => x Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply CVU_dom_cauchy => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply CVU_dom_cauchy in Hdn.",
            "VernacExtend",
            "fac4d55b532d640f1cc3493d83a466c8351f6a2e"
        ],
        [
            "case: (Hdn eps) => {Hdn} /= N Hdn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n m h Hh Hn Hm.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /rn ; case: Req_EM_T => Hh0.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "exact: (Hdn n m x Hx Hn Hm).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "replace ((fn n (x + h) - fn n x) / h - (fn m (x + h) - fn m x) / h) with (((fn n (x + h) - fn m (x + h)) - (fn n x - fn m x))/h) by (field ; auto).",
            "VernacExtend",
            "06065bb84189c838a844e9d1322ddbb2ede2d45a"
        ],
        [
            "case: (MVT_gen (fun x => (fn n x - fn m x)) x (x+h) (Derive (fun x => fn n x - fn m x))) => [y Hy | y Hy | z [Hz ->]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Derive_correct.",
            "VernacExtend",
            "054d04eb27571fc0e213d6f8fb7c853041966304"
        ],
        [
            "apply: ex_derive_minus ; apply Edn, (Hc (Rmin x (x + h)) (Rmax x (x + h))).",
            "VernacExtend",
            "b860ee6ec9682191de7729ee7f10827978845b43"
        ],
        [
            "apply Rmin_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
        ],
        [
            "apply Rmax_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "6923f4f19fb55f5fa4ac8798bea073956778bb01"
        ],
        [
            "split ; apply Rlt_le ; by apply Hy.",
            "VernacExtend",
            "96d22a79845eec25d3d412d4f7328bceb2a70c60"
        ],
        [
            "apply Rmin_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
        ],
        [
            "apply Rmax_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "6923f4f19fb55f5fa4ac8798bea073956778bb01"
        ],
        [
            "split ; apply Rlt_le ; by apply Hy.",
            "VernacExtend",
            "96d22a79845eec25d3d412d4f7328bceb2a70c60"
        ],
        [
            "apply derivable_continuous_pt, derivable_pt_minus.",
            "VernacExtend",
            "68a2f3ac80978d0497aa317a99aa77beb94724a3"
        ],
        [
            "exists (Derive (fn n) y) ; apply is_derive_Reals, Derive_correct, Edn, (Hc (Rmin x (x + h)) (Rmax x (x + h))).",
            "VernacExtend",
            "5902eaeae0a4acab2327d4f63b6325de05ec9d8c"
        ],
        [
            "apply Rmin_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
        ],
        [
            "apply Rmax_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "6923f4f19fb55f5fa4ac8798bea073956778bb01"
        ],
        [
            "by apply Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (Derive (fn m) y) ; apply is_derive_Reals, Derive_correct, Edn, (Hc (Rmin x (x + h)) (Rmax x (x + h))).",
            "VernacExtend",
            "14bb4e1cd43f6d167718075b6b433f82e5d291b7"
        ],
        [
            "apply Rmin_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
        ],
        [
            "apply Rmax_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "6923f4f19fb55f5fa4ac8798bea073956778bb01"
        ],
        [
            "by apply Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (Derive (fun x1 : R => fn n x1 - fn m x1) z * (x + h - x) / h) with (Derive (fun x1 : R => fn n x1 - fn m x1) z) by (field ; auto).",
            "VernacExtend",
            "3b336b8a2767c3bdaa8c4cf175a5f3825578b920"
        ],
        [
            "rewrite Derive_minus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (Hdn n m z).",
            "VernacExtend",
            "e71fc8a60e3c5694ed7ae05a2164490f3fc9d455"
        ],
        [
            "apply (Hc (Rmin x (x + h)) (Rmax x (x + h))).",
            "VernacExtend",
            "18439b44062ba897476dcca6cb82f5f6d1ec6296"
        ],
        [
            "apply Rmin_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
        ],
        [
            "apply Rmax_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "6923f4f19fb55f5fa4ac8798bea073956778bb01"
        ],
        [
            "by apply Hz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: Hn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: Hm.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Edn, (Hc (Rmin x (x + h)) (Rmax x (x + h))).",
            "VernacExtend",
            "fc691e9f985a448322932bc5d1a657586e3a6220"
        ],
        [
            "apply Rmin_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
        ],
        [
            "apply Rmax_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "6923f4f19fb55f5fa4ac8798bea073956778bb01"
        ],
        [
            "by apply Hz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Edn, (Hc (Rmin x (x + h)) (Rmax x (x + h))).",
            "VernacExtend",
            "fc691e9f985a448322932bc5d1a657586e3a6220"
        ],
        [
            "apply Rmin_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
        ],
        [
            "apply Rmax_case ; [by apply Hx | by apply Hh].",
            "VernacExtend",
            "6923f4f19fb55f5fa4ac8798bea073956778bb01"
        ],
        [
            "by apply Hz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Lrn : forall x, D x -> (forall (y : R) (n : nat), (fun h : R => D (x + h)) y -> ex_finite_lim (rn x n) y).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "intros ; exists (rn x n y) ; by intuition.",
            "VernacExtend",
            "9d62fac5e613d8506283c03d8c711699a6b88439"
        ],
        [
            "move => x Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (CVU_limits_open (rn x) _ (Ho' x) (Hrn x Hx) (Lrn x Hx) 0) => [ | H [H0 H1]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite Rplus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : ex_derive (fun y : R => real (Lim_seq (fun n : nat => fn n y))) x /\\ Derive (fun y : R => real (Lim_seq (fun n : nat => fn n y))) x = real (Lim_seq (fun n : nat => Derive (fn n) x)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "case: H0 => df H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists df.",
            "VernacExtend",
            "cc464af790ae9c5d446069ac5fe6a2e3113315ab"
        ],
        [
            "apply is_derive_Reals => e He.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply is_lim_spec in H0.",
            "VernacExtend",
            "440a922d2dd99f4f82a10fc877a87b7bf1cb2f18"
        ],
        [
            "case: (H0 (mkposreal e He)) => {H0} /= delta H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "destruct (Ho x Hx) as [dx Hd].",
            "VernacExtend",
            "f4e36520f8a764dc338c076c26fd616825304390"
        ],
        [
            "have H2 : 0 < Rmin delta dx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rmin_case ; [by apply delta | by apply dx].",
            "VernacExtend",
            "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
        ],
        [
            "exists (mkposreal _ H2) => /= h Hh0 Hh.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (real (Lim_seq (fun n : nat => fn n (x + h))) - real (Lim_seq (fun n : nat => fn n x))) with (real (Rbar_minus (Lim_seq (fun n : nat => fn n (x + h))) (Lim_seq (fun n : nat => fn n x)))).",
            "VernacExtend",
            "bd6b4eeecd18ec56c7f097b56c900bc32f6d1262"
        ],
        [
            "rewrite -Lim_seq_minus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (real (Lim_seq (fun n : nat => fn n (x + h) - fn n x)) / h) with (real (Rbar_mult (/h) (Lim_seq (fun n : nat => fn n (x + h) - fn n x)))).",
            "VernacExtend",
            "d16f05edd5424ba4a97a687a7a65e651d21b97fd"
        ],
        [
            "rewrite -Lim_seq_scal_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (Lim_seq (fun n : nat => / h * (fn n (x + h) - fn n x))) with (Lim_seq (fun n : nat => rn x n h)).",
            "VernacExtend",
            "fc5919a7dfc49e73719456da3ec28da8b9516cc4"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -/(Rminus _ _) Rminus_0_r ; apply Rlt_le_trans with (1 := Hh), Rmin_l.",
            "VernacExtend",
            "d552751d2dc8d58cf833441fd9cc59b33d06aceb"
        ],
        [
            "exact: Hh0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Lim_seq_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /rn /Rdiv ; case: Req_EM_T => // _ ; exact: Rmult_comm.",
            "VernacExtend",
            "f03176df1bd9a89e9299664a7a89820007614f2a"
        ],
        [
            "case: (Lim_seq (fun n : nat => fn n (x + h) - fn n x)) => [l | | ] //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by field.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Rdiv Rmult_0_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec => // Hh1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /Rdiv Rmult_0_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec => // Hh1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply ex_finite_lim_seq_correct, CVU_CVS_dom with D.",
            "VernacExtend",
            "20cc7faf2595d47c6fe51a1f7c565b88b089fa5b"
        ],
        [
            "exact: Hfn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify (x + h + - x) ; apply Rlt_le_trans with (1 := Hh), Rmin_r.",
            "VernacExtend",
            "6706e5bc7df2106d316fb40748d23f51a847c9f8"
        ],
        [
            "apply ex_finite_lim_seq_correct, CVU_CVS_dom with D.",
            "VernacExtend",
            "20cc7faf2595d47c6fe51a1f7c565b88b089fa5b"
        ],
        [
            "exact: Hfn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "apply ball_center.",
            "VernacExtend",
            "cd7d813ae3e0973ad761815cfc4c15b7e8339e52"
        ],
        [
            "apply (CVU_CVS_dom fn D) in Hfn ; rewrite /CVS_dom in Hfn.",
            "VernacExtend",
            "9d58ddb81b317b909098816b003ff4c9c3e29b10"
        ],
        [
            "move: (fun H => Lim_seq_correct' _ (Hfn (x+h) (Hd _ H))) => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (fun H => Lim_seq_correct' _ (Hfn (x) (Hd _ H))) => F0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (is_lim_seq_unique _ (real (Lim_seq (fun n : nat => fn n (x + h))))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (is_lim_seq_unique (fun n : nat => fn n (x)) (real (Lim_seq (fun n : nat => fn n (x))))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "apply F0.",
            "VernacExtend",
            "466fec3cad88e8273ea008d50f1eac55b2c2ceb5"
        ],
        [
            "apply ball_center.",
            "VernacExtend",
            "cd7d813ae3e0973ad761815cfc4c15b7e8339e52"
        ],
        [
            "apply F.",
            "VernacExtend",
            "8ad83bba3f0c01314ccc03d5461b3e8143befbdd"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify (x + h + - x).",
            "VernacExtend",
            "461a75b19799ca5e0a8c206ed10eb42499a3b825"
        ],
        [
            "apply Rlt_le_trans with (1 := Hh), Rmin_r.",
            "VernacExtend",
            "2a5c2f4fd47f7120efe39753407fea31ed41afe3"
        ],
        [
            "apply (CVU_CVS_dom fn D) in Hfn ; rewrite /CVS_dom in Hfn.",
            "VernacExtend",
            "9d58ddb81b317b909098816b003ff4c9c3e29b10"
        ],
        [
            "move: (fun H => Lim_seq_correct' _ (Hfn (x+h) (Hd _ H))) => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (fun H => Lim_seq_correct' _ (Hfn (x) (Hd _ H))) => F0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (is_lim_seq_unique _ (real (Lim_seq (fun n : nat => fn n (x + h))))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (is_lim_seq_unique (fun n : nat => fn n (x)) (real (Lim_seq (fun n : nat => fn n (x))))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply F0.",
            "VernacExtend",
            "466fec3cad88e8273ea008d50f1eac55b2c2ceb5"
        ],
        [
            "apply ball_center.",
            "VernacExtend",
            "cd7d813ae3e0973ad761815cfc4c15b7e8339e52"
        ],
        [
            "apply F.",
            "VernacExtend",
            "8ad83bba3f0c01314ccc03d5461b3e8143befbdd"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify (x + h + - x).",
            "VernacExtend",
            "461a75b19799ca5e0a8c206ed10eb42499a3b825"
        ],
        [
            "apply Rlt_le_trans with (1 := Hh), Rmin_r.",
            "VernacExtend",
            "2a5c2f4fd47f7120efe39753407fea31ed41afe3"
        ],
        [
            "rewrite /Derive.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (Lim_seq (fun n : nat => real (Lim (fun h : R => (fn n (x + h) - fn n x) / h) 0))) with (Lim_seq (fun n : nat => real (Lim (rn x n) 0))).",
            "VernacExtend",
            "3f7501806d743a653d33eb15df450dc9ead8394b"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: H0 => drn H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite (is_lim_unique _ _ _ H0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal, is_lim_unique.",
            "VernacExtend",
            "69e9b9a9784d0e6273c6e4f469f06eb9dc43b147"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "apply is_lim_spec in H0.",
            "VernacExtend",
            "440a922d2dd99f4f82a10fc877a87b7bf1cb2f18"
        ],
        [
            "case: (H0 eps) => {H0} delta H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "destruct (Ho x Hx) as [dx Hd].",
            "VernacExtend",
            "f4e36520f8a764dc338c076c26fd616825304390"
        ],
        [
            "have H2 : 0 < Rmin delta dx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rmin_case ; [by apply delta | by apply dx].",
            "VernacExtend",
            "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
        ],
        [
            "exists (mkposreal _ H2) => /= h Hh0 Hh.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (real (Lim_seq (fun n : nat => fn n (x + h))) - real (Lim_seq (fun n : nat => fn n x))) with (real (Rbar_minus (Lim_seq (fun n : nat => fn n (x + h))) (Lim_seq (fun n : nat => fn n x)))).",
            "VernacExtend",
            "bd6b4eeecd18ec56c7f097b56c900bc32f6d1262"
        ],
        [
            "rewrite -Lim_seq_minus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (real (Lim_seq (fun n : nat => fn n (x + h) - fn n x)) / h) with (real (Rbar_mult (/h) (Lim_seq (fun n : nat => fn n (x + h) - fn n x)))).",
            "VernacExtend",
            "d16f05edd5424ba4a97a687a7a65e651d21b97fd"
        ],
        [
            "rewrite -Lim_seq_scal_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (Lim_seq (fun n : nat => / h * (fn n (x + h) - fn n x))) with (Lim_seq (fun n : nat => rn x n h)).",
            "VernacExtend",
            "fc5919a7dfc49e73719456da3ec28da8b9516cc4"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply Rlt_le_trans with (1 := Hh0), Rmin_l.",
            "VernacExtend",
            "2d7c737dd3e3bd557fb17c45a3f169e924f10678"
        ],
        [
            "exact: Hh.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Lim_seq_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /rn /Rdiv ; case: Req_EM_T => // _ ; exact: Rmult_comm.",
            "VernacExtend",
            "f03176df1bd9a89e9299664a7a89820007614f2a"
        ],
        [
            "case: (Lim_seq (fun n : nat => fn n (x + h) - fn n x)) => [l | | ] //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by field.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Rdiv Rmult_0_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec => // Hh1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /Rdiv Rmult_0_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Rle_dec => // Hh1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Rle_lt_or_eq_dec => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply ex_finite_lim_seq_correct, CVU_CVS_dom with D.",
            "VernacExtend",
            "20cc7faf2595d47c6fe51a1f7c565b88b089fa5b"
        ],
        [
            "exact: Hfn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify (x + h + - x) ; rewrite -(Rminus_0_r h) ; apply Rlt_le_trans with (1 := Hh0), Rmin_r.",
            "VernacExtend",
            "40bd4e62090939db42641ab88903761a4c915a97"
        ],
        [
            "apply ex_finite_lim_seq_correct, CVU_CVS_dom with D.",
            "VernacExtend",
            "20cc7faf2595d47c6fe51a1f7c565b88b089fa5b"
        ],
        [
            "exact: Hfn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "apply ball_center.",
            "VernacExtend",
            "cd7d813ae3e0973ad761815cfc4c15b7e8339e52"
        ],
        [
            "apply (CVU_CVS_dom fn D) in Hfn ; rewrite /CVS_dom in Hfn.",
            "VernacExtend",
            "9d58ddb81b317b909098816b003ff4c9c3e29b10"
        ],
        [
            "move: (fun H => Lim_seq_correct' _ (Hfn (x+h) (Hd _ H))) => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (fun H => Lim_seq_correct' _ (Hfn (x) (Hd _ H))) => F0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (is_lim_seq_unique _ (real (Lim_seq (fun n : nat => fn n (x + h))))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (is_lim_seq_unique (fun n : nat => fn n (x)) (real (Lim_seq (fun n : nat => fn n (x))))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "apply F0.",
            "VernacExtend",
            "466fec3cad88e8273ea008d50f1eac55b2c2ceb5"
        ],
        [
            "apply ball_center.",
            "VernacExtend",
            "cd7d813ae3e0973ad761815cfc4c15b7e8339e52"
        ],
        [
            "apply F.",
            "VernacExtend",
            "8ad83bba3f0c01314ccc03d5461b3e8143befbdd"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify (x + h + - x).",
            "VernacExtend",
            "461a75b19799ca5e0a8c206ed10eb42499a3b825"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= in Hh0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -/(Rminus _ _) Rminus_0_r in Hh0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_le_trans with (1 := Hh0), Rmin_r.",
            "VernacExtend",
            "c78107bdea4c3e579e4af08ea1e2629d5beb233c"
        ],
        [
            "apply (CVU_CVS_dom fn D) in Hfn ; rewrite /CVS_dom in Hfn.",
            "VernacExtend",
            "9d58ddb81b317b909098816b003ff4c9c3e29b10"
        ],
        [
            "move: (fun H => Lim_seq_correct' _ (Hfn (x+h) (Hd _ H))) => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (fun H => Lim_seq_correct' _ (Hfn (x) (Hd _ H))) => F0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (is_lim_seq_unique _ (real (Lim_seq (fun n : nat => fn n (x + h))))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (is_lim_seq_unique (fun n : nat => fn n (x)) (real (Lim_seq (fun n : nat => fn n (x))))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply F0.",
            "VernacExtend",
            "466fec3cad88e8273ea008d50f1eac55b2c2ceb5"
        ],
        [
            "apply ball_center.",
            "VernacExtend",
            "cd7d813ae3e0973ad761815cfc4c15b7e8339e52"
        ],
        [
            "apply F.",
            "VernacExtend",
            "8ad83bba3f0c01314ccc03d5461b3e8143befbdd"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify (x + h + - x).",
            "VernacExtend",
            "461a75b19799ca5e0a8c206ed10eb42499a3b825"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= in Hh0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -/(Rminus _ _) Rminus_0_r in Hh0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_le_trans with (1 := Hh0), Rmin_r.",
            "VernacExtend",
            "c78107bdea4c3e579e4af08ea1e2629d5beb233c"
        ],
        [
            "apply Lim_seq_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq, f_equal, is_lim_unique.",
            "VernacExtend",
            "9f21e9fb5f04ee133af541d009dba531c934be02"
        ],
        [
            "have Hx' : D (x + 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite Rplus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (is_lim_unique _ _ _ (Crn x Hx n 0 Hx')).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_lim_spec.",
            "VernacExtend",
            "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
        ],
        [
            "move: (Crn x Hx n 0 Hx') => H2 eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_spec in H2.",
            "VernacExtend",
            "03bebcf9bb2538d3e225657dba352fc0f8fe5d0d"
        ],
        [
            "case: (H2 eps) => {H2} delta H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists delta => y Hy Hy0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: (H2 y Hy Hy0).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite {1}/rn ; by case: Req_EM_T.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "case => H2 H3.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -H3.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Derive_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Dini (fn : nat -> R -> R) (a b : R) : a < b -> CVS_dom fn (fun x => a <= x <= b) -> (forall (n : nat) (x : R), a <= x <= b -> continuity_pt (fn n) x) -> (forall (x : R), a <= x <= b -> continuity_pt (fun y => Lim_seq (fun n => fn n y)) x) -> (forall (n : nat) (x y : R), a <= x -> x <= y -> y <= b -> fn n x <= fn n y) -> CVU_dom fn (fun x => a <= x <= b).",
            "VernacStartTheoremProof",
            "09d89e75121251f2265ab6228411d9d6b78bfa5b"
        ],
        [
            "set AB := fun x => a <= x <= b.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set f : R -> R := (fun y : R => Lim_seq (fun n : nat => fn n y)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "move => Hab Hcvs Cfn Cf Hfn.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have CUf : uniform_continuity f AB.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Heine.",
            "VernacExtend",
            "29d43f1fe57c1a4dca0dd136cc106f65104ece63"
        ],
        [
            "by apply compact_P3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Cf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff H : forall eps : posreal, exists N : nat, forall n : nat, (N <= n)%nat -> forall x : R, AB x -> Rabs (fn n x - Lim_seq (fun n0 : nat => fn n0 x)) < 5 * eps.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace (pos eps) with (5 * (eps / 5)) by field.",
            "VernacExtend",
            "50edefed811b8e1d12476845634bfd1213558e81"
        ],
        [
            "suff He : 0 < eps / 5.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by apply (H (mkposreal _ He)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "repeat (apply Rplus_lt_0_compat || apply Rmult_lt_0_compat) ; apply Rlt_0_1.",
            "VernacExtend",
            "4b36df50b6032fe41628feb4928419fa1387cdbe"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (CUf eps) => {CUf} eta CUf.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (interval_finite_subdiv_between a b (pos_div_2 eta) (Rlt_le _ _ Hab)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (interval_finite_subdiv a b (pos_div_2 eta) (Rlt_le _ _ Hab)) => a_ Ha_ /= Ha_0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have : exists N, forall n i, (N <= n)%nat -> (i < seq.size a_)%nat -> Rabs (fn n (seq.nth 0 a_ i) - f (seq.nth 0 a_ i)) < eps.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: a_ Ha_ Ha_0 => [ | a0 a_] Ha_ /= Ha_0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict Hab.",
            "VernacExtend",
            "d531e774813f18ac4f672077f0bb7af0e9083a7d"
        ],
        [
            "rewrite -(proj1 Ha_) -(proj1 (proj2 Ha_)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rlt_irrefl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: (a_) (a0) Ha_0 => /= [ | x1 l IH] x0 Hl.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "move: (Hcvs x0 (Hl O (lt_n_Sn _))) ; move/Lim_seq_correct' => {Hcvs} Hcvs.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "apply is_lim_seq_spec in Hcvs.",
            "VernacExtend",
            "738f75e7645d402f03353a2bc943b70f258e4179"
        ],
        [
            "case: (Hcvs eps) => {Hcvs} N Hcvs.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n i Hn Hi.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: i Hi => /= [ | i] Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hcvs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_S_n, lt_n_O in Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (IH x1).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => i Hi.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply (Hl (S i)), lt_n_S.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => N0 HN0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (Hcvs x0 (Hl O (lt_O_Sn _))) ; move/Lim_seq_correct' => {Hcvs} Hcvs.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "apply is_lim_seq_spec in Hcvs.",
            "VernacExtend",
            "738f75e7645d402f03353a2bc943b70f258e4179"
        ],
        [
            "case: (Hcvs eps) => {Hcvs} N Hcvs.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (N + N0)%nat => n i Hn Hi.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: i Hi => /= [ | i ] Hi.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Hcvs ; by intuition.",
            "VernacExtend",
            "12ab6dca5492e5509a214a75c283d08dcacb2556"
        ],
        [
            "apply HN0 ; by intuition.",
            "VernacExtend",
            "dc0eba52e2ea7a9fe9471f5c1ba7ecd10d550bc1"
        ],
        [
            "case => N HN.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have : exists i, (S i < seq.size a_)%nat /\\ seq.nth 0 a_ i <= x <= seq.nth 0 a_ (S i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: a_ Ha_ Ha_0 {HN} => [ | a0 a_] Ha_ /= Ha_0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict Hab.",
            "VernacExtend",
            "d531e774813f18ac4f672077f0bb7af0e9083a7d"
        ],
        [
            "rewrite -(proj1 Ha_) -(proj1 (proj2 Ha_)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rlt_irrefl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: a_ Ha_ Ha_0 => [ | a1 a_] Ha_ /= Ha_0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "contradict Hab.",
            "VernacExtend",
            "d531e774813f18ac4f672077f0bb7af0e9083a7d"
        ],
        [
            "rewrite -(proj1 Ha_) -(proj1 (proj2 Ha_)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rlt_irrefl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(proj1 Ha_) in AB Hcvs CUf Hx Hab Cfn Cf Hfn Ha_0 |- * ; case: Ha_ => {a} _ Ha_.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite -(proj1 Ha_) in AB Hcvs CUf Hx Hab Cfn Cf Hfn Ha_0 |- * ; case: Ha_ => {b} _ Ha_.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "clear Hcvs CUf ; revert AB Hx ; elim: (a_) (a0) (a1) => /= [ | x2 l IH] x0 x1 Hx.",
            "VernacExtend",
            "deca708d686e3d488c69696a761f66a4f125748f"
        ],
        [
            "exists O ; split => /=.",
            "VernacExtend",
            "9745670a6bf6e931ffb9bf90a1655c6cd9daf2fe"
        ],
        [
            "by apply lt_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Rlt_le_dec x x1) => Hx'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists O ; split => /=.",
            "VernacExtend",
            "9745670a6bf6e931ffb9bf90a1655c6cd9daf2fe"
        ],
        [
            "by apply lt_n_S, lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split ; intuition.",
            "VernacExtend",
            "ad92f41c7c6120efbfc528c4c895eac1600e6297"
        ],
        [
            "case: (IH x1 x2).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => i [Hi Hx0].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (S i) ; by intuition.",
            "VernacExtend",
            "be2cd684b4a8bb3f7056fe93397d9362a5a89187"
        ],
        [
            "case => i [Hi Hx'].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "replace (fn n x - Lim_seq (fun n0 : nat => fn n0 x)) with ((f (seq.nth 0 a_ i) - f x) + (fn n x - f (seq.nth 0 a_ i))) by (rewrite /f ; ring).",
            "VernacExtend",
            "9d5a9f310ba1f554c9dee07b84884b10f6b4412e"
        ],
        [
            "replace (5 * eps) with (eps + 4 * eps) by ring.",
            "VernacExtend",
            "e6ace48d8bdd7d2013c996cf9c73e47ba37d88fe"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "apply CUf.",
            "VernacExtend",
            "355fc9a6bff8e18155008ebf11814e22fdf88466"
        ],
        [
            "apply Ha_0 ; by intuition.",
            "VernacExtend",
            "33bb9ba97bcb8670de06114475e11a1d78bda447"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Rabs_Ropp Ropp_minus_distr' Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_lt_trans with (seq.nth 0 a_ (S i) - seq.nth 0 a_ i).",
            "VernacExtend",
            "daa8d436fc38abb48bf9ea91ef7d4f4671fa3cd9"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "by apply Hx'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_lt_trans with (eta/2).",
            "VernacExtend",
            "561b174dab9d9287f827bb3f46a18e70e498d979"
        ],
        [
            "apply Rle_minus_l.",
            "VernacExtend",
            "fd70e10454fdcda9a9ecb4708f46b7de8d290b92"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Ha_.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rminus_lt_0 ; field_simplify ; rewrite Rdiv_1.",
            "VernacExtend",
            "5e1bb58e1096013357ba0c7fcd2c17a152059b8c"
        ],
        [
            "by apply is_pos_div_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_minus_r ; rewrite Rplus_0_l.",
            "VernacExtend",
            "4d8349aaad59098819ddd8a7ab161244b9f45799"
        ],
        [
            "by apply Hx'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (fn n x - f (seq.nth 0 a_ i)) with ((fn n (seq.nth 0 a_ i) - f (seq.nth 0 a_ i)) + (fn n x - fn n (seq.nth 0 a_ i))) by ring.",
            "VernacExtend",
            "576aed1263700a819da992cb2a797fd4b0e9590a"
        ],
        [
            "replace (4 * eps) with (eps + 3 * eps) by ring.",
            "VernacExtend",
            "eaedfcaab876f376fd46aacefef3d2873af7f16d"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "apply HN ; by intuition.",
            "VernacExtend",
            "ba8439fd972747af38e10ff1e050ae8995a47c31"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_lt_trans with (fn n (seq.nth 0 a_ (S i)) - fn n (seq.nth 0 a_ i)).",
            "VernacExtend",
            "b9eb40e62dd9c559e6fa42c4fbe9dae46bb6f0fc"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "apply Hfn.",
            "VernacExtend",
            "3401829d78adbfb29f7b4f5e3498e160b8b3f769"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hx'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Ha_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (fn n (seq.nth 0 a_ (S i)) - fn n (seq.nth 0 a_ i)) with ((fn n (seq.nth 0 a_ (S i)) - f (seq.nth 0 a_ (S i))) - (fn n (seq.nth 0 a_ i) - f (seq.nth 0 a_ i)) + (f (seq.nth 0 a_ (S i)) - f (seq.nth 0 a_ i))) by ring.",
            "VernacExtend",
            "208c8805b49758b2414058cc0efcd08b29235102"
        ],
        [
            "replace (3 * eps) with ((eps + eps) + eps) by ring.",
            "VernacExtend",
            "eceeba7c025fad3f403dca33c175b30e1e228bf4"
        ],
        [
            "apply Rle_lt_trans with (1 := Rle_abs _).",
            "VernacExtend",
            "135a8d900205d7b612754e3cd7bd2bca409d80e3"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "apply HN ; by intuition.",
            "VernacExtend",
            "ba8439fd972747af38e10ff1e050ae8995a47c31"
        ],
        [
            "rewrite Rabs_Ropp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply HN ; by intuition.",
            "VernacExtend",
            "ba8439fd972747af38e10ff1e050ae8995a47c31"
        ],
        [
            "apply CUf.",
            "VernacExtend",
            "355fc9a6bff8e18155008ebf11814e22fdf88466"
        ],
        [
            "apply Ha_0 ; by intuition.",
            "VernacExtend",
            "33bb9ba97bcb8670de06114475e11a1d78bda447"
        ],
        [
            "apply Ha_0 ; by intuition.",
            "VernacExtend",
            "33bb9ba97bcb8670de06114475e11a1d78bda447"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_lt_trans with (eta/2).",
            "VernacExtend",
            "561b174dab9d9287f827bb3f46a18e70e498d979"
        ],
        [
            "apply Rle_minus_l.",
            "VernacExtend",
            "fd70e10454fdcda9a9ecb4708f46b7de8d290b92"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Ha_.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rminus_lt_0 ; field_simplify ; rewrite Rdiv_1.",
            "VernacExtend",
            "5e1bb58e1096013357ba0c7fcd2c17a152059b8c"
        ],
        [
            "by apply is_pos_div_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_minus_r ; rewrite Rplus_0_l.",
            "VernacExtend",
            "4d8349aaad59098819ddd8a7ab161244b9f45799"
        ],
        [
            "apply Rle_trans with x ; apply Hx'.",
            "VernacExtend",
            "a86a10cb48c3268c2c492812219c849f8722cb18"
        ],
        [
            "apply Rle_minus_r ; rewrite Rplus_0_l.",
            "VernacExtend",
            "4d8349aaad59098819ddd8a7ab161244b9f45799"
        ],
        [
            "apply Hfn.",
            "VernacExtend",
            "3401829d78adbfb29f7b4f5e3498e160b8b3f769"
        ],
        [
            "apply Ha_0 ; by intuition.",
            "VernacExtend",
            "33bb9ba97bcb8670de06114475e11a1d78bda447"
        ],
        [
            "by apply Hx'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CVN_CVU_r (fn : nat -> R -> R) (r : posreal) : CVN_r fn r -> forall x, (Rabs x < r) -> exists e : posreal, CVU (fun n => SP fn n) (fun x => Series (fun n => fn n x)) x e.",
            "VernacStartTheoremProof",
            "f765ccd32dae11ab871666c599c22e82181a7099"
        ],
        [
            "case => An [l [H H0]] x Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "assert (H1 : ex_series An).",
            "VernacExtend",
            "5b6f7cc5d0948a90f213c2043cd19442ddad5d70"
        ],
        [
            "apply ex_series_Reals_1.",
            "VernacExtend",
            "442f938bfb081cc6fcc8a6d8c36db91cb8859ca6"
        ],
        [
            "exists l => e He.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (H e He) => {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (sum_f_R0 An n) with (sum_f_R0 (fun k : nat => Rabs (An k)) n).",
            "VernacExtend",
            "4f83ce6c791647002827d8be84b7843eec44d465"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: n {Hn} => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "apply Rabs_pos_eq.",
            "VernacExtend",
            "84ed980db60aa71de2fd237885e8f143313c5575"
        ],
        [
            "apply Rle_trans with (Rabs (fn O 0)).",
            "VernacExtend",
            "1cd0440b390cc8850bf7364b6e67c7bebb851ff4"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply H0 ; rewrite /Boule Rminus_0_r Rabs_R0 ; by apply r.",
            "VernacExtend",
            "36691ff0f2aa9f1bf72e21f6b65aa7e24b6ec3e6"
        ],
        [
            "rewrite IH Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_trans with (Rabs (fn (S n) 0)).",
            "VernacExtend",
            "cdc520c710c651f8f0dc52fd430c83a9b4c9482c"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply H0 ; rewrite /Boule Rminus_0_r Rabs_R0 ; by apply r.",
            "VernacExtend",
            "36691ff0f2aa9f1bf72e21f6b65aa7e24b6ec3e6"
        ],
        [
            "have H2 : is_lim_seq (fun n => Series (fun k => An (n + k)%nat)) 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply is_lim_seq_incr_1.",
            "VernacExtend",
            "8feb5d88cd2a761705b607c724cf7e02bdc1c5dc"
        ],
        [
            "apply is_lim_seq_ext with (fun n => Series An - sum_f_R0 An n).",
            "VernacExtend",
            "133c9bad481a9fd955b8cd493d2c7d9d3aba5528"
        ],
        [
            "move => n ; rewrite (Series_incr_n An (S n)) /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (Finite 0) with (Rbar_plus (Series An) (- Series An)) by (simpl ; apply Rbar_finite_eq ; ring).",
            "VernacExtend",
            "d27d2504476e090f4d1bd8886144211db8821bdf"
        ],
        [
            "apply (is_lim_seq_plus _ _ (Series An) (-Series An)).",
            "VernacExtend",
            "094bb2df742a54d541e6bfcb9115cf2f782d6de7"
        ],
        [
            "by apply is_lim_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (Finite (-Series An)) with (Rbar_opp (Series An)) by (simpl ; apply Rbar_finite_eq ; ring).",
            "VernacExtend",
            "a600b64c788a96e0860e4fa0b8025828bec0bf5a"
        ],
        [
            "apply -> is_lim_seq_opp.",
            "VernacExtend",
            "b7caa52eb7f4d0534a6e6e2db4b8647bb39b1d68"
        ],
        [
            "rewrite /Series ; apply (is_lim_seq_ext (sum_n (fun k => An k))).",
            "VernacExtend",
            "33a08b91ec5d6edc87ab72ac6d7dc69f3b9a138f"
        ],
        [
            "elim => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite sum_O.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite sum_Sn IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_ext with (sum_n An).",
            "VernacExtend",
            "633e9461df9a65221aa146e30cb1f4b7f31fbdc6"
        ],
        [
            "move => n ; by rewrite sum_n_Reals.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "apply Lim_seq_correct', H1.",
            "VernacExtend",
            "d4a9842f069b2669b9f7907e9beb29e40cd6cab0"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "assert (H3 : forall y, Boule 0 r y -> ex_series (fun n => Rabs (fn n y))).",
            "VernacExtend",
            "55e6128597493eaba6c23e7bdf3d00c8090b979b"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: H1 ; apply @ex_series_le.",
            "VernacExtend",
            "f32cfb832f32f22ba8aab830a565d0ef03bc9055"
        ],
        [
            "move => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /norm /= /abs /= Rabs_Rabsolu.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rminus_lt_0 in Hx.",
            "VernacExtend",
            "066dabe78527eb26f2374cdfb37a5a5e620bb500"
        ],
        [
            "set r0 := mkposreal _ Hx.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists r0 => e He ; set eps := mkposreal e He.",
            "VernacExtend",
            "c9a8452e0e06a4c3ac19bcd1b0a42d11d8e194b2"
        ],
        [
            "apply is_lim_seq_spec in H2.",
            "VernacExtend",
            "a0756b94bf90a63fcb6d04b177a110b51f617dd3"
        ],
        [
            "case: (H2 eps) => {H2} N H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n y Hn Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have H4 : Boule 0 r y.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /Boule /= in Hy |- *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang_inv _ _) in Hy.",
            "VernacExtend",
            "483d6452064fee7e0a1998c10618c79756c11d26"
        ],
        [
            "rewrite /Rminus ?(Rplus_comm _ (-Rabs x)) in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_reg_l in Hy.",
            "VernacExtend",
            "eff6468a4f4e1be1ab3f699e261815140dca4869"
        ],
        [
            "by rewrite Rminus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_lt_trans with (2 := H2 (S n) (le_trans _ _ _ (le_n_Sn _) (le_n_S _ _ Hn))).",
            "VernacExtend",
            "7aa9d5e7100b5cda87e33aa491f290b470fb1bed"
        ],
        [
            "rewrite Rminus_0_r /SP.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (Series_incr_n (fun k : nat => fn k y) (S n)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring_simplify (sum_f_R0 (fun k : nat => fn k y) n + Series (fun k : nat => fn (S (n + k)) y) - sum_f_R0 (fun k : nat => fn k y) n).",
            "VernacExtend",
            "29357c45aa921b139f2e06f2476cfdafd571a630"
        ],
        [
            "apply Rle_trans with (2 := Rle_abs _).",
            "VernacExtend",
            "72c9ed1eeb9d16ecf7ec04b7601241cd3efc9de9"
        ],
        [
            "apply Rle_trans with (Series (fun k : nat => Rabs (fn (S (n + k)) y))).",
            "VernacExtend",
            "53ab402139276250e6cd3b3151c329578b6faace"
        ],
        [
            "apply Series_Rabs.",
            "VernacExtend",
            "01ff6556aa389edef7b96264ca598d1173b7b0c0"
        ],
        [
            "apply ex_series_ext with (fun n0 : nat => Rabs (fn (S (n) + n0)%nat y)).",
            "VernacExtend",
            "e25ffce66f17290041e5d7e533527c8d1dc44890"
        ],
        [
            "move => n0 ; by rewrite plus_Sn_m.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "apply (ex_series_incr_n (fun n => Rabs (fn n y))).",
            "VernacExtend",
            "e7a7da45c7806e51e4a7cab3b1e004e4c3e668f6"
        ],
        [
            "by apply H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Series_le.",
            "VernacExtend",
            "383278f0d81c1224e87394dd98a1aaf5fc5d8390"
        ],
        [
            "move => k ; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_series_ext with (fun k : nat => An (S n + k)%nat).",
            "VernacExtend",
            "8ec99369f04102b8ac41bb73b191ac8847ff31fa"
        ],
        [
            "move => k ; by rewrite plus_Sn_m.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "by apply ex_series_incr_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_series_Rabs.",
            "VernacExtend",
            "bb36e3f02231f116fa9b6505d87f742c3a7c52aa"
        ],
        [
            "by apply H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "CVU_dom_Reals",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "split ; move => Hcvu.",
                        "VernacExtend",
                        "762ea52ce3564fcd0b41ae75027c378295824fae"
                    ]
                },
                {
                    "command": [
                        "have Hf : forall y, Boule x r y -> is_lim_seq (fun n => fn n y) (f y).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => y Hy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "move => [e He] /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hcvu e He) => {Hcvu} N Hcvu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -Ropp_minus_distr' Rabs_Ropp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Hcvu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => [e He] /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hcvu e He) => {Hcvu} N Hcvu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn y Hy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_lim_seq_unique (fun n0 : nat => fn n0 y) _ (Hf y Hy)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite -/(Rminus (fn n y) (f y)) -Ropp_minus_distr' Rabs_Ropp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Hcvu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => e He ; set eps := mkposreal e He.",
                        "VernacExtend",
                        "fd0300d8899563f42d81dc09cab8269e61be7289"
                    ]
                },
                {
                    "command": [
                        "case: (Hcvu eps) => {Hcvu} N Hcvu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n y Hn Hy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move: (Hcvu n Hn y Hy).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -(H y Hy) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -Ropp_minus_distr' Rabs_Ropp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CVU_CVS_dom",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "move => Hcvu x Hx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (real (Lim_seq (fun n => fn n x))).",
                        "VernacExtend",
                        "f9cf0c269036dfe9bb8e9c991138adfa0d4f7f13"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "intros eps.",
                        "VernacExtend",
                        "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
                    ]
                },
                {
                    "command": [
                        "case: (Hcvu eps) => {Hcvu} N Hcvu.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply Hcvu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CVU_dom_cauchy",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "split => H eps.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (H (pos_div_2 eps)) => {H} N /= H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n m x Hx Hn Hm.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite (double_var eps).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (fn n x - fn m x) with ((fn n x - real (Lim_seq (fun n0 : nat => fn n0 x))) - (fn m x - real (Lim_seq (fun n0 : nat => fn n0 x)))) by ring.",
                        "VernacExtend",
                        "9a6834f105f3de39f214a1cfca9ed32035323c03"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rabs_triang _ _) ; rewrite Rabs_Ropp.",
                        "VernacExtend",
                        "a639791b2f269c8e4db3b22779f3210f9c22238c"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat ; by apply H.",
                        "VernacExtend",
                        "b3fdf994ea9deeef54321a210af276ae83c6c412"
                    ]
                },
                {
                    "command": [
                        "rewrite /Lim_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (H (pos_div_2 eps)) => {H} N /= H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /LimSup_seq ; case: ex_LimSup_seq ; case => [ls | | ] /= Hls.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "rewrite /LimInf_seq ; case: ex_LimInf_seq ; case => [li | | ] /= Hli.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "replace (fn n x - (ls + li) / 2) with (((fn n x - ls) + (fn n x - li))/2) by field.",
                        "VernacExtend",
                        "58a56a6984e1522c1ed418187d75cbd9cc38a8c6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_div ; [ | by apply Rgt_not_eq, Rlt_R0_R2].",
                        "VernacExtend",
                        "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_pos_eq 2) ; [ | by apply Rlt_le, Rlt_R0_R2].",
                        "VernacExtend",
                        "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
                    ]
                },
                {
                    "command": [
                        "rewrite Rlt_div_l ; [ | by apply Rlt_R0_R2].",
                        "VernacExtend",
                        "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
                        "VernacExtend",
                        "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
                    ]
                },
                {
                    "command": [
                        "replace (eps * 2) with (eps + eps) by ring.",
                        "VernacExtend",
                        "bd7dbe85b75d6caf7f5278e49c653a1d90dd1d9c"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat ; apply Rabs_lt_between'.",
                        "VernacExtend",
                        "c684f79354be7382ca7c982f9b4203217c74e274"
                    ]
                },
                {
                    "command": [
                        "case: (Hls (pos_div_2 eps)) => {Hls Hli} /= H0 [N0 H1] ; split.",
                        "VernacExtend",
                        "88c25af51ded328891892c53c941b62f68d72bd0"
                    ]
                },
                {
                    "command": [
                        "case: (H0 N) => {H0} m [Hm H0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (fn m x - eps/2).",
                        "VernacExtend",
                        "8adf77e9589acd9db97799cc5ee6045ab922c035"
                    ]
                },
                {
                    "command": [
                        "replace (ls - eps) with ((ls - eps / 2) - eps/2) by field.",
                        "VernacExtend",
                        "437c32e8efa5f6a58473e4490a9c099c181be50b"
                    ]
                },
                {
                    "command": [
                        "by apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace (fn n x) with (eps/2 + (fn n x - eps/2)) by ring.",
                        "VernacExtend",
                        "5b487e9d5dd19bc5b8a668eeed65b75c61a3d375"
                    ]
                },
                {
                    "command": [
                        "replace (fn m x - eps / 2) with ((fn m x - fn n x) + (fn n x - eps/2)) by ring.",
                        "VernacExtend",
                        "4ae66177aed6d9f7a9a12e9c0b5ac93d2f435168"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rle_abs _) ; by apply H.",
                        "VernacExtend",
                        "b973a9c86048ed5ba284ce789fe1d34c8096f3b6"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (fn (n+N0)%nat x + eps/2).",
                        "VernacExtend",
                        "f4eacfe7970fcfe6bcd1a6f761b70504733b1631"
                    ]
                },
                {
                    "command": [
                        "replace (fn n x) with (fn (n + N0)%nat x + (fn n x - fn (n+N0)%nat x)) by ring.",
                        "VernacExtend",
                        "b8534a9d68182b7182c8b8cef35240306909ebbd"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rle_abs _).",
                        "VernacExtend",
                        "135a8d900205d7b612754e3cd7bd2bca409d80e3"
                    ]
                },
                {
                    "command": [
                        "apply H ; by intuition.",
                        "VernacExtend",
                        "34fd41a308b5b35ebaca836e1d65b2bf94b36c8e"
                    ]
                },
                {
                    "command": [
                        "replace (ls + eps) with ((ls + eps/2) + eps/2) by field.",
                        "VernacExtend",
                        "692a425a6a7560111c8bd7760b13ca7185ed27ee"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
                    ]
                },
                {
                    "command": [
                        "apply H1 ; by intuition.",
                        "VernacExtend",
                        "aef493c7aee2967137e61c0d1793668535a421cd"
                    ]
                },
                {
                    "command": [
                        "case: (Hli (pos_div_2 eps)) => {Hls Hli} /= H0 [N0 H1] ; split.",
                        "VernacExtend",
                        "88c25af51ded328891892c53c941b62f68d72bd0"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (fn (n+N0)%nat x - eps/2).",
                        "VernacExtend",
                        "39399f1ee5d908fd89f8b75f24fa7a2201ce3dfc"
                    ]
                },
                {
                    "command": [
                        "replace (li - eps) with ((li - eps/2) - eps/2) by field.",
                        "VernacExtend",
                        "efdbc5e3f9994409af07b76cf14b64229e9fe6ea"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
                    ]
                },
                {
                    "command": [
                        "apply H1 ; by intuition.",
                        "VernacExtend",
                        "aef493c7aee2967137e61c0d1793668535a421cd"
                    ]
                },
                {
                    "command": [
                        "replace (fn n x) with (eps/2 + (fn n x - eps/2)) by ring.",
                        "VernacExtend",
                        "5b487e9d5dd19bc5b8a668eeed65b75c61a3d375"
                    ]
                },
                {
                    "command": [
                        "replace (fn (n + N0)%nat x - eps / 2) with ((fn (n + N0)%nat x - fn n x) + (fn n x - eps/2)) by ring.",
                        "VernacExtend",
                        "1d3bed02c9476f93b6e53655ef59d4fb09e69e52"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rle_abs _).",
                        "VernacExtend",
                        "135a8d900205d7b612754e3cd7bd2bca409d80e3"
                    ]
                },
                {
                    "command": [
                        "apply H ; by intuition.",
                        "VernacExtend",
                        "34fd41a308b5b35ebaca836e1d65b2bf94b36c8e"
                    ]
                },
                {
                    "command": [
                        "case: (H0 N) => {H0} m [Hm H0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (fn m x + eps/2).",
                        "VernacExtend",
                        "146e4b0e330a10fc491ceb5c305198f63d6d607c"
                    ]
                },
                {
                    "command": [
                        "replace (fn n x) with (fn m x + (fn n x - fn m x)) by ring.",
                        "VernacExtend",
                        "6d4ecb42ca45631a6aebc910c57b8e9eaf0e86c5"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rle_abs _) ; by apply H.",
                        "VernacExtend",
                        "b973a9c86048ed5ba284ce789fe1d34c8096f3b6"
                    ]
                },
                {
                    "command": [
                        "replace (li + eps) with ((li + eps / 2) + eps/2) by field.",
                        "VernacExtend",
                        "aa9e049617c1d75b701d6ec4b53204b73b6e342e"
                    ]
                },
                {
                    "command": [
                        "by apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (Hli (fn n x + eps / 2)) => {Hls Hli} N0 H0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (H0 _ (le_plus_r N N0)) => {H0} H0 ; contradict H0.",
                        "VernacExtend",
                        "118b1e522ae6718127b6575b456e11661e537258"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le.",
                        "VernacExtend",
                        "947b2491ad420e5f2f06b8e61d73f131b606c716"
                    ]
                },
                {
                    "command": [
                        "replace (fn (N + N0)%nat x) with (fn n x + (fn (N + N0)%nat x - fn n x)) by ring.",
                        "VernacExtend",
                        "f517262060e34835e20e17d6194815832c7df05b"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rle_abs _).",
                        "VernacExtend",
                        "135a8d900205d7b612754e3cd7bd2bca409d80e3"
                    ]
                },
                {
                    "command": [
                        "apply H ; by intuition.",
                        "VernacExtend",
                        "34fd41a308b5b35ebaca836e1d65b2bf94b36c8e"
                    ]
                },
                {
                    "command": [
                        "case: (Hli (fn n x - eps / 2) N) => {Hls Hli} m [Hm H0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "contradict H0.",
                        "VernacExtend",
                        "e9276d92c17ea182f1ef13aa74464b33eea923d9"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le.",
                        "VernacExtend",
                        "947b2491ad420e5f2f06b8e61d73f131b606c716"
                    ]
                },
                {
                    "command": [
                        "replace (fn m x) with (eps/2 + (fn m x - eps/2)) by ring.",
                        "VernacExtend",
                        "7a9e3c62abc27972f55d767513adf82607bdb6c5"
                    ]
                },
                {
                    "command": [
                        "replace (fn n x - eps / 2) with ((fn n x - fn m x) + (fn m x - eps/2)) by ring.",
                        "VernacExtend",
                        "2d2553be4ecae90eda5e6acdb235fb42601d02db"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_r, Rle_lt_trans with (1 := Rle_abs _) ; by apply H.",
                        "VernacExtend",
                        "9d2e8b0401438956b4acaf5169c99bb3701d0c45"
                    ]
                },
                {
                    "command": [
                        "case: (Hls (fn n x + eps / 2) N) => {Hls} m [Hm H0].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "contradict H0.",
                        "VernacExtend",
                        "e9276d92c17ea182f1ef13aa74464b33eea923d9"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le.",
                        "VernacExtend",
                        "947b2491ad420e5f2f06b8e61d73f131b606c716"
                    ]
                },
                {
                    "command": [
                        "replace (fn m x) with (fn n x + (fn m x - fn n x)) by ring.",
                        "VernacExtend",
                        "0e52442f073c44816425d2ac00ca9e1fb8c97fc1"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l, Rle_lt_trans with (1 := Rle_abs _) ; by apply H.",
                        "VernacExtend",
                        "e2609e9daa2171d4472e1820c57eb84ef5dd4e63"
                    ]
                },
                {
                    "command": [
                        "case: (Hls (fn n x - eps / 2)) => {Hls} N0 H0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (H0 _ (le_plus_r N N0)) => {H0} H0 ; contradict H0.",
                        "VernacExtend",
                        "118b1e522ae6718127b6575b456e11661e537258"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt, Rlt_le.",
                        "VernacExtend",
                        "947b2491ad420e5f2f06b8e61d73f131b606c716"
                    ]
                },
                {
                    "command": [
                        "replace (fn (N + N0)%nat x) with (eps/2 + (fn (N + N0)%nat x - eps/2)) by ring.",
                        "VernacExtend",
                        "ad1862ea22aa1dc344a6d9e42fd4ba840deb23df"
                    ]
                },
                {
                    "command": [
                        "replace (fn n x - eps / 2) with ((fn n x - fn (N+N0)%nat x) + (fn (N+N0)%nat x - eps/2)) by ring.",
                        "VernacExtend",
                        "bccac8b71fd774d9bc7423628cd4b6422ff9c7ec"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_r.",
                        "VernacExtend",
                        "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rle_abs _).",
                        "VernacExtend",
                        "135a8d900205d7b612754e3cd7bd2bca409d80e3"
                    ]
                },
                {
                    "command": [
                        "apply H ; by intuition.",
                        "VernacExtend",
                        "34fd41a308b5b35ebaca836e1d65b2bf94b36c8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CVU_dom_include",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "move => H H1 eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (H1 eps) => {H1} N H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "exact Hn.",
                        "VernacExtend",
                        "086d6e64eafd90345d404c3eab0e41622b5023c7"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CVU_limits_open",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "move => Ho Hfn Hex x Hx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have H : ex_finite_lim_seq (fun n : nat => real (Lim (fn n) x)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply CVU_dom_cauchy in Hfn.",
                        "VernacExtend",
                        "1183688c5260a0e791840d7220cf3bcc0a4a40c4"
                    ]
                },
                {
                    "command": [
                        "apply ex_lim_seq_cauchy_corr => eps.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (Hfn (pos_div_2 eps)) => {Hfn} /= N Hfn.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n m Hn Hm.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (Hex x n Hx) => ln Hex_n ; rewrite (is_lim_unique _ _ _ Hex_n).",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: (Hex x m Hx) => {Hex} lm Hex_m ; rewrite (is_lim_unique _ _ _ Hex_m).",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_spec in Hex_n.",
                        "VernacExtend",
                        "173391af676924b4f4bb42b10a1c7294c1b3d299"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_spec in Hex_m.",
                        "VernacExtend",
                        "4ef473a240887303451fc63e01d007eaf68e8fc5"
                    ]
                },
                {
                    "command": [
                        "case: (Hex_n (pos_div_2 (pos_div_2 eps))) => {Hex_n} /= dn Hex_n.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Hex_m (pos_div_2 (pos_div_2 eps))) => {Hex_m} /= dm Hex_m.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Ho x Hx) => {Ho} d0 Ho.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "set y := x + Rmin (Rmin dn dm) d0 / 2.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "have Hd : 0 < Rmin (Rmin dn dm) d0 / 2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
                    ]
                },
                {
                    "command": [
                        "apply Rmin_case ; [ | by apply d0].",
                        "VernacExtend",
                        "cc49ee65df2ce00340433abdbb22713454b7fb2d"
                    ]
                },
                {
                    "command": [
                        "apply Rmin_case ; [ by apply dn | by apply dm].",
                        "VernacExtend",
                        "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
                    ]
                },
                {
                    "command": [
                        "exact: Rlt_R0_R2.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "have Hy : Rabs (y - x) < d0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /y ; ring_simplify ((x + Rmin (Rmin dn dm) d0 / 2) - x).",
                        "VernacExtend",
                        "e658f630193b4d00129d641036c82dd9479aa178"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_pos_eq _ (Rlt_le _ _ Hd)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "generalize (Rmin_r (Rmin dn dm) d0).",
                        "VernacExtend",
                        "75d1c2d5aa239915169c49a9c2cfa5ca0f09a892"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "move : (Ho y Hy) => {Ho Hy} Hy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "replace (ln - lm) with (- (fn n y - ln) + (fn m y - lm) + (fn n y - fn m y)) by ring.",
                        "VernacExtend",
                        "9af514d4ad4268d5cebca6de334a4ea0b886ec01"
                    ]
                },
                {
                    "command": [
                        "rewrite (double_var eps) ; apply Rle_lt_trans with (1 := Rabs_triang _ _), Rplus_lt_compat.",
                        "VernacExtend",
                        "86d2d02d04ebda6e19abd54137b6ae4e3462b6ab"
                    ]
                },
                {
                    "command": [
                        "rewrite (double_var (eps/2)) ; apply Rle_lt_trans with (1 := Rabs_triang _ _), Rplus_lt_compat.",
                        "VernacExtend",
                        "86d2d02d04ebda6e19abd54137b6ae4e3462b6ab"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Ropp ; apply Hex_n.",
                        "VernacExtend",
                        "a43e388b3f8527646a168a9ab6f4de1cc2f17d1b"
                    ]
                },
                {
                    "command": [
                        "rewrite /y /ball /= /AbsRing_ball /= /minus /plus /opp /abs /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring_simplify ((x + Rmin (Rmin dn dm) d0 / 2) + - x).",
                        "VernacExtend",
                        "44adbd53cb3fdc5d549a0716f695070d16ec6232"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_pos_eq _ (Rlt_le _ _ Hd)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "generalize (Rmin_l (Rmin dn dm) d0) (Rmin_l dn dm).",
                        "VernacExtend",
                        "f00a974ea94fec331d8170533f6d3688427308fd"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq, Rlt_gt, Rminus_lt_0.",
                        "VernacExtend",
                        "22c20e28969426e95bad8cb0de431b3b31dd0189"
                    ]
                },
                {
                    "command": [
                        "rewrite /y ; by ring_simplify ((x + Rmin (Rmin dn dm) d0 / 2) - x).",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "apply Hex_m.",
                        "VernacExtend",
                        "4c1158ef2f75338f6fe5ec4b21f44e62b3a2cefb"
                    ]
                },
                {
                    "command": [
                        "rewrite /y /ball /= /AbsRing_ball /= /minus /plus /opp /abs /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring_simplify ((x + Rmin (Rmin dn dm) d0 / 2) + - x).",
                        "VernacExtend",
                        "44adbd53cb3fdc5d549a0716f695070d16ec6232"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_pos_eq _ (Rlt_le _ _ Hd)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "generalize (Rmin_l (Rmin dn dm) d0) (Rmin_r dn dm).",
                        "VernacExtend",
                        "205678a6d7f5a6b5209e3c4adaf0f3c711881a85"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq, Rlt_gt, Rminus_lt_0.",
                        "VernacExtend",
                        "22c20e28969426e95bad8cb0de431b3b31dd0189"
                    ]
                },
                {
                    "command": [
                        "rewrite /y ; by ring_simplify ((x + Rmin (Rmin dn dm) d0 / 2) - x).",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "by apply Hfn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact: H.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_correct' in H.",
                        "VernacExtend",
                        "e10a8f5771016587c99cde2d7d7ba1c2d4f848e1"
                    ]
                },
                {
                    "command": [
                        "move: (real (Lim_seq (fun n : nat => real (Lim (fn n) x)))) H => l H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have H0 : is_lim (fun y : R => real (Lim_seq (fun n : nat => fn n y))) x l.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_spec.",
                        "VernacExtend",
                        "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in H.",
                        "VernacExtend",
                        "98ca61a735cdd6a0c67afeba86446058c65f378f"
                    ]
                },
                {
                    "command": [
                        "case: (Hfn (pos_div_2 (pos_div_2 eps))) => {Hfn} /= n1 Hfn.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (H (pos_div_2 (pos_div_2 eps))) => {H} /= n2 H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "set n := (n1 + n2)%nat.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "move: (fun y Hy => Hfn n (le_plus_l _ _) y Hy) => {Hfn} Hfn.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (H n (le_plus_r _ _)) => {H} H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (Hex x n Hx) => {Hex} Hex.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Lim_correct' in Hex.",
                        "VernacExtend",
                        "e560a7bd0970a790fdc19fbaef7a116c4c97834a"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_spec in Hex.",
                        "VernacExtend",
                        "9363dd3ab37c0b2665ef5f9fbff93169f04d4022"
                    ]
                },
                {
                    "command": [
                        "case: (Hex (pos_div_2 eps)) => {Hex} /= d1 Hex.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Ho x Hx) => {Ho} /= d0 Ho.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have Hd : 0 < Rmin d0 d1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply Rmin_case ; [by apply d0 | by apply d1].",
                        "VernacExtend",
                        "32103e3944eac281e2a8bd41754ce4ebc5cc9563"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ Hd) => /= y Hy Hxy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "replace (real (Lim_seq (fun n0 : nat => fn n0 y)) - l) with ((real (Lim (fn n) x) - l) - (fn n y - real (Lim_seq (fun n : nat => fn n y))) + (fn n y - real (Lim (fn n) x))) by ring.",
                        "VernacExtend",
                        "158f8908a00310ecc0d2c5b326269288adb30235"
                    ]
                },
                {
                    "command": [
                        "rewrite (double_var eps) ; apply Rle_lt_trans with (1 := Rabs_triang _ _), Rplus_lt_compat.",
                        "VernacExtend",
                        "86d2d02d04ebda6e19abd54137b6ae4e3462b6ab"
                    ]
                },
                {
                    "command": [
                        "rewrite (double_var (eps/2)) ; apply Rle_lt_trans with (1 := Rabs_triang _ _), Rplus_lt_compat.",
                        "VernacExtend",
                        "86d2d02d04ebda6e19abd54137b6ae4e3462b6ab"
                    ]
                },
                {
                    "command": [
                        "exact: H.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Ropp ; apply Hfn.",
                        "VernacExtend",
                        "44fe2e4642533f9ba5739a1a6f9af305a1bb832a"
                    ]
                },
                {
                    "command": [
                        "by apply Ho, Rlt_le_trans with (1 := Hy), Rmin_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Hex.",
                        "VernacExtend",
                        "0626b143f310ba29c3689980df03ba1efdab98c5"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le_trans with (1 := Hy), Rmin_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exact: Hxy.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by exists l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace l with (real l) by auto.",
                        "VernacExtend",
                        "86f98225f6d2e8f866ff6076f31a2c91ae379e9a"
                    ]
                },
                {
                    "command": [
                        "by apply sym_eq, (f_equal real), is_lim_unique.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CVU_cont_open",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "move => Ho Hfn Hc x Hx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (fun H => CVU_limits_open fn D Ho Hfn H x Hx) => [{x Hx} x n Hx | Hex_s [Hex_f Heq]].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (fn n x).",
                        "VernacExtend",
                        "659181ac409112ecc54f9e28cd09922263be250b"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_spec.",
                        "VernacExtend",
                        "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
                    ]
                },
                {
                    "command": [
                        "intros eps.",
                        "VernacExtend",
                        "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
                    ]
                },
                {
                    "command": [
                        "case: (Hc n x Hx eps (cond_pos eps)) => {Hc} d [Hd Hc].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal d Hd) => /= y Hy Hxy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply (Hc y).",
                        "VernacExtend",
                        "33eb163adad3f0b4eaf08af6f53d2f3fe948e7e0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact: I.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "by apply sym_not_eq, Hxy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exact: Hy.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "apply Lim_correct' in Hex_f.",
                        "VernacExtend",
                        "52cb47afb652917d39b4190a136a6aa0e84f937f"
                    ]
                },
                {
                    "command": [
                        "rewrite -Heq in Hex_f => {Heq}.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "replace (Lim_seq (fun n : nat => real (Lim (fn n) x))) with (Lim_seq (fun n : nat => (fn n) x)) in Hex_f.",
                        "VernacExtend",
                        "1c51057fb66c3b9512d164584ce22ea7cdbbb58b"
                    ]
                },
                {
                    "command": [
                        "move => e He.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_spec in Hex_f.",
                        "VernacExtend",
                        "b4e7557822fff304c286cdc94cd051d6aa2b48f0"
                    ]
                },
                {
                    "command": [
                        "case: (Hex_f (mkposreal e He)) => {Hex_f} /= delta Hex_f.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists delta ; split => [ | y [[_ Hxy] Hy]].",
                        "VernacExtend",
                        "a38e9d7bf18a3a116c39588df52dcd5743c7d447"
                    ]
                },
                {
                    "command": [
                        "by apply delta.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Hex_f.",
                        "VernacExtend",
                        "c16ffdb43eb3b763693547f3ab7645e77759b572"
                    ]
                },
                {
                    "command": [
                        "exact: Hy.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "by apply sym_not_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_ext => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "replace (fn n x) with (real (fn n x)) by auto.",
                        "VernacExtend",
                        "aff37ab73a1615543f926b1864a7a9ec5c24796a"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq, f_equal, is_lim_unique.",
                        "VernacExtend",
                        "9f21e9fb5f04ee133af541d009dba531c934be02"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_spec.",
                        "VernacExtend",
                        "6a433fd37843c6d7f4bc73e6cfa945c5042b65eb"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Hc n x Hx eps (cond_pos eps)) => {Hc} d [Hd Hc].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal d Hd) => /= y Hy Hxy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply (Hc y).",
                        "VernacExtend",
                        "33eb163adad3f0b4eaf08af6f53d2f3fe948e7e0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact: I.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "by apply sym_not_eq, Hxy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exact: Hy.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Dini",
            "line_nb": 508,
            "steps": [
                {
                    "command": [
                        "set AB := fun x => a <= x <= b.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "set f : R -> R := (fun y : R => Lim_seq (fun n : nat => fn n y)).",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "move => Hab Hcvs Cfn Cf Hfn.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have CUf : uniform_continuity f AB.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply Heine.",
                        "VernacExtend",
                        "29d43f1fe57c1a4dca0dd136cc106f65104ece63"
                    ]
                },
                {
                    "command": [
                        "by apply compact_P3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Cf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff H : forall eps : posreal, exists N : nat, forall n : nat, (N <= n)%nat -> forall x : R, AB x -> Rabs (fn n x - Lim_seq (fun n0 : nat => fn n0 x)) < 5 * eps.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "replace (pos eps) with (5 * (eps / 5)) by field.",
                        "VernacExtend",
                        "50edefed811b8e1d12476845634bfd1213558e81"
                    ]
                },
                {
                    "command": [
                        "suff He : 0 < eps / 5.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by apply (H (mkposreal _ He)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
                    ]
                },
                {
                    "command": [
                        "by apply eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "repeat (apply Rplus_lt_0_compat || apply Rmult_lt_0_compat) ; apply Rlt_0_1.",
                        "VernacExtend",
                        "4b36df50b6032fe41628feb4928419fa1387cdbe"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (CUf eps) => {CUf} eta CUf.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (interval_finite_subdiv_between a b (pos_div_2 eta) (Rlt_le _ _ Hab)).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (interval_finite_subdiv a b (pos_div_2 eta) (Rlt_le _ _ Hab)) => a_ Ha_ /= Ha_0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have : exists N, forall n i, (N <= n)%nat -> (i < seq.size a_)%nat -> Rabs (fn n (seq.nth 0 a_ i) - f (seq.nth 0 a_ i)) < eps.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: a_ Ha_ Ha_0 => [ | a0 a_] Ha_ /= Ha_0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "contradict Hab.",
                        "VernacExtend",
                        "d531e774813f18ac4f672077f0bb7af0e9083a7d"
                    ]
                },
                {
                    "command": [
                        "rewrite -(proj1 Ha_) -(proj1 (proj2 Ha_)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_irrefl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: (a_) (a0) Ha_0 => /= [ | x1 l IH] x0 Hl.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "move: (Hcvs x0 (Hl O (lt_n_Sn _))) ; move/Lim_seq_correct' => {Hcvs} Hcvs.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in Hcvs.",
                        "VernacExtend",
                        "738f75e7645d402f03353a2bc943b70f258e4179"
                    ]
                },
                {
                    "command": [
                        "case: (Hcvs eps) => {Hcvs} N Hcvs.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n i Hn Hi.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: i Hi => /= [ | i] Hi.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Hcvs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply lt_S_n, lt_n_O in Hi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (IH x1).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move => i Hi.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply (Hl (S i)), lt_n_S.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => N0 HN0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (Hcvs x0 (Hl O (lt_O_Sn _))) ; move/Lim_seq_correct' => {Hcvs} Hcvs.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in Hcvs.",
                        "VernacExtend",
                        "738f75e7645d402f03353a2bc943b70f258e4179"
                    ]
                },
                {
                    "command": [
                        "case: (Hcvs eps) => {Hcvs} N Hcvs.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (N + N0)%nat => n i Hn Hi.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: i Hi => /= [ | i ] Hi.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Hcvs ; by intuition.",
                        "VernacExtend",
                        "12ab6dca5492e5509a214a75c283d08dcacb2556"
                    ]
                },
                {
                    "command": [
                        "apply HN0 ; by intuition.",
                        "VernacExtend",
                        "dc0eba52e2ea7a9fe9471f5c1ba7ecd10d550bc1"
                    ]
                },
                {
                    "command": [
                        "case => N HN.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have : exists i, (S i < seq.size a_)%nat /\\ seq.nth 0 a_ i <= x <= seq.nth 0 a_ (S i).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: a_ Ha_ Ha_0 {HN} => [ | a0 a_] Ha_ /= Ha_0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "contradict Hab.",
                        "VernacExtend",
                        "d531e774813f18ac4f672077f0bb7af0e9083a7d"
                    ]
                },
                {
                    "command": [
                        "rewrite -(proj1 Ha_) -(proj1 (proj2 Ha_)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_irrefl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: a_ Ha_ Ha_0 => [ | a1 a_] Ha_ /= Ha_0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "contradict Hab.",
                        "VernacExtend",
                        "d531e774813f18ac4f672077f0bb7af0e9083a7d"
                    ]
                },
                {
                    "command": [
                        "rewrite -(proj1 Ha_) -(proj1 (proj2 Ha_)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_irrefl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(proj1 Ha_) in AB Hcvs CUf Hx Hab Cfn Cf Hfn Ha_0 |- * ; case: Ha_ => {a} _ Ha_.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite -(proj1 Ha_) in AB Hcvs CUf Hx Hab Cfn Cf Hfn Ha_0 |- * ; case: Ha_ => {b} _ Ha_.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "clear Hcvs CUf ; revert AB Hx ; elim: (a_) (a0) (a1) => /= [ | x2 l IH] x0 x1 Hx.",
                        "VernacExtend",
                        "deca708d686e3d488c69696a761f66a4f125748f"
                    ]
                },
                {
                    "command": [
                        "exists O ; split => /=.",
                        "VernacExtend",
                        "9745670a6bf6e931ffb9bf90a1655c6cd9daf2fe"
                    ]
                },
                {
                    "command": [
                        "by apply lt_n_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (Rlt_le_dec x x1) => Hx'.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists O ; split => /=.",
                        "VernacExtend",
                        "9745670a6bf6e931ffb9bf90a1655c6cd9daf2fe"
                    ]
                },
                {
                    "command": [
                        "by apply lt_n_S, lt_O_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split ; intuition.",
                        "VernacExtend",
                        "ad92f41c7c6120efbfc528c4c895eac1600e6297"
                    ]
                },
                {
                    "command": [
                        "case: (IH x1 x2).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by intuition.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => i [Hi Hx0].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (S i) ; by intuition.",
                        "VernacExtend",
                        "be2cd684b4a8bb3f7056fe93397d9362a5a89187"
                    ]
                },
                {
                    "command": [
                        "case => i [Hi Hx'].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "replace (fn n x - Lim_seq (fun n0 : nat => fn n0 x)) with ((f (seq.nth 0 a_ i) - f x) + (fn n x - f (seq.nth 0 a_ i))) by (rewrite /f ; ring).",
                        "VernacExtend",
                        "9d5a9f310ba1f554c9dee07b84884b10f6b4412e"
                    ]
                },
                {
                    "command": [
                        "replace (5 * eps) with (eps + 4 * eps) by ring.",
                        "VernacExtend",
                        "e6ace48d8bdd7d2013c996cf9c73e47ba37d88fe"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
                        "VernacExtend",
                        "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat.",
                        "VernacExtend",
                        "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
                    ]
                },
                {
                    "command": [
                        "apply CUf.",
                        "VernacExtend",
                        "355fc9a6bff8e18155008ebf11814e22fdf88466"
                    ]
                },
                {
                    "command": [
                        "apply Ha_0 ; by intuition.",
                        "VernacExtend",
                        "33bb9ba97bcb8670de06114475e11a1d78bda447"
                    ]
                },
                {
                    "command": [
                        "by apply Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -Rabs_Ropp Ropp_minus_distr' Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (seq.nth 0 a_ (S i) - seq.nth 0 a_ i).",
                        "VernacExtend",
                        "daa8d436fc38abb48bf9ea91ef7d4f4671fa3cd9"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
                    ]
                },
                {
                    "command": [
                        "by apply Hx'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (eta/2).",
                        "VernacExtend",
                        "561b174dab9d9287f827bb3f46a18e70e498d979"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus_l.",
                        "VernacExtend",
                        "fd70e10454fdcda9a9ecb4708f46b7de8d290b92"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Ha_.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; field_simplify ; rewrite Rdiv_1.",
                        "VernacExtend",
                        "5e1bb58e1096013357ba0c7fcd2c17a152059b8c"
                    ]
                },
                {
                    "command": [
                        "by apply is_pos_div_2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus_r ; rewrite Rplus_0_l.",
                        "VernacExtend",
                        "4d8349aaad59098819ddd8a7ab161244b9f45799"
                    ]
                },
                {
                    "command": [
                        "by apply Hx'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace (fn n x - f (seq.nth 0 a_ i)) with ((fn n (seq.nth 0 a_ i) - f (seq.nth 0 a_ i)) + (fn n x - fn n (seq.nth 0 a_ i))) by ring.",
                        "VernacExtend",
                        "576aed1263700a819da992cb2a797fd4b0e9590a"
                    ]
                },
                {
                    "command": [
                        "replace (4 * eps) with (eps + 3 * eps) by ring.",
                        "VernacExtend",
                        "eaedfcaab876f376fd46aacefef3d2873af7f16d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
                        "VernacExtend",
                        "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat.",
                        "VernacExtend",
                        "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
                    ]
                },
                {
                    "command": [
                        "apply HN ; by intuition.",
                        "VernacExtend",
                        "ba8439fd972747af38e10ff1e050ae8995a47c31"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (fn n (seq.nth 0 a_ (S i)) - fn n (seq.nth 0 a_ i)).",
                        "VernacExtend",
                        "b9eb40e62dd9c559e6fa42c4fbe9dae46bb6f0fc"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
                    ]
                },
                {
                    "command": [
                        "apply Hfn.",
                        "VernacExtend",
                        "3401829d78adbfb29f7b4f5e3498e160b8b3f769"
                    ]
                },
                {
                    "command": [
                        "by apply Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hx'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Ha_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace (fn n (seq.nth 0 a_ (S i)) - fn n (seq.nth 0 a_ i)) with ((fn n (seq.nth 0 a_ (S i)) - f (seq.nth 0 a_ (S i))) - (fn n (seq.nth 0 a_ i) - f (seq.nth 0 a_ i)) + (f (seq.nth 0 a_ (S i)) - f (seq.nth 0 a_ i))) by ring.",
                        "VernacExtend",
                        "208c8805b49758b2414058cc0efcd08b29235102"
                    ]
                },
                {
                    "command": [
                        "replace (3 * eps) with ((eps + eps) + eps) by ring.",
                        "VernacExtend",
                        "eceeba7c025fad3f403dca33c175b30e1e228bf4"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rle_abs _).",
                        "VernacExtend",
                        "135a8d900205d7b612754e3cd7bd2bca409d80e3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
                        "VernacExtend",
                        "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat.",
                        "VernacExtend",
                        "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
                        "VernacExtend",
                        "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat.",
                        "VernacExtend",
                        "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
                    ]
                },
                {
                    "command": [
                        "apply HN ; by intuition.",
                        "VernacExtend",
                        "ba8439fd972747af38e10ff1e050ae8995a47c31"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Ropp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply HN ; by intuition.",
                        "VernacExtend",
                        "ba8439fd972747af38e10ff1e050ae8995a47c31"
                    ]
                },
                {
                    "command": [
                        "apply CUf.",
                        "VernacExtend",
                        "355fc9a6bff8e18155008ebf11814e22fdf88466"
                    ]
                },
                {
                    "command": [
                        "apply Ha_0 ; by intuition.",
                        "VernacExtend",
                        "33bb9ba97bcb8670de06114475e11a1d78bda447"
                    ]
                },
                {
                    "command": [
                        "apply Ha_0 ; by intuition.",
                        "VernacExtend",
                        "33bb9ba97bcb8670de06114475e11a1d78bda447"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (eta/2).",
                        "VernacExtend",
                        "561b174dab9d9287f827bb3f46a18e70e498d979"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus_l.",
                        "VernacExtend",
                        "fd70e10454fdcda9a9ecb4708f46b7de8d290b92"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Ha_.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; field_simplify ; rewrite Rdiv_1.",
                        "VernacExtend",
                        "5e1bb58e1096013357ba0c7fcd2c17a152059b8c"
                    ]
                },
                {
                    "command": [
                        "by apply is_pos_div_2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus_r ; rewrite Rplus_0_l.",
                        "VernacExtend",
                        "4d8349aaad59098819ddd8a7ab161244b9f45799"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with x ; apply Hx'.",
                        "VernacExtend",
                        "a86a10cb48c3268c2c492812219c849f8722cb18"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus_r ; rewrite Rplus_0_l.",
                        "VernacExtend",
                        "4d8349aaad59098819ddd8a7ab161244b9f45799"
                    ]
                },
                {
                    "command": [
                        "apply Hfn.",
                        "VernacExtend",
                        "3401829d78adbfb29f7b4f5e3498e160b8b3f769"
                    ]
                },
                {
                    "command": [
                        "apply Ha_0 ; by intuition.",
                        "VernacExtend",
                        "33bb9ba97bcb8670de06114475e11a1d78bda447"
                    ]
                },
                {
                    "command": [
                        "by apply Hx'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CVN_CVU_r",
            "line_nb": 637,
            "steps": [
                {
                    "command": [
                        "case => An [l [H H0]] x Hx.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "assert (H1 : ex_series An).",
                        "VernacExtend",
                        "5b6f7cc5d0948a90f213c2043cd19442ddad5d70"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_Reals_1.",
                        "VernacExtend",
                        "442f938bfb081cc6fcc8a6d8c36db91cb8859ca6"
                    ]
                },
                {
                    "command": [
                        "exists l => e He.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (H e He) => {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 An n) with (sum_f_R0 (fun k : nat => Rabs (An k)) n).",
                        "VernacExtend",
                        "4f83ce6c791647002827d8be84b7843eec44d465"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: n {Hn} => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos_eq.",
                        "VernacExtend",
                        "84ed980db60aa71de2fd237885e8f143313c5575"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Rabs (fn O 0)).",
                        "VernacExtend",
                        "1cd0440b390cc8850bf7364b6e67c7bebb851ff4"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply H0 ; rewrite /Boule Rminus_0_r Rabs_R0 ; by apply r.",
                        "VernacExtend",
                        "36691ff0f2aa9f1bf72e21f6b65aa7e24b6ec3e6"
                    ]
                },
                {
                    "command": [
                        "rewrite IH Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Rabs (fn (S n) 0)).",
                        "VernacExtend",
                        "cdc520c710c651f8f0dc52fd430c83a9b4c9482c"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply H0 ; rewrite /Boule Rminus_0_r Rabs_R0 ; by apply r.",
                        "VernacExtend",
                        "36691ff0f2aa9f1bf72e21f6b65aa7e24b6ec3e6"
                    ]
                },
                {
                    "command": [
                        "have H2 : is_lim_seq (fun n => Series (fun k => An (n + k)%nat)) 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_incr_1.",
                        "VernacExtend",
                        "8feb5d88cd2a761705b607c724cf7e02bdc1c5dc"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_ext with (fun n => Series An - sum_f_R0 An n).",
                        "VernacExtend",
                        "133c9bad481a9fd955b8cd493d2c7d9d3aba5528"
                    ]
                },
                {
                    "command": [
                        "move => n ; rewrite (Series_incr_n An (S n)) /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "by apply lt_O_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace (Finite 0) with (Rbar_plus (Series An) (- Series An)) by (simpl ; apply Rbar_finite_eq ; ring).",
                        "VernacExtend",
                        "d27d2504476e090f4d1bd8886144211db8821bdf"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_plus _ _ (Series An) (-Series An)).",
                        "VernacExtend",
                        "094bb2df742a54d541e6bfcb9115cf2f782d6de7"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace (Finite (-Series An)) with (Rbar_opp (Series An)) by (simpl ; apply Rbar_finite_eq ; ring).",
                        "VernacExtend",
                        "a600b64c788a96e0860e4fa0b8025828bec0bf5a"
                    ]
                },
                {
                    "command": [
                        "apply -> is_lim_seq_opp.",
                        "VernacExtend",
                        "b7caa52eb7f4d0534a6e6e2db4b8647bb39b1d68"
                    ]
                },
                {
                    "command": [
                        "rewrite /Series ; apply (is_lim_seq_ext (sum_n (fun k => An k))).",
                        "VernacExtend",
                        "33a08b91ec5d6edc87ab72ac6d7dc69f3b9a138f"
                    ]
                },
                {
                    "command": [
                        "elim => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_O.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_Sn IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_ext with (sum_n An).",
                        "VernacExtend",
                        "633e9461df9a65221aa146e30cb1f4b7f31fbdc6"
                    ]
                },
                {
                    "command": [
                        "move => n ; by rewrite sum_n_Reals.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_correct', H1.",
                        "VernacExtend",
                        "d4a9842f069b2669b9f7907e9beb29e40cd6cab0"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "assert (H3 : forall y, Boule 0 r y -> ex_series (fun n => Rabs (fn n y))).",
                        "VernacExtend",
                        "55e6128597493eaba6c23e7bdf3d00c8090b979b"
                    ]
                },
                {
                    "command": [
                        "move => y Hy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: H1 ; apply @ex_series_le.",
                        "VernacExtend",
                        "f32cfb832f32f22ba8aab830a565d0ef03bc9055"
                    ]
                },
                {
                    "command": [
                        "move => n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /norm /= /abs /= Rabs_Rabsolu.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 in Hx.",
                        "VernacExtend",
                        "066dabe78527eb26f2374cdfb37a5a5e620bb500"
                    ]
                },
                {
                    "command": [
                        "set r0 := mkposreal _ Hx.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "exists r0 => e He ; set eps := mkposreal e He.",
                        "VernacExtend",
                        "c9a8452e0e06a4c3ac19bcd1b0a42d11d8e194b2"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in H2.",
                        "VernacExtend",
                        "a0756b94bf90a63fcb6d04b177a110b51f617dd3"
                    ]
                },
                {
                    "command": [
                        "case: (H2 eps) => {H2} N H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n y Hn Hy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have H4 : Boule 0 r y.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /Boule /= in Hy |- *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rabs_triang_inv _ _) in Hy.",
                        "VernacExtend",
                        "483d6452064fee7e0a1998c10618c79756c11d26"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rminus ?(Rplus_comm _ (-Rabs x)) in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l in Hy.",
                        "VernacExtend",
                        "eff6468a4f4e1be1ab3f699e261815140dca4869"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rminus_0_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := H2 (S n) (le_trans _ _ _ (le_n_Sn _) (le_n_S _ _ Hn))).",
                        "VernacExtend",
                        "7aa9d5e7100b5cda87e33aa491f290b470fb1bed"
                    ]
                },
                {
                    "command": [
                        "rewrite Rminus_0_r /SP.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (Series_incr_n (fun k : nat => fn k y) (S n)) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring_simplify (sum_f_R0 (fun k : nat => fn k y) n + Series (fun k : nat => fn (S (n + k)) y) - sum_f_R0 (fun k : nat => fn k y) n).",
                        "VernacExtend",
                        "29357c45aa921b139f2e06f2476cfdafd571a630"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Rle_abs _).",
                        "VernacExtend",
                        "72c9ed1eeb9d16ecf7ec04b7601241cd3efc9de9"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Series (fun k : nat => Rabs (fn (S (n + k)) y))).",
                        "VernacExtend",
                        "53ab402139276250e6cd3b3151c329578b6faace"
                    ]
                },
                {
                    "command": [
                        "apply Series_Rabs.",
                        "VernacExtend",
                        "01ff6556aa389edef7b96264ca598d1173b7b0c0"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_ext with (fun n0 : nat => Rabs (fn (S (n) + n0)%nat y)).",
                        "VernacExtend",
                        "e25ffce66f17290041e5d7e533527c8d1dc44890"
                    ]
                },
                {
                    "command": [
                        "move => n0 ; by rewrite plus_Sn_m.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "apply (ex_series_incr_n (fun n => Rabs (fn n y))).",
                        "VernacExtend",
                        "e7a7da45c7806e51e4a7cab3b1e004e4c3e668f6"
                    ]
                },
                {
                    "command": [
                        "by apply H3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Series_le.",
                        "VernacExtend",
                        "383278f0d81c1224e87394dd98a1aaf5fc5d8390"
                    ]
                },
                {
                    "command": [
                        "move => k ; split.",
                        "VernacExtend",
                        "22de1c5faad21de60fd48f882c8175e01347018a"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_ext with (fun k : nat => An (S n + k)%nat).",
                        "VernacExtend",
                        "8ec99369f04102b8ac41bb73b191ac8847ff31fa"
                    ]
                },
                {
                    "command": [
                        "move => k ; by rewrite plus_Sn_m.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "by apply ex_series_incr_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply lt_O_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_Rabs.",
                        "VernacExtend",
                        "bb36e3f02231f116fa9b6505d87f742c3a7c52aa"
                    ]
                },
                {
                    "command": [
                        "by apply H3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}