{
    "filename": "theories/PSeries.v",
    "coq_project": "coquelicot",
    "vernac_cmds": [
        [
            "Require Import Reals Even Div2 Omega Psatz.",
            "VernacRequire",
            "e55e90701014cb88889a7fcff91903a59ffe215c"
        ],
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "Require Import Rcomplements Rbar Lim_seq Lub Hierarchy.",
            "VernacRequire",
            "b214639c8ddf55c30cfdfe022933d0177b012e27"
        ],
        [
            "Require Import Continuity Derive Seq_fct Series.",
            "VernacRequire",
            "9d70a658b5101d4710413cc24c0a50dfaea0f8a7"
        ],
        [
            "Section Definitions.",
            "VernacBeginSection",
            "44c8aeee6f7e234b1ae876a1cda441d352768d1b"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Definition is_pseries (a : nat -> V) (x:K) (l : V) := is_series (fun k => scal (pow_n x k) (a k)) l.",
            "VernacDefinition",
            "7a0de66f8d46df555d9e89882db42b01c723c278"
        ],
        [
            "Definition ex_pseries (a : nat -> V) (x : K) := ex_series (fun k => scal (pow_n x k) (a k)).",
            "VernacDefinition",
            "9abd7b37d89cec1ad03c8e6ac4ecafcb5078807e"
        ],
        [
            "End Definitions.",
            "VernacEndSegment",
            "a9ff902ce1bf921ade03bc4535b4de21f2fcc02c"
        ],
        [
            "Definition PSeries (a : nat -> R) (x : R) : R := Series (fun k => a k * x ^ k).",
            "VernacDefinition",
            "784c3854555e0dfd09ebb12f867bb3d699d8bc4c"
        ],
        [
            "Lemma ex_pseries_dec {V : NormedModule R_AbsRing} (a : nat -> R) (x : R) : {ex_pseries a x} + {~ ex_pseries a x}.",
            "VernacStartTheoremProof",
            "9841709b6db621461c462bdbed6fbbd49d200001"
        ],
        [
            "apply ex_series_dec.",
            "VernacExtend",
            "6b1eb0f7fa0acba05e0eb5f1f5697b4be94a1820"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_pseries_R (a : nat -> R) (x l : R) : is_pseries a x l <-> is_series (fun n : nat => a n * x ^ n) l.",
            "VernacStartTheoremProof",
            "52df4848cfd3760c23754add1b92df3d11184d70"
        ],
        [
            "split ; apply is_series_ext ; intros n ; rewrite pow_n_pow /= ; apply Rmult_comm.",
            "VernacExtend",
            "70cd72640dd62fa8b6115c5a283265b2f336d4ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_R (a : nat -> R) (x : R) : ex_pseries a x <-> ex_series (fun n : nat => a n * x ^ n).",
            "VernacStartTheoremProof",
            "7bd3393fc3f306d75ee5f7c550d006e0add11bda"
        ],
        [
            "split ; apply ex_series_ext ; intros n ; rewrite pow_n_pow /= ; apply Rmult_comm.",
            "VernacExtend",
            "2f96adabd653b7633aeee8e5cfe12b897bb311f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_eq (a : nat -> R) (x : R) : PSeries a x = Series (fun k => scal (pow_n x k) (a k)).",
            "VernacStartTheoremProof",
            "f02786614287eb4526d90e1cf6b25da12c0c1933"
        ],
        [
            "apply Series_ext.",
            "VernacExtend",
            "fdbcb56c0988c866fe0a698401ce4bfd1c6b2a6b"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_1 (a : nat -> R) : PSeries a 1 = Series a.",
            "VernacStartTheoremProof",
            "ce0a09346c6086a11bc682da8fd6cc7e61e8bd98"
        ],
        [
            "apply Series_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite pow1 Rmult_1_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_1 (a : nat -> R) : ex_pseries a 1 <-> ex_series a.",
            "VernacStartTheoremProof",
            "8d6ef4924336f1fc9e88f22a0217e1db02786450"
        ],
        [
            "assert (forall n : nat, scal (pow_n 1 n) (a n) = a n).",
            "VernacExtend",
            "694a8acdc1dbb2f4442300151a8557438648a6dc"
        ],
        [
            "now intros n ; rewrite pow_n_pow pow1 scal_one.",
            "VernacExtend",
            "1e663c7e45fa9b52250758481286af9621172168"
        ],
        [
            "split ; apply ex_series_ext => n ; by rewrite H.",
            "VernacExtend",
            "fc67683ba0e0581ebff940ac5e88f19cb87bb912"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_pseries_unique (a : nat -> R) (x l : R) : is_pseries a x l -> PSeries a x = l.",
            "VernacStartTheoremProof",
            "14a5e3f7a079adb27afdca84bea2217b4eb9787e"
        ],
        [
            "move => Ha; rewrite PSeries_eq.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply is_series_unique.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_correct (a : nat -> R) (x : R) : ex_pseries a x -> is_pseries a x (PSeries a x).",
            "VernacStartTheoremProof",
            "b952eb7f10b7091eb890ef553919d7b2b818fbb1"
        ],
        [
            "move => Ha; rewrite PSeries_eq.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply Series_correct.",
            "VernacExtend",
            "fdea1c2ad906bf31eb70da24fe1e77d127b4cc6d"
        ],
        [
            "by apply Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_pseries_Reals (a : nat -> R) (x l : R) : is_pseries a x l <-> Pser a x l.",
            "VernacStartTheoremProof",
            "e8de404a622f45ee7ec6fd207a5780dd8426388a"
        ],
        [
            "split => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => e He ; set eps := mkposreal e He.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "apply (is_lim_seq_spec _ l) in H.",
            "VernacExtend",
            "8d7a1e99e945e93ea5bf25bace819453d8c0d73a"
        ],
        [
            "case: (H eps) => {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite <- sum_n_Reals.",
            "VernacExtend",
            "0489649d8f03c9e398e73562605a58fa65a0f9e9"
        ],
        [
            "rewrite (sum_n_ext _ (fun n0 : nat => scal (pow_n x n0) (a n0))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros k; rewrite pow_n_pow /=; apply Rmult_comm.",
            "VernacExtend",
            "b29439a08b50f87689102dd9fb58a0f705c040cc"
        ],
        [
            "apply (is_lim_seq_spec _ l).",
            "VernacExtend",
            "b647a8fffd8d7d14ce42956445e40a177c1ec806"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (H eps (cond_pos eps)) => {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (sum_n_ext _ (fun n0 : nat => a n0 * x ^ n0)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite sum_n_Reals.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "intros; now rewrite Rmult_comm pow_n_pow.",
            "VernacExtend",
            "27f8e9c71a88d3089e595bf6a7cf07648d0511e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Extensionality.",
            "VernacBeginSection",
            "fef2c0825b072d51bff37065769e1dd7dcbe3238"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_pseries_ext (a b : nat -> V) (x : K) (l:V) : (forall n, a n = b n) -> (is_pseries a x l) -> is_pseries b x l.",
            "VernacStartTheoremProof",
            "b5304492ee9b1230a2554f08422c8db08426b1de"
        ],
        [
            "move => Heq Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_series_ext with (2 := Ha).",
            "VernacExtend",
            "85bc57f59cfe16064154e2484d7bfeb2f1f687f9"
        ],
        [
            "move => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite Heq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_ext (a b : nat -> V) (x : K) : (forall n, a n = b n) -> ex_pseries a x -> ex_pseries b x.",
            "VernacStartTheoremProof",
            "0795633be5f5d082b2bddb3d9dc5286be20bec63"
        ],
        [
            "move => Heq [l Ha].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists l ; by apply is_pseries_ext with a.",
            "VernacExtend",
            "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Extensionality.",
            "VernacEndSegment",
            "35bfb1e3b301b5c235f0f3e32da85761f43fe8ae"
        ],
        [
            "Lemma PSeries_ext (a b : nat -> R) (x : R) : (forall n, a n = b n) -> PSeries a x = PSeries b x.",
            "VernacStartTheoremProof",
            "688b9392f48a7c39ca202b55ade48d3fc6f84432"
        ],
        [
            "move => Heq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Series_ext.",
            "VernacExtend",
            "fdbcb56c0988c866fe0a698401ce4bfd1c6b2a6b"
        ],
        [
            "move => n ; by rewrite Heq.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ConvergenceCircle.",
            "VernacBeginSection",
            "10ad003b8f89a6ecde60a3c5ff196555cd904ef4"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Lemma is_pseries_0 (a : nat -> V) : is_pseries a zero (a O).",
            "VernacStartTheoremProof",
            "4171b2cbf3794e6f6d19030241002a926769ec63"
        ],
        [
            "apply filterlim_ext with (fun _ => a O).",
            "VernacExtend",
            "9ff98011c821744f39066ba7375c8e6c9a4e6984"
        ],
        [
            "elim => [ | n IH] /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "now rewrite sum_O scal_one.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite sum_Sn -IH /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mult_zero_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now rewrite scal_zero_l plus_zero_r.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "apply filterlim_const.",
            "VernacExtend",
            "ff971edf84d1cf6e134869f4729acc40969816e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_0 (a : nat -> V) : ex_pseries a zero.",
            "VernacStartTheoremProof",
            "e982ace8e9af7b74c4176f889d0b9e8666b1f8ee"
        ],
        [
            "exists (a O) ; by apply is_pseries_0.",
            "VernacExtend",
            "405d9aac864fb4474ec0c66dc427190a225156db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ConvergenceCircle.",
            "VernacEndSegment",
            "5286d081e36ccfcf8feb4138629b18ada385031a"
        ],
        [
            "Lemma PSeries_0 (a : nat -> R) : PSeries a 0 = a O.",
            "VernacStartTheoremProof",
            "3ddde1b45324081bc2202805f02e3e69fc64c58e"
        ],
        [
            "rewrite PSeries_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_series_unique.",
            "VernacExtend",
            "660f382307748728e0c26076611874798d98173c"
        ],
        [
            "apply @is_pseries_0.",
            "VernacExtend",
            "6d1698ca6fd7f21b586123f202cd2547f5aab92f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition CV_disk (a : nat -> R) (r : R) := ex_series (fun n => Rabs (a n * r^n)).",
            "VernacDefinition",
            "38c8cee27a0841d5b7769abb460ba758e508ccf4"
        ],
        [
            "Lemma CV_disk_le (a : nat -> R) (r1 r2 : R) : Rabs r1 <= Rabs r2 -> CV_disk a r2 -> CV_disk a r1.",
            "VernacStartTheoremProof",
            "fbd88c9d3afd0178abb8022d254eb97559aa3e9e"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply @ex_series_le => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /norm /= /abs /= Rabs_Rabsolu.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?Rabs_mult ; apply Rmult_le_compat_l.",
            "VernacExtend",
            "375663c6fed9a1f68fc51b94c78b7fde5410ebc1"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -?RPow_abs ; apply pow_incr ; split.",
            "VernacExtend",
            "52f05baebd0e4f150ff5a199b280802f016b5b93"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_disk_correct (a : nat -> R) (x : R) : CV_disk a x -> ex_pseries a x.",
            "VernacStartTheoremProof",
            "068ec3c4ff8d37f80e994244a8739bcc5c251486"
        ],
        [
            "intros H; apply ex_series_Rabs.",
            "VernacExtend",
            "dcf1c1f3a14ef1442d3673eb381484a09c173efa"
        ],
        [
            "apply ex_series_ext with (2:=H).",
            "VernacExtend",
            "10d34e885aa14d6fc21fc996e1df1da508a72cdb"
        ],
        [
            "intros n; apply f_equal.",
            "VernacExtend",
            "ee3a32a73824daf08e1d34e091235f34b31a616f"
        ],
        [
            "now rewrite Rmult_comm pow_n_pow.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_disk_0 (a : nat -> R) : CV_disk a 0.",
            "VernacStartTheoremProof",
            "020391fa29fb2bfca70889fc42c73ef633c5297d"
        ],
        [
            "exists (Rabs (a O)).",
            "VernacExtend",
            "cecbad1e51a04b65cd3bac3ca80e939bb5a0007d"
        ],
        [
            "apply (is_lim_seq_ext (fun _ => Rabs (a O)) _ (Rabs (a O))).",
            "VernacExtend",
            "407e9ef327331b30290389cfe4b51ae544066f4f"
        ],
        [
            "elim => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite sum_O Rmult_1_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite sum_Sn /= Rmult_0_l Rmult_0_r Rabs_R0 /plus /= Rplus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_lim_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition CV_radius (a : nat -> R) : Rbar := Lub_Rbar (CV_disk a).",
            "VernacDefinition",
            "854c6a0116c11d195489506eab2761565de66929"
        ],
        [
            "Lemma CV_radius_ge_0 (a : nat -> R) : Rbar_le (Finite 0) (CV_radius a).",
            "VernacStartTheoremProof",
            "c97803a0c171a4f4a176145832bf8948900499c6"
        ],
        [
            "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar => /= l Hl.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply Hl, CV_disk_0.",
            "VernacExtend",
            "a418fcd8c6a34c9454635eaadced6a1337f37c61"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_bounded (a : nat -> R) : is_lub_Rbar (fun r => exists M, forall n, Rabs (a n * r ^ n) <= M) (CV_radius a).",
            "VernacStartTheoremProof",
            "2110a062886109eee7b4d58348203fa416e9ccaa"
        ],
        [
            "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar => cv /= [ub lub].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "move => r /= [M Hr].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have : forall y, Rabs y < Rabs r -> (CV_disk a) y.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => y Hy ; rewrite /CV_disk /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "set l := (Rabs (y / r)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "assert (ex_series (fun n => M * l ^ n)).",
            "VernacExtend",
            "90666e73b63502cdb13fb6d38ed9f34783cc07cb"
        ],
        [
            "apply ex_series_ext with (fun n : nat => scal M (l ^ n)).",
            "VernacExtend",
            "1f7f7c53864289fbe36fbffda88596c0cceea60d"
        ],
        [
            "by elim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: ex_series_scal_l.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply ex_series_geom.",
            "VernacExtend",
            "42ca9367d68e90085ba48aeadf26908e19826b86"
        ],
        [
            "rewrite /l Rabs_Rabsolu Rabs_div.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_div_l.",
            "VernacExtend",
            "4198c2770a4c425c9ede77a90e885e8d7fd9f290"
        ],
        [
            "apply Rle_lt_trans with (2 := Hy), Rabs_pos.",
            "VernacExtend",
            "397c71091265039982f50e03b78e437f7401c03f"
        ],
        [
            "by rewrite Rmult_1_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have H : (Rabs r <> 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rgt_not_eq, Rle_lt_trans with (2 := Hy), Rabs_pos.",
            "VernacExtend",
            "8512d8b8de8ad20e2b0b59491c85f33911206ddf"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "by rewrite H Rabs_R0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply @ex_series_le with (2:=H) => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /norm /= /abs /= Rabs_Rabsolu.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (Rabs (a n * y ^ n)) with (Rabs (a n * r ^ n) * l^n).",
            "VernacExtend",
            "01c8a8dd55214701e2ca12d23a658e541ac5cea3"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "apply pow_le ; by apply Rabs_pos.",
            "VernacExtend",
            "ad11a4559fc2ff9977e8433a97640ac240188a32"
        ],
        [
            "by apply Hr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ?Rabs_mult Rmult_assoc ; apply Rmult_eq_compat_l.",
            "VernacExtend",
            "efb87ac802ab82df306e77159265dc987e435c42"
        ],
        [
            "rewrite /l RPow_abs -Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "elim: n => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite -IH ; field.",
            "VernacExtend",
            "978748f3924ddecb0b5c0d464fc313237f2af3c9"
        ],
        [
            "have Hr0 : Rabs r <> 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rgt_not_eq, Rle_lt_trans with (2 := Hy), Rabs_pos.",
            "VernacExtend",
            "8512d8b8de8ad20e2b0b59491c85f33911206ddf"
        ],
        [
            "contradict Hr0 ; by rewrite Hr0 Rabs_R0.",
            "VernacExtend",
            "6c3d4db39b14e91cde5c8c8e098147a87d025e1f"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have : forall y, Rabs y < Rabs r -> Rbar_le (Finite (y)) cv.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ub.",
            "VernacExtend",
            "0aaba5b3ce3b959fa8fd601234deea2b97b96fe6"
        ],
        [
            "by apply (H y Hy).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Hc0 : Rbar_le (Finite 0) cv.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply ub, CV_disk_0.",
            "VernacExtend",
            "32b48f6b8e3788a3e358dd5485e7053b81806900"
        ],
        [
            "case: (cv) Hc0 => [c | | ] // Hc0 Hcv.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_lt_dec r 0) => Hr0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rle_trans with (1 := Hr0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have H0 : forall e, 0 < e <= r -> r - e <= c.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Hcv.",
            "VernacExtend",
            "b26212a2aee47e1681571ef6fdc9ff55480391f2"
        ],
        [
            "apply Rlt_le_trans with (2 := Rle_abs _).",
            "VernacExtend",
            "e9ae6f7944f7c4212405dde246a6959f82ce32de"
        ],
        [
            "rewrite Rabs_pos_eq ; lra.",
            "VernacExtend",
            "bdbdd4e1f560c7c531d32236753d846e5397559c"
        ],
        [
            "apply Rnot_lt_le => H1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have H2: (c < ((c+r)/2) < r).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "have H3 : 0 < ((r-c)/2) <= r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "unfold Rbar_le in Hc0 ; lra.",
            "VernacExtend",
            "e6976347ae8052d023ee0d3a6cc1df27a9a5f977"
        ],
        [
            "move: (H0 _ H3).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "move => b Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply lub => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Hb.",
            "VernacExtend",
            "08081940eac4eab089fa3c8ad2453ae07f1099ad"
        ],
        [
            "apply ex_series_lim_0 in Hx.",
            "VernacExtend",
            "f1be58e333d7aff7f46cc4d94124966d9e8c84f5"
        ],
        [
            "apply is_lim_seq_spec in Hx.",
            "VernacExtend",
            "f2cc2b106b6b1bd568074a4b2544f1ace888ec27"
        ],
        [
            "case: (Hx (mkposreal _ Rlt_0_1)) => /= {Hx} N Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "set M := fix f N := match N with | O => Rabs (a O * x ^ O) | S n => Rmax (f n) (Rabs (a (n) * x ^ (n))) end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists (Rmax (M N) 1) => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (le_lt_dec N n) => Hn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_trans with (2 := Rmax_r _ _).",
            "VernacExtend",
            "65cb968945ac724cfa8a9a5fdf9f7a71a1bcc7cb"
        ],
        [
            "move: (Hx n Hn).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Rminus_0_r Rabs_Rabsolu.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_trans with (2 := Rmax_l _ _).",
            "VernacExtend",
            "71359a389bd939cc6dea91cb2e0a00babb930fa5"
        ],
        [
            "elim: N n Hn {Hx} => [ | N IH] /= n Hn.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply lt_n_O in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply lt_n_Sm_le, le_lt_eq_dec in Hn ; case: Hn => Hn.",
            "VernacExtend",
            "6c51888692808cb9a82d84c4e47c7a828d13ccfd"
        ],
        [
            "apply Rle_trans with (2 := Rmax_l _ _).",
            "VernacExtend",
            "71359a389bd939cc6dea91cb2e0a00babb930fa5"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hn ; by apply Rle_trans with (2 := Rmax_r _ _), Rle_refl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_disk_inside (a : nat -> R) (x : R) : Rbar_lt (Finite (Rabs x)) (CV_radius a) -> ex_series (fun n => Rabs (a n * x ^ n)).",
            "VernacStartTheoremProof",
            "5e07155cdea91de9f48cc06e60a77650f302b405"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "assert (H : ~ ~ ex_series (fun n => Rabs (a n * x ^ n))).",
            "VernacExtend",
            "25764de50d52bb769722c5da6cd30c2392afd9fb"
        ],
        [
            "contradict Ha.",
            "VernacExtend",
            "65d7ffc3c798a4ce29a3903aae94686407d92873"
        ],
        [
            "apply Rbar_le_not_lt.",
            "VernacExtend",
            "26846f4220b509cc8abc0a290e0e9d2da4af5e4b"
        ],
        [
            "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar => l /= [ub lub].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply: lub => r Hr.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply Rnot_lt_le ; contradict Ha.",
            "VernacExtend",
            "08310875a752913aa4589c018d3e6146143512fa"
        ],
        [
            "move: Hr.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply CV_disk_le.",
            "VernacExtend",
            "7fdb1a86f4d6a645230b7a72ab2f5bec6eebe97b"
        ],
        [
            "by apply Rlt_le, Rlt_le_trans with (2 := Rle_abs _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: (ex_series_dec (fun n => Rabs (a n * x ^ n))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_inside (a : nat -> R) (x : R) : Rbar_lt (Finite (Rabs x)) (CV_radius a) -> ex_pseries a x.",
            "VernacStartTheoremProof",
            "5c7e8d48403f649f9e9564cecaf8c5e740f8d976"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply CV_disk_correct, CV_disk_inside.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_disk_outside (a : nat -> R) (x : R) : Rbar_lt (CV_radius a) (Finite (Rabs x)) -> ~ is_lim_seq (fun n => a n * x ^ n) 0.",
            "VernacStartTheoremProof",
            "1d8e2c3f0e62b8235745bbca7914e51630e95720"
        ],
        [
            "case: (CV_radius_bounded a) => ub lub.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move => Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have H : ~ (fun r : R => exists M : R, forall n : nat, Rabs (a n * r ^ n) <= M) x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "contradict Hx ; apply Rbar_le_not_lt.",
            "VernacExtend",
            "a5755d9d4c809180411af3e05a3866e1a8aa6937"
        ],
        [
            "apply ub.",
            "VernacExtend",
            "0aaba5b3ce3b959fa8fd601234deea2b97b96fe6"
        ],
        [
            "case: Hx => M Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists M => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite Rabs_mult RPow_abs Rabs_Rabsolu -Rabs_mult.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply is_lim_seq_spec in H.",
            "VernacExtend",
            "98ca61a735cdd6a0c67afeba86446058c65f378f"
        ],
        [
            "case: (H (mkposreal _ Rlt_0_1)) => /= {Hx} N Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "set M := fix f N := match N with | O => Rabs (a O * x ^ O) | S n => Rmax (f n) (Rabs (a (n) * x ^ (n))) end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists (Rmax (M N) 1) => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (le_lt_dec N n) => Hn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_trans with (2 := Rmax_r _ _).",
            "VernacExtend",
            "65cb968945ac724cfa8a9a5fdf9f7a71a1bcc7cb"
        ],
        [
            "move: (Hx n Hn).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Rminus_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_trans with (2 := Rmax_l _ _).",
            "VernacExtend",
            "71359a389bd939cc6dea91cb2e0a00babb930fa5"
        ],
        [
            "elim: N n Hn {Hx} => [ | N IH] /= n Hn.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply lt_n_O in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply lt_n_Sm_le, le_lt_eq_dec in Hn ; case: Hn => Hn.",
            "VernacExtend",
            "6c51888692808cb9a82d84c4e47c7a828d13ccfd"
        ],
        [
            "apply Rle_trans with (2 := Rmax_l _ _).",
            "VernacExtend",
            "71359a389bd939cc6dea91cb2e0a00babb930fa5"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hn ; by apply Rle_trans with (2 := Rmax_r _ _), Rle_refl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_ext (a b : nat -> R) : (forall n, a n = b n) -> CV_radius a = CV_radius b.",
            "VernacStartTheoremProof",
            "78adc2a7250fd0f53a0739e3acfd353b47539a06"
        ],
        [
            "move => Heq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /CV_radius /Lub_Rbar.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ex_lub_Rbar => la [ub_a lub_a] ; case: ex_lub_Rbar => lb [ub_b lub_b] /=.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "apply Rbar_le_antisym.",
            "VernacExtend",
            "f0e54e4db9d25ea0231de349a146a11c944777e8"
        ],
        [
            "apply lub_a => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply ub_b ; move: Hx.",
            "VernacExtend",
            "36fb7111eb8120f688b8164534c74107cffec036"
        ],
        [
            "apply ex_series_ext => n ; by rewrite Heq.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "apply lub_b => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply ub_a ; move: Hx.",
            "VernacExtend",
            "91546f82d610d07c9da1325634bdc4e6c9eab370"
        ],
        [
            "apply ex_series_ext => n ; by rewrite Heq.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_disk_DAlembert_aux (a : nat -> R) (x k : R) : x <> 0 -> (forall n, a n <> 0) -> (is_lim_seq (fun n => Rabs (a (S n) / a n)) k <-> is_lim_seq (fun n => Rabs ((a (S n) * x^(S n)) / (a n * x ^ n))) (Rabs x * k)).",
            "VernacStartTheoremProof",
            "68db98e20c5be36caed077339dd8c524581f83f8"
        ],
        [
            "move => Hx Ha ; split => H.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "evar (l : Rbar).",
            "VernacExtend",
            "6717f85e6ee80bbb9cca5c4db8569e19cf7fcca6"
        ],
        [
            "replace (Finite (Rabs x * k)) with l.",
            "VernacExtend",
            "b4bf238896630e3a179458f5b48cb6461a6bd124"
        ],
        [
            "apply is_lim_seq_ext with (fun n => Rabs x * Rabs (a (S n) / a n)).",
            "VernacExtend",
            "a4f0942c67a1652f2257c1637c07ab855badbf3d"
        ],
        [
            "move => n ; rewrite ?Rabs_div => //=.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite ?Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "split ; apply Rabs_no_R0 => //.",
            "VernacExtend",
            "6bff1d22f26f73e2af6bbb2e9c65e0bfad7c6104"
        ],
        [
            "by apply pow_nonzero.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rmult_integral_contrapositive_currified => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply pow_nonzero.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_scal_l.",
            "VernacExtend",
            "7848e953466aa3acf97d4e14c39da5f5c9ea3a2e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "by simpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "evar (l : Rbar).",
            "VernacExtend",
            "6717f85e6ee80bbb9cca5c4db8569e19cf7fcca6"
        ],
        [
            "replace (Finite k) with l.",
            "VernacExtend",
            "d5cfa1497df82073234db3cb7e960c2076491ea0"
        ],
        [
            "apply is_lim_seq_ext with (fun n : nat => /Rabs x * Rabs (a (S n) * x ^ S n / (a n * x ^ n))).",
            "VernacExtend",
            "f0df70d99bef9ef5f9a0e27d7cbfc4f04b46a4c4"
        ],
        [
            "move => n ; rewrite /= ?Rabs_div ?Rabs_mult.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "repeat split ; apply Rabs_no_R0 => //.",
            "VernacExtend",
            "50204719d4d090781cb9eb5b8b563c98a497521a"
        ],
        [
            "by apply pow_nonzero.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rmult_integral_contrapositive_currified => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply pow_nonzero.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_scal_l.",
            "VernacExtend",
            "7848e953466aa3acf97d4e14c39da5f5c9ea3a2e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Rbar_finite_eq ; field.",
            "VernacExtend",
            "edd508c38908d9f1a69c2d05d5a2129b941d9c10"
        ],
        [
            "apply Rabs_no_R0 => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_disk_DAlembert (a : nat -> R) (x:R) l : (forall n:nat, a n <> 0) -> is_lim_seq (fun n:nat => Rabs (a (S n) / a n)) (Finite l) -> (l = 0 \\/ (l <> 0 /\\ Rabs x < / l)) -> CV_disk a x.",
            "VernacStartTheoremProof",
            "d4b7312633bf16a6f0246ece08ea3361bb7c4d9a"
        ],
        [
            "move => Ha Hl H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Req_dec x 0) => Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exists (Rabs (a O)).",
            "VernacExtend",
            "cecbad1e51a04b65cd3bac3ca80e939bb5a0007d"
        ],
        [
            "apply (is_lim_seq_ext (fun _ => Rabs (a O)) _ (Rabs (a 0%nat))).",
            "VernacExtend",
            "a59319a6d4a0c51ba822e3979b033a4978fa31cf"
        ],
        [
            "elim => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite sum_O Rmult_1_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite sum_Sn /= Rmult_0_l Rmult_0_r Rabs_R0 /plus /= Rplus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_const.",
            "VernacExtend",
            "841054990caf6b74d9f691433bc35ebf9401e15a"
        ],
        [
            "apply ex_series_DAlembert with (Rabs x * l).",
            "VernacExtend",
            "4b5d1bf48a99592545d97e1b3077aba449589fa9"
        ],
        [
            "case: H => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite H Rmult_0_r ; by apply Rlt_0_1.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "replace 1 with (/ l * l) by (field ; apply H).",
            "VernacExtend",
            "85ebaa17f69cd0af0918380ec2c6571f9561f6be"
        ],
        [
            "apply Rmult_lt_compat_r.",
            "VernacExtend",
            "e041593c57ec6470673cc705c01d215d230e0676"
        ],
        [
            "apply Rnot_le_lt ; case => H0.",
            "VernacExtend",
            "9fd916696729f062e266fadae08feacde0f368cc"
        ],
        [
            "case: H => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "apply Rlt_le, Rlt_le_trans with 0.",
            "VernacExtend",
            "c3d25881b174940356a724704de1821077523d43"
        ],
        [
            "by apply Rinv_lt_0_compat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => n ; apply Rmult_integral_contrapositive_currified.",
            "VernacExtend",
            "e7f6c3730abb15a1059a26e7bfa8155a3298f005"
        ],
        [
            "by apply Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply pow_nonzero.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply CV_disk_DAlembert_aux.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_finite_DAlembert (a : nat -> R) (l : R) : (forall n:nat, a n <> 0) -> 0 < l -> is_lim_seq (fun n:nat => Rabs (a (S n) / a n)) l -> CV_radius a = Finite (/l).",
            "VernacStartTheoremProof",
            "f2ea7a8c0663277a623a4708b924d7c431336391"
        ],
        [
            "move => Ha Hl Hda.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rbar_le_antisym.",
            "VernacExtend",
            "f0e54e4db9d25ea0231de349a146a11c944777e8"
        ],
        [
            "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar => /= cv [ub lub].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply lub => x Hax.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_lt_dec x 0) => Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rlt_le, Rle_lt_trans with 0.",
            "VernacExtend",
            "86e6f931f69b7d8d6e92046997b2614ebfd4d515"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rinv_0_lt_compat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(Rabs_pos_eq x (Rlt_le _ _ Hx)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(Rmult_1_l (/l)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (Rabs x) with ((Rabs x * l) /l) by (field ; apply Rgt_not_eq, Hl).",
            "VernacExtend",
            "660e53219187138919ddd4084e0bd13083eb3f10"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "by apply Rlt_le, Rinv_0_lt_compat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rnot_lt_le.",
            "VernacExtend",
            "3c60597e841405b7d257d92c4717e01515b21555"
        ],
        [
            "contradict Hax.",
            "VernacExtend",
            "575cd5f058fe9e2045915725dbb8c45b8e669665"
        ],
        [
            "have : CV_disk a x -> is_lim_seq (fun n => a n * x ^ n) 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ex_series_lim_0.",
            "VernacExtend",
            "cd2b8944bbbed1081a38035bce3db09e6e7f9045"
        ],
        [
            "by apply ex_series_Rabs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => H H0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (H H0) => {H H0}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply not_ex_series_DAlembert with (Rabs x * l) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rmult_integral_contrapositive_currified => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply pow_nonzero, Rgt_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply CV_disk_DAlembert_aux.",
            "VernacExtend",
            "f39cfc980e064e83e59d09120e844761ed0163b2"
        ],
        [
            "by apply Rgt_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hda.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rbar_not_lt_le.",
            "VernacExtend",
            "609b6610e848b9efc1928d197bd92cc66b06930b"
        ],
        [
            "move : (CV_disk_outside a).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar ; case => [cv | | ] /= [ub lub] Hnot_ex H ; try by auto.",
            "VernacExtend",
            "ef8a4e787ec8df8973da5660cc4293a259cb93c0"
        ],
        [
            "suff H0 : cv < ((cv+/l)/2) < /l.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "absurd (ex_series (fun n => Rabs (a n * ((cv+/l)/2)^n))).",
            "VernacExtend",
            "8ea63205159a3b6c3e9524a6833c503a2e10cb7d"
        ],
        [
            "suff H1 : cv < Rabs ((cv + / l) / 2).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "move: (Hnot_ex ((cv + / l) / 2) H1) => {Hnot_ex} Hnot_ex.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "contradict Hnot_ex ; by apply ex_series_lim_0, ex_series_Rabs.",
            "VernacExtend",
            "6a40de83ee8e43ae5c5213a4ec3f9678ba99aeea"
        ],
        [
            "apply Rlt_le_trans with (2 := Rle_abs _), H0.",
            "VernacExtend",
            "2e59331882446b792c7ee14266aae6adc9e655ca"
        ],
        [
            "apply (CV_disk_DAlembert) with l.",
            "VernacExtend",
            "266cd0a7b053f4dc9e8e6e394210b5e8bdc1a2b8"
        ],
        [
            "by apply Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hda.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "right ; split.",
            "VernacExtend",
            "7f40e6faa2e8d6f2ee2a39b745aa28054e5d87de"
        ],
        [
            "by apply Rgt_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_le, Rle_lt_trans with (2 := proj1 H0).",
            "VernacExtend",
            "ac3ab1b804e04be0f71e168b5f9221383767454c"
        ],
        [
            "apply ub.",
            "VernacExtend",
            "0aaba5b3ce3b959fa8fd601234deea2b97b96fe6"
        ],
        [
            "exists (Rabs (a O)).",
            "VernacExtend",
            "cecbad1e51a04b65cd3bac3ca80e939bb5a0007d"
        ],
        [
            "apply (is_lim_seq_ext (fun _ => Rabs (a O)) _ (Rabs (a 0%nat))).",
            "VernacExtend",
            "a59319a6d4a0c51ba822e3979b033a4978fa31cf"
        ],
        [
            "elim => [ | n IH] /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite sum_O Rmult_1_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite sum_Sn /= Rmult_0_l Rmult_0_r Rabs_R0 /plus /= Rplus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_lim_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "case: (ub 0) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (Rabs (a O)).",
            "VernacExtend",
            "cecbad1e51a04b65cd3bac3ca80e939bb5a0007d"
        ],
        [
            "apply (is_lim_seq_ext (fun _ => Rabs (a O)) _ (Rabs (a 0%nat))).",
            "VernacExtend",
            "a59319a6d4a0c51ba822e3979b033a4978fa31cf"
        ],
        [
            "elim => [ | n IH] /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite sum_O Rmult_1_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite sum_Sn /= Rmult_0_l Rmult_0_r Rabs_R0 /plus /= Rplus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_lim_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_infinite_DAlembert (a : nat -> R) : (forall n:nat, a n <> 0) -> is_lim_seq (fun n:nat => Rabs (a (S n) / a n)) 0 -> CV_radius a = p_infty.",
            "VernacStartTheoremProof",
            "e1e3ee3912bc8cc79a0fc0617e085a9575f6e49c"
        ],
        [
            "move => Ha Hda.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar ; case => [cv | | ] //= [ub lub] ; have : False => //.",
            "VernacExtend",
            "d175f5a9c7420dbdf708fcaa29659808b56ee5df"
        ],
        [
            "have H : CV_disk a (cv + 1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have H : 0 < cv + 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rlt_le_trans with (0+1).",
            "VernacExtend",
            "00c702c3de2a824d573dc5f95d0dbd698436c10f"
        ],
        [
            "rewrite Rplus_0_l ; by apply Rlt_0_1.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "apply ub.",
            "VernacExtend",
            "0aaba5b3ce3b959fa8fd601234deea2b97b96fe6"
        ],
        [
            "exists (Rabs (a O)).",
            "VernacExtend",
            "cecbad1e51a04b65cd3bac3ca80e939bb5a0007d"
        ],
        [
            "apply (is_lim_seq_ext (fun _ => Rabs (a O)) _ (Rabs (a 0%nat))).",
            "VernacExtend",
            "a59319a6d4a0c51ba822e3979b033a4978fa31cf"
        ],
        [
            "elim => [ | k IH] /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite sum_O Rmult_1_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite sum_Sn /= Rmult_0_l Rmult_0_r Rabs_R0 /plus /= Rplus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_lim_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply ex_series_DAlembert with 0.",
            "VernacExtend",
            "2322693a12ec3f91931b5fb6a5f5f40feede1a6f"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => n ; apply Rmult_integral_contrapositive_currified.",
            "VernacExtend",
            "e7f6c3730abb15a1059a26e7bfa8155a3298f005"
        ],
        [
            "by[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rgt_not_eq, pow_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(Rmult_0_r (Rabs (cv + 1))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (CV_disk_DAlembert_aux a (cv + 1)).",
            "VernacExtend",
            "9d9795728b29f8effac7fa485e23cf93abdd2bc5"
        ],
        [
            "by apply Rgt_not_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (ub (cv+1) H).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply Rbar_lt_not_le, Rlt_n_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (ub 0) => //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (Rabs (a O)).",
            "VernacExtend",
            "cecbad1e51a04b65cd3bac3ca80e939bb5a0007d"
        ],
        [
            "apply (is_lim_seq_ext (fun _ => Rabs (a O)) _ (Rabs (a 0%nat))).",
            "VernacExtend",
            "a59319a6d4a0c51ba822e3979b033a4978fa31cf"
        ],
        [
            "elim => [ | k IH] /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite sum_O Rmult_1_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite sum_Sn /= Rmult_0_l Rmult_0_r Rabs_R0 /plus /= Rplus_0_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply is_lim_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_Reals_0 (a : nat -> R) (r : posreal) : Rbar_lt (Finite r) (CV_radius a) -> CVN_r (fun n x => a n * x ^ n) r.",
            "VernacStartTheoremProof",
            "6c37699ca1802688fcc7a39c412cae1eaa4b9668"
        ],
        [
            "move => Hr.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /CVN_r /Boule.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have H := CV_radius_bounded a.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (fun n => Rabs (a n * r ^ n)).",
            "VernacExtend",
            "0c60d84878c95481b7da018b2dce43c919c8559a"
        ],
        [
            "exists (Series (fun n => Rabs (a n * r ^ n))) ; split.",
            "VernacExtend",
            "1b2dda5385a6be71bab15bd0d574d8bf99000c3d"
        ],
        [
            "rewrite -(Rabs_pos_eq r (Rlt_le _ _ (cond_pos r))) in Hr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply CV_disk_inside in Hr.",
            "VernacExtend",
            "03b92461b28b232af138efcbe5c90fe0c5d7fcbc"
        ],
        [
            "apply Lim_seq_correct' in Hr ; rewrite -/(Series (fun n : nat => Rabs (a n * r ^ n))) in Hr.",
            "VernacExtend",
            "e9c1646943eea49f0434bc7f9acd15443260f90b"
        ],
        [
            "move => e He.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_lim_seq_spec in Hr.",
            "VernacExtend",
            "b9e43347cda1276e4a6138ca2b05e13592e2faa2"
        ],
        [
            "case: (Hr (mkposreal e He)) => /= {Hr} N Hr.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (sum_f_R0 (fun k : nat => Rabs (Rabs (a k * r ^ k))) n) with (sum_f_R0 (fun k : nat => (Rabs (a k * r ^ k))) n).",
            "VernacExtend",
            "de7053bb2d5ec45f02a60b34fbf3da2b2467d625"
        ],
        [
            "rewrite <- sum_n_Reals; by apply Hr.",
            "VernacExtend",
            "aaf1aa09f15b9dbef7ced2b5c0b90fa6c705256c"
        ],
        [
            "elim: n {Hn} => /= [ | n IH] ; rewrite Rabs_Rabsolu.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => n x Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite ?Rabs_mult -?RPow_abs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply pow_incr ; split.",
            "VernacExtend",
            "019a57ca25f8dc3f7273dda8e04126707cba38e4"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (Rabs_pos_eq r).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rminus_0_r in Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le, r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_Reals_1 (a : nat -> R) (r : posreal) : CVN_r (fun n x => a n * x ^ n) r -> Rbar_le (Finite r) (CV_radius a).",
            "VernacStartTheoremProof",
            "a9a107f955b627751dab56582d5faa98a4fcae76"
        ],
        [
            "case => An [l [H H0]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have H1 : is_lub_Rbar (CV_disk a) (CV_radius a).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /CV_radius /Lub_Rbar ; by case: ex_lub_Rbar.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "have H2 : forall (y : R), 0 < y < r -> (CV_disk a y).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply @ex_series_le with An.",
            "VernacExtend",
            "e18b4c082ef133562c109f8e56c1f2ad4d507e11"
        ],
        [
            "move => n ; rewrite /norm /= /abs /= Rabs_Rabsolu.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply H0 ; rewrite /Boule Rabs_pos_eq Rminus_0_r.",
            "VernacExtend",
            "303297d10ff25420753cceb5389062ceae91967c"
        ],
        [
            "by apply Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le, Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists l.",
            "VernacExtend",
            "9ca96dacfce153d20a69dd7ea7c7254236074950"
        ],
        [
            "apply (is_lim_seq_spec _ l).",
            "VernacExtend",
            "b647a8fffd8d7d14ce42956445e40a177c1ec806"
        ],
        [
            "intros eps.",
            "VernacExtend",
            "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
        ],
        [
            "case: (H eps (cond_pos eps)) => N {H} H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "set v := sum_n _ _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "replace v with (sum_n (fun k : nat => Rabs (An k)) n).",
            "VernacExtend",
            "1df85e6d540ad38d506ac75f0e282c99db960756"
        ],
        [
            "rewrite sum_n_Reals; by apply H.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite /v {v}.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: n {Hn} => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite !sum_O ; apply Rabs_pos_eq.",
            "VernacExtend",
            "48a2caa468319dae19e5a378d593188d39ad49c3"
        ],
        [
            "apply Rle_trans with (Rabs (a O * 0 ^ O)).",
            "VernacExtend",
            "3257730b9780bbd7ed00d9529df6bba736979fe9"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply H0 ; rewrite /Boule Rminus_0_r Rabs_R0 ; by apply r.",
            "VernacExtend",
            "36691ff0f2aa9f1bf72e21f6b65aa7e24b6ec3e6"
        ],
        [
            "rewrite !sum_Sn IH Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_trans with (Rabs (a (S n) * 0 ^ (S n))).",
            "VernacExtend",
            "7d34239bb4a6a6e7499965c74050b389f4830c68"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply H0 ; rewrite /Boule Rminus_0_r Rabs_R0 ; by apply r.",
            "VernacExtend",
            "36691ff0f2aa9f1bf72e21f6b65aa7e24b6ec3e6"
        ],
        [
            "have H3 : forall y, 0 < y < r -> Rbar_le (Finite (y)) (CV_radius a).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply H1, H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have H4 := CV_radius_ge_0 a.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (CV_radius a) H3 H4 => /= [cv | | ] // H3 H4.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rnot_lt_le => /= H5.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have H6 : 0 < (cv+r)/2 < r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "move: (H3 _ H6).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_Reals_2 (a : nat -> R) (x : R) : Rbar_lt (Finite (Rabs x)) (CV_radius a) -> exists r : posreal, CVU (fun n x => sum_f_R0 (fun k => a k * x ^ k) n) (PSeries a) x r.",
            "VernacStartTheoremProof",
            "bebbc780db145f5029f5fe97cd58e49bca9d2dfe"
        ],
        [
            "move => Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have H : exists r : posreal, Rabs x < r /\\ Rbar_lt (Finite r) (CV_radius a).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (CV_radius a) Hx => /= [cv | | ] Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have H : 0 < (Rabs x + cv)/2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "generalize (Rabs_pos x) ; lra.",
            "VernacExtend",
            "bc11a7f9a761054f5f4ecf0c20dcf521f7246dce"
        ],
        [
            "exists (mkposreal _ H) => /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "have H : 0 < Rabs x + 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rle_lt_0_plus_1, Rabs_pos.",
            "VernacExtend",
            "19f822cc1ec9470ed7cbbd00c462a3f81586b9fb"
        ],
        [
            "exists (mkposreal _ H) => /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by apply Rlt_plus_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: H => r H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply CVN_CVU_r with r.",
            "VernacExtend",
            "04e36c47cc33fcbd73bbc577fd4add32cda02cdd"
        ],
        [
            "by apply CV_radius_Reals_0, H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section PS_plus.",
            "VernacBeginSection",
            "7cb67b17e65700b2e7d463a5dfb20694611e67a1"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Definition PS_plus (a b : nat -> V) (n : nat) : V := plus (a n) (b n).",
            "VernacDefinition",
            "9fdf627480ded0ba962e43ccde9c293679f227ee"
        ],
        [
            "Lemma is_pseries_plus (a b : nat -> V) (x :K) (la lb : V) : is_pseries a x la -> is_pseries b x lb -> is_pseries (PS_plus a b) x (plus la lb).",
            "VernacStartTheoremProof",
            "c1596179c4bdee7c016b458d94e375753cbe4d8e"
        ],
        [
            "move => Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterlim_ext with (f:= (fun n => plus (sum_n (fun k => scal (pow_n x k) (a k)) n) (sum_n (fun k => scal (pow_n x k) (b k)) n))).",
            "VernacExtend",
            "677e6f8c06520d7472be87e1e48d1c662914d4c7"
        ],
        [
            "elim => [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "simpl ; rewrite /PS_plus !sum_O.",
            "VernacExtend",
            "41a60d2a21e0df8ab3a4b72b6ef6cfa8908df0b5"
        ],
        [
            "now repeat rewrite scal_one.",
            "VernacExtend",
            "6a35941e09be983696e38cecd2553e70539eead0"
        ],
        [
            "simpl ; rewrite !sum_Sn -IH /PS_plus.",
            "VernacExtend",
            "41a60d2a21e0df8ab3a4b72b6ef6cfa8908df0b5"
        ],
        [
            "generalize (sum_n (fun k : nat => scal (pow_n x k) (a k)) n) => a' ; generalize (sum_n (fun k : nat => scal (pow_n x k) (b k)) n) => b'.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "repeat rewrite -plus_assoc; apply f_equal.",
            "VernacExtend",
            "3b10b927971ea148845ab5f223cc233431aaeca5"
        ],
        [
            "rewrite plus_comm -plus_assoc; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "rewrite scal_distr_l; apply plus_comm.",
            "VernacExtend",
            "d909cdade2100e10efdebd0f24728dd888aefaf5"
        ],
        [
            "now apply filterlim_comp_2 with (3 := filterlim_plus _ _).",
            "VernacExtend",
            "bc491bb0ee223a7c3bc2eaece28c459c34b6ae81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_plus (a b : nat -> V) (x : K) : ex_pseries a x -> ex_pseries b x -> ex_pseries (PS_plus a b) x.",
            "VernacStartTheoremProof",
            "e6b01bb5d93a00e03157baace115da3a4f92f07b"
        ],
        [
            "move => [la Ha] [lb Hb].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (plus la lb).",
            "VernacExtend",
            "48cfd3bced3afc8aa7929a26ef624bea6c0ef154"
        ],
        [
            "by apply is_pseries_plus.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PS_plus.",
            "VernacEndSegment",
            "85eb6ccc2e70cf6c824070d60131784ecc2398ab"
        ],
        [
            "Lemma PSeries_plus (a b : nat -> R) (x : R) : ex_pseries a x -> ex_pseries b x -> PSeries (PS_plus a b) x = PSeries a x + PSeries b x.",
            "VernacStartTheoremProof",
            "d7125c0f131483b467d724ee881544d55a912131"
        ],
        [
            "intros Ha Hb.",
            "VernacExtend",
            "0c4ce3bbd15ba18416ad16c4ce047ec9c705752c"
        ],
        [
            "apply is_pseries_unique.",
            "VernacExtend",
            "bc31764e2cd2bfe0204b6108fcc6c1df4cd7855c"
        ],
        [
            "apply: is_pseries_plus ; rewrite PSeries_eq ; apply Series_correct.",
            "VernacExtend",
            "a3efb57d2bc9ab68cca17324fd3e0ae334614fdf"
        ],
        [
            "by apply Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_disk_plus (a b : nat -> R) (x : R) : (CV_disk a x) -> (CV_disk b x) -> (CV_disk (PS_plus a b) x).",
            "VernacStartTheoremProof",
            "0848681ef89586ca171dc5d1d2f81948b545c974"
        ],
        [
            "move => Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (ex_series_plus _ _ Ha Hb).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply @ex_series_le => n ; rewrite /norm /= /abs /= Rabs_Rabsolu.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite Rmult_plus_distr_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rabs_triang.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_plus (a b : nat -> R) : Rbar_le (Rbar_min (CV_radius a) (CV_radius b)) (CV_radius (PS_plus a b)).",
            "VernacStartTheoremProof",
            "94edea62e1a186a5bb5e2475bd838d111e1c698e"
        ],
        [
            "wlog: a b / (Rbar_le (CV_radius a) (CV_radius b)) => [ Hw | Hle ].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rbar_le_lt_dec (CV_radius a) (CV_radius b)) => Hle.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rbar_min_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (CV_radius_ext (PS_plus a b) (PS_plus b a)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hw, Rbar_lt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "now intros n ; apply Rplus_comm.",
            "VernacExtend",
            "767a9b22515faf1839d394bfcb37648d90abcc20"
        ],
        [
            "replace (Rbar_min (CV_radius a) (CV_radius b)) with (CV_radius a).",
            "VernacExtend",
            "636660d1478a5ef2694f5f9c5a8aafc1f3de4c66"
        ],
        [
            "apply is_lub_Rbar_subset with (CV_disk (PS_plus a b)) (fun x => (CV_disk a x) /\\ (CV_disk b x)).",
            "VernacExtend",
            "cbc57b2f9b203ab671df5341604d2866b25ca4fd"
        ],
        [
            "move => x [Ha Hb] ; by apply CV_disk_plus.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "rewrite /CV_radius /Lub_Rbar ; by case: ex_lub_Rbar.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "have Ha : is_lub_Rbar (fun x : R => CV_disk a x) (CV_radius a).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /CV_radius /Lub_Rbar ; by case: ex_lub_Rbar.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "have Hb : is_lub_Rbar (fun x : R => CV_disk b x) (CV_radius b).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /CV_radius /Lub_Rbar ; by case: ex_lub_Rbar.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros y [Hay Hby].",
            "VernacExtend",
            "022cee61f2116fc32b36f3028c3cd7d27ccbe069"
        ],
        [
            "by apply Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (Rbar_le_lt_or_eq_dec _ _ (CV_radius_ge_0 a)) => Ha0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "intros c Hc.",
            "VernacExtend",
            "a6796c62d7c0db66fe8ba83a4c9d8f0f080ccce0"
        ],
        [
            "assert (Rbar_le 0 c).",
            "VernacExtend",
            "58d9e920987980b4ce38db77d12144ab44e42d36"
        ],
        [
            "apply Hc.",
            "VernacExtend",
            "b900f3304ba75d1bc8becba9c3e19edfabbb7700"
        ],
        [
            "split ; by apply CV_disk_0.",
            "VernacExtend",
            "9c392753fd6384a52f43e9d349afde47af3b3aa5"
        ],
        [
            "case: c Hc H => [c | | ] //= Hc H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "2: by case: (CV_radius a).",
            "VernacExtend",
            "42cf05b0c5cd7515ffd5d7bb186f381ddeb0d8c5"
        ],
        [
            "apply Rbar_not_lt_le => Hac.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: (Rbar_lt_le_trans _ _ _ Hac Hle) => Hbc.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eapply Rbar_le_not_lt.",
            "VernacExtend",
            "d198a619b0214b17fb047167609cfcefe966677f"
        ],
        [
            "apply (Hc ((c + Rbar_min (c + 1) (CV_radius a)) / 2)).",
            "VernacExtend",
            "95ed75336689c293f517c342aa2b0e4191f57ff5"
        ],
        [
            "assert (Rbar_lt (Rabs ((c + Rbar_min (c + 1) (CV_radius a)) / 2)) (CV_radius a)).",
            "VernacExtend",
            "fc226032aa3fc345abb10ace9d0190c12bdf0c8f"
        ],
        [
            "case: (CV_radius a) Hac => //= l Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_div_l.",
            "VernacExtend",
            "4198c2770a4c425c9ede77a90e885e8d7fd9f290"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (l * 2) with (l+l) by ring.",
            "VernacExtend",
            "2916388d4d033b11659d182f5f68c240d22c9f81"
        ],
        [
            "apply Rplus_lt_le_compat => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rmin_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rdiv_le_0_compat.",
            "VernacExtend",
            "693e22205d4e08285736e8c5e96457827d9a8003"
        ],
        [
            "apply Rplus_le_le_0_compat => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rmin_case.",
            "VernacExtend",
            "06bee284b3ab9229517272cc3728705bdc7b95ba"
        ],
        [
            "apply Rplus_le_le_0_compat => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rle_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "now eapply Rle_trans, Rlt_le, Hl.",
            "VernacExtend",
            "d6a9bc813e0871d46e9c09178c3788c348ba4bec"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split ; apply CV_disk_inside.",
            "VernacExtend",
            "029e9b0bdaac789f9b286e5d90c926c154879377"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "now eapply Rbar_lt_le_trans, Hle.",
            "VernacExtend",
            "3fd9282f7751abedca7a3c683b33159d8fbc5e0f"
        ],
        [
            "case: (CV_radius a) Hac => [l | | ] //= Hl.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rmin_case.",
            "VernacExtend",
            "06bee284b3ab9229517272cc3728705bdc7b95ba"
        ],
        [
            "apply Rlt_div_r.",
            "VernacExtend",
            "f3a8151a1973e9e9720c6ac1d2553ca6f749e13b"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rminus_lt_0 ; simpl ; ring_simplify.",
            "VernacExtend",
            "c9451a990beec86eaa79f8846511bc34126d358f"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_div_r.",
            "VernacExtend",
            "f3a8151a1973e9e9720c6ac1d2553ca6f749e13b"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rminus_lt_0 ; simpl ; ring_simplify.",
            "VernacExtend",
            "c9451a990beec86eaa79f8846511bc34126d358f"
        ],
        [
            "by rewrite Rplus_comm -Rminus_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_div_r.",
            "VernacExtend",
            "f3a8151a1973e9e9720c6ac1d2553ca6f749e13b"
        ],
        [
            "by apply Rlt_0_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rminus_lt_0 ; simpl ; ring_simplify.",
            "VernacExtend",
            "c9451a990beec86eaa79f8846511bc34126d358f"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Ha0 in Ha Hle |- *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "intros c Hc.",
            "VernacExtend",
            "a6796c62d7c0db66fe8ba83a4c9d8f0f080ccce0"
        ],
        [
            "apply Hc ; split ; by apply CV_disk_0.",
            "VernacExtend",
            "e5c8a4085b687f365b749924b9078dc61da2bb26"
        ],
        [
            "apply Rbar_min_case_strong => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Rbar_le_antisym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section PS_scal.",
            "VernacBeginSection",
            "d3ed120268715f76ceeff1d8cc83be6583a509e9"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Definition PS_scal (c : K) (a : nat -> V) (n : nat) : V := scal c (a n).",
            "VernacDefinition",
            "64dc2b5320988c2b27a41e12a2602e39c438ed6e"
        ],
        [
            "Lemma is_pseries_scal (c : K) (a : nat -> V) (x : K) (l : V) : mult x c = mult c x -> is_pseries a x l -> is_pseries (PS_scal c a) x (scal c l).",
            "VernacStartTheoremProof",
            "28db9aa3ef8d657e56ba28cad484a54e8252c8eb"
        ],
        [
            "move => Hx Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply (filterlim_ext (fun n => scal c (sum_n (fun k => scal (pow_n x k) (a k)) n))).",
            "VernacExtend",
            "8001514377a6d817578ddcedabc6184faf82bb3b"
        ],
        [
            "elim => [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "simpl ; rewrite /PS_scal.",
            "VernacExtend",
            "41a60d2a21e0df8ab3a4b72b6ef6cfa8908df0b5"
        ],
        [
            "rewrite !sum_O.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now repeat rewrite scal_one.",
            "VernacExtend",
            "6a35941e09be983696e38cecd2553e70539eead0"
        ],
        [
            "simpl ; rewrite !sum_Sn -IH /PS_scal.",
            "VernacExtend",
            "41a60d2a21e0df8ab3a4b72b6ef6cfa8908df0b5"
        ],
        [
            "rewrite scal_distr_l; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "rewrite 2! scal_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2.",
            "VernacExtend",
            "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
        ],
        [
            "rewrite -/(pow_n x (S n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "clear -Hx.",
            "VernacExtend",
            "4bb1da1fb6470dfebcf314d8eef9e82b30482189"
        ],
        [
            "elim: (S n) => {n} /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite mult_one_l mult_one_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -mult_assoc -IH 2!mult_assoc Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "now apply filterlim_comp with (2 := filterlim_scal_r _ _).",
            "VernacExtend",
            "8df7affebf185af086317c0b87740f57c838efdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_scal (c : K) (a : nat -> V) (x : K) : mult x c = mult c x -> ex_pseries a x -> ex_pseries (PS_scal c a) x.",
            "VernacStartTheoremProof",
            "582ba895533ac45a3a2b881e0c1771e37d5f0c09"
        ],
        [
            "move => Hx [l Ha].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (scal c l).",
            "VernacExtend",
            "b41b4fa84c6fcf433846ae2b70e9abb2d3b467cf"
        ],
        [
            "by apply is_pseries_scal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PS_scal.",
            "VernacEndSegment",
            "db8a567491e6576c1e00dc6d43610e5aa1eb09a3"
        ],
        [
            "Lemma PSeries_scal (c : R) (a : nat -> R) (x : R) : PSeries (PS_scal c a) x = c * PSeries a x.",
            "VernacStartTheoremProof",
            "0eccb85ef7794112a3a3f4b811e2a6614a68abb5"
        ],
        [
            "rewrite -Series_scal_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Series_ext.",
            "VernacExtend",
            "fdbcb56c0988c866fe0a698401ce4bfd1c6b2a6b"
        ],
        [
            "move => n /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rmult_assoc.",
            "VernacExtend",
            "9fb57cd8dc4dbe1dd6003e03f7c45064c83289ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_disk_scal (c : R) (a : nat -> R) (x : R) : (CV_disk a x) -> (CV_disk (PS_scal c a) x).",
            "VernacStartTheoremProof",
            "744dfb1d410c7a609ec0a869ebdcafece02b8afb"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ex_series_ext with (fun n => Rabs c * Rabs (a n * x ^ n)).",
            "VernacExtend",
            "df23958ad4a5148c8690e546e6fc51c67d39c157"
        ],
        [
            "move => n ; rewrite -Rabs_mult ; apply f_equal ; by rewrite /PS_scal /= Rmult_assoc.",
            "VernacExtend",
            "8f6cf9d0bb878766fabf745bd4279fedcca11481"
        ],
        [
            "apply @ex_series_scal.",
            "VernacExtend",
            "15ad4afc02b3fd74bd69cc2e9af2531ed3f778d6"
        ],
        [
            "by apply Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_scal (c : R) (a : nat -> R) : c <> 0 -> (CV_radius (PS_scal c a)) = (CV_radius a).",
            "VernacStartTheoremProof",
            "b3b3cd4833222f418de84c25f110fc3098045810"
        ],
        [
            "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar => la [ub_a lub_a] ; case: ex_lub_Rbar => lc [ub_c lub_c] /= Hc.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "apply Rbar_le_antisym.",
            "VernacExtend",
            "f0e54e4db9d25ea0231de349a146a11c944777e8"
        ],
        [
            "apply lub_a => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply ub_c.",
            "VernacExtend",
            "febbe39852525d8512a954285b64e1b9952b223b"
        ],
        [
            "assert (CV_disk (PS_scal (/c) (PS_scal c a)) x).",
            "VernacExtend",
            "1d263f72a65b3c92b200657d599e3fa8b6774321"
        ],
        [
            "by apply CV_disk_scal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: H ; apply ex_series_ext => n.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "rewrite /PS_scal /scal /= /mult /= ; by field.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply lub_c => x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply ub_a.",
            "VernacExtend",
            "1bffeaca02f6194c12b19706aa5867b1acca856e"
        ],
        [
            "by apply CV_disk_scal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition PS_scal_r (c : R) (a : nat -> R) (n : nat) : R := a n * c.",
            "VernacDefinition",
            "dd2f79303d90a8370bced63af0080c80f49cdca2"
        ],
        [
            "Lemma PSeries_scal_r (c : R) (a : nat -> R) (x : R) : PSeries (PS_scal_r c a) x = PSeries a x * c.",
            "VernacStartTheoremProof",
            "3c5e49e8d7b1819401e4ed1cdc003436d6de6327"
        ],
        [
            "rewrite -Series_scal_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Series_ext.",
            "VernacExtend",
            "fdbcb56c0988c866fe0a698401ce4bfd1c6b2a6b"
        ],
        [
            "move => n /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /PS_scal_r ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_disk_scal_r (c : R) (a : nat -> R) (x : R) : (CV_disk a x) -> (CV_disk (PS_scal_r c a) x).",
            "VernacStartTheoremProof",
            "0e7f50cebb9311dff753d30314f8da3d511a461c"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ex_series_ext with (fun n => Rabs c * Rabs (a n * x ^ n)).",
            "VernacExtend",
            "df23958ad4a5148c8690e546e6fc51c67d39c157"
        ],
        [
            "move => n ; rewrite -Rabs_mult ; apply f_equal ; rewrite /PS_scal_r /= ; ring.",
            "VernacExtend",
            "51638b73c476714a87b4824bb9f3af93a056967d"
        ],
        [
            "by apply @ex_series_scal ; apply Ha.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_scal_r (c : R) (a : nat -> R) : c <> 0 -> (CV_radius (PS_scal_r c a)) = (CV_radius a).",
            "VernacStartTheoremProof",
            "956ea62c6fdf4cdd6cc468c4291836e0ce65aee8"
        ],
        [
            "intros Hc.",
            "VernacExtend",
            "4f3611b06413a15b50ffa7497dbe8a6af513ce13"
        ],
        [
            "rewrite -(CV_radius_scal c a).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply CV_radius_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section PS_incr.",
            "VernacBeginSection",
            "3d9b65a54985cff362163de971be53e8d7c56550"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Definition PS_incr_1 (a : nat -> V) (n : nat) : V := match n with | 0 => zero | S n => a n end.",
            "VernacDefinition",
            "d6b34e2a0b5f8d14210eb628a7caa13bc43e98e3"
        ],
        [
            "Lemma is_pseries_incr_1 (a : nat -> V) (x:K) (l : V) : is_pseries a x l -> is_pseries (PS_incr_1 a) x (scal x l).",
            "VernacStartTheoremProof",
            "e3b294f8ae949b13a06bfa44131a0743a6bb47bc"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterlim_ext_loc with (fun n : nat => scal x (sum_n (fun k => scal (pow_n x k) (a k)) (pred n))).",
            "VernacExtend",
            "b0c950b7d73e39ea0b0ac400970344621b33121d"
        ],
        [
            "exists 1%nat; intros n; case n.",
            "VernacExtend",
            "678fc9df0a3ee81558efddbffdff13a5ad38e7c0"
        ],
        [
            "intros Hn; contradict Hn ; apply lt_n_O.",
            "VernacExtend",
            "0ca77a643cc895c9723ca754b0f40316aa3c25fb"
        ],
        [
            "clear n; intros n _ ;induction n.",
            "VernacExtend",
            "8eabf23116e1b07aa0fca6472bebffb2cc247271"
        ],
        [
            "now rewrite /= !sum_Sn !sum_O /= mult_one_r 2!scal_one plus_zero_l.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "apply trans_eq with (plus (sum_n (fun k : nat => scal (pow_n x k) (PS_incr_1 a k)) (S n)) (scal (pow_n x (S (S n))) (PS_incr_1 a (S (S n))))).",
            "VernacExtend",
            "ec71043d7e8bba7594d9a509562688f7f1670628"
        ],
        [
            "2: rewrite /= !sum_Sn ; reflexivity.",
            "VernacExtend",
            "ca99e37737ae97d76b6fab18460304e5f0ce4c1f"
        ],
        [
            "rewrite -IHn; simpl.",
            "VernacExtend",
            "098b55457c4818143077b1c537d807f1600477c2"
        ],
        [
            "rewrite !sum_Sn scal_distr_l; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "now rewrite scal_assoc.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "apply filterlim_comp with (f:= fun n => pred n) (G:=eventually) (g:=fun n => scal x (sum_n (fun k : nat => scal (pow_n x k) (a k)) n)).",
            "VernacExtend",
            "7ce4e292947030bbbdfbaff2c5405db6fa9985fc"
        ],
        [
            "apply eventually_subseq_loc.",
            "VernacExtend",
            "9e2e8ed41c9487a2714456e225e5f45baee0ca1a"
        ],
        [
            "exists 1%nat.",
            "VernacExtend",
            "a730d5780efb9f9e2ab7fc3bf879ff6ecdc4f5b8"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "rewrite -pred_Sn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply lt_pred_n_n.",
            "VernacExtend",
            "3ff70e921c13271b4ceb149b2c2b19fce737ce56"
        ],
        [
            "now apply filterlim_comp with (2 := filterlim_scal_r _ _).",
            "VernacExtend",
            "8df7affebf185af086317c0b87740f57c838efdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_incr_1 (a : nat -> V) (x : K) : ex_pseries a x -> ex_pseries (PS_incr_1 a) x.",
            "VernacStartTheoremProof",
            "46e5ef5ee2cbec89f8607680f1c2f900b3355a52"
        ],
        [
            "move => [l Ha] ; exists (scal x l) ; by apply is_pseries_incr_1.",
            "VernacExtend",
            "cc8caedb281eb99e58675fdb8ababc177ad8ea07"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint PS_incr_n (a : nat -> V) (n k : nat) : V := match n with | O => a k | S n => PS_incr_1 (PS_incr_n a n) k end.",
            "VernacFixpoint",
            "1beceaf2317811105557ec8ddfafd761ed3ef4bc"
        ],
        [
            "Lemma PS_incr_n_simplify (a : nat -> V) (n k : nat) : PS_incr_n a n k = match (le_lt_dec n k) with | left _ => a (k-n)%nat | right _ => zero end.",
            "VernacStartTheoremProof",
            "8da88811950402c71b46d54d3cd7e4ca8293544b"
        ],
        [
            "case: le_lt_dec => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "elim: n k H => [ | n IH] k H.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite /PS_incr_n ; by case: k H.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "case: k H => [ | k] H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply le_Sn_0 in H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /PS_incr_n -/PS_incr_n /PS_incr_1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite IH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "by elim: n k H {IH} => /= [ | n IH] k H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply le_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: n k H => [ | n IH] k H.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply lt_n_O in H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /PS_incr_n -/PS_incr_n /PS_incr_1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: k H => [ | k] H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply IH, lt_S_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_pseries_incr_n (a : nat -> V) (n : nat) (x : K) (l : V) : is_pseries a x l -> is_pseries (PS_incr_n a n) x (scal (pow_n x n) l).",
            "VernacStartTheoremProof",
            "300ebaab940222bab0ac58df80fde0866fe4624d"
        ],
        [
            "move => Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: n => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite scal_one.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -scal_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply is_pseries_incr_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_incr_n (a : nat -> V) (n : nat) (x : K) : ex_pseries a x -> ex_pseries (PS_incr_n a n) x.",
            "VernacStartTheoremProof",
            "290ddde1fb5628f1ffec87d93ea3d0df7b3b7781"
        ],
        [
            "move => [l Ha].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (scal (pow_n x n) l) ; by apply is_pseries_incr_n.",
            "VernacExtend",
            "811af81c16326f65db8964f7386b53fd3c976168"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition PS_decr_1 (a : nat -> V) (n : nat) : V := a (S n).",
            "VernacDefinition",
            "6bdf2b0f520442d908b7df781375b8c262c06ae2"
        ],
        [
            "Lemma is_pseries_decr_1 (a : nat -> V) (x y : K) (l : V) : mult y x = one -> is_pseries a x l -> is_pseries (PS_decr_1 a) x (scal y (plus l (opp (a O)))).",
            "VernacStartTheoremProof",
            "3f861573aab81349a3cff5f2cef2457803e4d4cd"
        ],
        [
            "move => Hx Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterlim_ext with (fun n : nat => scal y (sum_n (fun k => scal (pow_n x (S k)) (a (S k))) n)).",
            "VernacExtend",
            "477fbd9c25a822b59b95842afdf4f3d0c02848f0"
        ],
        [
            "intros n; induction n; unfold PS_decr_1; simpl.",
            "VernacExtend",
            "bbe28ab57aa47b20e356ad4a50c6e0d221e47c89"
        ],
        [
            "rewrite !sum_O mult_one_r scal_one scal_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Hx; try assumption.",
            "VernacExtend",
            "39c12929a6855345afcc6034cf4afc5484312045"
        ],
        [
            "apply @scal_one.",
            "VernacExtend",
            "efc0bcbe341833b02e6d2e1d251cab32d6188829"
        ],
        [
            "rewrite !sum_Sn -IHn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite scal_distr_l; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "rewrite scal_assoc (mult_assoc y).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now rewrite mult_one_l.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "apply filterlim_comp with (2 := filterlim_scal_r _ _).",
            "VernacExtend",
            "5c99b4e9f93675834f5b84d47e8d8afba05d3563"
        ],
        [
            "apply filterlim_ext with (fun n : nat => plus (sum_n (fun k => scal (pow_n x k) (a k)) (S n)) (opp (a 0%nat))).",
            "VernacExtend",
            "1fc5386e1f1849a16d8658be21a967bc3f4ab149"
        ],
        [
            "intros n; induction n; simpl.",
            "VernacExtend",
            "417fbe27653af5f047e8a3663d85ac491d642a2f"
        ],
        [
            "rewrite sum_Sn !sum_O /= mult_one_r scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite plus_comm plus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now rewrite plus_opp_l plus_zero_l.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "rewrite !sum_Sn -IHn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sym_eq; rewrite plus_comm plus_assoc.",
            "VernacExtend",
            "00e73cdc5f4d94bdb53e3f5c0334e40db568d1ca"
        ],
        [
            "apply f_equal2;[idtac|reflexivity].",
            "VernacExtend",
            "07a0b76367d5293d6caea30558a9b41dd8a8ca42"
        ],
        [
            "now rewrite !sum_Sn plus_comm.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "apply filterlim_comp_2 with (3 := filterlim_plus _ _).",
            "VernacExtend",
            "1141fa965421259e149125bedfc97586ea306105"
        ],
        [
            "apply filterlim_comp with (f:= fun x => S x) (2:=Ha).",
            "VernacExtend",
            "9e32d1ab800ddf6eda6a47ae399c4639a09f1277"
        ],
        [
            "apply eventually_subseq; intros n; omega.",
            "VernacExtend",
            "7526edbe28814bbfc9a6aabbc8457d8c9b2a1c54"
        ],
        [
            "apply filterlim_const.",
            "VernacExtend",
            "ff971edf84d1cf6e134869f4729acc40969816e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_decr_1 (a : nat -> V) (x : K) : (x = zero \\/ exists y, mult y x = one) -> ex_pseries a x -> ex_pseries (PS_decr_1 a) x.",
            "VernacStartTheoremProof",
            "917e1346543596acb3813093ba8bccc05cf4c4ba"
        ],
        [
            "case => [H | [y Hx]] [l Ha].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite H ; by apply ex_pseries_0.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "exists (scal y (plus l (opp (a 0%nat)))).",
            "VernacExtend",
            "70ac8f8660cb161ed942b0a645759f19bf1f5722"
        ],
        [
            "now apply is_pseries_decr_1.",
            "VernacExtend",
            "38c7ed0c946e5795a180ec1a0288c83b0e540dc6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition PS_decr_n (a : nat -> V) (n k : nat) : V := a (n + k)%nat.",
            "VernacDefinition",
            "3ee981d485c4242896a9eab26400b1dbc3fa0602"
        ],
        [
            "Lemma is_pseries_decr_n (a : nat -> V) (n : nat) (x y:K) (l : V) : mult y x = one -> (0 < n)%nat -> is_pseries a x l -> is_pseries (PS_decr_n a n) x (scal (pow_n y n) (plus l (opp (sum_n (fun k => scal (pow_n x k) (a k)) (n-1)%nat)))).",
            "VernacStartTheoremProof",
            "5415649f749f2c9ff6410950fbf2f19b48ff1fd0"
        ],
        [
            "move => Hx Hn Ha.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: n Hn => [ | n] Hn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply lt_irrefl in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear Hn ; simpl ; rewrite -minus_n_O /PS_decr_n /=.",
            "VernacExtend",
            "2859047c5a55e6c669f6fcfd12adc40b7e1c066e"
        ],
        [
            "elim: n => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite sum_O scal_one mult_one_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now apply is_pseries_decr_1.",
            "VernacExtend",
            "38c7ed0c946e5795a180ec1a0288c83b0e540dc6"
        ],
        [
            "set (ln := (scal (mult y (pow_n y n)) (plus l (opp (sum_n (fun k : nat => scal (pow_n x k) (a k)) n))))) in IH.",
            "VernacExtend",
            "17d98dc277c70e53516324d9540f5cf0afae171e"
        ],
        [
            "rewrite !sum_Sn /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (scal (mult y (mult y (pow_n y n))) (plus l (opp (plus (sum_n (fun k : nat => scal (pow_n x k) (a k)) n) (scal (mult x (pow_n x n)) (a (S n))))))) with (scal y (plus ln (opp (a (S (n + 0)))))).",
            "VernacExtend",
            "6db0cb4be49ac38fd59d01c98942d88da85bf3ce"
        ],
        [
            "assert (Y:is_pseries (fun k : nat => a (S (n + k))) x ln).",
            "VernacExtend",
            "a9459d33c4f54f2bdfae165c5d3506b52762a596"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "move: (is_pseries_decr_1 (fun k : nat => a (S (n + k))) x y ln Hx Y).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /PS_decr_1 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_pseries_ext => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply f_equal ; ring.",
            "VernacExtend",
            "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
        ],
        [
            "rewrite -scal_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal; unfold ln.",
            "VernacExtend",
            "2f7eff7d2d1bbfb680f82a1f6ffa94b5a1a298bc"
        ],
        [
            "repeat rewrite (scal_distr_l _ l).",
            "VernacExtend",
            "c23cdc0c7bcb18627cd6e2b08e391fe6a16b1b34"
        ],
        [
            "rewrite -plus_assoc; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "rewrite opp_plus scal_distr_l; apply f_equal.",
            "VernacExtend",
            "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
        ],
        [
            "rewrite plus_0_r -scal_opp_l scal_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply trans_eq with (scal (opp (one : K)) (a (S n))).",
            "VernacExtend",
            "f6c6b4e5a93dd909dd235b0f5b2d660b9dc0f069"
        ],
        [
            "now rewrite scal_opp_l scal_one.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "apply f_equal2; try reflexivity.",
            "VernacExtend",
            "3c43b1a499b7d0b846551865734353113dcb5bd3"
        ],
        [
            "rewrite <- opp_mult_r; apply f_equal.",
            "VernacExtend",
            "7935be01d3cecd6d5d3b361705d6fd8b564643cb"
        ],
        [
            "clear -Hx.",
            "VernacExtend",
            "4bb1da1fb6470dfebcf314d8eef9e82b30482189"
        ],
        [
            "rewrite -?/(pow_n _ (S _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (S n) => {n} /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite mult_one_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(pow_n_comm_1 x) mult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(mult_assoc y (pow_n y n) (pow_n x n)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -IH mult_one_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_decr_n (a : nat -> V) (n : nat) (x : K) : (x = zero \\/ exists y, mult y x = one) -> ex_pseries a x -> ex_pseries (PS_decr_n a n) x.",
            "VernacStartTheoremProof",
            "93e61cb5f246b2a65b889a46d734429bfa226194"
        ],
        [
            "intros Hx H.",
            "VernacExtend",
            "c4c5a8bf6b53b6182e8f392063bf3b80e0a27bc1"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "unfold PS_decr_n; now simpl.",
            "VernacExtend",
            "e550d414e6387433a143d241f0caa274fa2b85b1"
        ],
        [
            "apply ex_pseries_ext with ((PS_decr_1 (PS_decr_n a n))).",
            "VernacExtend",
            "25576f03044800d97cbec8489c57d2a6cd2b033e"
        ],
        [
            "intros m; unfold PS_decr_1, PS_decr_n.",
            "VernacExtend",
            "5f6c6fd110e5e64c37f14829e4ae7ae804137de0"
        ],
        [
            "apply f_equal; ring.",
            "VernacExtend",
            "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
        ],
        [
            "apply ex_pseries_decr_1.",
            "VernacExtend",
            "aab264b75dc2a62afde11bd32c7c1f025fadafc1"
        ],
        [
            "apply Hx.",
            "VernacExtend",
            "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
        ],
        [
            "now apply IHn.",
            "VernacExtend",
            "d7b5337f909b975d7c4100924592d614741c9e55"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PS_incr.",
            "VernacEndSegment",
            "c6715f0c3243bf5a6ef87e41e5c304bd8d134943"
        ],
        [
            "Lemma PSeries_incr_1 a x : PSeries (PS_incr_1 a) x = x * PSeries a x.",
            "VernacStartTheoremProof",
            "d87a3b96b87849e4f90a03359f16ef6970af668c"
        ],
        [
            "rewrite -Series_scal_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "unfold PSeries, Series.",
            "VernacExtend",
            "84f15325581db580a52d2bc80422cec2a7bb8216"
        ],
        [
            "rewrite -(Lim_seq_incr_1 (sum_n (fun k : nat => PS_incr_1 a k * x ^ k))) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal, Lim_seq_ext.",
            "VernacExtend",
            "e1cfa4da5ff991d74483661018e540e778c207e4"
        ],
        [
            "case.",
            "VernacExtend",
            "3dfaa17e8190d1522b22601372c66b9913f6a1e2"
        ],
        [
            "rewrite sum_Sn !sum_O /= /plus /zero /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "elim => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite !sum_Sn !sum_O /= /plus /zero /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite sum_Sn IH !sum_Sn /= /plus /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_incr_n (a : nat -> R) (n : nat) (x : R) : PSeries (PS_incr_n a n) x = x^n * PSeries a x.",
            "VernacStartTheoremProof",
            "705f813c152d0cdd35b8bd85b3e332535ea0496b"
        ],
        [
            "elim: n => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite Rmult_1_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite PSeries_incr_1 IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_decr_1 (a : nat -> R) (x : R) : ex_pseries a x -> PSeries a x = a O + x * PSeries (PS_decr_1 a) x.",
            "VernacStartTheoremProof",
            "78c774a9e8cee603ec7e1ec2424a40a43a42f041"
        ],
        [
            "intros Ha.",
            "VernacExtend",
            "6ecded848bba79cd3aa9b3381ee26c94c3ca8775"
        ],
        [
            "case: (Req_dec x 0) => Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Hx PSeries_0 ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "move: (is_pseries_decr_1 a x (/x) (PSeries a x) (Rinv_l _ Hx) (PSeries_correct _ _ Ha)) => Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (is_pseries_unique _ _ _ Hb).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /plus /opp /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "now field.",
            "VernacExtend",
            "f3de8dbe903009a3417a80d825415eef0ce85558"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_decr_1_aux (a : nat -> R) (x : R) : a O = 0 -> (PSeries a x) = x * PSeries (PS_decr_1 a) x.",
            "VernacStartTheoremProof",
            "90ae8d039d8674f4064144df1d712099ccf06b9a"
        ],
        [
            "intros Ha0.",
            "VernacExtend",
            "97c70b1f03c36427ba9878a01583cce39bc59645"
        ],
        [
            "rewrite -PSeries_incr_1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /PS_incr_1 /PS_decr_1 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Series_ext.",
            "VernacExtend",
            "fdbcb56c0988c866fe0a698401ce4bfd1c6b2a6b"
        ],
        [
            "case => //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite Ha0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_decr_n (a : nat -> R) (n : nat) (x : R) : ex_pseries a x -> PSeries a x = sum_f_R0 (fun k => a k * x^k) n + x^(S n) * PSeries (PS_decr_n a (S n)) x.",
            "VernacStartTheoremProof",
            "8168c2a23bbb479317564b048ba73c91fd16f7c4"
        ],
        [
            "intros Ha.",
            "VernacExtend",
            "6ecded848bba79cd3aa9b3381ee26c94c3ca8775"
        ],
        [
            "case: (Req_dec x 0) => Hx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Hx PSeries_0 ; simpl ; ring_simplify.",
            "VernacExtend",
            "278eeb05e28e517b96bdee19c5c473770d13021b"
        ],
        [
            "elim: n => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite -IH ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "assert (V:(pow_n x (S n) <> 0)).",
            "VernacExtend",
            "dff73d9b2df0fb77f86de3d0a1b585638886ad38"
        ],
        [
            "rewrite pow_n_pow; now apply pow_nonzero.",
            "VernacExtend",
            "44cff3ab76323d1ba63c74ebf7417a99311a5fbe"
        ],
        [
            "move: (is_pseries_decr_n a (S n) x (/x) (PSeries a x) (Rinv_l x Hx) (lt_0_Sn _) (PSeries_correct _ _ Ha)) => Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (is_pseries_unique _ _ _ Hb).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (sum_n_ext _ (fun k : nat => a k * x ^ k)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite sum_n_Reals.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (S n -1)%nat with n.",
            "VernacExtend",
            "5043f6406e48ec2d517c658614fddf3055e7396f"
        ],
        [
            "rewrite /scal /plus /opp /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite pow_n_pow -Rinv_pow ; try assumption.",
            "VernacExtend",
            "39c12929a6855345afcc6034cf4afc5484312045"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "split; try assumption.",
            "VernacExtend",
            "7aec98fbbf52695c4dbe780a98e3c8166b58320f"
        ],
        [
            "now apply pow_nonzero.",
            "VernacExtend",
            "e43dcfc06a9f119d1f2061caf4fbc8985bb63349"
        ],
        [
            "now apply plus_minus.",
            "VernacExtend",
            "759d5a7777379d7e7ec2660511e1270f59387bea"
        ],
        [
            "intros m; rewrite pow_n_pow.",
            "VernacExtend",
            "ffe2fe1519dafab748c2161f6a976e85dc7acb29"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_decr_n_aux (a : nat -> R) (n : nat) (x : R) : (forall k : nat, (k < n)%nat -> a k = 0) -> PSeries a x = x^n * PSeries (PS_decr_n a n) x.",
            "VernacStartTheoremProof",
            "132a79f357c3cb220dcbce26505df1bff38ca48b"
        ],
        [
            "elim: n => /= [ | n IH] Ha.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite Rmult_1_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply PSeries_ext => n ; by intuition.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "rewrite IH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite PSeries_decr_1_aux.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (Rmult_comm _ (x^n)) Rmult_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "repeat apply Rmult_eq_compat_l.",
            "VernacExtend",
            "c7ab810debda981b95e89d049d103939ca373424"
        ],
        [
            "apply PSeries_ext => k ; rewrite /PS_decr_1 /PS_decr_n ; by intuition.",
            "VernacExtend",
            "807299c3a0aad1b7078a1cfb1dd047b9e08cae61"
        ],
        [
            "apply Ha ; by intuition.",
            "VernacExtend",
            "45f160527e330b14f030b3479294aefcc6c390f8"
        ],
        [
            "move => k Hk.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Ha ; by intuition.",
            "VernacExtend",
            "45f160527e330b14f030b3479294aefcc6c390f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_incr_1 (a : nat -> R) : CV_radius (PS_incr_1 a) = CV_radius a.",
            "VernacStartTheoremProof",
            "34637afc03cd4a6a5102eb586ce0cd5982c7d648"
        ],
        [
            "assert (Ha := CV_radius_bounded a).",
            "VernacExtend",
            "ec140409e9ce8fbf217ea86b43eed6fc0b734880"
        ],
        [
            "assert (Ha' := CV_radius_bounded (PS_incr_1 a)).",
            "VernacExtend",
            "f63fc871d7c5dff4ce9f2742c2e588303e57deae"
        ],
        [
            "apply Rbar_le_antisym.",
            "VernacExtend",
            "f0e54e4db9d25ea0231de349a146a11c944777e8"
        ],
        [
            "apply Ha' => x [M Hx] ; apply Ha.",
            "VernacExtend",
            "1efc0eb68ad39eb820af24bd5015e00caf02e9cf"
        ],
        [
            "move: (fun n => Hx (S n)) => {Hx} Hx ; simpl in Hx.",
            "VernacExtend",
            "17ff040e6c4d360c84e1aac4c8658103d198c58a"
        ],
        [
            "case: (Req_dec x 0) => Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Hx0 ; exists (Rabs (a O)) ; case => /= [ | n].",
            "VernacExtend",
            "8c27a1e5bb539d8b1937a2d7cf3b7fa928f33064"
        ],
        [
            "rewrite Rmult_1_r ; by right.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite Rmult_0_l Rmult_0_r Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (M / Rabs x) => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_div_r.",
            "VernacExtend",
            "39a40b6e5130576866c7b399976cb299d3a9a507"
        ],
        [
            "by apply Rabs_pos_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -Rabs_mult Rmult_assoc (Rmult_comm _ x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Ha => x [M Hx] ; apply Ha'.",
            "VernacExtend",
            "6945ccf931b3d4a57f1a4fde8f8c9efe17d5d3f5"
        ],
        [
            "exists (M * Rabs x) ; case => [ | n] /=.",
            "VernacExtend",
            "c994296b206ac291a5e6cd7cc6f61e46a971d8b6"
        ],
        [
            "rewrite Rmult_0_l Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "eapply Rle_trans, (Hx O).",
            "VernacExtend",
            "c54ea14ecee572667cfcea71bce2a8d93bb0eadb"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (Rmult_comm x) -Rmult_assoc Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_decr_1 (a : nat -> R) : CV_radius (PS_decr_1 a) = CV_radius a.",
            "VernacStartTheoremProof",
            "0424419c5a526887eab2b6b9c53750a9d90e8135"
        ],
        [
            "assert (Ha := CV_radius_bounded a).",
            "VernacExtend",
            "ec140409e9ce8fbf217ea86b43eed6fc0b734880"
        ],
        [
            "assert (Ha' := CV_radius_bounded (PS_decr_1 a)).",
            "VernacExtend",
            "3c3e24b66d0ac2ddc23d7a3989f3bf3c193d24af"
        ],
        [
            "apply Rbar_le_antisym.",
            "VernacExtend",
            "f0e54e4db9d25ea0231de349a146a11c944777e8"
        ],
        [
            "apply Ha' => x [M Hx] ; apply Ha.",
            "VernacExtend",
            "1efc0eb68ad39eb820af24bd5015e00caf02e9cf"
        ],
        [
            "eexists ; case => [ | n] ; simpl.",
            "VernacExtend",
            "61064d81f4ae28579f95eded153ea570e64209ad"
        ],
        [
            "eapply Rle_trans, Rmax_l.",
            "VernacExtend",
            "998f098aaa3dfbd25cb62849ae254a6f4d1c19d8"
        ],
        [
            "rewrite Rmult_1_r ; apply Rle_refl.",
            "VernacExtend",
            "2d67a18abe5a05ff39bf986b33b6e7085865b7a4"
        ],
        [
            "eapply Rle_trans, Rmax_r.",
            "VernacExtend",
            "6c0028a6c36bd7e184a7f193f8765b6165686be2"
        ],
        [
            "rewrite (Rmult_comm x) -Rmult_assoc Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Ha => x [M Hx] ; apply Ha'.",
            "VernacExtend",
            "6945ccf931b3d4a57f1a4fde8f8c9efe17d5d3f5"
        ],
        [
            "move: (fun n => Hx (S n)) => {Hx} Hx ; simpl in Hx.",
            "VernacExtend",
            "17ff040e6c4d360c84e1aac4c8658103d198c58a"
        ],
        [
            "case: (Req_dec x 0) => Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite Hx0 ; exists (Rabs (a 1%nat)) ; case => /= [ | n].",
            "VernacExtend",
            "6e03b3d0b83f2a07231b933c28a2d9d033a6fa37"
        ],
        [
            "rewrite Rmult_1_r ; by right.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite Rmult_0_l Rmult_0_r Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (M / Rabs x) => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_div_r.",
            "VernacExtend",
            "39a40b6e5130576866c7b399976cb299d3a9a507"
        ],
        [
            "by apply Rabs_pos_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Rabs_mult Rmult_assoc (Rmult_comm _ x).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition PS_mult (a b : nat -> R) n := sum_f_R0 (fun k => a k * b (n - k)%nat) n.",
            "VernacDefinition",
            "74b1a206c25ae053731d65610e4d4a0aa1670404"
        ],
        [
            "Lemma is_pseries_mult (a b : nat -> R) (x la lb : R) : is_pseries a x la -> is_pseries b x lb -> Rbar_lt (Rabs x) (CV_radius a) -> Rbar_lt (Rabs x) (CV_radius b) -> is_pseries (PS_mult a b) x (la * lb).",
            "VernacStartTheoremProof",
            "25f921b51e7e01e670d59016cc079e9ada560ce8"
        ],
        [
            "move => Hla Hlb Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_series_ext with (fun n => sum_f_R0 (fun k => (fun l => a l * x ^ l) k * (fun l => b l * x ^ l) (n - k)%nat) n).",
            "VernacExtend",
            "f50e58f815350d4ae048da8cb778c49806a0aae1"
        ],
        [
            "move => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /PS_mult /scal /= /mult /= scal_sum.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sum_eq => i Hi.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -{4}(MyNat.sub_add _ _ Hi).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite pow_n_pow pow_add.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply (is_series_mult (fun l => a l * x ^ l) (fun l => b l * x ^ l)).",
            "VernacExtend",
            "42421c8483322d2510261990e35e8a05784e2cfa"
        ],
        [
            "now apply (is_pseries_R a x la).",
            "VernacExtend",
            "fddbddb23a13d664b2ff697ac74a83679e4e8ec6"
        ],
        [
            "now apply (is_pseries_R b x lb).",
            "VernacExtend",
            "e5e869ffd989a8867cdcf807e0fa58d77f726b23"
        ],
        [
            "by apply CV_disk_inside.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply CV_disk_inside.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_mult (a b : nat -> R) (x : R) : Rbar_lt (Rabs x) (CV_radius a) -> Rbar_lt (Rabs x) (CV_radius b) -> ex_pseries (PS_mult a b) x.",
            "VernacStartTheoremProof",
            "5493100ae323db787ba85bf7677578c701ed9e89"
        ],
        [
            "move => Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists ((PSeries a x) * (PSeries b x)).",
            "VernacExtend",
            "0d1075a788b49889abf908e8e3ac6980db0fb30a"
        ],
        [
            "apply is_pseries_mult => // ; by apply PSeries_correct, CV_radius_inside.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_mult (a b : nat -> R) (x : R) : Rbar_lt (Rabs x) (CV_radius a) -> Rbar_lt (Rabs x) (CV_radius b) -> PSeries (PS_mult a b) x = PSeries a x * PSeries b x.",
            "VernacStartTheoremProof",
            "973502d07434bb4fc74c919e98b6f52ea6331a3b"
        ],
        [
            "move => Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_pseries_unique.",
            "VernacExtend",
            "bc31764e2cd2bfe0204b6108fcc6c1df4cd7855c"
        ],
        [
            "apply is_pseries_mult => // ; by apply PSeries_correct, CV_radius_inside.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_pseries_odd_even (a : nat -> R) (x l1 l2 : R) : is_pseries (fun n => a (2*n)%nat) (x^2) l1 -> is_pseries (fun n => a (2*n+1)%nat) (x^2) l2 -> is_pseries a x (l1 + x * l2).",
            "VernacStartTheoremProof",
            "78f0a0d9af28ee727407695d67aafa27e08fbde0"
        ],
        [
            "rewrite 3!is_pseries_R.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply filterlim_ext with (fun n => (sum_n (fun k : nat => a (2 * k)%nat * (x ^ 2) ^ k) (div2 n)) + x * match n with | O => 0 | S n => (sum_n (fun k : nat => a (2 * k + 1)%nat * (x ^ 2) ^ k) (div2 n)) end).",
            "VernacExtend",
            "fbdfda2a50d8caaabdddda94cca62374af5c2b83"
        ],
        [
            "case => [ | n].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /= !sum_O /= ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "case: (even_odd_dec n) => Hn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite 3!sum_n_Reals.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(even_div2 _ Hn) {3}(even_double _ Hn).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (div2 n) => {n Hn} [ | n] ; rewrite ?double_S /sum_f_R0 -/sum_f_R0.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "rewrite /double /= ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "rewrite -pow_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (2 * S n)%nat with (S (S (double n))) by (rewrite -double_S /double ; ring).",
            "VernacExtend",
            "03576a4aea503a28099ffd58bf6e0e07fae70ffb"
        ],
        [
            "replace (S (S (double n)) + 1)%nat with (S (S (S (double n)))) by ring.",
            "VernacExtend",
            "83eb20d0bcc51691ab12c71b8b56c03fabbcb40f"
        ],
        [
            "move => <- ; simpl ; ring.",
            "VernacExtend",
            "096989c64d21fcc92162023b03ace37ddc7573f4"
        ],
        [
            "rewrite 3!sum_n_Reals.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(odd_div2 _ Hn) {3}(odd_double _ Hn).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (div2 n) => {n Hn} [ | n] ; rewrite ?double_S /sum_f_R0 -/sum_f_R0.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "rewrite /double /= ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "rewrite -?pow_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (2 * S n)%nat with (S (S (double n))) by (rewrite -double_S /double ; ring).",
            "VernacExtend",
            "03576a4aea503a28099ffd58bf6e0e07fae70ffb"
        ],
        [
            "replace (2 * S (S n))%nat with (S (S (S (S (double n))))) by (rewrite -double_S /double ; ring).",
            "VernacExtend",
            "4869259476abfc981c85fab3c1b9e3c90b43a0d8"
        ],
        [
            "replace (S (S (double n)) + 1)%nat with (S (S (S (double n)))) by ring.",
            "VernacExtend",
            "83eb20d0bcc51691ab12c71b8b56c03fabbcb40f"
        ],
        [
            "move => <- ; simpl ; ring.",
            "VernacExtend",
            "096989c64d21fcc92162023b03ace37ddc7573f4"
        ],
        [
            "apply (is_lim_seq_plus' _ _ l1 (x*l2)).",
            "VernacExtend",
            "f1d6ba1cd2acf75fae82297bda0e9332d79afbc8"
        ],
        [
            "apply filterlim_comp with (2:=H1).",
            "VernacExtend",
            "9a28dfd9bff2dd6fb3e3982b3c3ef0ac6f2d47c8"
        ],
        [
            "intros P [N HN].",
            "VernacExtend",
            "49e72385e25f38319889834e3eecd05dfb798dc2"
        ],
        [
            "exists (2*N+1)%nat.",
            "VernacExtend",
            "63dda7e9d4582ae7974b12691166c7f53076d670"
        ],
        [
            "intros n Hn; apply HN.",
            "VernacExtend",
            "6a83c240bebd44bfef854f41047aa4dfe96cccea"
        ],
        [
            "apply le_double.",
            "VernacExtend",
            "afa53fd37ad6093b0affa9a9693761307de0b21a"
        ],
        [
            "apply plus_le_reg_l with 1%nat.",
            "VernacExtend",
            "39c7193d33a17f13c698a1c7004cb9288060963c"
        ],
        [
            "rewrite Plus.plus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply le_trans with (1:=Hn).",
            "VernacExtend",
            "8ac30d3ff1e4a07f44d84ea98e599463c400de71"
        ],
        [
            "apply le_trans with (1+double (div2 n))%nat.",
            "VernacExtend",
            "02198a95060ab8f2ae6b52fd51e8940e9625c43c"
        ],
        [
            "case (even_or_odd n); intros J.",
            "VernacExtend",
            "238ac0d9992145bbbe8c4194d72f4b8f354b7887"
        ],
        [
            "rewrite <- even_double; try exact J.",
            "VernacExtend",
            "fc7ec98876c7f6be416b286aa4f89c876a8d557b"
        ],
        [
            "now apply le_S.",
            "VernacExtend",
            "83e46c3d4ad488778b4895d310e46eba5fd4cd36"
        ],
        [
            "rewrite <- odd_double; easy.",
            "VernacExtend",
            "11530077b3f018df59deb62cabf2a1703c9e690c"
        ],
        [
            "simpl; now rewrite plus_0_r.",
            "VernacExtend",
            "03b09a89a202d4783a5a301a9614ba4d90219212"
        ],
        [
            "apply (is_lim_seq_scal_l _ x l2) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply filterlim_ext_loc with (fun n => sum_n (fun k : nat => a (2 * k + 1)%nat * (x ^ 2) ^ k) (div2 (pred n))).",
            "VernacExtend",
            "38946595ddfbf68289e77037ab8133d3f78b0d84"
        ],
        [
            "exists 1%nat; intros y; case y.",
            "VernacExtend",
            "eef31dcbc4e5141f6cecf51223c76500c88b3dc6"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "intros n _; reflexivity.",
            "VernacExtend",
            "ebfc41f2306f92453950c1cb14a8f8ba6e453f78"
        ],
        [
            "apply filterlim_comp with (2:=H2).",
            "VernacExtend",
            "ced90c43c2d3a90eeb539ce369d8a0c27704c157"
        ],
        [
            "intros P [N HN].",
            "VernacExtend",
            "49e72385e25f38319889834e3eecd05dfb798dc2"
        ],
        [
            "exists (2*N+2)%nat.",
            "VernacExtend",
            "ecdffe88176b5a880f99542133d00d30b1c89e04"
        ],
        [
            "intros n Hn; apply HN.",
            "VernacExtend",
            "6a83c240bebd44bfef854f41047aa4dfe96cccea"
        ],
        [
            "apply le_double.",
            "VernacExtend",
            "afa53fd37ad6093b0affa9a9693761307de0b21a"
        ],
        [
            "apply plus_le_reg_l with 2%nat.",
            "VernacExtend",
            "a0b416656c63dc94d1c6889e9285844816b65fdc"
        ],
        [
            "rewrite Plus.plus_comm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply le_trans with (1:=Hn).",
            "VernacExtend",
            "8ac30d3ff1e4a07f44d84ea98e599463c400de71"
        ],
        [
            "apply le_trans with (1+(1+double (div2 (pred n))))%nat.",
            "VernacExtend",
            "5b65c43216a3281a7d627b846555c15906abfb3d"
        ],
        [
            "case (even_or_odd (pred n)); intros J.",
            "VernacExtend",
            "20d3816c6d14bc088e57db7fe1bb5dbe0888161e"
        ],
        [
            "rewrite <- even_double; try exact J.",
            "VernacExtend",
            "fc7ec98876c7f6be416b286aa4f89c876a8d557b"
        ],
        [
            "case n.",
            "VernacExtend",
            "11697c0361eed9b7e10df873f1d76a9d8f9f100a"
        ],
        [
            "simpl; now apply le_S, le_S.",
            "VernacExtend",
            "09c8cb6ec31f528518662b5a37187553841ccaa4"
        ],
        [
            "intros m; simpl; now apply le_S.",
            "VernacExtend",
            "4535893244fcbaaff6297fa91ca7f90fe14656ee"
        ],
        [
            "rewrite <- odd_double; try exact J.",
            "VernacExtend",
            "81315e535ac4c667123e861af2d66106c7e5871f"
        ],
        [
            "case n; simpl; try easy.",
            "VernacExtend",
            "961991fcd9e248fd38cb93fcbf17b52e0ea9d8f1"
        ],
        [
            "now apply le_S.",
            "VernacExtend",
            "83e46c3d4ad488778b4895d310e46eba5fd4cd36"
        ],
        [
            "simpl; now rewrite plus_0_r.",
            "VernacExtend",
            "03b09a89a202d4783a5a301a9614ba4d90219212"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_odd_even (a : nat -> R) (x : R) : ex_pseries (fun n => a (2*n)%nat) (x^2) -> ex_pseries (fun n => a (2*n+1)%nat) (x^2) -> ex_pseries a x.",
            "VernacStartTheoremProof",
            "41f1201ac1cb1d737dacbbbe3165612fe2d54d06"
        ],
        [
            "move => [l1 H1] [l2 H2].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists (l1 + x * l2).",
            "VernacExtend",
            "a52d828160969ccc10fc5904e34af82cb320ed59"
        ],
        [
            "by apply is_pseries_odd_even.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_odd_even (a : nat -> R) (x : R) : ex_pseries (fun n => a (2*n)%nat) (x^2) -> ex_pseries (fun n => a (2*n+1)%nat) (x^2) -> PSeries a x = PSeries (fun n => a (2*n)%nat) (x^2) + x * PSeries (fun n => a (2*n+1)%nat) (x^2).",
            "VernacStartTheoremProof",
            "994f55c48b611b03ea1929c4191f5fc431e32c30"
        ],
        [
            "move => H1 H2 ; apply is_pseries_unique.",
            "VernacExtend",
            "48455c2b1327920f79d0ea14f878ebd2851baee8"
        ],
        [
            "apply (is_pseries_odd_even a x); by apply PSeries_correct.",
            "VernacExtend",
            "f811b0dc735d057b8f07406e1ac857de68eeab45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_const_0 : forall x, PSeries (fun _ => 0) x = 0.",
            "VernacStartTheoremProof",
            "6a2721e5b42ec4b7108f79de35c7b8fb6403185e"
        ],
        [
            "move => x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "replace 0 with (real 0) by auto.",
            "VernacExtend",
            "6fd71a3e236086a30e64c3bf3fac13dd74498ba9"
        ],
        [
            "apply (f_equal real).",
            "VernacExtend",
            "57e73bb5eae5aa448423da85c916d02b5d8e8198"
        ],
        [
            "rewrite -{2}(Lim_seq_const 0) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Lim_seq_ext.",
            "VernacExtend",
            "7ea6f4316462f16e8e0201ec50e1735bb5bff76f"
        ],
        [
            "elim => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite sum_O ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "rewrite sum_Sn /= /plus /= IH ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_const_0 : CV_radius (fun _ => 0) = p_infty.",
            "VernacStartTheoremProof",
            "72385ee3d3ec4f89bbed948e135f20d4532ae62d"
        ],
        [
            "suff : forall x, Rbar_le (Rabs x) (CV_radius (fun _ : nat => 0)).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case H : (CV_radius (fun _ : nat => 0)) => [cv | | ] //= H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (Rle_lt_dec 0 cv) => Hcv.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (H0 (cv + 1)) => {H0} H0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "contradict H0 ; apply Rlt_not_le => /=.",
            "VernacExtend",
            "6961ba332674f176dc555cae618e94b32c542dc4"
        ],
        [
            "apply Rlt_le_trans with (2 := Rle_abs _).",
            "VernacExtend",
            "e9ae6f7944f7c4212405dde246a6959f82ce32de"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify ; by apply Rlt_0_1.",
            "VernacExtend",
            "e384eae955b0244fa5ffb15789f2a204a411a7e6"
        ],
        [
            "contradict Hcv ; apply (Rbar_le_not_lt cv 0).",
            "VernacExtend",
            "95f75737c718fca1517f05a754a2c98adf179d2a"
        ],
        [
            "rewrite -Rabs_R0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (H0 0) => {H0} H0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "contradict H0 ; by apply Rbar_lt_not_le.",
            "VernacExtend",
            "2e28e8e5b324e5a7dfdafde95cb93720aa6e8366"
        ],
        [
            "move => x ; apply Rbar_not_lt_le => Hx.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply CV_disk_outside in Hx.",
            "VernacExtend",
            "514c912a176d0b638754812e61d155f3d7dc7ff5"
        ],
        [
            "apply: Hx.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply is_lim_seq_ext with (fun _ => 0).",
            "VernacExtend",
            "47b5f7475f5ec40ef1472095e4dff15d2363e610"
        ],
        [
            "move => n ; ring.",
            "VernacExtend",
            "550d555a37db07b848ee1c0dcb59e4bba252650f"
        ],
        [
            "by apply is_lim_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section PS_opp.",
            "VernacBeginSection",
            "8a76a755526b74c75991b30eb6cc83930af626fe"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Definition PS_opp (a : nat -> V) (n : nat) : V := opp (a n).",
            "VernacDefinition",
            "0407d3617789bc58be8c582a5bba87f8a44ac82c"
        ],
        [
            "Lemma is_pseries_opp (a : nat -> V) (x :K) (l : V) : is_pseries a x l -> is_pseries (PS_opp a) x (opp l).",
            "VernacStartTheoremProof",
            "18037f927779d38ea46ee94d99e6a347e2d12956"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "replace (opp l) with (scal (opp (one : K)) l).",
            "VernacExtend",
            "626b8a340a39e53dccecb41fc7218071ac6ad515"
        ],
        [
            "2: now rewrite scal_opp_l scal_one.",
            "VernacExtend",
            "98608c19359af156ed215cbf8c138c56ced41a8c"
        ],
        [
            "apply is_pseries_ext with (PS_scal (opp one) a).",
            "VernacExtend",
            "c6549ca07ee82052fc839d89fa9e58be46edef00"
        ],
        [
            "intros n; unfold PS_scal, PS_opp.",
            "VernacExtend",
            "6fea27132710daa79fbc12cf2eaf1a3566a53cb1"
        ],
        [
            "now rewrite scal_opp_l scal_one.",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "apply is_pseries_scal.",
            "VernacExtend",
            "560b510308599a0b4018bff64aedc6c82d5a77b0"
        ],
        [
            "rewrite -opp_mult_l -opp_mult_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mult_one_l mult_one_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_opp (a : nat -> V) (x : K) : ex_pseries a x -> ex_pseries (PS_opp a) x.",
            "VernacStartTheoremProof",
            "eea7cf51970ae9b690f88a50e432736d6bc9a2a2"
        ],
        [
            "intros [l Hl].",
            "VernacExtend",
            "e57b129728f1404a6b858b17bad3620408feae13"
        ],
        [
            "exists (opp l).",
            "VernacExtend",
            "34abed386fee7bfd53c9873615e8fdbd327a482e"
        ],
        [
            "now apply is_pseries_opp.",
            "VernacExtend",
            "617579d5161fe87fbf5ba3f007d9f83734b1738b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PS_opp.",
            "VernacEndSegment",
            "02b66ad4dc9cccadce0a91608a796196fae731d6"
        ],
        [
            "Lemma PSeries_opp (a : nat -> R) (x : R) : PSeries (PS_opp a) x = - PSeries a x.",
            "VernacStartTheoremProof",
            "eaaa9caee2feaa99c80f5e3f4d593110efbe296c"
        ],
        [
            "replace (- PSeries a x) with ((-1) * PSeries a x) by ring.",
            "VernacExtend",
            "88b5948f152c4ff830bcb02f4bb5e3c22c266eec"
        ],
        [
            "rewrite -PSeries_scal.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply PSeries_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite /PS_scal /PS_opp scal_opp_one.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_opp (a : nat -> R) : (CV_radius (PS_opp a)) = (CV_radius a).",
            "VernacStartTheoremProof",
            "1b81c469fdac68d36b4277a6651497d8afea96ae"
        ],
        [
            "rewrite -(CV_radius_scal (-1)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply CV_radius_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite /PS_scal /PS_opp scal_opp_l scal_opp_r opp_opp scal_one.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Ropp_0 ; apply Rlt_not_eq, Ropp_lt_contravar, Rlt_0_1.",
            "VernacExtend",
            "e33a4cf11d1d62286187d0f7329c3e9b4d028f2a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section PS_minus.",
            "VernacBeginSection",
            "749e694703dd7ee6f94b0a6733eabf6aab30bc51"
        ],
        [
            "Context {K : AbsRing} {V : NormedModule K}.",
            "VernacContext",
            "3b61d1aae35ebd0170cfa463dc9750aa874e5a6f"
        ],
        [
            "Definition PS_minus (a b : nat -> V) (n : nat) : V := plus (a n) (opp (b n)).",
            "VernacDefinition",
            "ec434fe117d9dbbd72207e583eddeb984b71779d"
        ],
        [
            "Lemma is_pseries_minus (a b : nat -> V) (x:K) (la lb : V) : is_pseries a x la -> is_pseries b x lb -> is_pseries (PS_minus a b) x (plus la (opp lb)).",
            "VernacStartTheoremProof",
            "7c63e2b865e56151a03f61c7b37ecc54274d04b5"
        ],
        [
            "move => Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_pseries_plus.",
            "VernacExtend",
            "eedde088179d5f48e36a2538233d26a548611876"
        ],
        [
            "exact: Ha.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply is_pseries_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_minus (a b : nat -> V) (x : K) : ex_pseries a x -> ex_pseries b x -> ex_pseries (PS_minus a b) x.",
            "VernacStartTheoremProof",
            "2a2ca709dca55d17bc0ace18433f07d6d1dff789"
        ],
        [
            "move => Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply ex_pseries_plus.",
            "VernacExtend",
            "2413e5aad80f45a7210618ec7bf07d18fe445bf0"
        ],
        [
            "exact: Ha.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply ex_pseries_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PS_minus.",
            "VernacEndSegment",
            "ca62fbb4bb1b713ddaa5b43abcb410946cc6782f"
        ],
        [
            "Lemma PSeries_minus (a b : nat -> R) (x : R) : ex_pseries a x -> ex_pseries b x -> PSeries (PS_minus a b) x = PSeries a x - PSeries b x.",
            "VernacStartTheoremProof",
            "6fee07f1f29ea10bca0c77b4ea3e9c38e907c7a5"
        ],
        [
            "move => Ha Hb.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite PSeries_plus.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite PSeries_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: Ha.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply ex_pseries_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Abel (a : nat -> R) : Rbar_lt 0 (CV_radius a) -> Rbar_lt (CV_radius a) p_infty -> ex_pseries a (CV_radius a) -> filterlim (PSeries a) (at_left (CV_radius a)) (locally (PSeries a (CV_radius a))).",
            "VernacStartTheoremProof",
            "227235b3b7c1bb48d995a9bfd6f5822733072267"
        ],
        [
            "case Hcv : (CV_radius a) => [cv | | ] //= Hcv0 _ Ha1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "wlog: cv a Hcv Hcv0 Ha1 / (cv = 1) => Hw.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply filterlim_ext with (fun x => PSeries (fun n => a n * cv ^ n) (x / cv)).",
            "VernacExtend",
            "198bc3b39cb21931493c16a57fb96a56c6a4771f"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply Series_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Rmult_assoc -Rpow_mult_distr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal, f_equal2 => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "field ; by apply Rgt_not_eq.",
            "VernacExtend",
            "3ee914fdf1169c2e6f3cdb8a22eb49a479eeb6d3"
        ],
        [
            "apply filterlim_comp with (at_left 1).",
            "VernacExtend",
            "9878f7cac244b317f017a27e967e57f9ab3dbd37"
        ],
        [
            "intros P [d Hd].",
            "VernacExtend",
            "b0e698234308a641534e33c7e92cd0cf9f876c93"
        ],
        [
            "unfold filtermap.",
            "VernacExtend",
            "ab2a046933e4dbb14f70f2b6f6c5f6e701f158bb"
        ],
        [
            "eapply filter_imp.",
            "VernacExtend",
            "bf3d126874cf320edb00f681aadb1db062bce3fd"
        ],
        [
            "intros x Hx ; apply Hd.",
            "VernacExtend",
            "6b735ca2b05df4af53079225a09a7521e2208e02"
        ],
        [
            "apply @norm_compat1.",
            "VernacExtend",
            "25d92ad411ec3d2377eb921e60728986e99a3476"
        ],
        [
            "rewrite /minus /plus /opp /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (x / cv + _) with ((x - cv) / cv) by (field ; exact: Rgt_not_eq).",
            "VernacExtend",
            "f45b4806f04d5a765f9ec1c07f26b5961aadd494"
        ],
        [
            "rewrite /norm /= /abs /= Rabs_div ; try by apply Rgt_not_eq.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "rewrite (Rabs_pos_eq cv) ; try by apply Rlt_le.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "apply Rlt_div_l => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "eapply (proj1 Hx).",
            "VernacExtend",
            "c20e6f0704d29f6ab1f17c5247fef2a0554f239b"
        ],
        [
            "apply Rlt_div_l => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Rmult_1_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply (proj2 Hx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "assert (Hd' : 0 < d * cv).",
            "VernacExtend",
            "392e98769634eedfea1ee77ea235eac9fb5d3ef2"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "by apply d.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (mkposreal _ Hd') => /= y Hy Hy0 ; by split.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "replace (PSeries a cv) with (PSeries (fun n : nat => a n * cv ^ n) 1).",
            "VernacExtend",
            "23518b5c19db54408ea3857049c9c62b88aeb98d"
        ],
        [
            "apply (Hw 1 (fun n : nat => a n * cv ^ n)) ; clear Hw.",
            "VernacExtend",
            "a30bec2970608a613e5dc2a9d9c6dea3c9f9499a"
        ],
        [
            "apply Rbar_le_antisym.",
            "VernacExtend",
            "f0e54e4db9d25ea0231de349a146a11c944777e8"
        ],
        [
            "move: Hcv ; rewrite /CV_radius /Lub.Lub_Rbar /CV_disk.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: Lub.ex_lub_Rbar => l /= Hl Hl1 ; case: Lub.ex_lub_Rbar => l' /= Hl'.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "rewrite Hl1 in Hl => {l Hl1}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Hl'.",
            "VernacExtend",
            "6972bbb56a84a920c24e42e8c16e3f1e4b592478"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "apply (Rmult_le_reg_l cv) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Hl.",
            "VernacExtend",
            "02df804151e4adadf6baf4a5ea9b58097df0f911"
        ],
        [
            "move: Hx ; apply ex_series_ext => n.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite Rpow_mult_distr Rmult_assoc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Rabs_R1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rbar_not_lt_le => Hcv'.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply CV_disk_outside in Hcv'.",
            "VernacExtend",
            "332482e24ff3649939eec440a08b85980bbfc83b"
        ],
        [
            "apply: Hcv'.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply ex_series_lim_0 ; move: Ha1 ; apply ex_series_ext => n.",
            "VernacExtend",
            "2d93f719ea2e7311699383ca7749a55c2dd613d1"
        ],
        [
            "rewrite pow_n_pow pow1 Rmult_1_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: Ha1 ; apply ex_series_ext => n.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite !pow_n_pow pow1 scal_one.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Series_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite pow1 Rmult_1_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Hw in Hcv Ha1 |- * => {cv Hw Hcv0}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "wlog: a Hcv Ha1 / (PSeries a 1 = 0) => Hw.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "set b := fun n => match n with | O => a O - PSeries a 1 | S n => a (S n) end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "assert (CV_radius b = Finite 1).",
            "VernacExtend",
            "dd6ae93211e002ea018e410720cabec6c8c7e292"
        ],
        [
            "rewrite -Hcv.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(CV_radius_decr_1 a) -(CV_radius_decr_1 b).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply CV_radius_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assert (ex_pseries b 1).",
            "VernacExtend",
            "4671d742a702c62c96a054f3334e83042aea9642"
        ],
        [
            "apply ex_series_incr_1.",
            "VernacExtend",
            "e813bea76a7e34b90f9ce77c204073a6644fda78"
        ],
        [
            "apply ex_series_incr_1 in Ha1.",
            "VernacExtend",
            "5d423016c2428182b0b57429a9c74116a705a425"
        ],
        [
            "move: Ha1 ; apply ex_series_ext => n.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assert (PSeries b 1 = 0).",
            "VernacExtend",
            "73e37c277e43d2bc8ea80becbc2c9787f6622993"
        ],
        [
            "rewrite PSeries_decr_1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /b PSeries_decr_1 /PS_decr_1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "specialize (Hw b H H0 H1).",
            "VernacExtend",
            "b250c76ea6e4d2e43331c383bb8008501d108940"
        ],
        [
            "apply filterlim_ext_loc with (fun x => PSeries b x + PSeries a 1).",
            "VernacExtend",
            "8d86392d0a44842f22da88a568a6bb9ffec4e992"
        ],
        [
            "exists (mkposreal _ Rlt_0_1) => x Hx0 Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (Rabs_lt_between' x 1 1) in Hx0.",
            "VernacExtend",
            "3fcda32f8515b2e3b402789b51f85080f59f3d38"
        ],
        [
            "rewrite Rminus_eq_0 in Hx0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite PSeries_decr_1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /b (PSeries_decr_1 a x) /PS_decr_1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply CV_radius_inside.",
            "VernacExtend",
            "cfd0e0413c170758c652c303288ce1e654387b5e"
        ],
        [
            "rewrite Hcv Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le, Hx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply CV_radius_inside.",
            "VernacExtend",
            "cfd0e0413c170758c652c303288ce1e654387b5e"
        ],
        [
            "rewrite H Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le, Hx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{2}(Rplus_0_l (PSeries a 1)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply filterlim_comp_2.",
            "VernacExtend",
            "738a6ac74a2b7b80aac28fb98e1d3a3cccbca8d5"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply filterlim_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply @filterlim_plus.",
            "VernacExtend",
            "fc703c7aa5c920506ee068b356b8437f80894ddb"
        ],
        [
            "apply PSeries_correct in Ha1.",
            "VernacExtend",
            "376995090aaa16a6d260056e30f1d858660931c4"
        ],
        [
            "rewrite Hw in Ha1 |- * => {Hw}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "set Sa := sum_n a.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "assert (forall n x, sum_n (fun k => scal (pow_n x k) (a k)) n = (1 - x) * sum_n (fun k => scal (pow_n x k) (Sa k)) n + scal (pow_n x (S n)) (Sa n)).",
            "VernacExtend",
            "cdbd2e5700b47ad3f8cb115ba4818cd0fb638f36"
        ],
        [
            "elim => /= [ | n IH] x.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite /Sa !sum_O scal_one mult_one_r /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /scal /= /mult /= ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "rewrite !sum_Sn IH ; clear IH.",
            "VernacExtend",
            "3b12daffded2f6471201bc2fe68eff011be79b39"
        ],
        [
            "rewrite /Sa /= !sum_Sn -/(Sa n).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /plus /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (forall x, Rabs x < 1 -> is_pseries Sa x (PSeries a x / (1 - x))).",
            "VernacExtend",
            "e9a5648cd49ff751152683e1154dcdd9ba2ee877"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "destruct (CV_radius_inside a x) as [l Hl].",
            "VernacExtend",
            "5cc0d0ea916b5672a47ddada8600253f8e24ca1f"
        ],
        [
            "rewrite Hcv.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (is_pseries_unique _ _ _ Hl).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /is_pseries /is_series.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (@locally R_NormedModule (l / (1 - x))) with (Rbar_locally (Rbar_mult (l - ((Rbar_mult x 0) * 0)) (/ (1 - x)))).",
            "VernacExtend",
            "1ac48627937221b6e83bb7709bff02339671327a"
        ],
        [
            "apply (is_lim_seq_ext (fun n => (sum_n (fun k : nat => scal (pow_n (K := R_AbsRing) x k) (a k)) n - scal (pow_n (K := R_AbsRing) x (S n)) (Sa n)) / (1 - x)) (sum_n (fun k : nat => scal (pow_n (K := R_AbsRing) x k) (Sa k)))).",
            "VernacExtend",
            "f6f4589402fcda1284269f839d1fa853323f4b79"
        ],
        [
            "intros n ; rewrite H.",
            "VernacExtend",
            "f965f570b70a3bcbf1641b23d677e188374f69a3"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply Rgt_not_eq ; apply -> Rminus_lt_0.",
            "VernacExtend",
            "c9fca18392acadf201d06ff0bdec9d78d3882d36"
        ],
        [
            "by apply Rabs_lt_between, Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply is_lim_seq_scal_r.",
            "VernacExtend",
            "617173f2d1566e7803815a7a2f513c7cdb78830c"
        ],
        [
            "apply is_lim_seq_minus'.",
            "VernacExtend",
            "d40b84f9d4c6cdd5a953bb10ef3fce2a83fa3569"
        ],
        [
            "apply Hl.",
            "VernacExtend",
            "02df804151e4adadf6baf4a5ea9b58097df0f911"
        ],
        [
            "apply is_lim_seq_mult'.",
            "VernacExtend",
            "c3b76a14bd90f9a5b789b242041b6743c0716dec"
        ],
        [
            "apply is_lim_seq_mult'.",
            "VernacExtend",
            "c3b76a14bd90f9a5b789b242041b6743c0716dec"
        ],
        [
            "apply is_lim_seq_const.",
            "VernacExtend",
            "841054990caf6b74d9f691433bc35ebf9401e15a"
        ],
        [
            "eapply is_lim_seq_ext.",
            "VernacExtend",
            "ff09015ff347c7184c0cca2de71b22a914c430a1"
        ],
        [
            "intros n ; by apply sym_eq, pow_n_pow.",
            "VernacExtend",
            "3c2d0f34e221761418c3864d24f3eca53b6f5008"
        ],
        [
            "apply is_lim_seq_geom.",
            "VernacExtend",
            "6965e1994a77afeb676153a6a8c4bb0c6d0df8d0"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: Ha1 ; apply (is_lim_seq_ext _ _ 0).",
            "VernacExtend",
            "b9ffc71b179d053b0b3060d8b5bacbba172df671"
        ],
        [
            "intros n ; apply sum_n_ext => k.",
            "VernacExtend",
            "09a98f04ba7b762c3517178cb5717095b0a56992"
        ],
        [
            "by rewrite pow_n_pow pow1 scal_one.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by replace (Rbar_mult (l - Rbar_mult x 0 * 0) (/ (1 - x))) with (Finite (l / (1 - x))) by (simpl ; apply f_equal ; unfold Rdiv ; ring).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply filterlim_ext_loc with (fun x => (1-x) * PSeries Sa x).",
            "VernacExtend",
            "8f19e71bad86f6241ad649fa38f85f847076ca39"
        ],
        [
            "exists (mkposreal _ Rlt_0_1) ; simpl ; intros x Hx Hx1.",
            "VernacExtend",
            "bbf39d8c7d7a364b3ebbbc39569f784b7e04a1d0"
        ],
        [
            "apply (Rabs_lt_between' x 1 1) in Hx.",
            "VernacExtend",
            "5637c0484102acbbc3a34daa97481cc56f19fc55"
        ],
        [
            "rewrite Rminus_eq_0 in Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "assert (Rabs x < 1).",
            "VernacExtend",
            "6b4f14acff8e380a56e78603f8c9163d8f14ca34"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le, Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "specialize (H0 x H1).",
            "VernacExtend",
            "c56426324a815cb218341cc68b4e0cecaee78ddf"
        ],
        [
            "rewrite (is_pseries_unique _ _ _ H0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "by apply Rgt_not_eq ; apply -> Rminus_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply filterlim_locally => eps.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "destruct (Ha1 (ball 0 (pos_div_2 eps))) as [N HN].",
            "VernacExtend",
            "aac1237de6edfb883982e7fb6a01eabbf9c2420d"
        ],
        [
            "apply locally_ball.",
            "VernacExtend",
            "a524778101c365be1e298c6f20c46038902c61d3"
        ],
        [
            "eapply filter_imp.",
            "VernacExtend",
            "bf3d126874cf320edb00f681aadb1db062bce3fd"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "rewrite (PSeries_decr_n _ N).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (double_var eps) Rmult_plus_distr_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "rewrite /minus opp_zero plus_zero_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply @abs_triangle.",
            "VernacExtend",
            "2fd4a5c369740d829eca24785cffad377baf1a95"
        ],
        [
            "rewrite /abs /= 3!Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_lt_le_compat.",
            "VernacExtend",
            "afaf4615762fcc18dc393fdad9acd883003f768d"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "apply Rsum_abs.",
            "VernacExtend",
            "e0f20dd0e04b631bc48ca08f89fde330243a08db"
        ],
        [
            "apply sum_growing.",
            "VernacExtend",
            "b69e69d8ec5337e73e65a8f1ee3dda3408cf6ed6"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -RPow_abs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply pow_incr ; split.",
            "VernacExtend",
            "019a57ca25f8dc3f7273dda8e04126707cba38e4"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "instantiate (1 := 1).",
            "VernacExtend",
            "d36e68f3c9af30675e6c629e0f5108a7c744bfde"
        ],
        [
            "eapply (proj1 Hx).",
            "VernacExtend",
            "c20e6f0704d29f6ab1f17c5247fef2a0554f239b"
        ],
        [
            "destruct Hx as [Hx1 Hx].",
            "VernacExtend",
            "dd986253a52fe8640c1fe0184c12a513776626e5"
        ],
        [
            "eapply Rle_lt_trans.",
            "VernacExtend",
            "51df35c21ed37a72940fad0733f4416a5ba5669c"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (Rmax_r 1).",
            "VernacExtend",
            "8027b3f6c00aefb859f1c47ccf57081ae30da38f"
        ],
        [
            "apply Rlt_div_r.",
            "VernacExtend",
            "f3a8151a1973e9e9720c6ac1d2553ca6f749e13b"
        ],
        [
            "eapply Rlt_le_trans, Rmax_l.",
            "VernacExtend",
            "4652174ee5227e1c8551c5914ce4e531aaf862ed"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply (proj1 Hx).",
            "VernacExtend",
            "c20e6f0704d29f6ab1f17c5247fef2a0554f239b"
        ],
        [
            "destruct Hx as [Hx1 [Hx2 Hx]].",
            "VernacExtend",
            "7f806732fcb7931bf2adf55a36931d9a1d7fe82c"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rmult_le_compat ; try by apply Rabs_pos.",
            "VernacExtend",
            "2661d67bfffe9e78f0f941db953ff2ad4091033f"
        ],
        [
            "rewrite -/(pow _ (S N)) -RPow_abs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply pow_incr ; split.",
            "VernacExtend",
            "019a57ca25f8dc3f7273dda8e04126707cba38e4"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "apply Rlt_le, Hx1.",
            "VernacExtend",
            "f2161e709f3c36d21339121e2ae33af575efc3cf"
        ],
        [
            "eapply Rle_trans.",
            "VernacExtend",
            "ec6f33953112c5bac5bfe07c5c0b34597dc6eaba"
        ],
        [
            "apply Series_Rabs.",
            "VernacExtend",
            "01ff6556aa389edef7b96264ca598d1173b7b0c0"
        ],
        [
            "eapply @ex_series_le.",
            "VernacExtend",
            "5ccfb570514a2440c5c9be1ae972e3306d3ed9d6"
        ],
        [
            "intros n ; rewrite /norm /= /abs /= Rabs_Rabsolu.",
            "VernacExtend",
            "f965f570b70a3bcbf1641b23d677e188374f69a3"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -RPow_abs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "rewrite RPow_abs ; by apply Rabs_pos.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite /PS_decr_n.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_trans, Rlt_le, HN.",
            "VernacExtend",
            "67e461962a2f6521cd76b9b25e88474a453bc5c5"
        ],
        [
            "apply Req_le, f_equal.",
            "VernacExtend",
            "611305432bb56a049c3263355c95dcb6f09bd9a0"
        ],
        [
            "rewrite /minus opp_zero plus_zero_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sum_n_ext => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite pow_n_pow pow1 scal_one.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply le_trans with (1 := le_n_Sn _).",
            "VernacExtend",
            "eeefeddab621312b6dbaa33b956171041fe6e2a5"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "apply @ex_series_scal.",
            "VernacExtend",
            "15ad4afc02b3fd74bd69cc2e9af2531ed3f778d6"
        ],
        [
            "apply ex_series_geom.",
            "VernacExtend",
            "42ca9367d68e90085ba48aeadf26908e19826b86"
        ],
        [
            "by rewrite Rabs_Rabsolu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Series_le.",
            "VernacExtend",
            "383278f0d81c1224e87394dd98a1aaf5fc5d8390"
        ],
        [
            "intros n ; split.",
            "VernacExtend",
            "9037cf49b45ada90be21ff38803dcd0432940bf3"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -RPow_abs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_r.",
            "VernacExtend",
            "6c4c5a82dab802842919dd673f1978a3cb8cff73"
        ],
        [
            "rewrite RPow_abs ; by apply Rabs_pos.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite /PS_decr_n.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_trans, Rlt_le, HN.",
            "VernacExtend",
            "67e461962a2f6521cd76b9b25e88474a453bc5c5"
        ],
        [
            "apply Req_le, f_equal.",
            "VernacExtend",
            "611305432bb56a049c3263355c95dcb6f09bd9a0"
        ],
        [
            "rewrite /minus opp_zero plus_zero_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply sum_n_ext => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite pow_n_pow pow1 scal_one.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply le_trans with (1 := le_n_Sn _).",
            "VernacExtend",
            "eeefeddab621312b6dbaa33b956171041fe6e2a5"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "apply @ex_series_scal.",
            "VernacExtend",
            "15ad4afc02b3fd74bd69cc2e9af2531ed3f778d6"
        ],
        [
            "apply ex_series_geom.",
            "VernacExtend",
            "42ca9367d68e90085ba48aeadf26908e19826b86"
        ],
        [
            "by rewrite Rabs_Rabsolu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Series_scal_l Series_geom.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite pow1 Rmult_1_l !Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Req_le ; simpl ; field.",
            "VernacExtend",
            "62ebdcf2986467736645409950d1800935a4942d"
        ],
        [
            "apply Rgt_not_eq ; apply -> Rminus_lt_0.",
            "VernacExtend",
            "c9fca18392acadf201d06ff0bdec9d78d3882d36"
        ],
        [
            "eapply Rle_lt_trans, Hx1.",
            "VernacExtend",
            "26449de5046f09eeb4c35c3b21ac3f94a9254e47"
        ],
        [
            "by apply Rle_abs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Hx.",
            "VernacExtend",
            "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
        ],
        [
            "apply -> Rminus_le_0.",
            "VernacExtend",
            "eb3010996ade724f542511d5c9a56441498f4fba"
        ],
        [
            "eapply Rle_trans, Rlt_le, Hx1.",
            "VernacExtend",
            "3deb2aa0241ccf8e6279034dd1d6e1827995b32f"
        ],
        [
            "by apply Rle_abs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Rabs_Rabsolu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eexists ; apply H0, Hx.",
            "VernacExtend",
            "df5615a8f378c9b04f1025af907cb9137883d70d"
        ],
        [
            "assert (0 < Rmin (eps / 2 / Rmax 1 (sum_f_R0 (fun n : nat => Rabs (Sa n) * 1 ^ n) N)) 1).",
            "VernacExtend",
            "5bc91028a43e9af244c4a4cce17d6afe872a0592"
        ],
        [
            "apply Rmin_case.",
            "VernacExtend",
            "06bee284b3ab9229517272cc3728705bdc7b95ba"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply is_pos_div_2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "eapply Rlt_le_trans, Rmax_l.",
            "VernacExtend",
            "4652174ee5227e1c8551c5914ce4e531aaf862ed"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (mkposreal _ H1) => /= y Hy Hy1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (Rabs_lt_between' y 1 (Rmin (eps / 2 / Rmax 1 (sum_f_R0 (fun n : nat => Rabs (Sa n) * 1 ^ n) N)) 1)) in Hy.",
            "VernacExtend",
            "887321b11b040c7d8760742db3b69f53f5ef28cd"
        ],
        [
            "rewrite {1}/Rminus -Rmax_opp_Rmin Rplus_max_distr_l Rplus_min_distr_l in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -!/(Rminus _ _) Rminus_eq_0 in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "eapply Rle_lt_trans, Hy.",
            "VernacExtend",
            "5d7b9881fa7bedfd08a0475ca10bafb618d939dd"
        ],
        [
            "by apply Rmax_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply Rlt_le_trans.",
            "VernacExtend",
            "bdafc71d9925d26027c5427e9077cdbbfdc3ee27"
        ],
        [
            "rewrite -Rabs_Ropp Ropp_minus_distr'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Hy.",
            "VernacExtend",
            "80f07477a1dd0a8c39407b7d0aa65b768d8a6d0b"
        ],
        [
            "by apply Rmin_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (Rabs_lt_between' y 1 (Rmin (eps / 2 / Rmax 1 (sum_f_R0 (fun n : nat => Rabs (Sa n) * 1 ^ n) N)) 1)) in Hy.",
            "VernacExtend",
            "887321b11b040c7d8760742db3b69f53f5ef28cd"
        ],
        [
            "rewrite {1}/Rminus -Rmax_opp_Rmin Rplus_max_distr_l Rplus_min_distr_l in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -!/(Rminus _ _) Rminus_eq_0 in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply Rle_trans, Rlt_le, Hy.",
            "VernacExtend",
            "f818a09c96172f5a5ab113e8ac451b27fbe14115"
        ],
        [
            "by apply Rmax_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_continuity (a : nat -> R) (x : R) : Rbar_lt (Finite (Rabs x)) (CV_radius a) -> continuity_pt (PSeries a) x.",
            "VernacStartTheoremProof",
            "b2c7d8726456f1a426d20ea2ac55c0a840cff851"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (CV_radius_Reals_2 a x H) => r H0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply (CVU_continuity (fun (n : nat) (x : R) => sum_f_R0 (fun k : nat => a k * x ^ k) n) (PSeries a) x r H0).",
            "VernacExtend",
            "14354f94b599066c30b9d026f0a00ae83042b6f1"
        ],
        [
            "move => n y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply continuity_pt_finite_SF.",
            "VernacExtend",
            "5b8ac81ad44302f23a4515694643dbffef121c9f"
        ],
        [
            "move => k Hk.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply continuity_pt_scal.",
            "VernacExtend",
            "5ff707f5df00c5d62e6a732245030e7fdc92cfc6"
        ],
        [
            "elim: k {Hk} => /= [ | k IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply continuity_pt_const => d f.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply continuity_pt_mult.",
            "VernacExtend",
            "363550e1be8dbaf9c1ac305aa12a40e85202dd88"
        ],
        [
            "apply derivable_continuous_pt, derivable_pt_id.",
            "VernacExtend",
            "15780cb076be78d23a91c795504e862e39f03d96"
        ],
        [
            "by apply IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Boule Rminus_eq_0 Rabs_R0 ; by apply r.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition PS_derive (a : nat -> R) (n : nat) := INR (S n) * a (S n).",
            "VernacDefinition",
            "c0208f9836e62f2b4ceb1bd91886ee3f5af3d092"
        ],
        [
            "Lemma CV_radius_derive (a : nat -> R) : CV_radius (PS_derive a) = CV_radius a.",
            "VernacStartTheoremProof",
            "66713aae9328593d6ea3df3ee86eaa13feb37981"
        ],
        [
            "have H := (CV_radius_bounded a).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have H0 := (CV_radius_bounded (PS_derive a)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rbar_le_antisym.",
            "VernacExtend",
            "f0e54e4db9d25ea0231de349a146a11c944777e8"
        ],
        [
            "apply is_lub_Rbar_subset with (2 := H) (3 := H0) => x [M Ha].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exists (Rmax (Rabs (a O)) (Rabs x * M)) ; case => /= [ | n].",
            "VernacExtend",
            "5f198ba9df04aae62341bb03d2e91015d32e4a76"
        ],
        [
            "rewrite Rmult_1_r ; by apply Rmax_l.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply Rle_trans with (2 := Rmax_r _ _).",
            "VernacExtend",
            "65cb968945ac724cfa8a9a5fdf9f7a71a1bcc7cb"
        ],
        [
            "replace (a (S n) * (x * x ^ n)) with (x * ((PS_derive a n * x ^ n) / INR (S n))) by (rewrite /PS_derive ; field ; apply not_0_INR, sym_not_eq, O_S).",
            "VernacExtend",
            "a3be15511b2905680333f75918012fcb016e48b4"
        ],
        [
            "rewrite Rabs_mult ; apply Rmult_le_compat_l.",
            "VernacExtend",
            "375663c6fed9a1f68fc51b94c78b7fde5410ebc1"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rabs_div ; [ | by apply not_0_INR, sym_not_eq, O_S].",
            "VernacExtend",
            "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
        ],
        [
            "apply Rle_div_l.",
            "VernacExtend",
            "300a9124ae599e97b5c7dcc1ad678aa6b0fecb98"
        ],
        [
            "by apply Rabs_pos_lt, not_0_INR, sym_not_eq, O_S.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_trans with (1 := Ha n).",
            "VernacExtend",
            "8b840f8fd8f632db5a081d1771a553d56ef5cceb"
        ],
        [
            "rewrite -{1}(Rmult_1_r M).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "by apply Rle_trans with (2 := Ha O), Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_trans with (2 := Rle_abs _), (le_INR 1), le_n_S, le_O_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply H => x [M Hx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have H1 : Rbar_le (Finite 0) (CV_radius (PS_derive a)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply H0 ; exists (Rabs (PS_derive a O)) ; case => /= [ | n].",
            "VernacExtend",
            "1b860bf62862e2662c67691048a6b19a1f1f1a10"
        ],
        [
            "rewrite Rmult_1_r ; by apply Rle_refl.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite Rmult_0_l Rmult_0_r Rabs_R0 ; by apply Rabs_pos.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "wlog: x Hx / (0 < x) => [Hw | Hx0].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (Rle_lt_dec x 0) => Hx0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rbar_le_trans with (Finite 0).",
            "VernacExtend",
            "538fc4fd5213e3e0b1aaa83a74b2656691bd8170"
        ],
        [
            "exact Hx0.",
            "VernacExtend",
            "ccdb2933351c0c0e69d575ac7620a10568c4e3b0"
        ],
        [
            "by apply H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff : forall y, 0 < y < x -> Rbar_le (Finite y) (CV_radius (PS_derive a)).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case: (CV_radius (PS_derive a)) H1 => [l | | ] //= H1 H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rnot_lt_le => /= H3.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have H4 : (0 < (x+l)/2 < x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "by apply Rplus_lt_le_0_compat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_R0_R2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rminus_lt, Ropp_lt_cancel ; field_simplify.",
            "VernacExtend",
            "56b8e001ed619110ef3f44671afd2ac5a5ba654b"
        ],
        [
            "rewrite Rdiv_1 ; apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "57ecaad9d990347a1606a4b33388d3a024b2e064"
        ],
        [
            "by apply -> Rminus_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_R0_R2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (H2 _ H4).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rlt_not_le.",
            "VernacExtend",
            "970672dbfa76c5b1a5bbbe80816db4b871608528"
        ],
        [
            "apply Rminus_lt, Ropp_lt_cancel ; field_simplify.",
            "VernacExtend",
            "56b8e001ed619110ef3f44671afd2ac5a5ba654b"
        ],
        [
            "rewrite Rdiv_1 ; apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "57ecaad9d990347a1606a4b33388d3a024b2e064"
        ],
        [
            "rewrite Rplus_comm ; by apply -> Rminus_lt_0.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "by apply Rlt_R0_R2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply H0 ; rewrite /PS_derive.",
            "VernacExtend",
            "303297d10ff25420753cceb5389062ceae91967c"
        ],
        [
            "have H2 : is_lim_seq (fun n => INR (S n) / x * (y/x) ^ n) 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply ex_series_lim_0.",
            "VernacExtend",
            "cd2b8944bbbed1081a38035bce3db09e6e7f9045"
        ],
        [
            "apply ex_series_Rabs.",
            "VernacExtend",
            "bb36e3f02231f116fa9b6505d87f742c3a7c52aa"
        ],
        [
            "apply CV_disk_DAlembert with 1.",
            "VernacExtend",
            "9d532bd221f4853d5b4e5de3f2294441d89efdde"
        ],
        [
            "move => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rgt_not_eq, Rdiv_lt_0_compat.",
            "VernacExtend",
            "bdc4e6de5430cea796fca267ea6079892fa8ba4d"
        ],
        [
            "by apply lt_0_INR, lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_trans with y ; by apply Hy.",
            "VernacExtend",
            "bbab7770bde1064ced6126062b09cfef1a1e2961"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (nfloor_ex (/eps)) => [ | N HN].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Rlt_le, Rinv_0_lt_compat, eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (S N) => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rabs_lt_between'.",
            "VernacExtend",
            "63a15ff3174a06f608196b85267ac5d1aae1e55e"
        ],
        [
            "replace (INR (S (S n)) / x / (INR (S n) / x)) with (INR (S (S n)) / (INR (S n))) by (field ; split ; [apply Rgt_not_eq, Rlt_trans with y ; by apply Hy | by apply Rgt_not_eq, lt_0_INR, lt_O_Sn]).",
            "VernacExtend",
            "3690a0d8be06cca8a4397d040a8d287ada22bcc6"
        ],
        [
            "rewrite Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rlt_div_r.",
            "VernacExtend",
            "f3a8151a1973e9e9720c6ac1d2553ca6f749e13b"
        ],
        [
            "by apply lt_0_INR, lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ?S_INR Rminus_lt_0 ; ring_simplify.",
            "VernacExtend",
            "ba89680a187310b7532578063535d47023e63ea3"
        ],
        [
            "rewrite Rplus_assoc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rplus_le_lt_0_compat.",
            "VernacExtend",
            "f52234f44384644fc6f21adef182d5c4067417f5"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "by apply (le_INR O), le_O_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rlt_le, eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_lt_0_plus_1, Rlt_le, eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_div_l.",
            "VernacExtend",
            "4198c2770a4c425c9ede77a90e885e8d7fd9f290"
        ],
        [
            "by apply lt_0_INR, lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ?S_INR Rminus_lt_0 ; ring_simplify.",
            "VernacExtend",
            "ba89680a187310b7532578063535d47023e63ea3"
        ],
        [
            "rewrite /Rminus Rplus_assoc -/(Rminus eps 1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(Ropp_involutive (eps-1)) -Rminus_lt_0 Ropp_minus_distr'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_trans with 1.",
            "VernacExtend",
            "b1ab3289f277a08a4cbfb3fd9d1f6510664dbd6e"
        ],
        [
            "apply Rminus_lt_0 ; ring_simplify ; by apply eps.",
            "VernacExtend",
            "e384eae955b0244fa5ffb15789f2a204a411a7e6"
        ],
        [
            "replace 1 with (eps*/eps) by (field ; apply Rgt_not_eq, eps).",
            "VernacExtend",
            "07e36cdc5a508d693d82d90e610b29f1025adaf1"
        ],
        [
            "apply Rmult_lt_compat_l.",
            "VernacExtend",
            "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
        ],
        [
            "by apply eps.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 HN).",
            "VernacExtend",
            "ef2098a29274e0c52bae50611ac393bcf928a28c"
        ],
        [
            "rewrite -S_INR ; by apply le_INR.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "apply Rlt_le, Rdiv_lt_0_compat ; by apply lt_0_INR, lt_O_Sn.",
            "VernacExtend",
            "3ed88591d3676210f7571427668bfe59114e9c11"
        ],
        [
            "right ; split.",
            "VernacExtend",
            "7f40e6faa2e8d6f2ee2a39b745aa28054e5d87de"
        ],
        [
            "by apply Rgt_not_eq, Rlt_0_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rinv_1 Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply -> Rdiv_lt_1.",
            "VernacExtend",
            "ddee4d8c3d7054c3a1344d0a60d5a2e36ed86c9d"
        ],
        [
            "by apply Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_trans with y ; by apply Hy.",
            "VernacExtend",
            "bbab7770bde1064ced6126062b09cfef1a1e2961"
        ],
        [
            "apply Rlt_le, Rdiv_lt_0_compat.",
            "VernacExtend",
            "52df873048ae276c1acee1b65313d88ffd78215b"
        ],
        [
            "by apply Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_trans with y ; by apply Hy.",
            "VernacExtend",
            "bbab7770bde1064ced6126062b09cfef1a1e2961"
        ],
        [
            "apply is_lim_seq_spec in H2.",
            "VernacExtend",
            "a0756b94bf90a63fcb6d04b177a110b51f617dd3"
        ],
        [
            "case: (H2 (mkposreal _ (Rlt_0_1))) ; simpl pos => {H2} N HN.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "set My := fix f n := match n with | O => 1 | S n => Rmax (Rabs (INR (S n) / x * (y / x) ^ n)) (f n) end.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "exists (M * My N) => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "replace (INR (S n) * a (S n) * y ^ n) with ((a (S n) * x ^ (S n)) * (INR (S n) /x * (y / x) ^ n)) by (rewrite /pow -/pow ; apply Rminus_diag_uniq ; field_simplify ; [rewrite ?Rdiv_1 | apply Rgt_not_eq, Rlt_trans with y ; by apply Hy ] ; rewrite ?Rmult_assoc -(Rmult_minus_distr_l (a (S n))) ; apply Rmult_eq_0_compat_l ; rewrite Rmult_comm Rmult_assoc -(Rmult_minus_distr_l (INR (S n))) ; apply Rmult_eq_0_compat_l, Rminus_diag_eq ; elim: n => /= [ | n IH] ; [ring | rewrite -IH ; field ; apply Rgt_not_eq, Rlt_trans with y ; by apply Hy]).",
            "VernacExtend",
            "e77302e0a6f379432b9ecdd27e3f5c5906cb29cd"
        ],
        [
            "rewrite Rabs_mult ; apply Rmult_le_compat.",
            "VernacExtend",
            "08a3a35c88e6e22bf0a791872dc954a482332349"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (le_lt_dec N n) => Hn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_trans with 1.",
            "VernacExtend",
            "2f4f240d7d65dbc98662e47e56a00c3264447d65"
        ],
        [
            "move: (HN n Hn) ; rewrite Rminus_0_r ; by apply Rlt_le.",
            "VernacExtend",
            "9316342455eb51a3e1204d3e55750c03c1806191"
        ],
        [
            "move: (HN n Hn) => {HN Hn} ; elim: N => [ | N IH] H2.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "simpl ; by apply Rle_refl.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "apply Rle_trans with (1 := IH H2) ; rewrite /My -/My ; by apply Rmax_r.",
            "VernacExtend",
            "0c8fb091972be360d21de8be891014c02c1d102c"
        ],
        [
            "elim: N n Hn {HN} => [ | N IH] n Hn.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by apply lt_n_O in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply le_S_n in Hn ; case: (le_lt_eq_dec _ _ Hn) => {Hn} Hn.",
            "VernacExtend",
            "e77c92c8948cbc88b537b5ebfda20d71928096cc"
        ],
        [
            "apply Rle_trans with (2 := Rmax_r _ (My N)) ; by apply IH.",
            "VernacExtend",
            "25ac0d90c4103c241a570eb6644e95b0d90fe282"
        ],
        [
            "rewrite Hn ; by apply (Rmax_l _ (My N)).",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_derive_PSeries (a : nat -> R) (x : R) : Rbar_lt (Finite (Rabs x)) (CV_radius a) -> is_derive (PSeries a) x (PSeries (PS_derive a) x).",
            "VernacStartTheoremProof",
            "3352fa8725a199837f057d2b555b57497ca9aaca"
        ],
        [
            "move => Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (CV_radius_Reals_2 _ _ Hx) => r0 Hr0 ; rewrite -CV_radius_derive in Hx ; case: (CV_radius_Reals_2 _ _ Hx) => r1 Hr1 ; rewrite CV_radius_derive in Hx.",
            "VernacExtend",
            "a4b1182da79b8f22c9939e76724d34d01ba8a401"
        ],
        [
            "apply CVU_dom_Reals in Hr0 ; apply CVU_dom_Reals in Hr1.",
            "VernacExtend",
            "4675e739bb25aa5abcee336845a394a9d48f9e5a"
        ],
        [
            "have Hr : 0 < (Rmin r0 r1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rmin_case.",
            "VernacExtend",
            "06bee284b3ab9229517272cc3728705bdc7b95ba"
        ],
        [
            "by apply r0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply r1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set D := (Boule x (mkposreal _ Hr)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "assert (Ho : open D).",
            "VernacExtend",
            "6d40fadcc6d6778c1da8fb9caf57f08adebbd71f"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rabs_lt_between' in Hy ; simpl in Hy.",
            "VernacExtend",
            "51215d712308c557d774b10165e2c922d7a4b0b2"
        ],
        [
            "have H : 0 < Rmin ((x+Rmin r0 r1)-y) (y-(x-Rmin r0 r1)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rmin_case.",
            "VernacExtend",
            "06bee284b3ab9229517272cc3728705bdc7b95ba"
        ],
        [
            "rewrite -(Rminus_eq_0 y) ; by apply Rplus_lt_compat_r, Hy.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "rewrite -(Rminus_eq_0 ((x-Rmin r0 r1))) /Rminus ; by apply Rplus_lt_compat_r , Hy.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "exists (mkposreal _ H) => /= z Hz.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rabs_lt_between' ; split ; apply (Rplus_lt_reg_l (-y)) ; simpl.",
            "VernacExtend",
            "254a74af68263cb8b2a3f1c9573c1f5afeb703d2"
        ],
        [
            "apply Ropp_lt_cancel.",
            "VernacExtend",
            "9b0daa4a36df0c9a309eebcfa294d3bffe6b52b2"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_maj2 _).",
            "VernacExtend",
            "f23335efc980fd33adc1c135ad93571fd9c62caf"
        ],
        [
            "rewrite Ropp_plus_distr ?Ropp_involutive (Rplus_comm (-y)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_le_trans with (1 := Hz).",
            "VernacExtend",
            "7d6f97a6388dc904bae3a028c015dc3d6c3dc241"
        ],
        [
            "exact: Rmin_r.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Rle_lt_trans with (1 := Rle_abs _).",
            "VernacExtend",
            "135a8d900205d7b612754e3cd7bd2bca409d80e3"
        ],
        [
            "rewrite ?(Rplus_comm (-y)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rlt_le_trans with (1 := Hz).",
            "VernacExtend",
            "7d6f97a6388dc904bae3a028c015dc3d6c3dc241"
        ],
        [
            "exact: Rmin_l.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have Hc : is_connected D.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => x0 y z Hx0 Hy Hx0yz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /D.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Hx0yz => H1 H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply (Rplus_le_compat_r (-x)) in H1.",
            "VernacExtend",
            "656f869200b8977b2037fb91a449eb8f969ae0b9"
        ],
        [
            "apply (Rplus_le_compat_r (-x)) in H2.",
            "VernacExtend",
            "39b61656de642733a9f2b7fc7d4f631d2175b4e4"
        ],
        [
            "move: (conj H1 H2) => {H1 H2} Hxyz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rabs_le_between_Rmax in Hxyz.",
            "VernacExtend",
            "7c7790f7e3f7322e47509a8e304ac9cef2a692a5"
        ],
        [
            "apply Rle_lt_trans with (1 := Hxyz) => /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rmax_case.",
            "VernacExtend",
            "cfd24564dbeed7e74b25ea72bdae495929c2ce09"
        ],
        [
            "apply Rle_lt_trans with (1 := Rle_abs _).",
            "VernacExtend",
            "135a8d900205d7b612754e3cd7bd2bca409d80e3"
        ],
        [
            "exact: Hy.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_maj2 _).",
            "VernacExtend",
            "f23335efc980fd33adc1c135ad93571fd9c62caf"
        ],
        [
            "exact: Hx0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have Hfn : CVU_dom (fun (n : nat) (y : R) => sum_f_R0 (fun k : nat => a k * y ^ k) n) D.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply CVU_dom_include with (Boule x r0).",
            "VernacExtend",
            "f4f5654739cf2d8c28227cbe8526c5e297cd24e6"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply Rlt_le_trans with (1 := Hy), Rmin_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: Hr0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have Idn : (forall (n : nat) (x : R), (0 < n)%nat -> is_derive (fun (y : R) => sum_f_R0 (fun k : nat => a k * y ^ k) n) x (sum_f_R0 (fun k : nat => (PS_derive a) k * x ^ k) (pred n))).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case => [ y Hn | n y _ ].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply lt_irrefl in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: n => [ | n] ; simpl pred ; rewrite /sum_f_R0 -/sum_f_R0.",
            "VernacExtend",
            "6aef056868d67abb103187618c05befe54ccc07b"
        ],
        [
            "replace (PS_derive a 0 * y ^ 0) with (0 + a 1%nat * (1 * 1)) by (rewrite /PS_derive /= ; ring).",
            "VernacExtend",
            "21a3b2159b4dbbbdc7d306eb99ee66e2cf1aaa4a"
        ],
        [
            "apply: is_derive_plus.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply: is_derive_const.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply is_derive_scal.",
            "VernacExtend",
            "0836a61621f6e4d1f7e8e5e7c4656c264554e20e"
        ],
        [
            "apply: is_derive_scal_l.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: is_derive_id.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move => IH.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: is_derive_plus.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "rewrite /PS_derive.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (INR (S (S n)) * a (S (S n)) * y ^ S n) with (a (S (S n)) * (INR (S (S n)) * y^S n)) by ring.",
            "VernacExtend",
            "49a1148141379f88e6306f738e1e34a7948a8ee8"
        ],
        [
            "by apply is_derive_Reals, derivable_pt_lim_scal, derivable_pt_lim_pow.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Edn : (forall (n : nat) (x : R), D x -> ex_derive (fun (y : R) => sum_f_R0 (fun k : nat => a k * y ^ k) n) x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case => [ | n] y Hy.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply: ex_derive_const.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exists (sum_f_R0 (fun k : nat => PS_derive a k * y ^ k) (pred (S n))).",
            "VernacExtend",
            "5a95f233f87a8f0c32da3a2c3567c426c89f166e"
        ],
        [
            "apply (Idn (S n) y).",
            "VernacExtend",
            "db7952ab9b4e6f56cf5e58893c03bd979f5e07bd"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Cdn : (forall (n : nat) (x : R), D x -> continuity_pt (Derive ((fun (n0 : nat) (y : R) => sum_f_R0 (fun k : nat => a k * y ^ k) n0) n)) x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Cdn : (forall (n : nat) (x : R), D x -> continuity_pt (fun x => sum_f_R0 (fun k : nat => PS_derive a k * x ^ k) n) x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => n y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply derivable_continuous_pt.",
            "VernacExtend",
            "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
        ],
        [
            "elim: n => [ /= | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "exact: derivable_pt_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply derivable_pt_plus ; rewrite -/sum_f_R0.",
            "VernacExtend",
            "8ae6fd3209f5fd9f10d63f01eec366f4a3dd18a7"
        ],
        [
            "exact: IH.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply derivable_pt_scal, derivable_pt_pow.",
            "VernacExtend",
            "e4b14604b8fcebd0c31152229d466691f3234c79"
        ],
        [
            "case => [ | n] y Hy.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "simpl ; by apply continuity_pt_const => z.",
            "VernacExtend",
            "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
        ],
        [
            "move => e He ; case: (Cdn n y Hy e He) => {Cdn} d [Hd Cdn].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "destruct (Ho y Hy) as [d0 Hd0].",
            "VernacExtend",
            "f90421dc2447240a19e945a6f82fa3a1e3fc3cff"
        ],
        [
            "have Hd1 : 0 < Rmin d d0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply Rmin_case ; [exact: Hd | by apply d0].",
            "VernacExtend",
            "98071e17317f78ec2b1ae3e28b1d20b037d91605"
        ],
        [
            "exists (mkposreal _ Hd1) ; split.",
            "VernacExtend",
            "4d4146a2b3a427ab63ff96550407e09ec527d715"
        ],
        [
            "exact: Hd1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "move => z Hz ; simpl in Hz.",
            "VernacExtend",
            "879ddb454f5fab830aa7788bf3e371bfff0e32b9"
        ],
        [
            "rewrite (is_derive_unique _ _ _ (Idn (S n) z (lt_O_Sn _))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (is_derive_unique _ _ _ (Idn (S n) y (lt_O_Sn _))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (Cdn z) ; split.",
            "VernacExtend",
            "7a9f4a36bb46b76aaab00064b5866f9f9e4c66aa"
        ],
        [
            "by apply Hz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_le_trans with (1 := proj2 Hz), Rmin_l.",
            "VernacExtend",
            "a6508cafb529bb9cc764c2d1879defa83c869da3"
        ],
        [
            "have Hdn : CVU_dom (fun (n : nat) (x : R) => Derive ((fun (n0 : nat) (y : R) => sum_f_R0 (fun k : nat => a k * y ^ k) n0) n) x) D.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply CVU_dom_include with (Boule x r1).",
            "VernacExtend",
            "b3b30f65577f8069f1301b3b4fff9ed9eb35713c"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply Rlt_le_trans with (1 := Hy), Rmin_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply CVU_dom_cauchy ; apply CVU_dom_cauchy in Hr1.",
            "VernacExtend",
            "0bf4cd673f1712e27b92a5e294e051dc8ed4b0e8"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hr1 eps) => {Hr1} N Hr1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (S N) => n m y Hy Hn Hm.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: n Hn => [ | n] Hn.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply le_Sn_O in Hn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply le_S_n in Hn.",
            "VernacExtend",
            "d6c8198fae967fccd8ccb31dc7436bda9b4417f4"
        ],
        [
            "case: m Hm => [ | m] Hm.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply le_Sn_O in Hm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply le_S_n in Hm.",
            "VernacExtend",
            "c8be62aa23c396e0d15010a18e4867337c5365d2"
        ],
        [
            "rewrite (is_derive_unique _ _ _ (Idn (S n) y (lt_O_Sn _))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (is_derive_unique _ _ _ (Idn (S m) y (lt_O_Sn _))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Hx' : D x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /D /Boule /= Rminus_eq_0 Rabs_R0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have H := (CVU_Derive (fun n y => (sum_f_R0 (fun k : nat => a k * y ^ k)) n) D Ho Hc Hfn Edn Cdn Hdn x Hx').",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "replace (PSeries (PS_derive a) x) with (real (Lim_seq (fun n : nat => Derive (fun y : R => sum_f_R0 (fun k : nat => a k * y ^ k) n) x))).",
            "VernacExtend",
            "c07d7a5ff61884d708745d6ee812893cc530ea22"
        ],
        [
            "apply: is_derive_ext H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "simpl => t.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply (f_equal real), Lim_seq_ext.",
            "VernacExtend",
            "8cf4873edb35b59d2428291ebe74d6f3b614dda7"
        ],
        [
            "intros n; apply sym_eq, sum_n_Reals.",
            "VernacExtend",
            "1cad140482de521cb03a37e8efc913ba6395d19c"
        ],
        [
            "rewrite -Lim_seq_incr_1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply (f_equal real), Lim_seq_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite sum_n_Reals.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_unique, Idn.",
            "VernacExtend",
            "aad149a5ee2b969b424a67556a25af0d293cf194"
        ],
        [
            "by apply lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hr1 eps (cond_pos eps)) => {Hr1} N Hr1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Rabs_Ropp Ropp_minus_distr'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hr0 eps (cond_pos eps)) => {Hr0} N Hr0.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Rabs_Ropp Ropp_minus_distr'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => y Hy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply is_lim_seq_unique.",
            "VernacExtend",
            "f55813650d2fbc0e7c3342ff9e4881f2ed313a85"
        ],
        [
            "apply is_lim_seq_spec.",
            "VernacExtend",
            "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
        ],
        [
            "move => eps.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (Hr1 eps (cond_pos eps)) => {Hr1} N Hr1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -Rabs_Ropp Ropp_minus_distr'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_PSeries (a : nat -> R) (x : R) : Rbar_lt (Finite (Rabs x)) (CV_radius a) -> ex_derive (PSeries a) x.",
            "VernacStartTheoremProof",
            "3e0f7db13e33a9d64d4f59b575228f908a4686f0"
        ],
        [
            "move => Hx ; exists (PSeries (PS_derive a) x).",
            "VernacExtend",
            "b4ff86b31adac29afe27aea61da8422e941bd339"
        ],
        [
            "by apply is_derive_PSeries.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_PSeries (a : nat -> R) (x : R) : Rbar_lt (Finite (Rabs x)) (CV_radius a) -> Derive (PSeries a) x = PSeries (PS_derive a) x.",
            "VernacStartTheoremProof",
            "7c55c69e310689b7a970382bc472a7fa31721e2b"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_derive_unique.",
            "VernacExtend",
            "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
        ],
        [
            "by apply is_derive_PSeries.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_pseries_derive (a : nat -> R) x : Rbar_lt (Rabs x) (CV_radius a) -> is_pseries (PS_derive a) x (Derive (PSeries a) x).",
            "VernacStartTheoremProof",
            "c4531f4549e1c314bddb0c36c1a6fc32ce413aef"
        ],
        [
            "intros Hx.",
            "VernacExtend",
            "9276b72df3a882c9b4b954c90d9e870c80a906fc"
        ],
        [
            "assert (Ha := is_derive_PSeries _ _ Hx).",
            "VernacExtend",
            "6e700f381287293cb624ae4180b4c4aeb4c98fbe"
        ],
        [
            "apply is_derive_unique in Ha.",
            "VernacExtend",
            "eb11a17c911c7a4f410c70e0407f37e2f401ac80"
        ],
        [
            "rewrite Ha.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply PSeries_correct.",
            "VernacExtend",
            "6a5764425915e61c29ea779b50f26d77782e98c2"
        ],
        [
            "by apply CV_radius_inside ; rewrite CV_radius_derive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_pseries_derive (a : nat -> R) (x : R) : Rbar_lt (Finite (Rabs x)) (CV_radius a) -> ex_pseries (PS_derive a) x.",
            "VernacStartTheoremProof",
            "d3246899ce456c7cea70a6da16dbadffde60d55a"
        ],
        [
            "move => Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "by apply is_pseries_derive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition PS_derive_n (n : nat) (a : nat -> R) := (fun k => (INR (fact (k + n)%nat) / INR (fact k)) * a (k + n)%nat).",
            "VernacDefinition",
            "f05ff1ffe878c1a826b3d5b75fb08cdaa890c6eb"
        ],
        [
            "Lemma is_derive_n_PSeries (n : nat) (a : nat -> R) : forall x, Rbar_lt (Rabs x) (CV_radius a) -> is_derive_n (PSeries a) n x (PSeries (PS_derive_n n a) x).",
            "VernacStartTheoremProof",
            "c326e50292a07059634b71a83e24305efafe9a95"
        ],
        [
            "elim: n => [ | n IH] x Hx.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "simpl ; rewrite /PS_derive_n /=.",
            "VernacExtend",
            "41a60d2a21e0df8ab3a4b72b6ef6cfa8908df0b5"
        ],
        [
            "apply PSeries_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -plus_n_O.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "by apply INR_fact_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl ; rewrite /PS_derive_n /=.",
            "VernacExtend",
            "41a60d2a21e0df8ab3a4b72b6ef6cfa8908df0b5"
        ],
        [
            "apply is_derive_ext_loc with (PSeries (fun k : nat => INR (fact (k + n)) / INR (fact k) * a (k + n)%nat)).",
            "VernacExtend",
            "3951533839f8e5afd029a4c8a79f539b8d58b865"
        ],
        [
            "case Ha : (CV_radius a) => [cva | | ].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (Hx) ; rewrite Ha ; move/Rminus_lt_0 => Hx0.",
            "VernacExtend",
            "40075a671b142e70c4190413219df8981418e910"
        ],
        [
            "exists (mkposreal _ Hx0) => /= y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply is_derive_n_unique.",
            "VernacExtend",
            "81d9d87d43be65460b0b45662d1df915e827069f"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "rewrite Ha /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace y with ((y-x) + x) by ring.",
            "VernacExtend",
            "88ff3b8485813cca5fdfda58ab02435ca83d3aa6"
        ],
        [
            "apply Rle_lt_trans with (1 := Rabs_triang _ _).",
            "VernacExtend",
            "f9c6acae1b531169f9dfd40f6360571bc11e9f82"
        ],
        [
            "by apply Rlt_minus_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (mkposreal _ Rlt_0_1) => /= y Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq.",
            "VernacExtend",
            "f01eb728d9ceeac2915c66b52a7b50a0c452e949"
        ],
        [
            "apply is_derive_n_unique.",
            "VernacExtend",
            "81d9d87d43be65460b0b45662d1df915e827069f"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "by rewrite Ha /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Ha in Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "evar (l : R).",
            "VernacExtend",
            "47a1cacb3c2348cf48b59652fb2b8ae5776ee26e"
        ],
        [
            "replace (PSeries _ x) with l.",
            "VernacExtend",
            "31358ee9adc166a20e1c3c599a806a2ac543508b"
        ],
        [
            "rewrite /l {l}.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_derive_PSeries.",
            "VernacExtend",
            "be956854a8c8efb4e8dea1e9c30645d7c6c3c727"
        ],
        [
            "replace (CV_radius (fun k : nat => INR (fact (k + n)) / INR (fact k) * a (k + n)%nat)) with (CV_radius a).",
            "VernacExtend",
            "9f10a8ee367c7710faa98568ffcde181ca532974"
        ],
        [
            "by apply Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: n {IH} => [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "apply CV_radius_ext => n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -plus_n_O.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "by apply INR_fact_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite IH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -CV_radius_derive.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply CV_radius_ext => k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /PS_derive.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -plus_n_Sm plus_Sn_m /fact -/fact ?mult_INR ?S_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "rewrite -S_INR ; split ; apply Rgt_not_eq.",
            "VernacExtend",
            "409116cd33dfce5fea9646fc53691ecf40774099"
        ],
        [
            "by apply INR_fact_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (lt_INR O), lt_O_Sn.",
            "VernacExtend",
            "fb04eb2454605513b91a0e99383557da42bc802c"
        ],
        [
            "rewrite /l {l}.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply PSeries_ext.",
            "VernacExtend",
            "2ba674efb2105278f8bee89f4e3f60ff21d8102a"
        ],
        [
            "move => k ; rewrite /PS_derive.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -plus_n_Sm plus_Sn_m /fact -/fact ?mult_INR ?S_INR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "rewrite -S_INR ; split ; apply Rgt_not_eq.",
            "VernacExtend",
            "409116cd33dfce5fea9646fc53691ecf40774099"
        ],
        [
            "by apply INR_fact_lt_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (lt_INR O), lt_O_Sn.",
            "VernacExtend",
            "fb04eb2454605513b91a0e99383557da42bc802c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_derive_n_PSeries (n : nat) (a : nat -> R) (x : R) : Rbar_lt (Finite (Rabs x)) (CV_radius a) -> ex_derive_n (PSeries a) n x.",
            "VernacStartTheoremProof",
            "a3ea3b15fc5143d81d784b8a85b62e37bf15dc79"
        ],
        [
            "elim: n a x => [ | n IH] a x Hx.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by simpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exists (PSeries (PS_derive_n (S n) a) x).",
            "VernacExtend",
            "4030f50cc47c43b445cbad233e49e7459924a6ed"
        ],
        [
            "by apply (is_derive_n_PSeries (S n)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_PSeries (n : nat) (a : nat -> R) (x : R) : Rbar_lt (Finite (Rabs x)) (CV_radius a) -> Derive_n (PSeries a) n x = PSeries (PS_derive_n n a) x.",
            "VernacStartTheoremProof",
            "e6dadd2d47293faeb955a1f76b62b394d7225ef9"
        ],
        [
            "move => H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply is_derive_n_unique.",
            "VernacExtend",
            "81d9d87d43be65460b0b45662d1df915e827069f"
        ],
        [
            "by apply is_derive_n_PSeries.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CV_radius_derive_n (n : nat) (a : nat -> R) : CV_radius (PS_derive_n n a) = CV_radius a.",
            "VernacStartTheoremProof",
            "c8d22f79fda7b99be3089cbe3f365e20e865a6b1"
        ],
        [
            "elim: n a => [ | n IH] /= a.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "apply CV_radius_ext.",
            "VernacExtend",
            "2daef3e659f0794d1ae8304f8f5f2e29a6ee5e82"
        ],
        [
            "move => k ; rewrite /PS_derive_n /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite plus_0_r ; field.",
            "VernacExtend",
            "978748f3924ddecb0b5c0d464fc313237f2af3c9"
        ],
        [
            "by apply INR_fact_neq_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(CV_radius_derive a).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(IH (PS_derive a)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply CV_radius_ext.",
            "VernacExtend",
            "2daef3e659f0794d1ae8304f8f5f2e29a6ee5e82"
        ],
        [
            "move => k ; rewrite /PS_derive_n /PS_derive.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -plus_n_Sm /fact -/fact mult_INR ; field.",
            "VernacExtend",
            "978748f3924ddecb0b5c0d464fc313237f2af3c9"
        ],
        [
            "by apply INR_fact_neq_0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_n_coef (a : nat -> R) (n : nat) : Rbar_lt (Finite 0) (CV_radius a) -> Derive_n (PSeries a) n 0 = a n * (INR (fact n)).",
            "VernacStartTheoremProof",
            "9150170b90fb07579e45b0be6809e32b13617d62"
        ],
        [
            "elim: n a => [ | n IH] a Ha.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /= /PSeries /Series -(Lim_seq_ext (fun _ => a O)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Lim_seq_const.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim => /= [ | n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite sum_O ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "rewrite sum_Sn -IH /plus /= ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "simpl Derive_n.",
            "VernacExtend",
            "4b957f573ab9e761e5f5aab3b798c02fbb577cdf"
        ],
        [
            "replace (Derive (Derive_n (PSeries a) n) 0) with (Derive_n (PSeries (PS_derive a)) n 0).",
            "VernacExtend",
            "04bf6ac34650fc09ebe4cfe525931c21517e2da1"
        ],
        [
            "rewrite IH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /fact -/fact mult_INR /PS_derive ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "by rewrite CV_radius_derive.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "transitivity (Derive_n (Derive (PSeries a)) n 0).",
            "VernacExtend",
            "e93bbac4a6cc232ef8e99020bf400da304c84e5b"
        ],
        [
            "apply Derive_n_ext_loc.",
            "VernacExtend",
            "497aa3b5fbf6ebfb20fa4fa694bf8701348ced33"
        ],
        [
            "case: (Rbar_eq_dec (CV_radius a) p_infty) => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (mkposreal _ Rlt_0_1) => /= x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq ; apply Derive_PSeries.",
            "VernacExtend",
            "e03093582308609341225b5c40dc99d86bc55045"
        ],
        [
            "by rewrite H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Hc : 0 < real (CV_radius a).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (CV_radius a) Ha H => /= [c | | ] Ha H ; by [].",
            "VernacExtend",
            "14b141a2d70f00681f703015bc169478d399fe62"
        ],
        [
            "exists (mkposreal _ Hc) => /= x Hx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply sym_eq ; apply Derive_PSeries.",
            "VernacExtend",
            "e03093582308609341225b5c40dc99d86bc55045"
        ],
        [
            "case: (CV_radius a) Hx Ha => /= [c | | ] Hx Ha //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= -/(Rminus _ _) Rminus_0_r in Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (Derive_n_comp (PSeries a) n 1%nat 0) => /= ->.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by replace (n+1)%nat with (S n) by ring.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSeries_ext_recip (a b : nat -> R) (n : nat) : Rbar_lt (Finite 0) (CV_radius a) -> Rbar_lt (Finite 0) (CV_radius b) -> locally 0 (fun x => PSeries a x = PSeries b x) -> a n = b n.",
            "VernacStartTheoremProof",
            "d41e2d5ec571de9f5adc8d5ad706c94add114dbd"
        ],
        [
            "move => Ha Hb Hab.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have H : a n * (INR (fact n)) = b n * (INR (fact n)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -?Derive_n_coef => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply Derive_n_ext_loc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "replace (a n) with ((a n * INR (fact n)) / (INR (fact n))).",
            "VernacExtend",
            "e6c65ab46f54e172b4d4c64aef88048f89a965c7"
        ],
        [
            "rewrite H ; field ; exact: INR_fact_neq_0.",
            "VernacExtend",
            "186edfbb9da2ce65ede64a510c6c65a6fda7478d"
        ],
        [
            "field ; exact: INR_fact_neq_0.",
            "VernacExtend",
            "e1e3f2264614aef7207bf68a48f35b503758294e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mk_pseries (f : R -> R) (M : R) (r : Rbar) : (forall n x, Rbar_lt (Finite (Rabs x)) r -> (ex_derive_n f n x) /\\ Rabs (Derive_n f n x) <= M) -> forall x, Rbar_lt (Finite (Rabs x)) r -> is_pseries (fun n => Derive_n f n 0 / INR (fact n)) x (f x).",
            "VernacStartTheoremProof",
            "a2757858ea06383661d0f233cd9db41b42471b34"
        ],
        [
            "move => Hd x Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "wlog: r Hx Hd /(Finite (real r) = r) => [Hw | Hr].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: r Hx Hd => /= [r | | ] Hx Hd.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply (Hw (Finite r)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (Hw (Finite (Rabs x+1))).",
            "VernacExtend",
            "18d19c5db4c69f5ff529c47ce342448a7c4a9ac5"
        ],
        [
            "simpl ; exact: Rlt_plus_1.",
            "VernacExtend",
            "5faf3916b4a03c91778c919a49fb8976e46724df"
        ],
        [
            "move => n y Hy ; by apply Hd.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Hr in Hx Hd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (real r) Hx Hd => /= {r Hr} r Hx Hd.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "wlog: x Hx f Hd / (0 < x) => [Hw | Hx'].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (total_order_T 0 x) => Hx'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: Hx' => Hx'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hw.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Hx'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "replace (f 0) with (Derive_n f O 0 / INR (fact O)) by (simpl ; field).",
            "VernacExtend",
            "6a30db6778f414a43f31a5bc3abe641c4479e093"
        ],
        [
            "apply @is_pseries_0.",
            "VernacExtend",
            "6d1698ca6fd7f21b586123f202cd2547f5aab92f"
        ],
        [
            "rewrite -Rabs_Ropp in Hx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff Hf : (forall (n : nat) (x : R), ((Rabs x)) < r -> ex_derive_n (fun x0 : R => f (- x0)) n x /\\ Rabs (Derive_n (fun x0 : R => f (- x0)) n x) <= M).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "move: (Hw _ Hx (fun x => f (-x)) Hf (Ropp_0_gt_lt_contravar _ Hx')) => {Hw} Hw.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Ropp_involutive in Hw.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_series_ext with (2:=Hw).",
            "VernacExtend",
            "adeccdb59e825e5e2976f2a36400e718846efbcd"
        ],
        [
            "intros n; rewrite Derive_n_comp_opp; simpl.",
            "VernacExtend",
            "87622ebf9bdffbc36a1d99c263ba36849079ecf0"
        ],
        [
            "rewrite /scal /= /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply trans_eq with ((pow_n (K := R_AbsRing) (- x) n * (-1) ^ n) * (Derive_n f n (- 0) / INR (fact n)));[unfold Rdiv; ring|idtac].",
            "VernacExtend",
            "a4f12672add1701eb07cab1516c947dae7cafecc"
        ],
        [
            "rewrite Ropp_0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply f_equal2; try reflexivity.",
            "VernacExtend",
            "3c43b1a499b7d0b846551865734353113dcb5bd3"
        ],
        [
            "clear; induction n; simpl.",
            "VernacExtend",
            "d4b8127f56f0f72ea6e24a107d6e375511649354"
        ],
        [
            "apply Rmult_1_l.",
            "VernacExtend",
            "959b7f02068b29f8617e378fce47501de4230f61"
        ],
        [
            "rewrite /mult /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite <- IHn; ring.",
            "VernacExtend",
            "d62696a8c99ab651fda8a6846f1bbc3be56219cb"
        ],
        [
            "rewrite Ropp_0 ; exists (mkposreal r (Rle_lt_trans _ _ _ (Rabs_pos _) Hx)) => /= y Hy k Hk.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= -/(Rminus _ _) Rminus_0_r in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply (Hd k).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => {x Hx Hx'} n x Hx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Derive_n_comp_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply ex_derive_n_comp_opp.",
            "VernacExtend",
            "eb8cabc28a0a020c63f5aebdf34b2eb869ed97bb"
        ],
        [
            "apply Rabs_lt_between in Hx.",
            "VernacExtend",
            "2f1096bd328581863f1c32927e6264bcfcd4790e"
        ],
        [
            "case: Hx => Hx1 Hx2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rminus_lt_0 in Hx1.",
            "VernacExtend",
            "340aa76ecf8ac644199887804aa31827d06dd73c"
        ],
        [
            "apply Rminus_lt_0 in Hx2.",
            "VernacExtend",
            "3c47cd58e45fc411d9d9652071edd7d27c371a87"
        ],
        [
            "have Hx := Rmin_pos _ _ Hx1 Hx2 => {Hx1 Hx2}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exists (mkposreal _ Hx) => /= y Hy k Hk.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rabs_lt_between' in Hy.",
            "VernacExtend",
            "ba88cf28d01239e61700215c528d225d0556ddd8"
        ],
        [
            "rewrite /Rminus -Rmax_opp_Rmin Rplus_max_distr_l Rplus_min_distr_l in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Hy => Hy1 Hy2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_lt_trans with (1 := Rmax_r _ _) in Hy1.",
            "VernacExtend",
            "0e8c8068fef8eebc45ccabb2f5a091404ca2d8f6"
        ],
        [
            "ring_simplify in Hy1.",
            "VernacExtend",
            "dfe966e8c42a942a67fa22c7de59c3c494b160e9"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmin_l _ _) in Hy2.",
            "VernacExtend",
            "304a3f4aa37c3ac28bf0d510501b43500ce30800"
        ],
        [
            "ring_simplify in Hy2.",
            "VernacExtend",
            "bb33f52793eaeff86a2099b7a463e25767a531a3"
        ],
        [
            "apply (Hd k y).",
            "VernacExtend",
            "3b66ea9875a50c2ff5cfe5acbdc034d0113e4267"
        ],
        [
            "apply Rabs_lt_between.",
            "VernacExtend",
            "e6f85b3aaad12ae4c778c49c79154f50d9d4fdb3"
        ],
        [
            "by split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rabs_mult -RPow_abs Rabs_Ropp Rabs_R1 pow1 Rmult_1_l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "by rewrite Rabs_Ropp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rabs_lt_between in Hx.",
            "VernacExtend",
            "2f1096bd328581863f1c32927e6264bcfcd4790e"
        ],
        [
            "case: Hx => Hx1 Hx2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rminus_lt_0 in Hx1.",
            "VernacExtend",
            "340aa76ecf8ac644199887804aa31827d06dd73c"
        ],
        [
            "apply Rminus_lt_0 in Hx2.",
            "VernacExtend",
            "3c47cd58e45fc411d9d9652071edd7d27c371a87"
        ],
        [
            "have Hx := Rmin_pos _ _ Hx1 Hx2 => {Hx1 Hx2}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exists (mkposreal _ Hx) => /= y Hy k Hk.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /ball /= /AbsRing_ball /= in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rabs_lt_between' in Hy.",
            "VernacExtend",
            "ba88cf28d01239e61700215c528d225d0556ddd8"
        ],
        [
            "rewrite /Rminus -Rmax_opp_Rmin Rplus_max_distr_l Rplus_min_distr_l in Hy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: Hy => Hy1 Hy2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply Rle_lt_trans with (1 := Rmax_r _ _) in Hy1.",
            "VernacExtend",
            "0e8c8068fef8eebc45ccabb2f5a091404ca2d8f6"
        ],
        [
            "ring_simplify in Hy1.",
            "VernacExtend",
            "dfe966e8c42a942a67fa22c7de59c3c494b160e9"
        ],
        [
            "apply Rlt_le_trans with (2 := Rmin_l _ _) in Hy2.",
            "VernacExtend",
            "304a3f4aa37c3ac28bf0d510501b43500ce30800"
        ],
        [
            "ring_simplify in Hy2.",
            "VernacExtend",
            "bb33f52793eaeff86a2099b7a463e25767a531a3"
        ],
        [
            "apply (Hd k y).",
            "VernacExtend",
            "3b66ea9875a50c2ff5cfe5acbdc034d0113e4267"
        ],
        [
            "apply Rabs_lt_between.",
            "VernacExtend",
            "e6f85b3aaad12ae4c778c49c79154f50d9d4fdb3"
        ],
        [
            "by split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => P [eps Heps].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have : exists N, forall n, (N <= n)%nat -> r ^ (S n) * M / INR (fact (S n)) < eps.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have H : is_lim_seq (fun n => r ^ n * M / INR (fact n)) 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (Rlt_dec 0 M) => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have H0 : forall n : nat, 0 < r ^ n * M / INR (fact n).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Rdiv_lt_0_compat.",
            "VernacExtend",
            "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply pow_lt.",
            "VernacExtend",
            "8644a99ddc9716c887b11bda1d50a5dad84886a2"
        ],
        [
            "apply Rle_lt_trans with (2 := Hx), Rabs_pos.",
            "VernacExtend",
            "e1b56bfcd9fd2591e61e707e94355aa9cf2303ec"
        ],
        [
            "exact: H.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: INR_fact_lt_0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply ex_series_lim_0, ex_series_Rabs, ex_series_DAlembert with 0.",
            "VernacExtend",
            "b2517b93c8633f2ca2e24d0f1ff9c56c0d491a80"
        ],
        [
            "exact: Rlt_0_1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "move => n ; apply Rgt_not_eq, Rlt_gt, H0.",
            "VernacExtend",
            "b17e14410df8170f649da95f325e5c9aaf624bf2"
        ],
        [
            "apply is_lim_seq_ext with (fun n => r / INR (S n)).",
            "VernacExtend",
            "933c397795a1f342bc74c2f0ed3fcb01adae64ae"
        ],
        [
            "move => n ; rewrite Rabs_pos_eq.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite /fact -/fact /pow -/pow ?mult_INR ; field.",
            "VernacExtend",
            "978748f3924ddecb0b5c0d464fc313237f2af3c9"
        ],
        [
            "repeat split ; apply Rgt_not_eq, Rlt_gt.",
            "VernacExtend",
            "c15eecc1cadf8ee391c5a97437a7dbf076df3e72"
        ],
        [
            "exact: INR_fact_lt_0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by apply (lt_INR O), lt_O_Sn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: H.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply pow_lt, Rle_lt_trans with (Rabs x), Hx ; by apply Rabs_pos.",
            "VernacExtend",
            "9f95660294f98794b7ddf2b102c239c341114107"
        ],
        [
            "apply Rlt_le, Rdiv_lt_0_compat ; by apply H0.",
            "VernacExtend",
            "3ed88591d3676210f7571427668bfe59114e9c11"
        ],
        [
            "rewrite -(Rmult_0_r r) ; apply (is_lim_seq_scal_l _ _ 0) => //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "apply (is_lim_seq_incr_1 (fun n => / INR n)).",
            "VernacExtend",
            "211c2ef49faed8b4672d591ab65e6877d50c6920"
        ],
        [
            "replace (Finite 0) with (Rbar_inv p_infty) by auto.",
            "VernacExtend",
            "bc1288a0fd981b7fe027bd5d7772799588757a18"
        ],
        [
            "apply is_lim_seq_inv.",
            "VernacExtend",
            "91a251ae71de232eeb1039626ed60efb8a85a521"
        ],
        [
            "by apply is_lim_seq_INR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rnot_lt_le in H ; case: H => H.",
            "VernacExtend",
            "d16f99707b15d1b2e5927336934befcd720a017d"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply Rle_not_lt.",
            "VernacExtend",
            "1f0f6b47a7d49626d97b2585f7610e291096035d"
        ],
        [
            "apply Rle_trans with (Rabs (Derive_n f O x)).",
            "VernacExtend",
            "e0e8aab5a42dd611c7b5fa123fef780f081e3971"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Hd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply is_lim_seq_ext with (fun _ => 0).",
            "VernacExtend",
            "47b5f7475f5ec40ef1472095e4dff15d2363e610"
        ],
        [
            "move => n ; rewrite /Rdiv ; ring.",
            "VernacExtend",
            "21b6fe36e5498a843625648c497c009ca92aa0fe"
        ],
        [
            "exact: is_lim_seq_const.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply is_lim_seq_incr_1 in H.",
            "VernacExtend",
            "6eeffeaf816673d9aabf9796d117478913ba445c"
        ],
        [
            "apply is_lim_seq_spec in H.",
            "VernacExtend",
            "98ca61a735cdd6a0c67afeba86446058c65f378f"
        ],
        [
            "case: (H eps) => {H} N H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Rle_lt_trans with (2 := H n Hn).",
            "VernacExtend",
            "10196a62868ee41181ac404cf012b4a3d7b943e7"
        ],
        [
            "rewrite Rminus_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: Rle_abs.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "case => N HN.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists N => n Hn.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply Heps.",
            "VernacExtend",
            "90231750e58f3a7b3480beec4b7e7230c8770744"
        ],
        [
            "case: (Taylor_Lagrange f n 0 x).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply Hx'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => t Ht k Hk.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_lt_trans with (1 := proj2 Ht).",
            "VernacExtend",
            "68442faef38e4ecd91c335a8e2ef50c417df5581"
        ],
        [
            "by apply Rle_lt_trans with (1 := Rle_abs _), Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rle_ge, Ht.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => y [Hy ->].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite Rminus_0_r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (sum_n_ext _ (fun m : nat => x ^ m / INR (fact m) * Derive_n f m 0)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite sum_n_Reals.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rle_lt_trans with (2 := HN n Hn).",
            "VernacExtend",
            "e7c72d6e3a7ff8ffdfe9294ef62039aa50d5ed2d"
        ],
        [
            "replace (r ^ S n * M / INR (fact (S n))) with ((r^S n / INR (fact (S n))) * M) by (rewrite /Rdiv ; ring).",
            "VernacExtend",
            "4eb65786279e88ecfc054134a671f7dda5f5a387"
        ],
        [
            "change minus with Rminus.",
            "VernacExtend",
            "e85947f047da7efe28f0f1f59e558e0bc3514ec9"
        ],
        [
            "ring_simplify (sum_f_R0 (fun m : nat => x ^ m / INR (fact m) * Derive_n f m 0) n - (sum_f_R0 (fun m : nat => x ^ m / INR (fact m) * Derive_n f m 0) n + x ^ S n / INR (fact (S n)) * Derive_n f (S n) y)).",
            "VernacExtend",
            "42435d722a71e1e9f2878af020e4207e20e22b27"
        ],
        [
            "change abs with Rabs.",
            "VernacExtend",
            "77fb3cfa3e23242f303c6721357d1ac63f3c1980"
        ],
        [
            "rewrite Rabs_mult Rabs_Ropp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat.",
            "VernacExtend",
            "99a65cd1efb8e35313415d4b052731e2b0746daf"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply Rabs_pos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Rabs_div.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply Rmult_le_compat.",
            "VernacExtend",
            "99a65cd1efb8e35313415d4b052731e2b0746daf"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "apply Rlt_le, Rinv_0_lt_compat.",
            "VernacExtend",
            "31665867d30f616d78b584524410961663f45bd3"
        ],
        [
            "apply Rabs_pos_lt.",
            "VernacExtend",
            "e7789cb0a3c08fb3fbbda456620a8022b26229ce"
        ],
        [
            "exact: INR_fact_neq_0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite -RPow_abs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply pow_incr ; split.",
            "VernacExtend",
            "019a57ca25f8dc3f7273dda8e04126707cba38e4"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "by apply Rlt_le.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rle_Rinv.",
            "VernacExtend",
            "1c2230e335301795a7c124c6298eabc78161766e"
        ],
        [
            "exact: (INR_fact_lt_0 (S n)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply Rabs_pos_lt, INR_fact_neq_0.",
            "VernacExtend",
            "80855899db09cb6af747eeec3ab786c15a921868"
        ],
        [
            "apply Rle_abs.",
            "VernacExtend",
            "7222806352a7f01b48467f271bcdc35194fd1877"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply Hd.",
            "VernacExtend",
            "b2c76316200582fcad9318af1ed397a8dea483e3"
        ],
        [
            "apply Rlt_trans with (2 := Hx).",
            "VernacExtend",
            "068291b4c3bcf2bf5151a86d33c3fdae35c5cac1"
        ],
        [
            "rewrite ?Rabs_pos_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply Hy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply Rlt_le, Hx'.",
            "VernacExtend",
            "8a1c9b129e437cdc5e6aef193dbd5271058f5ac7"
        ],
        [
            "apply Rlt_le, Hy.",
            "VernacExtend",
            "dc30a7d96db08eb1dad61aae838e7f8c22b7fee7"
        ],
        [
            "intros m; rewrite pow_n_pow.",
            "VernacExtend",
            "ffe2fe1519dafab748c2161f6a976e85dc7acb29"
        ],
        [
            "rewrite /scal /= /mult /= /Rdiv ; ring.",
            "VernacExtend",
            "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "ex_pseries_dec",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "apply ex_series_dec.",
                        "VernacExtend",
                        "6b1eb0f7fa0acba05e0eb5f1f5697b4be94a1820"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_R",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "split ; apply is_series_ext ; intros n ; rewrite pow_n_pow /= ; apply Rmult_comm.",
                        "VernacExtend",
                        "70cd72640dd62fa8b6115c5a283265b2f336d4ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_R",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "split ; apply ex_series_ext ; intros n ; rewrite pow_n_pow /= ; apply Rmult_comm.",
                        "VernacExtend",
                        "2f96adabd653b7633aeee8e5cfe12b897bb311f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_eq",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "apply Series_ext.",
                        "VernacExtend",
                        "fdbcb56c0988c866fe0a698401ce4bfd1c6b2a6b"
                    ]
                },
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_comm.",
                        "VernacExtend",
                        "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_1",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "apply Series_ext => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite pow1 Rmult_1_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_1",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "assert (forall n : nat, scal (pow_n 1 n) (a n) = a n).",
                        "VernacExtend",
                        "694a8acdc1dbb2f4442300151a8557438648a6dc"
                    ]
                },
                {
                    "command": [
                        "now intros n ; rewrite pow_n_pow pow1 scal_one.",
                        "VernacExtend",
                        "1e663c7e45fa9b52250758481286af9621172168"
                    ]
                },
                {
                    "command": [
                        "split ; apply ex_series_ext => n ; by rewrite H.",
                        "VernacExtend",
                        "fc67683ba0e0581ebff940ac5e88f19cb87bb912"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_unique",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "move => Ha; rewrite PSeries_eq.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply is_series_unique.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_correct",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "move => Ha; rewrite PSeries_eq.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply Series_correct.",
                        "VernacExtend",
                        "fdea1c2ad906bf31eb70da24fe1e77d127b4cc6d"
                    ]
                },
                {
                    "command": [
                        "by apply Ha.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_Reals",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "split => H.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move => e He ; set eps := mkposreal e He.",
                        "VernacExtend",
                        "fd0300d8899563f42d81dc09cab8269e61be7289"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_spec _ l) in H.",
                        "VernacExtend",
                        "8d7a1e99e945e93ea5bf25bace819453d8c0d73a"
                    ]
                },
                {
                    "command": [
                        "case: (H eps) => {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sum_n_Reals.",
                        "VernacExtend",
                        "0489649d8f03c9e398e73562605a58fa65a0f9e9"
                    ]
                },
                {
                    "command": [
                        "rewrite (sum_n_ext _ (fun n0 : nat => scal (pow_n x n0) (a n0))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros k; rewrite pow_n_pow /=; apply Rmult_comm.",
                        "VernacExtend",
                        "b29439a08b50f87689102dd9fb58a0f705c040cc"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_spec _ l).",
                        "VernacExtend",
                        "b647a8fffd8d7d14ce42956445e40a177c1ec806"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (H eps (cond_pos eps)) => {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite (sum_n_ext _ (fun n0 : nat => a n0 * x ^ n0)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_n_Reals.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "intros; now rewrite Rmult_comm pow_n_pow.",
                        "VernacExtend",
                        "27f8e9c71a88d3089e595bf6a7cf07648d0511e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_ext",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "move => Heq Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_series_ext with (2 := Ha).",
                        "VernacExtend",
                        "85bc57f59cfe16064154e2484d7bfeb2f1f687f9"
                    ]
                },
                {
                    "command": [
                        "move => n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite Heq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_ext",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "move => Heq [l Ha].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists l ; by apply is_pseries_ext with a.",
                        "VernacExtend",
                        "4f9f93dbf1ab94af5a51d54d8955eb863fb55340"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_ext",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "move => Heq.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Series_ext.",
                        "VernacExtend",
                        "fdbcb56c0988c866fe0a698401ce4bfd1c6b2a6b"
                    ]
                },
                {
                    "command": [
                        "move => n ; by rewrite Heq.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_0",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "apply filterlim_ext with (fun _ => a O).",
                        "VernacExtend",
                        "9ff98011c821744f39066ba7375c8e6c9a4e6984"
                    ]
                },
                {
                    "command": [
                        "elim => [ | n IH] /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "now rewrite sum_O scal_one.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_Sn -IH /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_zero_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now rewrite scal_zero_l plus_zero_r.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_const.",
                        "VernacExtend",
                        "ff971edf84d1cf6e134869f4729acc40969816e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_0",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "exists (a O) ; by apply is_pseries_0.",
                        "VernacExtend",
                        "405d9aac864fb4474ec0c66dc427190a225156db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_0",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "rewrite PSeries_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_series_unique.",
                        "VernacExtend",
                        "660f382307748728e0c26076611874798d98173c"
                    ]
                },
                {
                    "command": [
                        "apply @is_pseries_0.",
                        "VernacExtend",
                        "6d1698ca6fd7f21b586123f202cd2547f5aab92f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_disk_le",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply @ex_series_le => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /norm /= /abs /= Rabs_Rabsolu.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite ?Rabs_mult ; apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "375663c6fed9a1f68fc51b94c78b7fde5410ebc1"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -?RPow_abs ; apply pow_incr ; split.",
                        "VernacExtend",
                        "52f05baebd0e4f150ff5a199b280802f016b5b93"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_disk_correct",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "intros H; apply ex_series_Rabs.",
                        "VernacExtend",
                        "dcf1c1f3a14ef1442d3673eb381484a09c173efa"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_ext with (2:=H).",
                        "VernacExtend",
                        "10d34e885aa14d6fc21fc996e1df1da508a72cdb"
                    ]
                },
                {
                    "command": [
                        "intros n; apply f_equal.",
                        "VernacExtend",
                        "ee3a32a73824daf08e1d34e091235f34b31a616f"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rmult_comm pow_n_pow.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_disk_0",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "exists (Rabs (a O)).",
                        "VernacExtend",
                        "cecbad1e51a04b65cd3bac3ca80e939bb5a0007d"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_ext (fun _ => Rabs (a O)) _ (Rabs (a O))).",
                        "VernacExtend",
                        "407e9ef327331b30290389cfe4b51ae544066f4f"
                    ]
                },
                {
                    "command": [
                        "elim => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_O Rmult_1_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_Sn /= Rmult_0_l Rmult_0_r Rabs_R0 /plus /= Rplus_0_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_ge_0",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar => /= l Hl.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply Hl, CV_disk_0.",
                        "VernacExtend",
                        "a418fcd8c6a34c9454635eaadced6a1337f37c61"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_disk_inside",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "move => Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "assert (H : ~ ~ ex_series (fun n => Rabs (a n * x ^ n))).",
                        "VernacExtend",
                        "25764de50d52bb769722c5da6cd30c2392afd9fb"
                    ]
                },
                {
                    "command": [
                        "contradict Ha.",
                        "VernacExtend",
                        "65d7ffc3c798a4ce29a3903aae94686407d92873"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_not_lt.",
                        "VernacExtend",
                        "26846f4220b509cc8abc0a290e0e9d2da4af5e4b"
                    ]
                },
                {
                    "command": [
                        "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar => l /= [ub lub].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply: lub => r Hr.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le ; contradict Ha.",
                        "VernacExtend",
                        "08310875a752913aa4589c018d3e6146143512fa"
                    ]
                },
                {
                    "command": [
                        "move: Hr.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply CV_disk_le.",
                        "VernacExtend",
                        "7fdb1a86f4d6a645230b7a72ab2f5bec6eebe97b"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, Rlt_le_trans with (2 := Rle_abs _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: (ex_series_dec (fun n => Rabs (a n * x ^ n))).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_inside",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "move => Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply CV_disk_correct, CV_disk_inside.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_disk_outside",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "case: (CV_radius_bounded a) => ub lub.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move => Hx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have H : ~ (fun r : R => exists M : R, forall n : nat, Rabs (a n * r ^ n) <= M) x.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "contradict Hx ; apply Rbar_le_not_lt.",
                        "VernacExtend",
                        "a5755d9d4c809180411af3e05a3866e1a8aa6937"
                    ]
                },
                {
                    "command": [
                        "apply ub.",
                        "VernacExtend",
                        "0aaba5b3ce3b959fa8fd601234deea2b97b96fe6"
                    ]
                },
                {
                    "command": [
                        "case: Hx => M Hx.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists M => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rabs_mult RPow_abs Rabs_Rabsolu -Rabs_mult.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in H.",
                        "VernacExtend",
                        "98ca61a735cdd6a0c67afeba86446058c65f378f"
                    ]
                },
                {
                    "command": [
                        "case: (H (mkposreal _ Rlt_0_1)) => /= {Hx} N Hx.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "set M := fix f N := match N with | O => Rabs (a O * x ^ O) | S n => Rmax (f n) (Rabs (a (n) * x ^ (n))) end.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "exists (Rmax (M N) 1) => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (le_lt_dec N n) => Hn.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Rmax_r _ _).",
                        "VernacExtend",
                        "65cb968945ac724cfa8a9a5fdf9f7a71a1bcc7cb"
                    ]
                },
                {
                    "command": [
                        "move: (Hx n Hn).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite Rminus_0_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Rmax_l _ _).",
                        "VernacExtend",
                        "71359a389bd939cc6dea91cb2e0a00babb930fa5"
                    ]
                },
                {
                    "command": [
                        "elim: N n Hn {Hx} => [ | N IH] /= n Hn.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by apply lt_n_O in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sm_le, le_lt_eq_dec in Hn ; case: Hn => Hn.",
                        "VernacExtend",
                        "6c51888692808cb9a82d84c4e47c7a828d13ccfd"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Rmax_l _ _).",
                        "VernacExtend",
                        "71359a389bd939cc6dea91cb2e0a00babb930fa5"
                    ]
                },
                {
                    "command": [
                        "by apply IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hn ; by apply Rle_trans with (2 := Rmax_r _ _), Rle_refl.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_ext",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "move => Heq.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /CV_radius /Lub_Rbar.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: ex_lub_Rbar => la [ub_a lub_a] ; case: ex_lub_Rbar => lb [ub_b lub_b] /=.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_antisym.",
                        "VernacExtend",
                        "f0e54e4db9d25ea0231de349a146a11c944777e8"
                    ]
                },
                {
                    "command": [
                        "apply lub_a => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply ub_b ; move: Hx.",
                        "VernacExtend",
                        "36fb7111eb8120f688b8164534c74107cffec036"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_ext => n ; by rewrite Heq.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "apply lub_b => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply ub_a ; move: Hx.",
                        "VernacExtend",
                        "91546f82d610d07c9da1325634bdc4e6c9eab370"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_ext => n ; by rewrite Heq.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_disk_DAlembert",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "move => Ha Hl H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (Req_dec x 0) => Hx.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exists (Rabs (a O)).",
                        "VernacExtend",
                        "cecbad1e51a04b65cd3bac3ca80e939bb5a0007d"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_ext (fun _ => Rabs (a O)) _ (Rabs (a 0%nat))).",
                        "VernacExtend",
                        "a59319a6d4a0c51ba822e3979b033a4978fa31cf"
                    ]
                },
                {
                    "command": [
                        "elim => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_O Rmult_1_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_Sn /= Rmult_0_l Rmult_0_r Rabs_R0 /plus /= Rplus_0_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_const.",
                        "VernacExtend",
                        "841054990caf6b74d9f691433bc35ebf9401e15a"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_DAlembert with (Rabs x * l).",
                        "VernacExtend",
                        "4b5d1bf48a99592545d97e1b3077aba449589fa9"
                    ]
                },
                {
                    "command": [
                        "case: H => H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite H Rmult_0_r ; by apply Rlt_0_1.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "replace 1 with (/ l * l) by (field ; apply H).",
                        "VernacExtend",
                        "85ebaa17f69cd0af0918380ec2c6571f9561f6be"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "e041593c57ec6470673cc705c01d215d230e0676"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_le_lt ; case => H0.",
                        "VernacExtend",
                        "9fd916696729f062e266fadae08feacde0f368cc"
                    ]
                },
                {
                    "command": [
                        "case: H => H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt.",
                        "VernacExtend",
                        "1f0f6b47a7d49626d97b2585f7610e291096035d"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, Rlt_le_trans with 0.",
                        "VernacExtend",
                        "c3d25881b174940356a724704de1821077523d43"
                    ]
                },
                {
                    "command": [
                        "by apply Rinv_lt_0_compat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => n ; apply Rmult_integral_contrapositive_currified.",
                        "VernacExtend",
                        "e7f6c3730abb15a1059a26e7bfa8155a3298f005"
                    ]
                },
                {
                    "command": [
                        "by apply Ha.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply pow_nonzero.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply CV_disk_DAlembert_aux.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_finite_DAlembert",
            "line_nb": 321,
            "steps": [
                {
                    "command": [
                        "move => Ha Hl Hda.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_antisym.",
                        "VernacExtend",
                        "f0e54e4db9d25ea0231de349a146a11c944777e8"
                    ]
                },
                {
                    "command": [
                        "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar => /= cv [ub lub].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply lub => x Hax.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (Rle_lt_dec x 0) => Hx.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, Rle_lt_trans with 0.",
                        "VernacExtend",
                        "86e6f931f69b7d8d6e92046997b2614ebfd4d515"
                    ]
                },
                {
                    "command": [
                        "by apply Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rabs_pos_eq x (Rlt_le _ _ Hx)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rmult_1_l (/l)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs x) with ((Rabs x * l) /l) by (field ; apply Rgt_not_eq, Hl).",
                        "VernacExtend",
                        "660e53219187138919ddd4084e0bd13083eb3f10"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, Rinv_0_lt_compat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le.",
                        "VernacExtend",
                        "3c60597e841405b7d257d92c4717e01515b21555"
                    ]
                },
                {
                    "command": [
                        "contradict Hax.",
                        "VernacExtend",
                        "575cd5f058fe9e2045915725dbb8c45b8e669665"
                    ]
                },
                {
                    "command": [
                        "have : CV_disk a x -> is_lim_seq (fun n => a n * x ^ n) 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_lim_0.",
                        "VernacExtend",
                        "cd2b8944bbbed1081a38035bce3db09e6e7f9045"
                    ]
                },
                {
                    "command": [
                        "by apply ex_series_Rabs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => H H0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (H H0) => {H H0}.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply not_ex_series_DAlembert with (Rabs x * l) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move => n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_integral_contrapositive_currified => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply pow_nonzero, Rgt_not_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply CV_disk_DAlembert_aux.",
                        "VernacExtend",
                        "f39cfc980e064e83e59d09120e844761ed0163b2"
                    ]
                },
                {
                    "command": [
                        "by apply Rgt_not_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Ha.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hda.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_not_lt_le.",
                        "VernacExtend",
                        "609b6610e848b9efc1928d197bd92cc66b06930b"
                    ]
                },
                {
                    "command": [
                        "move : (CV_disk_outside a).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar ; case => [cv | | ] /= [ub lub] Hnot_ex H ; try by auto.",
                        "VernacExtend",
                        "ef8a4e787ec8df8973da5660cc4293a259cb93c0"
                    ]
                },
                {
                    "command": [
                        "suff H0 : cv < ((cv+/l)/2) < /l.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "absurd (ex_series (fun n => Rabs (a n * ((cv+/l)/2)^n))).",
                        "VernacExtend",
                        "8ea63205159a3b6c3e9524a6833c503a2e10cb7d"
                    ]
                },
                {
                    "command": [
                        "suff H1 : cv < Rabs ((cv + / l) / 2).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "move: (Hnot_ex ((cv + / l) / 2) H1) => {Hnot_ex} Hnot_ex.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "contradict Hnot_ex ; by apply ex_series_lim_0, ex_series_Rabs.",
                        "VernacExtend",
                        "6a40de83ee8e43ae5c5213a4ec3f9678ba99aeea"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Rle_abs _), H0.",
                        "VernacExtend",
                        "2e59331882446b792c7ee14266aae6adc9e655ca"
                    ]
                },
                {
                    "command": [
                        "apply (CV_disk_DAlembert) with l.",
                        "VernacExtend",
                        "266cd0a7b053f4dc9e8e6e394210b5e8bdc1a2b8"
                    ]
                },
                {
                    "command": [
                        "by apply Ha.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hda.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "right ; split.",
                        "VernacExtend",
                        "7f40e6faa2e8d6f2ee2a39b745aa28054e5d87de"
                    ]
                },
                {
                    "command": [
                        "by apply Rgt_not_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, Rle_lt_trans with (2 := proj1 H0).",
                        "VernacExtend",
                        "ac3ab1b804e04be0f71e168b5f9221383767454c"
                    ]
                },
                {
                    "command": [
                        "apply ub.",
                        "VernacExtend",
                        "0aaba5b3ce3b959fa8fd601234deea2b97b96fe6"
                    ]
                },
                {
                    "command": [
                        "exists (Rabs (a O)).",
                        "VernacExtend",
                        "cecbad1e51a04b65cd3bac3ca80e939bb5a0007d"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_ext (fun _ => Rabs (a O)) _ (Rabs (a 0%nat))).",
                        "VernacExtend",
                        "a59319a6d4a0c51ba822e3979b033a4978fa31cf"
                    ]
                },
                {
                    "command": [
                        "elim => [ | n IH] /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_O Rmult_1_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_Sn /= Rmult_0_l Rmult_0_r Rabs_R0 /plus /= Rplus_0_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "case: (ub 0) => //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (Rabs (a O)).",
                        "VernacExtend",
                        "cecbad1e51a04b65cd3bac3ca80e939bb5a0007d"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_ext (fun _ => Rabs (a O)) _ (Rabs (a 0%nat))).",
                        "VernacExtend",
                        "a59319a6d4a0c51ba822e3979b033a4978fa31cf"
                    ]
                },
                {
                    "command": [
                        "elim => [ | n IH] /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_O Rmult_1_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_Sn /= Rmult_0_l Rmult_0_r Rabs_R0 /plus /= Rplus_0_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_infinite_DAlembert",
            "line_nb": 384,
            "steps": [
                {
                    "command": [
                        "move => Ha Hda.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar ; case => [cv | | ] //= [ub lub] ; have : False => //.",
                        "VernacExtend",
                        "d175f5a9c7420dbdf708fcaa29659808b56ee5df"
                    ]
                },
                {
                    "command": [
                        "have H : CV_disk a (cv + 1).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have H : 0 < cv + 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (0+1).",
                        "VernacExtend",
                        "00c702c3de2a824d573dc5f95d0dbd698436c10f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_l ; by apply Rlt_0_1.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
                    ]
                },
                {
                    "command": [
                        "apply ub.",
                        "VernacExtend",
                        "0aaba5b3ce3b959fa8fd601234deea2b97b96fe6"
                    ]
                },
                {
                    "command": [
                        "exists (Rabs (a O)).",
                        "VernacExtend",
                        "cecbad1e51a04b65cd3bac3ca80e939bb5a0007d"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_ext (fun _ => Rabs (a O)) _ (Rabs (a 0%nat))).",
                        "VernacExtend",
                        "a59319a6d4a0c51ba822e3979b033a4978fa31cf"
                    ]
                },
                {
                    "command": [
                        "elim => [ | k IH] /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_O Rmult_1_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_Sn /= Rmult_0_l Rmult_0_r Rabs_R0 /plus /= Rplus_0_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_DAlembert with 0.",
                        "VernacExtend",
                        "2322693a12ec3f91931b5fb6a5f5f40feede1a6f"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_0_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => n ; apply Rmult_integral_contrapositive_currified.",
                        "VernacExtend",
                        "e7f6c3730abb15a1059a26e7bfa8155a3298f005"
                    ]
                },
                {
                    "command": [
                        "by[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rgt_not_eq, pow_lt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rmult_0_r (Rabs (cv + 1))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply (CV_disk_DAlembert_aux a (cv + 1)).",
                        "VernacExtend",
                        "9d9795728b29f8effac7fa485e23cf93abdd2bc5"
                    ]
                },
                {
                    "command": [
                        "by apply Rgt_not_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (ub (cv+1) H).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply Rbar_lt_not_le, Rlt_n_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (ub 0) => //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (Rabs (a O)).",
                        "VernacExtend",
                        "cecbad1e51a04b65cd3bac3ca80e939bb5a0007d"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_ext (fun _ => Rabs (a O)) _ (Rabs (a 0%nat))).",
                        "VernacExtend",
                        "a59319a6d4a0c51ba822e3979b033a4978fa31cf"
                    ]
                },
                {
                    "command": [
                        "elim => [ | k IH] /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_O Rmult_1_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite sum_Sn /= Rmult_0_l Rmult_0_r Rabs_R0 /plus /= Rplus_0_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_Reals_0",
            "line_nb": 419,
            "steps": [
                {
                    "command": [
                        "move => Hr.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /CVN_r /Boule.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have H := CV_radius_bounded a.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists (fun n => Rabs (a n * r ^ n)).",
                        "VernacExtend",
                        "0c60d84878c95481b7da018b2dce43c919c8559a"
                    ]
                },
                {
                    "command": [
                        "exists (Series (fun n => Rabs (a n * r ^ n))) ; split.",
                        "VernacExtend",
                        "1b2dda5385a6be71bab15bd0d574d8bf99000c3d"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rabs_pos_eq r (Rlt_le _ _ (cond_pos r))) in Hr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply CV_disk_inside in Hr.",
                        "VernacExtend",
                        "03b92461b28b232af138efcbe5c90fe0c5d7fcbc"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_correct' in Hr ; rewrite -/(Series (fun n : nat => Rabs (a n * r ^ n))) in Hr.",
                        "VernacExtend",
                        "e9c1646943eea49f0434bc7f9acd15443260f90b"
                    ]
                },
                {
                    "command": [
                        "move => e He.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in Hr.",
                        "VernacExtend",
                        "b9e43347cda1276e4a6138ca2b05e13592e2faa2"
                    ]
                },
                {
                    "command": [
                        "case: (Hr (mkposreal e He)) => /= {Hr} N Hr.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun k : nat => Rabs (Rabs (a k * r ^ k))) n) with (sum_f_R0 (fun k : nat => (Rabs (a k * r ^ k))) n).",
                        "VernacExtend",
                        "de7053bb2d5ec45f02a60b34fbf3da2b2467d625"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sum_n_Reals; by apply Hr.",
                        "VernacExtend",
                        "aaf1aa09f15b9dbef7ced2b5c0b90fa6c705256c"
                    ]
                },
                {
                    "command": [
                        "elim: n {Hn} => /= [ | n IH] ; rewrite Rabs_Rabsolu.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => n x Hx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite ?Rabs_mult -?RPow_abs.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply pow_incr ; split.",
                        "VernacExtend",
                        "019a57ca25f8dc3f7273dda8e04126707cba38e4"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_pos_eq r).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Rminus_0_r in Hx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_Reals_1",
            "line_nb": 448,
            "steps": [
                {
                    "command": [
                        "case => An [l [H H0]].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have H1 : is_lub_Rbar (CV_disk a) (CV_radius a).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /CV_radius /Lub_Rbar ; by case: ex_lub_Rbar.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "have H2 : forall (y : R), 0 < y < r -> (CV_disk a y).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => y Hy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply @ex_series_le with An.",
                        "VernacExtend",
                        "e18b4c082ef133562c109f8e56c1f2ad4d507e11"
                    ]
                },
                {
                    "command": [
                        "move => n ; rewrite /norm /= /abs /= Rabs_Rabsolu.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply H0 ; rewrite /Boule Rabs_pos_eq Rminus_0_r.",
                        "VernacExtend",
                        "303297d10ff25420753cceb5389062ceae91967c"
                    ]
                },
                {
                    "command": [
                        "by apply Hy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, Hy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists l.",
                        "VernacExtend",
                        "9ca96dacfce153d20a69dd7ea7c7254236074950"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_spec _ l).",
                        "VernacExtend",
                        "b647a8fffd8d7d14ce42956445e40a177c1ec806"
                    ]
                },
                {
                    "command": [
                        "intros eps.",
                        "VernacExtend",
                        "786caed5d6705ffc7435ecfd5604e33c6ecd43f1"
                    ]
                },
                {
                    "command": [
                        "case: (H eps (cond_pos eps)) => N {H} H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "set v := sum_n _ _.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "replace v with (sum_n (fun k : nat => Rabs (An k)) n).",
                        "VernacExtend",
                        "1df85e6d540ad38d506ac75f0e282c99db960756"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_n_Reals; by apply H.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "rewrite /v {v}.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: n {Hn} => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_O ; apply Rabs_pos_eq.",
                        "VernacExtend",
                        "48a2caa468319dae19e5a378d593188d39ad49c3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Rabs (a O * 0 ^ O)).",
                        "VernacExtend",
                        "3257730b9780bbd7ed00d9529df6bba736979fe9"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply H0 ; rewrite /Boule Rminus_0_r Rabs_R0 ; by apply r.",
                        "VernacExtend",
                        "36691ff0f2aa9f1bf72e21f6b65aa7e24b6ec3e6"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_Sn IH Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Rabs (a (S n) * 0 ^ (S n))).",
                        "VernacExtend",
                        "7d34239bb4a6a6e7499965c74050b389f4830c68"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply H0 ; rewrite /Boule Rminus_0_r Rabs_R0 ; by apply r.",
                        "VernacExtend",
                        "36691ff0f2aa9f1bf72e21f6b65aa7e24b6ec3e6"
                    ]
                },
                {
                    "command": [
                        "have H3 : forall y, 0 < y < r -> Rbar_le (Finite (y)) (CV_radius a).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => y Hy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply H1, H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have H4 := CV_radius_ge_0 a.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (CV_radius a) H3 H4 => /= [cv | | ] // H3 H4.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le => /= H5.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have H6 : 0 < (cv+r)/2 < r.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "move: (H3 _ H6).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_Reals_2",
            "line_nb": 489,
            "steps": [
                {
                    "command": [
                        "move => Hx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have H : exists r : posreal, Rabs x < r /\\ Rbar_lt (Finite r) (CV_radius a).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (CV_radius a) Hx => /= [cv | | ] Hx.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have H : 0 < (Rabs x + cv)/2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "generalize (Rabs_pos x) ; lra.",
                        "VernacExtend",
                        "bc11a7f9a761054f5f4ecf0c20dcf521f7246dce"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ H) => /=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "have H : 0 < Rabs x + 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_0_plus_1, Rabs_pos.",
                        "VernacExtend",
                        "19f822cc1ec9470ed7cbbd00c462a3f81586b9fb"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ H) => /=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_plus_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: H => r H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply CVN_CVU_r with r.",
                        "VernacExtend",
                        "04e36c47cc33fcbd73bbc577fd4add32cda02cdd"
                    ]
                },
                {
                    "command": [
                        "by apply CV_radius_Reals_0, H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_plus",
            "line_nb": 512,
            "steps": [
                {
                    "command": [
                        "move => Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (f:= (fun n => plus (sum_n (fun k => scal (pow_n x k) (a k)) n) (sum_n (fun k => scal (pow_n x k) (b k)) n))).",
                        "VernacExtend",
                        "677e6f8c06520d7472be87e1e48d1c662914d4c7"
                    ]
                },
                {
                    "command": [
                        "elim => [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "simpl ; rewrite /PS_plus !sum_O.",
                        "VernacExtend",
                        "41a60d2a21e0df8ab3a4b72b6ef6cfa8908df0b5"
                    ]
                },
                {
                    "command": [
                        "now repeat rewrite scal_one.",
                        "VernacExtend",
                        "6a35941e09be983696e38cecd2553e70539eead0"
                    ]
                },
                {
                    "command": [
                        "simpl ; rewrite !sum_Sn -IH /PS_plus.",
                        "VernacExtend",
                        "41a60d2a21e0df8ab3a4b72b6ef6cfa8908df0b5"
                    ]
                },
                {
                    "command": [
                        "generalize (sum_n (fun k : nat => scal (pow_n x k) (a k)) n) => a' ; generalize (sum_n (fun k : nat => scal (pow_n x k) (b k)) n) => b'.",
                        "VernacExtend",
                        "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite -plus_assoc; apply f_equal.",
                        "VernacExtend",
                        "3b10b927971ea148845ab5f223cc233431aaeca5"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm -plus_assoc; apply f_equal.",
                        "VernacExtend",
                        "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_distr_l; apply plus_comm.",
                        "VernacExtend",
                        "d909cdade2100e10efdebd0f24728dd888aefaf5"
                    ]
                },
                {
                    "command": [
                        "now apply filterlim_comp_2 with (3 := filterlim_plus _ _).",
                        "VernacExtend",
                        "bc491bb0ee223a7c3bc2eaece28c459c34b6ae81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_plus",
            "line_nb": 525,
            "steps": [
                {
                    "command": [
                        "move => [la Ha] [lb Hb].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (plus la lb).",
                        "VernacExtend",
                        "48cfd3bced3afc8aa7929a26ef624bea6c0ef154"
                    ]
                },
                {
                    "command": [
                        "by apply is_pseries_plus.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_plus",
            "line_nb": 531,
            "steps": [
                {
                    "command": [
                        "intros Ha Hb.",
                        "VernacExtend",
                        "0c4ce3bbd15ba18416ad16c4ce047ec9c705752c"
                    ]
                },
                {
                    "command": [
                        "apply is_pseries_unique.",
                        "VernacExtend",
                        "bc31764e2cd2bfe0204b6108fcc6c1df4cd7855c"
                    ]
                },
                {
                    "command": [
                        "apply: is_pseries_plus ; rewrite PSeries_eq ; apply Series_correct.",
                        "VernacExtend",
                        "a3efb57d2bc9ab68cca17324fd3e0ae334614fdf"
                    ]
                },
                {
                    "command": [
                        "by apply Ha.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_disk_plus",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "move => Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (ex_series_plus _ _ Ha Hb).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply @ex_series_le => n ; rewrite /norm /= /abs /= Rabs_Rabsolu.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_plus_distr_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_triang.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_scal",
            "line_nb": 616,
            "steps": [
                {
                    "command": [
                        "move => Hx Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply (filterlim_ext (fun n => scal c (sum_n (fun k => scal (pow_n x k) (a k)) n))).",
                        "VernacExtend",
                        "8001514377a6d817578ddcedabc6184faf82bb3b"
                    ]
                },
                {
                    "command": [
                        "elim => [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "simpl ; rewrite /PS_scal.",
                        "VernacExtend",
                        "41a60d2a21e0df8ab3a4b72b6ef6cfa8908df0b5"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_O.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now repeat rewrite scal_one.",
                        "VernacExtend",
                        "6a35941e09be983696e38cecd2553e70539eead0"
                    ]
                },
                {
                    "command": [
                        "simpl ; rewrite !sum_Sn -IH /PS_scal.",
                        "VernacExtend",
                        "41a60d2a21e0df8ab3a4b72b6ef6cfa8908df0b5"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_distr_l; apply f_equal.",
                        "VernacExtend",
                        "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
                    ]
                },
                {
                    "command": [
                        "rewrite 2! scal_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2.",
                        "VernacExtend",
                        "be46a64a7879d7dc9b1dce72ceb4b39ac590e100"
                    ]
                },
                {
                    "command": [
                        "rewrite -/(pow_n x (S n)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "clear -Hx.",
                        "VernacExtend",
                        "4bb1da1fb6470dfebcf314d8eef9e82b30482189"
                    ]
                },
                {
                    "command": [
                        "elim: (S n) => {n} /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite mult_one_l mult_one_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mult_assoc -IH 2!mult_assoc Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "now apply filterlim_comp with (2 := filterlim_scal_r _ _).",
                        "VernacExtend",
                        "8df7affebf185af086317c0b87740f57c838efdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_scal",
            "line_nb": 641,
            "steps": [
                {
                    "command": [
                        "rewrite -Series_scal_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Series_ext.",
                        "VernacExtend",
                        "fdbcb56c0988c866fe0a698401ce4bfd1c6b2a6b"
                    ]
                },
                {
                    "command": [
                        "move => n /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_assoc.",
                        "VernacExtend",
                        "9fb57cd8dc4dbe1dd6003e03f7c45064c83289ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_disk_scal",
            "line_nb": 647,
            "steps": [
                {
                    "command": [
                        "move => Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_ext with (fun n => Rabs c * Rabs (a n * x ^ n)).",
                        "VernacExtend",
                        "df23958ad4a5148c8690e546e6fc51c67d39c157"
                    ]
                },
                {
                    "command": [
                        "move => n ; rewrite -Rabs_mult ; apply f_equal ; by rewrite /PS_scal /= Rmult_assoc.",
                        "VernacExtend",
                        "8f6cf9d0bb878766fabf745bd4279fedcca11481"
                    ]
                },
                {
                    "command": [
                        "apply @ex_series_scal.",
                        "VernacExtend",
                        "15ad4afc02b3fd74bd69cc2e9af2531ed3f778d6"
                    ]
                },
                {
                    "command": [
                        "by apply Ha.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_scal",
            "line_nb": 654,
            "steps": [
                {
                    "command": [
                        "rewrite /CV_radius /Lub_Rbar ; case: ex_lub_Rbar => la [ub_a lub_a] ; case: ex_lub_Rbar => lc [ub_c lub_c] /= Hc.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_antisym.",
                        "VernacExtend",
                        "f0e54e4db9d25ea0231de349a146a11c944777e8"
                    ]
                },
                {
                    "command": [
                        "apply lub_a => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply ub_c.",
                        "VernacExtend",
                        "febbe39852525d8512a954285b64e1b9952b223b"
                    ]
                },
                {
                    "command": [
                        "assert (CV_disk (PS_scal (/c) (PS_scal c a)) x).",
                        "VernacExtend",
                        "1d263f72a65b3c92b200657d599e3fa8b6774321"
                    ]
                },
                {
                    "command": [
                        "by apply CV_disk_scal.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: H ; apply ex_series_ext => n.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "rewrite /PS_scal /scal /= /mult /= ; by field.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "apply lub_c => x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply ub_a.",
                        "VernacExtend",
                        "1bffeaca02f6194c12b19706aa5867b1acca856e"
                    ]
                },
                {
                    "command": [
                        "by apply CV_disk_scal.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_scal_r",
            "line_nb": 669,
            "steps": [
                {
                    "command": [
                        "rewrite -Series_scal_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Series_ext.",
                        "VernacExtend",
                        "fdbcb56c0988c866fe0a698401ce4bfd1c6b2a6b"
                    ]
                },
                {
                    "command": [
                        "move => n /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /PS_scal_r ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_disk_scal_r",
            "line_nb": 675,
            "steps": [
                {
                    "command": [
                        "move => Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_ext with (fun n => Rabs c * Rabs (a n * x ^ n)).",
                        "VernacExtend",
                        "df23958ad4a5148c8690e546e6fc51c67d39c157"
                    ]
                },
                {
                    "command": [
                        "move => n ; rewrite -Rabs_mult ; apply f_equal ; rewrite /PS_scal_r /= ; ring.",
                        "VernacExtend",
                        "51638b73c476714a87b4824bb9f3af93a056967d"
                    ]
                },
                {
                    "command": [
                        "by apply @ex_series_scal ; apply Ha.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_scal_r",
            "line_nb": 681,
            "steps": [
                {
                    "command": [
                        "intros Hc.",
                        "VernacExtend",
                        "4f3611b06413a15b50ffa7497dbe8a6af513ce13"
                    ]
                },
                {
                    "command": [
                        "rewrite -(CV_radius_scal c a).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply CV_radius_ext => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_comm.",
                        "VernacExtend",
                        "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_incr_1",
            "line_nb": 711,
            "steps": [
                {
                    "command": [
                        "move => [l Ha] ; exists (scal x l) ; by apply is_pseries_incr_1.",
                        "VernacExtend",
                        "cc8caedb281eb99e58675fdb8ababc177ad8ea07"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PS_incr_n_simplify",
            "line_nb": 715,
            "steps": [
                {
                    "command": [
                        "case: le_lt_dec => H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "elim: n k H => [ | n IH] k H.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite /PS_incr_n ; by case: k H.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "case: k H => [ | k] H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply le_Sn_0 in H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /PS_incr_n -/PS_incr_n /PS_incr_1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite IH.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "by elim: n k H {IH} => /= [ | n IH] k H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply le_S_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: n k H => [ | n IH] k H.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by apply lt_n_O in H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /PS_incr_n -/PS_incr_n /PS_incr_1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: k H => [ | k] H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply IH, lt_S_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_incr_n",
            "line_nb": 733,
            "steps": [
                {
                    "command": [
                        "move => Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "elim: n => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite scal_one.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -scal_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply is_pseries_incr_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_incr_n",
            "line_nb": 740,
            "steps": [
                {
                    "command": [
                        "move => [l Ha].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (scal (pow_n x n) l) ; by apply is_pseries_incr_n.",
                        "VernacExtend",
                        "811af81c16326f65db8964f7386b53fd3c976168"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_decr_1",
            "line_nb": 745,
            "steps": [
                {
                    "command": [
                        "move => Hx Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun n : nat => scal y (sum_n (fun k => scal (pow_n x (S k)) (a (S k))) n)).",
                        "VernacExtend",
                        "477fbd9c25a822b59b95842afdf4f3d0c02848f0"
                    ]
                },
                {
                    "command": [
                        "intros n; induction n; unfold PS_decr_1; simpl.",
                        "VernacExtend",
                        "bbe28ab57aa47b20e356ad4a50c6e0d221e47c89"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_O mult_one_r scal_one scal_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx; try assumption.",
                        "VernacExtend",
                        "39c12929a6855345afcc6034cf4afc5484312045"
                    ]
                },
                {
                    "command": [
                        "apply @scal_one.",
                        "VernacExtend",
                        "efc0bcbe341833b02e6d2e1d251cab32d6188829"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_Sn -IHn.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_distr_l; apply f_equal.",
                        "VernacExtend",
                        "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_assoc (mult_assoc y).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now rewrite mult_one_l.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (2 := filterlim_scal_r _ _).",
                        "VernacExtend",
                        "5c99b4e9f93675834f5b84d47e8d8afba05d3563"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun n : nat => plus (sum_n (fun k => scal (pow_n x k) (a k)) (S n)) (opp (a 0%nat))).",
                        "VernacExtend",
                        "1fc5386e1f1849a16d8658be21a967bc3f4ab149"
                    ]
                },
                {
                    "command": [
                        "intros n; induction n; simpl.",
                        "VernacExtend",
                        "417fbe27653af5f047e8a3663d85ac491d642a2f"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_Sn !sum_O /= mult_one_r scal_one.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm plus_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now rewrite plus_opp_l plus_zero_l.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_Sn -IHn.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; rewrite plus_comm plus_assoc.",
                        "VernacExtend",
                        "00e73cdc5f4d94bdb53e3f5c0334e40db568d1ca"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2;[idtac|reflexivity].",
                        "VernacExtend",
                        "07a0b76367d5293d6caea30558a9b41dd8a8ca42"
                    ]
                },
                {
                    "command": [
                        "now rewrite !sum_Sn plus_comm.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp_2 with (3 := filterlim_plus _ _).",
                        "VernacExtend",
                        "1141fa965421259e149125bedfc97586ea306105"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (f:= fun x => S x) (2:=Ha).",
                        "VernacExtend",
                        "9e32d1ab800ddf6eda6a47ae399c4639a09f1277"
                    ]
                },
                {
                    "command": [
                        "apply eventually_subseq; intros n; omega.",
                        "VernacExtend",
                        "7526edbe28814bbfc9a6aabbc8457d8c9b2a1c54"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_const.",
                        "VernacExtend",
                        "ff971edf84d1cf6e134869f4729acc40969816e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_decr_1",
            "line_nb": 772,
            "steps": [
                {
                    "command": [
                        "case => [H | [y Hx]] [l Ha].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite H ; by apply ex_pseries_0.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "exists (scal y (plus l (opp (a 0%nat)))).",
                        "VernacExtend",
                        "70ac8f8660cb161ed942b0a645759f19bf1f5722"
                    ]
                },
                {
                    "command": [
                        "now apply is_pseries_decr_1.",
                        "VernacExtend",
                        "38c7ed0c946e5795a180ec1a0288c83b0e540dc6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_decr_n",
            "line_nb": 779,
            "steps": [
                {
                    "command": [
                        "move => Hx Hn Ha.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: n Hn => [ | n] Hn.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply lt_irrefl in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "clear Hn ; simpl ; rewrite -minus_n_O /PS_decr_n /=.",
                        "VernacExtend",
                        "2859047c5a55e6c669f6fcfd12adc40b7e1c066e"
                    ]
                },
                {
                    "command": [
                        "elim: n => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_O scal_one mult_one_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now apply is_pseries_decr_1.",
                        "VernacExtend",
                        "38c7ed0c946e5795a180ec1a0288c83b0e540dc6"
                    ]
                },
                {
                    "command": [
                        "set (ln := (scal (mult y (pow_n y n)) (plus l (opp (sum_n (fun k : nat => scal (pow_n x k) (a k)) n))))) in IH.",
                        "VernacExtend",
                        "17d98dc277c70e53516324d9540f5cf0afae171e"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_Sn /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (scal (mult y (mult y (pow_n y n))) (plus l (opp (plus (sum_n (fun k : nat => scal (pow_n x k) (a k)) n) (scal (mult x (pow_n x n)) (a (S n))))))) with (scal y (plus ln (opp (a (S (n + 0)))))).",
                        "VernacExtend",
                        "6db0cb4be49ac38fd59d01c98942d88da85bf3ce"
                    ]
                },
                {
                    "command": [
                        "assert (Y:is_pseries (fun k : nat => a (S (n + k))) x ln).",
                        "VernacExtend",
                        "a9459d33c4f54f2bdfae165c5d3506b52762a596"
                    ]
                },
                {
                    "command": [
                        "apply IH.",
                        "VernacExtend",
                        "88103d45393d3ee3ab547447d913543854db8cea"
                    ]
                },
                {
                    "command": [
                        "move: (is_pseries_decr_1 (fun k : nat => a (S (n + k))) x y ln Hx Y).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /PS_decr_1 /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_pseries_ext => k.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply f_equal ; ring.",
                        "VernacExtend",
                        "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
                    ]
                },
                {
                    "command": [
                        "rewrite -scal_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal; unfold ln.",
                        "VernacExtend",
                        "2f7eff7d2d1bbfb680f82a1f6ffa94b5a1a298bc"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (scal_distr_l _ l).",
                        "VernacExtend",
                        "c23cdc0c7bcb18627cd6e2b08e391fe6a16b1b34"
                    ]
                },
                {
                    "command": [
                        "rewrite -plus_assoc; apply f_equal.",
                        "VernacExtend",
                        "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
                    ]
                },
                {
                    "command": [
                        "rewrite opp_plus scal_distr_l; apply f_equal.",
                        "VernacExtend",
                        "1775b3adc7dd915cdc7d26d03365d16d21a7694e"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_r -scal_opp_l scal_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply trans_eq with (scal (opp (one : K)) (a (S n))).",
                        "VernacExtend",
                        "f6c6b4e5a93dd909dd235b0f5b2d660b9dc0f069"
                    ]
                },
                {
                    "command": [
                        "now rewrite scal_opp_l scal_one.",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2; try reflexivity.",
                        "VernacExtend",
                        "3c43b1a499b7d0b846551865734353113dcb5bd3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- opp_mult_r; apply f_equal.",
                        "VernacExtend",
                        "7935be01d3cecd6d5d3b361705d6fd8b564643cb"
                    ]
                },
                {
                    "command": [
                        "clear -Hx.",
                        "VernacExtend",
                        "4bb1da1fb6470dfebcf314d8eef9e82b30482189"
                    ]
                },
                {
                    "command": [
                        "rewrite -?/(pow_n _ (S _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: (S n) => {n} /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite mult_one_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(pow_n_comm_1 x) mult_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(mult_assoc y (pow_n y n) (pow_n x n)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -IH mult_one_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_decr_n",
            "line_nb": 814,
            "steps": [
                {
                    "command": [
                        "intros Hx H.",
                        "VernacExtend",
                        "c4c5a8bf6b53b6182e8f392063bf3b80e0a27bc1"
                    ]
                },
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "unfold PS_decr_n; now simpl.",
                        "VernacExtend",
                        "e550d414e6387433a143d241f0caa274fa2b85b1"
                    ]
                },
                {
                    "command": [
                        "apply ex_pseries_ext with ((PS_decr_1 (PS_decr_n a n))).",
                        "VernacExtend",
                        "25576f03044800d97cbec8489c57d2a6cd2b033e"
                    ]
                },
                {
                    "command": [
                        "intros m; unfold PS_decr_1, PS_decr_n.",
                        "VernacExtend",
                        "5f6c6fd110e5e64c37f14829e4ae7ae804137de0"
                    ]
                },
                {
                    "command": [
                        "apply f_equal; ring.",
                        "VernacExtend",
                        "bfe8e22f6e3cffbc737cc9d2a43e70b63c8b918d"
                    ]
                },
                {
                    "command": [
                        "apply ex_pseries_decr_1.",
                        "VernacExtend",
                        "aab264b75dc2a62afde11bd32c7c1f025fadafc1"
                    ]
                },
                {
                    "command": [
                        "apply Hx.",
                        "VernacExtend",
                        "6b67a45c0db24f7a9d568d1ce8b5aa142ba212d9"
                    ]
                },
                {
                    "command": [
                        "now apply IHn.",
                        "VernacExtend",
                        "d7b5337f909b975d7c4100924592d614741c9e55"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_incr_1",
            "line_nb": 826,
            "steps": [
                {
                    "command": [
                        "rewrite -Series_scal_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "unfold PSeries, Series.",
                        "VernacExtend",
                        "84f15325581db580a52d2bc80422cec2a7bb8216"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Lim_seq_incr_1 (sum_n (fun k : nat => PS_incr_1 a k * x ^ k))) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal, Lim_seq_ext.",
                        "VernacExtend",
                        "e1cfa4da5ff991d74483661018e540e778c207e4"
                    ]
                },
                {
                    "command": [
                        "case.",
                        "VernacExtend",
                        "3dfaa17e8190d1522b22601372c66b9913f6a1e2"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_Sn !sum_O /= /plus /zero /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "elim => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite !sum_Sn !sum_O /= /plus /zero /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_Sn IH !sum_Sn /= /plus /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_incr_n",
            "line_nb": 840,
            "steps": [
                {
                    "command": [
                        "elim: n => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rmult_1_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite PSeries_incr_1 IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_decr_1",
            "line_nb": 846,
            "steps": [
                {
                    "command": [
                        "intros Ha.",
                        "VernacExtend",
                        "6ecded848bba79cd3aa9b3381ee26c94c3ca8775"
                    ]
                },
                {
                    "command": [
                        "case: (Req_dec x 0) => Hx.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx PSeries_0 ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "move: (is_pseries_decr_1 a x (/x) (PSeries a x) (Rinv_l _ Hx) (PSeries_correct _ _ Ha)) => Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_pseries_unique _ _ _ Hb).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /plus /opp /scal /= /mult /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "now field.",
                        "VernacExtend",
                        "f3de8dbe903009a3417a80d825415eef0ce85558"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_decr_1_aux",
            "line_nb": 855,
            "steps": [
                {
                    "command": [
                        "intros Ha0.",
                        "VernacExtend",
                        "97c70b1f03c36427ba9878a01583cce39bc59645"
                    ]
                },
                {
                    "command": [
                        "rewrite -PSeries_incr_1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /PS_incr_1 /PS_decr_1 /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Series_ext.",
                        "VernacExtend",
                        "fdbcb56c0988c866fe0a698401ce4bfd1c6b2a6b"
                    ]
                },
                {
                    "command": [
                        "case => //=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite Ha0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_decr_n",
            "line_nb": 863,
            "steps": [
                {
                    "command": [
                        "intros Ha.",
                        "VernacExtend",
                        "6ecded848bba79cd3aa9b3381ee26c94c3ca8775"
                    ]
                },
                {
                    "command": [
                        "case: (Req_dec x 0) => Hx.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx PSeries_0 ; simpl ; ring_simplify.",
                        "VernacExtend",
                        "278eeb05e28e517b96bdee19c5c473770d13021b"
                    ]
                },
                {
                    "command": [
                        "elim: n => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite -IH ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "assert (V:(pow_n x (S n) <> 0)).",
                        "VernacExtend",
                        "dff73d9b2df0fb77f86de3d0a1b585638886ad38"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_n_pow; now apply pow_nonzero.",
                        "VernacExtend",
                        "44cff3ab76323d1ba63c74ebf7417a99311a5fbe"
                    ]
                },
                {
                    "command": [
                        "move: (is_pseries_decr_n a (S n) x (/x) (PSeries a x) (Rinv_l x Hx) (lt_0_Sn _) (PSeries_correct _ _ Ha)) => Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_pseries_unique _ _ _ Hb).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (sum_n_ext _ (fun k : nat => a k * x ^ k)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_n_Reals.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (S n -1)%nat with n.",
                        "VernacExtend",
                        "5043f6406e48ec2d517c658614fddf3055e7396f"
                    ]
                },
                {
                    "command": [
                        "rewrite /scal /plus /opp /= /mult /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_n_pow -Rinv_pow ; try assumption.",
                        "VernacExtend",
                        "39c12929a6855345afcc6034cf4afc5484312045"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "split; try assumption.",
                        "VernacExtend",
                        "7aec98fbbf52695c4dbe780a98e3c8166b58320f"
                    ]
                },
                {
                    "command": [
                        "now apply pow_nonzero.",
                        "VernacExtend",
                        "e43dcfc06a9f119d1f2061caf4fbc8985bb63349"
                    ]
                },
                {
                    "command": [
                        "now apply plus_minus.",
                        "VernacExtend",
                        "759d5a7777379d7e7ec2660511e1270f59387bea"
                    ]
                },
                {
                    "command": [
                        "intros m; rewrite pow_n_pow.",
                        "VernacExtend",
                        "ffe2fe1519dafab748c2161f6a976e85dc7acb29"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_comm.",
                        "VernacExtend",
                        "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_decr_n_aux",
            "line_nb": 886,
            "steps": [
                {
                    "command": [
                        "elim: n => /= [ | n IH] Ha.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply PSeries_ext => n ; by intuition.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "rewrite IH.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite PSeries_decr_1_aux.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm _ (x^n)) Rmult_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "repeat apply Rmult_eq_compat_l.",
                        "VernacExtend",
                        "c7ab810debda981b95e89d049d103939ca373424"
                    ]
                },
                {
                    "command": [
                        "apply PSeries_ext => k ; rewrite /PS_decr_1 /PS_decr_n ; by intuition.",
                        "VernacExtend",
                        "807299c3a0aad1b7078a1cfb1dd047b9e08cae61"
                    ]
                },
                {
                    "command": [
                        "apply Ha ; by intuition.",
                        "VernacExtend",
                        "45f160527e330b14f030b3479294aefcc6c390f8"
                    ]
                },
                {
                    "command": [
                        "move => k Hk.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Ha ; by intuition.",
                        "VernacExtend",
                        "45f160527e330b14f030b3479294aefcc6c390f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_incr_1",
            "line_nb": 899,
            "steps": [
                {
                    "command": [
                        "assert (Ha := CV_radius_bounded a).",
                        "VernacExtend",
                        "ec140409e9ce8fbf217ea86b43eed6fc0b734880"
                    ]
                },
                {
                    "command": [
                        "assert (Ha' := CV_radius_bounded (PS_incr_1 a)).",
                        "VernacExtend",
                        "f63fc871d7c5dff4ce9f2742c2e588303e57deae"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_antisym.",
                        "VernacExtend",
                        "f0e54e4db9d25ea0231de349a146a11c944777e8"
                    ]
                },
                {
                    "command": [
                        "apply Ha' => x [M Hx] ; apply Ha.",
                        "VernacExtend",
                        "1efc0eb68ad39eb820af24bd5015e00caf02e9cf"
                    ]
                },
                {
                    "command": [
                        "move: (fun n => Hx (S n)) => {Hx} Hx ; simpl in Hx.",
                        "VernacExtend",
                        "17ff040e6c4d360c84e1aac4c8658103d198c58a"
                    ]
                },
                {
                    "command": [
                        "case: (Req_dec x 0) => Hx0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx0 ; exists (Rabs (a O)) ; case => /= [ | n].",
                        "VernacExtend",
                        "8c27a1e5bb539d8b1937a2d7cf3b7fa928f33064"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r ; by right.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l Rmult_0_r Rabs_R0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (M / Rabs x) => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_div_r.",
                        "VernacExtend",
                        "39a40b6e5130576866c7b399976cb299d3a9a507"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos_lt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -Rabs_mult Rmult_assoc (Rmult_comm _ x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Ha => x [M Hx] ; apply Ha'.",
                        "VernacExtend",
                        "6945ccf931b3d4a57f1a4fde8f8c9efe17d5d3f5"
                    ]
                },
                {
                    "command": [
                        "exists (M * Rabs x) ; case => [ | n] /=.",
                        "VernacExtend",
                        "c994296b206ac291a5e6cd7cc6f61e46a971d8b6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l Rabs_R0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "eapply Rle_trans, (Hx O).",
                        "VernacExtend",
                        "c54ea14ecee572667cfcea71bce2a8d93bb0eadb"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm x) -Rmult_assoc Rabs_mult.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r.",
                        "VernacExtend",
                        "6c4c5a82dab802842919dd673f1978a3cb8cff73"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_mult",
            "line_nb": 953,
            "steps": [
                {
                    "command": [
                        "move => Hla Hlb Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_series_ext with (fun n => sum_f_R0 (fun k => (fun l => a l * x ^ l) k * (fun l => b l * x ^ l) (n - k)%nat) n).",
                        "VernacExtend",
                        "f50e58f815350d4ae048da8cb778c49806a0aae1"
                    ]
                },
                {
                    "command": [
                        "move => n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /PS_mult /scal /= /mult /= scal_sum.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply sum_eq => i Hi.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -{4}(MyNat.sub_add _ _ Hi).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_n_pow pow_add.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply (is_series_mult (fun l => a l * x ^ l) (fun l => b l * x ^ l)).",
                        "VernacExtend",
                        "42421c8483322d2510261990e35e8a05784e2cfa"
                    ]
                },
                {
                    "command": [
                        "now apply (is_pseries_R a x la).",
                        "VernacExtend",
                        "fddbddb23a13d664b2ff697ac74a83679e4e8ec6"
                    ]
                },
                {
                    "command": [
                        "now apply (is_pseries_R b x lb).",
                        "VernacExtend",
                        "e5e869ffd989a8867cdcf807e0fa58d77f726b23"
                    ]
                },
                {
                    "command": [
                        "by apply CV_disk_inside.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply CV_disk_inside.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_mult",
            "line_nb": 968,
            "steps": [
                {
                    "command": [
                        "move => Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists ((PSeries a x) * (PSeries b x)).",
                        "VernacExtend",
                        "0d1075a788b49889abf908e8e3ac6980db0fb30a"
                    ]
                },
                {
                    "command": [
                        "apply is_pseries_mult => // ; by apply PSeries_correct, CV_radius_inside.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_mult",
            "line_nb": 973,
            "steps": [
                {
                    "command": [
                        "move => Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_pseries_unique.",
                        "VernacExtend",
                        "bc31764e2cd2bfe0204b6108fcc6c1df4cd7855c"
                    ]
                },
                {
                    "command": [
                        "apply is_pseries_mult => // ; by apply PSeries_correct, CV_radius_inside.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_odd_even",
            "line_nb": 978,
            "steps": [
                {
                    "command": [
                        "rewrite 3!is_pseries_R.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move => H1 H2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext with (fun n => (sum_n (fun k : nat => a (2 * k)%nat * (x ^ 2) ^ k) (div2 n)) + x * match n with | O => 0 | S n => (sum_n (fun k : nat => a (2 * k + 1)%nat * (x ^ 2) ^ k) (div2 n)) end).",
                        "VernacExtend",
                        "fbdfda2a50d8caaabdddda94cca62374af5c2b83"
                    ]
                },
                {
                    "command": [
                        "case => [ | n].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite /= !sum_O /= ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "case: (even_odd_dec n) => Hn.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite 3!sum_n_Reals.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(even_div2 _ Hn) {3}(even_double _ Hn).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: (div2 n) => {n Hn} [ | n] ; rewrite ?double_S /sum_f_R0 -/sum_f_R0.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "rewrite /double /= ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "rewrite -pow_mult.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S n)%nat with (S (S (double n))) by (rewrite -double_S /double ; ring).",
                        "VernacExtend",
                        "03576a4aea503a28099ffd58bf6e0e07fae70ffb"
                    ]
                },
                {
                    "command": [
                        "replace (S (S (double n)) + 1)%nat with (S (S (S (double n)))) by ring.",
                        "VernacExtend",
                        "83eb20d0bcc51691ab12c71b8b56c03fabbcb40f"
                    ]
                },
                {
                    "command": [
                        "move => <- ; simpl ; ring.",
                        "VernacExtend",
                        "096989c64d21fcc92162023b03ace37ddc7573f4"
                    ]
                },
                {
                    "command": [
                        "rewrite 3!sum_n_Reals.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(odd_div2 _ Hn) {3}(odd_double _ Hn).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: (div2 n) => {n Hn} [ | n] ; rewrite ?double_S /sum_f_R0 -/sum_f_R0.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "rewrite /double /= ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "rewrite -?pow_mult.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S n)%nat with (S (S (double n))) by (rewrite -double_S /double ; ring).",
                        "VernacExtend",
                        "03576a4aea503a28099ffd58bf6e0e07fae70ffb"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S (S n))%nat with (S (S (S (S (double n))))) by (rewrite -double_S /double ; ring).",
                        "VernacExtend",
                        "4869259476abfc981c85fab3c1b9e3c90b43a0d8"
                    ]
                },
                {
                    "command": [
                        "replace (S (S (double n)) + 1)%nat with (S (S (S (double n)))) by ring.",
                        "VernacExtend",
                        "83eb20d0bcc51691ab12c71b8b56c03fabbcb40f"
                    ]
                },
                {
                    "command": [
                        "move => <- ; simpl ; ring.",
                        "VernacExtend",
                        "096989c64d21fcc92162023b03ace37ddc7573f4"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_plus' _ _ l1 (x*l2)).",
                        "VernacExtend",
                        "f1d6ba1cd2acf75fae82297bda0e9332d79afbc8"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (2:=H1).",
                        "VernacExtend",
                        "9a28dfd9bff2dd6fb3e3982b3c3ef0ac6f2d47c8"
                    ]
                },
                {
                    "command": [
                        "intros P [N HN].",
                        "VernacExtend",
                        "49e72385e25f38319889834e3eecd05dfb798dc2"
                    ]
                },
                {
                    "command": [
                        "exists (2*N+1)%nat.",
                        "VernacExtend",
                        "63dda7e9d4582ae7974b12691166c7f53076d670"
                    ]
                },
                {
                    "command": [
                        "intros n Hn; apply HN.",
                        "VernacExtend",
                        "6a83c240bebd44bfef854f41047aa4dfe96cccea"
                    ]
                },
                {
                    "command": [
                        "apply le_double.",
                        "VernacExtend",
                        "afa53fd37ad6093b0affa9a9693761307de0b21a"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_reg_l with 1%nat.",
                        "VernacExtend",
                        "39c7193d33a17f13c698a1c7004cb9288060963c"
                    ]
                },
                {
                    "command": [
                        "rewrite Plus.plus_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1:=Hn).",
                        "VernacExtend",
                        "8ac30d3ff1e4a07f44d84ea98e599463c400de71"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1+double (div2 n))%nat.",
                        "VernacExtend",
                        "02198a95060ab8f2ae6b52fd51e8940e9625c43c"
                    ]
                },
                {
                    "command": [
                        "case (even_or_odd n); intros J.",
                        "VernacExtend",
                        "238ac0d9992145bbbe8c4194d72f4b8f354b7887"
                    ]
                },
                {
                    "command": [
                        "rewrite <- even_double; try exact J.",
                        "VernacExtend",
                        "fc7ec98876c7f6be416b286aa4f89c876a8d557b"
                    ]
                },
                {
                    "command": [
                        "now apply le_S.",
                        "VernacExtend",
                        "83e46c3d4ad488778b4895d310e46eba5fd4cd36"
                    ]
                },
                {
                    "command": [
                        "rewrite <- odd_double; easy.",
                        "VernacExtend",
                        "11530077b3f018df59deb62cabf2a1703c9e690c"
                    ]
                },
                {
                    "command": [
                        "simpl; now rewrite plus_0_r.",
                        "VernacExtend",
                        "03b09a89a202d4783a5a301a9614ba4d90219212"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_scal_l _ x l2) => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_ext_loc with (fun n => sum_n (fun k : nat => a (2 * k + 1)%nat * (x ^ 2) ^ k) (div2 (pred n))).",
                        "VernacExtend",
                        "38946595ddfbf68289e77037ab8133d3f78b0d84"
                    ]
                },
                {
                    "command": [
                        "exists 1%nat; intros y; case y.",
                        "VernacExtend",
                        "eef31dcbc4e5141f6cecf51223c76500c88b3dc6"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "intros n _; reflexivity.",
                        "VernacExtend",
                        "ebfc41f2306f92453950c1cb14a8f8ba6e453f78"
                    ]
                },
                {
                    "command": [
                        "apply filterlim_comp with (2:=H2).",
                        "VernacExtend",
                        "ced90c43c2d3a90eeb539ce369d8a0c27704c157"
                    ]
                },
                {
                    "command": [
                        "intros P [N HN].",
                        "VernacExtend",
                        "49e72385e25f38319889834e3eecd05dfb798dc2"
                    ]
                },
                {
                    "command": [
                        "exists (2*N+2)%nat.",
                        "VernacExtend",
                        "ecdffe88176b5a880f99542133d00d30b1c89e04"
                    ]
                },
                {
                    "command": [
                        "intros n Hn; apply HN.",
                        "VernacExtend",
                        "6a83c240bebd44bfef854f41047aa4dfe96cccea"
                    ]
                },
                {
                    "command": [
                        "apply le_double.",
                        "VernacExtend",
                        "afa53fd37ad6093b0affa9a9693761307de0b21a"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_reg_l with 2%nat.",
                        "VernacExtend",
                        "a0b416656c63dc94d1c6889e9285844816b65fdc"
                    ]
                },
                {
                    "command": [
                        "rewrite Plus.plus_comm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1:=Hn).",
                        "VernacExtend",
                        "8ac30d3ff1e4a07f44d84ea98e599463c400de71"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1+(1+double (div2 (pred n))))%nat.",
                        "VernacExtend",
                        "5b65c43216a3281a7d627b846555c15906abfb3d"
                    ]
                },
                {
                    "command": [
                        "case (even_or_odd (pred n)); intros J.",
                        "VernacExtend",
                        "20d3816c6d14bc088e57db7fe1bb5dbe0888161e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- even_double; try exact J.",
                        "VernacExtend",
                        "fc7ec98876c7f6be416b286aa4f89c876a8d557b"
                    ]
                },
                {
                    "command": [
                        "case n.",
                        "VernacExtend",
                        "11697c0361eed9b7e10df873f1d76a9d8f9f100a"
                    ]
                },
                {
                    "command": [
                        "simpl; now apply le_S, le_S.",
                        "VernacExtend",
                        "09c8cb6ec31f528518662b5a37187553841ccaa4"
                    ]
                },
                {
                    "command": [
                        "intros m; simpl; now apply le_S.",
                        "VernacExtend",
                        "4535893244fcbaaff6297fa91ca7f90fe14656ee"
                    ]
                },
                {
                    "command": [
                        "rewrite <- odd_double; try exact J.",
                        "VernacExtend",
                        "81315e535ac4c667123e861af2d66106c7e5871f"
                    ]
                },
                {
                    "command": [
                        "case n; simpl; try easy.",
                        "VernacExtend",
                        "961991fcd9e248fd38cb93fcbf17b52e0ea9d8f1"
                    ]
                },
                {
                    "command": [
                        "now apply le_S.",
                        "VernacExtend",
                        "83e46c3d4ad488778b4895d310e46eba5fd4cd36"
                    ]
                },
                {
                    "command": [
                        "simpl; now rewrite plus_0_r.",
                        "VernacExtend",
                        "03b09a89a202d4783a5a301a9614ba4d90219212"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_odd_even",
            "line_nb": 1041,
            "steps": [
                {
                    "command": [
                        "move => [l1 H1] [l2 H2].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists (l1 + x * l2).",
                        "VernacExtend",
                        "a52d828160969ccc10fc5904e34af82cb320ed59"
                    ]
                },
                {
                    "command": [
                        "by apply is_pseries_odd_even.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_odd_even",
            "line_nb": 1046,
            "steps": [
                {
                    "command": [
                        "move => H1 H2 ; apply is_pseries_unique.",
                        "VernacExtend",
                        "48455c2b1327920f79d0ea14f878ebd2851baee8"
                    ]
                },
                {
                    "command": [
                        "apply (is_pseries_odd_even a x); by apply PSeries_correct.",
                        "VernacExtend",
                        "f811b0dc735d057b8f07406e1ac857de68eeab45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_const_0",
            "line_nb": 1050,
            "steps": [
                {
                    "command": [
                        "move => x.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "replace 0 with (real 0) by auto.",
                        "VernacExtend",
                        "6fd71a3e236086a30e64c3bf3fac13dd74498ba9"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal real).",
                        "VernacExtend",
                        "57e73bb5eae5aa448423da85c916d02b5d8e8198"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}(Lim_seq_const 0) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Lim_seq_ext.",
                        "VernacExtend",
                        "7ea6f4316462f16e8e0201ec50e1735bb5bff76f"
                    ]
                },
                {
                    "command": [
                        "elim => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_O ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_Sn /= /plus /= IH ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_const_0",
            "line_nb": 1060,
            "steps": [
                {
                    "command": [
                        "suff : forall x, Rbar_le (Rabs x) (CV_radius (fun _ : nat => 0)).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "case H : (CV_radius (fun _ : nat => 0)) => [cv | | ] //= H0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: (Rle_lt_dec 0 cv) => Hcv.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (H0 (cv + 1)) => {H0} H0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "contradict H0 ; apply Rlt_not_le => /=.",
                        "VernacExtend",
                        "6961ba332674f176dc555cae618e94b32c542dc4"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Rle_abs _).",
                        "VernacExtend",
                        "e9ae6f7944f7c4212405dde246a6959f82ce32de"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; ring_simplify ; by apply Rlt_0_1.",
                        "VernacExtend",
                        "e384eae955b0244fa5ffb15789f2a204a411a7e6"
                    ]
                },
                {
                    "command": [
                        "contradict Hcv ; apply (Rbar_le_not_lt cv 0).",
                        "VernacExtend",
                        "95f75737c718fca1517f05a754a2c98adf179d2a"
                    ]
                },
                {
                    "command": [
                        "rewrite -Rabs_R0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (H0 0) => {H0} H0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "contradict H0 ; by apply Rbar_lt_not_le.",
                        "VernacExtend",
                        "2e28e8e5b324e5a7dfdafde95cb93720aa6e8366"
                    ]
                },
                {
                    "command": [
                        "move => x ; apply Rbar_not_lt_le => Hx.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "apply CV_disk_outside in Hx.",
                        "VernacExtend",
                        "514c912a176d0b638754812e61d155f3d7dc7ff5"
                    ]
                },
                {
                    "command": [
                        "apply: Hx.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_ext with (fun _ => 0).",
                        "VernacExtend",
                        "47b5f7475f5ec40ef1472095e4dff15d2363e610"
                    ]
                },
                {
                    "command": [
                        "move => n ; ring.",
                        "VernacExtend",
                        "550d555a37db07b848ee1c0dcb59e4bba252650f"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_opp",
            "line_nb": 1095,
            "steps": [
                {
                    "command": [
                        "intros [l Hl].",
                        "VernacExtend",
                        "e57b129728f1404a6b858b17bad3620408feae13"
                    ]
                },
                {
                    "command": [
                        "exists (opp l).",
                        "VernacExtend",
                        "34abed386fee7bfd53c9873615e8fdbd327a482e"
                    ]
                },
                {
                    "command": [
                        "now apply is_pseries_opp.",
                        "VernacExtend",
                        "617579d5161fe87fbf5ba3f007d9f83734b1738b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_opp",
            "line_nb": 1101,
            "steps": [
                {
                    "command": [
                        "replace (- PSeries a x) with ((-1) * PSeries a x) by ring.",
                        "VernacExtend",
                        "88b5948f152c4ff830bcb02f4bb5e3c22c266eec"
                    ]
                },
                {
                    "command": [
                        "rewrite -PSeries_scal.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply PSeries_ext => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite /PS_scal /PS_opp scal_opp_one.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_opp",
            "line_nb": 1107,
            "steps": [
                {
                    "command": [
                        "rewrite -(CV_radius_scal (-1)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply CV_radius_ext => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite /PS_scal /PS_opp scal_opp_l scal_opp_r opp_opp scal_one.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -Ropp_0 ; apply Rlt_not_eq, Ropp_lt_contravar, Rlt_0_1.",
                        "VernacExtend",
                        "e33a4cf11d1d62286187d0f7329c3e9b4d028f2a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_minus",
            "line_nb": 1116,
            "steps": [
                {
                    "command": [
                        "move => Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_pseries_plus.",
                        "VernacExtend",
                        "eedde088179d5f48e36a2538233d26a548611876"
                    ]
                },
                {
                    "command": [
                        "exact: Ha.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "by apply is_pseries_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_pseries_minus",
            "line_nb": 1122,
            "steps": [
                {
                    "command": [
                        "move => Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply ex_pseries_plus.",
                        "VernacExtend",
                        "2413e5aad80f45a7210618ec7bf07d18fe445bf0"
                    ]
                },
                {
                    "command": [
                        "exact: Ha.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "by apply ex_pseries_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_minus",
            "line_nb": 1129,
            "steps": [
                {
                    "command": [
                        "move => Ha Hb.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite PSeries_plus.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite PSeries_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exact: Ha.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "by apply ex_pseries_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_continuity",
            "line_nb": 1404,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (CV_radius_Reals_2 a x H) => r H0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply (CVU_continuity (fun (n : nat) (x : R) => sum_f_R0 (fun k : nat => a k * x ^ k) n) (PSeries a) x r H0).",
                        "VernacExtend",
                        "14354f94b599066c30b9d026f0a00ae83042b6f1"
                    ]
                },
                {
                    "command": [
                        "move => n y Hy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_finite_SF.",
                        "VernacExtend",
                        "5b8ac81ad44302f23a4515694643dbffef121c9f"
                    ]
                },
                {
                    "command": [
                        "move => k Hk.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_scal.",
                        "VernacExtend",
                        "5ff707f5df00c5d62e6a732245030e7fdc92cfc6"
                    ]
                },
                {
                    "command": [
                        "elim: k {Hk} => /= [ | k IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by apply continuity_pt_const => d f.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_mult.",
                        "VernacExtend",
                        "363550e1be8dbaf9c1ac305aa12a40e85202dd88"
                    ]
                },
                {
                    "command": [
                        "apply derivable_continuous_pt, derivable_pt_id.",
                        "VernacExtend",
                        "15780cb076be78d23a91c795504e862e39f03d96"
                    ]
                },
                {
                    "command": [
                        "by apply IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /Boule Rminus_eq_0 Rabs_R0 ; by apply r.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_derive",
            "line_nb": 1420,
            "steps": [
                {
                    "command": [
                        "have H := (CV_radius_bounded a).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have H0 := (CV_radius_bounded (PS_derive a)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_antisym.",
                        "VernacExtend",
                        "f0e54e4db9d25ea0231de349a146a11c944777e8"
                    ]
                },
                {
                    "command": [
                        "apply is_lub_Rbar_subset with (2 := H) (3 := H0) => x [M Ha].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "exists (Rmax (Rabs (a O)) (Rabs x * M)) ; case => /= [ | n].",
                        "VernacExtend",
                        "5f198ba9df04aae62341bb03d2e91015d32e4a76"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r ; by apply Rmax_l.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Rmax_r _ _).",
                        "VernacExtend",
                        "65cb968945ac724cfa8a9a5fdf9f7a71a1bcc7cb"
                    ]
                },
                {
                    "command": [
                        "replace (a (S n) * (x * x ^ n)) with (x * ((PS_derive a n * x ^ n) / INR (S n))) by (rewrite /PS_derive ; field ; apply not_0_INR, sym_not_eq, O_S).",
                        "VernacExtend",
                        "a3be15511b2905680333f75918012fcb016e48b4"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult ; apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "375663c6fed9a1f68fc51b94c78b7fde5410ebc1"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_div ; [ | by apply not_0_INR, sym_not_eq, O_S].",
                        "VernacExtend",
                        "bb1aed6ff5918be4f501d2130b8e73696f1e3c67"
                    ]
                },
                {
                    "command": [
                        "apply Rle_div_l.",
                        "VernacExtend",
                        "300a9124ae599e97b5c7dcc1ad678aa6b0fecb98"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos_lt, not_0_INR, sym_not_eq, O_S.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := Ha n).",
                        "VernacExtend",
                        "8b840f8fd8f632db5a081d1771a553d56ef5cceb"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}(Rmult_1_r M).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_trans with (2 := Ha O), Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_trans with (2 := Rle_abs _), (le_INR 1), le_n_S, le_O_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply H => x [M Hx].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have H1 : Rbar_le (Finite 0) (CV_radius (PS_derive a)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply H0 ; exists (Rabs (PS_derive a O)) ; case => /= [ | n].",
                        "VernacExtend",
                        "1b860bf62862e2662c67691048a6b19a1f1f1a10"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r ; by apply Rle_refl.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l Rmult_0_r Rabs_R0 ; by apply Rabs_pos.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "wlog: x Hx / (0 < x) => [Hw | Hx0].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (Rle_lt_dec x 0) => Hx0.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rbar_le_trans with (Finite 0).",
                        "VernacExtend",
                        "538fc4fd5213e3e0b1aaa83a74b2656691bd8170"
                    ]
                },
                {
                    "command": [
                        "exact Hx0.",
                        "VernacExtend",
                        "ccdb2933351c0c0e69d575ac7620a10568c4e3b0"
                    ]
                },
                {
                    "command": [
                        "by apply H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hw.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff : forall y, 0 < y < x -> Rbar_le (Finite y) (CV_radius (PS_derive a)).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "case: (CV_radius (PS_derive a)) H1 => [l | | ] //= H1 H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le => /= H3.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have H4 : (0 < (x+l)/2 < x).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
                    ]
                },
                {
                    "command": [
                        "by apply Rplus_lt_le_0_compat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_R0_R2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt, Ropp_lt_cancel ; field_simplify.",
                        "VernacExtend",
                        "56b8e001ed619110ef3f44671afd2ac5a5ba654b"
                    ]
                },
                {
                    "command": [
                        "rewrite Rdiv_1 ; apply Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "57ecaad9d990347a1606a4b33388d3a024b2e064"
                    ]
                },
                {
                    "command": [
                        "by apply -> Rminus_lt_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_R0_R2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (H2 _ H4).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le.",
                        "VernacExtend",
                        "970672dbfa76c5b1a5bbbe80816db4b871608528"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt, Ropp_lt_cancel ; field_simplify.",
                        "VernacExtend",
                        "56b8e001ed619110ef3f44671afd2ac5a5ba654b"
                    ]
                },
                {
                    "command": [
                        "rewrite Rdiv_1 ; apply Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "57ecaad9d990347a1606a4b33388d3a024b2e064"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm ; by apply -> Rminus_lt_0.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_R0_R2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => y Hy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply H0 ; rewrite /PS_derive.",
                        "VernacExtend",
                        "303297d10ff25420753cceb5389062ceae91967c"
                    ]
                },
                {
                    "command": [
                        "have H2 : is_lim_seq (fun n => INR (S n) / x * (y/x) ^ n) 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_lim_0.",
                        "VernacExtend",
                        "cd2b8944bbbed1081a38035bce3db09e6e7f9045"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_Rabs.",
                        "VernacExtend",
                        "bb36e3f02231f116fa9b6505d87f742c3a7c52aa"
                    ]
                },
                {
                    "command": [
                        "apply CV_disk_DAlembert with 1.",
                        "VernacExtend",
                        "9d532bd221f4853d5b4e5de3f2294441d89efdde"
                    ]
                },
                {
                    "command": [
                        "move => n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq, Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "bdc4e6de5430cea796fca267ea6079892fa8ba4d"
                    ]
                },
                {
                    "command": [
                        "by apply lt_0_INR, lt_O_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with y ; by apply Hy.",
                        "VernacExtend",
                        "bbab7770bde1064ced6126062b09cfef1a1e2961"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec.",
                        "VernacExtend",
                        "bd812b6b69e2c0b67de1fcdcc6758404125bd658"
                    ]
                },
                {
                    "command": [
                        "move => eps.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (nfloor_ex (/eps)) => [ | N HN].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, Rinv_0_lt_compat, eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (S N) => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between'.",
                        "VernacExtend",
                        "63a15ff3174a06f608196b85267ac5d1aae1e55e"
                    ]
                },
                {
                    "command": [
                        "replace (INR (S (S n)) / x / (INR (S n) / x)) with (INR (S (S n)) / (INR (S n))) by (field ; split ; [apply Rgt_not_eq, Rlt_trans with y ; by apply Hy | by apply Rgt_not_eq, lt_0_INR, lt_O_Sn]).",
                        "VernacExtend",
                        "3690a0d8be06cca8a4397d040a8d287ada22bcc6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_div_r.",
                        "VernacExtend",
                        "f3a8151a1973e9e9720c6ac1d2553ca6f749e13b"
                    ]
                },
                {
                    "command": [
                        "by apply lt_0_INR, lt_O_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite ?S_INR Rminus_lt_0 ; ring_simplify.",
                        "VernacExtend",
                        "ba89680a187310b7532578063535d47023e63ea3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_assoc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_lt_0_compat.",
                        "VernacExtend",
                        "f52234f44384644fc6f21adef182d5c4067417f5"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "by apply (le_INR O), le_O_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le, eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_lt_0_plus_1, Rlt_le, eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_div_l.",
                        "VernacExtend",
                        "4198c2770a4c425c9ede77a90e885e8d7fd9f290"
                    ]
                },
                {
                    "command": [
                        "by apply lt_0_INR, lt_O_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite ?S_INR Rminus_lt_0 ; ring_simplify.",
                        "VernacExtend",
                        "ba89680a187310b7532578063535d47023e63ea3"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rminus Rplus_assoc -/(Rminus eps 1).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Ropp_involutive (eps-1)) -Rminus_lt_0 Ropp_minus_distr'.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with 1.",
                        "VernacExtend",
                        "b1ab3289f277a08a4cbfb3fd9d1f6510664dbd6e"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 ; ring_simplify ; by apply eps.",
                        "VernacExtend",
                        "e384eae955b0244fa5ffb15789f2a204a411a7e6"
                    ]
                },
                {
                    "command": [
                        "replace 1 with (eps*/eps) by (field ; apply Rgt_not_eq, eps).",
                        "VernacExtend",
                        "07e36cdc5a508d693d82d90e610b29f1025adaf1"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_l.",
                        "VernacExtend",
                        "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
                    ]
                },
                {
                    "command": [
                        "by apply eps.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (1 := proj2 HN).",
                        "VernacExtend",
                        "ef2098a29274e0c52bae50611ac393bcf928a28c"
                    ]
                },
                {
                    "command": [
                        "rewrite -S_INR ; by apply le_INR.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, Rdiv_lt_0_compat ; by apply lt_0_INR, lt_O_Sn.",
                        "VernacExtend",
                        "3ed88591d3676210f7571427668bfe59114e9c11"
                    ]
                },
                {
                    "command": [
                        "right ; split.",
                        "VernacExtend",
                        "7f40e6faa2e8d6f2ee2a39b745aa28054e5d87de"
                    ]
                },
                {
                    "command": [
                        "by apply Rgt_not_eq, Rlt_0_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_1 Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply -> Rdiv_lt_1.",
                        "VernacExtend",
                        "ddee4d8c3d7054c3a1344d0a60d5a2e36ed86c9d"
                    ]
                },
                {
                    "command": [
                        "by apply Hy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with y ; by apply Hy.",
                        "VernacExtend",
                        "bbab7770bde1064ced6126062b09cfef1a1e2961"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "52df873048ae276c1acee1b65313d88ffd78215b"
                    ]
                },
                {
                    "command": [
                        "by apply Hy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with y ; by apply Hy.",
                        "VernacExtend",
                        "bbab7770bde1064ced6126062b09cfef1a1e2961"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in H2.",
                        "VernacExtend",
                        "a0756b94bf90a63fcb6d04b177a110b51f617dd3"
                    ]
                },
                {
                    "command": [
                        "case: (H2 (mkposreal _ (Rlt_0_1))) ; simpl pos => {H2} N HN.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "set My := fix f n := match n with | O => 1 | S n => Rmax (Rabs (INR (S n) / x * (y / x) ^ n)) (f n) end.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "exists (M * My N) => n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "replace (INR (S n) * a (S n) * y ^ n) with ((a (S n) * x ^ (S n)) * (INR (S n) /x * (y / x) ^ n)) by (rewrite /pow -/pow ; apply Rminus_diag_uniq ; field_simplify ; [rewrite ?Rdiv_1 | apply Rgt_not_eq, Rlt_trans with y ; by apply Hy ] ; rewrite ?Rmult_assoc -(Rmult_minus_distr_l (a (S n))) ; apply Rmult_eq_0_compat_l ; rewrite Rmult_comm Rmult_assoc -(Rmult_minus_distr_l (INR (S n))) ; apply Rmult_eq_0_compat_l, Rminus_diag_eq ; elim: n => /= [ | n IH] ; [ring | rewrite -IH ; field ; apply Rgt_not_eq, Rlt_trans with y ; by apply Hy]).",
                        "VernacExtend",
                        "e77302e0a6f379432b9ecdd27e3f5c5906cb29cd"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult ; apply Rmult_le_compat.",
                        "VernacExtend",
                        "08a3a35c88e6e22bf0a791872dc954a482332349"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (le_lt_dec N n) => Hn.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with 1.",
                        "VernacExtend",
                        "2f4f240d7d65dbc98662e47e56a00c3264447d65"
                    ]
                },
                {
                    "command": [
                        "move: (HN n Hn) ; rewrite Rminus_0_r ; by apply Rlt_le.",
                        "VernacExtend",
                        "9316342455eb51a3e1204d3e55750c03c1806191"
                    ]
                },
                {
                    "command": [
                        "move: (HN n Hn) => {HN Hn} ; elim: N => [ | N IH] H2.",
                        "VernacExtend",
                        "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
                    ]
                },
                {
                    "command": [
                        "simpl ; by apply Rle_refl.",
                        "VernacExtend",
                        "58f90b18beae5b9cd92772a1e3ce5ef0dc6bd627"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := IH H2) ; rewrite /My -/My ; by apply Rmax_r.",
                        "VernacExtend",
                        "0c8fb091972be360d21de8be891014c02c1d102c"
                    ]
                },
                {
                    "command": [
                        "elim: N n Hn {HN} => [ | N IH] n Hn.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by apply lt_n_O in Hn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n in Hn ; case: (le_lt_eq_dec _ _ Hn) => {Hn} Hn.",
                        "VernacExtend",
                        "e77c92c8948cbc88b537b5ebfda20d71928096cc"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Rmax_r _ (My N)) ; by apply IH.",
                        "VernacExtend",
                        "25ac0d90c4103c241a570eb6644e95b0d90fe282"
                    ]
                },
                {
                    "command": [
                        "rewrite Hn ; by apply (Rmax_l _ (My N)).",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_PSeries",
            "line_nb": 1690,
            "steps": [
                {
                    "command": [
                        "move => Hx ; exists (PSeries (PS_derive a) x).",
                        "VernacExtend",
                        "b4ff86b31adac29afe27aea61da8422e941bd339"
                    ]
                },
                {
                    "command": [
                        "by apply is_derive_PSeries.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_PSeries",
            "line_nb": 1694,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique.",
                        "VernacExtend",
                        "e8a169466dae5921bc3cfc15bd8d8cf05c765407"
                    ]
                },
                {
                    "command": [
                        "by apply is_derive_PSeries.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pseries_derive",
            "line_nb": 1699,
            "steps": [
                {
                    "command": [
                        "intros Hx.",
                        "VernacExtend",
                        "9276b72df3a882c9b4b954c90d9e870c80a906fc"
                    ]
                },
                {
                    "command": [
                        "assert (Ha := is_derive_PSeries _ _ Hx).",
                        "VernacExtend",
                        "6e700f381287293cb624ae4180b4c4aeb4c98fbe"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_unique in Ha.",
                        "VernacExtend",
                        "eb11a17c911c7a4f410c70e0407f37e2f401ac80"
                    ]
                },
                {
                    "command": [
                        "rewrite Ha.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply PSeries_correct.",
                        "VernacExtend",
                        "6a5764425915e61c29ea779b50f26d77782e98c2"
                    ]
                },
                {
                    "command": [
                        "by apply CV_radius_inside ; rewrite CV_radius_derive.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_derive_n_PSeries",
            "line_nb": 1769,
            "steps": [
                {
                    "command": [
                        "elim: n a x => [ | n IH] a x Hx.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by simpl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exists (PSeries (PS_derive_n (S n) a) x).",
                        "VernacExtend",
                        "4030f50cc47c43b445cbad233e49e7459924a6ed"
                    ]
                },
                {
                    "command": [
                        "by apply (is_derive_n_PSeries (S n)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_PSeries",
            "line_nb": 1776,
            "steps": [
                {
                    "command": [
                        "move => H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply is_derive_n_unique.",
                        "VernacExtend",
                        "81d9d87d43be65460b0b45662d1df915e827069f"
                    ]
                },
                {
                    "command": [
                        "by apply is_derive_n_PSeries.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CV_radius_derive_n",
            "line_nb": 1781,
            "steps": [
                {
                    "command": [
                        "elim: n a => [ | n IH] /= a.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "apply CV_radius_ext.",
                        "VernacExtend",
                        "2daef3e659f0794d1ae8304f8f5f2e29a6ee5e82"
                    ]
                },
                {
                    "command": [
                        "move => k ; rewrite /PS_derive_n /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_r ; field.",
                        "VernacExtend",
                        "978748f3924ddecb0b5c0d464fc313237f2af3c9"
                    ]
                },
                {
                    "command": [
                        "by apply INR_fact_neq_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(CV_radius_derive a).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(IH (PS_derive a)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply CV_radius_ext.",
                        "VernacExtend",
                        "2daef3e659f0794d1ae8304f8f5f2e29a6ee5e82"
                    ]
                },
                {
                    "command": [
                        "move => k ; rewrite /PS_derive_n /PS_derive.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite -plus_n_Sm /fact -/fact mult_INR ; field.",
                        "VernacExtend",
                        "978748f3924ddecb0b5c0d464fc313237f2af3c9"
                    ]
                },
                {
                    "command": [
                        "by apply INR_fact_neq_0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_n_coef",
            "line_nb": 1794,
            "steps": [
                {
                    "command": [
                        "elim: n a => [ | n IH] a Ha.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /= /PSeries /Series -(Lim_seq_ext (fun _ => a O)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite Lim_seq_const.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim => /= [ | n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_O ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_Sn -IH /plus /= ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "simpl Derive_n.",
                        "VernacExtend",
                        "4b957f573ab9e761e5f5aab3b798c02fbb577cdf"
                    ]
                },
                {
                    "command": [
                        "replace (Derive (Derive_n (PSeries a) n) 0) with (Derive_n (PSeries (PS_derive a)) n 0).",
                        "VernacExtend",
                        "04bf6ac34650fc09ebe4cfe525931c21517e2da1"
                    ]
                },
                {
                    "command": [
                        "rewrite IH.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /fact -/fact mult_INR /PS_derive ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "by rewrite CV_radius_derive.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "transitivity (Derive_n (Derive (PSeries a)) n 0).",
                        "VernacExtend",
                        "e93bbac4a6cc232ef8e99020bf400da304c84e5b"
                    ]
                },
                {
                    "command": [
                        "apply Derive_n_ext_loc.",
                        "VernacExtend",
                        "497aa3b5fbf6ebfb20fa4fa694bf8701348ced33"
                    ]
                },
                {
                    "command": [
                        "case: (Rbar_eq_dec (CV_radius a) p_infty) => H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ Rlt_0_1) => /= x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq ; apply Derive_PSeries.",
                        "VernacExtend",
                        "e03093582308609341225b5c40dc99d86bc55045"
                    ]
                },
                {
                    "command": [
                        "by rewrite H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Hc : 0 < real (CV_radius a).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (CV_radius a) Ha H => /= [c | | ] Ha H ; by [].",
                        "VernacExtend",
                        "14b141a2d70f00681f703015bc169478d399fe62"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ Hc) => /= x Hx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq ; apply Derive_PSeries.",
                        "VernacExtend",
                        "e03093582308609341225b5c40dc99d86bc55045"
                    ]
                },
                {
                    "command": [
                        "case: (CV_radius a) Hx Ha => /= [c | | ] Hx Ha //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= -/(Rminus _ _) Rminus_0_r in Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (Derive_n_comp (PSeries a) n 1%nat 0) => /= ->.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by replace (n+1)%nat with (S n) by ring.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSeries_ext_recip",
            "line_nb": 1822,
            "steps": [
                {
                    "command": [
                        "move => Ha Hb Hab.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have H : a n * (INR (fact n)) = b n * (INR (fact n)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -?Derive_n_coef => //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply Derive_n_ext_loc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "replace (a n) with ((a n * INR (fact n)) / (INR (fact n))).",
                        "VernacExtend",
                        "e6c65ab46f54e172b4d4c64aef88048f89a965c7"
                    ]
                },
                {
                    "command": [
                        "rewrite H ; field ; exact: INR_fact_neq_0.",
                        "VernacExtend",
                        "186edfbb9da2ce65ede64a510c6c65a6fda7478d"
                    ]
                },
                {
                    "command": [
                        "field ; exact: INR_fact_neq_0.",
                        "VernacExtend",
                        "e1e3f2264614aef7207bf68a48f35b503758294e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mk_pseries",
            "line_nb": 1831,
            "steps": [
                {
                    "command": [
                        "move => Hd x Hx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "wlog: r Hx Hd /(Finite (real r) = r) => [Hw | Hr].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: r Hx Hd => /= [r | | ] Hx Hd.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply (Hw (Finite r)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply (Hw (Finite (Rabs x+1))).",
                        "VernacExtend",
                        "18d19c5db4c69f5ff529c47ce342448a7c4a9ac5"
                    ]
                },
                {
                    "command": [
                        "simpl ; exact: Rlt_plus_1.",
                        "VernacExtend",
                        "5faf3916b4a03c91778c919a49fb8976e46724df"
                    ]
                },
                {
                    "command": [
                        "move => n y Hy ; by apply Hd.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -Hr in Hx Hd.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move: (real r) Hx Hd => /= {r Hr} r Hx Hd.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "wlog: x Hx f Hd / (0 < x) => [Hw | Hx'].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (total_order_T 0 x) => Hx'.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: Hx' => Hx'.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Hw.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -Hx'.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "replace (f 0) with (Derive_n f O 0 / INR (fact O)) by (simpl ; field).",
                        "VernacExtend",
                        "6a30db6778f414a43f31a5bc3abe641c4479e093"
                    ]
                },
                {
                    "command": [
                        "apply @is_pseries_0.",
                        "VernacExtend",
                        "6d1698ca6fd7f21b586123f202cd2547f5aab92f"
                    ]
                },
                {
                    "command": [
                        "rewrite -Rabs_Ropp in Hx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "suff Hf : (forall (n : nat) (x : R), ((Rabs x)) < r -> ex_derive_n (fun x0 : R => f (- x0)) n x /\\ Rabs (Derive_n (fun x0 : R => f (- x0)) n x) <= M).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "move: (Hw _ Hx (fun x => f (-x)) Hf (Ropp_0_gt_lt_contravar _ Hx')) => {Hw} Hw.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_involutive in Hw.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_series_ext with (2:=Hw).",
                        "VernacExtend",
                        "adeccdb59e825e5e2976f2a36400e718846efbcd"
                    ]
                },
                {
                    "command": [
                        "intros n; rewrite Derive_n_comp_opp; simpl.",
                        "VernacExtend",
                        "87622ebf9bdffbc36a1d99c263ba36849079ecf0"
                    ]
                },
                {
                    "command": [
                        "rewrite /scal /= /mult /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply trans_eq with ((pow_n (K := R_AbsRing) (- x) n * (-1) ^ n) * (Derive_n f n (- 0) / INR (fact n)));[unfold Rdiv; ring|idtac].",
                        "VernacExtend",
                        "a4f12672add1701eb07cab1516c947dae7cafecc"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2; try reflexivity.",
                        "VernacExtend",
                        "3c43b1a499b7d0b846551865734353113dcb5bd3"
                    ]
                },
                {
                    "command": [
                        "clear; induction n; simpl.",
                        "VernacExtend",
                        "d4b8127f56f0f72ea6e24a107d6e375511649354"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_1_l.",
                        "VernacExtend",
                        "959b7f02068b29f8617e378fce47501de4230f61"
                    ]
                },
                {
                    "command": [
                        "rewrite /mult /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHn; ring.",
                        "VernacExtend",
                        "d62696a8c99ab651fda8a6846f1bbc3be56219cb"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_0 ; exists (mkposreal r (Rle_lt_trans _ _ _ (Rabs_pos _) Hx)) => /= y Hy k Hk.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= /minus /plus /opp /= -/(Rminus _ _) Rminus_0_r in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply (Hd k).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => {x Hx Hx'} n x Hx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite Derive_n_comp_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply ex_derive_n_comp_opp.",
                        "VernacExtend",
                        "eb8cabc28a0a020c63f5aebdf34b2eb869ed97bb"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between in Hx.",
                        "VernacExtend",
                        "2f1096bd328581863f1c32927e6264bcfcd4790e"
                    ]
                },
                {
                    "command": [
                        "case: Hx => Hx1 Hx2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 in Hx1.",
                        "VernacExtend",
                        "340aa76ecf8ac644199887804aa31827d06dd73c"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 in Hx2.",
                        "VernacExtend",
                        "3c47cd58e45fc411d9d9652071edd7d27c371a87"
                    ]
                },
                {
                    "command": [
                        "have Hx := Rmin_pos _ _ Hx1 Hx2 => {Hx1 Hx2}.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ Hx) => /= y Hy k Hk.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in Hy.",
                        "VernacExtend",
                        "ba88cf28d01239e61700215c528d225d0556ddd8"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rminus -Rmax_opp_Rmin Rplus_max_distr_l Rplus_min_distr_l in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Hy => Hy1 Hy2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rmax_r _ _) in Hy1.",
                        "VernacExtend",
                        "0e8c8068fef8eebc45ccabb2f5a091404ca2d8f6"
                    ]
                },
                {
                    "command": [
                        "ring_simplify in Hy1.",
                        "VernacExtend",
                        "dfe966e8c42a942a67fa22c7de59c3c494b160e9"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Rmin_l _ _) in Hy2.",
                        "VernacExtend",
                        "304a3f4aa37c3ac28bf0d510501b43500ce30800"
                    ]
                },
                {
                    "command": [
                        "ring_simplify in Hy2.",
                        "VernacExtend",
                        "bb33f52793eaeff86a2099b7a463e25767a531a3"
                    ]
                },
                {
                    "command": [
                        "apply (Hd k y).",
                        "VernacExtend",
                        "3b66ea9875a50c2ff5cfe5acbdc034d0113e4267"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between.",
                        "VernacExtend",
                        "e6f85b3aaad12ae4c778c49c79154f50d9d4fdb3"
                    ]
                },
                {
                    "command": [
                        "by split.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult -RPow_abs Rabs_Ropp Rabs_R1 pow1 Rmult_1_l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Hd.",
                        "VernacExtend",
                        "b2c76316200582fcad9318af1ed397a8dea483e3"
                    ]
                },
                {
                    "command": [
                        "by rewrite Rabs_Ropp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between in Hx.",
                        "VernacExtend",
                        "2f1096bd328581863f1c32927e6264bcfcd4790e"
                    ]
                },
                {
                    "command": [
                        "case: Hx => Hx1 Hx2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 in Hx1.",
                        "VernacExtend",
                        "340aa76ecf8ac644199887804aa31827d06dd73c"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt_0 in Hx2.",
                        "VernacExtend",
                        "3c47cd58e45fc411d9d9652071edd7d27c371a87"
                    ]
                },
                {
                    "command": [
                        "have Hx := Rmin_pos _ _ Hx1 Hx2 => {Hx1 Hx2}.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "exists (mkposreal _ Hx) => /= y Hy k Hk.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /ball /= /AbsRing_ball /= in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between' in Hy.",
                        "VernacExtend",
                        "ba88cf28d01239e61700215c528d225d0556ddd8"
                    ]
                },
                {
                    "command": [
                        "rewrite /Rminus -Rmax_opp_Rmin Rplus_max_distr_l Rplus_min_distr_l in Hy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: Hy => Hy1 Hy2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := Rmax_r _ _) in Hy1.",
                        "VernacExtend",
                        "0e8c8068fef8eebc45ccabb2f5a091404ca2d8f6"
                    ]
                },
                {
                    "command": [
                        "ring_simplify in Hy1.",
                        "VernacExtend",
                        "dfe966e8c42a942a67fa22c7de59c3c494b160e9"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (2 := Rmin_l _ _) in Hy2.",
                        "VernacExtend",
                        "304a3f4aa37c3ac28bf0d510501b43500ce30800"
                    ]
                },
                {
                    "command": [
                        "ring_simplify in Hy2.",
                        "VernacExtend",
                        "bb33f52793eaeff86a2099b7a463e25767a531a3"
                    ]
                },
                {
                    "command": [
                        "apply (Hd k y).",
                        "VernacExtend",
                        "3b66ea9875a50c2ff5cfe5acbdc034d0113e4267"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_lt_between.",
                        "VernacExtend",
                        "e6f85b3aaad12ae4c778c49c79154f50d9d4fdb3"
                    ]
                },
                {
                    "command": [
                        "by split.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => P [eps Heps].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have : exists N, forall n, (N <= n)%nat -> r ^ (S n) * M / INR (fact (S n)) < eps.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have H : is_lim_seq (fun n => r ^ n * M / INR (fact n)) 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (Rlt_dec 0 M) => H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have H0 : forall n : nat, 0 < r ^ n * M / INR (fact n).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Rdiv_lt_0_compat.",
                        "VernacExtend",
                        "283136f6e52505e4579f1f286529bc7e0bbfd6d7"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "apply pow_lt.",
                        "VernacExtend",
                        "8644a99ddc9716c887b11bda1d50a5dad84886a2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := Hx), Rabs_pos.",
                        "VernacExtend",
                        "e1b56bfcd9fd2591e61e707e94355aa9cf2303ec"
                    ]
                },
                {
                    "command": [
                        "exact: H.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "exact: INR_fact_lt_0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "apply ex_series_lim_0, ex_series_Rabs, ex_series_DAlembert with 0.",
                        "VernacExtend",
                        "b2517b93c8633f2ca2e24d0f1ff9c56c0d491a80"
                    ]
                },
                {
                    "command": [
                        "exact: Rlt_0_1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "move => n ; apply Rgt_not_eq, Rlt_gt, H0.",
                        "VernacExtend",
                        "b17e14410df8170f649da95f325e5c9aaf624bf2"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_ext with (fun n => r / INR (S n)).",
                        "VernacExtend",
                        "933c397795a1f342bc74c2f0ed3fcb01adae64ae"
                    ]
                },
                {
                    "command": [
                        "move => n ; rewrite Rabs_pos_eq.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite /fact -/fact /pow -/pow ?mult_INR ; field.",
                        "VernacExtend",
                        "978748f3924ddecb0b5c0d464fc313237f2af3c9"
                    ]
                },
                {
                    "command": [
                        "repeat split ; apply Rgt_not_eq, Rlt_gt.",
                        "VernacExtend",
                        "c15eecc1cadf8ee391c5a97437a7dbf076df3e72"
                    ]
                },
                {
                    "command": [
                        "exact: INR_fact_lt_0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "by apply (lt_INR O), lt_O_Sn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exact: H.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "apply pow_lt, Rle_lt_trans with (Rabs x), Hx ; by apply Rabs_pos.",
                        "VernacExtend",
                        "9f95660294f98794b7ddf2b102c239c341114107"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, Rdiv_lt_0_compat ; by apply H0.",
                        "VernacExtend",
                        "3ed88591d3676210f7571427668bfe59114e9c11"
                    ]
                },
                {
                    "command": [
                        "rewrite -(Rmult_0_r r) ; apply (is_lim_seq_scal_l _ _ 0) => //.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "apply (is_lim_seq_incr_1 (fun n => / INR n)).",
                        "VernacExtend",
                        "211c2ef49faed8b4672d591ab65e6877d50c6920"
                    ]
                },
                {
                    "command": [
                        "replace (Finite 0) with (Rbar_inv p_infty) by auto.",
                        "VernacExtend",
                        "bc1288a0fd981b7fe027bd5d7772799588757a18"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_inv.",
                        "VernacExtend",
                        "91a251ae71de232eeb1039626ed60efb8a85a521"
                    ]
                },
                {
                    "command": [
                        "by apply is_lim_seq_INR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rnot_lt_le in H ; case: H => H.",
                        "VernacExtend",
                        "d16f99707b15d1b2e5927336934befcd720a017d"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt.",
                        "VernacExtend",
                        "1f0f6b47a7d49626d97b2585f7610e291096035d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Rabs (Derive_n f O x)).",
                        "VernacExtend",
                        "e0e8aab5a42dd611c7b5fa123fef780f081e3971"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Hd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_ext with (fun _ => 0).",
                        "VernacExtend",
                        "47b5f7475f5ec40ef1472095e4dff15d2363e610"
                    ]
                },
                {
                    "command": [
                        "move => n ; rewrite /Rdiv ; ring.",
                        "VernacExtend",
                        "21b6fe36e5498a843625648c497c009ca92aa0fe"
                    ]
                },
                {
                    "command": [
                        "exact: is_lim_seq_const.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_incr_1 in H.",
                        "VernacExtend",
                        "6eeffeaf816673d9aabf9796d117478913ba445c"
                    ]
                },
                {
                    "command": [
                        "apply is_lim_seq_spec in H.",
                        "VernacExtend",
                        "98ca61a735cdd6a0c67afeba86446058c65f378f"
                    ]
                },
                {
                    "command": [
                        "case: (H eps) => {H} N H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := H n Hn).",
                        "VernacExtend",
                        "10196a62868ee41181ac404cf012b4a3d7b943e7"
                    ]
                },
                {
                    "command": [
                        "rewrite Rminus_0_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: Rle_abs.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "case => N HN.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists N => n Hn.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply Heps.",
                        "VernacExtend",
                        "90231750e58f3a7b3480beec4b7e7230c8770744"
                    ]
                },
                {
                    "command": [
                        "case: (Taylor_Lagrange f n 0 x).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply Hx'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => t Ht k Hk.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply Hd.",
                        "VernacExtend",
                        "b2c76316200582fcad9318af1ed397a8dea483e3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := proj2 Ht).",
                        "VernacExtend",
                        "68442faef38e4ecd91c335a8e2ef50c417df5581"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_lt_trans with (1 := Rle_abs _), Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rle_ge, Ht.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => y [Hy ->].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite Rminus_0_r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (sum_n_ext _ (fun m : nat => x ^ m / INR (fact m) * Derive_n f m 0)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_n_Reals.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := HN n Hn).",
                        "VernacExtend",
                        "e7c72d6e3a7ff8ffdfe9294ef62039aa50d5ed2d"
                    ]
                },
                {
                    "command": [
                        "replace (r ^ S n * M / INR (fact (S n))) with ((r^S n / INR (fact (S n))) * M) by (rewrite /Rdiv ; ring).",
                        "VernacExtend",
                        "4eb65786279e88ecfc054134a671f7dda5f5a387"
                    ]
                },
                {
                    "command": [
                        "change minus with Rminus.",
                        "VernacExtend",
                        "e85947f047da7efe28f0f1f59e558e0bc3514ec9"
                    ]
                },
                {
                    "command": [
                        "ring_simplify (sum_f_R0 (fun m : nat => x ^ m / INR (fact m) * Derive_n f m 0) n - (sum_f_R0 (fun m : nat => x ^ m / INR (fact m) * Derive_n f m 0) n + x ^ S n / INR (fact (S n)) * Derive_n f (S n) y)).",
                        "VernacExtend",
                        "42435d722a71e1e9f2878af020e4207e20e22b27"
                    ]
                },
                {
                    "command": [
                        "change abs with Rabs.",
                        "VernacExtend",
                        "77fb3cfa3e23242f303c6721357d1ac63f3c1980"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult Rabs_Ropp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat.",
                        "VernacExtend",
                        "99a65cd1efb8e35313415d4b052731e2b0746daf"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply Rabs_pos.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_div.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat.",
                        "VernacExtend",
                        "99a65cd1efb8e35313415d4b052731e2b0746daf"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos.",
                        "VernacExtend",
                        "8e57e214403458a4dc8dafc960971b86cf3b856d"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, Rinv_0_lt_compat.",
                        "VernacExtend",
                        "31665867d30f616d78b584524410961663f45bd3"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos_lt.",
                        "VernacExtend",
                        "e7789cb0a3c08fb3fbbda456620a8022b26229ce"
                    ]
                },
                {
                    "command": [
                        "exact: INR_fact_neq_0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "rewrite -RPow_abs.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply pow_incr ; split.",
                        "VernacExtend",
                        "019a57ca25f8dc3f7273dda8e04126707cba38e4"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos.",
                        "VernacExtend",
                        "8e57e214403458a4dc8dafc960971b86cf3b856d"
                    ]
                },
                {
                    "command": [
                        "by apply Rlt_le.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_Rinv.",
                        "VernacExtend",
                        "1c2230e335301795a7c124c6298eabc78161766e"
                    ]
                },
                {
                    "command": [
                        "exact: (INR_fact_lt_0 (S n)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos_lt, INR_fact_neq_0.",
                        "VernacExtend",
                        "80855899db09cb6af747eeec3ab786c15a921868"
                    ]
                },
                {
                    "command": [
                        "apply Rle_abs.",
                        "VernacExtend",
                        "7222806352a7f01b48467f271bcdc35194fd1877"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply Hd.",
                        "VernacExtend",
                        "b2c76316200582fcad9318af1ed397a8dea483e3"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (2 := Hx).",
                        "VernacExtend",
                        "068291b4c3bcf2bf5151a86d33c3fdae35c5cac1"
                    ]
                },
                {
                    "command": [
                        "rewrite ?Rabs_pos_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply Hy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, Hx'.",
                        "VernacExtend",
                        "8a1c9b129e437cdc5e6aef193dbd5271058f5ac7"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le, Hy.",
                        "VernacExtend",
                        "dc30a7d96db08eb1dad61aae838e7f8c22b7fee7"
                    ]
                },
                {
                    "command": [
                        "intros m; rewrite pow_n_pow.",
                        "VernacExtend",
                        "ffe2fe1519dafab748c2161f6a976e85dc7acb29"
                    ]
                },
                {
                    "command": [
                        "rewrite /scal /= /mult /= /Rdiv ; ring.",
                        "VernacExtend",
                        "43f1253beb869d2f2abb689d01038ec8d9cd33b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}