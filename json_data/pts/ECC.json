{
    "filename": "ECC.v",
    "coq_project": "pts",
    "vernac_cmds": [
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Compare_dec.",
            "VernacRequire",
            "96b495dc82d6bd54e62353acae7d6e61222564e6"
        ],
        [
            "Require Import Peano_dec.",
            "VernacRequire",
            "5f49ca778918c88f400242f11d696ec23079b44f"
        ],
        [
            "Require Import General.",
            "VernacRequire",
            "958fb2d0438a5547f5047b6eff467ae18abb8350"
        ],
        [
            "Require Import MyList.",
            "VernacRequire",
            "29ce27b1008581e448b5031777d15e274389cff9"
        ],
        [
            "Require Import MyRelations.",
            "VernacRequire",
            "fb81ef8aab2301d6e5f3fafb4c88d37b1a910683"
        ],
        [
            "Require Export Main.",
            "VernacRequire",
            "a650f1d6bc3967ce203544f0d6067d628a213691"
        ],
        [
            "Require Export SortECC.",
            "VernacRequire",
            "a51e68cc10e472f358456b022d3f84aa9586d5ac"
        ],
        [
            "Section ECC.",
            "VernacBeginSection",
            "955bee3fc8e9ab238209dad812855d857032a784"
        ],
        [
            "Definition trm_ecc := term srt_ecc.",
            "VernacDefinition",
            "d122bdf67d1a696efa4a294524d9fd7a23f26ba7"
        ],
        [
            "Definition env_ecc := env srt_ecc.",
            "VernacDefinition",
            "50027506964528507a507e22fd68820b082c77c2"
        ],
        [
            "Definition ecc : CTS_spec srt_ecc := Build_CTS_spec _ axiom_ecc rules_ecc univ_ecc (beta_delta_rule _).",
            "VernacDefinition",
            "a5ebe85ea3fc00ce33a4899b36962886a26cfe27"
        ],
        [
            "Definition ecc_pts : PTS_sub_spec srt_ecc := cts_pts_functor _ ecc.",
            "VernacDefinition",
            "98b31d1e17ee54fea67e07481eb981294fcd280b"
        ],
        [
            "Definition le_type : red_rule srt_ecc := Rule _ (Le_type _ (pts_le_type _ ecc_pts)).",
            "VernacDefinition",
            "426affba29024c1317bae81a80de635c4533f21b"
        ],
        [
            "Definition typ_ecc : env_ecc -> trm_ecc -> trm_ecc -> Prop := typ _ ecc_pts.",
            "VernacDefinition",
            "dbe93c55180c057f68c8ade4be0da71572049b13"
        ],
        [
            "Definition wft_ecc : env_ecc -> trm_ecc -> Prop := wf_type _ ecc_pts.",
            "VernacDefinition",
            "d4beccc6dbc16f4c05c3ddf8400cbece37063696"
        ],
        [
            "Definition wf_ecc : env_ecc -> Prop := wf _ ecc_pts.",
            "VernacDefinition",
            "8a6e1df172424170f7af03361f5de453759a11e4"
        ],
        [
            "Definition ecc_sn := sn srt_ecc (ctxt _ (Rule _ (head_reduct _ ecc))).",
            "VernacDefinition",
            "99c8e0483aebfe13292846be161b845e94566b56"
        ],
        [
            "Hint Unfold le_type typ_ecc wft_ecc wf_ecc ecc_sn: pts.",
            "VernacHints",
            "45baa22a89b6b6a4f996aaa3426a749491aa0ebf"
        ],
        [
            "Lemma whnf : forall (e : env_ecc) (t : trm_ecc), ecc_sn e t -> {u : trm_ecc | red _ (beta_delta _) e t u & head_normal _ (beta_delta _) e u}.",
            "VernacStartTheoremProof",
            "8bac99efc7ec906c04d63a3dde3eb1e0a69a5ebe"
        ],
        [
            "Proof beta_delta_whnf srt_ecc.",
            "VernacExactProof",
            "7c728f69eb6d8ab5434cddc163cf30ea10a09cd1"
        ],
        [
            "Lemma bd_conv_hnf : forall (e : env_ecc) (x y : trm_ecc), ecc_sn e x -> ecc_sn e y -> decide (conv_hn_inv _ (beta_delta_rule _) e x y).",
            "VernacStartTheoremProof",
            "3fd26132625d24fb1b02f9e4a0b754561b2c8509"
        ],
        [
            "Proof CR_WHNF_convert_hn srt_ecc ecc_sort_dec (beta_delta_rule srt_ecc) (church_rosser_beta_delta srt_ecc) whnf.",
            "VernacExactProof",
            "1dc3831e29fc4b46087d90baa164c987641a2237"
        ],
        [
            "Theorem ecc_is_subtype_dec : subtype_dec_CTS _ ecc.",
            "VernacStartTheoremProof",
            "3849bc8df5295e86fc51195ef5b1f9a9a15b9856"
        ],
        [
            "apply Build_subtype_dec_CTS.",
            "VernacExtend",
            "bc6e4ee2ab642c522716400064d957612c95c6c9"
        ],
        [
            "exact (church_rosser_beta_delta srt_ecc).",
            "VernacExtend",
            "9cfb841812f3c1a033dace383c0f3c9ac2432dc5"
        ],
        [
            "exact (bd_hn_sort srt_ecc).",
            "VernacExtend",
            "fc7a580544a1568aadbcd40359b62609c749df32"
        ],
        [
            "exact (bd_hn_prod srt_ecc).",
            "VernacExtend",
            "c57158a7f79feeb49fbc91de88b736a3e7dfea47"
        ],
        [
            "exact whnf.",
            "VernacExtend",
            "7c061b885eb3f840fec4e9aa912468c02ada08ec"
        ],
        [
            "exact bd_conv_hnf.",
            "VernacExtend",
            "a41d31b378dd57b78fc6fd4b5fc49796477899fc"
        ],
        [
            "exact univ_ecc_dec.",
            "VernacExtend",
            "a962dea1225e888a3cc1a38c80916c3f45ec0d81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Axiom ecc_normalise : forall (e : env_ecc) (t T : trm_ecc), typ_ecc e t T -> ecc_sn e t.",
            "VernacAssumption",
            "feab12d9633b5f792422a3576511ce0764b0de01"
        ],
        [
            "Lemma sound_ecc_bd : rule_sound _ ecc_pts (beta_delta _).",
            "VernacStartTheoremProof",
            "701602c3a54a9a32e34cb7db5a7096096e8a42ca"
        ],
        [
            "unfold beta_delta in |- *.",
            "VernacExtend",
            "ea873f37ff6118c5a956d145e59323f1a0afc87b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold union in |- *.",
            "VernacExtend",
            "18a57101e7fab0cdb5cf8d92c5cdddcadf3d4f39"
        ],
        [
            "apply union_sound.",
            "VernacExtend",
            "65e13753eb5fab9103e3623567d006d7d1f741be"
        ],
        [
            "apply beta_sound; auto with arith pts.",
            "VernacExtend",
            "ad66c87f761230fd4b19b721ea6e17700b7212e4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply cumul_inv_prod.",
            "VernacExtend",
            "1fd439bdef2f74ba823311aec75b041b4d824411"
        ],
        [
            "exact ecc_is_subtype_dec.",
            "VernacExtend",
            "2952d1b6a5f42ee5b645b0ff1b7682fddbe9481f"
        ],
        [
            "apply delta_sound.",
            "VernacExtend",
            "b550ceb45094202ac0a306ef70dc2c673b4f7abd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ecc_is_norm_sound : norm_sound_CTS _ ecc.",
            "VernacStartTheoremProof",
            "11a624458b660e27bd0dae7efd29acedf2066cdb"
        ],
        [
            "refine (Build_norm_sound_CTS srt_ecc ecc sound_ecc_bd ecc_normalise _ _ _).",
            "VernacExtend",
            "551b75ebdafc792b0c47505ce7179200fb181463"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply ecc_inf_axiom.",
            "VernacExtend",
            "82646711d57f8cc4cfe3786101f58a2d664991ef"
        ],
        [
            "exact ecc_inf_rule.",
            "VernacExtend",
            "860d53d1e5c72e886fa689a4cc5c7a8e8cbd383f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim ecc_inf_axiom with s1; intros.",
            "VernacExtend",
            "9599488bb08ae2f806b4c1c08a08a32db4fd6ab7"
        ],
        [
            "split with x.",
            "VernacExtend",
            "3e50c224aa12119964b8f71175385058dd7c95e5"
        ],
        [
            "apply (pp_ok p).",
            "VernacExtend",
            "06296c92538043ef08f93920a1488d1633299bbb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ecc_algorithms : PTS_TC _ ecc_pts.",
            "VernacStartTheoremProof",
            "ae5938332a4ffff1854967d0b949a161c888ef75"
        ],
        [
            "Proof full_cts_type_checker srt_ecc ecc ecc_is_subtype_dec ecc_is_norm_sound.",
            "VernacExactProof",
            "39abede7311ab17e756824b68d02747f10b3dcee"
        ],
        [
            "Lemma infer_type : forall (e : env_ecc) (t : trm_ecc), wf_ecc e -> infer_ppal_type _ ecc_pts e t.",
            "VernacStartTheoremProof",
            "ce88428cc3671eeee4609f94ab89bd236f46c0f0"
        ],
        [
            "Proof ptc_inf_ppal_type _ _ ecc_algorithms.",
            "VernacExactProof",
            "8655d0029ae208d47410b9918e3109ca53e5a6ae"
        ],
        [
            "Lemma check_wf_type : forall (e : env_ecc) (t : trm_ecc), wf_ecc e -> wft_dec _ ecc_pts e t.",
            "VernacStartTheoremProof",
            "a26674a4a165a4d87ec99d711a9505d9bfa6a9bb"
        ],
        [
            "Proof ptc_chk_wft _ _ ecc_algorithms.",
            "VernacExactProof",
            "39a2d26491fbd7ccbbe4778d9b1017625e91adad"
        ],
        [
            "Lemma check_type : forall (e : env_ecc) (t T : trm_ecc), wf_ecc e -> check_dec _ ecc_pts e t T.",
            "VernacStartTheoremProof",
            "8d785dff5cebc00f389d59a30706656aca2cd47e"
        ],
        [
            "Proof ptc_chk_typ _ _ ecc_algorithms.",
            "VernacExactProof",
            "4acb29a290d0b2e6a3a815b5623a15e0a110847f"
        ],
        [
            "Lemma add_type : forall (e : env_ecc) (t : trm_ecc), wf_ecc e -> decl_dec _ ecc_pts e (Ax _ t).",
            "VernacStartTheoremProof",
            "a782e7971af60e046926e724c5940a0c1fa0e7b1"
        ],
        [
            "Proof ptc_add_typ _ _ ecc_algorithms.",
            "VernacExactProof",
            "f540c58a46bef8a574a2b07926058f64f78a7537"
        ],
        [
            "Lemma add_def : forall (e : env_ecc) (t T : trm_ecc), wf_ecc e -> decl_dec _ ecc_pts e (Def _ t T).",
            "VernacStartTheoremProof",
            "9cb208fcf73ca0ba74d2758cfb5e0c3d3ed90ea2"
        ],
        [
            "Proof ptc_add_def _ _ ecc_algorithms.",
            "VernacExactProof",
            "5a0e8756f91caacb4d7c896b94489839bc184daa"
        ],
        [
            "End ECC.",
            "VernacEndSegment",
            "a6d998ea42ce8707c4d6e1aedbed7a3f373b0dd1"
        ]
    ],
    "proofs": [
        {
            "name": "ecc_is_subtype_dec",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "apply Build_subtype_dec_CTS.",
                        "VernacExtend",
                        "bc6e4ee2ab642c522716400064d957612c95c6c9"
                    ]
                },
                {
                    "command": [
                        "exact (church_rosser_beta_delta srt_ecc).",
                        "VernacExtend",
                        "9cfb841812f3c1a033dace383c0f3c9ac2432dc5"
                    ]
                },
                {
                    "command": [
                        "exact (bd_hn_sort srt_ecc).",
                        "VernacExtend",
                        "fc7a580544a1568aadbcd40359b62609c749df32"
                    ]
                },
                {
                    "command": [
                        "exact (bd_hn_prod srt_ecc).",
                        "VernacExtend",
                        "c57158a7f79feeb49fbc91de88b736a3e7dfea47"
                    ]
                },
                {
                    "command": [
                        "exact whnf.",
                        "VernacExtend",
                        "7c061b885eb3f840fec4e9aa912468c02ada08ec"
                    ]
                },
                {
                    "command": [
                        "exact bd_conv_hnf.",
                        "VernacExtend",
                        "a41d31b378dd57b78fc6fd4b5fc49796477899fc"
                    ]
                },
                {
                    "command": [
                        "exact univ_ecc_dec.",
                        "VernacExtend",
                        "a962dea1225e888a3cc1a38c80916c3f45ec0d81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sound_ecc_bd",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "unfold beta_delta in |- *.",
                        "VernacExtend",
                        "ea873f37ff6118c5a956d145e59323f1a0afc87b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold union in |- *.",
                        "VernacExtend",
                        "18a57101e7fab0cdb5cf8d92c5cdddcadf3d4f39"
                    ]
                },
                {
                    "command": [
                        "apply union_sound.",
                        "VernacExtend",
                        "65e13753eb5fab9103e3623567d006d7d1f741be"
                    ]
                },
                {
                    "command": [
                        "apply beta_sound; auto with arith pts.",
                        "VernacExtend",
                        "ad66c87f761230fd4b19b721ea6e17700b7212e4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply cumul_inv_prod.",
                        "VernacExtend",
                        "1fd439bdef2f74ba823311aec75b041b4d824411"
                    ]
                },
                {
                    "command": [
                        "exact ecc_is_subtype_dec.",
                        "VernacExtend",
                        "2952d1b6a5f42ee5b645b0ff1b7682fddbe9481f"
                    ]
                },
                {
                    "command": [
                        "apply delta_sound.",
                        "VernacExtend",
                        "b550ceb45094202ac0a306ef70dc2c673b4f7abd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ecc_is_norm_sound",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "refine (Build_norm_sound_CTS srt_ecc ecc sound_ecc_bd ecc_normalise _ _ _).",
                        "VernacExtend",
                        "551b75ebdafc792b0c47505ce7179200fb181463"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply ecc_inf_axiom.",
                        "VernacExtend",
                        "82646711d57f8cc4cfe3786101f58a2d664991ef"
                    ]
                },
                {
                    "command": [
                        "exact ecc_inf_rule.",
                        "VernacExtend",
                        "860d53d1e5c72e886fa689a4cc5c7a8e8cbd383f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim ecc_inf_axiom with s1; intros.",
                        "VernacExtend",
                        "9599488bb08ae2f806b4c1c08a08a32db4fd6ab7"
                    ]
                },
                {
                    "command": [
                        "split with x.",
                        "VernacExtend",
                        "3e50c224aa12119964b8f71175385058dd7c95e5"
                    ]
                },
                {
                    "command": [
                        "apply (pp_ok p).",
                        "VernacExtend",
                        "06296c92538043ef08f93920a1488d1633299bbb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}