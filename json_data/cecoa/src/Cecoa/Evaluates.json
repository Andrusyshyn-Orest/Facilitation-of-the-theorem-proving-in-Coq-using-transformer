{
    "filename": "src/Cecoa/Evaluates.v",
    "coq_project": "cecoa",
    "vernac_cmds": [
        [
            "Require Import Recdef Relations Wellfounded.",
            "VernacRequire",
            "5248c810b21570909b4e67c4a5a76441f185b21d"
        ],
        [
            "Require Import Arith NPeano PeanoNat List Bool Psatz.",
            "VernacRequire",
            "19d8ba670456aac0601494cd77f538f54923de8f"
        ],
        [
            "Require Import Cecoa.Lib Cecoa.Syntax Cecoa.CBV_cache Cecoa.Bounds Cecoa.Ordering.",
            "VernacRequire",
            "3efa7eabc091ee0c355edece87f598c1fdb72c6a"
        ],
        [
            "Require Import Omega.",
            "VernacRequire",
            "72dd903de5f3320ef9d302d79812066579ed9cdb"
        ],
        [
            "Import List.ListNotations.",
            "VernacImport",
            "e5b4981235e2df862e6c7a18e98a952fce61bf9e"
        ],
        [
            "Section Evaluates.",
            "VernacBeginSection",
            "bd6ccfce479383fd09fe5625c5e0718618d339a6"
        ],
        [
            "Variables variable function constructor : Type.",
            "VernacAssumption",
            "441e53bd4b078deea5191f45f1885acc47509b07"
        ],
        [
            "Notation value := (Syntax.value constructor).",
            "VernacSyntacticDefinition",
            "642ad7acd58be931b887abbad99a29327e67db3e"
        ],
        [
            "Notation term := (Syntax.term variable function constructor).",
            "VernacSyntacticDefinition",
            "a910a8472f03bf57af60b39044b9cd5a772e562a"
        ],
        [
            "Notation pattern := (Syntax.pattern variable constructor).",
            "VernacSyntacticDefinition",
            "77bf1c0b064e354c289b4a9391f5529bd30438b9"
        ],
        [
            "Notation rule := (Syntax.rule variable function constructor).",
            "VernacSyntacticDefinition",
            "6cd00dd7b236751469e91dc120dc43717bee7745"
        ],
        [
            "Notation cbv := (CBV_cache.cbv variable function constructor).",
            "VernacSyntacticDefinition",
            "ca1897a1cb089ba17abb496c1416d888b1adab50"
        ],
        [
            "Notation cache := (CBV_cache.cache variable function constructor).",
            "VernacSyntacticDefinition",
            "2cd3e23ebafff5b409c654668f3e99c3638cc5f2"
        ],
        [
            "Variable variable_eq_dec : forall (x1 x2 : variable), {x1=x2}+{x1<>x2}.",
            "VernacAssumption",
            "2ff961d40fdaf9d52d15addc0a7b9d9245653512"
        ],
        [
            "Variable function_eq_dec : forall (x1 x2 : function), {x1=x2}+{x1<>x2}.",
            "VernacAssumption",
            "6d1063b0027c8c51c1220d18afd46b0c0f5897c6"
        ],
        [
            "Variable constructor_eq_dec : forall (x1 x2 : constructor), {x1=x2}+{x1<>x2}.",
            "VernacAssumption",
            "b2e6c37255535a1765f314fa0dcb7d846e401f49"
        ],
        [
            "Variable term_default : term.",
            "VernacAssumption",
            "71457a291b739f59ba324c1ba3edc3d3d4b4965c"
        ],
        [
            "Variable value_default : value.",
            "VernacAssumption",
            "9a0833b6cd64f310c2362d033be69f2ea022d24e"
        ],
        [
            "Variable function_default : function.",
            "VernacAssumption",
            "4757108129647c7859c39cff4e29e50f7cdd0685"
        ],
        [
            "Variable rule_default : rule.",
            "VernacAssumption",
            "ea2b843e5c1af0d9a08c2591f30be9be9c7254f1"
        ],
        [
            "Variable prog : list rule.",
            "VernacAssumption",
            "224c53887cfe18f5a72ead32924fa3c3068e4bd9"
        ],
        [
            "Variable max_arity : nat.",
            "VernacAssumption",
            "edcd05e89a97b2bb96f9174756f523204707184b"
        ],
        [
            "Notation wf := (CBV_cache.wf variable_eq_dec function_eq_dec constructor_eq_dec rule_default prog max_arity).",
            "VernacSyntacticDefinition",
            "5b44600961bce2572889dbdcc09f04246a829528"
        ],
        [
            "Notation assoc_cache := (assoc (term_beq variable_eq_dec function_eq_dec constructor_eq_dec)).",
            "VernacSyntacticDefinition",
            "58c4ac4d06d53bfcb62dec2ea346191952cf84d2"
        ],
        [
            "Variable rank: function -> nat.",
            "VernacAssumption",
            "ee48ced9737d2193d07680ae893109684e0ea95d"
        ],
        [
            "Hypothesis prog_is_ppo : PPO_prog prog rank.",
            "VernacAssumption",
            "f73ecf45b1bb5ef4bbaba4087f5fee5869088378"
        ],
        [
            "Hypothesis prog_is_wf : wf_prog max_arity prog.",
            "VernacAssumption",
            "02d509d1242ec2d2049b65fc62178d95a36b2d55"
        ],
        [
            "Definition term_order (t1 t2: term): Prop := In t1 (sub_terms_strict _ _ _ t2).",
            "VernacDefinition",
            "9370c0969046d87bbe91d6259eb8dfd9550b553d"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Lemma term_order_wf : well_founded term_order.",
            "VernacStartTheoremProof",
            "d33775fe795141b41607088400f87912a9356f2f"
        ],
        [
            "intro t.",
            "VernacExtend",
            "0f1e2ed40751c280bb4adb99a86b36c003f05ffd"
        ],
        [
            "induction t as [ x | c lt IH | f lt IH ] using term_ind2; constructor; unfold term_order; simpl; [ tauto | | ].",
            "VernacExtend",
            "eb0c27f4769f6931ce779cc8f4f7731bcaf0e2f6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros t Hin.",
            "VernacExtend",
            "c8395be5386348fcd16d32bd9ef197a845b78957"
        ],
        [
            "rewrite in_flat_map in Hin.",
            "VernacExtend",
            "30d48df0d9182d3e624b9c27feb393118d163460"
        ],
        [
            "destruct Hin as (t' & Hin1 & Hin2).",
            "VernacExtend",
            "203546a8112e196beba192ca14e740b89667b949"
        ],
        [
            "apply sub_term_eq_or_strict in Hin2.",
            "VernacExtend",
            "170a88cb337cb381dc4fa2cf95a0b97581551d03"
        ],
        [
            "destruct Hin2 as [ Heq | Hin2 ].",
            "VernacExtend",
            "839d70fde95399fc564eb4ca92e7b8d7d6befc6d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst t'.",
            "VernacExtend",
            "fbf96dac500541bc01a531f132a34f424d40e1d9"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "exact Hin1.",
            "VernacExtend",
            "c970b24e170fa33974c7041cc50546646aa3bf8a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Acc_inv_trans with t'.",
            "VernacExtend",
            "a1a94f9524391c3008b03174b02651b21593e10c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exact Hin2.",
            "VernacExtend",
            "5954c266e81c0162322e60ad04e53951aa26d384"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "exact Hin1.",
            "VernacExtend",
            "c970b24e170fa33974c7041cc50546646aa3bf8a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros t Hin.",
            "VernacExtend",
            "c8395be5386348fcd16d32bd9ef197a845b78957"
        ],
        [
            "rewrite in_flat_map in Hin.",
            "VernacExtend",
            "30d48df0d9182d3e624b9c27feb393118d163460"
        ],
        [
            "destruct Hin as (t' & Hin1 & Hin2).",
            "VernacExtend",
            "203546a8112e196beba192ca14e740b89667b949"
        ],
        [
            "apply sub_term_eq_or_strict in Hin2.",
            "VernacExtend",
            "170a88cb337cb381dc4fa2cf95a0b97581551d03"
        ],
        [
            "destruct Hin2 as [ Heq | Hin2 ].",
            "VernacExtend",
            "839d70fde95399fc564eb4ca92e7b8d7d6befc6d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst t'.",
            "VernacExtend",
            "fbf96dac500541bc01a531f132a34f424d40e1d9"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "exact Hin1.",
            "VernacExtend",
            "c970b24e170fa33974c7041cc50546646aa3bf8a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Acc_inv_trans with t'.",
            "VernacExtend",
            "a1a94f9524391c3008b03174b02651b21593e10c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exact Hin2.",
            "VernacExtend",
            "5954c266e81c0162322e60ad04e53951aa26d384"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "exact Hin1.",
            "VernacExtend",
            "c970b24e170fa33974c7041cc50546646aa3bf8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition active_term := prod function (list value).",
            "VernacDefinition",
            "23e24b5e53a9b1e1c2dfb76494b086a53aa3c199"
        ],
        [
            "Definition term_from_active_term (t: active_term) : term := let (f, lv) := t in fapply f (map (@term_from_value _ _ _) lv).",
            "VernacDefinition",
            "a060deb2c1e0cce9dfb1b579f832e31c5aa7e82a"
        ],
        [
            "Definition value_list_order (lv lv' : list value) : Prop := suml (map (@value_size _) lv) < suml (map (@value_size _) lv').",
            "VernacDefinition",
            "352712935a79c7a0b0bfb70d2ecdbb74321bcc3b"
        ],
        [
            "Lemma value_list_order_wf : well_founded value_list_order.",
            "VernacStartTheoremProof",
            "4a776edd182e87e99be470e7a49392b8ccc5f356"
        ],
        [
            "unfold value_list_order.",
            "VernacExtend",
            "316f8257eb8841437f523a6e1a2e1ae0f3d0c7c9"
        ],
        [
            "apply wf_inverse_image.",
            "VernacExtend",
            "11e070bf7d2e0cf9f36a387a6f5ca827c032b9de"
        ],
        [
            "refine lt_wf.",
            "VernacExtend",
            "f6cf947d8a9af2617eaff1447bf315a3599d2d3d"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition active_term_order_superset t t' := lexprod lt value_list_order (rank (fst t), snd t) (rank (fst t'), snd t').",
            "VernacDefinition",
            "93f1eecba039218cf0f3bc80f401a961142ef1e7"
        ],
        [
            "Definition active_term_order_superset_wf : well_founded active_term_order_superset.",
            "VernacDefinition",
            "d062b7813a13483c7cf4129fd02d8c7aaa1399e0"
        ],
        [
            "unfold active_term_order_superset.",
            "VernacExtend",
            "d94512b09138ff6d9b12546d693f6448d45c3d26"
        ],
        [
            "apply wf_inverse_image.",
            "VernacExtend",
            "11e070bf7d2e0cf9f36a387a6f5ca827c032b9de"
        ],
        [
            "apply wf_lexprod.",
            "VernacExtend",
            "355f78160d2a3836ab34921d9181a59f94cd1e84"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply lt_wf.",
            "VernacExtend",
            "b02ed6b1b9b0f5e569a9e95fbb799f31ca941c75"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply value_list_order_wf.",
            "VernacExtend",
            "5cf4022ada1d74532ee7599d5119a813b8aeb8d1"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Fixpoint unify (s : list (variable * value)) (v : value) (p : pattern) {struct p} : option (list (variable * value)) := let unify_list := fix unify_list (s : list (variable * value)) (lv : list value) (lp : list pattern) {struct lp} : option (list (variable * value)) := match lv, lp with | [], [] => Some s | v::lv', p::lp' => match unify s v p with | None => None | Some s' => unify_list s' lv' lp' end | _, _ => None end in match p with | p_var x => match assoc (variable_beq variable_eq_dec) x s with | None => Some ((x, v) :: s) | Some v' => if value_beq constructor_eq_dec v v' then Some s else None end | p_capply c' lp =>match v with | c_capply c lv => if constructor_beq constructor_eq_dec c c' then unify_list s lv lp else None end end.",
            "VernacFixpoint",
            "3e0bc77a5795054ee3aab572d1e681a88af91ff0"
        ],
        [
            "Fixpoint unify_list_aux (s : list (variable * value)) (lv : list value) (lp : list pattern) : option (list (variable * value)) := match lv, lp with | [], [] => Some s | v::lv', p::lp' => match unify s v p with | None => None | Some s' => unify_list_aux s' lv' lp' end | _, _ => None end.",
            "VernacFixpoint",
            "476c81bad5f2b7243f9c745b0f1ec0501156f14e"
        ],
        [
            "Lemma unify_equation (s : list (variable * value)) (v : value) (p : pattern) : unify s v p = match p with | p_var x => match assoc (variable_beq variable_eq_dec) x s with | None => Some ((x, v) :: s) | Some v' => if value_beq constructor_eq_dec v v' then Some s else None end | p_capply c' lp => match v with | c_capply c lv => if constructor_beq constructor_eq_dec c c' then unify_list_aux s lv lp else None end end.",
            "VernacStartTheoremProof",
            "3ba7ae1b0bac81952ab358889ff0f5bae61a9d14"
        ],
        [
            "revert s v.",
            "VernacExtend",
            "52576c5aa728c4d9ffd60557fd0db684db49f30a"
        ],
        [
            "induction p as [ x | c lp IH ] using pattern_ind2; [ simpl; trivial | ].",
            "VernacExtend",
            "d91e0563958032eaff07b33dcb5e246cc4d47b1d"
        ],
        [
            "intros s [ c' lv ].",
            "VernacExtend",
            "04aa6bf425b6f10190f5847d6b0c458d3d57807f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case constructor_beq; [ | trivial ].",
            "VernacExtend",
            "486e347c38d9dd98a582e90eb467e73fc123a697"
        ],
        [
            "clear c c'; revert s lv.",
            "VernacExtend",
            "a4fd5ddda164fca8fa46cc2814bb79ab7253816f"
        ],
        [
            "induction lp as [ | p lp IHlp ]; intros s lv; [ destruct lv; trivial | ].",
            "VernacExtend",
            "50fdf7f680b9e6987ff8f6ea7e5e859aec1932ef"
        ],
        [
            "destruct lv as [ | [ c lv' ] lv ]; simpl; trivial.",
            "VernacExtend",
            "07ce8bcfaedc3cd9d396d0d80799e3318532805e"
        ],
        [
            "case unify; trivial.",
            "VernacExtend",
            "a879838c26110a092b30254cd76ea2f55ab7d2a1"
        ],
        [
            "intros s'.",
            "VernacExtend",
            "39c575c95a2c836812a2bbefd742a1a2fb5475f6"
        ],
        [
            "apply IHlp.",
            "VernacExtend",
            "0c0f7b785d89378d13f0d3599ca09afaf82ea3f8"
        ],
        [
            "intros; apply IH; right; assumption.",
            "VernacExtend",
            "86c519ebd0d5e2fde545dd0ac44d237508fa8b7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition unify_list (s : list (variable * value)) (lv : list value) (lp : list pattern) : option (variable -> value) := option_map (assoc_default (variable_beq variable_eq_dec) value_default) (unify_list_aux s lv lp).",
            "VernacDefinition",
            "3d0b7335e146f2e09a65cc1c0f0c004f5d426b1f"
        ],
        [
            "Lemma unify_list_unify_unify_list : forall s s' v lv p lp, unify_list_aux s (v :: lv) (p :: lp) = Some s' -> exists s'', unify s v p = Some s'' /\\ unify_list_aux s'' lv lp = Some s'.",
            "VernacStartTheoremProof",
            "e1bcb92a76b5293d3155e22d6af04ce3ebe5fca1"
        ],
        [
            "intros s s' v lv p lp.",
            "VernacExtend",
            "e87f41ab03f946502a9cb6645a8dcd9bf03fa67f"
        ],
        [
            "case_eq (unify s v p); simpl; [ intro s'' | ]; intro Huni; rewrite Huni; [ | discriminate ].",
            "VernacExtend",
            "25699e64314e343c4b8bbe487720ea3a004b8667"
        ],
        [
            "intros Hunis; exists s''.",
            "VernacExtend",
            "06c74c026a22fc5158eba73829c87d80f3dbe331"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unify_list_length : forall s s' lv lp, unify_list_aux s lv lp = Some s' -> length lv = length lp.",
            "VernacStartTheoremProof",
            "2de20a2da583673b08bebe43240c8c986ab6212e"
        ],
        [
            "intros s s' lv; revert s s'; induction lv as [ | v lv IH ]; intros s s' lp Hunis; destruct lp; [ trivial | discriminate | discriminate | ].",
            "VernacExtend",
            "4ad8238295aebfb61b52f514f21e2a602c34fbfc"
        ],
        [
            "simpl; f_equal; apply unify_list_unify_unify_list in Hunis; destruct Hunis as (s'' & _ & Hunis); now apply IH in Hunis.",
            "VernacExtend",
            "bd3ec4f040760e9123cb8d359d0cfb80338eacbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unify_cons_eq_unify_list : forall s s' c lv c' lp', unify s (c_capply c lv) (p_capply c' lp') = Some s' -> c = c' /\\ unify_list_aux s lv lp' = Some s'.",
            "VernacStartTheoremProof",
            "229bfe4cbdd3db197c2e03bd27b0ad2d9805c6f2"
        ],
        [
            "intros s s' c lv c' lp' Huni; rewrite unify_equation in Huni; case_eq (constructor_beq constructor_eq_dec c c'); intros Hc; rewrite Hc in Huni; [ now rewrite constructor_beq_eq in Hc | discriminate Huni ].",
            "VernacExtend",
            "d650278ee0a14a0053bc3dd6d2f934f31de93c98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unify_list_aux_extension lv lp s s': unify_list_aux s lv lp = Some s' -> exists s'', s' = s'' ++ s /\\ forall x, assoc (variable_beq variable_eq_dec) x s <> None -> assoc (variable_beq variable_eq_dec) x s'' = None.",
            "VernacStartTheoremProof",
            "bc5c1fe01a63faae95f6918ad1a770a5274b7fe4"
        ],
        [
            "remember (suml (map (value_size (constructor := constructor)) lv)) as size eqn: Hsize.",
            "VernacExtend",
            "b703d552bb52a1d0a23eb8edd9cfbefe440d5424"
        ],
        [
            "revert lv lp s s' Hsize; induction size as [ size IH ] using lt_wf_ind; intros lv lp s s' Hsize Hunis.",
            "VernacExtend",
            "9007fc488da67271774b91dae702d1009520bff8"
        ],
        [
            "destruct lv as [ | v lv ].",
            "VernacExtend",
            "83dfade7e0e3daf0a45ecebc73e885627c0d3b20"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists [].",
            "VernacExtend",
            "0124358b905f1434771624034a4e7386196b0a4b"
        ],
        [
            "assert (Hnil : 0 = length lp) by (now apply unify_list_length in Hunis).",
            "VernacExtend",
            "71839be273f7273b3d37f141227e9c944187441f"
        ],
        [
            "destruct lp; [ clear Hnil | now contradict Hnil ].",
            "VernacExtend",
            "de30e6f0f8556010b67ce43c1dc3c4d68a32d6ef"
        ],
        [
            "simpl in Hunis; injection Hunis; clear Hunis; intros; now subst s'.",
            "VernacExtend",
            "b54001d3e22e36444ba33d4492800d42ec50ab0e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Hlen : length (v :: lv) = length lp) by (apply unify_list_length in Hunis; assumption).",
            "VernacExtend",
            "f9f05eed5fe2169fa52d0bb361748a478c1b26a4"
        ],
        [
            "destruct lp as [ | p lp ]; [ discriminate Hlen | clear Hlen ].",
            "VernacExtend",
            "0ce282b2ebab1b98f6a798ec5844277f005a2df6"
        ],
        [
            "apply unify_list_unify_unify_list in Hunis; destruct Hunis as (s'' & Huni & Hunis).",
            "VernacExtend",
            "77a2ffd7d4028659fc19262c5d3c8b0f7c3a08dc"
        ],
        [
            "set (size' := suml (map (value_size (constructor := constructor)) lv)).",
            "VernacExtend",
            "8a4de91bfdc37844734b0da6a34ef41c69747123"
        ],
        [
            "assert (Hlt: size' < size) by (simpl in Hsize; rewrite Hsize; change size' with (0 + size'); unfold size'; apply plus_lt_compat_r; destruct v as [ c' lv' ]; simpl; apply lt_O_Sn).",
            "VernacExtend",
            "25da0c8a0ae688f4e67a122571e68719c73b3547"
        ],
        [
            "apply (IH _ Hlt) in Hunis; [ | easy ]; destruct Hunis as (s''' & Happ & Hconsistent); clear size' Hlt lp.",
            "VernacExtend",
            "0d62de22c7943381424c28a291642ff42f3004a4"
        ],
        [
            "destruct p as [ x | c lp' ].",
            "VernacExtend",
            "0d8a5322a6a18e5a71134b39a5f66fcbb1b2b41d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in Huni; case_eq (assoc (variable_beq variable_eq_dec) x s).",
            "VernacExtend",
            "ba06ddd3f47745738dad2e02f372f593ecd0bb1f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros v'' Hsome; rewrite Hsome in Huni.",
            "VernacExtend",
            "ce47bfeb43982258a4fc3c5202b053e8019803a2"
        ],
        [
            "destruct value_beq in Huni; [ | discriminate Huni ]; injection Huni; intros; subst s' s''; clear Huni.",
            "VernacExtend",
            "e83f9e82dd047c92b062701bb5571d68b59e1e14"
        ],
        [
            "now exists s'''.",
            "VernacExtend",
            "162d524ad0e93de2065a0a140d5b4b167405b3ed"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros Hnone; rewrite Hnone in Huni.",
            "VernacExtend",
            "d880192091764e7e76c6ce773fa95b35f47fc5eb"
        ],
        [
            "injection Huni; intro; subst s''; clear Huni.",
            "VernacExtend",
            "52c10a69450b3ae54cadc4267e1e1d973aaa651c"
        ],
        [
            "exists (s''' ++ [(x,v)]); split; [ now rewrite <- app_assoc | ].",
            "VernacExtend",
            "b003729e3bcfe510ac550d94b657c457585e50d6"
        ],
        [
            "intros y Hsome.",
            "VernacExtend",
            "12c01faf9bac24ae9f3cbd9820e07690251f62fc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite assoc_app_eq_None; split.",
            "VernacExtend",
            "45f1d1355fdfa71e9110ab781f652f2896f3dea3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Hconsistent.",
            "VernacExtend",
            "352963c82437f0bc441583ea560cd4c58e3f4fb2"
        ],
        [
            "change ((x,v) :: s) with ([(x,v)] ++ s).",
            "VernacExtend",
            "b7131e6c913578ebbdab7a8c0e29acda5d69b2a8"
        ],
        [
            "rewrite assoc_app_neq_None; now right.",
            "VernacExtend",
            "671d2c4732d2433ce421f3a3dbd407ab7075644f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case_eq (variable_beq variable_eq_dec y x); [ | easy ].",
            "VernacExtend",
            "7801072e3a322a3dc0bc96b9f45ecb11ffdc52a8"
        ],
        [
            "rewrite variable_beq_eq; intro; now subst y.",
            "VernacExtend",
            "171b59a10e2e371e4f04bcbd7038b65438f0c612"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct v as [ c' lv' ].",
            "VernacExtend",
            "b36aa68fd1682350e090adac88935bb2cdab741c"
        ],
        [
            "apply unify_cons_eq_unify_list in Huni; destruct Huni as (Hc' & Hunis); subst c'.",
            "VernacExtend",
            "402996a7fb0d13522f2f7594cbd4545943770009"
        ],
        [
            "set (size' := suml (map (value_size (constructor := constructor)) lv')).",
            "VernacExtend",
            "5f4bba3c8dea5c9ba78bb4746f6b039611ce484f"
        ],
        [
            "assert (Hlt: size' < size) by (subst size; simpl; unfold size'; omega).",
            "VernacExtend",
            "272ed3691cd001922efb29c436fcbc4e9077f5d3"
        ],
        [
            "apply (IH _ Hlt) in Hunis; [ | easy ]; destruct Hunis as (s'''' & Happ' & Hconsistent'); clear size' Hlt.",
            "VernacExtend",
            "1f98ed61f9910a7c25d3bf62086538e79dd6c30b"
        ],
        [
            "exists (s''' ++ s'''').",
            "VernacExtend",
            "c7bcd5aba8adc96d9e10bd1b14c610c2b25bd9b7"
        ],
        [
            "subst s' s''.",
            "VernacExtend",
            "a9562c6ebc2292a8666659f66c45b76e50326dc2"
        ],
        [
            "split; [ now rewrite <- app_assoc | ].",
            "VernacExtend",
            "d3165b894367264e3978db9a8dae9eecbf194e77"
        ],
        [
            "intros x Hsome.",
            "VernacExtend",
            "f3c78b41ca9a4cec9a0fc9512227368455ce9686"
        ],
        [
            "rewrite assoc_app_eq_None; split.",
            "VernacExtend",
            "45f1d1355fdfa71e9110ab781f652f2896f3dea3"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply Hconsistent.",
            "VernacExtend",
            "352963c82437f0bc441583ea560cd4c58e3f4fb2"
        ],
        [
            "rewrite assoc_app_neq_None; right; assumption.",
            "VernacExtend",
            "e7f40c4af1118afee97640cff2f2966ef9f3825d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply Hconsistent'; assumption.",
            "VernacExtend",
            "daaedb1e9b3f8fc54db90498af5bf102682ad9ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unify_all_vars_defined : forall (s s': list (variable * value)) (v: value) (p: pattern), unify s v p = Some s' -> forall x, In x (vars_of_pattern p) -> assoc (variable_beq variable_eq_dec) x s' <> None.",
            "VernacStartTheoremProof",
            "2ae35418e8a37a47e1b54a2c4606710c8a668d2e"
        ],
        [
            "intros s s' v p; revert s s' v.",
            "VernacExtend",
            "59fd3b51e2b93979eae95de63ff7d273df612051"
        ],
        [
            "induction p as [ x | c lp IH ] using pattern_ind2; intros s s' v Huni.",
            "VernacExtend",
            "d183b869a16051797748e42f830785184ad9f72c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x' [ Hx' | H ]; [ | tauto ]; subst x'.",
            "VernacExtend",
            "b13c3d8b87f6183a907127f1a2a7aaa72e8ba636"
        ],
        [
            "rewrite unify_equation in Huni.",
            "VernacExtend",
            "fff457941e7e51e0f27e8c4e4335cae7af1fa939"
        ],
        [
            "case_eq (assoc (variable_beq variable_eq_dec) x s).",
            "VernacExtend",
            "29d748ef13ca68dbde779ee588c9a0a809de9253"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros v' Heq; rewrite Heq in Huni.",
            "VernacExtend",
            "6db04e60fccbee911ef97c95c7f5aec7c04813ac"
        ],
        [
            "destruct (value_beq _ _ _) in Huni; [ | discriminate ].",
            "VernacExtend",
            "92aa443c7aad9289cc391557a69f1f702cc1e45b"
        ],
        [
            "injection Huni; intros H; subst s'.",
            "VernacExtend",
            "771bccd2b5c6ae1a4330152d05a33b164dd1d68d"
        ],
        [
            "rewrite Heq; discriminate.",
            "VernacExtend",
            "e377fee6974d2af5b31126db8acbe76f1f251236"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros Heq; rewrite Heq in Huni; injection Huni; intros H; subst s'.",
            "VernacExtend",
            "b736837a61eb3f958640f3f742bc2b9948a33803"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case_eq ((variable_beq variable_eq_dec) x x); [ intros; discriminate | ].",
            "VernacExtend",
            "bcddbd529458d363eec468717ad9e6d6f81c57ad"
        ],
        [
            "rewrite <- not_true_iff_false, variable_beq_eq; tauto.",
            "VernacExtend",
            "6bea7698545df796cd30aadcf4ba57b17bd8241d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; destruct v as [ c' lv ].",
            "VernacExtend",
            "767cf6264cf5debce22e8ad001e8307523635208"
        ],
        [
            "apply unify_cons_eq_unify_list in Huni; destruct Huni as (H & Hunis); subst c'; clear c.",
            "VernacExtend",
            "8da12d5ea038e3c53ca016f186ab713e3b32d914"
        ],
        [
            "revert s s' lv Hunis.",
            "VernacExtend",
            "0a26f85cf91a9d3da9302f089347be620b70ce17"
        ],
        [
            "induction lp as [ | p lp IHlp ]; [ easy | ].",
            "VernacExtend",
            "20d9d1d5aa86b039d8562ce9a121d98a94a5e046"
        ],
        [
            "intros s s' [ | v lv ] Hunis; [ apply unify_list_length in Hunis; now contradict Hunis | ].",
            "VernacExtend",
            "84654025d1677a44758057cc95d53201af9db70d"
        ],
        [
            "apply unify_list_unify_unify_list in Hunis.",
            "VernacExtend",
            "ad32650b620aff6e65a6a056a7a722963473e52c"
        ],
        [
            "destruct Hunis as (s'' & Huni & Hunis).",
            "VernacExtend",
            "13346f58d04df8aa4736c905da9c6123c64bdc7b"
        ],
        [
            "intros x; rewrite in_flat_map; intros (p' & [Hp' | Hp'] & Hx).",
            "VernacExtend",
            "32a559d9ff2aec055def1cd3189a9e18b7423849"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst p'.",
            "VernacExtend",
            "6a15852eb63ee4a9533650efc379406f49fe090d"
        ],
        [
            "apply IH with (x := x) in Huni; [ | now left | easy ].",
            "VernacExtend",
            "216cc49c10ae6707928cc7333eef71d4df50cb50"
        ],
        [
            "apply unify_list_aux_extension in Hunis.",
            "VernacExtend",
            "3045eed7d60693b2b83717c18e63260ded3885b2"
        ],
        [
            "destruct Hunis as (s''' & Heq & _); subst s'.",
            "VernacExtend",
            "f3dde9385ae6e23fa40717b8f7573377812fefef"
        ],
        [
            "rewrite assoc_app_neq_None; now right.",
            "VernacExtend",
            "671d2c4732d2433ce421f3a3dbd407ab7075644f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply IHlp with (s := s'') (lv := lv).",
            "VernacExtend",
            "f3f22722d634b9728f28742810b370005fb772db"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros p'' Hin; apply IH; now right.",
            "VernacExtend",
            "4df786e220558fc3c6f23b872591a67d49cc01fd"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply in_flat_map.",
            "VernacExtend",
            "965566958621c742b363bd954504ea862973ec4d"
        ],
        [
            "now exists p'.",
            "VernacExtend",
            "3f887b3ae037dcec7223bd6a22b61071060b700b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_psubst_consistent_assoc_extension : forall s s' p, (forall x, assoc (variable_beq variable_eq_dec) x s <> None -> assoc (variable_beq variable_eq_dec) x s' = None) -> (forall x, In x (vars_of_pattern p) -> assoc (variable_beq variable_eq_dec) x s <> None) -> psubst (assoc_default (variable_beq variable_eq_dec) value_default (s' ++ s)) p = psubst (assoc_default (variable_beq variable_eq_dec) value_default s) p.",
            "VernacStartTheoremProof",
            "051134035c7d38c6bfb193038186c93f24562e45"
        ],
        [
            "intros s s' p; revert s s'.",
            "VernacExtend",
            "e85950c84c981e0447df1a33195da437380fbe43"
        ],
        [
            "induction p as [ x | c lp IH ] using pattern_ind2; intros s s' Hconsistent Hvars.",
            "VernacExtend",
            "c4be3cc915706c768137ac96bdb3a8b9e836b1f8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Hsomes : assoc (variable_beq variable_eq_dec) x s <> None) by (apply Hvars; simpl; now left).",
            "VernacExtend",
            "c2efe2b357c8b4aac7cf9190e2a785ffaa62c462"
        ],
        [
            "assert (Hnones' : assoc (variable_beq variable_eq_dec) x s' = None) by (apply Hconsistent, Hsomes).",
            "VernacExtend",
            "4b5745ecc10ca866cf57ba351bcf1f2602e68f0b"
        ],
        [
            "assert (H : exists v, assoc (variable_beq variable_eq_dec) x s = Some v) by now apply neq_None_eq_Some.",
            "VernacExtend",
            "a20445cd7f1f6a4a12fbf0d19f1015b87a54a192"
        ],
        [
            "clear Hsomes.",
            "VernacExtend",
            "1a587fbb6ba049f51ecc47e2edb251b0de710ed3"
        ],
        [
            "destruct H as (v & Hsome's).",
            "VernacExtend",
            "7b8ab7947d7d904f9549e9ba2c2b2ff7b01a849a"
        ],
        [
            "simpl; unfold assoc_default.",
            "VernacExtend",
            "b790e1ae491d5b0d1d135d106f2167e9632b14ce"
        ],
        [
            "rewrite Hsome's.",
            "VernacExtend",
            "6d5ff151cc357d107d4b650c2082dcd1a3261fad"
        ],
        [
            "case_eq (assoc (variable_beq variable_eq_dec) x (s' ++ s)).",
            "VernacExtend",
            "8241d26e6882cec85c9df7d39d8e0d189ae941eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros v'; rewrite assoc_app_eq_Some.",
            "VernacExtend",
            "16810b69d880164ac8972c12a15b942531e0d575"
        ],
        [
            "intros [ Hsomes' | (_ & Hsome) ]; [ rewrite Hnones' in Hsomes'; discriminate Hsomes' | rewrite Hsome's in Hsome; now injection Hsome ].",
            "VernacExtend",
            "ca2bf9afec227bab0de18a8257debd49b7d8319f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite assoc_app_eq_None; intros (_ & Himpossible); congruence.",
            "VernacExtend",
            "4b74bd56add33fa341d5e308d287b3b04fb4a29b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; f_equal.",
            "VernacExtend",
            "e1a8d9221cffa231af353a6224974ce2a7f11d21"
        ],
        [
            "apply map_ext_in.",
            "VernacExtend",
            "b7bdc11592344de1bd61785a34d0d70b5a9677d5"
        ],
        [
            "intros p Hin; apply IH; [ assumption | assumption | ].",
            "VernacExtend",
            "d0c1d5dba829f14b47ea94651dceb1b36fcdb086"
        ],
        [
            "simpl in Hvars.",
            "VernacExtend",
            "6f68c1cdf7c068974904c7a9e7d631627d5b5395"
        ],
        [
            "intros x Hx; apply Hvars.",
            "VernacExtend",
            "c428fac40abac974efd4ffc000db1b786ff8c1d3"
        ],
        [
            "apply in_flat_map; now exists p.",
            "VernacExtend",
            "d1320b0757c429dc04f92f5efbfce04b38165d30"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unify_sound : forall (s s': list (variable * value)) (v: value) (p: pattern), unify s v p = Some s' -> psubst (assoc_default (variable_beq variable_eq_dec) value_default s') p = v.",
            "VernacStartTheoremProof",
            "3e377a28448df0232e0a80a03c5771b289cd8add"
        ],
        [
            "intros s s' [ c lv ] p; revert s s' c lv.",
            "VernacExtend",
            "02f252644cc347ce26196b5d552815fdf8095bbe"
        ],
        [
            "induction p as [ x | c lp IH ] using pattern_ind2.",
            "VernacExtend",
            "99f00ad4fe62c83cec21038e281cebd61dfc6964"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros s s' c' lv; simpl.",
            "VernacExtend",
            "efcbad18e681788b65de8e98e4a0e8b8d4fa0610"
        ],
        [
            "case_eq (assoc (variable_beq variable_eq_dec) x s).",
            "VernacExtend",
            "29d748ef13ca68dbde779ee588c9a0a809de9253"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros [ c'' lv'' ] H'' Hassoc.",
            "VernacExtend",
            "a05ea033e56f6a3f3326d70387593a33969ef078"
        ],
        [
            "case_eq (constructor_beq constructor_eq_dec c' c''); case_eq (list_beq value (value_beq constructor_eq_dec) lv lv''); intros Heqc Heqlv; rewrite Heqc, Heqlv in Hassoc; simpl in Hassoc; try discriminate.",
            "VernacExtend",
            "27f72d80c543087d7401431c08991081334e511f"
        ],
        [
            "injection Hassoc; intros; subst.",
            "VernacExtend",
            "5d994424770bd940334edeb07b0a6a253a4f9b73"
        ],
        [
            "apply list_beq_eq in Heqc; subst; [ | intros; apply value_beq_eq; assumption ].",
            "VernacExtend",
            "e74799eeeb1bc39916c1dfc175e1ea0cef458bda"
        ],
        [
            "apply constructor_beq_eq in Heqlv; subst.",
            "VernacExtend",
            "681089b0bc9e835e1dc8dbc4522ed99a63bbdbf9"
        ],
        [
            "unfold assoc_default.",
            "VernacExtend",
            "49ab364639c6538637720f12978e21da4376f733"
        ],
        [
            "rewrite H''; trivial.",
            "VernacExtend",
            "5ded37ffb1dabefe5331e79be6a6d2678434e15f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros Hnone Hsome; injection Hsome; intros; subst; clear Hsome.",
            "VernacExtend",
            "89ecb9abe40566792954d74fa1c64937aa45596c"
        ],
        [
            "unfold assoc_default.",
            "VernacExtend",
            "49ab364639c6538637720f12978e21da4376f733"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case_eq ((variable_beq variable_eq_dec) x x); [ intros; trivial | ].",
            "VernacExtend",
            "3ecbc06ef363fa044e2631fefa431282a9b55961"
        ],
        [
            "intros Heq.",
            "VernacExtend",
            "dfd01f405e65b2dca6b7aecb39fb335cd5c85dc2"
        ],
        [
            "rewrite <- not_true_iff_false, variable_beq_eq in Heq.",
            "VernacExtend",
            "30b35ce0a66d30acfa4d7945628922162dbf78df"
        ],
        [
            "now contradict Heq.",
            "VernacExtend",
            "78151dc4afe3562fc0d753cd14a19f518e31dde6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros s s' c' lv.",
            "VernacExtend",
            "c509d710c300a51c331a879c41844919899e74ae"
        ],
        [
            "rewrite unify_equation.",
            "VernacExtend",
            "b4df96e41b02a2759b737314e19535556bad4685"
        ],
        [
            "case_eq (constructor_beq constructor_eq_dec c' c); [ | intros _ H; discriminate H ].",
            "VernacExtend",
            "3a943be69e0a5807e6e24c93965f61abdce3748c"
        ],
        [
            "rewrite constructor_beq_eq.",
            "VernacExtend",
            "2d4462a5f5d859290dd59e0a169aa0d8228adfe2"
        ],
        [
            "intros Heq; subst.",
            "VernacExtend",
            "9023653b771c72dcfc5a9e217b9ef099eb45e4bd"
        ],
        [
            "revert s s' lv; induction lp as [ | p lp IHlp ]; intros s s' lv.",
            "VernacExtend",
            "29e200edf65abb61038e98476450b612bf551b6b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct lv; [ now simpl | ].",
            "VernacExtend",
            "813b15289e6f047932d8206ebefb2bae86a91ca3"
        ],
        [
            "simpl; intros H; discriminate H.",
            "VernacExtend",
            "75b9ef5d5381646170fd35b0ecd11b87b57adaee"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct lv as [ | [ c' lv' ] lv ]; [ intros H; discriminate H | ].",
            "VernacExtend",
            "21686f1da2753e7e179470a10a96db257a5700c6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case_eq (unify s (c_capply c' lv') p); [ | intros _ H; discriminate H ].",
            "VernacExtend",
            "c2ee494a5e536db85e401c85d2ff879090d4f2d9"
        ],
        [
            "intros s'' Hs'' Heq.",
            "VernacExtend",
            "b03769f49513f5496054b01edb620d29a30cdbda"
        ],
        [
            "f_equal; simpl; f_equal.",
            "VernacExtend",
            "6047930ecc90944dcce091b9ee17cfcf555fc38f"
        ],
        [
            "assert (Hvars' := unify_all_vars_defined _ _ _ Hs'').",
            "VernacExtend",
            "95f5f8a57a98d540ad1f9639fe89be988dd5fa47"
        ],
        [
            "apply IH in Hs''.",
            "VernacExtend",
            "45b91651c56fd1f652c3266e34d050629cabd0c4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply unify_list_aux_extension in Heq; destruct Heq as (s''' & Heq & Hconsistent); subst s'.",
            "VernacExtend",
            "1e530c78519b591f4e42ce05928c7d4dc69be6dc"
        ],
        [
            "now rewrite eq_psubst_consistent_assoc_extension.",
            "VernacExtend",
            "e158269755e14f0eee67eb6c568087241f79182e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left; trivial.",
            "VernacExtend",
            "2f1efd67ff23560c270a9589d0d1b100a9c80732"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl in IHlp.",
            "VernacExtend",
            "81fe63762baa3bf71eaf646224ae59ea7caabdd3"
        ],
        [
            "assert (Hf_equal : forall lv', c_capply c lv' = c_capply c lv -> lv' = lv) by (intros lv'' H''; injection H''; trivial).",
            "VernacExtend",
            "4c7331765fc23988f845db322a6c221ea7655d15"
        ],
        [
            "apply Hf_equal.",
            "VernacExtend",
            "77fefca6040d173e9df350b2eb562ce440d24b7b"
        ],
        [
            "apply IHlp with (s := s''); [ | assumption ].",
            "VernacExtend",
            "811bbb81238f61982aa355a658ee4e9e4c7bee35"
        ],
        [
            "intros p' Hin.",
            "VernacExtend",
            "d8b70af332742fa0a090be1d204be25961b5d9a2"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "right; assumption.",
            "VernacExtend",
            "4b9041b9a9d920fdce6d3e18e05e4d1a743614d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma psubst_app p v (s s' : list (variable * value)) : (forall x : variable, assoc (variable_beq variable_eq_dec) x s <> None -> assoc (variable_beq variable_eq_dec) x s' = None) -> (forall x, In x (vars_of_pattern p) -> assoc (variable_beq variable_eq_dec) x s <> None) -> psubst (assoc_default (variable_beq variable_eq_dec) value_default s ) p = v -> psubst (assoc_default (variable_beq variable_eq_dec) value_default (s' ++ s)) p = v.",
            "VernacStartTheoremProof",
            "3c6fab31deaedcd7d0e0134b2ff3174feedde4cb"
        ],
        [
            "revert v s s'.",
            "VernacExtend",
            "1b334e90a63c1c5cd942d164057da92dff9a56df"
        ],
        [
            "induction p as [ x | c lp IHp ] using pattern_ind2; simpl; intros v s s' Hconsistent Hall Hassoc.",
            "VernacExtend",
            "dff339f30f7a3d7444279a380b9a7306d8ba2c8b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold assoc_default in *.",
            "VernacExtend",
            "3764305e827d73104270bc4ae6a2cc86626d1174"
        ],
        [
            "case_eq (assoc (variable_beq variable_eq_dec) x (s' ++ s)).",
            "VernacExtend",
            "8241d26e6882cec85c9df7d39d8e0d189ae941eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros v' Hx.",
            "VernacExtend",
            "caa0335cf198bb022b800c4aae4d5bdceaaf0858"
        ],
        [
            "apply assoc_app_eq_Some in Hx.",
            "VernacExtend",
            "fbd5a67951cc8c8719eece5b32c84e3ffdc9c0c6"
        ],
        [
            "destruct Hx as [ Hx | [ Hnone Hx ] ]; [ | rewrite Hx in Hassoc; assumption ].",
            "VernacExtend",
            "919b5e5690ea7fab7857322e209a56c4619cae2e"
        ],
        [
            "case_eq (assoc (variable_beq variable_eq_dec) x s).",
            "VernacExtend",
            "29d748ef13ca68dbde779ee588c9a0a809de9253"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros v'' Hx'.",
            "VernacExtend",
            "99c65761dee38a644a88e035bf690e1a16a72244"
        ],
        [
            "rewrite Hx' in Hassoc.",
            "VernacExtend",
            "6b481faea777eb9fc7754ff0b95027aa809ad82e"
        ],
        [
            "subst v''.",
            "VernacExtend",
            "a6bfdb292b4d93347dc76759f60603ef650ada6f"
        ],
        [
            "apply eq_None_neq_Some in Hx; [contradict Hx |].",
            "VernacExtend",
            "5bd6376a8484954d4dd0cded4bfe7de84ace3440"
        ],
        [
            "apply Hconsistent.",
            "VernacExtend",
            "352963c82437f0bc441583ea560cd4c58e3f4fb2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intro Hx'.",
            "VernacExtend",
            "d901000fc98a4aa3b9341beebce8553131ff5926"
        ],
        [
            "rewrite Hx' in Hassoc.",
            "VernacExtend",
            "6b481faea777eb9fc7754ff0b95027aa809ad82e"
        ],
        [
            "apply eq_None_neq_Some in Hx; [contradict Hx |].",
            "VernacExtend",
            "5bd6376a8484954d4dd0cded4bfe7de84ace3440"
        ],
        [
            "apply Hconsistent.",
            "VernacExtend",
            "352963c82437f0bc441583ea560cd4c58e3f4fb2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intro Hassoc'.",
            "VernacExtend",
            "789adfebdc55989c38b7cd9433a52e640dd8b81f"
        ],
        [
            "apply assoc_app_eq_None in Hassoc'.",
            "VernacExtend",
            "214ccd449bbbd4e5aee951aee21305a868d8e17e"
        ],
        [
            "destruct Hassoc' as [_ Hassoc'].",
            "VernacExtend",
            "99540a3f0ed722299736f2e62dae1225f362a76f"
        ],
        [
            "rewrite Hassoc' in Hassoc.",
            "VernacExtend",
            "fe4575890303a26948e07a94aa4745edef59d6bf"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- Hassoc.",
            "VernacExtend",
            "76d09d9bbafcca6d3a76274c0ede2251259026ae"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply map_in_ext.",
            "VernacExtend",
            "377e6a2f6dbe5ab0d6ad060c108fd3490754649c"
        ],
        [
            "intros p Hp.",
            "VernacExtend",
            "cf737bd4e185c03175335af1ca6ae52da34cba56"
        ],
        [
            "apply eq_psubst_consistent_assoc_extension; [ assumption | ].",
            "VernacExtend",
            "0ea44aa778ddb491cb2262f033ac60bd8dc4d7cc"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "apply Hall.",
            "VernacExtend",
            "958becbd2aa76940a7c85e4166a8d2f1f734ae4f"
        ],
        [
            "apply in_flat_map.",
            "VernacExtend",
            "965566958621c742b363bd954504ea862973ec4d"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unify_list_sound : forall (lp : list pattern) (lv : list value) (s : variable -> value), unify_list [] lv lp = Some s -> map (psubst s) lp = lv.",
            "VernacStartTheoremProof",
            "73361714c0286b84d31501fd35ec9136c221605f"
        ],
        [
            "assert ( Hgen: forall lv lp s0 s, unify_list s0 lv lp = Some s -> map (psubst s) lp = lv ).",
            "VernacExtend",
            "e164129c3f8c213da95f87f51dcb0f252e26ef8e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold unify_list.",
            "VernacExtend",
            "aaca24e664f59dfe1822d3c89377ab4c1d37fa91"
        ],
        [
            "induction lv as [ | v lv IHlv ]; intros [ | p lp ] s0 s Hula; [ trivial | simpl in Hula; discriminate Hula | simpl in Hula; discriminate Hula | ].",
            "VernacExtend",
            "ab2469d4f1e1335745243a31023df608ec20082b"
        ],
        [
            "unfold option_map in Hula.",
            "VernacExtend",
            "c7d26cb14ad51558b13d5f8e6baf19c1970d0774"
        ],
        [
            "case_eq (unify_list_aux s0 (v :: lv) (p :: lp)); [ | intro Hnone; rewrite Hnone in Hula; discriminate Hula ].",
            "VernacExtend",
            "6f8646109912ae37ebbf453d23a5ad02976d15aa"
        ],
        [
            "intros s' Hs'.",
            "VernacExtend",
            "3deadcc30608da9a6aff57f4af0e4fa25bf0814d"
        ],
        [
            "rewrite Hs' in Hula.",
            "VernacExtend",
            "a49615f142c734344f45165625e967797c833518"
        ],
        [
            "injection Hula; clear Hula; intro; subst s.",
            "VernacExtend",
            "3a3e6ef67b7903b9e7627efd61df8fb36fb7434b"
        ],
        [
            "apply unify_list_unify_unify_list in Hs'.",
            "VernacExtend",
            "3994d9338e88a9c04dcd445de3bd6c72271b48e4"
        ],
        [
            "destruct Hs' as (s'' & Hs'' & Hs').",
            "VernacExtend",
            "d6eb0ce0520287f731e7e7301606c5b008bb00eb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert(HHs'' := Hs'').",
            "VernacExtend",
            "dcf5e3b9f7a5fafe1b5a1b536b554869e4e55d0d"
        ],
        [
            "apply unify_sound in Hs''.",
            "VernacExtend",
            "e5c7822042f7fcf0abcf2ac44dff5a24e681e761"
        ],
        [
            "assert(HHs' := Hs').",
            "VernacExtend",
            "d23370fba46d4f0e9a79708fc0ed3c261d6c5a97"
        ],
        [
            "apply unify_list_aux_extension in Hs'.",
            "VernacExtend",
            "16b58946f5c57637162f9a0419730084cf2a3a4f"
        ],
        [
            "destruct Hs' as (s''' & Hs' & Hconsistent).",
            "VernacExtend",
            "9389dedf0ea6640c0b841baf07cc29171db8aeaa"
        ],
        [
            "subst s'.",
            "VernacExtend",
            "885ad85e6e6477ef34f16128c01c78736f85c739"
        ],
        [
            "apply psubst_app; [ assumption | | assumption ].",
            "VernacExtend",
            "852cace31206dadb5fb00dfdef2f0b356b0246df"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "eapply unify_all_vars_defined; [ exact HHs'' | exact Hx].",
            "VernacExtend",
            "48b5d560ba6c5bf200a2877d40a3e1cd83583d4c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply IHlv with (s0 := s'').",
            "VernacExtend",
            "8ae11542a50ae7a807260c21a4ffb099fd271bf8"
        ],
        [
            "rewrite Hs'.",
            "VernacExtend",
            "94b13073ba4a4e7e716d230ddab751f08269e38e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint first_rule_rec (prog': list rule) (t: active_term) : option (nat * (variable -> value) * term) := match prog' with | [] => None | rule_intro f lp t' :: prog'' => if function_beq function_eq_dec (fst t) f then match unify_list [] (snd t) lp with | None => match first_rule_rec prog'' t with | None => None | Some (i, s, t) => Some (S i, s, t) end | Some s => Some (0, s, subst s t') end else match first_rule_rec prog'' t with | None => None | Some (i, s, t) => Some (S i, s, t) end end.",
            "VernacFixpoint",
            "cec09120eb81a5e1af1f463501fccbbae0503a17"
        ],
        [
            "Definition first_rule (t: active_term) : option (nat * (variable -> value) * term) := first_rule_rec prog t.",
            "VernacDefinition",
            "8e2a22e4263d74995d4d42ad00edeb08b6e46195"
        ],
        [
            "Global Arguments first_rule t : simpl never.",
            "VernacArguments",
            "01451dac44cd1caa0c7979e0ea934034d7757097"
        ],
        [
            "Lemma first_rule_sound : forall (f: function) (lv: list value) (i: nat) (s: variable -> value) (t: term), first_rule (f, lv) = Some (i, s, t) -> { lpt : (list pattern * term)| let (lp, t') := lpt in i < length prog /\\ nth i prog rule_default = rule_intro f lp t' /\\ unify_list [] lv lp = Some s /\\ t = subst s t'}.",
            "VernacStartTheoremProof",
            "8ede12189e1dc5d2f7bb60b7833c169633e506c8"
        ],
        [
            "clear prog_is_ppo prog_is_wf.",
            "VernacExtend",
            "c9112eb964cac79721dace7ce8463f667f086937"
        ],
        [
            "unfold first_rule.",
            "VernacExtend",
            "cff67489ab11131f7d5e31c4f6caa3980561676e"
        ],
        [
            "induction prog as [ | r0 prog' IHp ]; simpl; intros f lv i s t; [ intros H; discriminate H | ].",
            "VernacExtend",
            "c691bc6f940c50c08ac8abc2351b00b8e3a40ef2"
        ],
        [
            "destruct r0 as [ f0 lp0 t0 ].",
            "VernacExtend",
            "ca00495938c09b28c2a0e9f3a7e6f5ce92fa4f61"
        ],
        [
            "case_eq (function_beq function_eq_dec f f0).",
            "VernacExtend",
            "e526f92d4809004631a5739367cd07d18eb9c5f1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro Heqf; rewrite function_beq_eq in Heqf.",
            "VernacExtend",
            "450d017e6d77173cd60e20ae584adfcd503a6ca5"
        ],
        [
            "case_eq (unify_list [] lv lp0).",
            "VernacExtend",
            "734ac8ccf1ac433eb7744f3662839f974786e17c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros s' Hs'.",
            "VernacExtend",
            "3deadcc30608da9a6aff57f4af0e4fa25bf0814d"
        ],
        [
            "intros H; injection H; clear H.",
            "VernacExtend",
            "c4600dad45c4f3ac3f36d892918ec501ca20ad26"
        ],
        [
            "intros Heqt Heqs Hi.",
            "VernacExtend",
            "9e63b1284e3dc67081549da72e516cff433f7d16"
        ],
        [
            "subst s' t f0 i.",
            "VernacExtend",
            "ef73ca9ddf48c5be6b2970d9a53c9d3b4e0b9093"
        ],
        [
            "exists (lp0, t0).",
            "VernacExtend",
            "68d7ba549878990de8d9507c1102f486bd592ab7"
        ],
        [
            "repeat split; [ apply lt_O_Sn | assumption ].",
            "VernacExtend",
            "1366445b17dfb38b87ba2606297907861874d60b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros Hnone Hrec.",
            "VernacExtend",
            "3ff07b0aff336d4ccbfaefa0e621b9dc365c73c2"
        ],
        [
            "case_eq (first_rule_rec prog' (f,lv)); [ | intros H; rewrite H in Hrec; discriminate Hrec ].",
            "VernacExtend",
            "dc88f672ce12ad69d3e49e1e4096128ee3c0c077"
        ],
        [
            "intros [ [i' s'] t'] Heq.",
            "VernacExtend",
            "995101107766662860002c77de98ca39f02f2ba8"
        ],
        [
            "rewrite Heq in Hrec.",
            "VernacExtend",
            "01b271fb8f42d9da947675e0188e7c816890110f"
        ],
        [
            "injection Hrec; clear Hrec; intros; subst.",
            "VernacExtend",
            "15d2cfa987431916b0e9c6a11b8fb732da9dcc7a"
        ],
        [
            "apply IHp in Heq.",
            "VernacExtend",
            "c8b0e3c218b328197a41aa28f81bd0cafc2da566"
        ],
        [
            "destruct Heq as [[lp t'] Hlpt].",
            "VernacExtend",
            "04a8e74542c5f57af45f883d4e89459895868ca4"
        ],
        [
            "exists (lp, t').",
            "VernacExtend",
            "0e3a2386f7cad944226ae719b1de524564cf8d82"
        ],
        [
            "repeat split; try tauto.",
            "VernacExtend",
            "73ab61bcd83816f54c2b2b79e9ba66e0a6fb0252"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros Hneq Hrec.",
            "VernacExtend",
            "113fdaec9572d97eb1153417563e97ac4eb8b1e1"
        ],
        [
            "case_eq (first_rule_rec prog' (f,lv)); [ | intros H; rewrite H in Hrec; discriminate Hrec ].",
            "VernacExtend",
            "dc88f672ce12ad69d3e49e1e4096128ee3c0c077"
        ],
        [
            "intros [ [i' s'] t'] Heq.",
            "VernacExtend",
            "995101107766662860002c77de98ca39f02f2ba8"
        ],
        [
            "rewrite Heq in Hrec.",
            "VernacExtend",
            "01b271fb8f42d9da947675e0188e7c816890110f"
        ],
        [
            "injection Hrec; clear Hrec; intros; subst.",
            "VernacExtend",
            "15d2cfa987431916b0e9c6a11b8fb732da9dcc7a"
        ],
        [
            "apply IHp in Heq.",
            "VernacExtend",
            "c8b0e3c218b328197a41aa28f81bd0cafc2da566"
        ],
        [
            "destruct Heq as [[lp t'] Hlpt].",
            "VernacExtend",
            "04a8e74542c5f57af45f883d4e89459895868ca4"
        ],
        [
            "exists (lp, t').",
            "VernacExtend",
            "0e3a2386f7cad944226ae719b1de524564cf8d82"
        ],
        [
            "repeat split; try tauto.",
            "VernacExtend",
            "73ab61bcd83816f54c2b2b79e9ba66e0a6fb0252"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition active_term_order_superset_dec: forall (t t': active_term), {active_term_order_superset t t'} + {~ active_term_order_superset t t'}.",
            "VernacDefinition",
            "67e7524786d3033819b9f09a2b4a7d88bda8b1b8"
        ],
        [
            "intros t t'.",
            "VernacExtend",
            "1a11ecbf44f63725f73866eddd0619daa5e00ad9"
        ],
        [
            "apply lex_prod_dec.",
            "VernacExtend",
            "43eef518d26517c3a122afb7df705bd94faa8de6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply eq_nat_dec.",
            "VernacExtend",
            "536650fad05f5969715904f755cca79b8956a9cb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply lt_dec.",
            "VernacExtend",
            "6ecc60f8ce71fd0f0a0fc29d88300bc73f3c090a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold value_list_order.",
            "VernacExtend",
            "316f8257eb8841437f523a6e1a2e1ae0f3d0c7c9"
        ],
        [
            "apply lt_dec.",
            "VernacExtend",
            "6ecc60f8ce71fd0f0a0fc29d88300bc73f3c090a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition lex : (active_term * term) -> (active_term * term) -> Prop := lexprod active_term_order_superset term_order.",
            "VernacDefinition",
            "6cd178c88b3378e9fd1e9f6459e2954598c37a5a"
        ],
        [
            "Lemma wf_lex : well_founded lex.",
            "VernacStartTheoremProof",
            "4d4aa0cd8141eac27c05c455ee497ba0b5990971"
        ],
        [
            "exact (wf_lexprod active_term_order_superset_wf term_order_wf).",
            "VernacExtend",
            "9c85c8acafe49502d44c01cb7a69a98c21826163"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_terms_trans t1 t2 t3: In t1 (sub_terms variable function constructor t2) -> In t2 (sub_terms _ _ _ t3) -> In t1 (sub_terms _ _ _ t3).",
            "VernacStartTheoremProof",
            "62870eaab6daddddeeceeb153650ee805fbee986"
        ],
        [
            "induction t3 using term_ind2; intros H1 H2; simpl in *.",
            "VernacExtend",
            "3c51975214b5902f946a435796cc82d35f3b3934"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H2 as [Heq | Hf].",
            "VernacExtend",
            "03c1035fe34e1f29dfde910d82f8831f05daa799"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst t2.",
            "VernacExtend",
            "e4dd57e9b9492f7f098f4c9b9f0931631f282df4"
        ],
        [
            "left; now inversion H1.",
            "VernacExtend",
            "e3c435d6c8a957c32dd12970bfc41f19b38682fb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion Hf.",
            "VernacExtend",
            "f0fa7629d2f2e1505c0b86ac0753626551818277"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H2 as [Heq |Hin].",
            "VernacExtend",
            "7d7b00a2de5383e42ae16483f7d911a31d659e6d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst t2.",
            "VernacExtend",
            "e4dd57e9b9492f7f098f4c9b9f0931631f282df4"
        ],
        [
            "exact H1.",
            "VernacExtend",
            "c03ab82d1e411e1dcd211c59917a4946e039be00"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite in_flat_map in *.",
            "VernacExtend",
            "6d601231f12f50562c8962da7ec35bbf406c8f93"
        ],
        [
            "destruct Hin as (x & Hin & Hx).",
            "VernacExtend",
            "2128be89b23f02034995b04dd5aa8b5fba5c8642"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split; [exact Hin |].",
            "VernacExtend",
            "8e807754c3b22f34fe3ecbc6902427e96501da80"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H2 as [Heq |Hin].",
            "VernacExtend",
            "7d7b00a2de5383e42ae16483f7d911a31d659e6d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst t2.",
            "VernacExtend",
            "e4dd57e9b9492f7f098f4c9b9f0931631f282df4"
        ],
        [
            "exact H1.",
            "VernacExtend",
            "c03ab82d1e411e1dcd211c59917a4946e039be00"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite in_flat_map in *.",
            "VernacExtend",
            "6d601231f12f50562c8962da7ec35bbf406c8f93"
        ],
        [
            "destruct Hin as (x & Hin & Hx).",
            "VernacExtend",
            "2128be89b23f02034995b04dd5aa8b5fba5c8642"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split; [exact Hin |].",
            "VernacExtend",
            "8e807754c3b22f34fe3ecbc6902427e96501da80"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_terms_strict_trans t1 t2 t3: In t1 (sub_terms_strict variable function constructor t2) -> In t2 (sub_terms_strict _ _ _ t3) -> In t1 (sub_terms_strict _ _ _ t3).",
            "VernacStartTheoremProof",
            "0b29003705ae5a8a12059f8aaa3017a825bd314e"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "destruct t3.",
            "VernacExtend",
            "34afc146341b140988849608a699e505b8fbb9bf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H2.",
            "VernacExtend",
            "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "apply in_flat_map in H2.",
            "VernacExtend",
            "22e55639797c5a4c362fcc2a134042847198c591"
        ],
        [
            "apply sub_term_strict_incl in H1.",
            "VernacExtend",
            "5d640af8aeba683a92b7f8fa7da6c622b77d5912"
        ],
        [
            "destruct H2 as (x & Hin & Hx).",
            "VernacExtend",
            "72cb4393579c0538bd0da56e0d7bef864ea2284c"
        ],
        [
            "apply in_flat_map.",
            "VernacExtend",
            "965566958621c742b363bd954504ea862973ec4d"
        ],
        [
            "exists x; split; [exact Hin | now apply sub_terms_trans with t2].",
            "VernacExtend",
            "8dd5743df2718cb5b33617fd8b0b1dc744cad7c7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "apply in_flat_map in H2.",
            "VernacExtend",
            "22e55639797c5a4c362fcc2a134042847198c591"
        ],
        [
            "apply sub_term_strict_incl in H1.",
            "VernacExtend",
            "5d640af8aeba683a92b7f8fa7da6c622b77d5912"
        ],
        [
            "destruct H2 as (x & Hin & Hx).",
            "VernacExtend",
            "72cb4393579c0538bd0da56e0d7bef864ea2284c"
        ],
        [
            "apply in_flat_map.",
            "VernacExtend",
            "965566958621c742b363bd954504ea862973ec4d"
        ],
        [
            "exists x; split; [exact Hin | now apply sub_terms_trans with t2].",
            "VernacExtend",
            "8dd5743df2718cb5b33617fd8b0b1dc744cad7c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lex_trans a1 a2 a3: lex a1 a2 -> lex a2 a3 -> lex a1 a3.",
            "VernacStartTheoremProof",
            "13e693a5e39eaa5f82477e4b84f373a3f22eddc0"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "refine (lexprod_trans _ _ H1 H2).",
            "VernacExtend",
            "3d00c328010442dd09f169b570ac921fc67bbc4c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x1 x2 x3 Hx1 Hx2.",
            "VernacExtend",
            "68173d790230357b3c414669491a255281089509"
        ],
        [
            "refine (lexprod_trans lt_trans _ Hx1 Hx2).",
            "VernacExtend",
            "d786b4fddf5f544f1f20def03310b27f7f4cf77c"
        ],
        [
            "intros v1 v2 v3 Hv1 Hv2.",
            "VernacExtend",
            "7553b790d0b72a969300c82287c34c197354fbe7"
        ],
        [
            "eapply lt_trans; [exact Hv1 | exact Hv2].",
            "VernacExtend",
            "41ad7f597ad054b3200663eded49158d413fb3c3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply sub_terms_strict_trans; eauto.",
            "VernacExtend",
            "7f64408312e90ff96718257bd7eb5a9b7edede84"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive list_order {A : Type} (R : A -> A -> Prop) : list A -> list A -> Prop := | lo_cons: forall l1 l2 h, Forall (fun x => R x h) l1 -> list_order R (l1 ++ l2) (h :: l2).",
            "VernacInductive",
            "bfe43f38ac9066220ec349438ffbdc0f6f8f7889"
        ],
        [
            "Definition W {A : Type} (R : A -> A -> Prop) (l : list A) : Prop := Acc (list_order R) l.",
            "VernacDefinition",
            "a3a91602607394d56585f7b319212f935cef0ca8"
        ],
        [
            "Lemma deuxpointun (A : Type) (R : A -> A -> Prop) (l : list A) (a : A) : (forall b, R b a -> forall l', W R l' -> W R (b :: l')) -> W R l -> W R (a :: l).",
            "VernacStartTheoremProof",
            "b78b775162983bc66c6abf079f6f55b90a29687e"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "constructor; intros l' Hlo.",
            "VernacExtend",
            "288773ed7145e10745433d2916852a1ab830386a"
        ],
        [
            "inversion Hlo; subst.",
            "VernacExtend",
            "6b5fc6b86f2c0aa3f4e87d0824673b322de65e05"
        ],
        [
            "induction l1.",
            "VernacExtend",
            "dfeb7bb70eb7390d22f3eada025c33a176cd1338"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assert (Ha0 : R a0 a) by (inversion H3; assumption).",
            "VernacExtend",
            "92ddc7de4a2f13f60230e7c5838e860528fb7031"
        ],
        [
            "apply (H1 a0 Ha0).",
            "VernacExtend",
            "6a004f3f4b9a35e13fdb0bf711371263d43cdb7e"
        ],
        [
            "unfold W.",
            "VernacExtend",
            "10e49b3ff2c19466718e058f2acc5b32b7cb3e24"
        ],
        [
            "apply IHl1; try constructor; inversion H3; assumption.",
            "VernacExtend",
            "d60cbc4c5f2ada4f88aa77b412630762a1259327"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma deuxpointdeux (A : Type) (R : A -> A -> Prop) (l : list A) (a : A) : (forall b, R b a -> forall l, W R l -> W R (b :: l)) -> (forall l, W R l -> W R (a :: l)).",
            "VernacStartTheoremProof",
            "796f968a17260bbd04f6e92e86eea35c3baef76d"
        ],
        [
            "intros H l' Hacc.",
            "VernacExtend",
            "c6460dfc96625d33a289d807c56e9f633cd8d7d4"
        ],
        [
            "induction Hacc as [l'' Hl'' _].",
            "VernacExtend",
            "7df70f54f03432a75030c0009dbaa27434221924"
        ],
        [
            "apply deuxpointun.",
            "VernacExtend",
            "d9b4a58fdf7ed412aa76bab8793c14cf039ac945"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros b Hb l' Hl'.",
            "VernacExtend",
            "fcbe60c04c782c4e2535c86e14ea6d0bb1996cf5"
        ],
        [
            "now apply H.",
            "VernacExtend",
            "e28edffe226486c29d50d204164561fb199b8c97"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now constructor.",
            "VernacExtend",
            "e001978ec065ef0fd63cb804e72fb73890e93711"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma deuxpointtrois (A : Type) (R : A -> A -> Prop) (l : list A) (a : A) : well_founded R -> W R l -> W R (a :: l).",
            "VernacStartTheoremProof",
            "96eb944974fb0cb571cdf2afad7cb8f50b4f28f4"
        ],
        [
            "intros HR.",
            "VernacExtend",
            "de2ecf6a8d85047b019b75abc4c29fdbd3961e36"
        ],
        [
            "revert l.",
            "VernacExtend",
            "11a722880df1bc386870f9ce37f36e8be2871e9c"
        ],
        [
            "induction (HR a).",
            "VernacExtend",
            "a26b7bd9705d6a83d807bdffa604b23ae830c2a5"
        ],
        [
            "intros l Hl.",
            "VernacExtend",
            "73c348d1ec294870f643ef6a781f4b0c88e45247"
        ],
        [
            "eapply deuxpointdeux; [ exact l | | exact Hl ].",
            "VernacExtend",
            "7079c034d1de2e1e211d17d30aeb49beb3e6f7cf"
        ],
        [
            "intros b Hb l' Hl'.",
            "VernacExtend",
            "fcbe60c04c782c4e2535c86e14ea6d0bb1996cf5"
        ],
        [
            "now apply H0.",
            "VernacExtend",
            "ab5307f8a9444f9e7d521e7a802d135557791140"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_order_wf (A : Type) (R : A -> A -> Prop) : well_founded R -> well_founded (list_order R).",
            "VernacStartTheoremProof",
            "2c94e30c93fa06de235e80cd9a1f39f0dbce3d85"
        ],
        [
            "intro HwfR.",
            "VernacExtend",
            "9538099914433bcc890349d27e2b0a4215544d61"
        ],
        [
            "intro l.",
            "VernacExtend",
            "c8139627914eb6a3cf51966a8a1d73a6c51f81e7"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply deuxpointtrois.",
            "VernacExtend",
            "d8a544cb687c608b45428a5d0135338c99868815"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma product_suml_lt l1 l2 : product lt l1 l2 -> suml l1 < suml l2.",
            "VernacStartTheoremProof",
            "33ad4d50564075f22fca071de6685a464df720ec"
        ],
        [
            "intro Hprod.",
            "VernacExtend",
            "49e567f04cbff82f1da0044b2702314fe931525e"
        ],
        [
            "induction Hprod.",
            "VernacExtend",
            "76c3eff3fe79762c91980f771c7ff0945cf59551"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; subst; omega.",
            "VernacExtend",
            "45d07537c6e0d4294ce567dbafc374c5b83b1b66"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply plus_lt_le_compat; [assumption|].",
            "VernacExtend",
            "eea694e78e3ce4ce135b38febd52480840ee84c4"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (x0 <= y0) by (destruct H0; omega).",
            "VernacExtend",
            "c3c98d8417cf83250ec178fb78b30e603b0ef252"
        ],
        [
            "simpl; omega.",
            "VernacExtend",
            "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PPO_active_term_order_superset act act' : PPO rank (term_from_active_term act) (term_from_active_term act') -> active_term_order_superset act act'.",
            "VernacStartTheoremProof",
            "eb210513db81c5985517038a2cda56e5e55a7f6a"
        ],
        [
            "intro HPPO.",
            "VernacExtend",
            "188b6205b861f0d2ebc47a788f093fbbe23771ab"
        ],
        [
            "destruct act as (f & lv).",
            "VernacExtend",
            "e27f361756fd176a434746fa4736c62f7b9fb3ca"
        ],
        [
            "destruct act' as (f' & lv').",
            "VernacExtend",
            "d113caf3e6087af3943e2fef2d96a60836504df9"
        ],
        [
            "simpl in HPPO.",
            "VernacExtend",
            "7ec6e3e305c1d28ed7be570eec5118d5b4b0ea57"
        ],
        [
            "inversion HPPO; subst.",
            "VernacExtend",
            "bbd746a05b6dbff3daabe7a61f9809c4fa689a43"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply in_map_iff in H1.",
            "VernacExtend",
            "ed0d83e98a1c06c0aa42676b7a93572bb9f37dc1"
        ],
        [
            "destruct H1 as (v & Hv & _).",
            "VernacExtend",
            "919e15aed46dbe2b8044fb2f9e242a10447cdc21"
        ],
        [
            "destruct v.",
            "VernacExtend",
            "6f1469bc2ceb2b76ca58f6ada86b5fc3c1e42ed3"
        ],
        [
            "inversion Hv.",
            "VernacExtend",
            "f85af1c14e3327a53db0b9b8ce628a4672fb7541"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply in_map_iff in H2.",
            "VernacExtend",
            "5b8eaf7deadf259415680da39c8f858bb752000f"
        ],
        [
            "destruct H2 as (v & Hv & _).",
            "VernacExtend",
            "ffca81de608cc5a60f607c9347e111f2df5f9dab"
        ],
        [
            "subst t.",
            "VernacExtend",
            "9a338ade929583d1d9999c5f080f6e2c965d6617"
        ],
        [
            "contradict H3.",
            "VernacExtend",
            "4165cfca2fce31090e02fe156593ea5578faed3a"
        ],
        [
            "apply fapply_not_PPO_value; trivial.",
            "VernacExtend",
            "3269ac53de93a53a628e679d08a8c54b228baa0a"
        ],
        [
            "apply term_value_eqv; eauto.",
            "VernacExtend",
            "fb19b4f24355aaa8ce66a9fb843cffed135f99e1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold active_term_order_superset.",
            "VernacExtend",
            "d94512b09138ff6d9b12546d693f6448d45c3d26"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold value_list_order.",
            "VernacExtend",
            "316f8257eb8841437f523a6e1a2e1ae0f3d0c7c9"
        ],
        [
            "apply product_suml_lt.",
            "VernacExtend",
            "3f4fc65552908534441a7bd8611ec7428b5f010f"
        ],
        [
            "clear f f' H2 HPPO.",
            "VernacExtend",
            "d11885245a38c0217aec8b81e6509e7ee8291b73"
        ],
        [
            "revert H4; intros Hppo.",
            "VernacExtend",
            "74a52a84bbe2cece3bfb01fb2a8c914ea3e3475c"
        ],
        [
            "assert (Hlen := Hppo).",
            "VernacExtend",
            "0b131e097c0679653683f8be9db6948dde230d62"
        ],
        [
            "apply product_length in Hlen.",
            "VernacExtend",
            "da7b6e20e063c7da386cd29d77e481efe6fb1c89"
        ],
        [
            "do 2 rewrite map_length in Hlen.",
            "VernacExtend",
            "e9a11ba5c3cb169c03e228b605e045fee7a3f087"
        ],
        [
            "revert lv' Hppo Hlen; induction lv as [ | v lv IH ]; intros lv' Hppo Hlen; destruct lv' as [ | v' lv' ]; simpl in *; try discriminate Hlen.",
            "VernacExtend",
            "152d22a49ddde4980329db7fbe5770405a2ae638"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion Hppo.",
            "VernacExtend",
            "214544f66d329945efd5f2865632086f78d08f81"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "revert Hppo; set (lt := map (@term_from_value _ _ _) lv : list term); set (lt' := map (@term_from_value _ _ _) lv' : list term); intros Hppo.",
            "VernacExtend",
            "cf5c840a24b1d057131dbdd99aa863aadf04d610"
        ],
        [
            "apply eq_add_S in Hlen.",
            "VernacExtend",
            "0330ce76858d52621da4253fe772d01712ea4606"
        ],
        [
            "inversion Hppo; subst.",
            "VernacExtend",
            "cd5e21ec88ce0df86f2ef9a3b28c84acfeeba3a1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply term_from_value_injective in H2; subst v'.",
            "VernacExtend",
            "566f988c266c1c0174a262a6d959a477e3bc8d5c"
        ],
        [
            "apply product_conseq; trivial.",
            "VernacExtend",
            "66a3f52774b118215d6557ac0da8b653c429958b"
        ],
        [
            "apply IH; assumption.",
            "VernacExtend",
            "f9f8ef31ef77851f5c4278a715710f039242a24e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply product_consst; [ apply (PPO_value_lt_size variable function) with (rank := rank); assumption | ].",
            "VernacExtend",
            "32b4eb5195ce6cd35050a592b9da3cc21b02e3ce"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear Hppo v v' IH H2; revert lt lv' lt' Hlen H4; induction lv as [ | v lv IH ]; intros lt lv' lt' Hlen Hfor; destruct lv' as [ | v' lv' ]; [ constructor | inversion Hlen | inversion Hlen | ].",
            "VernacExtend",
            "e2b1aed3f065aeebb6855b7984709d9f658ff329"
        ],
        [
            "subst lt lt'.",
            "VernacExtend",
            "5a76d2e1b5e8395ab7189fdf393cc96b6623b774"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "apply eq_add_S in Hlen.",
            "VernacExtend",
            "0330ce76858d52621da4253fe772d01712ea4606"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion Hfor; subst.",
            "VernacExtend",
            "20c749fb3f7d0cbadcc409d5cb21d177129ba41f"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply (PPO_value_lt_size variable function) with (rank := rank); assumption.",
            "VernacExtend",
            "c8e040c5139ab6e29574b4380051cb8afc338362"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply (@term_from_value_injective variable function); assumption.",
            "VernacExtend",
            "61929b9777cdb23ea9e79412b4291606ced606a3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IH; [ | inversion Hfor ]; assumption.",
            "VernacExtend",
            "988ac609218278e08a47bb1d01924b2fb39665da"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma term_order_PPO t1 t2 : term_order t1 t2 -> PPO rank t1 t2.",
            "VernacStartTheoremProof",
            "809b9818641fc7efddb19ebbd16e824e1cce5c0d"
        ],
        [
            "intro Horder.",
            "VernacExtend",
            "07842f29592f2ca0b50565ad62fa6b22ba669a63"
        ],
        [
            "unfold term_order in Horder.",
            "VernacExtend",
            "949fd5f6de55f77bd74ab297155b2626cce17442"
        ],
        [
            "induction t2 using term_ind2.",
            "VernacExtend",
            "48e6fc158a5511b9e295c4b29eeb5fd891502cd5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion Horder.",
            "VernacExtend",
            "05f82409c84c278fa1fdb98e59e0119f0ff93e0b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in Horder.",
            "VernacExtend",
            "c4f041b94c0d15a30184b58b79bf86ce7cc28b5e"
        ],
        [
            "apply in_flat_map in Horder.",
            "VernacExtend",
            "1885acbd31f43d0925301bba94aa06165ee10f81"
        ],
        [
            "destruct Horder as (t' & Hin & Ht').",
            "VernacExtend",
            "6b3ada70e137c63fc9a5aa39e4a1122a5d08f5dd"
        ],
        [
            "apply PPO_trans_eq with t'.",
            "VernacExtend",
            "6fb30b04e938fb5c3aa0edc3a6cc042b920abaa6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply sub_term_eq_or_strict in Ht'.",
            "VernacExtend",
            "51f45502341b75e3fa6fa3b350c9abd2b5344941"
        ],
        [
            "destruct Ht' as [Heq | Ht'].",
            "VernacExtend",
            "59a700716ca9d782165cd6405eaced6b747c3407"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "now subst; right.",
            "VernacExtend",
            "04e9f47c001c9ad3302700c5bf692d3f106ef0f9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left; apply H; assumption.",
            "VernacExtend",
            "0b6b3f2e09b093cc7d4b841eb77476b468d58f35"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply ppo_constr_in.",
            "VernacExtend",
            "13917ab5aa609e226121ec23b3ceba0a20fca06a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in Horder.",
            "VernacExtend",
            "c4f041b94c0d15a30184b58b79bf86ce7cc28b5e"
        ],
        [
            "apply in_flat_map in Horder.",
            "VernacExtend",
            "1885acbd31f43d0925301bba94aa06165ee10f81"
        ],
        [
            "destruct Horder as (t' & Hin & Ht').",
            "VernacExtend",
            "6b3ada70e137c63fc9a5aa39e4a1122a5d08f5dd"
        ],
        [
            "apply PPO_trans_eq with t'.",
            "VernacExtend",
            "6fb30b04e938fb5c3aa0edc3a6cc042b920abaa6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply sub_term_eq_or_strict in Ht'.",
            "VernacExtend",
            "51f45502341b75e3fa6fa3b350c9abd2b5344941"
        ],
        [
            "destruct Ht' as [Heq | Ht'].",
            "VernacExtend",
            "59a700716ca9d782165cd6405eaced6b747c3407"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "now subst; right.",
            "VernacExtend",
            "04e9f47c001c9ad3302700c5bf692d3f106ef0f9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left; apply H; assumption.",
            "VernacExtend",
            "0b6b3f2e09b093cc7d4b841eb77476b468d58f35"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply ppo_fun_in.",
            "VernacExtend",
            "01a29161be802324f5d78e954124570aaa4ee54a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_arity_subst s t f lp : rule_vars_defined (rule_intro f lp t) -> let t' := fapply f (map (fun p => term_from_value variable function (@psubst variable constructor s p)) lp) in max_arity_term (subst s t) <= Nat.max (max_arity_rule (rule_intro f lp t)) (max_arity_term t').",
            "VernacStartTheoremProof",
            "2dc5f2260b7b07756ce64750b130cea814a53dec"
        ],
        [
            "intros Hvars t'.",
            "VernacExtend",
            "9eb2c0580678e130b8a406cc768e93cbd09b62ff"
        ],
        [
            "assert (Hn : forall x, In x (vars_of_term t) -> max_arity_term (term_from_value variable function (s x)) <= max_arity_term t').",
            "VernacExtend",
            "8c808983a39e3ccae8837bd1e191861d945f858d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "subst t'.",
            "VernacExtend",
            "fbf96dac500541bc01a531f132a34f424d40e1d9"
        ],
        [
            "intros x Hx; apply Hvars in Hx; simpl.",
            "VernacExtend",
            "9d35b0ac1f327c7dfd99ae71b13b6f39a87bc7f1"
        ],
        [
            "rewrite PeanoNat.Nat.max_le_iff; right.",
            "VernacExtend",
            "e8bb6176d6d915481c9f41cac23c63d2ef7a91d3"
        ],
        [
            "clear t f Hvars.",
            "VernacExtend",
            "555ec557c6f61af679c557f696068bfdd5b0b3df"
        ],
        [
            "rewrite in_flat_map in Hx; destruct Hx as (p & Hp & Hvars).",
            "VernacExtend",
            "af2fa5321bfd0187e69634118813be22031d34a0"
        ],
        [
            "transitivity (max_arity_term (term_from_value variable function (psubst s p))).",
            "VernacExtend",
            "0324d70b33e589bc1b10a2c59b3e07b4fddfb5c6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "clear lp Hp; revert x Hvars.",
            "VernacExtend",
            "b783ed9649502eb1cad24947346f2ba745e54ed1"
        ],
        [
            "induction p as [ x | c lp IH ] using pattern_ind2.",
            "VernacExtend",
            "99f00ad4fe62c83cec21038e281cebd61dfc6964"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x' H; destruct H; [ subst x' | ]; easy.",
            "VernacExtend",
            "55605f1e4e28d584e7ea83d27589d17e5408d053"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros x Hx; simpl in Hx.",
            "VernacExtend",
            "b42cc69571268c9442a5ff65922f4d69419fdd9e"
        ],
        [
            "apply in_flat_map in Hx; destruct Hx as (p & Hp & Hvars).",
            "VernacExtend",
            "d3b5979c2e21fb0b66116de848d8c46997fae135"
        ],
        [
            "transitivity (max_arity_term (term_from_value variable function (psubst s p))).",
            "VernacExtend",
            "0324d70b33e589bc1b10a2c59b3e07b4fddfb5c6"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "now apply IH.",
            "VernacExtend",
            "f55d33d07a7d04fb33e00d25db71d556dde4e829"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PeanoNat.Nat.max_le_iff; right.",
            "VernacExtend",
            "e8bb6176d6d915481c9f41cac23c63d2ef7a91d3"
        ],
        [
            "now apply maxl_is_max, in_map, in_map, in_map.",
            "VernacExtend",
            "3130593e9ba95979fbc2f0aca5d48fdb7408b84c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply maxl_is_max, in_map.",
            "VernacExtend",
            "62ed2ee1bfd74175ec7e23f76679d9cf909139e3"
        ],
        [
            "set (t := term_from_value _ _ _); change (term_from_value _ _ _) with ((fun p => term_from_value variable function (psubst s p)) p) in t; subst t.",
            "VernacExtend",
            "4a567457671dc72ab273da42b0d54d39775607e1"
        ],
        [
            "now apply in_map.",
            "VernacExtend",
            "eeb5dd751e54ba9ce367b7ed6d4a90d81f16a135"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "remember (max_arity_term t') as n eqn: Heq; clear Heq.",
            "VernacExtend",
            "cd925f15244adfa5b4b1171fb5c2f18d4f354e2a"
        ],
        [
            "transitivity (Nat.max (max_arity_term t) n).",
            "VernacExtend",
            "dec0adde9a1c5dfa966f1f14dcb4c42b1fba4d8b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "clear f lp t' Hvars.",
            "VernacExtend",
            "bb5615090499484bde98b62541b11a0592356449"
        ],
        [
            "induction t as [ x | c lt IH | f lt IH ] using term_ind2.",
            "VernacExtend",
            "236623bdb85ed70cd102e85c7d98d6cdeda31474"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl; apply Hn.",
            "VernacExtend",
            "7d2b825f3d1f64412704eb4e0561be3c6fa04486"
        ],
        [
            "simpl; now left.",
            "VernacExtend",
            "d154ae9cc12cbc8ac64f7a724f65c8b5f97e2928"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl; rewrite <- Max.max_assoc.",
            "VernacExtend",
            "e87d82c70f692067cfa19335b56815c1059249e0"
        ],
        [
            "apply Nat.max_le_compat; [ now rewrite map_length | ].",
            "VernacExtend",
            "f2b7bd7ebd189b5547cfacf7867ae15ce4677541"
        ],
        [
            "simpl in Hn; clear c.",
            "VernacExtend",
            "0365346d0dc77aa62693627456392faf7c35d5bc"
        ],
        [
            "induction lt as [ | t lt IHlt ]; [ now apply le_O_n | ].",
            "VernacExtend",
            "b3a9ad4a979bfc889163a9552e4995a424662bfc"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "set (ml := maxl _) at 2.",
            "VernacExtend",
            "111bc15a2a0e498b0998f18b163c1f6abcd24a6f"
        ],
        [
            "replace (Nat.max (Nat.max (max_arity_term t) ml) n) with (Nat.max (Nat.max (max_arity_term t) n) (Nat.max ml n)); [ | now rewrite <- Max.max_assoc, (Max.max_assoc n), (Max.max_comm n), <- (Max.max_assoc ml), Max.max_idempotent, Max.max_assoc ].",
            "VernacExtend",
            "3344c8b1683c08a43a91414cfac647c1c78fb046"
        ],
        [
            "subst ml; apply Nat.max_le_compat.",
            "VernacExtend",
            "a77b63caf54279f8d059ecbb459346e755ff5039"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IH; [ now left | ].",
            "VernacExtend",
            "f251ac51825efbc407b0ccc7925ca3b42479ead5"
        ],
        [
            "intros x Hx; apply Hn.",
            "VernacExtend",
            "b74f64833c2eb6253c9d1702a2f1e29472af7047"
        ],
        [
            "now simpl; apply in_or_app; left.",
            "VernacExtend",
            "94c6e1314ee6cb8d3dfbfaa627684803d7998795"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IHlt.",
            "VernacExtend",
            "d75a8eccf17fb799e59a12ac63ac97488afa94ac"
        ],
        [
            "now intros t' Ht'; apply IH; right.",
            "VernacExtend",
            "8cc32ea702d6f7a76b4d0c4d4f3ced66bc53bcf0"
        ],
        [
            "now intros x Hx; apply Hn; simpl; apply in_or_app; right.",
            "VernacExtend",
            "7fb534fb84d0e817e35ea18172e1dc21ab7a3566"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl; rewrite <- Max.max_assoc.",
            "VernacExtend",
            "e87d82c70f692067cfa19335b56815c1059249e0"
        ],
        [
            "apply Nat.max_le_compat; [ now rewrite map_length | ].",
            "VernacExtend",
            "f2b7bd7ebd189b5547cfacf7867ae15ce4677541"
        ],
        [
            "simpl in Hn; clear f.",
            "VernacExtend",
            "b4bdcaad31bdf309d347d30f1d59c70147cd7dce"
        ],
        [
            "induction lt as [ | t lt IHlt ]; [ now apply le_O_n | ].",
            "VernacExtend",
            "b3a9ad4a979bfc889163a9552e4995a424662bfc"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "set (ml := maxl _) at 2.",
            "VernacExtend",
            "111bc15a2a0e498b0998f18b163c1f6abcd24a6f"
        ],
        [
            "replace (Nat.max (Nat.max (max_arity_term t) ml) n) with (Nat.max (Nat.max (max_arity_term t) n) (Nat.max ml n)); [ | now rewrite <- Max.max_assoc, (Max.max_assoc n), (Max.max_comm n), <- (Max.max_assoc ml), Max.max_idempotent, Max.max_assoc ].",
            "VernacExtend",
            "3344c8b1683c08a43a91414cfac647c1c78fb046"
        ],
        [
            "subst ml; apply Nat.max_le_compat.",
            "VernacExtend",
            "a77b63caf54279f8d059ecbb459346e755ff5039"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IH; [ now left | ].",
            "VernacExtend",
            "f251ac51825efbc407b0ccc7925ca3b42479ead5"
        ],
        [
            "intros x Hx; apply Hn.",
            "VernacExtend",
            "b74f64833c2eb6253c9d1702a2f1e29472af7047"
        ],
        [
            "now simpl; apply in_or_app; left.",
            "VernacExtend",
            "94c6e1314ee6cb8d3dfbfaa627684803d7998795"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IHlt.",
            "VernacExtend",
            "d75a8eccf17fb799e59a12ac63ac97488afa94ac"
        ],
        [
            "now intros t' Ht'; apply IH; right.",
            "VernacExtend",
            "8cc32ea702d6f7a76b4d0c4d4f3ced66bc53bcf0"
        ],
        [
            "now intros x Hx; apply Hn; simpl; apply in_or_app; right.",
            "VernacExtend",
            "7fb534fb84d0e817e35ea18172e1dc21ab7a3566"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply PeanoNat.Nat.max_le_compat_r.",
            "VernacExtend",
            "c5cb395ef724796ded5f9031d40ae33d41f6ab80"
        ],
        [
            "now apply PeanoNat.Nat.le_max_l.",
            "VernacExtend",
            "cfd27a837189ed895e555ff33018360e00b59e94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma first_rule_max_arity act t i s : wf_prog max_arity prog -> first_rule act = Some (i, s, t) -> max_arity_term (term_from_active_term act) <= max_arity -> max_arity_term t <= max_arity.",
            "VernacStartTheoremProof",
            "85f8dd2890473b3f01b69b8c8e72a4a5a8107ca6"
        ],
        [
            "intros Hwfprog Hrule.",
            "VernacExtend",
            "cd2019ee28f706104ab960cb07e601fc8628d3dc"
        ],
        [
            "destruct act as [f lv].",
            "VernacExtend",
            "7caddf72f3bd76cc5eb7f9f22dacd3b76b8d609c"
        ],
        [
            "apply first_rule_sound in Hrule.",
            "VernacExtend",
            "59111f3f6ca025fa5f6822fd7b06d3148e1f1203"
        ],
        [
            "destruct Hrule as ([lp' t''] & Hlengthi & Heqi & Hunify_list & Hsubst).",
            "VernacExtend",
            "9c6268a161907d30896cc5d69eeb559983d3c1db"
        ],
        [
            "subst t.",
            "VernacExtend",
            "9a338ade929583d1d9999c5f080f6e2c965d6617"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply max_arity_subst with (f := f) (lp := lp').",
            "VernacExtend",
            "ba37efc63b2715e5cddaf75518318bdf9d3eda55"
        ],
        [
            "eapply andl_in; [ apply Hwfprog | ].",
            "VernacExtend",
            "32a86838cac351f7156e39f87b45941ddbbf2017"
        ],
        [
            "apply in_map.",
            "VernacExtend",
            "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
        ],
        [
            "rewrite <- Heqi.",
            "VernacExtend",
            "759c299a9dcc183b1a92c05c888ced0da02c6107"
        ],
        [
            "now apply nth_In.",
            "VernacExtend",
            "c61bd494392168b1648e077fd6c015f55b6a8fbf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Max.max_lub.",
            "VernacExtend",
            "163833e2beceffcd7da3ed39d5892836dcc7955b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "etransitivity; [ apply maxl_is_max | apply Hwfprog].",
            "VernacExtend",
            "56ffc7531dc245eb808d5ead1f7579969882ec16"
        ],
        [
            "apply in_map.",
            "VernacExtend",
            "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
        ],
        [
            "rewrite <- Heqi.",
            "VernacExtend",
            "759c299a9dcc183b1a92c05c888ced0da02c6107"
        ],
        [
            "apply nth_In; trivial.",
            "VernacExtend",
            "0aa084d71d69e1b8a87a1025ff7a9ca7a09fd7b0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- map_map.",
            "VernacExtend",
            "7d0748d0da0977436d7d855d92d9c2890414c6d7"
        ],
        [
            "erewrite unify_list_sound; eauto.",
            "VernacExtend",
            "153c876eb02b0f01f4031d6a31d5fd0880bee38c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive evaluates : term -> value -> Prop := | CAPPLY : forall lt lv c, evaluates_list lt lv -> evaluates (capply c lt) (c_capply c lv) | FAPPLY : forall lt lv f v i s t, evaluates_list lt lv -> first_rule (f, lv) = Some (i, s, t) -> evaluates t v -> evaluates (fapply f lt) v with evaluates_list : list term -> list value -> Prop := | E_nil : evaluates_list [] [] | E_cons : forall t v lt lv, evaluates t v -> evaluates_list lt lv -> evaluates_list (t :: lt) (v :: lv).",
            "VernacInductive",
            "f8fecc1ba418d1dfc08a2d6e85874cb748b786c8"
        ],
        [
            "Scheme evaluates_mut := Induction for evaluates Sort Prop with evaluates_list_mut := Induction for evaluates_list Sort Prop.",
            "VernacScheme",
            "1dd26df7b8d411dfba1372ba362e908268b25c23"
        ],
        [
            "Lemma evaluates_ind2 : forall P, (forall lt lv c, Forall2 evaluates lt lv -> Forall2 P lt lv -> P (capply c lt) (c_capply c lv)) -> (forall lt lv f i s v t, Forall2 evaluates lt lv -> Forall2 P lt lv -> first_rule (f, lv) = Some (i, s, t) -> evaluates t v -> P t v -> P (fapply f lt) v) -> forall (t : term) (v : value), evaluates t v -> P t v.",
            "VernacStartTheoremProof",
            "b81828e432f394c84d76ac12563a26953c09fc77"
        ],
        [
            "intros P Hc Hf t v He.",
            "VernacExtend",
            "588f287af08c62c66b36bd76cce17e1b6cf7b2f8"
        ],
        [
            "induction He using evaluates_mut with (P := fun t v H => P t v) (P0 := fun lt lv H => Forall2 P lt lv /\\ Forall2 evaluates lt lv).",
            "VernacExtend",
            "391b42c3b364a9f83db45cd39c65b49bc3355664"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Hc; tauto.",
            "VernacExtend",
            "7a67a0d9c2e3eb9449f9e74cbd24930bf06a5603"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply Hf; eauto; tauto.",
            "VernacExtend",
            "622aa2fddfb2779c16b7125507993f84fb997680"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; constructor; auto; tauto.",
            "VernacExtend",
            "6c3e6364692584be286b8154ce2bba0270440b44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive Forall2' (A B : Type) (R : A -> B -> Type) : list A -> list B -> Type := Forall2'_nil : Forall2' R [] [] | Forall2'_cons : forall (x : A) (y : B) (l : list A) (l' : list B), R x y -> Forall2' R l l' -> Forall2' R (x :: l) (y :: l').",
            "VernacInductive",
            "7d04e9223b81bb7ddff52ccdd2ba3a151c43593c"
        ],
        [
            "Lemma Forall2_trans_rel (A : Type) (R1 R2 : A -> A -> Prop) (l1 l2 : list A) : (forall x y, R1 x y -> R2 x y) -> Forall2 R1 l1 l2 -> Forall2 R2 l1 l2.",
            "VernacStartTheoremProof",
            "60893af203525cc6be20208d83e262152087f348"
        ],
        [
            "intros H Hall.",
            "VernacExtend",
            "0da04b6700737966124c7db4e01e28300c27636e"
        ],
        [
            "induction Hall; auto.",
            "VernacExtend",
            "f04de35e7efadfdf7600035420630e3007c2f108"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_product (A : Type) (R : A -> A -> Prop) (ls lt : list A) : ls <> [] -> Forall2 R ls lt -> product R ls lt.",
            "VernacStartTheoremProof",
            "77ed7acd7ec115e8b6dbbe35610d98390886a4ae"
        ],
        [
            "induction ls; intros Hnil Hall; try tauto.",
            "VernacExtend",
            "92dcc5a9c687459929805462f6ec72d123b69576"
        ],
        [
            "clear Hnil.",
            "VernacExtend",
            "9b3683f4efd60853e8960a5dbcfbd3290584df7a"
        ],
        [
            "destruct lt as [ | b lt]; [inversion Hall |].",
            "VernacExtend",
            "f40eeb914320dfeae8435cef66cc971f8cd59bd1"
        ],
        [
            "inversion Hall; subst.",
            "VernacExtend",
            "c1fc38c7ceec84fe4c72e06c6c3035ab5b91a20f"
        ],
        [
            "constructor 2; trivial.",
            "VernacExtend",
            "8e5a2f26e56df77c8c8c937900bf09ae229272d8"
        ],
        [
            "eapply Forall2_trans_rel.",
            "VernacExtend",
            "99f79b5f7b7d4e5f05bdb2e981f409890613d84c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros; constructor; exact H.",
            "VernacExtend",
            "23712cf09f2321ed5b9745cf1a4f3f6c63828e69"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_eq A (l1 l2 : list A) : Forall2 eq l1 l2 -> l1 = l2.",
            "VernacStartTheoremProof",
            "eb2a6dc6b3e0d7a8a20225ac602a22db07523c10"
        ],
        [
            "intro H; induction H; subst; trivial.",
            "VernacExtend",
            "ef471be080070f2a5ce7d47efe0752492235207b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma evaluates_unique t v1 v2 : evaluates t v1 -> evaluates t v2 -> v1 = v2.",
            "VernacStartTheoremProof",
            "c430e54898e6a7e3f5f44b46d3c7997b8d3bb3d0"
        ],
        [
            "intro H1; revert v2.",
            "VernacExtend",
            "16347ff164fcfa496dbf562d33e07ca1f549cd3f"
        ],
        [
            "induction H1 using evaluates_ind2.",
            "VernacExtend",
            "3b92a8fa9a56222775179eca1e5ce5710e60d7e5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros v2 H2.",
            "VernacExtend",
            "575a6e95b70d183e0b990f95cbacb9b0c614660c"
        ],
        [
            "inversion H2; subst; clear H2.",
            "VernacExtend",
            "0fe4d6346cced611a23cd7924eeac6763288ab20"
        ],
        [
            "f_equal; revert lv0 H5.",
            "VernacExtend",
            "6a7c1c7d10e4fafd2ac0fcef51517f457edb0acb"
        ],
        [
            "induction H; intros lv0 Hlv0; inversion Hlv0; trivial.",
            "VernacExtend",
            "b1a01d9914a8983fab8effc56aa314e24bc38e36"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "f_equal; inversion H0; subst; auto.",
            "VernacExtend",
            "2a72ae3444c7ac98f65fdf5a1cd53f25b54a8c0a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros v2 Hv2.",
            "VernacExtend",
            "f72398e533e0e36ab90fd8bb6b5d23e23d62fed9"
        ],
        [
            "inversion Hv2; subst; clear Hv2.",
            "VernacExtend",
            "e0f888b8bf9bff225fb0d94ce38c6e50eff375f8"
        ],
        [
            "assert (Heq : lv = lv0) by (clear H6 H1; revert lv0 H5; induction H; intros lv0 Hlv0; inversion Hlv0; trivial; subst; f_equal; inversion H0; subst; auto).",
            "VernacExtend",
            "4f6fa573f44cff54107e75cb5529b541ec9ac3f5"
        ],
        [
            "subst lv0.",
            "VernacExtend",
            "39ede4688b478d964f793d89613ef092d7f6e797"
        ],
        [
            "rewrite H6 in H1; inversion H1; subst.",
            "VernacExtend",
            "609b38eccd1fbaf7c35bba6819cae74f44e064e1"
        ],
        [
            "now apply IHevaluates.",
            "VernacExtend",
            "ee6b1f7e1d31ed3ff5ceaeb60f82e9adc126ad16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma evaluates_value v : evaluates (term_from_value _ _ v) v.",
            "VernacStartTheoremProof",
            "aee5407c31ac800f74507e4c72eae90721be57dd"
        ],
        [
            "induction v using value_ind2.",
            "VernacExtend",
            "02b343bdf4989b1155e56f3a79cb1b8a1964c78e"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "induction l as [|v lv]; constructor; auto with *.",
            "VernacExtend",
            "c0cd68e5cbf42849150fe530c8a30a505c19a44c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_nth: forall (A : Type) (l : list A) (x d : A) n, n < length l -> nth n l d = x -> x \u2208 l.",
            "VernacStartTheoremProof",
            "64dc3ef3f14a1ac267e85ae90b1b96a0d36cd3d8"
        ],
        [
            "intros A l x d n.",
            "VernacExtend",
            "d4c43cd55eea68ca94631f8d4fa8c05a1479f825"
        ],
        [
            "revert l.",
            "VernacExtend",
            "11a722880df1bc386870f9ce37f36e8be2871e9c"
        ],
        [
            "induction n; intros [ | a l]; unfold nth; simpl; intros; try tauto; try omega.",
            "VernacExtend",
            "dcf654f7e63b3486789ebacdce234f30969f46c6"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma evaluates_sound t v c: (forall (t0 : term) (v0 : value), assoc_cache t0 c = Some v0 -> evaluates t0 v0 /\\ max_arity_term (term_from_value variable function v0) <= max_arity) -> evaluates t v -> max_arity_term t <= max_arity -> exists p, wf p /\\ proj_right p = v /\\ proj_left p = t /\\ cache_left p = c /\\ max_arity_term (term_from_value variable function v) <= max_arity /\\ (forall t0 v0, assoc_cache t0 (cache_right p) = Some v0 -> evaluates t0 v0 /\\ max_arity_term (term_from_value variable function v0) <= max_arity).",
            "VernacStartTheoremProof",
            "9bcd9d13c886082fbcd315c17485c00a11e539cc"
        ],
        [
            "intros Hc Heval.",
            "VernacExtend",
            "83bc53357cabbbb5f93cebd274fe3bbd02769de7"
        ],
        [
            "revert c Hc.",
            "VernacExtend",
            "4dadcbaf60cad3f3eade25019e20785b301e07e5"
        ],
        [
            "induction Heval using evaluates_ind2; intros c0 Hc0 Harity.",
            "VernacExtend",
            "59faadb5468f967c3bad788f529577fb5ac6da8e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Hlp : exists lp c1, andl (map wf lp) /\\ map (@proj_left _ _ _) lp = lt /\\ map (@proj_right _ _ _) lp = lv /\\ cache_path variable_eq_dec function_eq_dec constructor_eq_dec c0 c1 lp = true /\\ maxl (map (@max_arity_term _ _ _) (map (@term_from_value variable function _) lv)) <= max_arity /\\ forall (t0 : term) (v : value), assoc_cache t0 c1 = Some v -> evaluates t0 v /\\ max_arity_term (term_from_value variable function v) <= max_arity ).",
            "VernacExtend",
            "acea812feab0658204b21c5f6bf168fcddbc73ad"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Harityall: forall t, In t lt -> max_arity_term t <= max_arity) by ( intros t Ht; simpl in Harity; apply Max.max_lub_r in Harity; etransitivity; [ | apply Harity]; now apply maxl_is_max, in_map).",
            "VernacExtend",
            "1041ed6bfb2d570a9c448c745cd5363f609d7ed3"
        ],
        [
            "clear Harity H.",
            "VernacExtend",
            "bfbd6e788704fb818b3f593fcaba918ff06e899b"
        ],
        [
            "revert c0 lv H0 Hc0.",
            "VernacExtend",
            "02f5a7e1cb31490c9f80ebebdeefd2574d989144"
        ],
        [
            "induction lt using rev_ind; intros c0 lv H0 Hc0.",
            "VernacExtend",
            "fee5ad0d4850809cd41781360586a4344d462ca8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists []; exists c0; simpl.",
            "VernacExtend",
            "588e278e1f0e9f50d83a5c5af17e71a68d4d6fbd"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "simpl; intuition.",
            "VernacExtend",
            "2a8f84ed3abedbe9d9fbb80aa4215114cbdbe500"
        ],
        [
            "now rewrite cache_beq_refl.",
            "VernacExtend",
            "08e4264182b69222ce4ba033c1d0b7d38e7edff2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Forall2_app_inv_l in H0.",
            "VernacExtend",
            "7be929e2324c89e64a1b9c772af4b729ce743999"
        ],
        [
            "destruct H0 as (lv' & ly & Hlt & Hx & Heq).",
            "VernacExtend",
            "76431c1f6bc8ef519be595ff1f29e1fd060d8d5c"
        ],
        [
            "subst lv.",
            "VernacExtend",
            "921bd7ec0657a4e786948a53134d1183dd71a2a8"
        ],
        [
            "inversion Hx; subst.",
            "VernacExtend",
            "acf73447fbb290a4fd768878fd3014b4c2a3065f"
        ],
        [
            "inversion H3; subst; clear H3.",
            "VernacExtend",
            "1b952c13475ed44809862e55b011339470aeaa9f"
        ],
        [
            "destruct IHlt with (c0 := c0) (lv := lv') as (lp & c' & Hlp); auto with *.",
            "VernacExtend",
            "8992d650a8a8d39357df20d7e99f97b59727fad2"
        ],
        [
            "decompose record Hlp.",
            "VernacExtend",
            "afa9e9193375893e892ac800d7fb45d533a2fbeb"
        ],
        [
            "destruct H1 with (c:= c') as [p Hp]; auto with *.",
            "VernacExtend",
            "e75c98e55d26e6a3f70cf000ffe3c8f5abc5008a"
        ],
        [
            "exists (lp ++ [p]); exists (cache_right p).",
            "VernacExtend",
            "2d8de0b8e6669061fc22a481f96f87b908e3833c"
        ],
        [
            "decompose record Hp; subst.",
            "VernacExtend",
            "2d0154f00e27e9804abacad550ea670fd327ef5d"
        ],
        [
            "rewrite map_app, cache_path_app, andl_app.",
            "VernacExtend",
            "2c562aa2985e905c54f5a2cbd715aa4db18215a0"
        ],
        [
            "repeat rewrite map_app.",
            "VernacExtend",
            "b6a6ee1d9a8c82aa32dd632bf20f37a46c6ebb72"
        ],
        [
            "simpl; repeat rewrite cache_beq_refl.",
            "VernacExtend",
            "19f70d4a7387fd45e52d02ccc73bbadebacb5465"
        ],
        [
            "repeat split; try tauto.",
            "VernacExtend",
            "73ab61bcd83816f54c2b2b79e9ba66e0a6fb0252"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite maxl_app.",
            "VernacExtend",
            "70cd2d63344cf5904bf1f79d78db2b7c19cc2cf7"
        ],
        [
            "apply Nat.max_lub; trivial.",
            "VernacExtend",
            "3baabdde61d00ad046c947af1c00e234ac3b57c6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite Max.max_0_r.",
            "VernacExtend",
            "0bce80834a5cd70165879919103ca72f33d35930"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply H12.",
            "VernacExtend",
            "3cc909242f89856a19add3bf252ae0a924a68382"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply H12 in H0.",
            "VernacExtend",
            "0908b08272324d6b37ede84f01db6062c887034e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct Hlp as [lp Hlp]; decompose record Hlp.",
            "VernacExtend",
            "0a4002e8f488071b4c84185242aa5dc17f9781b2"
        ],
        [
            "eexists (cbv_constr _ _ (capply c lt) _ (c_capply c lv)); simpl.",
            "VernacExtend",
            "0ab6a0d49c90125c8fa8b7d0890ccadbc8d7cb9c"
        ],
        [
            "repeat split; eauto.",
            "VernacExtend",
            "548f035e9a9dfe1b77fd781887c476f1c531281f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "erewrite <- map_length; rewrite H1.",
            "VernacExtend",
            "a96fb1d59df3c06e922bcf899f642c5c1492ffc2"
        ],
        [
            "now apply Max.max_lub_l in Harity.",
            "VernacExtend",
            "30f33ef5414231168155f3621bf4f7ed209a58a9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Nat.max_lub; trivial.",
            "VernacExtend",
            "3baabdde61d00ad046c947af1c00e234ac3b57c6"
        ],
        [
            "rewrite map_length.",
            "VernacExtend",
            "fcd7ed281a0bd0ae53f660fd53f2725d569c74a9"
        ],
        [
            "apply Max.max_lub_l in Harity.",
            "VernacExtend",
            "6e094b28b53608733bda082c355c02c679d36eb6"
        ],
        [
            "subst lv lt.",
            "VernacExtend",
            "113604cea5dd86b67155f5b99a30d9d34809367c"
        ],
        [
            "now rewrite map_length in *.",
            "VernacExtend",
            "2ef00525d56c55acee4af7dbebeca5c71fff8650"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply H7.",
            "VernacExtend",
            "02664dc106ff0c50156de073314ff6db4c42943e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "edestruct H7; eauto.",
            "VernacExtend",
            "e12a10c74f9357230bf83222ca778701d62f1554"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (Hlp : exists lp c1, andl (map wf lp) /\\ map (@proj_left _ _ _) lp = lt /\\ map (@proj_right _ _ _) lp = lv /\\ cache_path variable_eq_dec function_eq_dec constructor_eq_dec c0 c1 lp = true /\\ maxl (map (@max_arity_term _ _ _) (map (@term_from_value variable function _) lv)) <= max_arity /\\ forall (t0 : term) (v : value), assoc_cache t0 c1 = Some v -> evaluates t0 v /\\ max_arity_term (term_from_value variable function v) <= max_arity ).",
            "VernacExtend",
            "acea812feab0658204b21c5f6bf168fcddbc73ad"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Harityall: forall t, In t lt -> max_arity_term t <= max_arity) by ( intros t0 Ht; simpl in Harity; apply Max.max_lub_r in Harity; etransitivity; [ | apply Harity]; now apply maxl_is_max, in_map).",
            "VernacExtend",
            "f55a21e114f2a7682a6bc4e80fd9f8f9d7d6c7ab"
        ],
        [
            "clear Harity H1 H.",
            "VernacExtend",
            "daab4d838b8bf7704b3376f6155b88ffa8c85418"
        ],
        [
            "revert c0 lv H0 Hc0.",
            "VernacExtend",
            "02f5a7e1cb31490c9f80ebebdeefd2574d989144"
        ],
        [
            "induction lt using rev_ind; intros c0 lv H0 Hc0.",
            "VernacExtend",
            "fee5ad0d4850809cd41781360586a4344d462ca8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists []; exists c0; simpl.",
            "VernacExtend",
            "588e278e1f0e9f50d83a5c5af17e71a68d4d6fbd"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "simpl; intuition.",
            "VernacExtend",
            "2a8f84ed3abedbe9d9fbb80aa4215114cbdbe500"
        ],
        [
            "now rewrite cache_beq_refl.",
            "VernacExtend",
            "08e4264182b69222ce4ba033c1d0b7d38e7edff2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Forall2_app_inv_l in H0.",
            "VernacExtend",
            "7be929e2324c89e64a1b9c772af4b729ce743999"
        ],
        [
            "destruct H0 as (lv' & ly & Hlt & Hx & Heq).",
            "VernacExtend",
            "76431c1f6bc8ef519be595ff1f29e1fd060d8d5c"
        ],
        [
            "subst lv.",
            "VernacExtend",
            "921bd7ec0657a4e786948a53134d1183dd71a2a8"
        ],
        [
            "inversion Hx; subst.",
            "VernacExtend",
            "acf73447fbb290a4fd768878fd3014b4c2a3065f"
        ],
        [
            "inversion H3; subst; clear H3.",
            "VernacExtend",
            "1b952c13475ed44809862e55b011339470aeaa9f"
        ],
        [
            "destruct IHlt with (c0 := c0) (lv := lv') as (lp & c' & Hlp); auto with *.",
            "VernacExtend",
            "8992d650a8a8d39357df20d7e99f97b59727fad2"
        ],
        [
            "decompose record Hlp.",
            "VernacExtend",
            "afa9e9193375893e892ac800d7fb45d533a2fbeb"
        ],
        [
            "destruct H1 with (c:= c') as [p Hp]; auto with *.",
            "VernacExtend",
            "e75c98e55d26e6a3f70cf000ffe3c8f5abc5008a"
        ],
        [
            "exists (lp ++ [p]); exists (cache_right p).",
            "VernacExtend",
            "2d8de0b8e6669061fc22a481f96f87b908e3833c"
        ],
        [
            "decompose record Hp; subst.",
            "VernacExtend",
            "2d0154f00e27e9804abacad550ea670fd327ef5d"
        ],
        [
            "rewrite map_app, cache_path_app, andl_app.",
            "VernacExtend",
            "2c562aa2985e905c54f5a2cbd715aa4db18215a0"
        ],
        [
            "repeat rewrite map_app.",
            "VernacExtend",
            "b6a6ee1d9a8c82aa32dd632bf20f37a46c6ebb72"
        ],
        [
            "simpl; repeat rewrite cache_beq_refl.",
            "VernacExtend",
            "19f70d4a7387fd45e52d02ccc73bbadebacb5465"
        ],
        [
            "repeat split; try tauto.",
            "VernacExtend",
            "73ab61bcd83816f54c2b2b79e9ba66e0a6fb0252"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite maxl_app.",
            "VernacExtend",
            "70cd2d63344cf5904bf1f79d78db2b7c19cc2cf7"
        ],
        [
            "apply Nat.max_lub; trivial.",
            "VernacExtend",
            "3baabdde61d00ad046c947af1c00e234ac3b57c6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite Max.max_0_r.",
            "VernacExtend",
            "0bce80834a5cd70165879919103ca72f33d35930"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply H12.",
            "VernacExtend",
            "3cc909242f89856a19add3bf252ae0a924a68382"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply H12 in H0.",
            "VernacExtend",
            "0908b08272324d6b37ede84f01db6062c887034e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct Hlp as (lp & cr & Hlp); decompose record Hlp.",
            "VernacExtend",
            "b64075de22c807240741784d1cea4a7ac1a97962"
        ],
        [
            "case_eq (assoc (term_beq variable_eq_dec function_eq_dec constructor_eq_dec) (fapply f (map (@term_from_value _ _ _) lv)) cr).",
            "VernacExtend",
            "51a6276c5bca575f65d23cd57b233f4c53af55b7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros v0 Hv0.",
            "VernacExtend",
            "bb46f513942198ed5d51b915e069702773a00e9d"
        ],
        [
            "destruct (H8 _ _ Hv0) as [Heval0 Harity0].",
            "VernacExtend",
            "6f1270d5b357dc36aa049701f1f64f82c9c99fea"
        ],
        [
            "eexists (cbv_split _ (cbv_read _ (fapply f _) _) _ _ _ _).",
            "VernacExtend",
            "5f4c568ccf6621f468c063f991a95a01d5caf76f"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "assert (v0 = v).",
            "VernacExtend",
            "0b66239143bc111e4d7d6df99de1e430c562fb9f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply evaluates_unique; eauto.",
            "VernacExtend",
            "1bfe603542682f02b2c78402b289435a051ae6e4"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "clear H H1 H0 H2 H5 H6 Hv0 H8 Hlp cr IHHeval Harity Heval0.",
            "VernacExtend",
            "c36f1adb7166672c0a501bfb9f0b9bddf9bbebb9"
        ],
        [
            "induction lp; constructor; trivial.",
            "VernacExtend",
            "a7be2c530e85ca37dd43ee95c208beb2fa049d90"
        ],
        [
            "apply evaluates_value.",
            "VernacExtend",
            "fbfced0e1e1ac6b116b83fdd8b7a8f3411584dff"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "subst v0.",
            "VernacExtend",
            "15fde870858a60c50888d592aacf571969998f8b"
        ],
        [
            "repeat split; trivial;simpl; repeat split; eauto.",
            "VernacExtend",
            "460289fd9b22344a3de5113aa020b1a7d723810b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply Max.max_lub_l in Harity.",
            "VernacExtend",
            "6e094b28b53608733bda082c355c02c679d36eb6"
        ],
        [
            "now rewrite map_length in Harity.",
            "VernacExtend",
            "3ff7b6bd5ea7fd41293698be994d183157faf40d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "now apply H8.",
            "VernacExtend",
            "cdb02d7242fe515b82c5270b1d770d668bf9a47a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "now apply H8 in H3.",
            "VernacExtend",
            "33dade7a4f5ee2d0e59350a124a7c895757b45fc"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert(Hrule := H1).",
            "VernacExtend",
            "287bfdc67e164b4c39927f1130953db617e6587f"
        ],
        [
            "apply first_rule_sound in H1.",
            "VernacExtend",
            "210f06d5756a95f8733916aeb79cd75a155806bf"
        ],
        [
            "destruct H1 as [[lp' t'] (Hlen & Hnth & Hunify & Hsubst)].",
            "VernacExtend",
            "c1e5d96381fc17cff1f00beed0cc5e27b28b0e3b"
        ],
        [
            "destruct IHHeval with cr as [p Hp]; trivial.",
            "VernacExtend",
            "0472d93699b7c9ecf3d0018eb64b7bbfea565189"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold wf_prog in prog_is_wf; destruct prog_is_wf as (Hvars & Hmaxarity).",
            "VernacExtend",
            "1fee04d3d1851d07bbfe75a2f7cb06f145a00345"
        ],
        [
            "subst t.",
            "VernacExtend",
            "9a338ade929583d1d9999c5f080f6e2c965d6617"
        ],
        [
            "apply first_rule_max_arity in Hrule; trivial.",
            "VernacExtend",
            "63e9c6e4049f5838df2c3a5af828e59efdb00257"
        ],
        [
            "simpl; rewrite map_length.",
            "VernacExtend",
            "068a131fc4bd84126f0117e8c8c60cffe96f35ae"
        ],
        [
            "apply Nat.max_lub; trivial.",
            "VernacExtend",
            "3baabdde61d00ad046c947af1c00e234ac3b57c6"
        ],
        [
            "subst lv lt.",
            "VernacExtend",
            "113604cea5dd86b67155f5b99a30d9d34809367c"
        ],
        [
            "apply Nat.max_lub_l in Harity.",
            "VernacExtend",
            "ec734c57f8d55e17c0c91091dea419db564d87e8"
        ],
        [
            "now rewrite map_length in *.",
            "VernacExtend",
            "2ef00525d56c55acee4af7dbebeca5c71fff8650"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intro Hcache.",
            "VernacExtend",
            "4aee4908f31d30d10300662b55c1dd8ea8bc3a1e"
        ],
        [
            "decompose record Hp; decompose record Hlp.",
            "VernacExtend",
            "c8ce3ea140d0c33d30446e26f7b097af93546ebe"
        ],
        [
            "set (tt := fapply f(map (term_from_value variable function (constructor:=constructor)) (map (psubst s) lp'))).",
            "VernacExtend",
            "e944827d2ba448619299dbdb8f9e9efc43251019"
        ],
        [
            "eexists (cbv_split lp (cbv_update i s p cr (fapply f _) ((tt, v) :: (cache_right p)) v) _ (fapply f lt) ((tt, v):: (cache_right p)) v).",
            "VernacExtend",
            "545fcaefcd61c0bef7eddc52cbf17b342648b8f4"
        ],
        [
            "simpl; subst.",
            "VernacExtend",
            "70e734e21ac0c290a67a2c85b127a11d34e929a4"
        ],
        [
            "assert(Hlp_len : length lp <= max_arity) by (simpl in Harity; rewrite map_length in Harity; lia).",
            "VernacExtend",
            "8cf776dba4d8c9ed82197d455de9b7e40e3d0105"
        ],
        [
            "apply unify_list_sound in Hunify.",
            "VernacExtend",
            "9efa242edcab88f2292248e1a819e0b13bebd420"
        ],
        [
            "rewrite <- H7 in *; simpl.",
            "VernacExtend",
            "d65dff3380122ce319676cff3331f831040c9388"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "--",
            "VernacBullet",
            "ba168e40f4056f7e624b4823d483fd7320648256"
        ],
        [
            "subst tt; exists lp'; rewrite Hunify.",
            "VernacExtend",
            "7cc155bd3329c910b35ad536472f934136e9a8a3"
        ],
        [
            "eexists; repeat split; eauto; try tauto.",
            "VernacExtend",
            "d7b640d2d8978488940eb7d3edd3391af54334d6"
        ],
        [
            "now repeat rewrite map_length.",
            "VernacExtend",
            "3e1ac30f5c557b6a909c0c52cd051d6be856186d"
        ],
        [
            "--",
            "VernacBullet",
            "ba168e40f4056f7e624b4823d483fd7320648256"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (term_beq variable_eq_dec function_eq_dec constructor_eq_dec t0 tt).",
            "VernacExtend",
            "bd41f66723008b14fb685802860800b449fa003b"
        ],
        [
            "++",
            "VernacBullet",
            "cac3e4fa1e090b315e8d0c45d2700cf7c59ed246"
        ],
        [
            "intro Heq; rewrite term_beq_eq in Heq; subst t0.",
            "VernacExtend",
            "95fb550cd64f62d8228295bd5b9e97de2dc2ded1"
        ],
        [
            "replace (term_beq variable_eq_dec function_eq_dec constructor_eq_dec tt tt) with true in H1 by (symmetry; now apply term_beq_eq).",
            "VernacExtend",
            "b25eb044a1242f451e3568833660f76f63d9e2a4"
        ],
        [
            "subst tt.",
            "VernacExtend",
            "1cb64f206801cdc9e4f3311d2f73ccb4d053325e"
        ],
        [
            "eapply FAPPLY with (lv := (map (proj_right (constructor:=constructor)) lp)) (i := i) (s := s) (t := proj_left p); trivial.",
            "VernacExtend",
            "5ad2be69d9088a92c9bc01bc193b6ea1f4778bb5"
        ],
        [
            "**",
            "VernacBullet",
            "f4979b05b892ce0ea48d9a96d65a06fa50600264"
        ],
        [
            "rewrite Hunify.",
            "VernacExtend",
            "8bcb4a0b28743b9afaf12bf76aeb96223f6a3748"
        ],
        [
            "clear H6 H3 H0 H1 Hcache Hlp H5 H6 H7 H11 H12 H13 H16 H14 H2 Harity H Hunify Hlp_len Hrule.",
            "VernacExtend",
            "0dc0975d9792d7e24ce76b91b32cdff6386b70e9"
        ],
        [
            "induction lp; constructor.",
            "VernacExtend",
            "586414481f1841d3d576ed8868345f108133d6c2"
        ],
        [
            "apply evaluates_value.",
            "VernacExtend",
            "fbfced0e1e1ac6b116b83fdd8b7a8f3411584dff"
        ],
        [
            "apply IHlp; trivial.",
            "VernacExtend",
            "967d84dd68d2c36248496a95928bdb79fcd8a1ef"
        ],
        [
            "simpl in H17.",
            "VernacExtend",
            "5cec8af2bd097f5c775badd2d14f882683236ba5"
        ],
        [
            "now apply Nat.max_lub_r in H17.",
            "VernacExtend",
            "fd652e89695b0c0d5ea713994c7a40b2e5baabd8"
        ],
        [
            "**",
            "VernacBullet",
            "f4979b05b892ce0ea48d9a96d65a06fa50600264"
        ],
        [
            "assert( Hbeq : forall t, term_beq variable_eq_dec function_eq_dec constructor_eq_dec t t = true) by (now intros; rewrite term_beq_eq).",
            "VernacExtend",
            "e1028e9f2efc9a23c79e9d818849d7ae13bd25e7"
        ],
        [
            "rewrite Hbeq in H3.",
            "VernacExtend",
            "c38517765543d7be05b8aaa9998a64466f8c828c"
        ],
        [
            "now inversion H3.",
            "VernacExtend",
            "54f1b6e4635a7c5b5f48217ea8b4babc0922b318"
        ],
        [
            "++",
            "VernacBullet",
            "cac3e4fa1e090b315e8d0c45d2700cf7c59ed246"
        ],
        [
            "intro Heq; rewrite Heq in H3.",
            "VernacExtend",
            "00c0a40989a48bc7d12ddc2d046cc95a8cb5ecfb"
        ],
        [
            "now apply H13.",
            "VernacExtend",
            "20fe06043c05579c0e2aef7af41d32a30d92ff3a"
        ],
        [
            "--",
            "VernacBullet",
            "ba168e40f4056f7e624b4823d483fd7320648256"
        ],
        [
            "case_eq (term_beq variable_eq_dec function_eq_dec constructor_eq_dec t0 tt).",
            "VernacExtend",
            "bd41f66723008b14fb685802860800b449fa003b"
        ],
        [
            "++",
            "VernacBullet",
            "cac3e4fa1e090b315e8d0c45d2700cf7c59ed246"
        ],
        [
            "intro Heq; rewrite Heq in H3; inversion H3; now subst.",
            "VernacExtend",
            "3b9abcabf2498eb7e429c323abd7c2f985826aad"
        ],
        [
            "++",
            "VernacBullet",
            "cac3e4fa1e090b315e8d0c45d2700cf7c59ed246"
        ],
        [
            "intro Hneq; rewrite Hneq in H3.",
            "VernacExtend",
            "8da9804a95ba546698b3e09d267c199f180c28ad"
        ],
        [
            "now apply H13 in H3.",
            "VernacExtend",
            "6dd79c042498d1a3059f3dd2388d7df24ec7967d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma evaluates_sound' (t : term) (v : value): evaluates t v -> max_arity_term t <= max_arity -> exists p, wf p /\\ proj_right p = v /\\ proj_left p = t.",
            "VernacStartTheoremProof",
            "acdb20cfd15cac314293f346fbdbc2ed5d80b5af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (@evaluates_sound t v []); trivial.",
            "VernacExtend",
            "6060e95a0970b3e6e4eff80a2d501961f436fd79"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros t' v' Hf; inversion Hf.",
            "VernacExtend",
            "92f9f5abe45192aa842235ab28d80f5daf967822"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intuition; eexists; eauto.",
            "VernacExtend",
            "c39be5ae9d73d9dba933a9a9f26a9ca7aa86021f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Evaluates.",
            "VernacEndSegment",
            "5d3f0623e35a33512e20d8c58e95f6143be42c60"
        ],
        [
            "Create HintDb eval.",
            "VernacCreateHintDb",
            "5a3da718ffaacb8270d49d57666cf0bfa765f0fe"
        ],
        [
            "Ltac reduce := progress (repeat constructor) || (econstructor; [repeat constructor; repeat reduce; eauto with eval | solve [unfold first_rule; simpl; trivial] | unfold assoc_default; repeat constructor; eauto with eval]).",
            "VernacExtend",
            "414bd1cdcc8979b2ae7f0ce3aa5abddc95502e4d"
        ],
        [
            "Hint Extern 1 (@evaluates _ _ _ _ _ _ _ _ _ _) => eapply evaluates_value: eval.",
            "VernacHints",
            "114e3ac1f4ae04806dfb98cd659a1fc336fbdb2b"
        ]
    ],
    "proofs": [
        {
            "name": "term_order_wf",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intro t.",
                        "VernacExtend",
                        "0f1e2ed40751c280bb4adb99a86b36c003f05ffd"
                    ]
                },
                {
                    "command": [
                        "induction t as [ x | c lt IH | f lt IH ] using term_ind2; constructor; unfold term_order; simpl; [ tauto | | ].",
                        "VernacExtend",
                        "eb0c27f4769f6931ce779cc8f4f7731bcaf0e2f6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros t Hin.",
                        "VernacExtend",
                        "c8395be5386348fcd16d32bd9ef197a845b78957"
                    ]
                },
                {
                    "command": [
                        "rewrite in_flat_map in Hin.",
                        "VernacExtend",
                        "30d48df0d9182d3e624b9c27feb393118d163460"
                    ]
                },
                {
                    "command": [
                        "destruct Hin as (t' & Hin1 & Hin2).",
                        "VernacExtend",
                        "203546a8112e196beba192ca14e740b89667b949"
                    ]
                },
                {
                    "command": [
                        "apply sub_term_eq_or_strict in Hin2.",
                        "VernacExtend",
                        "170a88cb337cb381dc4fa2cf95a0b97581551d03"
                    ]
                },
                {
                    "command": [
                        "destruct Hin2 as [ Heq | Hin2 ].",
                        "VernacExtend",
                        "839d70fde95399fc564eb4ca92e7b8d7d6befc6d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst t'.",
                        "VernacExtend",
                        "fbf96dac500541bc01a531f132a34f424d40e1d9"
                    ]
                },
                {
                    "command": [
                        "apply IH.",
                        "VernacExtend",
                        "88103d45393d3ee3ab547447d913543854db8cea"
                    ]
                },
                {
                    "command": [
                        "exact Hin1.",
                        "VernacExtend",
                        "c970b24e170fa33974c7041cc50546646aa3bf8a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Acc_inv_trans with t'.",
                        "VernacExtend",
                        "a1a94f9524391c3008b03174b02651b21593e10c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exact Hin2.",
                        "VernacExtend",
                        "5954c266e81c0162322e60ad04e53951aa26d384"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply IH.",
                        "VernacExtend",
                        "88103d45393d3ee3ab547447d913543854db8cea"
                    ]
                },
                {
                    "command": [
                        "exact Hin1.",
                        "VernacExtend",
                        "c970b24e170fa33974c7041cc50546646aa3bf8a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros t Hin.",
                        "VernacExtend",
                        "c8395be5386348fcd16d32bd9ef197a845b78957"
                    ]
                },
                {
                    "command": [
                        "rewrite in_flat_map in Hin.",
                        "VernacExtend",
                        "30d48df0d9182d3e624b9c27feb393118d163460"
                    ]
                },
                {
                    "command": [
                        "destruct Hin as (t' & Hin1 & Hin2).",
                        "VernacExtend",
                        "203546a8112e196beba192ca14e740b89667b949"
                    ]
                },
                {
                    "command": [
                        "apply sub_term_eq_or_strict in Hin2.",
                        "VernacExtend",
                        "170a88cb337cb381dc4fa2cf95a0b97581551d03"
                    ]
                },
                {
                    "command": [
                        "destruct Hin2 as [ Heq | Hin2 ].",
                        "VernacExtend",
                        "839d70fde95399fc564eb4ca92e7b8d7d6befc6d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst t'.",
                        "VernacExtend",
                        "fbf96dac500541bc01a531f132a34f424d40e1d9"
                    ]
                },
                {
                    "command": [
                        "apply IH.",
                        "VernacExtend",
                        "88103d45393d3ee3ab547447d913543854db8cea"
                    ]
                },
                {
                    "command": [
                        "exact Hin1.",
                        "VernacExtend",
                        "c970b24e170fa33974c7041cc50546646aa3bf8a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Acc_inv_trans with t'.",
                        "VernacExtend",
                        "a1a94f9524391c3008b03174b02651b21593e10c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exact Hin2.",
                        "VernacExtend",
                        "5954c266e81c0162322e60ad04e53951aa26d384"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply IH.",
                        "VernacExtend",
                        "88103d45393d3ee3ab547447d913543854db8cea"
                    ]
                },
                {
                    "command": [
                        "exact Hin1.",
                        "VernacExtend",
                        "c970b24e170fa33974c7041cc50546646aa3bf8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "value_list_order_wf",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "unfold value_list_order.",
                        "VernacExtend",
                        "316f8257eb8841437f523a6e1a2e1ae0f3d0c7c9"
                    ]
                },
                {
                    "command": [
                        "apply wf_inverse_image.",
                        "VernacExtend",
                        "11e070bf7d2e0cf9f36a387a6f5ca827c032b9de"
                    ]
                },
                {
                    "command": [
                        "refine lt_wf.",
                        "VernacExtend",
                        "f6cf947d8a9af2617eaff1447bf315a3599d2d3d"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "active_term_order_superset_wf",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "unfold active_term_order_superset.",
                        "VernacExtend",
                        "d94512b09138ff6d9b12546d693f6448d45c3d26"
                    ]
                },
                {
                    "command": [
                        "apply wf_inverse_image.",
                        "VernacExtend",
                        "11e070bf7d2e0cf9f36a387a6f5ca827c032b9de"
                    ]
                },
                {
                    "command": [
                        "apply wf_lexprod.",
                        "VernacExtend",
                        "355f78160d2a3836ab34921d9181a59f94cd1e84"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply lt_wf.",
                        "VernacExtend",
                        "b02ed6b1b9b0f5e569a9e95fbb799f31ca941c75"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply value_list_order_wf.",
                        "VernacExtend",
                        "5cf4022ada1d74532ee7599d5119a813b8aeb8d1"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "unify_equation",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "revert s v.",
                        "VernacExtend",
                        "52576c5aa728c4d9ffd60557fd0db684db49f30a"
                    ]
                },
                {
                    "command": [
                        "induction p as [ x | c lp IH ] using pattern_ind2; [ simpl; trivial | ].",
                        "VernacExtend",
                        "d91e0563958032eaff07b33dcb5e246cc4d47b1d"
                    ]
                },
                {
                    "command": [
                        "intros s [ c' lv ].",
                        "VernacExtend",
                        "04aa6bf425b6f10190f5847d6b0c458d3d57807f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case constructor_beq; [ | trivial ].",
                        "VernacExtend",
                        "486e347c38d9dd98a582e90eb467e73fc123a697"
                    ]
                },
                {
                    "command": [
                        "clear c c'; revert s lv.",
                        "VernacExtend",
                        "a4fd5ddda164fca8fa46cc2814bb79ab7253816f"
                    ]
                },
                {
                    "command": [
                        "induction lp as [ | p lp IHlp ]; intros s lv; [ destruct lv; trivial | ].",
                        "VernacExtend",
                        "50fdf7f680b9e6987ff8f6ea7e5e859aec1932ef"
                    ]
                },
                {
                    "command": [
                        "destruct lv as [ | [ c lv' ] lv ]; simpl; trivial.",
                        "VernacExtend",
                        "07ce8bcfaedc3cd9d396d0d80799e3318532805e"
                    ]
                },
                {
                    "command": [
                        "case unify; trivial.",
                        "VernacExtend",
                        "a879838c26110a092b30254cd76ea2f55ab7d2a1"
                    ]
                },
                {
                    "command": [
                        "intros s'.",
                        "VernacExtend",
                        "39c575c95a2c836812a2bbefd742a1a2fb5475f6"
                    ]
                },
                {
                    "command": [
                        "apply IHlp.",
                        "VernacExtend",
                        "0c0f7b785d89378d13f0d3599ca09afaf82ea3f8"
                    ]
                },
                {
                    "command": [
                        "intros; apply IH; right; assumption.",
                        "VernacExtend",
                        "86c519ebd0d5e2fde545dd0ac44d237508fa8b7f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unify_list_unify_unify_list",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros s s' v lv p lp.",
                        "VernacExtend",
                        "e87f41ab03f946502a9cb6645a8dcd9bf03fa67f"
                    ]
                },
                {
                    "command": [
                        "case_eq (unify s v p); simpl; [ intro s'' | ]; intro Huni; rewrite Huni; [ | discriminate ].",
                        "VernacExtend",
                        "25699e64314e343c4b8bbe487720ea3a004b8667"
                    ]
                },
                {
                    "command": [
                        "intros Hunis; exists s''.",
                        "VernacExtend",
                        "06c74c026a22fc5158eba73829c87d80f3dbe331"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unify_list_length",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "intros s s' lv; revert s s'; induction lv as [ | v lv IH ]; intros s s' lp Hunis; destruct lp; [ trivial | discriminate | discriminate | ].",
                        "VernacExtend",
                        "4ad8238295aebfb61b52f514f21e2a602c34fbfc"
                    ]
                },
                {
                    "command": [
                        "simpl; f_equal; apply unify_list_unify_unify_list in Hunis; destruct Hunis as (s'' & _ & Hunis); now apply IH in Hunis.",
                        "VernacExtend",
                        "bd3ec4f040760e9123cb8d359d0cfb80338eacbf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unify_cons_eq_unify_list",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros s s' c lv c' lp' Huni; rewrite unify_equation in Huni; case_eq (constructor_beq constructor_eq_dec c c'); intros Hc; rewrite Hc in Huni; [ now rewrite constructor_beq_eq in Hc | discriminate Huni ].",
                        "VernacExtend",
                        "d650278ee0a14a0053bc3dd6d2f934f31de93c98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unify_list_aux_extension",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "remember (suml (map (value_size (constructor := constructor)) lv)) as size eqn: Hsize.",
                        "VernacExtend",
                        "b703d552bb52a1d0a23eb8edd9cfbefe440d5424"
                    ]
                },
                {
                    "command": [
                        "revert lv lp s s' Hsize; induction size as [ size IH ] using lt_wf_ind; intros lv lp s s' Hsize Hunis.",
                        "VernacExtend",
                        "9007fc488da67271774b91dae702d1009520bff8"
                    ]
                },
                {
                    "command": [
                        "destruct lv as [ | v lv ].",
                        "VernacExtend",
                        "83dfade7e0e3daf0a45ecebc73e885627c0d3b20"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists [].",
                        "VernacExtend",
                        "0124358b905f1434771624034a4e7386196b0a4b"
                    ]
                },
                {
                    "command": [
                        "assert (Hnil : 0 = length lp) by (now apply unify_list_length in Hunis).",
                        "VernacExtend",
                        "71839be273f7273b3d37f141227e9c944187441f"
                    ]
                },
                {
                    "command": [
                        "destruct lp; [ clear Hnil | now contradict Hnil ].",
                        "VernacExtend",
                        "de30e6f0f8556010b67ce43c1dc3c4d68a32d6ef"
                    ]
                },
                {
                    "command": [
                        "simpl in Hunis; injection Hunis; clear Hunis; intros; now subst s'.",
                        "VernacExtend",
                        "b54001d3e22e36444ba33d4492800d42ec50ab0e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (Hlen : length (v :: lv) = length lp) by (apply unify_list_length in Hunis; assumption).",
                        "VernacExtend",
                        "f9f05eed5fe2169fa52d0bb361748a478c1b26a4"
                    ]
                },
                {
                    "command": [
                        "destruct lp as [ | p lp ]; [ discriminate Hlen | clear Hlen ].",
                        "VernacExtend",
                        "0ce282b2ebab1b98f6a798ec5844277f005a2df6"
                    ]
                },
                {
                    "command": [
                        "apply unify_list_unify_unify_list in Hunis; destruct Hunis as (s'' & Huni & Hunis).",
                        "VernacExtend",
                        "77a2ffd7d4028659fc19262c5d3c8b0f7c3a08dc"
                    ]
                },
                {
                    "command": [
                        "set (size' := suml (map (value_size (constructor := constructor)) lv)).",
                        "VernacExtend",
                        "8a4de91bfdc37844734b0da6a34ef41c69747123"
                    ]
                },
                {
                    "command": [
                        "assert (Hlt: size' < size) by (simpl in Hsize; rewrite Hsize; change size' with (0 + size'); unfold size'; apply plus_lt_compat_r; destruct v as [ c' lv' ]; simpl; apply lt_O_Sn).",
                        "VernacExtend",
                        "25da0c8a0ae688f4e67a122571e68719c73b3547"
                    ]
                },
                {
                    "command": [
                        "apply (IH _ Hlt) in Hunis; [ | easy ]; destruct Hunis as (s''' & Happ & Hconsistent); clear size' Hlt lp.",
                        "VernacExtend",
                        "0d62de22c7943381424c28a291642ff42f3004a4"
                    ]
                },
                {
                    "command": [
                        "destruct p as [ x | c lp' ].",
                        "VernacExtend",
                        "0d8a5322a6a18e5a71134b39a5f66fcbb1b2b41d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in Huni; case_eq (assoc (variable_beq variable_eq_dec) x s).",
                        "VernacExtend",
                        "ba06ddd3f47745738dad2e02f372f593ecd0bb1f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros v'' Hsome; rewrite Hsome in Huni.",
                        "VernacExtend",
                        "ce47bfeb43982258a4fc3c5202b053e8019803a2"
                    ]
                },
                {
                    "command": [
                        "destruct value_beq in Huni; [ | discriminate Huni ]; injection Huni; intros; subst s' s''; clear Huni.",
                        "VernacExtend",
                        "e83f9e82dd047c92b062701bb5571d68b59e1e14"
                    ]
                },
                {
                    "command": [
                        "now exists s'''.",
                        "VernacExtend",
                        "162d524ad0e93de2065a0a140d5b4b167405b3ed"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros Hnone; rewrite Hnone in Huni.",
                        "VernacExtend",
                        "d880192091764e7e76c6ce773fa95b35f47fc5eb"
                    ]
                },
                {
                    "command": [
                        "injection Huni; intro; subst s''; clear Huni.",
                        "VernacExtend",
                        "52c10a69450b3ae54cadc4267e1e1d973aaa651c"
                    ]
                },
                {
                    "command": [
                        "exists (s''' ++ [(x,v)]); split; [ now rewrite <- app_assoc | ].",
                        "VernacExtend",
                        "b003729e3bcfe510ac550d94b657c457585e50d6"
                    ]
                },
                {
                    "command": [
                        "intros y Hsome.",
                        "VernacExtend",
                        "12c01faf9bac24ae9f3cbd9820e07690251f62fc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite assoc_app_eq_None; split.",
                        "VernacExtend",
                        "45f1d1355fdfa71e9110ab781f652f2896f3dea3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Hconsistent.",
                        "VernacExtend",
                        "352963c82437f0bc441583ea560cd4c58e3f4fb2"
                    ]
                },
                {
                    "command": [
                        "change ((x,v) :: s) with ([(x,v)] ++ s).",
                        "VernacExtend",
                        "b7131e6c913578ebbdab7a8c0e29acda5d69b2a8"
                    ]
                },
                {
                    "command": [
                        "rewrite assoc_app_neq_None; now right.",
                        "VernacExtend",
                        "671d2c4732d2433ce421f3a3dbd407ab7075644f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case_eq (variable_beq variable_eq_dec y x); [ | easy ].",
                        "VernacExtend",
                        "7801072e3a322a3dc0bc96b9f45ecb11ffdc52a8"
                    ]
                },
                {
                    "command": [
                        "rewrite variable_beq_eq; intro; now subst y.",
                        "VernacExtend",
                        "171b59a10e2e371e4f04bcbd7038b65438f0c612"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct v as [ c' lv' ].",
                        "VernacExtend",
                        "b36aa68fd1682350e090adac88935bb2cdab741c"
                    ]
                },
                {
                    "command": [
                        "apply unify_cons_eq_unify_list in Huni; destruct Huni as (Hc' & Hunis); subst c'.",
                        "VernacExtend",
                        "402996a7fb0d13522f2f7594cbd4545943770009"
                    ]
                },
                {
                    "command": [
                        "set (size' := suml (map (value_size (constructor := constructor)) lv')).",
                        "VernacExtend",
                        "5f4bba3c8dea5c9ba78bb4746f6b039611ce484f"
                    ]
                },
                {
                    "command": [
                        "assert (Hlt: size' < size) by (subst size; simpl; unfold size'; omega).",
                        "VernacExtend",
                        "272ed3691cd001922efb29c436fcbc4e9077f5d3"
                    ]
                },
                {
                    "command": [
                        "apply (IH _ Hlt) in Hunis; [ | easy ]; destruct Hunis as (s'''' & Happ' & Hconsistent'); clear size' Hlt.",
                        "VernacExtend",
                        "1f98ed61f9910a7c25d3bf62086538e79dd6c30b"
                    ]
                },
                {
                    "command": [
                        "exists (s''' ++ s'''').",
                        "VernacExtend",
                        "c7bcd5aba8adc96d9e10bd1b14c610c2b25bd9b7"
                    ]
                },
                {
                    "command": [
                        "subst s' s''.",
                        "VernacExtend",
                        "a9562c6ebc2292a8666659f66c45b76e50326dc2"
                    ]
                },
                {
                    "command": [
                        "split; [ now rewrite <- app_assoc | ].",
                        "VernacExtend",
                        "d3165b894367264e3978db9a8dae9eecbf194e77"
                    ]
                },
                {
                    "command": [
                        "intros x Hsome.",
                        "VernacExtend",
                        "f3c78b41ca9a4cec9a0fc9512227368455ce9686"
                    ]
                },
                {
                    "command": [
                        "rewrite assoc_app_eq_None; split.",
                        "VernacExtend",
                        "45f1d1355fdfa71e9110ab781f652f2896f3dea3"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply Hconsistent.",
                        "VernacExtend",
                        "352963c82437f0bc441583ea560cd4c58e3f4fb2"
                    ]
                },
                {
                    "command": [
                        "rewrite assoc_app_neq_None; right; assumption.",
                        "VernacExtend",
                        "e7f40c4af1118afee97640cff2f2966ef9f3825d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply Hconsistent'; assumption.",
                        "VernacExtend",
                        "daaedb1e9b3f8fc54db90498af5bf102682ad9ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unify_all_vars_defined",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "intros s s' v p; revert s s' v.",
                        "VernacExtend",
                        "59fd3b51e2b93979eae95de63ff7d273df612051"
                    ]
                },
                {
                    "command": [
                        "induction p as [ x | c lp IH ] using pattern_ind2; intros s s' v Huni.",
                        "VernacExtend",
                        "d183b869a16051797748e42f830785184ad9f72c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x' [ Hx' | H ]; [ | tauto ]; subst x'.",
                        "VernacExtend",
                        "b13c3d8b87f6183a907127f1a2a7aaa72e8ba636"
                    ]
                },
                {
                    "command": [
                        "rewrite unify_equation in Huni.",
                        "VernacExtend",
                        "fff457941e7e51e0f27e8c4e4335cae7af1fa939"
                    ]
                },
                {
                    "command": [
                        "case_eq (assoc (variable_beq variable_eq_dec) x s).",
                        "VernacExtend",
                        "29d748ef13ca68dbde779ee588c9a0a809de9253"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros v' Heq; rewrite Heq in Huni.",
                        "VernacExtend",
                        "6db04e60fccbee911ef97c95c7f5aec7c04813ac"
                    ]
                },
                {
                    "command": [
                        "destruct (value_beq _ _ _) in Huni; [ | discriminate ].",
                        "VernacExtend",
                        "92aa443c7aad9289cc391557a69f1f702cc1e45b"
                    ]
                },
                {
                    "command": [
                        "injection Huni; intros H; subst s'.",
                        "VernacExtend",
                        "771bccd2b5c6ae1a4330152d05a33b164dd1d68d"
                    ]
                },
                {
                    "command": [
                        "rewrite Heq; discriminate.",
                        "VernacExtend",
                        "e377fee6974d2af5b31126db8acbe76f1f251236"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros Heq; rewrite Heq in Huni; injection Huni; intros H; subst s'.",
                        "VernacExtend",
                        "b736837a61eb3f958640f3f742bc2b9948a33803"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case_eq ((variable_beq variable_eq_dec) x x); [ intros; discriminate | ].",
                        "VernacExtend",
                        "bcddbd529458d363eec468717ad9e6d6f81c57ad"
                    ]
                },
                {
                    "command": [
                        "rewrite <- not_true_iff_false, variable_beq_eq; tauto.",
                        "VernacExtend",
                        "6bea7698545df796cd30aadcf4ba57b17bd8241d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; destruct v as [ c' lv ].",
                        "VernacExtend",
                        "767cf6264cf5debce22e8ad001e8307523635208"
                    ]
                },
                {
                    "command": [
                        "apply unify_cons_eq_unify_list in Huni; destruct Huni as (H & Hunis); subst c'; clear c.",
                        "VernacExtend",
                        "8da12d5ea038e3c53ca016f186ab713e3b32d914"
                    ]
                },
                {
                    "command": [
                        "revert s s' lv Hunis.",
                        "VernacExtend",
                        "0a26f85cf91a9d3da9302f089347be620b70ce17"
                    ]
                },
                {
                    "command": [
                        "induction lp as [ | p lp IHlp ]; [ easy | ].",
                        "VernacExtend",
                        "20d9d1d5aa86b039d8562ce9a121d98a94a5e046"
                    ]
                },
                {
                    "command": [
                        "intros s s' [ | v lv ] Hunis; [ apply unify_list_length in Hunis; now contradict Hunis | ].",
                        "VernacExtend",
                        "84654025d1677a44758057cc95d53201af9db70d"
                    ]
                },
                {
                    "command": [
                        "apply unify_list_unify_unify_list in Hunis.",
                        "VernacExtend",
                        "ad32650b620aff6e65a6a056a7a722963473e52c"
                    ]
                },
                {
                    "command": [
                        "destruct Hunis as (s'' & Huni & Hunis).",
                        "VernacExtend",
                        "13346f58d04df8aa4736c905da9c6123c64bdc7b"
                    ]
                },
                {
                    "command": [
                        "intros x; rewrite in_flat_map; intros (p' & [Hp' | Hp'] & Hx).",
                        "VernacExtend",
                        "32a559d9ff2aec055def1cd3189a9e18b7423849"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst p'.",
                        "VernacExtend",
                        "6a15852eb63ee4a9533650efc379406f49fe090d"
                    ]
                },
                {
                    "command": [
                        "apply IH with (x := x) in Huni; [ | now left | easy ].",
                        "VernacExtend",
                        "216cc49c10ae6707928cc7333eef71d4df50cb50"
                    ]
                },
                {
                    "command": [
                        "apply unify_list_aux_extension in Hunis.",
                        "VernacExtend",
                        "3045eed7d60693b2b83717c18e63260ded3885b2"
                    ]
                },
                {
                    "command": [
                        "destruct Hunis as (s''' & Heq & _); subst s'.",
                        "VernacExtend",
                        "f3dde9385ae6e23fa40717b8f7573377812fefef"
                    ]
                },
                {
                    "command": [
                        "rewrite assoc_app_neq_None; now right.",
                        "VernacExtend",
                        "671d2c4732d2433ce421f3a3dbd407ab7075644f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply IHlp with (s := s'') (lv := lv).",
                        "VernacExtend",
                        "f3f22722d634b9728f28742810b370005fb772db"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros p'' Hin; apply IH; now right.",
                        "VernacExtend",
                        "4df786e220558fc3c6f23b872591a67d49cc01fd"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply in_flat_map.",
                        "VernacExtend",
                        "965566958621c742b363bd954504ea862973ec4d"
                    ]
                },
                {
                    "command": [
                        "now exists p'.",
                        "VernacExtend",
                        "3f887b3ae037dcec7223bd6a22b61071060b700b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_psubst_consistent_assoc_extension",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "intros s s' p; revert s s'.",
                        "VernacExtend",
                        "e85950c84c981e0447df1a33195da437380fbe43"
                    ]
                },
                {
                    "command": [
                        "induction p as [ x | c lp IH ] using pattern_ind2; intros s s' Hconsistent Hvars.",
                        "VernacExtend",
                        "c4be3cc915706c768137ac96bdb3a8b9e836b1f8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (Hsomes : assoc (variable_beq variable_eq_dec) x s <> None) by (apply Hvars; simpl; now left).",
                        "VernacExtend",
                        "c2efe2b357c8b4aac7cf9190e2a785ffaa62c462"
                    ]
                },
                {
                    "command": [
                        "assert (Hnones' : assoc (variable_beq variable_eq_dec) x s' = None) by (apply Hconsistent, Hsomes).",
                        "VernacExtend",
                        "4b5745ecc10ca866cf57ba351bcf1f2602e68f0b"
                    ]
                },
                {
                    "command": [
                        "assert (H : exists v, assoc (variable_beq variable_eq_dec) x s = Some v) by now apply neq_None_eq_Some.",
                        "VernacExtend",
                        "a20445cd7f1f6a4a12fbf0d19f1015b87a54a192"
                    ]
                },
                {
                    "command": [
                        "clear Hsomes.",
                        "VernacExtend",
                        "1a587fbb6ba049f51ecc47e2edb251b0de710ed3"
                    ]
                },
                {
                    "command": [
                        "destruct H as (v & Hsome's).",
                        "VernacExtend",
                        "7b8ab7947d7d904f9549e9ba2c2b2ff7b01a849a"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold assoc_default.",
                        "VernacExtend",
                        "b790e1ae491d5b0d1d135d106f2167e9632b14ce"
                    ]
                },
                {
                    "command": [
                        "rewrite Hsome's.",
                        "VernacExtend",
                        "6d5ff151cc357d107d4b650c2082dcd1a3261fad"
                    ]
                },
                {
                    "command": [
                        "case_eq (assoc (variable_beq variable_eq_dec) x (s' ++ s)).",
                        "VernacExtend",
                        "8241d26e6882cec85c9df7d39d8e0d189ae941eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros v'; rewrite assoc_app_eq_Some.",
                        "VernacExtend",
                        "16810b69d880164ac8972c12a15b942531e0d575"
                    ]
                },
                {
                    "command": [
                        "intros [ Hsomes' | (_ & Hsome) ]; [ rewrite Hnones' in Hsomes'; discriminate Hsomes' | rewrite Hsome's in Hsome; now injection Hsome ].",
                        "VernacExtend",
                        "ca2bf9afec227bab0de18a8257debd49b7d8319f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite assoc_app_eq_None; intros (_ & Himpossible); congruence.",
                        "VernacExtend",
                        "4b74bd56add33fa341d5e308d287b3b04fb4a29b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; f_equal.",
                        "VernacExtend",
                        "e1a8d9221cffa231af353a6224974ce2a7f11d21"
                    ]
                },
                {
                    "command": [
                        "apply map_ext_in.",
                        "VernacExtend",
                        "b7bdc11592344de1bd61785a34d0d70b5a9677d5"
                    ]
                },
                {
                    "command": [
                        "intros p Hin; apply IH; [ assumption | assumption | ].",
                        "VernacExtend",
                        "d0c1d5dba829f14b47ea94651dceb1b36fcdb086"
                    ]
                },
                {
                    "command": [
                        "simpl in Hvars.",
                        "VernacExtend",
                        "6f68c1cdf7c068974904c7a9e7d631627d5b5395"
                    ]
                },
                {
                    "command": [
                        "intros x Hx; apply Hvars.",
                        "VernacExtend",
                        "c428fac40abac974efd4ffc000db1b786ff8c1d3"
                    ]
                },
                {
                    "command": [
                        "apply in_flat_map; now exists p.",
                        "VernacExtend",
                        "d1320b0757c429dc04f92f5efbfce04b38165d30"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unify_sound",
            "line_nb": 240,
            "steps": [
                {
                    "command": [
                        "intros s s' [ c lv ] p; revert s s' c lv.",
                        "VernacExtend",
                        "02f252644cc347ce26196b5d552815fdf8095bbe"
                    ]
                },
                {
                    "command": [
                        "induction p as [ x | c lp IH ] using pattern_ind2.",
                        "VernacExtend",
                        "99f00ad4fe62c83cec21038e281cebd61dfc6964"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros s s' c' lv; simpl.",
                        "VernacExtend",
                        "efcbad18e681788b65de8e98e4a0e8b8d4fa0610"
                    ]
                },
                {
                    "command": [
                        "case_eq (assoc (variable_beq variable_eq_dec) x s).",
                        "VernacExtend",
                        "29d748ef13ca68dbde779ee588c9a0a809de9253"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros [ c'' lv'' ] H'' Hassoc.",
                        "VernacExtend",
                        "a05ea033e56f6a3f3326d70387593a33969ef078"
                    ]
                },
                {
                    "command": [
                        "case_eq (constructor_beq constructor_eq_dec c' c''); case_eq (list_beq value (value_beq constructor_eq_dec) lv lv''); intros Heqc Heqlv; rewrite Heqc, Heqlv in Hassoc; simpl in Hassoc; try discriminate.",
                        "VernacExtend",
                        "27f72d80c543087d7401431c08991081334e511f"
                    ]
                },
                {
                    "command": [
                        "injection Hassoc; intros; subst.",
                        "VernacExtend",
                        "5d994424770bd940334edeb07b0a6a253a4f9b73"
                    ]
                },
                {
                    "command": [
                        "apply list_beq_eq in Heqc; subst; [ | intros; apply value_beq_eq; assumption ].",
                        "VernacExtend",
                        "e74799eeeb1bc39916c1dfc175e1ea0cef458bda"
                    ]
                },
                {
                    "command": [
                        "apply constructor_beq_eq in Heqlv; subst.",
                        "VernacExtend",
                        "681089b0bc9e835e1dc8dbc4522ed99a63bbdbf9"
                    ]
                },
                {
                    "command": [
                        "unfold assoc_default.",
                        "VernacExtend",
                        "49ab364639c6538637720f12978e21da4376f733"
                    ]
                },
                {
                    "command": [
                        "rewrite H''; trivial.",
                        "VernacExtend",
                        "5ded37ffb1dabefe5331e79be6a6d2678434e15f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros Hnone Hsome; injection Hsome; intros; subst; clear Hsome.",
                        "VernacExtend",
                        "89ecb9abe40566792954d74fa1c64937aa45596c"
                    ]
                },
                {
                    "command": [
                        "unfold assoc_default.",
                        "VernacExtend",
                        "49ab364639c6538637720f12978e21da4376f733"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case_eq ((variable_beq variable_eq_dec) x x); [ intros; trivial | ].",
                        "VernacExtend",
                        "3ecbc06ef363fa044e2631fefa431282a9b55961"
                    ]
                },
                {
                    "command": [
                        "intros Heq.",
                        "VernacExtend",
                        "dfd01f405e65b2dca6b7aecb39fb335cd5c85dc2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- not_true_iff_false, variable_beq_eq in Heq.",
                        "VernacExtend",
                        "30b35ce0a66d30acfa4d7945628922162dbf78df"
                    ]
                },
                {
                    "command": [
                        "now contradict Heq.",
                        "VernacExtend",
                        "78151dc4afe3562fc0d753cd14a19f518e31dde6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros s s' c' lv.",
                        "VernacExtend",
                        "c509d710c300a51c331a879c41844919899e74ae"
                    ]
                },
                {
                    "command": [
                        "rewrite unify_equation.",
                        "VernacExtend",
                        "b4df96e41b02a2759b737314e19535556bad4685"
                    ]
                },
                {
                    "command": [
                        "case_eq (constructor_beq constructor_eq_dec c' c); [ | intros _ H; discriminate H ].",
                        "VernacExtend",
                        "3a943be69e0a5807e6e24c93965f61abdce3748c"
                    ]
                },
                {
                    "command": [
                        "rewrite constructor_beq_eq.",
                        "VernacExtend",
                        "2d4462a5f5d859290dd59e0a169aa0d8228adfe2"
                    ]
                },
                {
                    "command": [
                        "intros Heq; subst.",
                        "VernacExtend",
                        "9023653b771c72dcfc5a9e217b9ef099eb45e4bd"
                    ]
                },
                {
                    "command": [
                        "revert s s' lv; induction lp as [ | p lp IHlp ]; intros s s' lv.",
                        "VernacExtend",
                        "29e200edf65abb61038e98476450b612bf551b6b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct lv; [ now simpl | ].",
                        "VernacExtend",
                        "813b15289e6f047932d8206ebefb2bae86a91ca3"
                    ]
                },
                {
                    "command": [
                        "simpl; intros H; discriminate H.",
                        "VernacExtend",
                        "75b9ef5d5381646170fd35b0ecd11b87b57adaee"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct lv as [ | [ c' lv' ] lv ]; [ intros H; discriminate H | ].",
                        "VernacExtend",
                        "21686f1da2753e7e179470a10a96db257a5700c6"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case_eq (unify s (c_capply c' lv') p); [ | intros _ H; discriminate H ].",
                        "VernacExtend",
                        "c2ee494a5e536db85e401c85d2ff879090d4f2d9"
                    ]
                },
                {
                    "command": [
                        "intros s'' Hs'' Heq.",
                        "VernacExtend",
                        "b03769f49513f5496054b01edb620d29a30cdbda"
                    ]
                },
                {
                    "command": [
                        "f_equal; simpl; f_equal.",
                        "VernacExtend",
                        "6047930ecc90944dcce091b9ee17cfcf555fc38f"
                    ]
                },
                {
                    "command": [
                        "assert (Hvars' := unify_all_vars_defined _ _ _ Hs'').",
                        "VernacExtend",
                        "95f5f8a57a98d540ad1f9639fe89be988dd5fa47"
                    ]
                },
                {
                    "command": [
                        "apply IH in Hs''.",
                        "VernacExtend",
                        "45b91651c56fd1f652c3266e34d050629cabd0c4"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply unify_list_aux_extension in Heq; destruct Heq as (s''' & Heq & Hconsistent); subst s'.",
                        "VernacExtend",
                        "1e530c78519b591f4e42ce05928c7d4dc69be6dc"
                    ]
                },
                {
                    "command": [
                        "now rewrite eq_psubst_consistent_assoc_extension.",
                        "VernacExtend",
                        "e158269755e14f0eee67eb6c568087241f79182e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "left; trivial.",
                        "VernacExtend",
                        "2f1efd67ff23560c270a9589d0d1b100a9c80732"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl in IHlp.",
                        "VernacExtend",
                        "81fe63762baa3bf71eaf646224ae59ea7caabdd3"
                    ]
                },
                {
                    "command": [
                        "assert (Hf_equal : forall lv', c_capply c lv' = c_capply c lv -> lv' = lv) by (intros lv'' H''; injection H''; trivial).",
                        "VernacExtend",
                        "4c7331765fc23988f845db322a6c221ea7655d15"
                    ]
                },
                {
                    "command": [
                        "apply Hf_equal.",
                        "VernacExtend",
                        "77fefca6040d173e9df350b2eb562ce440d24b7b"
                    ]
                },
                {
                    "command": [
                        "apply IHlp with (s := s''); [ | assumption ].",
                        "VernacExtend",
                        "811bbb81238f61982aa355a658ee4e9e4c7bee35"
                    ]
                },
                {
                    "command": [
                        "intros p' Hin.",
                        "VernacExtend",
                        "d8b70af332742fa0a090be1d204be25961b5d9a2"
                    ]
                },
                {
                    "command": [
                        "apply IH.",
                        "VernacExtend",
                        "88103d45393d3ee3ab547447d913543854db8cea"
                    ]
                },
                {
                    "command": [
                        "right; assumption.",
                        "VernacExtend",
                        "4b9041b9a9d920fdce6d3e18e05e4d1a743614d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "psubst_app",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "revert v s s'.",
                        "VernacExtend",
                        "1b334e90a63c1c5cd942d164057da92dff9a56df"
                    ]
                },
                {
                    "command": [
                        "induction p as [ x | c lp IHp ] using pattern_ind2; simpl; intros v s s' Hconsistent Hall Hassoc.",
                        "VernacExtend",
                        "dff339f30f7a3d7444279a380b9a7306d8ba2c8b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold assoc_default in *.",
                        "VernacExtend",
                        "3764305e827d73104270bc4ae6a2cc86626d1174"
                    ]
                },
                {
                    "command": [
                        "case_eq (assoc (variable_beq variable_eq_dec) x (s' ++ s)).",
                        "VernacExtend",
                        "8241d26e6882cec85c9df7d39d8e0d189ae941eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros v' Hx.",
                        "VernacExtend",
                        "caa0335cf198bb022b800c4aae4d5bdceaaf0858"
                    ]
                },
                {
                    "command": [
                        "apply assoc_app_eq_Some in Hx.",
                        "VernacExtend",
                        "fbd5a67951cc8c8719eece5b32c84e3ffdc9c0c6"
                    ]
                },
                {
                    "command": [
                        "destruct Hx as [ Hx | [ Hnone Hx ] ]; [ | rewrite Hx in Hassoc; assumption ].",
                        "VernacExtend",
                        "919b5e5690ea7fab7857322e209a56c4619cae2e"
                    ]
                },
                {
                    "command": [
                        "case_eq (assoc (variable_beq variable_eq_dec) x s).",
                        "VernacExtend",
                        "29d748ef13ca68dbde779ee588c9a0a809de9253"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros v'' Hx'.",
                        "VernacExtend",
                        "99c65761dee38a644a88e035bf690e1a16a72244"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx' in Hassoc.",
                        "VernacExtend",
                        "6b481faea777eb9fc7754ff0b95027aa809ad82e"
                    ]
                },
                {
                    "command": [
                        "subst v''.",
                        "VernacExtend",
                        "a6bfdb292b4d93347dc76759f60603ef650ada6f"
                    ]
                },
                {
                    "command": [
                        "apply eq_None_neq_Some in Hx; [contradict Hx |].",
                        "VernacExtend",
                        "5bd6376a8484954d4dd0cded4bfe7de84ace3440"
                    ]
                },
                {
                    "command": [
                        "apply Hconsistent.",
                        "VernacExtend",
                        "352963c82437f0bc441583ea560cd4c58e3f4fb2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intro Hx'.",
                        "VernacExtend",
                        "d901000fc98a4aa3b9341beebce8553131ff5926"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx' in Hassoc.",
                        "VernacExtend",
                        "6b481faea777eb9fc7754ff0b95027aa809ad82e"
                    ]
                },
                {
                    "command": [
                        "apply eq_None_neq_Some in Hx; [contradict Hx |].",
                        "VernacExtend",
                        "5bd6376a8484954d4dd0cded4bfe7de84ace3440"
                    ]
                },
                {
                    "command": [
                        "apply Hconsistent.",
                        "VernacExtend",
                        "352963c82437f0bc441583ea560cd4c58e3f4fb2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intro Hassoc'.",
                        "VernacExtend",
                        "789adfebdc55989c38b7cd9433a52e640dd8b81f"
                    ]
                },
                {
                    "command": [
                        "apply assoc_app_eq_None in Hassoc'.",
                        "VernacExtend",
                        "214ccd449bbbd4e5aee951aee21305a868d8e17e"
                    ]
                },
                {
                    "command": [
                        "destruct Hassoc' as [_ Hassoc'].",
                        "VernacExtend",
                        "99540a3f0ed722299736f2e62dae1225f362a76f"
                    ]
                },
                {
                    "command": [
                        "rewrite Hassoc' in Hassoc.",
                        "VernacExtend",
                        "fe4575890303a26948e07a94aa4745edef59d6bf"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hassoc.",
                        "VernacExtend",
                        "76d09d9bbafcca6d3a76274c0ede2251259026ae"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply map_in_ext.",
                        "VernacExtend",
                        "377e6a2f6dbe5ab0d6ad060c108fd3490754649c"
                    ]
                },
                {
                    "command": [
                        "intros p Hp.",
                        "VernacExtend",
                        "cf737bd4e185c03175335af1ca6ae52da34cba56"
                    ]
                },
                {
                    "command": [
                        "apply eq_psubst_consistent_assoc_extension; [ assumption | ].",
                        "VernacExtend",
                        "0ea44aa778ddb491cb2262f033ac60bd8dc4d7cc"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "apply Hall.",
                        "VernacExtend",
                        "958becbd2aa76940a7c85e4166a8d2f1f734ae4f"
                    ]
                },
                {
                    "command": [
                        "apply in_flat_map.",
                        "VernacExtend",
                        "965566958621c742b363bd954504ea862973ec4d"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unify_list_sound",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "assert ( Hgen: forall lv lp s0 s, unify_list s0 lv lp = Some s -> map (psubst s) lp = lv ).",
                        "VernacExtend",
                        "e164129c3f8c213da95f87f51dcb0f252e26ef8e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold unify_list.",
                        "VernacExtend",
                        "aaca24e664f59dfe1822d3c89377ab4c1d37fa91"
                    ]
                },
                {
                    "command": [
                        "induction lv as [ | v lv IHlv ]; intros [ | p lp ] s0 s Hula; [ trivial | simpl in Hula; discriminate Hula | simpl in Hula; discriminate Hula | ].",
                        "VernacExtend",
                        "ab2469d4f1e1335745243a31023df608ec20082b"
                    ]
                },
                {
                    "command": [
                        "unfold option_map in Hula.",
                        "VernacExtend",
                        "c7d26cb14ad51558b13d5f8e6baf19c1970d0774"
                    ]
                },
                {
                    "command": [
                        "case_eq (unify_list_aux s0 (v :: lv) (p :: lp)); [ | intro Hnone; rewrite Hnone in Hula; discriminate Hula ].",
                        "VernacExtend",
                        "6f8646109912ae37ebbf453d23a5ad02976d15aa"
                    ]
                },
                {
                    "command": [
                        "intros s' Hs'.",
                        "VernacExtend",
                        "3deadcc30608da9a6aff57f4af0e4fa25bf0814d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hs' in Hula.",
                        "VernacExtend",
                        "a49615f142c734344f45165625e967797c833518"
                    ]
                },
                {
                    "command": [
                        "injection Hula; clear Hula; intro; subst s.",
                        "VernacExtend",
                        "3a3e6ef67b7903b9e7627efd61df8fb36fb7434b"
                    ]
                },
                {
                    "command": [
                        "apply unify_list_unify_unify_list in Hs'.",
                        "VernacExtend",
                        "3994d9338e88a9c04dcd445de3bd6c72271b48e4"
                    ]
                },
                {
                    "command": [
                        "destruct Hs' as (s'' & Hs'' & Hs').",
                        "VernacExtend",
                        "d6eb0ce0520287f731e7e7301606c5b008bb00eb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert(HHs'' := Hs'').",
                        "VernacExtend",
                        "dcf5e3b9f7a5fafe1b5a1b536b554869e4e55d0d"
                    ]
                },
                {
                    "command": [
                        "apply unify_sound in Hs''.",
                        "VernacExtend",
                        "e5c7822042f7fcf0abcf2ac44dff5a24e681e761"
                    ]
                },
                {
                    "command": [
                        "assert(HHs' := Hs').",
                        "VernacExtend",
                        "d23370fba46d4f0e9a79708fc0ed3c261d6c5a97"
                    ]
                },
                {
                    "command": [
                        "apply unify_list_aux_extension in Hs'.",
                        "VernacExtend",
                        "16b58946f5c57637162f9a0419730084cf2a3a4f"
                    ]
                },
                {
                    "command": [
                        "destruct Hs' as (s''' & Hs' & Hconsistent).",
                        "VernacExtend",
                        "9389dedf0ea6640c0b841baf07cc29171db8aeaa"
                    ]
                },
                {
                    "command": [
                        "subst s'.",
                        "VernacExtend",
                        "885ad85e6e6477ef34f16128c01c78736f85c739"
                    ]
                },
                {
                    "command": [
                        "apply psubst_app; [ assumption | | assumption ].",
                        "VernacExtend",
                        "852cace31206dadb5fb00dfdef2f0b356b0246df"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "eapply unify_all_vars_defined; [ exact HHs'' | exact Hx].",
                        "VernacExtend",
                        "48b5d560ba6c5bf200a2877d40a3e1cd83583d4c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply IHlv with (s0 := s'').",
                        "VernacExtend",
                        "8ae11542a50ae7a807260c21a4ffb099fd271bf8"
                    ]
                },
                {
                    "command": [
                        "rewrite Hs'.",
                        "VernacExtend",
                        "94b13073ba4a4e7e716d230ddab751f08269e38e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "first_rule_sound",
            "line_nb": 369,
            "steps": [
                {
                    "command": [
                        "clear prog_is_ppo prog_is_wf.",
                        "VernacExtend",
                        "c9112eb964cac79721dace7ce8463f667f086937"
                    ]
                },
                {
                    "command": [
                        "unfold first_rule.",
                        "VernacExtend",
                        "cff67489ab11131f7d5e31c4f6caa3980561676e"
                    ]
                },
                {
                    "command": [
                        "induction prog as [ | r0 prog' IHp ]; simpl; intros f lv i s t; [ intros H; discriminate H | ].",
                        "VernacExtend",
                        "c691bc6f940c50c08ac8abc2351b00b8e3a40ef2"
                    ]
                },
                {
                    "command": [
                        "destruct r0 as [ f0 lp0 t0 ].",
                        "VernacExtend",
                        "ca00495938c09b28c2a0e9f3a7e6f5ce92fa4f61"
                    ]
                },
                {
                    "command": [
                        "case_eq (function_beq function_eq_dec f f0).",
                        "VernacExtend",
                        "e526f92d4809004631a5739367cd07d18eb9c5f1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro Heqf; rewrite function_beq_eq in Heqf.",
                        "VernacExtend",
                        "450d017e6d77173cd60e20ae584adfcd503a6ca5"
                    ]
                },
                {
                    "command": [
                        "case_eq (unify_list [] lv lp0).",
                        "VernacExtend",
                        "734ac8ccf1ac433eb7744f3662839f974786e17c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros s' Hs'.",
                        "VernacExtend",
                        "3deadcc30608da9a6aff57f4af0e4fa25bf0814d"
                    ]
                },
                {
                    "command": [
                        "intros H; injection H; clear H.",
                        "VernacExtend",
                        "c4600dad45c4f3ac3f36d892918ec501ca20ad26"
                    ]
                },
                {
                    "command": [
                        "intros Heqt Heqs Hi.",
                        "VernacExtend",
                        "9e63b1284e3dc67081549da72e516cff433f7d16"
                    ]
                },
                {
                    "command": [
                        "subst s' t f0 i.",
                        "VernacExtend",
                        "ef73ca9ddf48c5be6b2970d9a53c9d3b4e0b9093"
                    ]
                },
                {
                    "command": [
                        "exists (lp0, t0).",
                        "VernacExtend",
                        "68d7ba549878990de8d9507c1102f486bd592ab7"
                    ]
                },
                {
                    "command": [
                        "repeat split; [ apply lt_O_Sn | assumption ].",
                        "VernacExtend",
                        "1366445b17dfb38b87ba2606297907861874d60b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros Hnone Hrec.",
                        "VernacExtend",
                        "3ff07b0aff336d4ccbfaefa0e621b9dc365c73c2"
                    ]
                },
                {
                    "command": [
                        "case_eq (first_rule_rec prog' (f,lv)); [ | intros H; rewrite H in Hrec; discriminate Hrec ].",
                        "VernacExtend",
                        "dc88f672ce12ad69d3e49e1e4096128ee3c0c077"
                    ]
                },
                {
                    "command": [
                        "intros [ [i' s'] t'] Heq.",
                        "VernacExtend",
                        "995101107766662860002c77de98ca39f02f2ba8"
                    ]
                },
                {
                    "command": [
                        "rewrite Heq in Hrec.",
                        "VernacExtend",
                        "01b271fb8f42d9da947675e0188e7c816890110f"
                    ]
                },
                {
                    "command": [
                        "injection Hrec; clear Hrec; intros; subst.",
                        "VernacExtend",
                        "15d2cfa987431916b0e9c6a11b8fb732da9dcc7a"
                    ]
                },
                {
                    "command": [
                        "apply IHp in Heq.",
                        "VernacExtend",
                        "c8b0e3c218b328197a41aa28f81bd0cafc2da566"
                    ]
                },
                {
                    "command": [
                        "destruct Heq as [[lp t'] Hlpt].",
                        "VernacExtend",
                        "04a8e74542c5f57af45f883d4e89459895868ca4"
                    ]
                },
                {
                    "command": [
                        "exists (lp, t').",
                        "VernacExtend",
                        "0e3a2386f7cad944226ae719b1de524564cf8d82"
                    ]
                },
                {
                    "command": [
                        "repeat split; try tauto.",
                        "VernacExtend",
                        "73ab61bcd83816f54c2b2b79e9ba66e0a6fb0252"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros Hneq Hrec.",
                        "VernacExtend",
                        "113fdaec9572d97eb1153417563e97ac4eb8b1e1"
                    ]
                },
                {
                    "command": [
                        "case_eq (first_rule_rec prog' (f,lv)); [ | intros H; rewrite H in Hrec; discriminate Hrec ].",
                        "VernacExtend",
                        "dc88f672ce12ad69d3e49e1e4096128ee3c0c077"
                    ]
                },
                {
                    "command": [
                        "intros [ [i' s'] t'] Heq.",
                        "VernacExtend",
                        "995101107766662860002c77de98ca39f02f2ba8"
                    ]
                },
                {
                    "command": [
                        "rewrite Heq in Hrec.",
                        "VernacExtend",
                        "01b271fb8f42d9da947675e0188e7c816890110f"
                    ]
                },
                {
                    "command": [
                        "injection Hrec; clear Hrec; intros; subst.",
                        "VernacExtend",
                        "15d2cfa987431916b0e9c6a11b8fb732da9dcc7a"
                    ]
                },
                {
                    "command": [
                        "apply IHp in Heq.",
                        "VernacExtend",
                        "c8b0e3c218b328197a41aa28f81bd0cafc2da566"
                    ]
                },
                {
                    "command": [
                        "destruct Heq as [[lp t'] Hlpt].",
                        "VernacExtend",
                        "04a8e74542c5f57af45f883d4e89459895868ca4"
                    ]
                },
                {
                    "command": [
                        "exists (lp, t').",
                        "VernacExtend",
                        "0e3a2386f7cad944226ae719b1de524564cf8d82"
                    ]
                },
                {
                    "command": [
                        "repeat split; try tauto.",
                        "VernacExtend",
                        "73ab61bcd83816f54c2b2b79e9ba66e0a6fb0252"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "active_term_order_superset_dec",
            "line_nb": 408,
            "steps": [
                {
                    "command": [
                        "intros t t'.",
                        "VernacExtend",
                        "1a11ecbf44f63725f73866eddd0619daa5e00ad9"
                    ]
                },
                {
                    "command": [
                        "apply lex_prod_dec.",
                        "VernacExtend",
                        "43eef518d26517c3a122afb7df705bd94faa8de6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply eq_nat_dec.",
                        "VernacExtend",
                        "536650fad05f5969715904f755cca79b8956a9cb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply lt_dec.",
                        "VernacExtend",
                        "6ecc60f8ce71fd0f0a0fc29d88300bc73f3c090a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold value_list_order.",
                        "VernacExtend",
                        "316f8257eb8841437f523a6e1a2e1ae0f3d0c7c9"
                    ]
                },
                {
                    "command": [
                        "apply lt_dec.",
                        "VernacExtend",
                        "6ecc60f8ce71fd0f0a0fc29d88300bc73f3c090a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "wf_lex",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "exact (wf_lexprod active_term_order_superset_wf term_order_wf).",
                        "VernacExtend",
                        "9c85c8acafe49502d44c01cb7a69a98c21826163"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_terms_trans",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "induction t3 using term_ind2; intros H1 H2; simpl in *.",
                        "VernacExtend",
                        "3c51975214b5902f946a435796cc82d35f3b3934"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [Heq | Hf].",
                        "VernacExtend",
                        "03c1035fe34e1f29dfde910d82f8831f05daa799"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst t2.",
                        "VernacExtend",
                        "e4dd57e9b9492f7f098f4c9b9f0931631f282df4"
                    ]
                },
                {
                    "command": [
                        "left; now inversion H1.",
                        "VernacExtend",
                        "e3c435d6c8a957c32dd12970bfc41f19b38682fb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion Hf.",
                        "VernacExtend",
                        "f0fa7629d2f2e1505c0b86ac0753626551818277"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [Heq |Hin].",
                        "VernacExtend",
                        "7d7b00a2de5383e42ae16483f7d911a31d659e6d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst t2.",
                        "VernacExtend",
                        "e4dd57e9b9492f7f098f4c9b9f0931631f282df4"
                    ]
                },
                {
                    "command": [
                        "exact H1.",
                        "VernacExtend",
                        "c03ab82d1e411e1dcd211c59917a4946e039be00"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "rewrite in_flat_map in *.",
                        "VernacExtend",
                        "6d601231f12f50562c8962da7ec35bbf406c8f93"
                    ]
                },
                {
                    "command": [
                        "destruct Hin as (x & Hin & Hx).",
                        "VernacExtend",
                        "2128be89b23f02034995b04dd5aa8b5fba5c8642"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split; [exact Hin |].",
                        "VernacExtend",
                        "8e807754c3b22f34fe3ecbc6902427e96501da80"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [Heq |Hin].",
                        "VernacExtend",
                        "7d7b00a2de5383e42ae16483f7d911a31d659e6d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst t2.",
                        "VernacExtend",
                        "e4dd57e9b9492f7f098f4c9b9f0931631f282df4"
                    ]
                },
                {
                    "command": [
                        "exact H1.",
                        "VernacExtend",
                        "c03ab82d1e411e1dcd211c59917a4946e039be00"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "rewrite in_flat_map in *.",
                        "VernacExtend",
                        "6d601231f12f50562c8962da7ec35bbf406c8f93"
                    ]
                },
                {
                    "command": [
                        "destruct Hin as (x & Hin & Hx).",
                        "VernacExtend",
                        "2128be89b23f02034995b04dd5aa8b5fba5c8642"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split; [exact Hin |].",
                        "VernacExtend",
                        "8e807754c3b22f34fe3ecbc6902427e96501da80"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_terms_strict_trans",
            "line_nb": 458,
            "steps": [
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "destruct t3.",
                        "VernacExtend",
                        "34afc146341b140988849608a699e505b8fbb9bf"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H2.",
                        "VernacExtend",
                        "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "apply in_flat_map in H2.",
                        "VernacExtend",
                        "22e55639797c5a4c362fcc2a134042847198c591"
                    ]
                },
                {
                    "command": [
                        "apply sub_term_strict_incl in H1.",
                        "VernacExtend",
                        "5d640af8aeba683a92b7f8fa7da6c622b77d5912"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as (x & Hin & Hx).",
                        "VernacExtend",
                        "72cb4393579c0538bd0da56e0d7bef864ea2284c"
                    ]
                },
                {
                    "command": [
                        "apply in_flat_map.",
                        "VernacExtend",
                        "965566958621c742b363bd954504ea862973ec4d"
                    ]
                },
                {
                    "command": [
                        "exists x; split; [exact Hin | now apply sub_terms_trans with t2].",
                        "VernacExtend",
                        "8dd5743df2718cb5b33617fd8b0b1dc744cad7c7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "apply in_flat_map in H2.",
                        "VernacExtend",
                        "22e55639797c5a4c362fcc2a134042847198c591"
                    ]
                },
                {
                    "command": [
                        "apply sub_term_strict_incl in H1.",
                        "VernacExtend",
                        "5d640af8aeba683a92b7f8fa7da6c622b77d5912"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as (x & Hin & Hx).",
                        "VernacExtend",
                        "72cb4393579c0538bd0da56e0d7bef864ea2284c"
                    ]
                },
                {
                    "command": [
                        "apply in_flat_map.",
                        "VernacExtend",
                        "965566958621c742b363bd954504ea862973ec4d"
                    ]
                },
                {
                    "command": [
                        "exists x; split; [exact Hin | now apply sub_terms_trans with t2].",
                        "VernacExtend",
                        "8dd5743df2718cb5b33617fd8b0b1dc744cad7c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lex_trans",
            "line_nb": 478,
            "steps": [
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "refine (lexprod_trans _ _ H1 H2).",
                        "VernacExtend",
                        "3d00c328010442dd09f169b570ac921fc67bbc4c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x1 x2 x3 Hx1 Hx2.",
                        "VernacExtend",
                        "68173d790230357b3c414669491a255281089509"
                    ]
                },
                {
                    "command": [
                        "refine (lexprod_trans lt_trans _ Hx1 Hx2).",
                        "VernacExtend",
                        "d786b4fddf5f544f1f20def03310b27f7f4cf77c"
                    ]
                },
                {
                    "command": [
                        "intros v1 v2 v3 Hv1 Hv2.",
                        "VernacExtend",
                        "7553b790d0b72a969300c82287c34c197354fbe7"
                    ]
                },
                {
                    "command": [
                        "eapply lt_trans; [exact Hv1 | exact Hv2].",
                        "VernacExtend",
                        "41ad7f597ad054b3200663eded49158d413fb3c3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply sub_terms_strict_trans; eauto.",
                        "VernacExtend",
                        "7f64408312e90ff96718257bd7eb5a9b7edede84"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deuxpointun",
            "line_nb": 492,
            "steps": [
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "constructor; intros l' Hlo.",
                        "VernacExtend",
                        "288773ed7145e10745433d2916852a1ab830386a"
                    ]
                },
                {
                    "command": [
                        "inversion Hlo; subst.",
                        "VernacExtend",
                        "6b5fc6b86f2c0aa3f4e87d0824673b322de65e05"
                    ]
                },
                {
                    "command": [
                        "induction l1.",
                        "VernacExtend",
                        "dfeb7bb70eb7390d22f3eada025c33a176cd1338"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "assert (Ha0 : R a0 a) by (inversion H3; assumption).",
                        "VernacExtend",
                        "92ddc7de4a2f13f60230e7c5838e860528fb7031"
                    ]
                },
                {
                    "command": [
                        "apply (H1 a0 Ha0).",
                        "VernacExtend",
                        "6a004f3f4b9a35e13fdb0bf711371263d43cdb7e"
                    ]
                },
                {
                    "command": [
                        "unfold W.",
                        "VernacExtend",
                        "10e49b3ff2c19466718e058f2acc5b32b7cb3e24"
                    ]
                },
                {
                    "command": [
                        "apply IHl1; try constructor; inversion H3; assumption.",
                        "VernacExtend",
                        "d60cbc4c5f2ada4f88aa77b412630762a1259327"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deuxpointdeux",
            "line_nb": 508,
            "steps": [
                {
                    "command": [
                        "intros H l' Hacc.",
                        "VernacExtend",
                        "c6460dfc96625d33a289d807c56e9f633cd8d7d4"
                    ]
                },
                {
                    "command": [
                        "induction Hacc as [l'' Hl'' _].",
                        "VernacExtend",
                        "7df70f54f03432a75030c0009dbaa27434221924"
                    ]
                },
                {
                    "command": [
                        "apply deuxpointun.",
                        "VernacExtend",
                        "d9b4a58fdf7ed412aa76bab8793c14cf039ac945"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros b Hb l' Hl'.",
                        "VernacExtend",
                        "fcbe60c04c782c4e2535c86e14ea6d0bb1996cf5"
                    ]
                },
                {
                    "command": [
                        "now apply H.",
                        "VernacExtend",
                        "e28edffe226486c29d50d204164561fb199b8c97"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now constructor.",
                        "VernacExtend",
                        "e001978ec065ef0fd63cb804e72fb73890e93711"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deuxpointtrois",
            "line_nb": 518,
            "steps": [
                {
                    "command": [
                        "intros HR.",
                        "VernacExtend",
                        "de2ecf6a8d85047b019b75abc4c29fdbd3961e36"
                    ]
                },
                {
                    "command": [
                        "revert l.",
                        "VernacExtend",
                        "11a722880df1bc386870f9ce37f36e8be2871e9c"
                    ]
                },
                {
                    "command": [
                        "induction (HR a).",
                        "VernacExtend",
                        "a26b7bd9705d6a83d807bdffa604b23ae830c2a5"
                    ]
                },
                {
                    "command": [
                        "intros l Hl.",
                        "VernacExtend",
                        "73c348d1ec294870f643ef6a781f4b0c88e45247"
                    ]
                },
                {
                    "command": [
                        "eapply deuxpointdeux; [ exact l | | exact Hl ].",
                        "VernacExtend",
                        "7079c034d1de2e1e211d17d30aeb49beb3e6f7cf"
                    ]
                },
                {
                    "command": [
                        "intros b Hb l' Hl'.",
                        "VernacExtend",
                        "fcbe60c04c782c4e2535c86e14ea6d0bb1996cf5"
                    ]
                },
                {
                    "command": [
                        "now apply H0.",
                        "VernacExtend",
                        "ab5307f8a9444f9e7d521e7a802d135557791140"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_order_wf",
            "line_nb": 527,
            "steps": [
                {
                    "command": [
                        "intro HwfR.",
                        "VernacExtend",
                        "9538099914433bcc890349d27e2b0a4215544d61"
                    ]
                },
                {
                    "command": [
                        "intro l.",
                        "VernacExtend",
                        "c8139627914eb6a3cf51966a8a1d73a6c51f81e7"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply deuxpointtrois.",
                        "VernacExtend",
                        "d8a544cb687c608b45428a5d0135338c99868815"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "product_suml_lt",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "intro Hprod.",
                        "VernacExtend",
                        "49e567f04cbff82f1da0044b2702314fe931525e"
                    ]
                },
                {
                    "command": [
                        "induction Hprod.",
                        "VernacExtend",
                        "76c3eff3fe79762c91980f771c7ff0945cf59551"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; subst; omega.",
                        "VernacExtend",
                        "45d07537c6e0d4294ce567dbafc374c5b83b1b66"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply plus_lt_le_compat; [assumption|].",
                        "VernacExtend",
                        "eea694e78e3ce4ce135b38febd52480840ee84c4"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (x0 <= y0) by (destruct H0; omega).",
                        "VernacExtend",
                        "c3c98d8417cf83250ec178fb78b30e603b0ef252"
                    ]
                },
                {
                    "command": [
                        "simpl; omega.",
                        "VernacExtend",
                        "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PPO_active_term_order_superset",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "intro HPPO.",
                        "VernacExtend",
                        "188b6205b861f0d2ebc47a788f093fbbe23771ab"
                    ]
                },
                {
                    "command": [
                        "destruct act as (f & lv).",
                        "VernacExtend",
                        "e27f361756fd176a434746fa4736c62f7b9fb3ca"
                    ]
                },
                {
                    "command": [
                        "destruct act' as (f' & lv').",
                        "VernacExtend",
                        "d113caf3e6087af3943e2fef2d96a60836504df9"
                    ]
                },
                {
                    "command": [
                        "simpl in HPPO.",
                        "VernacExtend",
                        "7ec6e3e305c1d28ed7be570eec5118d5b4b0ea57"
                    ]
                },
                {
                    "command": [
                        "inversion HPPO; subst.",
                        "VernacExtend",
                        "bbd746a05b6dbff3daabe7a61f9809c4fa689a43"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply in_map_iff in H1.",
                        "VernacExtend",
                        "ed0d83e98a1c06c0aa42676b7a93572bb9f37dc1"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as (v & Hv & _).",
                        "VernacExtend",
                        "919e15aed46dbe2b8044fb2f9e242a10447cdc21"
                    ]
                },
                {
                    "command": [
                        "destruct v.",
                        "VernacExtend",
                        "6f1469bc2ceb2b76ca58f6ada86b5fc3c1e42ed3"
                    ]
                },
                {
                    "command": [
                        "inversion Hv.",
                        "VernacExtend",
                        "f85af1c14e3327a53db0b9b8ce628a4672fb7541"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply in_map_iff in H2.",
                        "VernacExtend",
                        "5b8eaf7deadf259415680da39c8f858bb752000f"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as (v & Hv & _).",
                        "VernacExtend",
                        "ffca81de608cc5a60f607c9347e111f2df5f9dab"
                    ]
                },
                {
                    "command": [
                        "subst t.",
                        "VernacExtend",
                        "9a338ade929583d1d9999c5f080f6e2c965d6617"
                    ]
                },
                {
                    "command": [
                        "contradict H3.",
                        "VernacExtend",
                        "4165cfca2fce31090e02fe156593ea5578faed3a"
                    ]
                },
                {
                    "command": [
                        "apply fapply_not_PPO_value; trivial.",
                        "VernacExtend",
                        "3269ac53de93a53a628e679d08a8c54b228baa0a"
                    ]
                },
                {
                    "command": [
                        "apply term_value_eqv; eauto.",
                        "VernacExtend",
                        "fb19b4f24355aaa8ce66a9fb843cffed135f99e1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold active_term_order_superset.",
                        "VernacExtend",
                        "d94512b09138ff6d9b12546d693f6448d45c3d26"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold value_list_order.",
                        "VernacExtend",
                        "316f8257eb8841437f523a6e1a2e1ae0f3d0c7c9"
                    ]
                },
                {
                    "command": [
                        "apply product_suml_lt.",
                        "VernacExtend",
                        "3f4fc65552908534441a7bd8611ec7428b5f010f"
                    ]
                },
                {
                    "command": [
                        "clear f f' H2 HPPO.",
                        "VernacExtend",
                        "d11885245a38c0217aec8b81e6509e7ee8291b73"
                    ]
                },
                {
                    "command": [
                        "revert H4; intros Hppo.",
                        "VernacExtend",
                        "74a52a84bbe2cece3bfb01fb2a8c914ea3e3475c"
                    ]
                },
                {
                    "command": [
                        "assert (Hlen := Hppo).",
                        "VernacExtend",
                        "0b131e097c0679653683f8be9db6948dde230d62"
                    ]
                },
                {
                    "command": [
                        "apply product_length in Hlen.",
                        "VernacExtend",
                        "da7b6e20e063c7da386cd29d77e481efe6fb1c89"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite map_length in Hlen.",
                        "VernacExtend",
                        "e9a11ba5c3cb169c03e228b605e045fee7a3f087"
                    ]
                },
                {
                    "command": [
                        "revert lv' Hppo Hlen; induction lv as [ | v lv IH ]; intros lv' Hppo Hlen; destruct lv' as [ | v' lv' ]; simpl in *; try discriminate Hlen.",
                        "VernacExtend",
                        "152d22a49ddde4980329db7fbe5770405a2ae638"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion Hppo.",
                        "VernacExtend",
                        "214544f66d329945efd5f2865632086f78d08f81"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "revert Hppo; set (lt := map (@term_from_value _ _ _) lv : list term); set (lt' := map (@term_from_value _ _ _) lv' : list term); intros Hppo.",
                        "VernacExtend",
                        "cf5c840a24b1d057131dbdd99aa863aadf04d610"
                    ]
                },
                {
                    "command": [
                        "apply eq_add_S in Hlen.",
                        "VernacExtend",
                        "0330ce76858d52621da4253fe772d01712ea4606"
                    ]
                },
                {
                    "command": [
                        "inversion Hppo; subst.",
                        "VernacExtend",
                        "cd5e21ec88ce0df86f2ef9a3b28c84acfeeba3a1"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply term_from_value_injective in H2; subst v'.",
                        "VernacExtend",
                        "566f988c266c1c0174a262a6d959a477e3bc8d5c"
                    ]
                },
                {
                    "command": [
                        "apply product_conseq; trivial.",
                        "VernacExtend",
                        "66a3f52774b118215d6557ac0da8b653c429958b"
                    ]
                },
                {
                    "command": [
                        "apply IH; assumption.",
                        "VernacExtend",
                        "f9f8ef31ef77851f5c4278a715710f039242a24e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply product_consst; [ apply (PPO_value_lt_size variable function) with (rank := rank); assumption | ].",
                        "VernacExtend",
                        "32b4eb5195ce6cd35050a592b9da3cc21b02e3ce"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "clear Hppo v v' IH H2; revert lt lv' lt' Hlen H4; induction lv as [ | v lv IH ]; intros lt lv' lt' Hlen Hfor; destruct lv' as [ | v' lv' ]; [ constructor | inversion Hlen | inversion Hlen | ].",
                        "VernacExtend",
                        "e2b1aed3f065aeebb6855b7984709d9f658ff329"
                    ]
                },
                {
                    "command": [
                        "subst lt lt'.",
                        "VernacExtend",
                        "5a76d2e1b5e8395ab7189fdf393cc96b6623b774"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "apply eq_add_S in Hlen.",
                        "VernacExtend",
                        "0330ce76858d52621da4253fe772d01712ea4606"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion Hfor; subst.",
                        "VernacExtend",
                        "20c749fb3f7d0cbadcc409d5cb21d177129ba41f"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply (PPO_value_lt_size variable function) with (rank := rank); assumption.",
                        "VernacExtend",
                        "c8e040c5139ab6e29574b4380051cb8afc338362"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply (@term_from_value_injective variable function); assumption.",
                        "VernacExtend",
                        "61929b9777cdb23ea9e79412b4291606ced606a3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IH; [ | inversion Hfor ]; assumption.",
                        "VernacExtend",
                        "988ac609218278e08a47bb1d01924b2fb39665da"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "term_order_PPO",
            "line_nb": 618,
            "steps": [
                {
                    "command": [
                        "intro Horder.",
                        "VernacExtend",
                        "07842f29592f2ca0b50565ad62fa6b22ba669a63"
                    ]
                },
                {
                    "command": [
                        "unfold term_order in Horder.",
                        "VernacExtend",
                        "949fd5f6de55f77bd74ab297155b2626cce17442"
                    ]
                },
                {
                    "command": [
                        "induction t2 using term_ind2.",
                        "VernacExtend",
                        "48e6fc158a5511b9e295c4b29eeb5fd891502cd5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion Horder.",
                        "VernacExtend",
                        "05f82409c84c278fa1fdb98e59e0119f0ff93e0b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in Horder.",
                        "VernacExtend",
                        "c4f041b94c0d15a30184b58b79bf86ce7cc28b5e"
                    ]
                },
                {
                    "command": [
                        "apply in_flat_map in Horder.",
                        "VernacExtend",
                        "1885acbd31f43d0925301bba94aa06165ee10f81"
                    ]
                },
                {
                    "command": [
                        "destruct Horder as (t' & Hin & Ht').",
                        "VernacExtend",
                        "6b3ada70e137c63fc9a5aa39e4a1122a5d08f5dd"
                    ]
                },
                {
                    "command": [
                        "apply PPO_trans_eq with t'.",
                        "VernacExtend",
                        "6fb30b04e938fb5c3aa0edc3a6cc042b920abaa6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply sub_term_eq_or_strict in Ht'.",
                        "VernacExtend",
                        "51f45502341b75e3fa6fa3b350c9abd2b5344941"
                    ]
                },
                {
                    "command": [
                        "destruct Ht' as [Heq | Ht'].",
                        "VernacExtend",
                        "59a700716ca9d782165cd6405eaced6b747c3407"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "now subst; right.",
                        "VernacExtend",
                        "04e9f47c001c9ad3302700c5bf692d3f106ef0f9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "left; apply H; assumption.",
                        "VernacExtend",
                        "0b6b3f2e09b093cc7d4b841eb77476b468d58f35"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now apply ppo_constr_in.",
                        "VernacExtend",
                        "13917ab5aa609e226121ec23b3ceba0a20fca06a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in Horder.",
                        "VernacExtend",
                        "c4f041b94c0d15a30184b58b79bf86ce7cc28b5e"
                    ]
                },
                {
                    "command": [
                        "apply in_flat_map in Horder.",
                        "VernacExtend",
                        "1885acbd31f43d0925301bba94aa06165ee10f81"
                    ]
                },
                {
                    "command": [
                        "destruct Horder as (t' & Hin & Ht').",
                        "VernacExtend",
                        "6b3ada70e137c63fc9a5aa39e4a1122a5d08f5dd"
                    ]
                },
                {
                    "command": [
                        "apply PPO_trans_eq with t'.",
                        "VernacExtend",
                        "6fb30b04e938fb5c3aa0edc3a6cc042b920abaa6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply sub_term_eq_or_strict in Ht'.",
                        "VernacExtend",
                        "51f45502341b75e3fa6fa3b350c9abd2b5344941"
                    ]
                },
                {
                    "command": [
                        "destruct Ht' as [Heq | Ht'].",
                        "VernacExtend",
                        "59a700716ca9d782165cd6405eaced6b747c3407"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "now subst; right.",
                        "VernacExtend",
                        "04e9f47c001c9ad3302700c5bf692d3f106ef0f9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "left; apply H; assumption.",
                        "VernacExtend",
                        "0b6b3f2e09b093cc7d4b841eb77476b468d58f35"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now apply ppo_fun_in.",
                        "VernacExtend",
                        "01a29161be802324f5d78e954124570aaa4ee54a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_arity_subst",
            "line_nb": 653,
            "steps": [
                {
                    "command": [
                        "intros Hvars t'.",
                        "VernacExtend",
                        "9eb2c0580678e130b8a406cc768e93cbd09b62ff"
                    ]
                },
                {
                    "command": [
                        "assert (Hn : forall x, In x (vars_of_term t) -> max_arity_term (term_from_value variable function (s x)) <= max_arity_term t').",
                        "VernacExtend",
                        "8c808983a39e3ccae8837bd1e191861d945f858d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "subst t'.",
                        "VernacExtend",
                        "fbf96dac500541bc01a531f132a34f424d40e1d9"
                    ]
                },
                {
                    "command": [
                        "intros x Hx; apply Hvars in Hx; simpl.",
                        "VernacExtend",
                        "9d35b0ac1f327c7dfd99ae71b13b6f39a87bc7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite PeanoNat.Nat.max_le_iff; right.",
                        "VernacExtend",
                        "e8bb6176d6d915481c9f41cac23c63d2ef7a91d3"
                    ]
                },
                {
                    "command": [
                        "clear t f Hvars.",
                        "VernacExtend",
                        "555ec557c6f61af679c557f696068bfdd5b0b3df"
                    ]
                },
                {
                    "command": [
                        "rewrite in_flat_map in Hx; destruct Hx as (p & Hp & Hvars).",
                        "VernacExtend",
                        "af2fa5321bfd0187e69634118813be22031d34a0"
                    ]
                },
                {
                    "command": [
                        "transitivity (max_arity_term (term_from_value variable function (psubst s p))).",
                        "VernacExtend",
                        "0324d70b33e589bc1b10a2c59b3e07b4fddfb5c6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "clear lp Hp; revert x Hvars.",
                        "VernacExtend",
                        "b783ed9649502eb1cad24947346f2ba745e54ed1"
                    ]
                },
                {
                    "command": [
                        "induction p as [ x | c lp IH ] using pattern_ind2.",
                        "VernacExtend",
                        "99f00ad4fe62c83cec21038e281cebd61dfc6964"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x' H; destruct H; [ subst x' | ]; easy.",
                        "VernacExtend",
                        "55605f1e4e28d584e7ea83d27589d17e5408d053"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros x Hx; simpl in Hx.",
                        "VernacExtend",
                        "b42cc69571268c9442a5ff65922f4d69419fdd9e"
                    ]
                },
                {
                    "command": [
                        "apply in_flat_map in Hx; destruct Hx as (p & Hp & Hvars).",
                        "VernacExtend",
                        "d3b5979c2e21fb0b66116de848d8c46997fae135"
                    ]
                },
                {
                    "command": [
                        "transitivity (max_arity_term (term_from_value variable function (psubst s p))).",
                        "VernacExtend",
                        "0324d70b33e589bc1b10a2c59b3e07b4fddfb5c6"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "now apply IH.",
                        "VernacExtend",
                        "f55d33d07a7d04fb33e00d25db71d556dde4e829"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite PeanoNat.Nat.max_le_iff; right.",
                        "VernacExtend",
                        "e8bb6176d6d915481c9f41cac23c63d2ef7a91d3"
                    ]
                },
                {
                    "command": [
                        "now apply maxl_is_max, in_map, in_map, in_map.",
                        "VernacExtend",
                        "3130593e9ba95979fbc2f0aca5d48fdb7408b84c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply maxl_is_max, in_map.",
                        "VernacExtend",
                        "62ed2ee1bfd74175ec7e23f76679d9cf909139e3"
                    ]
                },
                {
                    "command": [
                        "set (t := term_from_value _ _ _); change (term_from_value _ _ _) with ((fun p => term_from_value variable function (psubst s p)) p) in t; subst t.",
                        "VernacExtend",
                        "4a567457671dc72ab273da42b0d54d39775607e1"
                    ]
                },
                {
                    "command": [
                        "now apply in_map.",
                        "VernacExtend",
                        "eeb5dd751e54ba9ce367b7ed6d4a90d81f16a135"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "remember (max_arity_term t') as n eqn: Heq; clear Heq.",
                        "VernacExtend",
                        "cd925f15244adfa5b4b1171fb5c2f18d4f354e2a"
                    ]
                },
                {
                    "command": [
                        "transitivity (Nat.max (max_arity_term t) n).",
                        "VernacExtend",
                        "dec0adde9a1c5dfa966f1f14dcb4c42b1fba4d8b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "clear f lp t' Hvars.",
                        "VernacExtend",
                        "bb5615090499484bde98b62541b11a0592356449"
                    ]
                },
                {
                    "command": [
                        "induction t as [ x | c lt IH | f lt IH ] using term_ind2.",
                        "VernacExtend",
                        "236623bdb85ed70cd102e85c7d98d6cdeda31474"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl; apply Hn.",
                        "VernacExtend",
                        "7d2b825f3d1f64412704eb4e0561be3c6fa04486"
                    ]
                },
                {
                    "command": [
                        "simpl; now left.",
                        "VernacExtend",
                        "d154ae9cc12cbc8ac64f7a724f65c8b5f97e2928"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- Max.max_assoc.",
                        "VernacExtend",
                        "e87d82c70f692067cfa19335b56815c1059249e0"
                    ]
                },
                {
                    "command": [
                        "apply Nat.max_le_compat; [ now rewrite map_length | ].",
                        "VernacExtend",
                        "f2b7bd7ebd189b5547cfacf7867ae15ce4677541"
                    ]
                },
                {
                    "command": [
                        "simpl in Hn; clear c.",
                        "VernacExtend",
                        "0365346d0dc77aa62693627456392faf7c35d5bc"
                    ]
                },
                {
                    "command": [
                        "induction lt as [ | t lt IHlt ]; [ now apply le_O_n | ].",
                        "VernacExtend",
                        "b3a9ad4a979bfc889163a9552e4995a424662bfc"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "set (ml := maxl _) at 2.",
                        "VernacExtend",
                        "111bc15a2a0e498b0998f18b163c1f6abcd24a6f"
                    ]
                },
                {
                    "command": [
                        "replace (Nat.max (Nat.max (max_arity_term t) ml) n) with (Nat.max (Nat.max (max_arity_term t) n) (Nat.max ml n)); [ | now rewrite <- Max.max_assoc, (Max.max_assoc n), (Max.max_comm n), <- (Max.max_assoc ml), Max.max_idempotent, Max.max_assoc ].",
                        "VernacExtend",
                        "3344c8b1683c08a43a91414cfac647c1c78fb046"
                    ]
                },
                {
                    "command": [
                        "subst ml; apply Nat.max_le_compat.",
                        "VernacExtend",
                        "a77b63caf54279f8d059ecbb459346e755ff5039"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply IH; [ now left | ].",
                        "VernacExtend",
                        "f251ac51825efbc407b0ccc7925ca3b42479ead5"
                    ]
                },
                {
                    "command": [
                        "intros x Hx; apply Hn.",
                        "VernacExtend",
                        "b74f64833c2eb6253c9d1702a2f1e29472af7047"
                    ]
                },
                {
                    "command": [
                        "now simpl; apply in_or_app; left.",
                        "VernacExtend",
                        "94c6e1314ee6cb8d3dfbfaa627684803d7998795"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply IHlt.",
                        "VernacExtend",
                        "d75a8eccf17fb799e59a12ac63ac97488afa94ac"
                    ]
                },
                {
                    "command": [
                        "now intros t' Ht'; apply IH; right.",
                        "VernacExtend",
                        "8cc32ea702d6f7a76b4d0c4d4f3ced66bc53bcf0"
                    ]
                },
                {
                    "command": [
                        "now intros x Hx; apply Hn; simpl; apply in_or_app; right.",
                        "VernacExtend",
                        "7fb534fb84d0e817e35ea18172e1dc21ab7a3566"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- Max.max_assoc.",
                        "VernacExtend",
                        "e87d82c70f692067cfa19335b56815c1059249e0"
                    ]
                },
                {
                    "command": [
                        "apply Nat.max_le_compat; [ now rewrite map_length | ].",
                        "VernacExtend",
                        "f2b7bd7ebd189b5547cfacf7867ae15ce4677541"
                    ]
                },
                {
                    "command": [
                        "simpl in Hn; clear f.",
                        "VernacExtend",
                        "b4bdcaad31bdf309d347d30f1d59c70147cd7dce"
                    ]
                },
                {
                    "command": [
                        "induction lt as [ | t lt IHlt ]; [ now apply le_O_n | ].",
                        "VernacExtend",
                        "b3a9ad4a979bfc889163a9552e4995a424662bfc"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "set (ml := maxl _) at 2.",
                        "VernacExtend",
                        "111bc15a2a0e498b0998f18b163c1f6abcd24a6f"
                    ]
                },
                {
                    "command": [
                        "replace (Nat.max (Nat.max (max_arity_term t) ml) n) with (Nat.max (Nat.max (max_arity_term t) n) (Nat.max ml n)); [ | now rewrite <- Max.max_assoc, (Max.max_assoc n), (Max.max_comm n), <- (Max.max_assoc ml), Max.max_idempotent, Max.max_assoc ].",
                        "VernacExtend",
                        "3344c8b1683c08a43a91414cfac647c1c78fb046"
                    ]
                },
                {
                    "command": [
                        "subst ml; apply Nat.max_le_compat.",
                        "VernacExtend",
                        "a77b63caf54279f8d059ecbb459346e755ff5039"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply IH; [ now left | ].",
                        "VernacExtend",
                        "f251ac51825efbc407b0ccc7925ca3b42479ead5"
                    ]
                },
                {
                    "command": [
                        "intros x Hx; apply Hn.",
                        "VernacExtend",
                        "b74f64833c2eb6253c9d1702a2f1e29472af7047"
                    ]
                },
                {
                    "command": [
                        "now simpl; apply in_or_app; left.",
                        "VernacExtend",
                        "94c6e1314ee6cb8d3dfbfaa627684803d7998795"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply IHlt.",
                        "VernacExtend",
                        "d75a8eccf17fb799e59a12ac63ac97488afa94ac"
                    ]
                },
                {
                    "command": [
                        "now intros t' Ht'; apply IH; right.",
                        "VernacExtend",
                        "8cc32ea702d6f7a76b4d0c4d4f3ced66bc53bcf0"
                    ]
                },
                {
                    "command": [
                        "now intros x Hx; apply Hn; simpl; apply in_or_app; right.",
                        "VernacExtend",
                        "7fb534fb84d0e817e35ea18172e1dc21ab7a3566"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply PeanoNat.Nat.max_le_compat_r.",
                        "VernacExtend",
                        "c5cb395ef724796ded5f9031d40ae33d41f6ab80"
                    ]
                },
                {
                    "command": [
                        "now apply PeanoNat.Nat.le_max_l.",
                        "VernacExtend",
                        "cfd27a837189ed895e555ff33018360e00b59e94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "evaluates_ind2",
            "line_nb": 757,
            "steps": [
                {
                    "command": [
                        "intros P Hc Hf t v He.",
                        "VernacExtend",
                        "588f287af08c62c66b36bd76cce17e1b6cf7b2f8"
                    ]
                },
                {
                    "command": [
                        "induction He using evaluates_mut with (P := fun t v H => P t v) (P0 := fun lt lv H => Forall2 P lt lv /\\ Forall2 evaluates lt lv).",
                        "VernacExtend",
                        "391b42c3b364a9f83db45cd39c65b49bc3355664"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Hc; tauto.",
                        "VernacExtend",
                        "7a67a0d9c2e3eb9449f9e74cbd24930bf06a5603"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply Hf; eauto; tauto.",
                        "VernacExtend",
                        "622aa2fddfb2779c16b7125507993f84fb997680"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; constructor; auto; tauto.",
                        "VernacExtend",
                        "6c3e6364692584be286b8154ce2bba0270440b44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_trans_rel",
            "line_nb": 770,
            "steps": [
                {
                    "command": [
                        "intros H Hall.",
                        "VernacExtend",
                        "0da04b6700737966124c7db4e01e28300c27636e"
                    ]
                },
                {
                    "command": [
                        "induction Hall; auto.",
                        "VernacExtend",
                        "f04de35e7efadfdf7600035420630e3007c2f108"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_eq",
            "line_nb": 786,
            "steps": [
                {
                    "command": [
                        "intro H; induction H; subst; trivial.",
                        "VernacExtend",
                        "ef471be080070f2a5ce7d47efe0752492235207b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "evaluates_unique",
            "line_nb": 789,
            "steps": [
                {
                    "command": [
                        "intro H1; revert v2.",
                        "VernacExtend",
                        "16347ff164fcfa496dbf562d33e07ca1f549cd3f"
                    ]
                },
                {
                    "command": [
                        "induction H1 using evaluates_ind2.",
                        "VernacExtend",
                        "3b92a8fa9a56222775179eca1e5ce5710e60d7e5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros v2 H2.",
                        "VernacExtend",
                        "575a6e95b70d183e0b990f95cbacb9b0c614660c"
                    ]
                },
                {
                    "command": [
                        "inversion H2; subst; clear H2.",
                        "VernacExtend",
                        "0fe4d6346cced611a23cd7924eeac6763288ab20"
                    ]
                },
                {
                    "command": [
                        "f_equal; revert lv0 H5.",
                        "VernacExtend",
                        "6a7c1c7d10e4fafd2ac0fcef51517f457edb0acb"
                    ]
                },
                {
                    "command": [
                        "induction H; intros lv0 Hlv0; inversion Hlv0; trivial.",
                        "VernacExtend",
                        "b1a01d9914a8983fab8effc56aa314e24bc38e36"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "f_equal; inversion H0; subst; auto.",
                        "VernacExtend",
                        "2a72ae3444c7ac98f65fdf5a1cd53f25b54a8c0a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros v2 Hv2.",
                        "VernacExtend",
                        "f72398e533e0e36ab90fd8bb6b5d23e23d62fed9"
                    ]
                },
                {
                    "command": [
                        "inversion Hv2; subst; clear Hv2.",
                        "VernacExtend",
                        "e0f888b8bf9bff225fb0d94ce38c6e50eff375f8"
                    ]
                },
                {
                    "command": [
                        "assert (Heq : lv = lv0) by (clear H6 H1; revert lv0 H5; induction H; intros lv0 Hlv0; inversion Hlv0; trivial; subst; f_equal; inversion H0; subst; auto).",
                        "VernacExtend",
                        "4f6fa573f44cff54107e75cb5529b541ec9ac3f5"
                    ]
                },
                {
                    "command": [
                        "subst lv0.",
                        "VernacExtend",
                        "39ede4688b478d964f793d89613ef092d7f6e797"
                    ]
                },
                {
                    "command": [
                        "rewrite H6 in H1; inversion H1; subst.",
                        "VernacExtend",
                        "609b38eccd1fbaf7c35bba6819cae74f44e064e1"
                    ]
                },
                {
                    "command": [
                        "now apply IHevaluates.",
                        "VernacExtend",
                        "ee6b1f7e1d31ed3ff5ceaeb60f82e9adc126ad16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "evaluates_value",
            "line_nb": 807,
            "steps": [
                {
                    "command": [
                        "induction v using value_ind2.",
                        "VernacExtend",
                        "02b343bdf4989b1155e56f3a79cb1b8a1964c78e"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "induction l as [|v lv]; constructor; auto with *.",
                        "VernacExtend",
                        "c0cd68e5cbf42849150fe530c8a30a505c19a44c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_nth",
            "line_nb": 812,
            "steps": [
                {
                    "command": [
                        "intros A l x d n.",
                        "VernacExtend",
                        "d4c43cd55eea68ca94631f8d4fa8c05a1479f825"
                    ]
                },
                {
                    "command": [
                        "revert l.",
                        "VernacExtend",
                        "11a722880df1bc386870f9ce37f36e8be2871e9c"
                    ]
                },
                {
                    "command": [
                        "induction n; intros [ | a l]; unfold nth; simpl; intros; try tauto; try omega.",
                        "VernacExtend",
                        "dcf654f7e63b3486789ebacdce234f30969f46c6"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "evaluates_sound'",
            "line_nb": 995,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (@evaluates_sound t v []); trivial.",
                        "VernacExtend",
                        "6060e95a0970b3e6e4eff80a2d501961f436fd79"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros t' v' Hf; inversion Hf.",
                        "VernacExtend",
                        "92f9f5abe45192aa842235ab28d80f5daf967822"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intuition; eexists; eauto.",
                        "VernacExtend",
                        "c39be5ae9d73d9dba933a9a9f26a9ca7aa86021f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}