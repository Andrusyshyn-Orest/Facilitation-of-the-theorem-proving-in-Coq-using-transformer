{
    "filename": "src/Cecoa/Final.v",
    "coq_project": "cecoa",
    "vernac_cmds": [
        [
            "Require Import Le Max List Bool NPeano Omega.",
            "VernacRequire",
            "b86829746254c3be28e544152157f40cd1a1ede3"
        ],
        [
            "Require Import Cecoa.Lib Cecoa.Syntax Cecoa.CBV_cache Cecoa.Bounds Cecoa.Ordering Cecoa.QI.",
            "VernacRequire",
            "8c94549a52be767ea172d222b6cf65b351bdd8ae"
        ],
        [
            "Section Main.",
            "VernacBeginSection",
            "bf8e296e33fd240eeab7bd1f708c4a04f5372b48"
        ],
        [
            "Variables variable function constructor : Type.",
            "VernacAssumption",
            "441e53bd4b078deea5191f45f1885acc47509b07"
        ],
        [
            "Notation value := (Syntax.value constructor).",
            "VernacSyntacticDefinition",
            "642ad7acd58be931b887abbad99a29327e67db3e"
        ],
        [
            "Notation term := (Syntax.term variable function constructor).",
            "VernacSyntacticDefinition",
            "a910a8472f03bf57af60b39044b9cd5a772e562a"
        ],
        [
            "Notation pattern := (Syntax.pattern variable constructor).",
            "VernacSyntacticDefinition",
            "77bf1c0b064e354c289b4a9391f5529bd30438b9"
        ],
        [
            "Notation rule := (Syntax.rule variable function constructor).",
            "VernacSyntacticDefinition",
            "6cd00dd7b236751469e91dc120dc43717bee7745"
        ],
        [
            "Variable prog : list rule.",
            "VernacAssumption",
            "224c53887cfe18f5a72ead32924fa3c3068e4bd9"
        ],
        [
            "Variable max_arity:nat.",
            "VernacAssumption",
            "edcd05e89a97b2bb96f9174756f523204707184b"
        ],
        [
            "Variable rule_default : rule.",
            "VernacAssumption",
            "ea2b843e5c1af0d9a08c2591f30be9be9c7254f1"
        ],
        [
            "Hypothesis prog_is_wf: wf_prog max_arity prog.",
            "VernacAssumption",
            "02d509d1242ec2d2049b65fc62178d95a36b2d55"
        ],
        [
            "Variable variable_eq_dec : forall (x1 x2 : variable), {x1=x2}+{x1<>x2}.",
            "VernacAssumption",
            "2ff961d40fdaf9d52d15addc0a7b9d9245653512"
        ],
        [
            "Variable function_eq_dec : forall (x1 x2 : function), {x1=x2}+{x1<>x2}.",
            "VernacAssumption",
            "6d1063b0027c8c51c1220d18afd46b0c0f5897c6"
        ],
        [
            "Variable constructor_eq_dec : forall (x1 x2 : constructor), {x1=x2}+{x1<>x2}.",
            "VernacAssumption",
            "b2e6c37255535a1765f314fa0dcb7d846e401f49"
        ],
        [
            "Notation cache := (CBV_cache.cache variable function constructor).",
            "VernacSyntacticDefinition",
            "2cd3e23ebafff5b409c654668f3e99c3638cc5f2"
        ],
        [
            "Notation cbv := (CBV_cache.cbv variable function constructor).",
            "VernacSyntacticDefinition",
            "ca1897a1cb089ba17abb496c1416d888b1adab50"
        ],
        [
            "Notation wf := (CBV_cache.wf variable_eq_dec function_eq_dec constructor_eq_dec rule_default prog max_arity).",
            "VernacSyntacticDefinition",
            "5b44600961bce2572889dbdcc09f04246a829528"
        ],
        [
            "Variable rank: function -> nat.",
            "VernacAssumption",
            "ee48ced9737d2193d07680ae893109684e0ea95d"
        ],
        [
            "Variable max_rank : nat.",
            "VernacAssumption",
            "943c9f0c08aced6e268562608aa88e55668315f1"
        ],
        [
            "Hypothesis pos_max_rank : 0 < max_rank.",
            "VernacAssumption",
            "37bd9f0dd944b598a98280e4f67057714a8ddfdc"
        ],
        [
            "Hypothesis max_rank_is_max_rank : forall f, rank f <= max_rank.",
            "VernacAssumption",
            "98eedf4ce4c3a0c572e1243d3843fe087239322f"
        ],
        [
            "Hypothesis prog_is_ppo : PPO_prog prog rank.",
            "VernacAssumption",
            "f73ecf45b1bb5ef4bbaba4087f5fee5869088378"
        ],
        [
            "Definition gsp := (Bounds.gary_seven_poly variable function constructor prog max_rank).",
            "VernacDefinition",
            "f1e56bc74e007ca13cbb4a39d0cc1179e0517c30"
        ],
        [
            "Definition bep := (Bounds.bobby_eight_poly variable function constructor max_arity prog).",
            "VernacDefinition",
            "a3d74f8a2c0cbac6183ab99ebf08573c02de60c7"
        ],
        [
            "Variable cs: constructor -> nat.",
            "VernacAssumption",
            "2a7d75af3a1cc303e593aa8690d70abf5ec0cbbe"
        ],
        [
            "Variable mcs: nat.",
            "VernacAssumption",
            "38471c8a6c5b2aeec54a5855c14eb9f0893ed175"
        ],
        [
            "Variable qic: constructor -> list nat -> nat.",
            "VernacAssumption",
            "ec356f5317c9b012b4c2fd26c9ebeeaa9d794d27"
        ],
        [
            "Variable qif: function -> list nat -> nat.",
            "VernacAssumption",
            "af8fbb3d4a7aab75700049cd12aef015df53de78"
        ],
        [
            "Hypothesis prog_has_QI: valid_QI variable function constructor prog mcs qic qif cs.",
            "VernacAssumption",
            "f55d214899a911460fed8c8e308a1a1cd0f81676"
        ],
        [
            "Notation cache_bounded := (QI.cache_bounded variable function constructor qic qif).",
            "VernacSyntacticDefinition",
            "012fe2ff01b775aac69ebe22f0a008c288162f18"
        ],
        [
            "Definition CBV_bound A S C := (A * activation_bound prog S + A + 1 + (max_arity * A * (1 + activation_bound prog S))) * (activation_bound prog S + S + cache_size C + (1 + max S (maxl (map (fun tv : term * value => value_size (snd tv)) C))) * (1 + (A * activation_bound prog S + A) + max_arity * (A * activation_bound prog S + A))) + cache_size C.",
            "VernacDefinition",
            "9a5a19a05662a9c7b4279a28e78b8cc010d7ced8"
        ],
        [
            "Definition PPO_bound S := gsp (bep S).",
            "VernacDefinition",
            "975136173c8324d33f6f1d5e1caf737bd09f4462"
        ],
        [
            "Definition QI_bound (f:function) (lv: list term) := (max_arity + 1) * (qif f (map (fun x=> mcs * (term_size (fapply f lv))) lv)) + 1.",
            "VernacDefinition",
            "278228b27405791df89ddef895a00812b0b57c9c"
        ],
        [
            "Definition global_bound f lv C := let S:= QI_bound f lv in let A:= PPO_bound S in CBV_bound A S C.",
            "VernacDefinition",
            "76e8c2a693d988feca9c60c26984e91c12cdae74"
        ],
        [
            "Lemma gary_increase: forall x y, x <=y -> gsp x <= gsp y.",
            "VernacStartTheoremProof",
            "8a86b749a8560282c63b54d87e9d787d048312cd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold gary_seven_poly.",
            "VernacExtend",
            "e070f90024155f9912f602de8566b4a8bc0b6514"
        ],
        [
            "apply suml_map_le.",
            "VernacExtend",
            "1845f351ce20433134e097e5a172b92cde400e9a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold activations_at_rank_bound.",
            "VernacExtend",
            "96cc21cd470acff04f5fa3847c8af4d61b31302e"
        ],
        [
            "apply Mult.mult_le_compat_l.",
            "VernacExtend",
            "b263608964bf8ea1fdf535c7db85591c878820c8"
        ],
        [
            "apply pow_le_compat;trivial.",
            "VernacExtend",
            "ca07d6a02f070ae237007feae22f71a375f5f6e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PPO_bound_increase: forall x y, x <= y -> PPO_bound x <= PPO_bound y.",
            "VernacStartTheoremProof",
            "23641fb05f9cbf168291b546dd3690433e5221cc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold PPO_bound.",
            "VernacExtend",
            "0608bc6bab3268269acf2f2261e625f0e5dcc112"
        ],
        [
            "apply gary_increase.",
            "VernacExtend",
            "ae56df0c73720bb900ebb8d1f998d284096a60cf"
        ],
        [
            "apply bobby_increase.",
            "VernacExtend",
            "c64b608e1b858caa131c42b66d2f9656e7ba2b2f"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma activation_bound_increase: forall x y, x <= y -> activation_bound prog x <= activation_bound prog y.",
            "VernacStartTheoremProof",
            "23a098f5553a4c5955e386f1f0dd0d5cf29891bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold activation_bound.",
            "VernacExtend",
            "47cd0cf9bd8ed017dda89999d2e22ffddc9699d7"
        ],
        [
            "apply Mult.mult_le_compat_l.",
            "VernacExtend",
            "b263608964bf8ea1fdf535c7db85591c878820c8"
        ],
        [
            "apply Plus.plus_le_compat_l;trivial.",
            "VernacExtend",
            "81dce4d4ecdb3a63301479eb898515eff92835f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CBV_bound_increase: forall x1 y1 x2 y2 C, x1 <= y1 -> x2 <= y2 -> CBV_bound x1 x2 C <= CBV_bound y1 y2 C.",
            "VernacStartTheoremProof",
            "dfeeb152f2d2d8e4228bdd8dbb113307eedd3a1b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CBV_bound.",
            "VernacExtend",
            "54348d6adfafbbf16156ca80c93e63ac351cb148"
        ],
        [
            "apply Plus.plus_le_compat_r.",
            "VernacExtend",
            "e9423c9ff41960045614f5b059dec99035c319f5"
        ],
        [
            "apply Mult.mult_le_compat; repeat (try apply Plus.plus_le_compat; trivial; try apply Mult.mult_le_compat; trivial).",
            "VernacExtend",
            "4af53ce1777fafca50ba30701990b282bdbdb41b"
        ],
        [
            "apply Nat.max_le_compat_r;trivial.",
            "VernacExtend",
            "b5878ab3859eb80972d3921c11db555cda03d1ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem P_criterion: forall i s p c f lv d v, let t := (fapply f lv) in let pi := cbv_update i s p c t d v in wf pi -> cache_bounded c -> size pi <= global_bound f lv c.",
            "VernacStartTheoremProof",
            "4446488b80ac29c991cf4f12aede03bd629358c9"
        ],
        [
            "intros i s p c f lv d v t pi well_formed cache_bound.",
            "VernacExtend",
            "deb228f36a99dcf6f03b7019fa30f9c12ef29e6c"
        ],
        [
            "unfold global_bound.",
            "VernacExtend",
            "9fcb93d6f5355642f6df629c92bcd1503d0c7d6b"
        ],
        [
            "assert (max_active_size pi <= QI_bound f lv).",
            "VernacExtend",
            "1191c68949626e732a670aac15115c7d579d861f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply max_active_size_bound with (prog:=prog) (rule_default:=rule_default) (variable_eq_dec:=variable_eq_dec) (function_eq_dec :=function_eq_dec) (constructor_eq_dec:=constructor_eq_dec) (qic:=qic) (cs:=cs);trivial.",
            "VernacExtend",
            "9b234185281de791b7378871a89257b2a0a20f8d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply le_trans with (m:= CBV_bound (PPO_bound (max_active_size pi)) (max_active_size pi) c).",
            "VernacExtend",
            "1885e390ac3562ee0b50f32f920630cd30385cc3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (length (activations pi) <= PPO_bound (max_active_size pi)).",
            "VernacExtend",
            "e344a3b26f5c8191a78b9ababc44882785d111ad"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply le_trans with (m:=gsp (A_T variable function constructor rank pi)).",
            "VernacExtend",
            "5340494e078cddb8889244066f2790c52627261e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply gary_seven with (variable_eq_dec:=variable_eq_dec) (function_eq_dec:=function_eq_dec) (constructor_eq_dec:=constructor_eq_dec) (rule_default:=rule_default) (max_arity:=max_arity);try trivial.",
            "VernacExtend",
            "c11e1898c8c8133e5801ca264549b2052204a3f4"
        ],
        [
            "apply PPO_is_compatible_prog;trivial.",
            "VernacExtend",
            "d003fb7dbcca21215359c1dc10d93bad3641a550"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold PPO_bound.",
            "VernacExtend",
            "0608bc6bab3268269acf2f2261e625f0e5dcc112"
        ],
        [
            "apply gary_increase.",
            "VernacExtend",
            "ae56df0c73720bb900ebb8d1f998d284096a60cf"
        ],
        [
            "apply A_T_bound with (variable_eq_dec:=variable_eq_dec) (function_eq_dec:=function_eq_dec) (constructor_eq_dec:=constructor_eq_dec) (rule_default:=rule_default) (max_rank:=max_rank);trivial.",
            "VernacExtend",
            "6717623d58444224bc67b7807369ad4b34699f1b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply le_trans with (m:=CBV_bound (length (activations pi)) (max_active_size pi) c).",
            "VernacExtend",
            "45baf06250cc637bfaac8d61aad7d7eef4f08054"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply size_bound_gen with (variable_eq_dec:=variable_eq_dec) (function_eq_dec:=function_eq_dec) (constructor_eq_dec:=constructor_eq_dec) (rule_default:=rule_default);trivial.",
            "VernacExtend",
            "24d44244b85a04d22d0f3ee185b54fd523ffcc45"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply CBV_bound_increase;trivial.",
            "VernacExtend",
            "0ffabeedb98ccb29544609deab40e100feacc6b6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply CBV_bound_increase;try trivial.",
            "VernacExtend",
            "acd1cbe7052c0cf1d028d6b3d7400b496ef960fc"
        ],
        [
            "apply PPO_bound_increase;try trivial.",
            "VernacExtend",
            "8158dca420b5186e36e0d9995bb1312ce9d72453"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Main.",
            "VernacEndSegment",
            "90613a77e34fb3c12284eeecea95031c8f09c2f1"
        ]
    ],
    "proofs": [
        {
            "name": "gary_increase",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold gary_seven_poly.",
                        "VernacExtend",
                        "e070f90024155f9912f602de8566b4a8bc0b6514"
                    ]
                },
                {
                    "command": [
                        "apply suml_map_le.",
                        "VernacExtend",
                        "1845f351ce20433134e097e5a172b92cde400e9a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold activations_at_rank_bound.",
                        "VernacExtend",
                        "96cc21cd470acff04f5fa3847c8af4d61b31302e"
                    ]
                },
                {
                    "command": [
                        "apply Mult.mult_le_compat_l.",
                        "VernacExtend",
                        "b263608964bf8ea1fdf535c7db85591c878820c8"
                    ]
                },
                {
                    "command": [
                        "apply pow_le_compat;trivial.",
                        "VernacExtend",
                        "ca07d6a02f070ae237007feae22f71a375f5f6e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PPO_bound_increase",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold PPO_bound.",
                        "VernacExtend",
                        "0608bc6bab3268269acf2f2261e625f0e5dcc112"
                    ]
                },
                {
                    "command": [
                        "apply gary_increase.",
                        "VernacExtend",
                        "ae56df0c73720bb900ebb8d1f998d284096a60cf"
                    ]
                },
                {
                    "command": [
                        "apply bobby_increase.",
                        "VernacExtend",
                        "c64b608e1b858caa131c42b66d2f9656e7ba2b2f"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "activation_bound_increase",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold activation_bound.",
                        "VernacExtend",
                        "47cd0cf9bd8ed017dda89999d2e22ffddc9699d7"
                    ]
                },
                {
                    "command": [
                        "apply Mult.mult_le_compat_l.",
                        "VernacExtend",
                        "b263608964bf8ea1fdf535c7db85591c878820c8"
                    ]
                },
                {
                    "command": [
                        "apply Plus.plus_le_compat_l;trivial.",
                        "VernacExtend",
                        "81dce4d4ecdb3a63301479eb898515eff92835f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CBV_bound_increase",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold CBV_bound.",
                        "VernacExtend",
                        "54348d6adfafbbf16156ca80c93e63ac351cb148"
                    ]
                },
                {
                    "command": [
                        "apply Plus.plus_le_compat_r.",
                        "VernacExtend",
                        "e9423c9ff41960045614f5b059dec99035c319f5"
                    ]
                },
                {
                    "command": [
                        "apply Mult.mult_le_compat; repeat (try apply Plus.plus_le_compat; trivial; try apply Mult.mult_le_compat; trivial).",
                        "VernacExtend",
                        "4af53ce1777fafca50ba30701990b282bdbdb41b"
                    ]
                },
                {
                    "command": [
                        "apply Nat.max_le_compat_r;trivial.",
                        "VernacExtend",
                        "b5878ab3859eb80972d3921c11db555cda03d1ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "P_criterion",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros i s p c f lv d v t pi well_formed cache_bound.",
                        "VernacExtend",
                        "deb228f36a99dcf6f03b7019fa30f9c12ef29e6c"
                    ]
                },
                {
                    "command": [
                        "unfold global_bound.",
                        "VernacExtend",
                        "9fcb93d6f5355642f6df629c92bcd1503d0c7d6b"
                    ]
                },
                {
                    "command": [
                        "assert (max_active_size pi <= QI_bound f lv).",
                        "VernacExtend",
                        "1191c68949626e732a670aac15115c7d579d861f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply max_active_size_bound with (prog:=prog) (rule_default:=rule_default) (variable_eq_dec:=variable_eq_dec) (function_eq_dec :=function_eq_dec) (constructor_eq_dec:=constructor_eq_dec) (qic:=qic) (cs:=cs);trivial.",
                        "VernacExtend",
                        "9b234185281de791b7378871a89257b2a0a20f8d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (m:= CBV_bound (PPO_bound (max_active_size pi)) (max_active_size pi) c).",
                        "VernacExtend",
                        "1885e390ac3562ee0b50f32f920630cd30385cc3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (length (activations pi) <= PPO_bound (max_active_size pi)).",
                        "VernacExtend",
                        "e344a3b26f5c8191a78b9ababc44882785d111ad"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (m:=gsp (A_T variable function constructor rank pi)).",
                        "VernacExtend",
                        "5340494e078cddb8889244066f2790c52627261e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply gary_seven with (variable_eq_dec:=variable_eq_dec) (function_eq_dec:=function_eq_dec) (constructor_eq_dec:=constructor_eq_dec) (rule_default:=rule_default) (max_arity:=max_arity);try trivial.",
                        "VernacExtend",
                        "c11e1898c8c8133e5801ca264549b2052204a3f4"
                    ]
                },
                {
                    "command": [
                        "apply PPO_is_compatible_prog;trivial.",
                        "VernacExtend",
                        "d003fb7dbcca21215359c1dc10d93bad3641a550"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold PPO_bound.",
                        "VernacExtend",
                        "0608bc6bab3268269acf2f2261e625f0e5dcc112"
                    ]
                },
                {
                    "command": [
                        "apply gary_increase.",
                        "VernacExtend",
                        "ae56df0c73720bb900ebb8d1f998d284096a60cf"
                    ]
                },
                {
                    "command": [
                        "apply A_T_bound with (variable_eq_dec:=variable_eq_dec) (function_eq_dec:=function_eq_dec) (constructor_eq_dec:=constructor_eq_dec) (rule_default:=rule_default) (max_rank:=max_rank);trivial.",
                        "VernacExtend",
                        "6717623d58444224bc67b7807369ad4b34699f1b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (m:=CBV_bound (length (activations pi)) (max_active_size pi) c).",
                        "VernacExtend",
                        "45baf06250cc637bfaac8d61aad7d7eef4f08054"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply size_bound_gen with (variable_eq_dec:=variable_eq_dec) (function_eq_dec:=function_eq_dec) (constructor_eq_dec:=constructor_eq_dec) (rule_default:=rule_default);trivial.",
                        "VernacExtend",
                        "24d44244b85a04d22d0f3ee185b54fd523ffcc45"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply CBV_bound_increase;trivial.",
                        "VernacExtend",
                        "0ffabeedb98ccb29544609deab40e100feacc6b6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply CBV_bound_increase;try trivial.",
                        "VernacExtend",
                        "acd1cbe7052c0cf1d028d6b3d7400b496ef960fc"
                    ]
                },
                {
                    "command": [
                        "apply PPO_bound_increase;try trivial.",
                        "VernacExtend",
                        "8158dca420b5186e36e0d9995bb1312ce9d72453"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}