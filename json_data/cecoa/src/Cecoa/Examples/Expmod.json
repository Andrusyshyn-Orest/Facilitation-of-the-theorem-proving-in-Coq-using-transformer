{
    "filename": "src/Cecoa/Examples/Expmod.v",
    "coq_project": "cecoa",
    "vernac_cmds": [
        [
            "Require Import List Omega Numbers.BinNums Psatz.",
            "VernacRequire",
            "417a3db97c3cc9078be8f1d3c25590aadd188ca2"
        ],
        [
            "Import List.ListNotations.",
            "VernacImport",
            "e5b4981235e2df862e6c7a18e98a952fce61bf9e"
        ],
        [
            "Require Import Cecoa.Lib Cecoa.Interface.",
            "VernacRequire",
            "985f4a2cd5b7b9e351bd21b9a5caba8a4bdf284f"
        ],
        [
            "Inductive variable := x | y | p | q | x0 | m | c | n' | m' | r | r'.",
            "VernacInductive",
            "af8e44add302cd0eb85956bd26ffc1b89d0498a1"
        ],
        [
            "Inductive function := pred_doubleF | succ_double_maskF | double_maskF | double_pred_maskF | sub_maskF | sub_mask_carryF | compare_contEqF | compare_contGtF | compare_contLtF | compareF | succ_doubleF | doubleF | subF | compare0F | lebF | moduloF | errF | sub_auxF | leb_auxF | pos_moduloOF | pos_moduloIF | pos_moduloF | condF | succF | addF | add_carryF | add0F | mul_modF | mul_mod_auxF | exp_modF | exp_mod_auxF | mod_auxF | modF | boundF.",
            "VernacInductive",
            "d640e8d5eb56f154e97ea0fa37e04a2ffeaf73e9"
        ],
        [
            "Inductive constructor := TrueC | FalseC | PairC | EqC | LtC | GtC | XIC | XOC | XHC | N0C | NposC | IsNulC | IsPosC | IsNegC | errC.",
            "VernacInductive",
            "31ca4e227e9b7831702829d5450e2153ac7689e8"
        ],
        [
            "Scheme Equality for variable.",
            "VernacScheme",
            "7902780ff0d5815fb13955a75c787656a64c77fc"
        ],
        [
            "Scheme Equality for constructor.",
            "VernacScheme",
            "d5eabc6aa6f4378637187358f7b2faedef2c5da8"
        ],
        [
            "Scheme Equality for function.",
            "VernacScheme",
            "93ee92076b61e0aa9c3a7c9b1b5e540144c9c2a7"
        ],
        [
            "Module EMSyntax <: Interface.SYNTAX.",
            "VernacDefineModule",
            "457a66f82b754db3e29d4c65088b0cc806140545"
        ],
        [
            "Definition variable := variable.",
            "VernacDefinition",
            "305b5070b02922764abcfd91e0e42e66c1b1da07"
        ],
        [
            "Definition function := function.",
            "VernacDefinition",
            "40966dd44fba6eeee466e9a68020fe1eb5cff84a"
        ],
        [
            "Definition constructor := constructor.",
            "VernacDefinition",
            "f3da278117dbfcca16e9e6ca1c9e7c3345f1f6fb"
        ],
        [
            "Definition function_default := errF.",
            "VernacDefinition",
            "fa68026d3b348c2ae99b871d5de75c23ed5a9d68"
        ],
        [
            "Definition constructor_default := errC.",
            "VernacDefinition",
            "dd9b268c315c9e2e38fdba45dfd8a832ddab0d69"
        ],
        [
            "Definition variable_eq_dec := variable_eq_dec.",
            "VernacDefinition",
            "eb727520499c98fe5d7397f3c3f64012cd46c642"
        ],
        [
            "Definition function_eq_dec := function_eq_dec.",
            "VernacDefinition",
            "7f675ef180fbd2a15c296b2cae45cf221d99f79b"
        ],
        [
            "Definition constructor_eq_dec := constructor_eq_dec.",
            "VernacDefinition",
            "3044957fb7435c0db0ab34669474fce08ac44186"
        ],
        [
            "End EMSyntax.",
            "VernacEndSegment",
            "2131884323e2e97a30c22e6dcb7747c4bb99cbcf"
        ],
        [
            "Module Import Syn := Interface.MkSyn(EMSyntax).",
            "VernacDefineModule",
            "fcb9f70048c713407951048aec5b5c25981619cb"
        ],
        [
            "Import Syn.ProgramNotations.",
            "VernacImport",
            "5e749215270779bd9aacd3b21777125263e67c95"
        ],
        [
            "Definition var_coercion : variable -> term := var_coercion_gen.",
            "VernacDefinition",
            "99bb1e0b06bd1b418e11cbc8d32cce3461b02749"
        ],
        [
            "Coercion var_coercion : variable >-> term.",
            "VernacCoercion",
            "b4dda99e75371ffc008b0448f691932e9f38d615"
        ],
        [
            "Notation \" x '#' l \" := (capply x (map var_coercion l)) (at level 50).",
            "VernacNotation",
            "eced94be4c5804c02441531e161118f536b3a607"
        ],
        [
            "Notation \"'XO' a\" := (capply XOC [var_coercion a]) (at level 60).",
            "VernacNotation",
            "bba83cb9275ff82f22a22984bbfa75320e22b745"
        ],
        [
            "Notation \"'XI' a\" := (capply XIC [var_coercion a]) (at level 60).",
            "VernacNotation",
            "ad15177d042aa4d54fcb21a5c0a1acb22227f1e2"
        ],
        [
            "Notation \"'Ispos' a\" := (capply IsPosC [var_coercion a]) (at level 60).",
            "VernacNotation",
            "6089bf99e135595d242c10034fda7984cdc94c5e"
        ],
        [
            "Notation \"'NPos' a\" := (capply NposC [var_coercion a]) (at level 60).",
            "VernacNotation",
            "36de32fa5f0e72ae216e5ca1bba45b1985324688"
        ],
        [
            "Notation \"'XH'\" := (capply XHC []) (at level 60).",
            "VernacNotation",
            "24b37858fc0d6eaa516d639a29ebc6ce7ddda58f"
        ],
        [
            "Notation \"'Isnul'\" := (capply IsNulC []) (at level 60).",
            "VernacNotation",
            "7b9def55c8f1d396f326fe185337a6f1460f170f"
        ],
        [
            "Notation \"'Isneg'\" := (capply IsNegC []) (at level 60).",
            "VernacNotation",
            "36d937bd0d6de731aa5b8d7018af4585c0245e9a"
        ],
        [
            "Notation \"'GT'\" := (capply GtC []) (at level 60).",
            "VernacNotation",
            "9f03079fb3d41c1c09162bc2e98783c479a08bb9"
        ],
        [
            "Notation \"'LT'\" := (capply LtC []) (at level 60).",
            "VernacNotation",
            "b4872b0d6383aa326f626c033069cd9269657b86"
        ],
        [
            "Notation \"'EQ'\" := (capply EqC []) (at level 60).",
            "VernacNotation",
            "797d7e46d381a34170127dff25d94fb72c00d62a"
        ],
        [
            "Notation \"'N0'\" := (capply N0C []) (at level 60).",
            "VernacNotation",
            "67c48ce32069d2157573a3c6102583e4a40c94f8"
        ],
        [
            "Notation \"'TRUE'\" := (capply TrueC []) (at level 60).",
            "VernacNotation",
            "ebe09ea921dee6c9b7ccc32235100c54b605adaf"
        ],
        [
            "Notation \"'FALSE'\" := (capply FalseC []) (at level 60).",
            "VernacNotation",
            "1e049e2075fbfe998340061f8bd460dc70cc8fa0"
        ],
        [
            "Definition em_prog : list rule := [ pred_doubleF (: XI p :) --> capply XIC [XO p]; pred_doubleF (: XO p :) --> capply XIC [pred_doubleF (: p :)]; pred_doubleF (: XH :) --> XH; succ_double_maskF (: Isnul :) --> capply IsPosC [XH]; succ_double_maskF (: Ispos p :) --> capply IsPosC [XI p]; succ_double_maskF (: Isneg :) --> Isneg; double_maskF (: Ispos p :) --> capply IsPosC [XO p]; double_maskF (: x0 :) --> x0; double_pred_maskF (: XI p :) --> capply IsPosC [capply XOC [XO p]]; double_pred_maskF (: XO p :) --> capply IsPosC [capply XOC [pred_doubleF (: p :)]]; double_pred_maskF (: XH :) --> Isnul; sub_maskF (: XI p, XI q :) --> double_maskF (: sub_maskF (: p, q :) :); sub_maskF (: XI p, XO q :) --> succ_double_maskF (: sub_maskF (: p, q :) :); sub_maskF (: XI p, XH :) --> capply IsPosC [XO p]; sub_maskF (: XO p, XI q :) --> succ_double_maskF (: sub_mask_carryF (: p, q :) :); sub_maskF (: XO p, XO q :) --> double_maskF (: sub_maskF (: p, q :) :); sub_maskF (: XO p, XH :) --> capply IsPosC [pred_doubleF (: p :)]; sub_maskF (: XH, XH :) --> Isnul; sub_maskF (: XH, q :) --> Isneg; sub_mask_carryF (: XI p, XI q :) --> succ_double_maskF (: sub_mask_carryF (: p, q :) :); sub_mask_carryF (: XI p, XO q :) --> double_maskF (: sub_maskF (: p, q :) :); sub_mask_carryF (: XI p, XH :) --> capply IsPosC [pred_doubleF (: p :)]; sub_mask_carryF (: XO p, XI q :) --> double_maskF (: sub_mask_carryF (: p, q :) :); sub_mask_carryF (: XO p, XO q :) --> succ_double_maskF (: sub_mask_carryF (: p, q :) :); sub_mask_carryF (: XO p, XH :) --> double_pred_maskF (: p :); sub_mask_carryF (: XH, q :) --> Isneg; compare_contEqF (: XI p, XI q :) --> compare_contEqF (: p, q :); compare_contEqF (: XI p, XO q :) --> compare_contGtF (: p, q :); compare_contEqF (: XI p, XH :) --> GT; compare_contEqF (: XO p, XI q :) --> compare_contLtF (: p, q :); compare_contEqF (: XO p, XO q :) --> compare_contEqF (: p, q :); compare_contEqF (: XO p, XH :) --> GT; compare_contEqF (: XH, XH :) --> EQ; compare_contEqF (: XH, q :) --> LT; compare_contLtF (: XI p, XI q :) --> compare_contLtF (: p, q :); compare_contLtF (: XI p, XO q :) --> compare_contGtF (: p, q :); compare_contLtF (: XI p, XH :) --> GT; compare_contLtF (: XO p, XI q :) --> compare_contLtF (: p, q :); compare_contLtF (: XO p, XO q :) --> compare_contLtF (: p, q :); compare_contLtF (: XO p, XH :) --> GT; compare_contLtF (: XH, XH :) --> LT; compare_contLtF (: XH, q :) --> LT; compare_contGtF (: XI p, XI q :) --> compare_contGtF (: p, q :); compare_contGtF (: XI p, XO q :) --> compare_contGtF (: p, q :); compare_contGtF (: XI p, XH :) --> GT; compare_contGtF (: XO p, XI q :) --> compare_contLtF (: p, q :); compare_contGtF (: XO p, XO q :) --> compare_contGtF (: p, q :); compare_contGtF (: XO p, XH :) --> GT; compare_contGtF (: XH, XH :) --> GT; compare_contGtF (: XH, q :) --> LT; compareF (: p, q :) --> compare_contEqF (: p, q :); succ_doubleF (: N0 :) --> capply NposC [XH]; succ_doubleF (: NPos p :) --> capply NposC [XI p]; doubleF (: N0 :) --> N0; doubleF (: NPos p :) --> capply NposC [XO p]; sub_auxF (: Ispos p :) --> NPos p; sub_auxF (: p :) --> N0; subF (: N0, m :) --> N0; subF (: NPos p, N0 :) --> NPos p; subF (: NPos p, NPos q :) --> sub_auxF (: sub_maskF (: p, q :) :); compare0F (: N0, N0 :) --> EQ; compare0F (: N0, NPos q :) --> LT; compare0F (: NPos n', N0 :) --> GT; compare0F (: NPos n', NPos m' :) --> compareF (: n', m' :); leb_auxF (: GT :) --> FALSE; leb_auxF (: q :) --> TRUE; lebF (:x, y :) --> leb_auxF (: compare0F (: x, y :) :); condF (: TRUE, x, y :) --> x; condF (: FALSE, x, y :) --> y; mod_auxF (: XH, capply NposC [XH] :) --> N0 ; mod_auxF (: XH, m :) --> capply NposC [XH] ; mod_auxF (: XO x, m :) --> condF (: lebF (: m, doubleF (: mod_auxF (: x, m :) :) :), subF (: doubleF (: mod_auxF (: x, m :) :), m :), doubleF (: mod_auxF (: x, m :) :) :) ; mod_auxF (: XI x, m :) --> condF (: lebF (: m, succ_doubleF (: mod_auxF (: x, m :) :) :), subF (: succ_doubleF (: mod_auxF (: x, m :):), m :), succ_doubleF (: mod_auxF (: x, m :) :) :) ; modF (: N0, m :) --> N0; modF (: NPos x, m :) --> mod_auxF (: x, m :); succF (: XI p :) --> capply XOC [succF (: p :)]; succF (: XO p :) --> XI p; succF (: XH :) --> capply XOC [XH]; addF (: XI p, XI q :) --> capply XOC [add_carryF (: p, q :)]; addF (: XI p, XO q :) --> capply XIC [addF (: p, q :)]; addF (: XI p, XH :) --> capply XOC [succF (: p :)]; addF (: XO p, XI q :) --> capply XIC [addF (: p, q :)]; addF (: XO p, XO q :) --> capply XOC [addF (: p, q :)]; addF (: XO p, XH :) --> XI p; addF (: XH, XI q :) --> capply XOC [succF (: q :)]; addF (: XH, XO q :) --> XI q; addF (: XH, XH :) --> capply XOC [XH]; add_carryF (: XI p, XI q :) --> capply XIC [add_carryF (: p, q :)]; add_carryF (: XI p, XO q :) --> capply XOC [add_carryF (: p, q :)]; add_carryF (: XI p, XH :) --> capply XIC [succF (: p :)]; add_carryF (: XO p, XI q :) --> capply XOC [add_carryF (: p, q :)]; add_carryF (: XO p, XO q :) --> capply XIC [addF (: p, q :)]; add_carryF (: XO p, XH :) --> capply XOC [succF (: p :)]; add_carryF (: XH, XI q :) --> capply XIC [succF (: q :)]; add_carryF (: XH, XO q :) --> capply XOC [succF (: q :)]; add_carryF (: XH, XH :) --> capply XIC [XH]; add0F (: N0, m :) --> m; add0F (: NPos p, N0 :) --> NPos p; add0F (: NPos p, NPos q :)--> capply NposC [addF (: p, q :)]; mul_mod_auxF (: XI p, y, m, XO x :) --> modF (: add0F (: y, doubleF (: mul_mod_auxF (: p, y, m, x :) :):), m :); mul_mod_auxF (: XO p, y, m, XO x :) --> modF (: doubleF (: mul_mod_auxF (: p, y, m, x :) :), m :); mul_mod_auxF (: XH, y, m, x :) --> modF (: y, m :); mul_modF (: N0, y, m, p :) --> N0; mul_modF (: NPos x , y, m, p :) --> mul_mod_auxF (: x, y, m, p :); exp_mod_auxF (: x, XH, m, p :) --> modF (: x, m :); exp_mod_auxF (: x, XO y, m, p :) --> mul_modF (: exp_mod_auxF (: x, y, m, p :), exp_mod_auxF (: x, y, m, p :), m, p :) ; exp_mod_auxF (: x, XI y, m, p :) --> mul_modF (: modF (: x, m :), mul_modF (: exp_mod_auxF (: x, y, m, p :), exp_mod_auxF (: x, y, m, p :), m, p :), m, p :); boundF (: N0 :) --> XH; boundF (: NPos p :) --> boundF (: p :); boundF (: XH :) --> capply XOC [XH]; boundF (: XI x :) --> capply XOC [boundF (: x :)]; boundF (: XO x :) --> capply XOC [boundF (: x :)]; exp_modF (: x, N0 , m :) --> modF(: capply NposC [XH], m :) ; exp_modF (: x, NPos y, m :) --> exp_mod_auxF (: x, y, m, boundF (: m :) :) ].",
            "VernacDefinition",
            "09b2d4a0830347a436417e46a2e9f6727e5f3b74"
        ],
        [
            "Module EMProg <: Syn.PROGRAM.",
            "VernacDefineModule",
            "765b11f7587a992792f6a8624ab9b6ee9d09e2d3"
        ],
        [
            "Definition prog := em_prog.",
            "VernacDefinition",
            "e952f0416498a4d3d4ea007c9d91552c39202083"
        ],
        [
            "End EMProg.",
            "VernacEndSegment",
            "480398d6370877ae8634820c6efa81c1c81c9e96"
        ],
        [
            "Module Import Prog := Syn.MkProg (EMProg).",
            "VernacDefineModule",
            "b0d93a8555d26cbddfefbfde44422d94df456004"
        ],
        [
            "Import Prog.QI Prog.Evaluator.",
            "VernacImport",
            "8a22ed73a5f60869b01927afc10aca2f7fe5063e"
        ],
        [
            "Definition rank : function -> nat := ltac:(autorank function_beq ranklist).",
            "VernacDefinition",
            "797ea5b99e4f0e9f49d15e33b0f26695f2919577"
        ],
        [
            "Proposition Expmod_is_wf: wf_prog.",
            "VernacStartTheoremProof",
            "ccfcf8afc9feccee9e00cb0bd1c9c5743985e22f"
        ],
        [
            "cbv; repeat split; try tauto; auto.",
            "VernacExtend",
            "05fd7875820a28d9637f59f57e4fc9b3077ef384"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition expmod_is_ppo : PPO_prog rank.",
            "VernacStartTheoremProof",
            "b9821a40b8daaf72dc81da6e008d8bac72f91ea3"
        ],
        [
            "cbv.",
            "VernacExtend",
            "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
        ],
        [
            "intros r H.",
            "VernacExtend",
            "d7ad88fe18659a9c0fbe8f12609d04bca3d72a11"
        ],
        [
            "decompose sum H; subst; ppo.",
            "VernacExtend",
            "0a3594739736d994e19f8b41e63668404a8e5a7b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cs (c : constructor) := 1%nat.",
            "VernacDefinition",
            "8f5058679638729d43c570a1045b437855d14e10"
        ],
        [
            "Lemma qic_nonzero : constructor_non_zero cs.",
            "VernacStartTheoremProof",
            "8790c059f6335868bc15753640d3f02c8cc55951"
        ],
        [
            "cbv; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mcs := 1.",
            "VernacDefinition",
            "a964f0fbb702d629fa11d220e0da769e06c9efb1"
        ],
        [
            "Lemma qic_bounded : mcs_is_max_constructor_size mcs cs.",
            "VernacStartTheoremProof",
            "d39540356a0abd076ed1bcd71a6a7237b16e0e86"
        ],
        [
            "cbv; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition qic (c : constructor) args := suml args + cs c.",
            "VernacDefinition",
            "e92176e518ac10e8b0dd852601b45573b65f90e9"
        ],
        [
            "Lemma qic_additivity : additive qic cs.",
            "VernacStartTheoremProof",
            "0dd92121e1453ee4987f1d23551b856c61304bfc"
        ],
        [
            "cbv; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cons_app {A : Type} (h: A) t: h::t = [h] ++t.",
            "VernacStartTheoremProof",
            "db78fd25895038710f74eb5c6900e6fe67f0edb0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac try_prove_ineq := unfold qic, cs; try tauto; intros; subst; cbn; try omega; repeat rewrite Nat.add_0_r; repeat rewrite Nat.max_0_r; repeat rewrite Nat.add_max_distr_r; repeat rewrite Nat.add_1_r; repeat rewrite Nat.max_id, Max.max_r; try (solve [simpl; auto with *]); try (nia); repeat (case QI.value_assignment); auto with *.",
            "VernacExtend",
            "c33f1e463810573454d6c1a8e4d1d04d5bc6ac95"
        ],
        [
            "Ltac prove_rule H := rewrite cons_app; apply QI.p_smc_QI_app; [ intros f lp t s; cbn; intro H; repeat (destruct H as [ H | H ]; [inversion H; subst; unfold map; simpl; repeat rewrite QI.value_as_p_term_assignment; eexists; eexists; repeat split; repeat try_prove_ineq| ]); inversion H |].",
            "VernacExtend",
            "1171d14496b29cd9a5a89e73ff2b8b4798c1325a"
        ],
        [
            "Definition spec_QI (f : function) (qf : list nat -> nat) := fun g => if function_beq g f then Some qf else None.",
            "VernacDefinition",
            "df2f7b9712a4f8fb7a8b9f0664a930f385d4e07c"
        ],
        [
            "Ltac inst f qi := idtac \"instantiating\" f; apply QI.p_smc_split with (h := spec_QI f qi).",
            "VernacExtend",
            "349cecae599421f76fae32114d66c6ddd5c95ed8"
        ],
        [
            "Ltac inst_next qi := match goal with | |- context[rulify (Syntax.fapply ?ff _) _ ::_] => (idtac \"instantiating\" ff; apply QI.p_smc_split with (h := spec_QI ff qi)) end.",
            "VernacExtend",
            "714ed0f1714871c7dc5e39bf6f14285923dd3c2d"
        ],
        [
            "Ltac qif_monotonic_tac := repeat (apply forall2_le_suml || apply forall2_le_maxl || apply Plus.plus_le_compat_r || apply Plus.plus_le_compat_l || apply Plus.plus_le_compat || apply Nat.max_le_compat_r || apply Nat.max_le_compat_l || apply Nat.max_le_compat || apply Mult.mult_le_compat_l || apply Mult.mult_le_compat_r || apply Mult.mult_le_compat ); trivial.",
            "VernacExtend",
            "448eff1ab2b2cbae2162f71fa6feb4c0af543b70"
        ],
        [
            "Definition qif_proofs : {qif | subterm qif /\\ monotonicity_qif qif /\\ compatible_QI qic qif}.",
            "VernacDefinition",
            "7aa86bae0c018500c11646ad40b1544077400bd3"
        ],
        [
            "apply QI.p_smc_smc.",
            "VernacExtend",
            "e0cff34a88fcbde61de8b695b060bc924b8afa6b"
        ],
        [
            "unfold EMProg.prog, em_prog.",
            "VernacExtend",
            "41178490ee620123c965bc69bada1540eabcbd1e"
        ],
        [
            "inst_next (fun x => maxl x + 1).",
            "VernacExtend",
            "a0d0cb2c58bab601d6aa7a5fdf869d685237617f"
        ],
        [
            "do 3 (prove_rule H).",
            "VernacExtend",
            "0d51bd390bf2e3352e24a5c14147a7a5b8782945"
        ],
        [
            "inst_next (fun x => maxl x + 1).",
            "VernacExtend",
            "a0d0cb2c58bab601d6aa7a5fdf869d685237617f"
        ],
        [
            "inst double_maskF (fun x => maxl x + 1).",
            "VernacExtend",
            "5558f62cc60094e8342423f7224c7a4d8b4d4531"
        ],
        [
            "do 5 (prove_rule H).",
            "VernacExtend",
            "7f237690f481c5cd115d01fdb9814e4b04cdb266"
        ],
        [
            "inst_next (fun x => maxl x + 2).",
            "VernacExtend",
            "bcade71321bb0214a15f358e702268bcf39a9a46"
        ],
        [
            "inst sub_maskF (fun x => maxl x + 1).",
            "VernacExtend",
            "f1018022769fe4960f9cd26a0e62af2bd369863a"
        ],
        [
            "inst sub_mask_carryF (fun x => maxl x + 1).",
            "VernacExtend",
            "453b58bc1734a3ed382b62138b64fdad8cdaad95"
        ],
        [
            "do 18 (prove_rule H).",
            "VernacExtend",
            "9c1edcecdc7dfe50dc6e8291d11cb898704ea3e9"
        ],
        [
            "inst_next maxl.",
            "VernacExtend",
            "4d969b84b55731d77f09cab7250086e20fd10e71"
        ],
        [
            "inst compare_contLtF maxl.",
            "VernacExtend",
            "0a1eb46211608bc74dde58c73590fcbcfada882e"
        ],
        [
            "inst compare_contGtF maxl.",
            "VernacExtend",
            "1f7934a93f9603b513d25dda0bbec7bce113489a"
        ],
        [
            "inst compareF maxl.",
            "VernacExtend",
            "235746d8a2fc7c6a1e5f6f1f6eba2edaf27029fa"
        ],
        [
            "do 25 (prove_rule H).",
            "VernacExtend",
            "8c33b3ac8bf6a123be847c6a4fad822d967876db"
        ],
        [
            "inst_next (fun l => maxl l + 1).",
            "VernacExtend",
            "56b91b79baf2b11efbbe6fb3532cd6ff2b095f22"
        ],
        [
            "inst doubleF (fun l => maxl l + 1).",
            "VernacExtend",
            "c6ff1a8a28418342f1e6ec02103f9523d04839df"
        ],
        [
            "do 4 (prove_rule H).",
            "VernacExtend",
            "f2eb3963cb5c439a3b3b1a0e0ff7513c51a8c862"
        ],
        [
            "inst_next (fun l => maxl l).",
            "VernacExtend",
            "def10067e0bd76e1e5bfe3abe98a6527f8da2c70"
        ],
        [
            "prove_rule H.",
            "VernacExtend",
            "ccf454e426ed9a714fc8ffee27e7278dc1e091cc"
        ],
        [
            "rewrite cons_app.",
            "VernacExtend",
            "e36c3021d7c2c7d7acc07483157753b49a55d9c3"
        ],
        [
            "apply QI.p_smc_QI_app.",
            "VernacExtend",
            "b2e5cada0ed4bb56c6248f94c35f88c9ed732aeb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros f lp t s.",
            "VernacExtend",
            "cc60245dd8dc69643b94c37e07f9a930f23d82d7"
        ],
        [
            "cbn.",
            "VernacExtend",
            "2de4be1c15e6f71a05c3809cbe562a67585b4b18"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "destruct H; try tauto.",
            "VernacExtend",
            "2a02380299933a125285bfdfd3de2a041c78b5a9"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold map.",
            "VernacExtend",
            "d6f3bc771467f8d4970eb68d25db08fab4a0a015"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite QI.value_as_p_term_assignment.",
            "VernacExtend",
            "52afb34c1e05c34704442efcf93cd02ad5d7f38b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "rewrite Nat.max_0_r.",
            "VernacExtend",
            "755b477142f139728934966474003d332920389e"
        ],
        [
            "unfold qic at 1.",
            "VernacExtend",
            "cb081165451deabebd4082a3cd4073a5662922a2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold cs.",
            "VernacExtend",
            "bfc29afdc18abfb51b83cf933a5141d0eee451c1"
        ],
        [
            "apply le_trans with (m:=Syntax.value_size (s p)).",
            "VernacExtend",
            "ab32fcf60fdfbd24e537ae9b39d615f3fa2a67f5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- Syntax.compatible_sizes with (variable:=variable) (function:=function).",
            "VernacExtend",
            "16270f1c959e8f9dac4353d04fe355419ba831a5"
        ],
        [
            "set (v:=Syntax.term_from_value variable function (s p)).",
            "VernacExtend",
            "6d6f21375a1aa6139561ba030503d54a6ac18736"
        ],
        [
            "generalize (Syntax.gt_term_size_O v).",
            "VernacExtend",
            "bbc16bd12a2ce096050753bcf8646829ab93a325"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply QI.value_size_le_QI with (cs:=cs).",
            "VernacExtend",
            "c4e7b38b53cb903264589dffcc132f3e331317b0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply qic_additivity.",
            "VernacExtend",
            "f5422d650f8e66e956b02d790b5f8eca482c7e32"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply qic_nonzero.",
            "VernacExtend",
            "d31602144bb157994234e9259bf5c25d15eabc97"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "inst_next (fun l => maxl l).",
            "VernacExtend",
            "def10067e0bd76e1e5bfe3abe98a6527f8da2c70"
        ],
        [
            "do 3 (prove_rule H).",
            "VernacExtend",
            "0d51bd390bf2e3352e24a5c14147a7a5b8782945"
        ],
        [
            "inst_next maxl.",
            "VernacExtend",
            "4d969b84b55731d77f09cab7250086e20fd10e71"
        ],
        [
            "do 4 (prove_rule H).",
            "VernacExtend",
            "f2eb3963cb5c439a3b3b1a0e0ff7513c51a8c862"
        ],
        [
            "inst_next (fun l => maxl l).",
            "VernacExtend",
            "def10067e0bd76e1e5bfe3abe98a6527f8da2c70"
        ],
        [
            "prove_rule H.",
            "VernacExtend",
            "ccf454e426ed9a714fc8ffee27e7278dc1e091cc"
        ],
        [
            "rewrite cons_app.",
            "VernacExtend",
            "e36c3021d7c2c7d7acc07483157753b49a55d9c3"
        ],
        [
            "apply QI.p_smc_QI_app.",
            "VernacExtend",
            "b2e5cada0ed4bb56c6248f94c35f88c9ed732aeb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros f lp t s.",
            "VernacExtend",
            "cc60245dd8dc69643b94c37e07f9a930f23d82d7"
        ],
        [
            "cbn.",
            "VernacExtend",
            "2de4be1c15e6f71a05c3809cbe562a67585b4b18"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "destruct H; try tauto.",
            "VernacExtend",
            "2a02380299933a125285bfdfd3de2a041c78b5a9"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold map.",
            "VernacExtend",
            "d6f3bc771467f8d4970eb68d25db08fab4a0a015"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite QI.value_as_p_term_assignment.",
            "VernacExtend",
            "52afb34c1e05c34704442efcf93cd02ad5d7f38b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "rewrite Nat.max_0_r.",
            "VernacExtend",
            "755b477142f139728934966474003d332920389e"
        ],
        [
            "unfold qic at 1.",
            "VernacExtend",
            "cb081165451deabebd4082a3cd4073a5662922a2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold cs.",
            "VernacExtend",
            "bfc29afdc18abfb51b83cf933a5141d0eee451c1"
        ],
        [
            "apply le_trans with (m:=Syntax.value_size (s q)).",
            "VernacExtend",
            "c4a42a4c462df4f5e26b1ea0a2087bca64270375"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- Syntax.compatible_sizes with (variable:=variable) (function:=function).",
            "VernacExtend",
            "16270f1c959e8f9dac4353d04fe355419ba831a5"
        ],
        [
            "set (v:=Syntax.term_from_value variable function (s q)).",
            "VernacExtend",
            "57b86c1ceb5f0f83fc734941511d787d8945dc9a"
        ],
        [
            "generalize (Syntax.gt_term_size_O v).",
            "VernacExtend",
            "bbc16bd12a2ce096050753bcf8646829ab93a325"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply QI.value_size_le_QI with (cs:=cs).",
            "VernacExtend",
            "c4e7b38b53cb903264589dffcc132f3e331317b0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply qic_additivity.",
            "VernacExtend",
            "f5422d650f8e66e956b02d790b5f8eca482c7e32"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply qic_nonzero.",
            "VernacExtend",
            "d31602144bb157994234e9259bf5c25d15eabc97"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "inst_next maxl.",
            "VernacExtend",
            "4d969b84b55731d77f09cab7250086e20fd10e71"
        ],
        [
            "prove_rule H.",
            "VernacExtend",
            "ccf454e426ed9a714fc8ffee27e7278dc1e091cc"
        ],
        [
            "inst_next maxl.",
            "VernacExtend",
            "4d969b84b55731d77f09cab7250086e20fd10e71"
        ],
        [
            "do 2 (prove_rule H).",
            "VernacExtend",
            "51eb2d2cb733ab8e5b2b386d1ff802e683fa1246"
        ],
        [
            "inst_next (fun l => suml l + 1).",
            "VernacExtend",
            "0680434da9bcaf79558fbc3e2eda7f621a606319"
        ],
        [
            "do 4 (prove_rule H).",
            "VernacExtend",
            "f2eb3963cb5c439a3b3b1a0e0ff7513c51a8c862"
        ],
        [
            "inst_next (fun l => suml l + 1).",
            "VernacExtend",
            "0680434da9bcaf79558fbc3e2eda7f621a606319"
        ],
        [
            "do 2 (prove_rule H).",
            "VernacExtend",
            "51eb2d2cb733ab8e5b2b386d1ff802e683fa1246"
        ],
        [
            "inst_next (fun l => maxl l + 1); do 3 (prove_rule H).",
            "VernacExtend",
            "4a7bdd984127842638bf5dbd515428d301890ec5"
        ],
        [
            "inst add_carryF (fun l => maxl l + 1).",
            "VernacExtend",
            "8bd7c03b42b7dae32c446561f29e197dbcaf9ef2"
        ],
        [
            "inst_next (fun l => maxl l + 1).",
            "VernacExtend",
            "56b91b79baf2b11efbbe6fb3532cd6ff2b095f22"
        ],
        [
            "do 18 (prove_rule H).",
            "VernacExtend",
            "9c1edcecdc7dfe50dc6e8291d11cb898704ea3e9"
        ],
        [
            "inst_next (fun l => maxl l + 1); do 3 (prove_rule H).",
            "VernacExtend",
            "4a7bdd984127842638bf5dbd515428d301890ec5"
        ],
        [
            "inst_next (fun l => match l with [p1;y1;m1;c1] => (m1+3) * (c1+1) + max p1 y1 | _ => maxl l end).",
            "VernacExtend",
            "b27e0025bddb49cd82661a4f5658680d30ed57bf"
        ],
        [
            "do 3 (prove_rule H).",
            "VernacExtend",
            "0d51bd390bf2e3352e24a5c14147a7a5b8782945"
        ],
        [
            "inst_next (fun l => match l with [p1;y1;m1;c1] => (m1+3) * (c1+1) + max p1 y1 | _ => maxl l end).",
            "VernacExtend",
            "b27e0025bddb49cd82661a4f5658680d30ed57bf"
        ],
        [
            "do 2 (prove_rule H).",
            "VernacExtend",
            "51eb2d2cb733ab8e5b2b386d1ff802e683fa1246"
        ],
        [
            "inst_next (fun l => match l with [x1;y1;m1;c1] => x1 + (y1 + 1) * 2 * (m1+3) * (c1+1) | _ => maxl l end).",
            "VernacExtend",
            "e8b14578e06db9badb8a9f17417cdacb7b7ed8e0"
        ],
        [
            "do 3 (prove_rule H).",
            "VernacExtend",
            "0d51bd390bf2e3352e24a5c14147a7a5b8782945"
        ],
        [
            "inst_next (fun l => maxl l +1).",
            "VernacExtend",
            "56b91b79baf2b11efbbe6fb3532cd6ff2b095f22"
        ],
        [
            "do 5 (prove_rule H).",
            "VernacExtend",
            "7f237690f481c5cd115d01fdb9814e4b04cdb266"
        ],
        [
            "inst_next (fun l => match l with [x1;y1;m1] => x1 + (y1+1) * 2 * (m1+3) * (m1+2) | _ => maxl l end).",
            "VernacExtend",
            "a9203ace780ca359008611ed6f959f310ef7e7bb"
        ],
        [
            "do 2 (prove_rule H).",
            "VernacExtend",
            "51eb2d2cb733ab8e5b2b386d1ff802e683fa1246"
        ],
        [
            "eexists (fun x => None).",
            "VernacExtend",
            "a3856e6a8ef4c2437d0af4312e8db6699f1e2613"
        ],
        [
            "unfold QI.p_smc, QI.p_compatible_QI, QI.p_subterm, QI.p_monotonicity.",
            "VernacExtend",
            "a4636c4cdd4317543b43098311ab7309e9a47e63"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros f l x Hin; assert(H' := maxl_is_max _ _ Hin); assert (H'' := maxl_le_suml l); destruct f; simpl; trivial; try omega; (repeat (destruct l; trivial); repeat(destruct Hin as [ H | Hin]; [subst; simpl; try_prove_ineq |]); try inversion Hin).",
            "VernacExtend",
            "1ac89d4fcc17129db97c6d17fef5287c53923c21"
        ],
        [
            "simpl; nia.",
            "VernacExtend",
            "5fa4aae67f933d06cf4809de466546120f46eb7a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros f xs ys Hfor.",
            "VernacExtend",
            "5657f30ff5615b5b60ddd8b164df32e98b3e25c1"
        ],
        [
            "destruct f; qif_monotonic_tac; repeat (destruct Hfor; simpl; try qif_monotonic_tac).",
            "VernacExtend",
            "a68f77f073eb4543887d3912345e8fd2f70bc4cc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition qif := proj1_sig qif_proofs.",
            "VernacDefinition",
            "2a6ab3b446e5406a7089ab68cd234017a64c3c4e"
        ],
        [
            "Proposition qi_is_valid : valid_QI mcs qic qif cs.",
            "VernacStartTheoremProof",
            "1b72b7fb55cd17b2f0f467d7f3a5846bfc7dd660"
        ],
        [
            "unfold qif.",
            "VernacExtend",
            "5bf1f3adc4aaf4a87871e9e39e1f2e2d9d17bfc2"
        ],
        [
            "destruct qif_proofs as (qif & Hs & Hm & Hc).",
            "VernacExtend",
            "9d33cf7a7204070b7c1be385ca9f5d428bec42c6"
        ],
        [
            "repeat split; trivial.",
            "VernacExtend",
            "060692b05c8d85062072ae8d30e5549bb92445ef"
        ],
        [
            "apply qic_bounded.",
            "VernacExtend",
            "298452adf2203aad8e542190ad3f7b6d7e6f1cd5"
        ],
        [
            "apply qic_nonzero.",
            "VernacExtend",
            "d31602144bb157994234e9259bf5c25d15eabc97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem polytime: forall i s p c f lv d v, let t := fapply f lv in let pi := cbv_update i s p c t d v in cbv_wf pi -> cache_bounded qic qif c -> cbv_size pi <= global_bound mcs qif f lv c.",
            "VernacStartTheoremProof",
            "9c8a26a0a49ae8d0df6ed6c86349811efb23a37e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply P_criterion with (rank:=rank) (cs:=cs) (qic:=qic); auto.",
            "VernacExtend",
            "3d347622e404b9df97eb5066400d53edbc179ee2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; [ apply Expmod_is_wf | trivial ].",
            "VernacExtend",
            "7c955f0073f5af9d673e6bff76932e87ee758705"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "cbv; omega.",
            "VernacExtend",
            "438e8ca39271be0e1d89e8942dbfa12dd63962b9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros f0; destruct f0; cbv; omega.",
            "VernacExtend",
            "295506339ad1f85f4b37a657137075f9e5a01af9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply expmod_is_ppo.",
            "VernacExtend",
            "23380e34d46ef07ca5047acf06e8e83a72fc6e51"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply qi_is_valid.",
            "VernacExtend",
            "665e1f63e0be61db2a8a6fe469d8f6eaa5911de0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint Pos_of_value (v : value) : positive := match v with | Syntax.c_capply XHC [] => xH | Syntax.c_capply XOC [v] => xO (Pos_of_value v) | Syntax.c_capply XIC [v] => xI (Pos_of_value v) | _ => xH end.",
            "VernacFixpoint",
            "49d97599459db212e92ea05dac9e82a36c51fc4f"
        ],
        [
            "Fixpoint N_of_value (v : value) : N := match v with | Syntax.c_capply N0C [] => 0 | Syntax.c_capply NPosC [v] => N.pos (Pos_of_value v) | _ => 0 end.",
            "VernacFixpoint",
            "0d6e270a3dfffa868b889c0cdd211b8c670b74a2"
        ],
        [
            "Fixpoint value_of_pos (n : positive) : value := match n with | xH => c_capply XHC [] | xO a => c_capply XOC [value_of_pos a] | xI a => c_capply XIC [value_of_pos a] end.",
            "VernacFixpoint",
            "c3f5d582bb89fa6c9227fcce2950290eb585ca30"
        ],
        [
            "Fixpoint pos_of_value p := match p with | Syntax.c_capply XHC [] => xH | Syntax.c_capply XOC [a] => xO (pos_of_value a) | Syntax.c_capply XIC [a] => xI (pos_of_value a) | _ => xH end.",
            "VernacFixpoint",
            "673c3f02aca7b689c7d33715229ded59ca9a1749"
        ],
        [
            "Definition value_of_N (n : N) : Syntax.value EMSyntax.constructor := match n with | 0%N => c_capply N0C [] | Npos a => c_capply NposC [value_of_pos a] end.",
            "VernacDefinition",
            "8b2bc744186701b871e85df247577fd1dab3a204"
        ],
        [
            "Definition value_of_mask (m : Pos.mask) := match m with | IsPos a => c_capply IsPosC [value_of_pos a] | IsNeg => c_capply IsNegC [] | IsNul => c_capply IsNulC [] end.",
            "VernacDefinition",
            "d72f4d37cdb0ea990df64191a7ec914d8be84900"
        ],
        [
            "Definition mask_of_value m := match m with | Syntax.c_capply IsPosC [a] => IsPos (pos_of_value a) | Syntax.c_capply IsNegC [] => IsNeg | Syntax.c_capply IsNulC [] => IsNul | _ => IsNul end.",
            "VernacDefinition",
            "ab7a2f591c263d374bcd537596736b0cf81e3032"
        ],
        [
            "Definition value_of_comp c := match c with | Eq => c_capply EqC [] | Lt => c_capply LtC [] | Gt => c_capply GtC [] end.",
            "VernacDefinition",
            "5c5bca5bad5dcb21c998cd53086ed14563cfbb66"
        ],
        [
            "Definition comp_of_value v := match v with | Syntax.c_capply EqC [] => Eq | Syntax.c_capply LtC [] => Lt | Syntax.c_capply GtC [] => Gt | _ => Eq end.",
            "VernacDefinition",
            "6c5f5bbfb92d7ac6f6676738c81970973566a807"
        ],
        [
            "Definition value_of_bool b := match b with | true => c_capply TrueC [] | false => c_capply FalseC [] end.",
            "VernacDefinition",
            "e6dfbdbb209afbb140ba16be393281612987c049"
        ],
        [
            "Definition bool_of_value v := match v with | Syntax.c_capply TrueC [] => true | Syntax.c_capply FalseC [] => false | _ => false end.",
            "VernacDefinition",
            "430d59bf93641c048a494fb169c200f20266eb90"
        ],
        [
            "Definition pairN : Type := (N * N).",
            "VernacDefinition",
            "0c84863cbd53f5453fedd23a840f33fd9ac47850"
        ],
        [
            "Definition value_of_pair (x : pairN) := c_capply PairC [value_of_N (fst x); value_of_N (snd x)].",
            "VernacDefinition",
            "4aff37b087802a8ade973fa53c12ba094aeb22e8"
        ],
        [
            "Coercion value_of_N : N >-> Syntax.value.",
            "VernacCoercion",
            "5e689072fa7fb90b74ba92749e1e54061f81daad"
        ],
        [
            "Coercion value_of_pair : pairN >-> value.",
            "VernacCoercion",
            "6c1d60ca8213497c3d4879fd3424e90516cbc337"
        ],
        [
            "Open Scope N_scope.",
            "VernacOpenCloseScope",
            "a493f4fe4bb16b98586e79b7a87575160bc187f1"
        ],
        [
            "Lemma pred_double_correct p : forall t, evaluates t (value_of_pos p) -> evaluates (pred_doubleF (: t :)) (value_of_pos (Pos.pred_double p)).",
            "VernacStartTheoremProof",
            "6127e54a835f1cf2a2fcad2fa8e5826826906b6a"
        ],
        [
            "induction p; intros; reduce; apply IHp; auto with *.",
            "VernacExtend",
            "31af4b140d5b91c5e7841f045d23f1363750bf7d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pred_double_correct' : ltac:(auto_for_auto pred_double_correct) := pred_double_correct.",
            "VernacDefinition",
            "22a0d177d27aee839cbbfb2efe342b6cbe14ca85"
        ],
        [
            "Hint Resolve pred_double_correct' : eval.",
            "VernacHints",
            "afacd806bf1733ec5277c524ffe2f2824fba7e45"
        ],
        [
            "Lemma succ_double_mask_correct m : forall t, evaluates t (value_of_mask m) -> evaluates (succ_double_maskF (: t :)) (value_of_mask (Pos.succ_double_mask m)).",
            "VernacStartTheoremProof",
            "fa4c782a90957f82b8b938f2a36f01679fee7030"
        ],
        [
            "induction m; reduce.",
            "VernacExtend",
            "7421f5b7e18c2bbef36b0ce8fcd4583ad7a4340e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition succ_double_mask_correct' : ltac:(auto_for_auto succ_double_mask_correct) := succ_double_mask_correct.",
            "VernacDefinition",
            "0bd1912817c45aca44d7737c6fbd7d60770d648b"
        ],
        [
            "Hint Resolve succ_double_mask_correct' : eval.",
            "VernacHints",
            "87fe960e1d3f632ec0d131c80a6fe35e5bedda9f"
        ],
        [
            "Lemma double_mask_correct m : forall t, evaluates t (value_of_mask m) -> evaluates (double_maskF (: t :)) (value_of_mask (Pos.double_mask m)).",
            "VernacStartTheoremProof",
            "d098ad1250f2709d5bb9364c52f8d46438537fbf"
        ],
        [
            "induction m; reduce.",
            "VernacExtend",
            "7421f5b7e18c2bbef36b0ce8fcd4583ad7a4340e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition double_mask_correct' : ltac:(auto_for_auto double_mask_correct) := double_mask_correct.",
            "VernacDefinition",
            "210b66e8319a1e304db8ee0fb850c9d460090b52"
        ],
        [
            "Hint Resolve double_mask_correct' : eval.",
            "VernacHints",
            "ef6c56b8e0b12569f141b9ffeb9cd483dd5c956a"
        ],
        [
            "Lemma double_pred_mask_correct p : forall t, evaluates t (value_of_pos p) -> evaluates (double_pred_maskF (: t :)) (value_of_mask (Pos.double_pred_mask p)).",
            "VernacStartTheoremProof",
            "bcb47a3da549a9c6386e361678abd9f87cea5535"
        ],
        [
            "induction p; reduce.",
            "VernacExtend",
            "efabc79f4921c28b7ee85894497a0ba2f746c7cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition double_pred_mask_correct' : ltac:(auto_for_auto double_pred_mask_correct) := double_pred_mask_correct.",
            "VernacDefinition",
            "c5423c9690b69f33d789d2b812a4c39ed79e8335"
        ],
        [
            "Hint Resolve double_pred_mask_correct' : eval.",
            "VernacHints",
            "83b30227826a08b8ab647e7c6810d684735a0a67"
        ],
        [
            "Lemma sub_mask_correct q : forall p tp tq, evaluates tp (value_of_pos p) -> evaluates tq (value_of_pos q) -> evaluates (sub_maskF (: tp, tq :)) (value_of_mask (Pos.sub_mask p q)) /\\ evaluates (sub_mask_carryF (: tp, tq :)) (value_of_mask (Pos.sub_mask_carry p q)).",
            "VernacStartTheoremProof",
            "c79e13997da0bde999e73820e90bb45c71ba9524"
        ],
        [
            "induction q; intros p tp tq Hp Hq; destruct p; split; reduce; simpl; fold value_of_pos; case_eq (Pos.sub_mask p0 q0); case_eq (Pos.sub_mask_carry p0 q0); intros; (econstructor; [ reduce; apply IHq; auto with * | try rewrite H; try rewrite H0; tauto | try reduce; auto with *]).",
            "VernacExtend",
            "f603d0027b7e0064ba742714dc6b4fa689b81623"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sub_mask_correct' : ltac:(auto_for_auto sub_mask_correct) := sub_mask_correct.",
            "VernacDefinition",
            "0ac849dd847ab06b23d092e3ef4632b3232af29b"
        ],
        [
            "Hint Resolve sub_mask_correct' : eval.",
            "VernacHints",
            "a2e326af20fdfa75800db0442f96724b9866621d"
        ],
        [
            "Lemma compare_cont_correct p: forall tp tq q, evaluates tp (value_of_pos p) -> evaluates tq (value_of_pos q) -> evaluates (compare_contEqF (: term_from_value (value_of_pos p), term_from_value (value_of_pos q) :)) (value_of_comp (Pos.compare_cont Eq p q)) /\\ evaluates (compare_contLtF (: term_from_value (value_of_pos p), term_from_value (value_of_pos q) :)) (value_of_comp (Pos.compare_cont Lt p q)) /\\ evaluates (compare_contGtF (: term_from_value (value_of_pos p), term_from_value (value_of_pos q) :)) (value_of_comp (Pos.compare_cont Gt p q)).",
            "VernacStartTheoremProof",
            "b659c1207f65ef5bdfe15af2629158bedf8097ba"
        ],
        [
            "induction p; intros tp tq q; destruct q; intros Hp Hq; repeat reduce; simpl in *; fold value_of_pos; eapply IHp; auto with *.",
            "VernacExtend",
            "16228b5749039d1a76a1c12ebd47ea5f2685e83a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition compare_cont_correct' : ltac:(auto_for_auto compare_cont_correct) := compare_cont_correct.",
            "VernacDefinition",
            "f103201179ed9a148ea470a6db78726beb64ac0d"
        ],
        [
            "Hint Resolve compare_cont_correct' : eval.",
            "VernacHints",
            "ca26b80f5546419a6da1adf1fc173dbb8520019e"
        ],
        [
            "Lemma compare_correct p: forall q tp tq, evaluates tp (value_of_pos p) -> evaluates tq (value_of_pos q) -> evaluates (compareF (: tp, tq :)) (value_of_comp (Pos.compare p q)).",
            "VernacStartTheoremProof",
            "33c5e80fe44f5c0e5df10a93d1e837d5e45415a7"
        ],
        [
            "intros q tp tq Htp Htq; reduce; eapply (compare_cont_correct p); auto with *.",
            "VernacExtend",
            "345912b15165b96ddff25b49dc13c175495a79cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition compare_correct' : ltac:(auto_for_auto compare_correct) := compare_correct.",
            "VernacDefinition",
            "15f7d133eb56cb8b00a0de1bbdafb30784280c2e"
        ],
        [
            "Hint Resolve compare_correct' : eval.",
            "VernacHints",
            "727b2b26f4ef697d759cf1fa30f0b697296c55d1"
        ],
        [
            "Lemma succ_double_correct t n : evaluates t (value_of_N n) -> evaluates (succ_doubleF (: t :)) (value_of_N (N.succ_double n)).",
            "VernacStartTheoremProof",
            "d2cdbc28ba20b8860900955085e4dfed5f56bae7"
        ],
        [
            "destruct n; reduce.",
            "VernacExtend",
            "33670ef7a7d3a42159c06f9cf444b5b2cec795d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition succ_double_correct' : ltac:(auto_for_auto succ_double_correct) := succ_double_correct.",
            "VernacDefinition",
            "ba27a13d3cedd103f50ee0f01534072604196600"
        ],
        [
            "Hint Resolve succ_double_correct' : eval.",
            "VernacHints",
            "8e40ee3b1e2eb85dd4294c7f446f331369759859"
        ],
        [
            "Lemma double_correct n : forall t, evaluates t (value_of_N n) -> evaluates (doubleF (: t :)) (value_of_N (N.double n)).",
            "VernacStartTheoremProof",
            "0c7747972df8d4cd0388f994c732bf770bbc7655"
        ],
        [
            "destruct n; reduce.",
            "VernacExtend",
            "33670ef7a7d3a42159c06f9cf444b5b2cec795d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition double_correct' : ltac:(auto_for_auto double_correct) := double_correct.",
            "VernacDefinition",
            "316c04d3286e058a674db5e5a4dd17badcbe2955"
        ],
        [
            "Hint Resolve double_correct' : eval.",
            "VernacHints",
            "c00359c1c0a0b96af87db1e474b7243a523ea001"
        ],
        [
            "Lemma sub_correct n m tn tm: evaluates tn (value_of_N n) -> evaluates tm (value_of_N m) -> evaluates (subF (: tn , tm :)) (value_of_N (N.sub n m)).",
            "VernacStartTheoremProof",
            "0562ad52a88bbab3dc1999cc574d2af3a6386c4e"
        ],
        [
            "intros Hn Hm; destruct n, m; reduce; simpl; case_eq (Pos.sub_mask p0 p1); intros; (econstructor; [ repeat constructor; eapply sub_mask_correct; auto with * | rewrite H; tauto | try reduce; auto with eval]).",
            "VernacExtend",
            "51fdbf6e7cc7f7e58385c56cfee1b3425fe8d9fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sub_correct' : ltac:(auto_for_auto sub_correct) := sub_correct.",
            "VernacDefinition",
            "dad86a68cc2c37a129074583a4290562207a67aa"
        ],
        [
            "Hint Resolve sub_correct' : eval.",
            "VernacHints",
            "c51a79ff45eddc4ce77657017899d6a04dc62367"
        ],
        [
            "Lemma compare0_correct n: forall m tn tm, evaluates tn (value_of_N n) -> evaluates tm (value_of_N m) -> evaluates (compare0F (: tn, tm :)) (value_of_comp (N.compare n m)).",
            "VernacStartTheoremProof",
            "cf16bf9604a06ee33a659937e9313300b07f7af7"
        ],
        [
            "induction n; intro m; intros; destruct m; reduce.",
            "VernacExtend",
            "7bf6baef24333ca0e26b2d51766b5adabfca3640"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition compare0_correct' : ltac:(auto_for_auto compare0_correct) := compare0_correct.",
            "VernacDefinition",
            "a5fa4f64522429ee167caeb8524fd917d48d9b5c"
        ],
        [
            "Hint Resolve compare0_correct' : eval.",
            "VernacHints",
            "ea66c8d5a33c5df786cd67a93f9a498be5d9971d"
        ],
        [
            "Lemma leb_aux_correct : forall tc c, evaluates tc (value_of_comp c) -> evaluates (leb_auxF (: tc :)) (value_of_bool (match c with Gt => false | _ => true end)).",
            "VernacStartTheoremProof",
            "2e8d4bf67d5211468c9c7217540bbae25647f936"
        ],
        [
            "intros tc c; destruct c; repeat split; reduce.",
            "VernacExtend",
            "81a35fc32771b014ac6ce2ebbefbfbcc51f3eedb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition leb_aux_correct' : ltac:(auto_for_auto leb_aux_correct) := leb_aux_correct.",
            "VernacDefinition",
            "b5384352db535b4a4d725f23e207b945774c82db"
        ],
        [
            "Hint Resolve leb_aux_correct' : eval.",
            "VernacHints",
            "e71cba1489965dc93f8f7907e2b252ac36a3b8f9"
        ],
        [
            "Lemma leb_correct tn tm (n m : N) : evaluates tn (value_of_N n) -> evaluates tm (value_of_N m) -> evaluates (lebF (: tn, tm :)) (value_of_bool (N.leb n m)).",
            "VernacStartTheoremProof",
            "a122a721d70d9c0be81a998ed945dcafdf6152a1"
        ],
        [
            "reduce.",
            "VernacExtend",
            "02c32f128d185d326606f259a6bf160d2fd55ca6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition leb_correct' : ltac:(auto_for_auto leb_correct) := leb_correct.",
            "VernacDefinition",
            "db54adcf37a72e664abd6dac9f710b6624b9b0aa"
        ],
        [
            "Hint Resolve leb_correct' : eval.",
            "VernacHints",
            "202be9f5b8359c40d54a453bc8d0e24e543b6de8"
        ],
        [
            "Lemma cond_correct {A} f tc ta tb c (a b : A) : evaluates tc (value_of_bool c) -> evaluates ta (f a) -> evaluates tb (f b) -> evaluates (condF (: tc, ta, tb :)) (f (if c then a else b)).",
            "VernacStartTheoremProof",
            "786a4a73ee2160bb37da5ac7146cbd00dc931b4e"
        ],
        [
            "destruct c; reduce.",
            "VernacExtend",
            "be61215c9074680592830612d7b5c6a87d47fcfb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cond_correct' A : ltac:(auto_for_auto (@cond_correct A)) := cond_correct.",
            "VernacDefinition",
            "549b9f056df2dfb49c0da8997740e5cc6209a840"
        ],
        [
            "Hint Resolve cond_correct' : eval.",
            "VernacHints",
            "65a87e32ee53b9c000a9bb2814076c93c879b060"
        ],
        [
            "Lemma mod_succ_double_compat n m : (if m <=? N.succ_double (n mod m) then N.succ_double (n mod m) - m else N.succ_double (n mod m)) = N.succ_double n mod m.",
            "VernacStartTheoremProof",
            "8c0f03f7b441f5c8dcd749e443b08e43612310fd"
        ],
        [
            "destruct n as [| n].",
            "VernacExtend",
            "e9a6c38314370079277fe54649bef28abc1a6c0c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct m as [|[m|m|]]; trivial.",
            "VernacExtend",
            "76c911fb02bc8c96a3363c7296532ceeed7722a3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold N.modulo.",
            "VernacExtend",
            "75b68311c4d208c82690b57b6a2fa994db376e4d"
        ],
        [
            "case_eq (N.div_eucl (N.pos n) m); intros q r Hqr.",
            "VernacExtend",
            "ddb999a6d17e9366092374e4317142f49f6538f8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct m as [|m]; trivial; simpl.",
            "VernacExtend",
            "bed1d16c9391283e75add715e8a6ede98d7afb2e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now simpl in Hqr; inversion Hqr; subst.",
            "VernacExtend",
            "165039e7453ff982e0c74d12a6783581bb9b78a2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in Hqr; rewrite Hqr.",
            "VernacExtend",
            "9b0e771393190487f97439b97bff1e84e619817e"
        ],
        [
            "destruct(N.pos m <=? N.succ_double r); trivial.",
            "VernacExtend",
            "89464812887be4ccbfaa8f3ece9a4ffe77a07724"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod_double_compat n m : (if m <=? N.double (n mod m) then N.double (n mod m) - m else N.double (n mod m)) = N.double n mod m.",
            "VernacStartTheoremProof",
            "8121e62da5e21909f6f6809910badf1ee0bd4b72"
        ],
        [
            "destruct n as [| n].",
            "VernacExtend",
            "e9a6c38314370079277fe54649bef28abc1a6c0c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct m as [|[m|m|]]; trivial.",
            "VernacExtend",
            "76c911fb02bc8c96a3363c7296532ceeed7722a3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold N.modulo.",
            "VernacExtend",
            "75b68311c4d208c82690b57b6a2fa994db376e4d"
        ],
        [
            "case_eq (N.div_eucl (N.pos n) m); intros q r Hqr.",
            "VernacExtend",
            "ddb999a6d17e9366092374e4317142f49f6538f8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct m as [|m]; trivial; simpl.",
            "VernacExtend",
            "bed1d16c9391283e75add715e8a6ede98d7afb2e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now simpl in Hqr; inversion Hqr; subst.",
            "VernacExtend",
            "165039e7453ff982e0c74d12a6783581bb9b78a2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in Hqr; rewrite Hqr.",
            "VernacExtend",
            "9b0e771393190487f97439b97bff1e84e619817e"
        ],
        [
            "destruct(N.pos m <=? N.double r); trivial.",
            "VernacExtend",
            "ba7fcf13ba70a3950f074b22eb0ff0cd4e9d7265"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod_aux_correct n m tn tm: evaluates tn (value_of_pos n) -> evaluates tm (value_of_N m) -> evaluates (mod_auxF (: tn, tm :)) (value_of_N (N.modulo (N.pos n) m)).",
            "VernacStartTheoremProof",
            "b319c06165f26f500a5dafc6a540b1a72f6e8eff"
        ],
        [
            "revert tn tm.",
            "VernacExtend",
            "bb727eb520bce0d024783b0509e16dc2c5b9d028"
        ],
        [
            "induction n; intros tn tm Hn Hm.",
            "VernacExtend",
            "645baaa97878beed259ec78c71489e54551590f3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reduce; evar (v1: N); evar (v2: N).",
            "VernacExtend",
            "3bba764c48c41a4fe4fd828d2267d39f2e0089f0"
        ],
        [
            "replace (N.pos n~1 mod m) with (if m <=? N.succ_double (N.pos n mod m) then v1 else v2).",
            "VernacExtend",
            "ba98e1d8292240233f3ece45a44a436f638cb9c2"
        ],
        [
            "apply cond_correct.",
            "VernacExtend",
            "9a54d3d49dd01d4cb8e223642a70b85aaecfabeb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply leb_correct; simpl; auto with *.",
            "VernacExtend",
            "52a5d5308ec0d25da338f0ce160f3a1396348ef5"
        ],
        [
            "apply succ_double_correct; auto with *.",
            "VernacExtend",
            "739e35025a9650d4462493d4cae6178424011537"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply sub_correct.",
            "VernacExtend",
            "59ce0f6d903c02fc070c867092631e5f14dd0f2e"
        ],
        [
            "apply succ_double_correct.",
            "VernacExtend",
            "51de04d20b481ccb49ceb7018ba367bb9ffce9cf"
        ],
        [
            "apply IHn; auto with *.",
            "VernacExtend",
            "f6f2c40911d9890d4963e1bbb0b4c4792fbd2798"
        ],
        [
            "simpl; auto with *.",
            "VernacExtend",
            "5af17f2ebf672d577319bda3714d2b8901ccd0fb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply succ_double_correct.",
            "VernacExtend",
            "51de04d20b481ccb49ceb7018ba367bb9ffce9cf"
        ],
        [
            "apply IHn; auto with *.",
            "VernacExtend",
            "f6f2c40911d9890d4963e1bbb0b4c4792fbd2798"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst v1 v2.",
            "VernacExtend",
            "ce7eb0cf2db10a4f6724751458c92418012d4981"
        ],
        [
            "apply mod_succ_double_compat.",
            "VernacExtend",
            "199878c2caaa0789dbb158a7a7b759c159c7db89"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reduce; evar (v1: N); evar (v2: N).",
            "VernacExtend",
            "3bba764c48c41a4fe4fd828d2267d39f2e0089f0"
        ],
        [
            "replace (N.pos n~0 mod m) with (if m <=? N.double (N.pos n mod m) then v1 else v2).",
            "VernacExtend",
            "cfd3a2e7c51d5e6d4ef03118098b881281a0d93f"
        ],
        [
            "apply cond_correct.",
            "VernacExtend",
            "9a54d3d49dd01d4cb8e223642a70b85aaecfabeb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply leb_correct; simpl; auto with *.",
            "VernacExtend",
            "52a5d5308ec0d25da338f0ce160f3a1396348ef5"
        ],
        [
            "apply double_correct; auto with *.",
            "VernacExtend",
            "51a53b73f466a891e92ffae17fa4c8169b7fdb42"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply sub_correct.",
            "VernacExtend",
            "59ce0f6d903c02fc070c867092631e5f14dd0f2e"
        ],
        [
            "apply double_correct.",
            "VernacExtend",
            "6c556b36c11e45a72ebb654f2eea2bebc3900485"
        ],
        [
            "apply IHn; auto with *.",
            "VernacExtend",
            "f6f2c40911d9890d4963e1bbb0b4c4792fbd2798"
        ],
        [
            "simpl; auto with *.",
            "VernacExtend",
            "5af17f2ebf672d577319bda3714d2b8901ccd0fb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply double_correct.",
            "VernacExtend",
            "6c556b36c11e45a72ebb654f2eea2bebc3900485"
        ],
        [
            "apply IHn; auto with *.",
            "VernacExtend",
            "f6f2c40911d9890d4963e1bbb0b4c4792fbd2798"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst v1 v2.",
            "VernacExtend",
            "ce7eb0cf2db10a4f6724751458c92418012d4981"
        ],
        [
            "apply mod_double_compat.",
            "VernacExtend",
            "99ddf3d051d55da30cb9e621d67d4b6241e97a3c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct m as [| [ m | m |]]; simpl; reduce.",
            "VernacExtend",
            "48f42d8b2ba9dc674bb91f7ca29cfe8f1cf9fcc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mod_aux_correct' : ltac:(auto_for_auto mod_aux_correct) := mod_aux_correct.",
            "VernacDefinition",
            "0b713a15abd358632f557b41592e80b2f90dc634"
        ],
        [
            "Hint Resolve mod_aux_correct' : eval.",
            "VernacHints",
            "1983d126e49b2644c454bfd0855db6b166c08ed5"
        ],
        [
            "Lemma mod_0 n : n mod 0 = n.",
            "VernacStartTheoremProof",
            "8d5db51897d81481349411ce617d4102c94a34c7"
        ],
        [
            "destruct n; trivial.",
            "VernacExtend",
            "075df2df6f50c3b92752b2e357bd92e8caf75e9c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod_correct n m tn tm: evaluates tn (value_of_N n) -> evaluates tm (value_of_N m) -> evaluates (modF (: tn, tm :)) (value_of_N (N.modulo n m)).",
            "VernacStartTheoremProof",
            "a9c5c6bfc3461a6d27a9d27c897062778933b912"
        ],
        [
            "destruct n; reduce.",
            "VernacExtend",
            "33670ef7a7d3a42159c06f9cf444b5b2cec795d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mod_correct' : ltac:(auto_for_auto mod_correct) := mod_correct.",
            "VernacDefinition",
            "073a6c4db683f38b44f138b11dfe98ff5cd9f445"
        ],
        [
            "Hint Resolve mod_correct' : eval.",
            "VernacHints",
            "96ec9679d7174a36d411c7ad6392b3e14b02b449"
        ],
        [
            "Lemma succ_correct p: forall t, evaluates t (value_of_pos p) -> evaluates (succF (: t :)) (value_of_pos (Pos.succ p)).",
            "VernacStartTheoremProof",
            "af5e865772dbf5335bfc3c1034b962998c0fb175"
        ],
        [
            "induction p; intros; reduce; apply IHp; auto with *.",
            "VernacExtend",
            "31af4b140d5b91c5e7841f045d23f1363750bf7d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_correct p: forall q tp tq, evaluates tp (value_of_pos p) -> evaluates tq (value_of_pos q) -> evaluates (addF (: tp, tq :)) (value_of_pos (Pos.add p q)) /\\ evaluates (add_carryF (: tp, tq :)) (value_of_pos (Pos.add_carry p q)).",
            "VernacStartTheoremProof",
            "10079226c1d8ef14b062cb47d3f20216796aa9be"
        ],
        [
            "induction p; intros q tp tq Hp Hq; split; destruct q; reduce; try (apply IHp || apply succ_correct); auto with *.",
            "VernacExtend",
            "0a7fe3b3d89433010d29168703f352f3a440da46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add0_correct n m: forall tn tm, evaluates tn (value_of_N n) -> evaluates tm (value_of_N m) -> evaluates (add0F (: tn, tm :)) (value_of_N (N.add n m)).",
            "VernacStartTheoremProof",
            "bfa4becbf3270c5d6691b10008c1211edc028d41"
        ],
        [
            "destruct n; intros; [ reduce |]; destruct m; [ reduce | reduce; apply add_correct; auto with * ].",
            "VernacExtend",
            "343f98422fdcaa02d32d3be4667f515b324e20e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive larger_bound : positive -> positive -> Type := | larger_1 : forall b, larger_bound xH b | larger_xI : forall x b, larger_bound x b -> larger_bound (xI x) (xO b) | larger_xO : forall x b, larger_bound x b -> larger_bound (xO x) (xO b).",
            "VernacInductive",
            "553c2b905e898f779005107ec32a5f2379d4e712"
        ],
        [
            "Lemma larger_bound_xO p b: larger_bound p b -> larger_bound p b~0.",
            "VernacStartTheoremProof",
            "47f85f4fc5eb52a1a839c5d69b93ac7283047434"
        ],
        [
            "intro H; induction H; constructor; assumption.",
            "VernacExtend",
            "9d77d42faa22ecac15c28287531005bc9ce3df10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_mod_aux_correct p1 p2 m: forall n tp1 tp2 tn tm, m <> 0 -> larger_bound p1 p2 -> evaluates tp1 (value_of_pos p1) -> evaluates tp2 (value_of_pos p2) -> evaluates tn (value_of_N n) -> evaluates tm (value_of_N m) -> evaluates (mul_mod_auxF (: tp1, tn, tm, tp2 :)) ((N.pos p1 * n) mod m).",
            "VernacStartTheoremProof",
            "17c815538d0d2eb24f48fa1044f83765fb6c96db"
        ],
        [
            "revert p2.",
            "VernacExtend",
            "66adb17d4abed6cb0138ed36c28072c478af6a6f"
        ],
        [
            "induction p1 as [ p | p |]; intros p2 n tp1 tp2 tn tm Hpos Hb H1 H2 Hn Hm; inversion Hb; subst; reduce.",
            "VernacExtend",
            "dcc697ba2154e162427abb3f513ef984b418bcde"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "replace (N.pos p~1 * n) with (n + N.double (N.pos p * n)) by (now destruct n).",
            "VernacExtend",
            "bb434f6b66efb30a09455f039f2067e162b170e1"
        ],
        [
            "rewrite <- N.add_mod_idemp_r; trivial.",
            "VernacExtend",
            "9988701a3ac8fd8fa36345f33ae3f63b6520d30a"
        ],
        [
            "rewrite N.double_spec.",
            "VernacExtend",
            "dd67092999745ff2491ef25f621809d0d645153f"
        ],
        [
            "rewrite <- N.mul_mod_idemp_r; trivial.",
            "VernacExtend",
            "44229631dae49b8aedd8e1bc9232494b9322b957"
        ],
        [
            "rewrite <- N.double_spec.",
            "VernacExtend",
            "f8a4e7b2a29b3bf5f5385faa3d24fdc8e59d1f77"
        ],
        [
            "rewrite N.add_mod_idemp_r; trivial.",
            "VernacExtend",
            "4350ff2cb4f7fb352e20205aef054762ad950fab"
        ],
        [
            "apply mod_correct; auto with *.",
            "VernacExtend",
            "fe886fe1fbfcf70a27d8c992fa4a42a736987a99"
        ],
        [
            "apply add0_correct; auto with *.",
            "VernacExtend",
            "237d963a75878502dc42b84ba24f880609049e43"
        ],
        [
            "apply double_correct; auto with *.",
            "VernacExtend",
            "51a53b73f466a891e92ffae17fa4c8169b7fdb42"
        ],
        [
            "apply IHp with (p2 := b); auto with *.",
            "VernacExtend",
            "ddd4908ae68a40f10fca118dd31b3d5187e0e830"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "replace (N.pos p~0 * n) with (N.double (N.pos p * n)) by (now destruct n).",
            "VernacExtend",
            "e462306eeb599ff10019dc0cb75c7f19f3ad177c"
        ],
        [
            "rewrite N.double_spec.",
            "VernacExtend",
            "dd67092999745ff2491ef25f621809d0d645153f"
        ],
        [
            "rewrite <- N.mul_mod_idemp_r; trivial.",
            "VernacExtend",
            "44229631dae49b8aedd8e1bc9232494b9322b957"
        ],
        [
            "rewrite <- N.double_spec.",
            "VernacExtend",
            "f8a4e7b2a29b3bf5f5385faa3d24fdc8e59d1f77"
        ],
        [
            "apply mod_correct; auto with *.",
            "VernacExtend",
            "fe886fe1fbfcf70a27d8c992fa4a42a736987a99"
        ],
        [
            "apply double_correct; auto with *.",
            "VernacExtend",
            "51a53b73f466a891e92ffae17fa4c8169b7fdb42"
        ],
        [
            "apply IHp with (p2 := b); auto with *.",
            "VernacExtend",
            "ddd4908ae68a40f10fca118dd31b3d5187e0e830"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply mod_correct.",
            "VernacExtend",
            "0e7779c71e2c628a29bfd86732136f6196425f49"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct n; auto with eval.",
            "VernacExtend",
            "ff443b84381c88d6a829d826e80fcac304c3feea"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition N_larger_bound n b := match n with | 0 => larger_bound xH b | Npos p0 => larger_bound p0 b end.",
            "VernacDefinition",
            "28ac59203e7ec77205efbff70904a9931e40449c"
        ],
        [
            "Fixpoint lower_bound p0 := match p0 with | xH => xH | xO p0 => xO (lower_bound p0) | xI p0 => xO (lower_bound p0) end.",
            "VernacFixpoint",
            "3803e9ad759f8395b8d67a415d3bc5f88064dce6"
        ],
        [
            "Lemma lower_bound_bound p0 : larger_bound p0 (lower_bound p0).",
            "VernacStartTheoremProof",
            "0b8a86c61a9a23b0fab465cacc96da4f94bd0601"
        ],
        [
            "induction p0; now constructor.",
            "VernacExtend",
            "e7df78e049e9dfa1a61c1d87c90396ace7aee71c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lower_bound_pow2 k : (lower_bound (2^ k) = 2^k)%positive.",
            "VernacStartTheoremProof",
            "f7630c0fc28694192cfbe367df2973adeeb6925b"
        ],
        [
            "induction k using Pos.peano_ind.",
            "VernacExtend",
            "731bf4c64a420e6a7d6ffd4ad60ee3a2ad80eaec"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; trivial.",
            "VernacExtend",
            "700c92fe710eacabdba1c0df7cd3aac36ec19aa1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Pos.pow_succ_r.",
            "VernacExtend",
            "4d6d78b967aae6f60536dc5306193a077ad20c09"
        ],
        [
            "simpl; now f_equal.",
            "VernacExtend",
            "771ebb1ffeef4bd7afd3d52921cd096ac81e04cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lower_bound_div_bound (p0 b : positive) : larger_bound p0 b -> {k | (b = k * lower_bound p0)%positive}.",
            "VernacStartTheoremProof",
            "25952c177fb03803c2a644d602e3b74c6fcd98b7"
        ],
        [
            "revert b; induction p0; intros b Hb; inversion Hb; subst.",
            "VernacExtend",
            "db1b63bfb28ad31c0f74457f4d51d68b8de8c81a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (IHp0 b0 H0) as (k & Hk).",
            "VernacExtend",
            "31be89492ec0e3b0b2980e13a6e0ef18b7e8c023"
        ],
        [
            "exists k; simpl; lia.",
            "VernacExtend",
            "82adf726bc69db7ee209e8109c2fd48f1a0f39d7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (IHp0 b0 H0) as (k & Hk).",
            "VernacExtend",
            "31be89492ec0e3b0b2980e13a6e0ef18b7e8c023"
        ],
        [
            "exists k; simpl; lia.",
            "VernacExtend",
            "82adf726bc69db7ee209e8109c2fd48f1a0f39d7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists b; simpl; lia.",
            "VernacExtend",
            "ded52c7ae081c7e7f89f570db0875be77b7a8d60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lower_bound_le p0 p1 : (p0 <= p1 -> {k | lower_bound p1 = k * lower_bound p0})%positive.",
            "VernacStartTheoremProof",
            "86207ea661f8baa65ba8463a33700dfa722a4991"
        ],
        [
            "revert p1.",
            "VernacExtend",
            "71b14467193e60b4322308ce7d1aa5e56daf1690"
        ],
        [
            "induction p0; intros p1 Hle.",
            "VernacExtend",
            "d92aad59ac0916eb97da7c6b8704510159c9b1ed"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct p1 as [p1|p1|].",
            "VernacExtend",
            "a56737312382ed21df3095e1e665a8501f537171"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in Hle.",
            "VernacExtend",
            "0d853172fd7f9c60a4019a028845310aac91b741"
        ],
        [
            "assert(Hle' : (p0 <= p1)%positive) by lia.",
            "VernacExtend",
            "a4fd0fbd231a0df7796e9622340c00b7cddf2df6"
        ],
        [
            "apply IHp0 in Hle'.",
            "VernacExtend",
            "89340d188c5a876e12ada1103c4a2da9193d4c62"
        ],
        [
            "destruct Hle' as [k Hk].",
            "VernacExtend",
            "62a209f5dd65d5aaaf1baaa8c54f618b0281a7ad"
        ],
        [
            "exists k;simpl;lia.",
            "VernacExtend",
            "82adf726bc69db7ee209e8109c2fd48f1a0f39d7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in Hle.",
            "VernacExtend",
            "0d853172fd7f9c60a4019a028845310aac91b741"
        ],
        [
            "assert(Hle' : (p0 <= p1)%positive) by lia.",
            "VernacExtend",
            "a4fd0fbd231a0df7796e9622340c00b7cddf2df6"
        ],
        [
            "apply IHp0 in Hle'.",
            "VernacExtend",
            "89340d188c5a876e12ada1103c4a2da9193d4c62"
        ],
        [
            "destruct Hle' as [k Hk].",
            "VernacExtend",
            "62a209f5dd65d5aaaf1baaa8c54f618b0281a7ad"
        ],
        [
            "exists k;simpl;lia.",
            "VernacExtend",
            "82adf726bc69db7ee209e8109c2fd48f1a0f39d7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "contradict Hle; lia.",
            "VernacExtend",
            "c353608aa08504839ac367840c69787fa52cb797"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct p1 as [p1|p1|].",
            "VernacExtend",
            "a56737312382ed21df3095e1e665a8501f537171"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in Hle.",
            "VernacExtend",
            "0d853172fd7f9c60a4019a028845310aac91b741"
        ],
        [
            "assert(Hle' : (p0 <= p1)%positive) by lia.",
            "VernacExtend",
            "a4fd0fbd231a0df7796e9622340c00b7cddf2df6"
        ],
        [
            "apply IHp0 in Hle'.",
            "VernacExtend",
            "89340d188c5a876e12ada1103c4a2da9193d4c62"
        ],
        [
            "destruct Hle' as [k Hk].",
            "VernacExtend",
            "62a209f5dd65d5aaaf1baaa8c54f618b0281a7ad"
        ],
        [
            "exists k;simpl;lia.",
            "VernacExtend",
            "82adf726bc69db7ee209e8109c2fd48f1a0f39d7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in Hle.",
            "VernacExtend",
            "0d853172fd7f9c60a4019a028845310aac91b741"
        ],
        [
            "assert(Hle' : (p0 <= p1)%positive) by lia.",
            "VernacExtend",
            "a4fd0fbd231a0df7796e9622340c00b7cddf2df6"
        ],
        [
            "apply IHp0 in Hle'.",
            "VernacExtend",
            "89340d188c5a876e12ada1103c4a2da9193d4c62"
        ],
        [
            "destruct Hle' as [k Hk].",
            "VernacExtend",
            "62a209f5dd65d5aaaf1baaa8c54f618b0281a7ad"
        ],
        [
            "exists k;simpl;lia.",
            "VernacExtend",
            "82adf726bc69db7ee209e8109c2fd48f1a0f39d7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "contradict Hle; lia.",
            "VernacExtend",
            "c353608aa08504839ac367840c69787fa52cb797"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (lower_bound p1); simpl; lia.",
            "VernacExtend",
            "8a2e9cf0f267a9e3f51a637f05f166ea500adc7d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma larger_bound_spec p0 k: larger_bound p0 (k * lower_bound p0).",
            "VernacStartTheoremProof",
            "105d50671486cf5e741bbe47734b15b144bc120e"
        ],
        [
            "induction p0.",
            "VernacExtend",
            "6b2d76155d672a8cdb9448b1469013fcdbdd1270"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; rewrite Pos.mul_xO_r; now constructor.",
            "VernacExtend",
            "3879fb230ea73111b51ec3c0841718c608adfac3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; rewrite Pos.mul_xO_r; now constructor.",
            "VernacExtend",
            "3879fb230ea73111b51ec3c0841718c608adfac3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma N_larger_bound_le n n' b : n' <= n -> N_larger_bound n b -> N_larger_bound n' b.",
            "VernacStartTheoremProof",
            "d8eb8f1839ffcd35c9c38dabd80b60569aaaf6fb"
        ],
        [
            "intros Hle Hb.",
            "VernacExtend",
            "45e21b075f2146a9f19075088326290d09c42a77"
        ],
        [
            "destruct n' as [| n'].",
            "VernacExtend",
            "bbf1749e44c584891fc460790b89f6da86d07548"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; constructor.",
            "VernacExtend",
            "ac61261ad3f03698bb630fde3118b8936863f48a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct n as [| n]; [ now destruct Hle |].",
            "VernacExtend",
            "aba6b9c8c94f71b6e5c10b4b40e52e89d5443e75"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct (lower_bound_div_bound n b Hb) as (k & Hk).",
            "VernacExtend",
            "a850fd35a1136db76dcce073d6bb7c184e09fe09"
        ],
        [
            "apply lower_bound_le in Hle.",
            "VernacExtend",
            "38fef864760b6ed7470fead12c9c7794d2fb6dcc"
        ],
        [
            "destruct Hle as (k' & Hk').",
            "VernacExtend",
            "5809dfe37f56bf383b5cb64e6b65454d8abaf5ba"
        ],
        [
            "rewrite Hk' in Hk.",
            "VernacExtend",
            "6a647bf042f54b0b0d5eacf2ff3a8dd68266f571"
        ],
        [
            "rewrite Hk.",
            "VernacExtend",
            "c5a1e8c9638c5734e858ad671e545e87eb94e50e"
        ],
        [
            "replace (k * (k' * lower_bound n'))%positive with (k * k' * lower_bound n')%positive by lia.",
            "VernacExtend",
            "4efc354be07befdbbffbbc2ff51958c993ca23cc"
        ],
        [
            "apply larger_bound_spec.",
            "VernacExtend",
            "e1c31224624183e48a7d545bec9ef7a077dd8a51"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma N_larger_bound_mod n m b : m <> 0 -> N_larger_bound m b -> N_larger_bound (n mod m) b.",
            "VernacStartTheoremProof",
            "ef616bf4cc94ecceba55f1ad3cc761c833adeb44"
        ],
        [
            "intro H; now apply N_larger_bound_le, N.lt_le_incl, N.mod_lt.",
            "VernacExtend",
            "7ce9adf6b180dcf5e20b3c98ab20f2f65dad9a68"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve N_larger_bound_mod : eval.",
            "VernacHints",
            "ed7cb97d32c1e8973a5eedcf703ee6ba80bb4989"
        ],
        [
            "Lemma mul_mod_correct n n' m b: forall tn tn' tm tb, m <> 0 -> N_larger_bound n b -> evaluates tn (value_of_N n) -> evaluates tn' (value_of_N n') -> evaluates tm (value_of_N m) -> evaluates tb (value_of_pos b) -> evaluates (mul_modF (: tn, tn', tm, tb:)) ((n * n') mod m).",
            "VernacStartTheoremProof",
            "cd4db21504bd07ffa025c31243f2833bffe79014"
        ],
        [
            "intros; destruct n; reduce.",
            "VernacExtend",
            "4c6ec5929a9442bd0fadbff9d501723f2a228354"
        ],
        [
            "apply mul_mod_aux_correct with (p2 := b); auto with eval.",
            "VernacExtend",
            "f2dac6b234b8cc2a840ee95c4e1d0bef293dbc98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exp_mod_aux_correct y: forall x m tx ty tm b tb, m <> 0 -> N_larger_bound m b -> evaluates tx (value_of_N x) -> evaluates ty (value_of_pos y) -> evaluates tm (value_of_N m) -> evaluates tb (value_of_pos b) -> evaluates (exp_mod_auxF (: tx, ty, tm, tb :)) ( x ^ (Npos y) mod m).",
            "VernacStartTheoremProof",
            "d889ca89fa197127cc3d474c3a20020ae55628b2"
        ],
        [
            "induction y as [ y | y | ]; intros x m tx ty tm b tb Hpos Hlarger Hx Hy Hm Hb.",
            "VernacExtend",
            "4de7c28229205854d1fa7b38b891d6dd8bf93978"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (Npos y~1) with (N.succ (N.pos y~0)).",
            "VernacExtend",
            "cf7f4d6f892723716ef44c006baef518412b7367"
        ],
        [
            "rewrite N.pow_succ_r; [ | lia].",
            "VernacExtend",
            "3dd60979505cde4e3e65235468ebd6c5fd709d55"
        ],
        [
            "change (N.pos y~0) with (2 * (N.pos y)).",
            "VernacExtend",
            "89160d83526b1cb9256e72bd4d96b41d04765ee4"
        ],
        [
            "rewrite N.pow_mul_r, <- N.mul_mod_idemp_r; trivial.",
            "VernacExtend",
            "8ed0b708423c686124ba176b4556c15f94be16b5"
        ],
        [
            "rewrite <- N.mod_mod; trivial.",
            "VernacExtend",
            "18253b7dd3b272d248f36145771f7d03a8eb1e65"
        ],
        [
            "rewrite <- N.mul_mod_idemp_l; trivial.",
            "VernacExtend",
            "edf736211710162dfa83543a800b23a7cb99e7aa"
        ],
        [
            "rewrite N.mod_mod; trivial.",
            "VernacExtend",
            "0f99d296ba36aff5c2d10ad9fc50ee1b8296ae07"
        ],
        [
            "reduce.",
            "VernacExtend",
            "02c32f128d185d326606f259a6bf160d2fd55ca6"
        ],
        [
            "apply mul_mod_correct with b; auto with *.",
            "VernacExtend",
            "bd7a6b7d272eae06533582896341130545ccd18c"
        ],
        [
            "rewrite N.pow_2_r.",
            "VernacExtend",
            "ea6a93fd8104be3173514cbe1a6139e7e79e01ef"
        ],
        [
            "rewrite N.pow_mul_l, N.mul_mod; trivial.",
            "VernacExtend",
            "bc744d7174ebc4f1d7b318f28e9beaab40248285"
        ],
        [
            "apply mul_mod_correct with b; auto with *; apply IHy with b; auto with *.",
            "VernacExtend",
            "c0bfe7ee912fef7e5846ddb2a68c80e84816861e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (N.pos y~0) with (2 * (N.pos y)).",
            "VernacExtend",
            "89160d83526b1cb9256e72bd4d96b41d04765ee4"
        ],
        [
            "rewrite N.pow_mul_r, N.pow_2_r, N.pow_mul_l, N.mul_mod; trivial.",
            "VernacExtend",
            "8421e343cc8a4f70f6f8671e1f516c36b4303796"
        ],
        [
            "reduce.",
            "VernacExtend",
            "02c32f128d185d326606f259a6bf160d2fd55ca6"
        ],
        [
            "apply mul_mod_correct with b; auto with *; apply IHy with b; auto with *.",
            "VernacExtend",
            "c0bfe7ee912fef7e5846ddb2a68c80e84816861e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reduce.",
            "VernacExtend",
            "02c32f128d185d326606f259a6bf160d2fd55ca6"
        ],
        [
            "apply mod_correct; simpl; auto with *.",
            "VernacExtend",
            "73b896a6c7e9d1e40fc637746a8991b18d1d5551"
        ],
        [
            "destruct x; auto with *.",
            "VernacExtend",
            "bbb47b22e343a45923b77035160d291dbb9a1f8d"
        ],
        [
            "rewrite Pos.pow_1_r; auto with *.",
            "VernacExtend",
            "53e82e116da94a45d4b9f8413aec86abf1365b82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bound_correct_pos x tx: evaluates tx (value_of_pos x) -> evaluates (boundF (: tx :)) (value_of_pos (2^(Pos.size x))).",
            "VernacStartTheoremProof",
            "46d15e20f6831e08a3decb8bd399720bbe1eb3ce"
        ],
        [
            "revert tx.",
            "VernacExtend",
            "74e6a9595efc8a30a399fef009c268eb8010f82e"
        ],
        [
            "induction x; intros; reduce; simpl; rewrite Pos.pow_succ_r; reduce; apply IHx; auto with *.",
            "VernacExtend",
            "9adbaa5e55eb12bf98101cde59a9cf1647f5e4f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exp_mod_correct x y m tx ty tm: m <> 0 -> evaluates tx (value_of_N x) -> evaluates ty (value_of_N y) -> evaluates tm (value_of_N m) -> evaluates (exp_modF (: tx, ty, tm :)) ( x ^ y mod m).",
            "VernacStartTheoremProof",
            "e69cb3a01f10e9a24876e15eac30d988d11881f3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct y as [ | y].",
            "VernacExtend",
            "df6ca58bbdd17883a37c2fa037bd870b5a264cdc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reduce.",
            "VernacExtend",
            "02c32f128d185d326606f259a6bf160d2fd55ca6"
        ],
        [
            "apply mod_correct; [ reduce | auto with *].",
            "VernacExtend",
            "503b46eb4e08334c75434d558ca465d0a3349349"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reduce.",
            "VernacExtend",
            "02c32f128d185d326606f259a6bf160d2fd55ca6"
        ],
        [
            "destruct m as [|m].",
            "VernacExtend",
            "a7b2ce1b9f49e9991653238bd7f9e6c6d32d9eb3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply exp_mod_aux_correct with (b := xH); tauto.",
            "VernacExtend",
            "91c58186201baa9fbf9626594a0b486b861798ff"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply exp_mod_aux_correct with (b := (2^(Pos.size m))%positive); auto with *.",
            "VernacExtend",
            "1700c9848247444e14e4188e21a9fc0381c85818"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert (m <= 2^ Pos.size m)%positive by (apply Pos.lt_le_incl, Pos.size_gt).",
            "VernacExtend",
            "ef40666fdbd1f50a4f86e7d4c4629665b28ba7af"
        ],
        [
            "apply N_larger_bound_le with (n := N.pos (2 ^ Pos.size m)); trivial.",
            "VernacExtend",
            "9c276652d577fa88b25bc4b571318bc55465dadc"
        ],
        [
            "simpl; rewrite <- lower_bound_pow2 at 2.",
            "VernacExtend",
            "dc04d42aa390d4b4de89cbb26a12da54be31354a"
        ],
        [
            "apply lower_bound_bound.",
            "VernacExtend",
            "005b21abe9dbb51ae7397732f8e0fbfc34346595"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "reduce; apply bound_correct_pos; auto with *.",
            "VernacExtend",
            "30f97f97c7276f3e2303edacd09441b57f0cd831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "Expmod_is_wf",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "cbv; repeat split; try tauto; auto.",
                        "VernacExtend",
                        "05fd7875820a28d9637f59f57e4fc9b3077ef384"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expmod_is_ppo",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "cbv.",
                        "VernacExtend",
                        "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
                    ]
                },
                {
                    "command": [
                        "intros r H.",
                        "VernacExtend",
                        "d7ad88fe18659a9c0fbe8f12609d04bca3d72a11"
                    ]
                },
                {
                    "command": [
                        "decompose sum H; subst; ppo.",
                        "VernacExtend",
                        "0a3594739736d994e19f8b41e63668404a8e5a7b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qic_nonzero",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "cbv; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qic_bounded",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "cbv; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qic_additivity",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "cbv; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cons_app",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qi_is_valid",
            "line_nb": 205,
            "steps": [
                {
                    "command": [
                        "unfold qif.",
                        "VernacExtend",
                        "5bf1f3adc4aaf4a87871e9e39e1f2e2d9d17bfc2"
                    ]
                },
                {
                    "command": [
                        "destruct qif_proofs as (qif & Hs & Hm & Hc).",
                        "VernacExtend",
                        "9d33cf7a7204070b7c1be385ca9f5d428bec42c6"
                    ]
                },
                {
                    "command": [
                        "repeat split; trivial.",
                        "VernacExtend",
                        "060692b05c8d85062072ae8d30e5549bb92445ef"
                    ]
                },
                {
                    "command": [
                        "apply qic_bounded.",
                        "VernacExtend",
                        "298452adf2203aad8e542190ad3f7b6d7e6f1cd5"
                    ]
                },
                {
                    "command": [
                        "apply qic_nonzero.",
                        "VernacExtend",
                        "d31602144bb157994234e9259bf5c25d15eabc97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polytime",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply P_criterion with (rank:=rank) (cs:=cs) (qic:=qic); auto.",
                        "VernacExtend",
                        "3d347622e404b9df97eb5066400d53edbc179ee2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; [ apply Expmod_is_wf | trivial ].",
                        "VernacExtend",
                        "7c955f0073f5af9d673e6bff76932e87ee758705"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "cbv; omega.",
                        "VernacExtend",
                        "438e8ca39271be0e1d89e8942dbfa12dd63962b9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros f0; destruct f0; cbv; omega.",
                        "VernacExtend",
                        "295506339ad1f85f4b37a657137075f9e5a01af9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply expmod_is_ppo.",
                        "VernacExtend",
                        "23380e34d46ef07ca5047acf06e8e83a72fc6e51"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply qi_is_valid.",
                        "VernacExtend",
                        "665e1f63e0be61db2a8a6fe469d8f6eaa5911de0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_double_correct",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "induction p; intros; reduce; apply IHp; auto with *.",
                        "VernacExtend",
                        "31af4b140d5b91c5e7841f045d23f1363750bf7d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_double_mask_correct",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "induction m; reduce.",
                        "VernacExtend",
                        "7421f5b7e18c2bbef36b0ce8fcd4583ad7a4340e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "double_mask_correct",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "induction m; reduce.",
                        "VernacExtend",
                        "7421f5b7e18c2bbef36b0ce8fcd4583ad7a4340e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "double_pred_mask_correct",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "induction p; reduce.",
                        "VernacExtend",
                        "efabc79f4921c28b7ee85894497a0ba2f746c7cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_correct",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "induction q; intros p tp tq Hp Hq; destruct p; split; reduce; simpl; fold value_of_pos; case_eq (Pos.sub_mask p0 q0); case_eq (Pos.sub_mask_carry p0 q0); intros; (econstructor; [ reduce; apply IHq; auto with * | try rewrite H; try rewrite H0; tauto | try reduce; auto with *]).",
                        "VernacExtend",
                        "f603d0027b7e0064ba742714dc6b4fa689b81623"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_correct",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "induction p; intros tp tq q; destruct q; intros Hp Hq; repeat reduce; simpl in *; fold value_of_pos; eapply IHp; auto with *.",
                        "VernacExtend",
                        "16228b5749039d1a76a1c12ebd47ea5f2685e83a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_correct",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "intros q tp tq Htp Htq; reduce; eapply (compare_cont_correct p); auto with *.",
                        "VernacExtend",
                        "345912b15165b96ddff25b49dc13c175495a79cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_double_correct",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "destruct n; reduce.",
                        "VernacExtend",
                        "33670ef7a7d3a42159c06f9cf444b5b2cec795d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "double_correct",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "destruct n; reduce.",
                        "VernacExtend",
                        "33670ef7a7d3a42159c06f9cf444b5b2cec795d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_correct",
            "line_nb": 287,
            "steps": [
                {
                    "command": [
                        "intros Hn Hm; destruct n, m; reduce; simpl; case_eq (Pos.sub_mask p0 p1); intros; (econstructor; [ repeat constructor; eapply sub_mask_correct; auto with * | rewrite H; tauto | try reduce; auto with eval]).",
                        "VernacExtend",
                        "51fdbf6e7cc7f7e58385c56cfee1b3425fe8d9fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare0_correct",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "induction n; intro m; intros; destruct m; reduce.",
                        "VernacExtend",
                        "7bf6baef24333ca0e26b2d51766b5adabfca3640"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_aux_correct",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "intros tc c; destruct c; repeat split; reduce.",
                        "VernacExtend",
                        "81a35fc32771b014ac6ce2ebbefbfbcc51f3eedb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_correct",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "reduce.",
                        "VernacExtend",
                        "02c32f128d185d326606f259a6bf160d2fd55ca6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_correct",
            "line_nb": 307,
            "steps": [
                {
                    "command": [
                        "destruct c; reduce.",
                        "VernacExtend",
                        "be61215c9074680592830612d7b5c6a87d47fcfb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_succ_double_compat",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "destruct n as [| n].",
                        "VernacExtend",
                        "e9a6c38314370079277fe54649bef28abc1a6c0c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct m as [|[m|m|]]; trivial.",
                        "VernacExtend",
                        "76c911fb02bc8c96a3363c7296532ceeed7722a3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold N.modulo.",
                        "VernacExtend",
                        "75b68311c4d208c82690b57b6a2fa994db376e4d"
                    ]
                },
                {
                    "command": [
                        "case_eq (N.div_eucl (N.pos n) m); intros q r Hqr.",
                        "VernacExtend",
                        "ddb999a6d17e9366092374e4317142f49f6538f8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct m as [|m]; trivial; simpl.",
                        "VernacExtend",
                        "bed1d16c9391283e75add715e8a6ede98d7afb2e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now simpl in Hqr; inversion Hqr; subst.",
                        "VernacExtend",
                        "165039e7453ff982e0c74d12a6783581bb9b78a2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in Hqr; rewrite Hqr.",
                        "VernacExtend",
                        "9b0e771393190487f97439b97bff1e84e619817e"
                    ]
                },
                {
                    "command": [
                        "destruct(N.pos m <=? N.succ_double r); trivial.",
                        "VernacExtend",
                        "89464812887be4ccbfaa8f3ece9a4ffe77a07724"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_double_compat",
            "line_nb": 327,
            "steps": [
                {
                    "command": [
                        "destruct n as [| n].",
                        "VernacExtend",
                        "e9a6c38314370079277fe54649bef28abc1a6c0c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct m as [|[m|m|]]; trivial.",
                        "VernacExtend",
                        "76c911fb02bc8c96a3363c7296532ceeed7722a3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold N.modulo.",
                        "VernacExtend",
                        "75b68311c4d208c82690b57b6a2fa994db376e4d"
                    ]
                },
                {
                    "command": [
                        "case_eq (N.div_eucl (N.pos n) m); intros q r Hqr.",
                        "VernacExtend",
                        "ddb999a6d17e9366092374e4317142f49f6538f8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct m as [|m]; trivial; simpl.",
                        "VernacExtend",
                        "bed1d16c9391283e75add715e8a6ede98d7afb2e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now simpl in Hqr; inversion Hqr; subst.",
                        "VernacExtend",
                        "165039e7453ff982e0c74d12a6783581bb9b78a2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in Hqr; rewrite Hqr.",
                        "VernacExtend",
                        "9b0e771393190487f97439b97bff1e84e619817e"
                    ]
                },
                {
                    "command": [
                        "destruct(N.pos m <=? N.double r); trivial.",
                        "VernacExtend",
                        "ba7fcf13ba70a3950f074b22eb0ff0cd4e9d7265"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_0",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "destruct n; trivial.",
                        "VernacExtend",
                        "075df2df6f50c3b92752b2e357bd92e8caf75e9c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_correct",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "destruct n; reduce.",
                        "VernacExtend",
                        "33670ef7a7d3a42159c06f9cf444b5b2cec795d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_correct",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "induction p; intros; reduce; apply IHp; auto with *.",
                        "VernacExtend",
                        "31af4b140d5b91c5e7841f045d23f1363750bf7d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_correct",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "induction p; intros q tp tq Hp Hq; split; destruct q; reduce; try (apply IHp || apply succ_correct); auto with *.",
                        "VernacExtend",
                        "0a7fe3b3d89433010d29168703f352f3a440da46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add0_correct",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "destruct n; intros; [ reduce |]; destruct m; [ reduce | reduce; apply add_correct; auto with * ].",
                        "VernacExtend",
                        "343f98422fdcaa02d32d3be4667f515b324e20e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "larger_bound_xO",
            "line_nb": 404,
            "steps": [
                {
                    "command": [
                        "intro H; induction H; constructor; assumption.",
                        "VernacExtend",
                        "9d77d42faa22ecac15c28287531005bc9ce3df10"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_mod_aux_correct",
            "line_nb": 407,
            "steps": [
                {
                    "command": [
                        "revert p2.",
                        "VernacExtend",
                        "66adb17d4abed6cb0138ed36c28072c478af6a6f"
                    ]
                },
                {
                    "command": [
                        "induction p1 as [ p | p |]; intros p2 n tp1 tp2 tn tm Hpos Hb H1 H2 Hn Hm; inversion Hb; subst; reduce.",
                        "VernacExtend",
                        "dcc697ba2154e162427abb3f513ef984b418bcde"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "replace (N.pos p~1 * n) with (n + N.double (N.pos p * n)) by (now destruct n).",
                        "VernacExtend",
                        "bb434f6b66efb30a09455f039f2067e162b170e1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N.add_mod_idemp_r; trivial.",
                        "VernacExtend",
                        "9988701a3ac8fd8fa36345f33ae3f63b6520d30a"
                    ]
                },
                {
                    "command": [
                        "rewrite N.double_spec.",
                        "VernacExtend",
                        "dd67092999745ff2491ef25f621809d0d645153f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N.mul_mod_idemp_r; trivial.",
                        "VernacExtend",
                        "44229631dae49b8aedd8e1bc9232494b9322b957"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N.double_spec.",
                        "VernacExtend",
                        "f8a4e7b2a29b3bf5f5385faa3d24fdc8e59d1f77"
                    ]
                },
                {
                    "command": [
                        "rewrite N.add_mod_idemp_r; trivial.",
                        "VernacExtend",
                        "4350ff2cb4f7fb352e20205aef054762ad950fab"
                    ]
                },
                {
                    "command": [
                        "apply mod_correct; auto with *.",
                        "VernacExtend",
                        "fe886fe1fbfcf70a27d8c992fa4a42a736987a99"
                    ]
                },
                {
                    "command": [
                        "apply add0_correct; auto with *.",
                        "VernacExtend",
                        "237d963a75878502dc42b84ba24f880609049e43"
                    ]
                },
                {
                    "command": [
                        "apply double_correct; auto with *.",
                        "VernacExtend",
                        "51a53b73f466a891e92ffae17fa4c8169b7fdb42"
                    ]
                },
                {
                    "command": [
                        "apply IHp with (p2 := b); auto with *.",
                        "VernacExtend",
                        "ddd4908ae68a40f10fca118dd31b3d5187e0e830"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "replace (N.pos p~0 * n) with (N.double (N.pos p * n)) by (now destruct n).",
                        "VernacExtend",
                        "e462306eeb599ff10019dc0cb75c7f19f3ad177c"
                    ]
                },
                {
                    "command": [
                        "rewrite N.double_spec.",
                        "VernacExtend",
                        "dd67092999745ff2491ef25f621809d0d645153f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N.mul_mod_idemp_r; trivial.",
                        "VernacExtend",
                        "44229631dae49b8aedd8e1bc9232494b9322b957"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N.double_spec.",
                        "VernacExtend",
                        "f8a4e7b2a29b3bf5f5385faa3d24fdc8e59d1f77"
                    ]
                },
                {
                    "command": [
                        "apply mod_correct; auto with *.",
                        "VernacExtend",
                        "fe886fe1fbfcf70a27d8c992fa4a42a736987a99"
                    ]
                },
                {
                    "command": [
                        "apply double_correct; auto with *.",
                        "VernacExtend",
                        "51a53b73f466a891e92ffae17fa4c8169b7fdb42"
                    ]
                },
                {
                    "command": [
                        "apply IHp with (p2 := b); auto with *.",
                        "VernacExtend",
                        "ddd4908ae68a40f10fca118dd31b3d5187e0e830"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply mod_correct.",
                        "VernacExtend",
                        "0e7779c71e2c628a29bfd86732136f6196425f49"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct n; auto with eval.",
                        "VernacExtend",
                        "ff443b84381c88d6a829d826e80fcac304c3feea"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lower_bound_bound",
            "line_nb": 438,
            "steps": [
                {
                    "command": [
                        "induction p0; now constructor.",
                        "VernacExtend",
                        "e7df78e049e9dfa1a61c1d87c90396ace7aee71c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lower_bound_pow2",
            "line_nb": 441,
            "steps": [
                {
                    "command": [
                        "induction k using Pos.peano_ind.",
                        "VernacExtend",
                        "731bf4c64a420e6a7d6ffd4ad60ee3a2ad80eaec"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; trivial.",
                        "VernacExtend",
                        "700c92fe710eacabdba1c0df7cd3aac36ec19aa1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.pow_succ_r.",
                        "VernacExtend",
                        "4d6d78b967aae6f60536dc5306193a077ad20c09"
                    ]
                },
                {
                    "command": [
                        "simpl; now f_equal.",
                        "VernacExtend",
                        "771ebb1ffeef4bd7afd3d52921cd096ac81e04cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lower_bound_div_bound",
            "line_nb": 450,
            "steps": [
                {
                    "command": [
                        "revert b; induction p0; intros b Hb; inversion Hb; subst.",
                        "VernacExtend",
                        "db1b63bfb28ad31c0f74457f4d51d68b8de8c81a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (IHp0 b0 H0) as (k & Hk).",
                        "VernacExtend",
                        "31be89492ec0e3b0b2980e13a6e0ef18b7e8c023"
                    ]
                },
                {
                    "command": [
                        "exists k; simpl; lia.",
                        "VernacExtend",
                        "82adf726bc69db7ee209e8109c2fd48f1a0f39d7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (IHp0 b0 H0) as (k & Hk).",
                        "VernacExtend",
                        "31be89492ec0e3b0b2980e13a6e0ef18b7e8c023"
                    ]
                },
                {
                    "command": [
                        "exists k; simpl; lia.",
                        "VernacExtend",
                        "82adf726bc69db7ee209e8109c2fd48f1a0f39d7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists b; simpl; lia.",
                        "VernacExtend",
                        "ded52c7ae081c7e7f89f570db0875be77b7a8d60"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lower_bound_le",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "revert p1.",
                        "VernacExtend",
                        "71b14467193e60b4322308ce7d1aa5e56daf1690"
                    ]
                },
                {
                    "command": [
                        "induction p0; intros p1 Hle.",
                        "VernacExtend",
                        "d92aad59ac0916eb97da7c6b8704510159c9b1ed"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct p1 as [p1|p1|].",
                        "VernacExtend",
                        "a56737312382ed21df3095e1e665a8501f537171"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in Hle.",
                        "VernacExtend",
                        "0d853172fd7f9c60a4019a028845310aac91b741"
                    ]
                },
                {
                    "command": [
                        "assert(Hle' : (p0 <= p1)%positive) by lia.",
                        "VernacExtend",
                        "a4fd0fbd231a0df7796e9622340c00b7cddf2df6"
                    ]
                },
                {
                    "command": [
                        "apply IHp0 in Hle'.",
                        "VernacExtend",
                        "89340d188c5a876e12ada1103c4a2da9193d4c62"
                    ]
                },
                {
                    "command": [
                        "destruct Hle' as [k Hk].",
                        "VernacExtend",
                        "62a209f5dd65d5aaaf1baaa8c54f618b0281a7ad"
                    ]
                },
                {
                    "command": [
                        "exists k;simpl;lia.",
                        "VernacExtend",
                        "82adf726bc69db7ee209e8109c2fd48f1a0f39d7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in Hle.",
                        "VernacExtend",
                        "0d853172fd7f9c60a4019a028845310aac91b741"
                    ]
                },
                {
                    "command": [
                        "assert(Hle' : (p0 <= p1)%positive) by lia.",
                        "VernacExtend",
                        "a4fd0fbd231a0df7796e9622340c00b7cddf2df6"
                    ]
                },
                {
                    "command": [
                        "apply IHp0 in Hle'.",
                        "VernacExtend",
                        "89340d188c5a876e12ada1103c4a2da9193d4c62"
                    ]
                },
                {
                    "command": [
                        "destruct Hle' as [k Hk].",
                        "VernacExtend",
                        "62a209f5dd65d5aaaf1baaa8c54f618b0281a7ad"
                    ]
                },
                {
                    "command": [
                        "exists k;simpl;lia.",
                        "VernacExtend",
                        "82adf726bc69db7ee209e8109c2fd48f1a0f39d7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "contradict Hle; lia.",
                        "VernacExtend",
                        "c353608aa08504839ac367840c69787fa52cb797"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct p1 as [p1|p1|].",
                        "VernacExtend",
                        "a56737312382ed21df3095e1e665a8501f537171"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in Hle.",
                        "VernacExtend",
                        "0d853172fd7f9c60a4019a028845310aac91b741"
                    ]
                },
                {
                    "command": [
                        "assert(Hle' : (p0 <= p1)%positive) by lia.",
                        "VernacExtend",
                        "a4fd0fbd231a0df7796e9622340c00b7cddf2df6"
                    ]
                },
                {
                    "command": [
                        "apply IHp0 in Hle'.",
                        "VernacExtend",
                        "89340d188c5a876e12ada1103c4a2da9193d4c62"
                    ]
                },
                {
                    "command": [
                        "destruct Hle' as [k Hk].",
                        "VernacExtend",
                        "62a209f5dd65d5aaaf1baaa8c54f618b0281a7ad"
                    ]
                },
                {
                    "command": [
                        "exists k;simpl;lia.",
                        "VernacExtend",
                        "82adf726bc69db7ee209e8109c2fd48f1a0f39d7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in Hle.",
                        "VernacExtend",
                        "0d853172fd7f9c60a4019a028845310aac91b741"
                    ]
                },
                {
                    "command": [
                        "assert(Hle' : (p0 <= p1)%positive) by lia.",
                        "VernacExtend",
                        "a4fd0fbd231a0df7796e9622340c00b7cddf2df6"
                    ]
                },
                {
                    "command": [
                        "apply IHp0 in Hle'.",
                        "VernacExtend",
                        "89340d188c5a876e12ada1103c4a2da9193d4c62"
                    ]
                },
                {
                    "command": [
                        "destruct Hle' as [k Hk].",
                        "VernacExtend",
                        "62a209f5dd65d5aaaf1baaa8c54f618b0281a7ad"
                    ]
                },
                {
                    "command": [
                        "exists k;simpl;lia.",
                        "VernacExtend",
                        "82adf726bc69db7ee209e8109c2fd48f1a0f39d7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "contradict Hle; lia.",
                        "VernacExtend",
                        "c353608aa08504839ac367840c69787fa52cb797"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (lower_bound p1); simpl; lia.",
                        "VernacExtend",
                        "8a2e9cf0f267a9e3f51a637f05f166ea500adc7d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "larger_bound_spec",
            "line_nb": 499,
            "steps": [
                {
                    "command": [
                        "induction p0.",
                        "VernacExtend",
                        "6b2d76155d672a8cdb9448b1469013fcdbdd1270"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Pos.mul_xO_r; now constructor.",
                        "VernacExtend",
                        "3879fb230ea73111b51ec3c0841718c608adfac3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Pos.mul_xO_r; now constructor.",
                        "VernacExtend",
                        "3879fb230ea73111b51ec3c0841718c608adfac3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "N_larger_bound_le",
            "line_nb": 508,
            "steps": [
                {
                    "command": [
                        "intros Hle Hb.",
                        "VernacExtend",
                        "45e21b075f2146a9f19075088326290d09c42a77"
                    ]
                },
                {
                    "command": [
                        "destruct n' as [| n'].",
                        "VernacExtend",
                        "bbf1749e44c584891fc460790b89f6da86d07548"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; constructor.",
                        "VernacExtend",
                        "ac61261ad3f03698bb630fde3118b8936863f48a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct n as [| n]; [ now destruct Hle |].",
                        "VernacExtend",
                        "aba6b9c8c94f71b6e5c10b4b40e52e89d5443e75"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct (lower_bound_div_bound n b Hb) as (k & Hk).",
                        "VernacExtend",
                        "a850fd35a1136db76dcce073d6bb7c184e09fe09"
                    ]
                },
                {
                    "command": [
                        "apply lower_bound_le in Hle.",
                        "VernacExtend",
                        "38fef864760b6ed7470fead12c9c7794d2fb6dcc"
                    ]
                },
                {
                    "command": [
                        "destruct Hle as (k' & Hk').",
                        "VernacExtend",
                        "5809dfe37f56bf383b5cb64e6b65454d8abaf5ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Hk' in Hk.",
                        "VernacExtend",
                        "6a647bf042f54b0b0d5eacf2ff3a8dd68266f571"
                    ]
                },
                {
                    "command": [
                        "rewrite Hk.",
                        "VernacExtend",
                        "c5a1e8c9638c5734e858ad671e545e87eb94e50e"
                    ]
                },
                {
                    "command": [
                        "replace (k * (k' * lower_bound n'))%positive with (k * k' * lower_bound n')%positive by lia.",
                        "VernacExtend",
                        "4efc354be07befdbbffbbc2ff51958c993ca23cc"
                    ]
                },
                {
                    "command": [
                        "apply larger_bound_spec.",
                        "VernacExtend",
                        "e1c31224624183e48a7d545bec9ef7a077dd8a51"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "N_larger_bound_mod",
            "line_nb": 524,
            "steps": [
                {
                    "command": [
                        "intro H; now apply N_larger_bound_le, N.lt_le_incl, N.mod_lt.",
                        "VernacExtend",
                        "7ce9adf6b180dcf5e20b3c98ab20f2f65dad9a68"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_mod_correct",
            "line_nb": 528,
            "steps": [
                {
                    "command": [
                        "intros; destruct n; reduce.",
                        "VernacExtend",
                        "4c6ec5929a9442bd0fadbff9d501723f2a228354"
                    ]
                },
                {
                    "command": [
                        "apply mul_mod_aux_correct with (p2 := b); auto with eval.",
                        "VernacExtend",
                        "f2dac6b234b8cc2a840ee95c4e1d0bef293dbc98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exp_mod_aux_correct",
            "line_nb": 532,
            "steps": [
                {
                    "command": [
                        "induction y as [ y | y | ]; intros x m tx ty tm b tb Hpos Hlarger Hx Hy Hm Hb.",
                        "VernacExtend",
                        "4de7c28229205854d1fa7b38b891d6dd8bf93978"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (Npos y~1) with (N.succ (N.pos y~0)).",
                        "VernacExtend",
                        "cf7f4d6f892723716ef44c006baef518412b7367"
                    ]
                },
                {
                    "command": [
                        "rewrite N.pow_succ_r; [ | lia].",
                        "VernacExtend",
                        "3dd60979505cde4e3e65235468ebd6c5fd709d55"
                    ]
                },
                {
                    "command": [
                        "change (N.pos y~0) with (2 * (N.pos y)).",
                        "VernacExtend",
                        "89160d83526b1cb9256e72bd4d96b41d04765ee4"
                    ]
                },
                {
                    "command": [
                        "rewrite N.pow_mul_r, <- N.mul_mod_idemp_r; trivial.",
                        "VernacExtend",
                        "8ed0b708423c686124ba176b4556c15f94be16b5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N.mod_mod; trivial.",
                        "VernacExtend",
                        "18253b7dd3b272d248f36145771f7d03a8eb1e65"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N.mul_mod_idemp_l; trivial.",
                        "VernacExtend",
                        "edf736211710162dfa83543a800b23a7cb99e7aa"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mod_mod; trivial.",
                        "VernacExtend",
                        "0f99d296ba36aff5c2d10ad9fc50ee1b8296ae07"
                    ]
                },
                {
                    "command": [
                        "reduce.",
                        "VernacExtend",
                        "02c32f128d185d326606f259a6bf160d2fd55ca6"
                    ]
                },
                {
                    "command": [
                        "apply mul_mod_correct with b; auto with *.",
                        "VernacExtend",
                        "bd7a6b7d272eae06533582896341130545ccd18c"
                    ]
                },
                {
                    "command": [
                        "rewrite N.pow_2_r.",
                        "VernacExtend",
                        "ea6a93fd8104be3173514cbe1a6139e7e79e01ef"
                    ]
                },
                {
                    "command": [
                        "rewrite N.pow_mul_l, N.mul_mod; trivial.",
                        "VernacExtend",
                        "bc744d7174ebc4f1d7b318f28e9beaab40248285"
                    ]
                },
                {
                    "command": [
                        "apply mul_mod_correct with b; auto with *; apply IHy with b; auto with *.",
                        "VernacExtend",
                        "c0bfe7ee912fef7e5846ddb2a68c80e84816861e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (N.pos y~0) with (2 * (N.pos y)).",
                        "VernacExtend",
                        "89160d83526b1cb9256e72bd4d96b41d04765ee4"
                    ]
                },
                {
                    "command": [
                        "rewrite N.pow_mul_r, N.pow_2_r, N.pow_mul_l, N.mul_mod; trivial.",
                        "VernacExtend",
                        "8421e343cc8a4f70f6f8671e1f516c36b4303796"
                    ]
                },
                {
                    "command": [
                        "reduce.",
                        "VernacExtend",
                        "02c32f128d185d326606f259a6bf160d2fd55ca6"
                    ]
                },
                {
                    "command": [
                        "apply mul_mod_correct with b; auto with *; apply IHy with b; auto with *.",
                        "VernacExtend",
                        "c0bfe7ee912fef7e5846ddb2a68c80e84816861e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reduce.",
                        "VernacExtend",
                        "02c32f128d185d326606f259a6bf160d2fd55ca6"
                    ]
                },
                {
                    "command": [
                        "apply mod_correct; simpl; auto with *.",
                        "VernacExtend",
                        "73b896a6c7e9d1e40fc637746a8991b18d1d5551"
                    ]
                },
                {
                    "command": [
                        "destruct x; auto with *.",
                        "VernacExtend",
                        "bbb47b22e343a45923b77035160d291dbb9a1f8d"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.pow_1_r; auto with *.",
                        "VernacExtend",
                        "53e82e116da94a45d4b9f8413aec86abf1365b82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bound_correct_pos",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "revert tx.",
                        "VernacExtend",
                        "74e6a9595efc8a30a399fef009c268eb8010f82e"
                    ]
                },
                {
                    "command": [
                        "induction x; intros; reduce; simpl; rewrite Pos.pow_succ_r; reduce; apply IHx; auto with *.",
                        "VernacExtend",
                        "9adbaa5e55eb12bf98101cde59a9cf1647f5e4f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exp_mod_correct",
            "line_nb": 562,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct y as [ | y].",
                        "VernacExtend",
                        "df6ca58bbdd17883a37c2fa037bd870b5a264cdc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reduce.",
                        "VernacExtend",
                        "02c32f128d185d326606f259a6bf160d2fd55ca6"
                    ]
                },
                {
                    "command": [
                        "apply mod_correct; [ reduce | auto with *].",
                        "VernacExtend",
                        "503b46eb4e08334c75434d558ca465d0a3349349"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reduce.",
                        "VernacExtend",
                        "02c32f128d185d326606f259a6bf160d2fd55ca6"
                    ]
                },
                {
                    "command": [
                        "destruct m as [|m].",
                        "VernacExtend",
                        "a7b2ce1b9f49e9991653238bd7f9e6c6d32d9eb3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply exp_mod_aux_correct with (b := xH); tauto.",
                        "VernacExtend",
                        "91c58186201baa9fbf9626594a0b486b861798ff"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply exp_mod_aux_correct with (b := (2^(Pos.size m))%positive); auto with *.",
                        "VernacExtend",
                        "1700c9848247444e14e4188e21a9fc0381c85818"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "assert (m <= 2^ Pos.size m)%positive by (apply Pos.lt_le_incl, Pos.size_gt).",
                        "VernacExtend",
                        "ef40666fdbd1f50a4f86e7d4c4629665b28ba7af"
                    ]
                },
                {
                    "command": [
                        "apply N_larger_bound_le with (n := N.pos (2 ^ Pos.size m)); trivial.",
                        "VernacExtend",
                        "9c276652d577fa88b25bc4b571318bc55465dadc"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- lower_bound_pow2 at 2.",
                        "VernacExtend",
                        "dc04d42aa390d4b4de89cbb26a12da54be31354a"
                    ]
                },
                {
                    "command": [
                        "apply lower_bound_bound.",
                        "VernacExtend",
                        "005b21abe9dbb51ae7397732f8e0fbfc34346595"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "reduce; apply bound_correct_pos; auto with *.",
                        "VernacExtend",
                        "30f97f97c7276f3e2303edacd09441b57f0cd831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}