{
    "filename": "Alternate.v",
    "coq_project": "shuffle",
    "vernac_cmds": [
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Require Import Words.",
            "VernacRequire",
            "2af28d54c83d8fc6ccdd83d2efbe89ec4d6eff34"
        ],
        [
            "Inductive alt : bool -> word -> Prop := | alt_empty : forall b : bool, alt b empty | alt_bit : forall (b : bool) (w : word), alt (negb b) w -> alt b (bit b w).",
            "VernacInductive",
            "e1b389ea431b67960184661c67197b2658ab0a12"
        ],
        [
            "Hint Resolve alt_empty alt_bit.",
            "VernacHints",
            "29105836183fd65893cd037c401a559988747981"
        ],
        [
            "Lemma alt_neg_intro : forall (b b' : bool) (w : word), alt b (bit b' w) -> alt (negb b) w.",
            "VernacStartTheoremProof",
            "066e1d3d93e67addd25bb6d57bf37552f5af54ce"
        ],
        [
            "intros b b' w al.",
            "VernacExtend",
            "a295d1c23e8c72ebfbf57dc935cb53c3174b610b"
        ],
        [
            "inversion al; trivial.",
            "VernacExtend",
            "758a1ec6b3be3ad2d8515abb1530aabec5e739b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alt_neg_elim : forall (b b' : bool) (w : word), alt (negb b) (bit b' w) -> alt b w.",
            "VernacStartTheoremProof",
            "02533b71eea32e2966d459842ec5073066280c0d"
        ],
        [
            "intros; rewrite (negb_intro b); apply alt_neg_intro with b'; trivial.",
            "VernacExtend",
            "23fa68073ea8c2907ff38deb727a88f3ad74bee5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alt_eq : forall (b b' : bool) (w : word), alt b (bit b' w) -> b = b'.",
            "VernacStartTheoremProof",
            "ce6f687f1913b0cc7c562bfb32789e6418931486"
        ],
        [
            "intros b b' w al.",
            "VernacExtend",
            "a295d1c23e8c72ebfbf57dc935cb53c3174b610b"
        ],
        [
            "inversion al; trivial.",
            "VernacExtend",
            "758a1ec6b3be3ad2d8515abb1530aabec5e739b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alt_back : forall (b b' : bool) (w : word), alt b (bit b' w) -> b = b' /\\ alt (negb b) w.",
            "VernacStartTheoremProof",
            "0bcca5b2554f08a399167ab00c75c9510a59b7eb"
        ],
        [
            "intros; split.",
            "VernacExtend",
            "786909835bea92a2bb1ac0d0634a6eb379d5f275"
        ],
        [
            "apply alt_eq with w; trivial.",
            "VernacExtend",
            "6f92f44c40113b83a51fe279ff50a402507610c4"
        ],
        [
            "apply alt_neg_intro with b'; trivial.",
            "VernacExtend",
            "a4c61ea79e9be45fc7093221d330d2490a5bb055"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive alternate (w : word) : Prop := alter : forall b : bool, alt b w -> alternate w.",
            "VernacInductive",
            "654c541406e9580380bc71d1f87c6b0753fd9bbc"
        ],
        [
            "Lemma alt_conc_l : forall u v w : word, conc u v w -> forall b : bool, alt b w -> alt b u.",
            "VernacStartTheoremProof",
            "932a690d826a4a68cf0b65b18d1c57de100785e4"
        ],
        [
            "simple induction 1; auto; intros.",
            "VernacExtend",
            "06e75e4b942932fec734c7a012eeb50d0c3e03fe"
        ],
        [
            "elim alt_back with b0 b w0.",
            "VernacExtend",
            "cc7f1fe72ad591593ee94237dacde59df5eaf326"
        ],
        [
            "intros eq A.",
            "VernacExtend",
            "d1447e233e058c1d1e6de9455849c0ed244646b4"
        ],
        [
            "elim eq; auto.",
            "VernacExtend",
            "8ff0a4454e7962dee3785a4cb2e7726e25bbc46a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alt_conc_r : forall u v w : word, conc u v w -> forall b : bool, alt b w -> odd u /\\ alt (negb b) v \\/ even u /\\ alt b v.",
            "VernacStartTheoremProof",
            "c7117ac4940812d88cbb559f249d9fa9a7464bf2"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "right; split; intros; auto.",
            "VernacExtend",
            "b84abef8888e9523148fae3f07255185ce7904af"
        ],
        [
            "elim H1 with (negb b0).",
            "VernacExtend",
            "fdcfd3265aef928f638ff09bd21a9be6b68be4e1"
        ],
        [
            "rewrite (negb_elim b0); intro.",
            "VernacExtend",
            "71207d51ee2da33cf73a335028e482f268f25eb4"
        ],
        [
            "right; split; elim H3; auto.",
            "VernacExtend",
            "c3286942e5448eec9de54f64de774773eb0e52ef"
        ],
        [
            "intro; left; split; elim H3; auto.",
            "VernacExtend",
            "e9340b7e001d3599cab30ecbb07e80feaefd192b"
        ],
        [
            "apply alt_neg_intro with b; trivial.",
            "VernacExtend",
            "f4e7db1c2b86874685f31c10e117ba50e99e7881"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alt_conc : forall u v w : word, conc u v w -> alternate w -> alternate u /\\ alternate v.",
            "VernacStartTheoremProof",
            "030c1f9d1bd60930ef5b3c7208ac4c34c09794f9"
        ],
        [
            "simple induction 2; intros b ab; split.",
            "VernacExtend",
            "d290781d166ab4427b0d09920cec94887771566c"
        ],
        [
            "apply alter with b; apply alt_conc_l with v w; trivial.",
            "VernacExtend",
            "612a4b97be9a74a1010e56059fef4946fed4059f"
        ],
        [
            "elim alt_conc_r with u v w b; intros; trivial.",
            "VernacExtend",
            "f0b2e26e35c540ae548267a33f9cf7c8068a5715"
        ],
        [
            "elim H1; intros; apply alter with (negb b); trivial.",
            "VernacExtend",
            "31e54dee2bc4c978b1eed51508afaf03f735f30f"
        ],
        [
            "elim H1; intros; apply alter with b; trivial.",
            "VernacExtend",
            "0b6eb9b0e3a5ffff8f29741f89b17a857dec6d8c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "alt_neg_intro",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros b b' w al.",
                        "VernacExtend",
                        "a295d1c23e8c72ebfbf57dc935cb53c3174b610b"
                    ]
                },
                {
                    "command": [
                        "inversion al; trivial.",
                        "VernacExtend",
                        "758a1ec6b3be3ad2d8515abb1530aabec5e739b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alt_neg_elim",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros; rewrite (negb_intro b); apply alt_neg_intro with b'; trivial.",
                        "VernacExtend",
                        "23fa68073ea8c2907ff38deb727a88f3ad74bee5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alt_eq",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros b b' w al.",
                        "VernacExtend",
                        "a295d1c23e8c72ebfbf57dc935cb53c3174b610b"
                    ]
                },
                {
                    "command": [
                        "inversion al; trivial.",
                        "VernacExtend",
                        "758a1ec6b3be3ad2d8515abb1530aabec5e739b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alt_back",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros; split.",
                        "VernacExtend",
                        "786909835bea92a2bb1ac0d0634a6eb379d5f275"
                    ]
                },
                {
                    "command": [
                        "apply alt_eq with w; trivial.",
                        "VernacExtend",
                        "6f92f44c40113b83a51fe279ff50a402507610c4"
                    ]
                },
                {
                    "command": [
                        "apply alt_neg_intro with b'; trivial.",
                        "VernacExtend",
                        "a4c61ea79e9be45fc7093221d330d2490a5bb055"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alt_conc_l",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "simple induction 1; auto; intros.",
                        "VernacExtend",
                        "06e75e4b942932fec734c7a012eeb50d0c3e03fe"
                    ]
                },
                {
                    "command": [
                        "elim alt_back with b0 b w0.",
                        "VernacExtend",
                        "cc7f1fe72ad591593ee94237dacde59df5eaf326"
                    ]
                },
                {
                    "command": [
                        "intros eq A.",
                        "VernacExtend",
                        "d1447e233e058c1d1e6de9455849c0ed244646b4"
                    ]
                },
                {
                    "command": [
                        "elim eq; auto.",
                        "VernacExtend",
                        "8ff0a4454e7962dee3785a4cb2e7726e25bbc46a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alt_conc_r",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "right; split; intros; auto.",
                        "VernacExtend",
                        "b84abef8888e9523148fae3f07255185ce7904af"
                    ]
                },
                {
                    "command": [
                        "elim H1 with (negb b0).",
                        "VernacExtend",
                        "fdcfd3265aef928f638ff09bd21a9be6b68be4e1"
                    ]
                },
                {
                    "command": [
                        "rewrite (negb_elim b0); intro.",
                        "VernacExtend",
                        "71207d51ee2da33cf73a335028e482f268f25eb4"
                    ]
                },
                {
                    "command": [
                        "right; split; elim H3; auto.",
                        "VernacExtend",
                        "c3286942e5448eec9de54f64de774773eb0e52ef"
                    ]
                },
                {
                    "command": [
                        "intro; left; split; elim H3; auto.",
                        "VernacExtend",
                        "e9340b7e001d3599cab30ecbb07e80feaefd192b"
                    ]
                },
                {
                    "command": [
                        "apply alt_neg_intro with b; trivial.",
                        "VernacExtend",
                        "f4e7db1c2b86874685f31c10e117ba50e99e7881"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alt_conc",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "simple induction 2; intros b ab; split.",
                        "VernacExtend",
                        "d290781d166ab4427b0d09920cec94887771566c"
                    ]
                },
                {
                    "command": [
                        "apply alter with b; apply alt_conc_l with v w; trivial.",
                        "VernacExtend",
                        "612a4b97be9a74a1010e56059fef4946fed4059f"
                    ]
                },
                {
                    "command": [
                        "elim alt_conc_r with u v w b; intros; trivial.",
                        "VernacExtend",
                        "f0b2e26e35c540ae548267a33f9cf7c8068a5715"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros; apply alter with (negb b); trivial.",
                        "VernacExtend",
                        "31e54dee2bc4c978b1eed51508afaf03f735f30f"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros; apply alter with b; trivial.",
                        "VernacExtend",
                        "0b6eb9b0e3a5ffff8f29741f89b17a857dec6d8c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}