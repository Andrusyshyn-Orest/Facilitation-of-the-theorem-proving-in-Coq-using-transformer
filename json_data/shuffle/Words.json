{
    "filename": "Words.v",
    "coq_project": "shuffle",
    "vernac_cmds": [
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Inductive word : Set := | empty : word | bit : bool -> word -> word.",
            "VernacInductive",
            "b0fa02418450b4789dc55ea6b944178abe646aed"
        ],
        [
            "Inductive conc : word -> word -> word -> Prop := | conc_empty : forall v : word, conc empty v v | conc_bit : forall (u v w : word) (b : bool), conc u v w -> conc (bit b u) v (bit b w).",
            "VernacInductive",
            "6534aa45043bf79cd538a2f1ea626594a07d1f78"
        ],
        [
            "Fixpoint append (u : word) : word -> word := fun v : word => match u with | empty => v | bit b w => bit b (append w v) end.",
            "VernacFixpoint",
            "8a776bbee7a5f0d1634147fe9215a50b8264a707"
        ],
        [
            "Lemma conc_append : forall u v w : word, conc u v w -> w = append u v.",
            "VernacStartTheoremProof",
            "6c10aaeaa31884454105bea5d24acf9ebf2c8e24"
        ],
        [
            "simple induction 1; simpl in |- *; trivial.",
            "VernacExtend",
            "2eb8f1729fcb8d64b8667bc8ce523835ca840442"
        ],
        [
            "simple induction 2; trivial.",
            "VernacExtend",
            "84e43068397e0df687dbd3ae46a22b0570057b05"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma assoc_append : forall u v w : word, append u (append v w) = append (append u v) w.",
            "VernacStartTheoremProof",
            "d778b1533275dbfe9ab50ec73d44c86423c72353"
        ],
        [
            "simple induction u; simpl in |- *; intros; auto.",
            "VernacExtend",
            "890fd6ffab79abf5dce34b1406dc833d6fc19788"
        ],
        [
            "rewrite H; trivial.",
            "VernacExtend",
            "be0ba1f6432776bd85200205d59a572473bb951c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition single (b : bool) := bit b empty.",
            "VernacDefinition",
            "eb8df7109e5d1b37046e489626b789e76d35b386"
        ],
        [
            "Inductive odd : word -> Prop := even_odd : forall w : word, even w -> forall b : bool, odd (bit b w) with even : word -> Prop := | even_empty : even empty | odd_even : forall w : word, odd w -> forall b : bool, even (bit b w).",
            "VernacInductive",
            "e8e639359347e66058b543998c108ad8c012c264"
        ],
        [
            "Hint Resolve odd_even even_empty even_odd.",
            "VernacHints",
            "aaffcd49bcffd6dd3b915799a6701c3ddb40b4ed"
        ],
        [
            "Lemma not_odd_empty : ~ odd empty.",
            "VernacStartTheoremProof",
            "3ee14a64fa28d2c20eb9c2332f9705eb85ac49d2"
        ],
        [
            "unfold not in |- *; intro od.",
            "VernacExtend",
            "1ad47ef63f59a40a2651047c2f06d844201d21a0"
        ],
        [
            "inversion od.",
            "VernacExtend",
            "ced6b97dce5067f50173485daa6f18f357943f60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve not_odd_empty.",
            "VernacHints",
            "578118d4dde86c8cd0a3c1110b37e234418b7683"
        ],
        [
            "Lemma inv_odd : forall (w : word) (b : bool), odd (bit b w) -> even w.",
            "VernacStartTheoremProof",
            "fa74fe4b6d1ebd5040352b0ac7a04613f63e11c3"
        ],
        [
            "intros w b od.",
            "VernacExtend",
            "4aa915da9e110be435441f54a225ac81836c2c80"
        ],
        [
            "inversion od; trivial.",
            "VernacExtend",
            "8e7d9aed51828ec27a67b24782e73ed6c981e005"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inv_even : forall (w : word) (b : bool), even (bit b w) -> odd w.",
            "VernacStartTheoremProof",
            "94eb16db1013844b8fa8b3e48ea318d5c1c34784"
        ],
        [
            "intros w b ev.",
            "VernacExtend",
            "2284b0307ea8f6e0e798903f7dc49f070e2a6486"
        ],
        [
            "inversion ev; trivial.",
            "VernacExtend",
            "a6c8e0dad5db8e437e28e4c54076d92daa6fa982"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_or_even : forall w : word, odd w \\/ even w.",
            "VernacStartTheoremProof",
            "5b2661510b26d2d34f2727bc1bac01db3cc688f8"
        ],
        [
            "simple induction w; auto.",
            "VernacExtend",
            "0164eda346cbbc6abe9c8ec9ab18348f3f0611f9"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_odd_and_even : forall w : word, odd w -> even w -> False.",
            "VernacStartTheoremProof",
            "8c899a28566873a2931bf61bb4fbea9ecaf0dd90"
        ],
        [
            "simple induction w; intros.",
            "VernacExtend",
            "c5bf66c7b0a54e98436c437e0899c8b76a3bbca8"
        ],
        [
            "elim not_odd_empty; trivial.",
            "VernacExtend",
            "f7d13d744661ff685e09a92eac1eb181436190a0"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply inv_even with b; trivial.",
            "VernacExtend",
            "dbf167f089e5b5a0315c9f466c254e9e85335f3c"
        ],
        [
            "apply inv_odd with b; trivial.",
            "VernacExtend",
            "44c3bd9e937891fd9c2e051102d7c1229899644c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_even_conc : forall u v w : word, conc u v w -> odd w /\\ (odd u /\\ even v \\/ even u /\\ odd v) \\/ even w /\\ (odd u /\\ odd v \\/ even u /\\ even v).",
            "VernacStartTheoremProof",
            "c3eb2801bbdbe19a2b9d3d38738d781132386a86"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "elim (odd_or_even v0); auto.",
            "VernacExtend",
            "2bca3c5706089231cf015c78570204e77c3c0289"
        ],
        [
            "elim H1; [ right | left ]; intuition.",
            "VernacExtend",
            "ce869f0efe3641416b5ad2acd92258b1e5b775ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_conc : forall u v w : word, conc u v w -> even w -> odd u /\\ odd v \\/ even u /\\ even v.",
            "VernacStartTheoremProof",
            "f5a60ee82f30ef3c6c421ed18114f2abcf72e265"
        ],
        [
            "intros u v w c e; elim odd_even_conc with u v w; intros.",
            "VernacExtend",
            "a71e2cfaf30025199f6a1e658c5dbaef84b12b4e"
        ],
        [
            "elim H; intro o; elim not_odd_and_even with w; auto.",
            "VernacExtend",
            "2618e665af8098b119a53ace0d08fff08938478c"
        ],
        [
            "elim H; intros; trivial.",
            "VernacExtend",
            "c1925d6aeb0c39671db889178a8eef18e236da11"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "conc_append",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "simple induction 1; simpl in |- *; trivial.",
                        "VernacExtend",
                        "2eb8f1729fcb8d64b8667bc8ce523835ca840442"
                    ]
                },
                {
                    "command": [
                        "simple induction 2; trivial.",
                        "VernacExtend",
                        "84e43068397e0df687dbd3ae46a22b0570057b05"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "assoc_append",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "simple induction u; simpl in |- *; intros; auto.",
                        "VernacExtend",
                        "890fd6ffab79abf5dce34b1406dc833d6fc19788"
                    ]
                },
                {
                    "command": [
                        "rewrite H; trivial.",
                        "VernacExtend",
                        "be0ba1f6432776bd85200205d59a572473bb951c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_odd_empty",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; intro od.",
                        "VernacExtend",
                        "1ad47ef63f59a40a2651047c2f06d844201d21a0"
                    ]
                },
                {
                    "command": [
                        "inversion od.",
                        "VernacExtend",
                        "ced6b97dce5067f50173485daa6f18f357943f60"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inv_odd",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros w b od.",
                        "VernacExtend",
                        "4aa915da9e110be435441f54a225ac81836c2c80"
                    ]
                },
                {
                    "command": [
                        "inversion od; trivial.",
                        "VernacExtend",
                        "8e7d9aed51828ec27a67b24782e73ed6c981e005"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inv_even",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros w b ev.",
                        "VernacExtend",
                        "2284b0307ea8f6e0e798903f7dc49f070e2a6486"
                    ]
                },
                {
                    "command": [
                        "inversion ev; trivial.",
                        "VernacExtend",
                        "a6c8e0dad5db8e437e28e4c54076d92daa6fa982"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_or_even",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "simple induction w; auto.",
                        "VernacExtend",
                        "0164eda346cbbc6abe9c8ec9ab18348f3f0611f9"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "right; auto.",
                        "VernacExtend",
                        "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_odd_and_even",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "simple induction w; intros.",
                        "VernacExtend",
                        "c5bf66c7b0a54e98436c437e0899c8b76a3bbca8"
                    ]
                },
                {
                    "command": [
                        "elim not_odd_empty; trivial.",
                        "VernacExtend",
                        "f7d13d744661ff685e09a92eac1eb181436190a0"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply inv_even with b; trivial.",
                        "VernacExtend",
                        "dbf167f089e5b5a0315c9f466c254e9e85335f3c"
                    ]
                },
                {
                    "command": [
                        "apply inv_odd with b; trivial.",
                        "VernacExtend",
                        "44c3bd9e937891fd9c2e051102d7c1229899644c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_even_conc",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "elim (odd_or_even v0); auto.",
                        "VernacExtend",
                        "2bca3c5706089231cf015c78570204e77c3c0289"
                    ]
                },
                {
                    "command": [
                        "elim H1; [ right | left ]; intuition.",
                        "VernacExtend",
                        "ce869f0efe3641416b5ad2acd92258b1e5b775ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_conc",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros u v w c e; elim odd_even_conc with u v w; intros.",
                        "VernacExtend",
                        "a71e2cfaf30025199f6a1e658c5dbaef84b12b4e"
                    ]
                },
                {
                    "command": [
                        "elim H; intro o; elim not_odd_and_even with w; auto.",
                        "VernacExtend",
                        "2618e665af8098b119a53ace0d08fff08938478c"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; trivial.",
                        "VernacExtend",
                        "c1925d6aeb0c39671db889178a8eef18e236da11"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}