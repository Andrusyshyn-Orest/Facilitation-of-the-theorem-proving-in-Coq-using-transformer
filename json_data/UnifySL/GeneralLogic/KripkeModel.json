{
    "filename": "GeneralLogic/KripkeModel.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Sets.Ensembles.",
            "VernacRequire",
            "f3932269b2bb547fb3f8384be53442617199f07a"
        ],
        [
            "Require Import Coq.Logic.Classical_Prop.",
            "VernacRequire",
            "9ccd680c17c6039100012bae5c1bef8ed35d228a"
        ],
        [
            "Require Import Coq.Logic.ChoiceFacts.",
            "VernacRequire",
            "7acc02d1a11239df3d197b56b4c897d5c0f23023"
        ],
        [
            "Require Import Coq.Logic.ClassicalChoice.",
            "VernacRequire",
            "f49f29896003b0a02ab089b756c1e4f42dc559d4"
        ],
        [
            "Require Export Coq.Classes.RelationClasses.",
            "VernacRequire",
            "30afc99c2d28a0c74215b2bae3a14def0b5834d0"
        ],
        [
            "Require Import Coq.Relations.Relations.",
            "VernacRequire",
            "711709d1a8dabb57391deb948e0db0b064ccece7"
        ],
        [
            "Require Export Coq.Classes.Morphisms.",
            "VernacRequire",
            "eea0e98f162137e44f4b3253fec7eb627495eed6"
        ],
        [
            "Require Export Logic.lib.Relation_ext.",
            "VernacRequire",
            "d2d1b0cceb378b5f0ab9f05013c25a15c308e0a5"
        ],
        [
            "Require Export Logic.lib.RelationPairs_ext.",
            "VernacRequire",
            "abac994d9da5ce7790cd0b92c3056c3a69aea7a8"
        ],
        [
            "Module KI.",
            "VernacDefineModule",
            "7ac4cf105db73e297fa044e3dc92052a68724adc"
        ],
        [
            "Class Relation (worlds: Type): Type := Krelation: worlds -> Ensemble worlds .",
            "VernacInductive",
            "f5922da36dca43717154af8ea87aa4fa2826fe1e"
        ],
        [
            "End KI.",
            "VernacEndSegment",
            "9babaec7685c3cdda040fdd20963759a7d215a30"
        ],
        [
            "Export KI.",
            "VernacImport",
            "ebf28a2fd57069415c76ee95b845fa1148339789"
        ],
        [
            "Module KripkeModelNotation_Intuitionistic.",
            "VernacDefineModule",
            "742ef8be40c5a09163af39d3a957f64a20fd3853"
        ],
        [
            "Infix \"<=\" := Krelation: kripke_model.",
            "VernacInfix",
            "5922232c933a5eecb617c44a8275ced81067bcdf"
        ],
        [
            "End KripkeModelNotation_Intuitionistic.",
            "VernacEndSegment",
            "e8d9a064edd1b8fdbd68228450bebd65a6ff6da9"
        ],
        [
            "Import KripkeModelNotation_Intuitionistic.",
            "VernacImport",
            "d7b7fe443374144a34554b0fe36caedd27cfce5b"
        ],
        [
            "Local Open Scope kripke_model.",
            "VernacOpenCloseScope",
            "e49ee31afd7da8031602e71d800a363615169ff7"
        ],
        [
            "Definition upwards_closed_Kdenote {worlds: Type} {R: Relation worlds} (d: Ensemble worlds): Prop := forall n m, n <= m -> d n -> d m.",
            "VernacDefinition",
            "cbf51999c71dc3f2c99b7c87d480709444ee2cbf"
        ],
        [
            "Definition Krelation_stable_Kdenote {worlds: Type} {R: Relation worlds} (d: Ensemble worlds): Prop := forall w1 w2, w1 <= w2 -> (d w1 <-> d w2).",
            "VernacDefinition",
            "8fa6bd840d1a820fd7a2e30ba8a8c74fecd37338"
        ],
        [
            "Definition MonoEnsemble (A: Type) {R: Relation A}: Type := @sig (_ -> Prop) (@upwards_closed_Kdenote A R).",
            "VernacDefinition",
            "5173809db9fb20b5013101f6f8abbcf4af3c9a9b"
        ],
        [
            "Class IdentityKripkeIntuitionisticModel (worlds: Type) {R: Relation worlds} : Prop := { Korder_identity: forall m n: worlds, m <= n -> m = n }.",
            "VernacInductive",
            "825cd1f25348bd745e4924aadcf686bc1b69c01d"
        ],
        [
            "Class NoBranchKripkeIntuitionisticModel (worlds: Type) {R: Relation worlds} : Prop := { Korder_no_branch: forall m1 m2 n: worlds, n <= m1 -> n <= m2 -> m1 <= m2 \\/ m2 <= m1 }.",
            "VernacInductive",
            "33bf9b58a0b7b078db91a3fcebe323ea6a83649a"
        ],
        [
            "Class BranchJoinKripkeIntuitionisticModel (worlds: Type) {R: Relation worlds} : Prop := { Korder_branch_join: forall m1 m2 n: worlds, n <= m1 -> n <= m2 -> exists m, m1 <= m /\\ m2 <= m }.",
            "VernacInductive",
            "fc5ae9764484553a64bf31ba37dff5f22020a6b2"
        ],
        [
            "Instance prod_BranchJoinKripkeIntuitionisticModel (A B: Type) {RA: Relation A} {RB: Relation B} {bkiMA: BranchJoinKripkeIntuitionisticModel A} {bkiMB: BranchJoinKripkeIntuitionisticModel B}: @BranchJoinKripkeIntuitionisticModel (A * B) (RelProd RA RB).",
            "VernacInstance",
            "19b1bb350503ae03e27e723280142f6da96f2d41"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros [m11 m12] [m21 m22] [n1 n2] [? ?] [? ?].",
            "VernacExtend",
            "bb6e8df2d591fc114f9d48e69d3420566d2dfab0"
        ],
        [
            "hnf in H, H0, H1, H2; simpl in *.",
            "VernacExtend",
            "2f712676502dbfdad947fe66d3e9a52d3a4e27e8"
        ],
        [
            "destruct (@Korder_branch_join _ _ bkiMA m11 m21 n1 H H1) as [m1 [? ?]].",
            "VernacExtend",
            "aa5f61adc239a40f8bc5c5e4f4eeeffdda81029e"
        ],
        [
            "destruct (@Korder_branch_join _ _ bkiMB m12 m22 n2 H0 H2) as [m2 [? ?]].",
            "VernacExtend",
            "e880cae5e3ec9207e2b9432723833e9808a24aa9"
        ],
        [
            "exists (m1, m2); split; split; auto.",
            "VernacExtend",
            "ad6765e5e1caefe2595ed58b787c899443d8e5fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance fun_BranchJoinKripkeIntuitionisticModel (A B: Type) {RB: Relation B} {bkiMB: BranchJoinKripkeIntuitionisticModel B}: @BranchJoinKripkeIntuitionisticModel (A -> B) (pointwise_relation A RB).",
            "VernacInstance",
            "199bf3bcd7a11c5f5f132698d0b7ffbd49cd80df"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (choice (fun x fx => m1 x <= fx /\\ m2 x <= fx)) as [m ?].",
            "VernacExtend",
            "9d1bf250be1694e1fb21cc515290acab123bbc68"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "specialize (H x).",
            "VernacExtend",
            "45f61c119b34fcdf0671d24903e981972bd19df6"
        ],
        [
            "specialize (H0 x).",
            "VernacExtend",
            "0c0d45cbbd107bef23b82d032aedece527152dbc"
        ],
        [
            "destruct (Korder_branch_join _ _ _ H H0) as [y [? ?]].",
            "VernacExtend",
            "9b6beba89a028c519f805e287493da7b1f8ffb38"
        ],
        [
            "exists y; auto.",
            "VernacExtend",
            "2a5ece7ebb3072d93dd214864e7ff9b009d438fd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists m.",
            "VernacExtend",
            "9282a6b695b4daa97f27297bcc295a268a932fcd"
        ],
        [
            "split; intros x; specialize (H1 x); tauto.",
            "VernacExtend",
            "136101699df1b1a65644057219e7645d2df3e305"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance option00_BranchJoinKripkeIntuitionisticModel (A: Type) {R: Relation A} {bkiM: BranchJoinKripkeIntuitionisticModel A}: @BranchJoinKripkeIntuitionisticModel (option A) (option00_relation R).",
            "VernacInstance",
            "df7d8360c7a0c79dc12b66b3b2d45a8c2fd19792"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H; inversion H0; try congruence; subst.",
            "VernacExtend",
            "ec161051227c809652923682c422ea8c6f731680"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists None; split; auto.",
            "VernacExtend",
            "102c519fe1247d8d47d1a505cb821b2c3c73dcd1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H5; subst.",
            "VernacExtend",
            "cc8de5115dd254171f0c6ae8d0753a2f561087f5"
        ],
        [
            "clear H0 H H5.",
            "VernacExtend",
            "6c8f81b24eb4aafdfd4f922e29bf61c5147801a7"
        ],
        [
            "destruct (Korder_branch_join _ _ _ H1 H4) as [b' [? ?]].",
            "VernacExtend",
            "c6cda6af8b10adc8f3aab24b253a20002c9f30a9"
        ],
        [
            "exists (Some b').",
            "VernacExtend",
            "f7b6ce11d0eb8929c8c5850221dc3bfc77299218"
        ],
        [
            "split; constructor; auto.",
            "VernacExtend",
            "c6608d22455cba65ae2ee26abc26f3257320064f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance NoBranch2BranchJoin (A: Type) {R: Relation A} {po_R: PreOrder Krelation} {nkiM: NoBranchKripkeIntuitionisticModel A}: BranchJoinKripkeIntuitionisticModel A.",
            "VernacInstance",
            "415f5092761134b04d8a9e2387c1c1e6d4b282b5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof Korder_no_branch _ _ _ H H0.",
            "VernacExtend",
            "2f0e91fbed31fdb546ff238bc3a21ce66040237a"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists m2; split; auto.",
            "VernacExtend",
            "879ef6d6e49dd64c31a62d239c29353f25589bfb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists m1; split; auto.",
            "VernacExtend",
            "ff0e28d38c648efc95e722466e32ba909c47a390"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance eq_ikiM {worlds: Type}: @IdentityKripkeIntuitionisticModel worlds eq.",
            "VernacInstance",
            "99bc9242149ea81cc353f24784acd31583c5ed9f"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros; auto.",
            "VernacExtend",
            "d08fa6a6cf0cffe77a1b06ed19eb1fcfb0b64546"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "prod_BranchJoinKripkeIntuitionisticModel",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros [m11 m12] [m21 m22] [n1 n2] [? ?] [? ?].",
                        "VernacExtend",
                        "bb6e8df2d591fc114f9d48e69d3420566d2dfab0"
                    ]
                },
                {
                    "command": [
                        "hnf in H, H0, H1, H2; simpl in *.",
                        "VernacExtend",
                        "2f712676502dbfdad947fe66d3e9a52d3a4e27e8"
                    ]
                },
                {
                    "command": [
                        "destruct (@Korder_branch_join _ _ bkiMA m11 m21 n1 H H1) as [m1 [? ?]].",
                        "VernacExtend",
                        "aa5f61adc239a40f8bc5c5e4f4eeeffdda81029e"
                    ]
                },
                {
                    "command": [
                        "destruct (@Korder_branch_join _ _ bkiMB m12 m22 n2 H0 H2) as [m2 [? ?]].",
                        "VernacExtend",
                        "e880cae5e3ec9207e2b9432723833e9808a24aa9"
                    ]
                },
                {
                    "command": [
                        "exists (m1, m2); split; split; auto.",
                        "VernacExtend",
                        "ad6765e5e1caefe2595ed58b787c899443d8e5fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_BranchJoinKripkeIntuitionisticModel",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (choice (fun x fx => m1 x <= fx /\\ m2 x <= fx)) as [m ?].",
                        "VernacExtend",
                        "9d1bf250be1694e1fb21cc515290acab123bbc68"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "specialize (H x).",
                        "VernacExtend",
                        "45f61c119b34fcdf0671d24903e981972bd19df6"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 x).",
                        "VernacExtend",
                        "0c0d45cbbd107bef23b82d032aedece527152dbc"
                    ]
                },
                {
                    "command": [
                        "destruct (Korder_branch_join _ _ _ H H0) as [y [? ?]].",
                        "VernacExtend",
                        "9b6beba89a028c519f805e287493da7b1f8ffb38"
                    ]
                },
                {
                    "command": [
                        "exists y; auto.",
                        "VernacExtend",
                        "2a5ece7ebb3072d93dd214864e7ff9b009d438fd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists m.",
                        "VernacExtend",
                        "9282a6b695b4daa97f27297bcc295a268a932fcd"
                    ]
                },
                {
                    "command": [
                        "split; intros x; specialize (H1 x); tauto.",
                        "VernacExtend",
                        "136101699df1b1a65644057219e7645d2df3e305"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "option00_BranchJoinKripkeIntuitionisticModel",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; try congruence; subst.",
                        "VernacExtend",
                        "ec161051227c809652923682c422ea8c6f731680"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists None; split; auto.",
                        "VernacExtend",
                        "102c519fe1247d8d47d1a505cb821b2c3c73dcd1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H5; subst.",
                        "VernacExtend",
                        "cc8de5115dd254171f0c6ae8d0753a2f561087f5"
                    ]
                },
                {
                    "command": [
                        "clear H0 H H5.",
                        "VernacExtend",
                        "6c8f81b24eb4aafdfd4f922e29bf61c5147801a7"
                    ]
                },
                {
                    "command": [
                        "destruct (Korder_branch_join _ _ _ H1 H4) as [b' [? ?]].",
                        "VernacExtend",
                        "c6cda6af8b10adc8f3aab24b253a20002c9f30a9"
                    ]
                },
                {
                    "command": [
                        "exists (Some b').",
                        "VernacExtend",
                        "f7b6ce11d0eb8929c8c5850221dc3bfc77299218"
                    ]
                },
                {
                    "command": [
                        "split; constructor; auto.",
                        "VernacExtend",
                        "c6608d22455cba65ae2ee26abc26f3257320064f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoBranch2BranchJoin",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof Korder_no_branch _ _ _ H H0.",
                        "VernacExtend",
                        "2f0e91fbed31fdb546ff238bc3a21ce66040237a"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists m2; split; auto.",
                        "VernacExtend",
                        "879ef6d6e49dd64c31a62d239c29353f25589bfb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists m1; split; auto.",
                        "VernacExtend",
                        "ff0e28d38c648efc95e722466e32ba909c47a390"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_ikiM",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros; auto.",
                        "VernacExtend",
                        "d08fa6a6cf0cffe77a1b06ed19eb1fcfb0b64546"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}