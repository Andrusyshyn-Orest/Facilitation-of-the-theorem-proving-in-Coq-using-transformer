{
    "filename": "GeneralLogic/Complete/ContextProperty.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Logic.Classical_Prop.",
            "VernacRequire",
            "9ccd680c17c6039100012bae5c1bef8ed35d228a"
        ],
        [
            "Require Import Logic.lib.Coqlib.",
            "VernacRequire",
            "075e5d7e5a261753a32e2d1ec79bc22503d420dc"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Section ContextProperty.",
            "VernacBeginSection",
            "ac9783086cf37d7f9b1d47322dcc0e879ffc6a7b"
        ],
        [
            "Context {L: Language}.",
            "VernacContext",
            "6b725a9af852cdff3f49ec856898e50df5f3b377"
        ],
        [
            "Definition at_least (P cP: context -> Prop): Prop := forall (Phi: context), cP Phi -> P Phi.",
            "VernacDefinition",
            "562d2202d709a6226d9c64cc93f2601e058ad4e6"
        ],
        [
            "Lemma at_least_self: forall P, at_least P P.",
            "VernacStartTheoremProof",
            "7643f85878172e0eb99af8c013cd27a3410eea2f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma at_least_left: forall P cP1 cP2, at_least P cP1 -> at_least P (Intersection _ cP1 cP2).",
            "VernacStartTheoremProof",
            "8898c074846fd57931c52d68192fe20886107a39"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf in H |- *; intros.",
            "VernacExtend",
            "a54d04ee64e85eb17bf783231bc8efbe5e228999"
        ],
        [
            "destruct H0; auto.",
            "VernacExtend",
            "9ebda477a89633134ca4d54ad2c1cf67712003c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma at_least_right: forall P cP1 cP2, at_least P cP2 -> at_least P (Intersection _ cP1 cP2).",
            "VernacStartTheoremProof",
            "dc95f685b46536488b166fdc745e2ff311b7ed5e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf in H |- *; intros.",
            "VernacExtend",
            "a54d04ee64e85eb17bf783231bc8efbe5e228999"
        ],
        [
            "destruct H0; auto.",
            "VernacExtend",
            "9ebda477a89633134ca4d54ad2c1cf67712003c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition maximal (P: context -> Prop): context -> Prop := fun Phi => P Phi /\\ forall Psi, P Psi -> Included _ Phi Psi -> Included _ Psi Phi.",
            "VernacDefinition",
            "301aed9227f4e140281039b7835a3d4df68f9510"
        ],
        [
            "Lemma sig_context_ext: forall (cP: context -> Prop) (Phi Psi: sig cP), (forall x, proj1_sig Phi x <-> proj1_sig Psi x) -> Phi = Psi.",
            "VernacStartTheoremProof",
            "6a575b912bd231779f68cc601ff7bb2d1b01e5c5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof Extensionality_Ensembles _ _ _ (conj (fun x => proj1 (H x)) (fun x => proj2 (H x))).",
            "VernacExtend",
            "3df1eeb26ef4b4b360a57a8e8faf67b502307081"
        ],
        [
            "destruct Psi as [Psi ?], Phi as [Phi ?].",
            "VernacExtend",
            "fd540fea38b63bb70f53efdd00cf3688a5e175e8"
        ],
        [
            "simpl in H0; subst.",
            "VernacExtend",
            "d0a209e4e5e49c823c3ccaec680be570335313f2"
        ],
        [
            "pose proof proof_irrelevance _ c c0.",
            "VernacExtend",
            "c96a288a5783a611202fe0a0c175a7ab9630e363"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ContextProperty.",
            "VernacEndSegment",
            "eb4d91cb49cbf69a2f4c536fecec8650844d153a"
        ],
        [
            "Ltac solve_at_least := solve [apply at_least_self | auto | apply at_least_left; solve_at_least | apply at_least_right; solve_at_least].",
            "VernacExtend",
            "0e98cd9bda7317c1b33a00626da7370046aef4da"
        ]
    ],
    "proofs": [
        {
            "name": "at_least_self",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "at_least_left",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "hnf in H |- *; intros.",
                        "VernacExtend",
                        "a54d04ee64e85eb17bf783231bc8efbe5e228999"
                    ]
                },
                {
                    "command": [
                        "destruct H0; auto.",
                        "VernacExtend",
                        "9ebda477a89633134ca4d54ad2c1cf67712003c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "at_least_right",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "hnf in H |- *; intros.",
                        "VernacExtend",
                        "a54d04ee64e85eb17bf783231bc8efbe5e228999"
                    ]
                },
                {
                    "command": [
                        "destruct H0; auto.",
                        "VernacExtend",
                        "9ebda477a89633134ca4d54ad2c1cf67712003c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sig_context_ext",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof Extensionality_Ensembles _ _ _ (conj (fun x => proj1 (H x)) (fun x => proj2 (H x))).",
                        "VernacExtend",
                        "3df1eeb26ef4b4b360a57a8e8faf67b502307081"
                    ]
                },
                {
                    "command": [
                        "destruct Psi as [Psi ?], Phi as [Phi ?].",
                        "VernacExtend",
                        "fd540fea38b63bb70f53efdd00cf3688a5e175e8"
                    ]
                },
                {
                    "command": [
                        "simpl in H0; subst.",
                        "VernacExtend",
                        "d0a209e4e5e49c823c3ccaec680be570335313f2"
                    ]
                },
                {
                    "command": [
                        "pose proof proof_irrelevance _ c c0.",
                        "VernacExtend",
                        "c96a288a5783a611202fe0a0c175a7ab9630e363"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}