{
    "filename": "ModalLogic/Sound/Sound_Kripke.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Logic.Classical_Prop.",
            "VernacRequire",
            "9ccd680c17c6039100012bae5c1bef8ed35d228a"
        ],
        [
            "Require Import Coq.Logic.Classical_Pred_Type.",
            "VernacRequire",
            "2d2ddc9b783f2ae37bb8ab62203e8a65a17b70b1"
        ],
        [
            "Require Import Logic.lib.Ensembles_ext.",
            "VernacRequire",
            "19fa136320dca316056a1bf8e4a3fb50fe8a2192"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.GeneralLogic.KripkeModel.",
            "VernacRequire",
            "6b79568e5e653c27c6a8e7063552aa2142ab9f3f"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.MinimunLogic.Semantics.Trivial.",
            "VernacRequire",
            "4d1d979fd969109c003d33e1d74a51d676b2305a"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.PropositionalLogic.Semantics.Trivial.",
            "VernacRequire",
            "be55cb773882a5f5f14a473460b60e51f9f3e47f"
        ],
        [
            "Require Import Logic.ModalLogic.Syntax.",
            "VernacRequire",
            "5622ed4aa206f322d0c747758fe045fbf3322e66"
        ],
        [
            "Require Import Logic.ModalLogic.Model.KripkeModel.",
            "VernacRequire",
            "d42d7e9f51b7e79a490b05ce57817becc761a2c3"
        ],
        [
            "Require Import Logic.ModalLogic.Model.OrderedKripkeModel.",
            "VernacRequire",
            "01e6d53f0318486fdebbeb919bcdaf59b96df2bd"
        ],
        [
            "Require Import Logic.ModalLogic.Semantics.Kripke.",
            "VernacRequire",
            "a792ecdb36963a20fb148abeb9004a910ede1584"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Local Open Scope kripke_model.",
            "VernacOpenCloseScope",
            "e49ee31afd7da8031602e71d800a363615169ff7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Import ModalLanguageNotation.",
            "VernacImport",
            "3edfcb625a3941b052e06fd51f3a696f82fb0473"
        ],
        [
            "Import KripkeModelFamilyNotation.",
            "VernacImport",
            "e1b9787d5646dac924687ed660f3c109e8d952dd"
        ],
        [
            "Section Sound_Kripke.",
            "VernacBeginSection",
            "6fc417bcb13351aa09a8ca02beec3784b72337c0"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {mL: ModalLanguage L} {MD: Model} {kMD: KripkeModel MD} {M: Kmodel} {R: Relation (Kworlds M)} {SM: Semantics L MD} {tminSM: TrivialMinimunSemantics L MD SM} {tpSM: TrivialPropositionalSemantics L MD SM} {kmSM: KripkeModalSemantics L MD M SM}.",
            "VernacContext",
            "08eceec693ac8abb47f57cb17c1424dc9e0b3611"
        ],
        [
            "Lemma sound_axiom_K: forall x y (m: Kworlds M), KRIPKE: M, m |= boxp (x --> y) --> (boxp x --> boxp y).",
            "VernacStartTheoremProof",
            "fd59131b7a7f767036797bedcc5a4b103ecb594c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite !sat_impp, !sat_boxp.",
            "VernacExtend",
            "3ac3dc421c351f327eb9dc17aab2608d7f65e759"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "specialize (H _ H1).",
            "VernacExtend",
            "e06e00e7025c5b0eb058ab3cb34d857447ad4fdb"
        ],
        [
            "specialize (H0 _ H1).",
            "VernacExtend",
            "c66d8ca9148b8cccd9d0d762dde7c2ce6ffc40e5"
        ],
        [
            "rewrite sat_impp in H.",
            "VernacExtend",
            "58ad51117ac1e301c9d315ffce5aa0f38e52783a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sound_rule_N: forall x, (forall (m: Kworlds M), KRIPKE: M, m |= x) -> (forall (m: Kworlds M), KRIPKE: M, m |= boxp x).",
            "VernacStartTheoremProof",
            "a84a8b5a542cc5f4523ceb7d167bf9372ac3ebba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_boxp.",
            "VernacExtend",
            "e70223ab4035f2a34bf3992a180f736186d56e3b"
        ],
        [
            "intros; apply H; auto.",
            "VernacExtend",
            "7e205d2d9afa71106709b919c8857288a94d61a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sound_boxp_orp {pf_R: PartialFunctional KM.Krelation}: forall x y (m: Kworlds M), KRIPKE: M, m |= boxp (x || y) <--> (boxp x || boxp y).",
            "VernacStartTheoremProof",
            "8c6e4fe5e1e2fb2ea8ff56fd9ad4f59185b17798"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold iffp.",
            "VernacExtend",
            "0a3c21e8bcedfd5a0e032d0fc7debd7b46d1b2e0"
        ],
        [
            "rewrite sat_andp, !sat_impp, !sat_orp, !sat_boxp.",
            "VernacExtend",
            "037a2fe60e3de0d9df0b911b0de8d8af6ff6499b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply NNPP.",
            "VernacExtend",
            "c972af1947412f7363e48b809906d3283d0fb638"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply not_or_and in H0; destruct H0.",
            "VernacExtend",
            "f4e8444e68caccd1551191454039067fa3e52911"
        ],
        [
            "apply not_all_ex_not in H0; destruct H0 as [n1 ?].",
            "VernacExtend",
            "2f5989d31780099c90755624d684a53d9d3c2b7b"
        ],
        [
            "apply not_all_ex_not in H1; destruct H1 as [n2 ?].",
            "VernacExtend",
            "782a0ac6cf4532a73fadf007d4fa425da1305865"
        ],
        [
            "apply imply_to_and in H0; destruct H0.",
            "VernacExtend",
            "9f683bf495c77d726088f65c3fd03dee107467d2"
        ],
        [
            "apply imply_to_and in H1; destruct H1.",
            "VernacExtend",
            "6ada359a7502910e00357c0b8db333b578c8551a"
        ],
        [
            "pose proof partial_functionality _ _ _ H0 H1.",
            "VernacExtend",
            "5f177905f22dfae906649e5147c816afcd41e30f"
        ],
        [
            "subst n2; clear H1.",
            "VernacExtend",
            "04af3b995b648540c3618650e9e2173ab6b20038"
        ],
        [
            "specialize (H _ H0).",
            "VernacExtend",
            "58d9b9a73505872ca70c4d928bcfa1d1cc75c69b"
        ],
        [
            "rewrite sat_orp in H.",
            "VernacExtend",
            "e6b4c80c3c9e7026f28efeac4be55211ae173374"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite sat_orp.",
            "VernacExtend",
            "e17def3a68591c133ad7d872cfed6c67c0b587c9"
        ],
        [
            "destruct H; [left | right]; auto.",
            "VernacExtend",
            "db77caf549da7488bbc79415de1691739018d52c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Sound_Kripke.",
            "VernacEndSegment",
            "0a0e3cae85edd7bc817cf263f5955efd2cc638aa"
        ]
    ],
    "proofs": [
        {
            "name": "sound_axiom_K",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite !sat_impp, !sat_boxp.",
                        "VernacExtend",
                        "3ac3dc421c351f327eb9dc17aab2608d7f65e759"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "specialize (H _ H1).",
                        "VernacExtend",
                        "e06e00e7025c5b0eb058ab3cb34d857447ad4fdb"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 _ H1).",
                        "VernacExtend",
                        "c66d8ca9148b8cccd9d0d762dde7c2ce6ffc40e5"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp in H.",
                        "VernacExtend",
                        "58ad51117ac1e301c9d315ffce5aa0f38e52783a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sound_rule_N",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_boxp.",
                        "VernacExtend",
                        "e70223ab4035f2a34bf3992a180f736186d56e3b"
                    ]
                },
                {
                    "command": [
                        "intros; apply H; auto.",
                        "VernacExtend",
                        "7e205d2d9afa71106709b919c8857288a94d61a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sound_boxp_orp",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold iffp.",
                        "VernacExtend",
                        "0a3c21e8bcedfd5a0e032d0fc7debd7b46d1b2e0"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_andp, !sat_impp, !sat_orp, !sat_boxp.",
                        "VernacExtend",
                        "037a2fe60e3de0d9df0b911b0de8d8af6ff6499b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply NNPP.",
                        "VernacExtend",
                        "c972af1947412f7363e48b809906d3283d0fb638"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply not_or_and in H0; destruct H0.",
                        "VernacExtend",
                        "f4e8444e68caccd1551191454039067fa3e52911"
                    ]
                },
                {
                    "command": [
                        "apply not_all_ex_not in H0; destruct H0 as [n1 ?].",
                        "VernacExtend",
                        "2f5989d31780099c90755624d684a53d9d3c2b7b"
                    ]
                },
                {
                    "command": [
                        "apply not_all_ex_not in H1; destruct H1 as [n2 ?].",
                        "VernacExtend",
                        "782a0ac6cf4532a73fadf007d4fa425da1305865"
                    ]
                },
                {
                    "command": [
                        "apply imply_to_and in H0; destruct H0.",
                        "VernacExtend",
                        "9f683bf495c77d726088f65c3fd03dee107467d2"
                    ]
                },
                {
                    "command": [
                        "apply imply_to_and in H1; destruct H1.",
                        "VernacExtend",
                        "6ada359a7502910e00357c0b8db333b578c8551a"
                    ]
                },
                {
                    "command": [
                        "pose proof partial_functionality _ _ _ H0 H1.",
                        "VernacExtend",
                        "5f177905f22dfae906649e5147c816afcd41e30f"
                    ]
                },
                {
                    "command": [
                        "subst n2; clear H1.",
                        "VernacExtend",
                        "04af3b995b648540c3618650e9e2173ab6b20038"
                    ]
                },
                {
                    "command": [
                        "specialize (H _ H0).",
                        "VernacExtend",
                        "58d9b9a73505872ca70c4d928bcfa1d1cc75c69b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_orp in H.",
                        "VernacExtend",
                        "e6b4c80c3c9e7026f28efeac4be55211ae173374"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_orp.",
                        "VernacExtend",
                        "e17def3a68591c133ad7d872cfed6c67c0b587c9"
                    ]
                },
                {
                    "command": [
                        "destruct H; [left | right]; auto.",
                        "VernacExtend",
                        "db77caf549da7488bbc79415de1691739018d52c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}