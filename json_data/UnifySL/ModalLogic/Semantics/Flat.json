{
    "filename": "ModalLogic/Semantics/Flat.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Classes.RelationClasses.",
            "VernacRequire",
            "e1e9fb5bb83f789dcff9c0bfa33e2d359b0caa70"
        ],
        [
            "Require Import Coq.Relations.Relation_Definitions.",
            "VernacRequire",
            "e90e5840c35495258b335912cbf63f3e29ec520e"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.GeneralLogic.KripkeModel.",
            "VernacRequire",
            "6b79568e5e653c27c6a8e7063552aa2142ab9f3f"
        ],
        [
            "Require Import Logic.ModalLogic.Model.KripkeModel.",
            "VernacRequire",
            "d42d7e9f51b7e79a490b05ce57817becc761a2c3"
        ],
        [
            "Require Import Logic.ModalLogic.Model.OrderedKripkeModel.",
            "VernacRequire",
            "01e6d53f0318486fdebbeb919bcdaf59b96df2bd"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.ModalLogic.Syntax.",
            "VernacRequire",
            "5622ed4aa206f322d0c747758fe045fbf3322e66"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Local Open Scope kripke_model.",
            "VernacOpenCloseScope",
            "e49ee31afd7da8031602e71d800a363615169ff7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Import ModalLanguageNotation.",
            "VernacImport",
            "3edfcb625a3941b052e06fd51f3a696f82fb0473"
        ],
        [
            "Import KripkeModelFamilyNotation.",
            "VernacImport",
            "e1b9787d5646dac924687ed660f3c109e8d952dd"
        ],
        [
            "Import KripkeModelNotation_Intuitionistic.",
            "VernacImport",
            "d7b7fe443374144a34554b0fe36caedd27cfce5b"
        ],
        [
            "Module Semantics.",
            "VernacDefineModule",
            "ca7dd7f60a702b03f71e83be6721faf11d931178"
        ],
        [
            "Definition boxp {worlds: Type} {R: KM.Relation worlds} (X: Ensemble worlds): Ensemble worlds := fun m => forall n, KM.Krelation m n -> X n.",
            "VernacDefinition",
            "6b15fa407f2e21ddc4e54e6453a0f6384be8f68d"
        ],
        [
            "Lemma boxp_closed {worlds: Type} {R1: KI.Relation worlds} {po_R1: PreOrder KI.Krelation} {R2: KM.Relation worlds} {ukmM: UpwardsClosedOrderedKripkeModel worlds}: forall (X: Ensemble worlds), upwards_closed_Kdenote X -> upwards_closed_Kdenote (boxp X).",
            "VernacStartTheoremProof",
            "f65466d4b972cf479e905684756a0e6b397bfc6a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "intros m1 m2 ? ?.",
            "VernacExtend",
            "7cca8fe21601e81acd5a3b9a60e0d8ae0c0ad4c6"
        ],
        [
            "hnf in H1 |- *.",
            "VernacExtend",
            "45653804ae224066340d54e6e191815672fc7296"
        ],
        [
            "intros n2 ?.",
            "VernacExtend",
            "c1d91b08cf2a23224bb6385fd8c59be1f8b8e356"
        ],
        [
            "destruct (KM_relation_up _ _ _ H0 H2) as [n1 [? ?]].",
            "VernacExtend",
            "c74de9be75985c91e8f9e2db8cc0e49bca8cda27"
        ],
        [
            "apply (H n1); auto.",
            "VernacExtend",
            "5f525f18001117f276d6f33dede2fbf53db9123c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Semantics.",
            "VernacEndSegment",
            "82a9afba3fa8f88bae2d19f616f1af04fb0fce6d"
        ],
        [
            "Module SemanticsMono.",
            "VernacDefineModule",
            "915a9f6c3715549e687954d190b49cfb7621f0f6"
        ],
        [
            "Program Definition boxp {worlds: Type} {R1: KI.Relation worlds} {po_R1: PreOrder KI.Krelation} {R2: KM.Relation worlds} {ukmM: UpwardsClosedOrderedKripkeModel worlds} (X: MonoEnsemble worlds): MonoEnsemble worlds := Semantics.boxp X.",
            "VernacDefinition",
            "94fe37c51fd6a28666ddaeab4a72035c145f644e"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply (@Semantics.boxp_closed worlds R1 po_R1 R2 ukmM); apply (proj2_sig _).",
            "VernacExtend",
            "93add35ba42da05fdcb8d7caf9dd3131ddafd42d"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End SemanticsMono.",
            "VernacEndSegment",
            "9bd6683a50e6800427d5d7fa983449297b55bd99"
        ],
        [
            "Class FlatModalSemantics (L: Language) {minL: MinimunLanguage L} {mL: ModalLanguage L} (MD: Model) {kMD: KripkeModel MD} (M: Kmodel) {R1: KI.Relation (Kworlds M)} {R2: KM.Relation (Kworlds M)} (SM: Semantics L MD) : Type := { denote_boxp: forall x, Same_set _ (Kdenotation M (boxp x)) (Semantics.boxp (Kdenotation M x)) }.",
            "VernacInductive",
            "71d2a07dc5283eaa3aa078920491a395831cd0be"
        ],
        [
            "Lemma sat_boxp {L: Language} {minL: MinimunLanguage L} {mL: ModalLanguage L} {MD: Model} {kMD: KripkeModel MD} {M: Kmodel} {R1: KI.Relation (Kworlds M)} {R2: KM.Relation (Kworlds M)} {SM: Semantics L MD} {fmSM: FlatModalSemantics L MD M SM}: forall m x, KRIPKE: M , m |= boxp x <-> (forall n, KM.Krelation m n -> KRIPKE: M , n |= x).",
            "VernacStartTheoremProof",
            "f1d4c693f37da85336c1d327eb4c677db1fdf1b4"
        ],
        [
            "intros; simpl.",
            "VernacExtend",
            "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
        ],
        [
            "unfold satisfies.",
            "VernacExtend",
            "cce376b046315f4cfb04db6ccdf5cf21af01be21"
        ],
        [
            "destruct (denote_boxp x).",
            "VernacExtend",
            "2d20e45d31f71ef32705464a8b7d68c4254cbd78"
        ],
        [
            "split; [apply H | apply H0].",
            "VernacExtend",
            "c2fed9f3759800326dbd68a460f0c95510f4be5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "boxp_closed",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "hnf.",
                        "VernacExtend",
                        "93c9be61208bb2956fb47b51f12123e34260e667"
                    ]
                },
                {
                    "command": [
                        "intros m1 m2 ? ?.",
                        "VernacExtend",
                        "7cca8fe21601e81acd5a3b9a60e0d8ae0c0ad4c6"
                    ]
                },
                {
                    "command": [
                        "hnf in H1 |- *.",
                        "VernacExtend",
                        "45653804ae224066340d54e6e191815672fc7296"
                    ]
                },
                {
                    "command": [
                        "intros n2 ?.",
                        "VernacExtend",
                        "c1d91b08cf2a23224bb6385fd8c59be1f8b8e356"
                    ]
                },
                {
                    "command": [
                        "destruct (KM_relation_up _ _ _ H0 H2) as [n1 [? ?]].",
                        "VernacExtend",
                        "c74de9be75985c91e8f9e2db8cc0e49bca8cda27"
                    ]
                },
                {
                    "command": [
                        "apply (H n1); auto.",
                        "VernacExtend",
                        "5f525f18001117f276d6f33dede2fbf53db9123c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "boxp_obligation_1",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "apply (@Semantics.boxp_closed worlds R1 po_R1 R2 ukmM); apply (proj2_sig _).",
                        "VernacExtend",
                        "93add35ba42da05fdcb8d7caf9dd3131ddafd42d"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "sat_boxp",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros; simpl.",
                        "VernacExtend",
                        "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
                    ]
                },
                {
                    "command": [
                        "unfold satisfies.",
                        "VernacExtend",
                        "cce376b046315f4cfb04db6ccdf5cf21af01be21"
                    ]
                },
                {
                    "command": [
                        "destruct (denote_boxp x).",
                        "VernacExtend",
                        "2d20e45d31f71ef32705464a8b7d68c4254cbd78"
                    ]
                },
                {
                    "command": [
                        "split; [apply H | apply H0].",
                        "VernacExtend",
                        "c2fed9f3759800326dbd68a460f0c95510f4be5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}