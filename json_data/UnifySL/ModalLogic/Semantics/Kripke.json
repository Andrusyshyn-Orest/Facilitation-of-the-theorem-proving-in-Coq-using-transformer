{
    "filename": "ModalLogic/Semantics/Kripke.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.ModalLogic.Model.KripkeModel.",
            "VernacRequire",
            "d42d7e9f51b7e79a490b05ce57817becc761a2c3"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.ModalLogic.Syntax.",
            "VernacRequire",
            "5622ed4aa206f322d0c747758fe045fbf3322e66"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Local Open Scope kripke_model.",
            "VernacOpenCloseScope",
            "e49ee31afd7da8031602e71d800a363615169ff7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Import ModalLanguageNotation.",
            "VernacImport",
            "3edfcb625a3941b052e06fd51f3a696f82fb0473"
        ],
        [
            "Import KripkeModelFamilyNotation.",
            "VernacImport",
            "e1b9787d5646dac924687ed660f3c109e8d952dd"
        ],
        [
            "Module Semantics.",
            "VernacDefineModule",
            "ca7dd7f60a702b03f71e83be6721faf11d931178"
        ],
        [
            "Definition boxp {worlds: Type} {R: KM.Relation worlds} (X: Ensemble worlds): Ensemble worlds := fun m => forall n, Krelation m n -> X n.",
            "VernacDefinition",
            "84cdeb2bbd1bc89971e0eaa7fe1206eeeca2edd4"
        ],
        [
            "End Semantics.",
            "VernacEndSegment",
            "82a9afba3fa8f88bae2d19f616f1af04fb0fce6d"
        ],
        [
            "Class KripkeModalSemantics (L: Language) {minL: MinimunLanguage L} {mL: ModalLanguage L} (MD: Model) {kMD: KripkeModel MD} (M: Kmodel) {R: Relation (Kworlds M)} (SM: Semantics L MD): Type := { denote_boxp: forall x: expr, Same_set _ (Kdenotation M (boxp x)) (Semantics.boxp (Kdenotation M x)) }.",
            "VernacInductive",
            "654a7c0dfccf6e4bbfa2a7d2a1b8d62112ce7da0"
        ],
        [
            "Lemma sat_boxp {L: Language} {minL: MinimunLanguage L} {mL: ModalLanguage L} {MD: Model} {kMD: KripkeModel MD} {M: Kmodel} {R: Relation (Kworlds M)} {SM: Semantics L MD} {kmSM: KripkeModalSemantics L MD M SM}: forall m x, KRIPKE: M , m |= boxp x <-> (forall n, KM.Krelation m n -> KRIPKE: M , n |= x).",
            "VernacStartTheoremProof",
            "20cc5303e9d0c4cdbc97726859111dd99805636d"
        ],
        [
            "intros; simpl.",
            "VernacExtend",
            "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
        ],
        [
            "unfold satisfies.",
            "VernacExtend",
            "cce376b046315f4cfb04db6ccdf5cf21af01be21"
        ],
        [
            "destruct (denote_boxp x).",
            "VernacExtend",
            "2d20e45d31f71ef32705464a8b7d68c4254cbd78"
        ],
        [
            "split; [apply H | apply H0].",
            "VernacExtend",
            "c2fed9f3759800326dbd68a460f0c95510f4be5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "sat_boxp",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros; simpl.",
                        "VernacExtend",
                        "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
                    ]
                },
                {
                    "command": [
                        "unfold satisfies.",
                        "VernacExtend",
                        "cce376b046315f4cfb04db6ccdf5cf21af01be21"
                    ]
                },
                {
                    "command": [
                        "destruct (denote_boxp x).",
                        "VernacExtend",
                        "2d20e45d31f71ef32705464a8b7d68c4254cbd78"
                    ]
                },
                {
                    "command": [
                        "split; [apply H | apply H0].",
                        "VernacExtend",
                        "c2fed9f3759800326dbd68a460f0c95510f4be5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}