{
    "filename": "ModalLogic/ProofTheory/RewriteClass.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Classes.Morphisms.",
            "VernacRequire",
            "d6f94fe62e68e8d5e6a6c6513b6c2e04f2b5d71a"
        ],
        [
            "Require Import Coq.Classes.RelationClasses.",
            "VernacRequire",
            "e1e9fb5bb83f789dcff9c0bfa33e2d359b0caa70"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.GeneralLogic.ProofTheory.BasicSequentCalculus.",
            "VernacRequire",
            "f2fbc894d63ff9f72127ac59dc8b190ee459f36d"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.ModalLogic.Syntax.",
            "VernacRequire",
            "5622ed4aa206f322d0c747758fe045fbf3322e66"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.Minimun.",
            "VernacRequire",
            "7dd3badfb0ea34d33454f0c461fceaac94fde835"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.RewriteClass.",
            "VernacRequire",
            "979c209afa85ced49ff62f7a9b2136c799474941"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Intuitionistic.",
            "VernacRequire",
            "918be0c1da11c6e84f2fca83e0414062df4a6509"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.DeMorgan.",
            "VernacRequire",
            "979253b4e51bd4c70a2820690cbe8456571aeec4"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.GodelDummett.",
            "VernacRequire",
            "6b75b7bbc32a6656be72ad029a1da066beffebf4"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Classical.",
            "VernacRequire",
            "9db43e6b1f1b9e4d12563fea4db9562a4e6fcb7d"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.RewriteClass.",
            "VernacRequire",
            "e93eef38e75c736b6e3ce3c196435253280f259c"
        ],
        [
            "Require Import Logic.ModalLogic.ProofTheory.ModalLogic.",
            "VernacRequire",
            "4f5756099af4c7a3fdb31035cadbbeb32f199bec"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Import ModalLanguageNotation.",
            "VernacImport",
            "3edfcb625a3941b052e06fd51f3a696f82fb0473"
        ],
        [
            "Section RewriteClass.",
            "VernacBeginSection",
            "b9391048408d5b59206d3cf6517f605ee8d435a0"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {mL: ModalLanguage L} {Gamma: ProofTheory L} {AX: NormalAxiomatization L Gamma} {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} {KmGamma: SystemK L Gamma}.",
            "VernacContext",
            "6def54eb1210fc02f7268b843651c732ab4ab70f"
        ],
        [
            "Instance boxp_proper_impp: Proper ((fun x y => |-- impp x y) ==> (fun x y => |-- impp x y)) boxp.",
            "VernacInstance",
            "43044b20debeab2b7338a5efc426615c4dec9b46"
        ],
        [
            "hnf; intros x y ?.",
            "VernacExtend",
            "d124458a7609b1ca4960523c52c863c697512926"
        ],
        [
            "apply rule_N in H.",
            "VernacExtend",
            "da794d5b2b7b095da92c889e535697f513847870"
        ],
        [
            "eapply modus_ponens; eauto.",
            "VernacExtend",
            "4a0f6c475c0c7a380db49ec68cce671c94cf8792"
        ],
        [
            "apply axiom_K.",
            "VernacExtend",
            "484101c29ef06a0821bfb3759d14e4e39dc1994a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance boxp_proper_iffp: Proper ((fun x y => |-- iffp x y) ==> (fun x y => |-- iffp x y)) boxp.",
            "VernacInstance",
            "4680e86191bd136a5585f6b0e0475f4c961a1948"
        ],
        [
            "hnf; intros x y ?.",
            "VernacExtend",
            "d124458a7609b1ca4960523c52c863c697512926"
        ],
        [
            "apply solve_andp_intros; apply boxp_proper_impp.",
            "VernacExtend",
            "699cf024c0131c60679dd83c8b53c0e315363712"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply solve_andp_elim1; eauto.",
            "VernacExtend",
            "134130803d99bf649a0b2da24f59e5cb668724bf"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply solve_andp_elim2; eauto.",
            "VernacExtend",
            "ad2f52a20ec95ebe284954593b162190c548bb64"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance diamondp_proper_impp: Proper ((fun x y => |-- impp x y) ==> (fun x y => |-- impp x y)) diamondp.",
            "VernacInstance",
            "a6725f2fe3cb97b4ef0dbd555fcbff24187b9909"
        ],
        [
            "hnf; intros x y ?.",
            "VernacExtend",
            "d124458a7609b1ca4960523c52c863c697512926"
        ],
        [
            "unfold diamondp.",
            "VernacExtend",
            "0ff6987c13fdab6db8b137885ed64435a39e201a"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply provable_impp_refl.",
            "VernacExtend",
            "2cef60de23967c402db3e33ea4d2e3fd4e449812"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance diamondp_proper_iffp: Proper ((fun x y => |-- iffp x y) ==> (fun x y => |-- iffp x y)) diamondp.",
            "VernacInstance",
            "8e0d628433b33886136728046ba39461d2090919"
        ],
        [
            "hnf; intros x y ?.",
            "VernacExtend",
            "d124458a7609b1ca4960523c52c863c697512926"
        ],
        [
            "unfold diamondp.",
            "VernacExtend",
            "0ff6987c13fdab6db8b137885ed64435a39e201a"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply provable_iffp_refl.",
            "VernacExtend",
            "8ddb88f6a631e104f73b8994c11dd69b29dbce26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RewriteClass.",
            "VernacEndSegment",
            "b1d6911d78cdd5c1c7fa86bc478c65677d3bd0c4"
        ],
        [
            "Existing Instances boxp_proper_impp boxp_proper_iffp diamondp_proper_impp diamondp_proper_iffp.",
            "VernacDeclareInstances",
            "8fccd38baa2aea9b6ef8e95d8c9190c5bc16059a"
        ]
    ],
    "proofs": [
        {
            "name": "boxp_proper_impp",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "hnf; intros x y ?.",
                        "VernacExtend",
                        "d124458a7609b1ca4960523c52c863c697512926"
                    ]
                },
                {
                    "command": [
                        "apply rule_N in H.",
                        "VernacExtend",
                        "da794d5b2b7b095da92c889e535697f513847870"
                    ]
                },
                {
                    "command": [
                        "eapply modus_ponens; eauto.",
                        "VernacExtend",
                        "4a0f6c475c0c7a380db49ec68cce671c94cf8792"
                    ]
                },
                {
                    "command": [
                        "apply axiom_K.",
                        "VernacExtend",
                        "484101c29ef06a0821bfb3759d14e4e39dc1994a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "boxp_proper_iffp",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "hnf; intros x y ?.",
                        "VernacExtend",
                        "d124458a7609b1ca4960523c52c863c697512926"
                    ]
                },
                {
                    "command": [
                        "apply solve_andp_intros; apply boxp_proper_impp.",
                        "VernacExtend",
                        "699cf024c0131c60679dd83c8b53c0e315363712"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply solve_andp_elim1; eauto.",
                        "VernacExtend",
                        "134130803d99bf649a0b2da24f59e5cb668724bf"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply solve_andp_elim2; eauto.",
                        "VernacExtend",
                        "ad2f52a20ec95ebe284954593b162190c548bb64"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diamondp_proper_impp",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "hnf; intros x y ?.",
                        "VernacExtend",
                        "d124458a7609b1ca4960523c52c863c697512926"
                    ]
                },
                {
                    "command": [
                        "unfold diamondp.",
                        "VernacExtend",
                        "0ff6987c13fdab6db8b137885ed64435a39e201a"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply provable_impp_refl.",
                        "VernacExtend",
                        "2cef60de23967c402db3e33ea4d2e3fd4e449812"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diamondp_proper_iffp",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "hnf; intros x y ?.",
                        "VernacExtend",
                        "d124458a7609b1ca4960523c52c863c697512926"
                    ]
                },
                {
                    "command": [
                        "unfold diamondp.",
                        "VernacExtend",
                        "0ff6987c13fdab6db8b137885ed64435a39e201a"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply provable_iffp_refl.",
                        "VernacExtend",
                        "8ddb88f6a631e104f73b8994c11dd69b29dbce26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}