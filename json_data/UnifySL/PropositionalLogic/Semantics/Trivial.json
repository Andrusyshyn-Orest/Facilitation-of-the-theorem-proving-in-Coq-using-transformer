{
    "filename": "PropositionalLogic/Semantics/Trivial.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.MinimunLogic.Semantics.Trivial.",
            "VernacRequire",
            "4d1d979fd969109c003d33e1d74a51d676b2305a"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Module Semantics.",
            "VernacDefineModule",
            "ca7dd7f60a702b03f71e83be6721faf11d931178"
        ],
        [
            "Definition andp {model: Type} (X: Ensemble model) (Y: Ensemble model): Ensemble model := fun m => X m /\\ Y m.",
            "VernacDefinition",
            "e1219ba60aecb86834cde11869817b4219185f34"
        ],
        [
            "Definition orp {model: Type} (X: Ensemble model) (Y: Ensemble model): Ensemble model := fun m => X m \\/ Y m.",
            "VernacDefinition",
            "f29d9dee34059652995dee1ecba1f9610abec02e"
        ],
        [
            "Definition falsep {model: Type}: Ensemble model := fun m => False.",
            "VernacDefinition",
            "fc14c9a51cdde835037d2388c4e877c25593a64b"
        ],
        [
            "End Semantics.",
            "VernacEndSegment",
            "82a9afba3fa8f88bae2d19f616f1af04fb0fce6d"
        ],
        [
            "Class TrivialPropositionalSemantics (L: Language) {minL: MinimunLanguage L} {pL: PropositionalLanguage L} (MD: Model) (SM: Semantics L MD): Type := { denote_andp: forall x y, Same_set _ (denotation (x && y)) (Semantics.andp (denotation x) (denotation y)); denote_orp: forall x y, Same_set _ (denotation (x || y)) (Semantics.orp (denotation x) (denotation y)); denote_falsep: Same_set _ (denotation FF) Semantics.falsep }.",
            "VernacInductive",
            "9a1a821efeb7d401ab45dd3734f354af27a59fcd"
        ],
        [
            "Section Trivial.",
            "VernacBeginSection",
            "0d2d5283ada65598d4fd50af12ee30ae3f58fd99"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {MD: Model} {SM: Semantics L MD} {tpSM: TrivialPropositionalSemantics L MD SM}.",
            "VernacContext",
            "eb744b4200eb32f3fee9720f067e1197cf668834"
        ],
        [
            "Lemma sat_andp: forall m x y, m |= x && y <-> (m |= x /\\ m |= y).",
            "VernacStartTheoremProof",
            "3645e7a90339c0eb2b577c0728456339cb8d5465"
        ],
        [
            "intros; simpl.",
            "VernacExtend",
            "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
        ],
        [
            "unfold satisfies.",
            "VernacExtend",
            "cce376b046315f4cfb04db6ccdf5cf21af01be21"
        ],
        [
            "destruct (denote_andp x y).",
            "VernacExtend",
            "ce6f53d8c58a7576e832c97bf7a39397788186b2"
        ],
        [
            "split; auto; [apply H | apply H0].",
            "VernacExtend",
            "c0d8f2cb148f2462b21c0b28eddaaf3a26b94e6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sat_orp: forall m x y, m |= x || y <-> (m |= x \\/ m |= y).",
            "VernacStartTheoremProof",
            "fe0418762b8cd24667dff88560cfc22df17143e2"
        ],
        [
            "intros; simpl.",
            "VernacExtend",
            "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
        ],
        [
            "unfold satisfies.",
            "VernacExtend",
            "cce376b046315f4cfb04db6ccdf5cf21af01be21"
        ],
        [
            "destruct (denote_orp x y).",
            "VernacExtend",
            "a445f493fe387fd85a54879e94a24a602eaae162"
        ],
        [
            "split; auto; [apply H | apply H0].",
            "VernacExtend",
            "c0d8f2cb148f2462b21c0b28eddaaf3a26b94e6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sat_falsep: forall m, m |= FF <-> False.",
            "VernacStartTheoremProof",
            "d4af394fb355d7e86902429db20f2d749933de98"
        ],
        [
            "intros; simpl.",
            "VernacExtend",
            "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
        ],
        [
            "unfold satisfies.",
            "VernacExtend",
            "cce376b046315f4cfb04db6ccdf5cf21af01be21"
        ],
        [
            "destruct denote_falsep.",
            "VernacExtend",
            "2ac8ecd52b8eb3d1c3581aaee6cefb1f813f2b19"
        ],
        [
            "split; auto; [apply H | apply H0].",
            "VernacExtend",
            "c0d8f2cb148f2462b21c0b28eddaaf3a26b94e6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Trivial.",
            "VernacEndSegment",
            "cd671b07b6e4e26a4b26e0c8e44027c76bd6fa87"
        ]
    ],
    "proofs": [
        {
            "name": "sat_andp",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros; simpl.",
                        "VernacExtend",
                        "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
                    ]
                },
                {
                    "command": [
                        "unfold satisfies.",
                        "VernacExtend",
                        "cce376b046315f4cfb04db6ccdf5cf21af01be21"
                    ]
                },
                {
                    "command": [
                        "destruct (denote_andp x y).",
                        "VernacExtend",
                        "ce6f53d8c58a7576e832c97bf7a39397788186b2"
                    ]
                },
                {
                    "command": [
                        "split; auto; [apply H | apply H0].",
                        "VernacExtend",
                        "c0d8f2cb148f2462b21c0b28eddaaf3a26b94e6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sat_orp",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros; simpl.",
                        "VernacExtend",
                        "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
                    ]
                },
                {
                    "command": [
                        "unfold satisfies.",
                        "VernacExtend",
                        "cce376b046315f4cfb04db6ccdf5cf21af01be21"
                    ]
                },
                {
                    "command": [
                        "destruct (denote_orp x y).",
                        "VernacExtend",
                        "a445f493fe387fd85a54879e94a24a602eaae162"
                    ]
                },
                {
                    "command": [
                        "split; auto; [apply H | apply H0].",
                        "VernacExtend",
                        "c0d8f2cb148f2462b21c0b28eddaaf3a26b94e6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sat_falsep",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros; simpl.",
                        "VernacExtend",
                        "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
                    ]
                },
                {
                    "command": [
                        "unfold satisfies.",
                        "VernacExtend",
                        "cce376b046315f4cfb04db6ccdf5cf21af01be21"
                    ]
                },
                {
                    "command": [
                        "destruct denote_falsep.",
                        "VernacExtend",
                        "2ac8ecd52b8eb3d1c3581aaee6cefb1f813f2b19"
                    ]
                },
                {
                    "command": [
                        "split; auto; [apply H | apply H0].",
                        "VernacExtend",
                        "c0d8f2cb148f2462b21c0b28eddaaf3a26b94e6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}