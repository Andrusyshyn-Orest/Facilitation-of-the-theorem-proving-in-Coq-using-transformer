{
    "filename": "PropositionalLogic/ProofTheory/GodelDummett.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.GeneralLogic.ProofTheory.BasicSequentCalculus.",
            "VernacRequire",
            "f2fbc894d63ff9f72127ac59dc8b190ee459f36d"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.Minimun.",
            "VernacRequire",
            "7dd3badfb0ea34d33454f0c461fceaac94fde835"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.RewriteClass.",
            "VernacRequire",
            "979c209afa85ced49ff62f7a9b2136c799474941"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Intuitionistic.",
            "VernacRequire",
            "918be0c1da11c6e84f2fca83e0414062df4a6509"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.DeMorgan.",
            "VernacRequire",
            "979253b4e51bd4c70a2820690cbe8456571aeec4"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Class GodelDummettPropositionalLogic (L: Language) {minL: MinimunLanguage L} {pL: PropositionalLanguage L} (Gamma: ProofTheory L) {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} := { impp_choice: forall x y, |-- (x --> y) || (y --> x) }.",
            "VernacInductive",
            "f403afffc5985771083390ee408186f8806426db"
        ],
        [
            "Lemma MakeSequentCalculus_GodelDummettPropositionalLogic {L: Language} {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {Gamma: ProofTheory L} {minAX: MinimunAxiomatization L Gamma} (minAX': MinimunAxiomatization L (Build_AxiomaticProofTheory (@provable L Gamma))) (ipGamma: IntuitionisticPropositionalLogic L Gamma) {ipGamma': IntuitionisticPropositionalLogic L (Build_AxiomaticProofTheory (@provable L Gamma))} {gdpGamma: GodelDummettPropositionalLogic L Gamma}: Typeclass_Rewrite (exist (fun X: Prop => X) (IntuitionisticPropositionalLogic L (Build_AxiomaticProofTheory (@provable L Gamma))) ipGamma' :: nil) -> forall (G: Prop) (l: list (sig (fun X: Prop => X))), (forall (gdpGamma: GodelDummettPropositionalLogic L (Build_AxiomaticProofTheory (@provable L Gamma))), OpaqueProp (Typeclass_Rewrite l -> G)) <-> OpaqueProp (Typeclass_Rewrite ((exist (fun X: Prop => X) (GodelDummettPropositionalLogic L Gamma) gdpGamma) :: l) -> G).",
            "VernacStartTheoremProof",
            "11f741adf21d799b5f913b7b94e8f69c2d584d80"
        ],
        [
            "unfold OpaqueProp.",
            "VernacExtend",
            "dccd09f116741ccea873e262abb1b54eebd66d71"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct gdpGamma; constructor; auto.",
            "VernacExtend",
            "31f459c7d226678f21f23667c6575702515ddc84"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite <- @MakeSequentCalculus_GodelDummettPropositionalLogic using (instantiate (1 := _); apply Typeclass_Rewrite_I): AddSC.",
            "VernacExtend",
            "d44839be99596b0afa68473154813b564cfb530a"
        ],
        [
            "Section GodelDummett.",
            "VernacBeginSection",
            "5da6acff5ab2df9c90f4a6dbc366fdd1fab4427e"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {Gamma: ProofTheory L} {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} {gdpGamma: GodelDummettPropositionalLogic L Gamma}.",
            "VernacContext",
            "56b0bd8674e13af9d8e3cdfbddd2575889359d80"
        ],
        [
            "Instance GodelDummett2DeMorgan: DeMorganPropositionalLogic L Gamma.",
            "VernacInstance",
            "223efd08fa9d1d34842342d29834c1cd89e32a8c"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "AddSequentCalculus Gamma.",
            "VernacExtend",
            "29cadf68780773a48c1233fdefc6ccf727f07b82"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite provable_derivable.",
            "VernacExtend",
            "c3e3d0b03abdee59ff63b6e9286ddf71eaf4872e"
        ],
        [
            "set (Phi := empty_context).",
            "VernacExtend",
            "cb9ca5868d557c8d19cf6582f4a1bc120e95aeaa"
        ],
        [
            "clearbody Phi.",
            "VernacExtend",
            "b9e01431ba6de045c45ba285a0da74a97f1e9226"
        ],
        [
            "pose proof impp_choice x (~~ x).",
            "VernacExtend",
            "e53ad86a19a5c255e9f3c8223e5a20b95a292833"
        ],
        [
            "apply deduction_weaken0 with (Phi0 := Phi) in H.",
            "VernacExtend",
            "0bb476bf1c04b4c68b120deb46371990597c4be5"
        ],
        [
            "assert (Phi |-- (x --> ~~ x) --> (x --> FF)).",
            "VernacExtend",
            "fb95090148342021a216f497790422e2e499d36c"
        ],
        [
            "Focus 1.",
            "VernacFocus",
            "2e70fb9f135d16f7a4a2728604ca85344cf984cd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- deduction_theorem.",
            "VernacExtend",
            "82e4824d472c9145a3058f9e9721dece1b211b23"
        ],
        [
            "rewrite <- deduction_theorem.",
            "VernacExtend",
            "82e4824d472c9145a3058f9e9721dece1b211b23"
        ],
        [
            "eapply deduction_weaken with (Union _ (Union _ (Union _ Phi (Singleton _ (x --> ~~ x))) (Singleton _ x)) (Singleton _ x)).",
            "VernacExtend",
            "7ac47994822b9ae93a0f5c004fc6754d3d2efa36"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros y ?.",
            "VernacExtend",
            "45ab864e700bd348c2ed3a83b1953453a957db79"
        ],
        [
            "destruct H0; [| right; auto].",
            "VernacExtend",
            "4715f6b7afcf03427415a40cc414579d7b581d63"
        ],
        [
            "destruct H0; [| right; auto].",
            "VernacExtend",
            "4715f6b7afcf03427415a40cc414579d7b581d63"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite deduction_theorem.",
            "VernacExtend",
            "05b90529ae652fdb00cc1cdb600b554b29c03091"
        ],
        [
            "rewrite deduction_theorem.",
            "VernacExtend",
            "05b90529ae652fdb00cc1cdb600b554b29c03091"
        ],
        [
            "apply derivable_assum1.",
            "VernacExtend",
            "a7226caa5c054a6e0737cc64e24f872e29e2f4dd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Unfocus.",
            "VernacUnfocus",
            "bedcc8cdbc0e659ad45d78624bfea9462efb82d1"
        ],
        [
            "assert (Phi |-- (~~ x --> x) --> (~~ x --> FF)).",
            "VernacExtend",
            "26c2ed15759bca0ff78dccc95d4172f401822cb0"
        ],
        [
            "Focus 1.",
            "VernacFocus",
            "2e70fb9f135d16f7a4a2728604ca85344cf984cd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- deduction_theorem.",
            "VernacExtend",
            "82e4824d472c9145a3058f9e9721dece1b211b23"
        ],
        [
            "pose proof derivable_assum1 Phi (~~ x --> x).",
            "VernacExtend",
            "476627e32e0b4361f80807680644d84caec1043b"
        ],
        [
            "set (Psi := Union expr Phi (Singleton expr (~~ x --> x))) in H1 |- *; clearbody Psi.",
            "VernacExtend",
            "8ce44da519628520efe0949e940a27f3bf12c659"
        ],
        [
            "rewrite <- deduction_theorem in H1 |- *.",
            "VernacExtend",
            "e383e9ce8d97d1335a53be8481b8098477fed13c"
        ],
        [
            "pose proof derivable_assum1 Psi (~~ x).",
            "VernacExtend",
            "afacfe0748e2a800dce4e8db42373d03eaddb4da"
        ],
        [
            "pose proof deduction_modus_ponens _ _ _ H1 H2.",
            "VernacExtend",
            "bd2a63603534b9db73def96a07e3110bac70b0ec"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Unfocus.",
            "VernacUnfocus",
            "bedcc8cdbc0e659ad45d78624bfea9462efb82d1"
        ],
        [
            "rewrite <- deduction_theorem in H0, H1.",
            "VernacExtend",
            "cb67b7f7ab61789248ca472485ea5077f5c79d31"
        ],
        [
            "apply (deduction_orp_intros1 _ _ (~~ x --> FF)) in H0.",
            "VernacExtend",
            "864be0e4dca3e30734f61e9b0f0373a10d640f92"
        ],
        [
            "apply (deduction_orp_intros2 _ (x --> FF)) in H1.",
            "VernacExtend",
            "1248f454818d051fa9cb56a0e0e49cb5e5332209"
        ],
        [
            "rewrite deduction_theorem in H0, H1.",
            "VernacExtend",
            "891eeced05557447ea963a24e7960d957b0d81f4"
        ],
        [
            "pose proof deduction_orp_elim' _ _ _ _ H0 H1.",
            "VernacExtend",
            "20daa0d9c803d9e5de96e28e63045213aba907a3"
        ],
        [
            "pose proof deduction_modus_ponens _ _ _ H H2.",
            "VernacExtend",
            "a396299d873c584ad8c8bc88372afc131f23da78"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GodelDummett.",
            "VernacEndSegment",
            "e396ef25dc2a05970cd89f91ee8711249be6f972"
        ]
    ],
    "proofs": [
        {
            "name": "MakeSequentCalculus_GodelDummettPropositionalLogic",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "unfold OpaqueProp.",
                        "VernacExtend",
                        "dccd09f116741ccea873e262abb1b54eebd66d71"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct gdpGamma; constructor; auto.",
                        "VernacExtend",
                        "31f459c7d226678f21f23667c6575702515ddc84"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}