{
    "filename": "PropositionalLogic/DeepEmbedded/Complete_Kripke.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Logic.Classical_Prop.",
            "VernacRequire",
            "9ccd680c17c6039100012bae5c1bef8ed35d228a"
        ],
        [
            "Require Import Logic.lib.Ensembles_ext.",
            "VernacRequire",
            "19fa136320dca316056a1bf8e4a3fb50fe8a2192"
        ],
        [
            "Require Import Logic.lib.Bijection.",
            "VernacRequire",
            "7bb59803be65e1b0331aebf5a5e54fdb046de426"
        ],
        [
            "Require Import Logic.lib.Countable.",
            "VernacRequire",
            "0e6db58557f71a0dcd04cbe972aeb1392ac877d1"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.GeneralLogic.KripkeModel.",
            "VernacRequire",
            "6b79568e5e653c27c6a8e7063552aa2142ab9f3f"
        ],
        [
            "Require Import Logic.GeneralLogic.ProofTheory.BasicSequentCalculus.",
            "VernacRequire",
            "f2fbc894d63ff9f72127ac59dc8b190ee459f36d"
        ],
        [
            "Require Import Logic.GeneralLogic.Semantics.Kripke.",
            "VernacRequire",
            "4f0a29ef213cb173f58f6b351c743bcacb5b71e5"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.ContextProperty.",
            "VernacRequire",
            "4c577b10b65f245cd5256f34a21c8cb66986698f"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "01895830dc7a4ab9e5c862740d0b95dfbde3605b"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.Lindenbaum.",
            "VernacRequire",
            "900d8f4a2c06d421896258623602c7b6b362955c"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.Lindenbaum_Kripke.",
            "VernacRequire",
            "b0147a13a6f79ca7a33f8e909e855716ce41cc55"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.Canonical_Kripke.",
            "VernacRequire",
            "d5bcdf5a09c1a9eec79a99a15668d87b77cb34cc"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.Complete_Kripke.",
            "VernacRequire",
            "041c62b1506308ded653d1bca3b62576aea40062"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.Minimun.",
            "VernacRequire",
            "7dd3badfb0ea34d33454f0c461fceaac94fde835"
        ],
        [
            "Require Import Logic.MinimunLogic.Semantics.Kripke.",
            "VernacRequire",
            "4fcfcd4fde2d735d73bfaf30e9c1caf49711101e"
        ],
        [
            "Require Import Logic.MinimunLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "9198e08651938b4b127c1a31fcf2cef11fad9c9b"
        ],
        [
            "Require Import Logic.MinimunLogic.Complete.Lindenbaum_Kripke.",
            "VernacRequire",
            "02f4dd4e6fa141be6f442d91a352e116d36675c0"
        ],
        [
            "Require Import Logic.MinimunLogic.Complete.Truth_Kripke.",
            "VernacRequire",
            "cbad35089afd82d1cf5ac5ab82d5a66b10abb3d2"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Intuitionistic.",
            "VernacRequire",
            "918be0c1da11c6e84f2fca83e0414062df4a6509"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.DeMorgan.",
            "VernacRequire",
            "979253b4e51bd4c70a2820690cbe8456571aeec4"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.GodelDummett.",
            "VernacRequire",
            "6b75b7bbc32a6656be72ad029a1da066beffebf4"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Classical.",
            "VernacRequire",
            "9db43e6b1f1b9e4d12563fea4db9562a4e6fcb7d"
        ],
        [
            "Require Import Logic.PropositionalLogic.Semantics.Kripke.",
            "VernacRequire",
            "ca0341362accf77b79eee54fec205c480dd1c1bd"
        ],
        [
            "Require Import Logic.PropositionalLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "37347c25f3b23188e0cd586c72d9be961cc359ea"
        ],
        [
            "Require Import Logic.PropositionalLogic.Complete.Lindenbaum_Kripke.",
            "VernacRequire",
            "5fd67ba4714379ff8d332fa979c88c4763bc45e9"
        ],
        [
            "Require Import Logic.PropositionalLogic.Complete.Truth_Kripke.",
            "VernacRequire",
            "5ceec8702d17ae6d1d900af2eecf1ede310c7107"
        ],
        [
            "Require Import Logic.PropositionalLogic.Complete.Canonical_Kripke.",
            "VernacRequire",
            "914d75579d014173b95cc6e8726ec824085898c5"
        ],
        [
            "Require Logic.PropositionalLogic.DeepEmbedded.PropositionalLanguage.",
            "VernacRequire",
            "354e2e11eab880e8ff1b3892cc98600194f45870"
        ],
        [
            "Require Logic.PropositionalLogic.DeepEmbedded.ProofTheories.",
            "VernacRequire",
            "79b7e857c07a450c782b0c163012b1e6c66bfa1e"
        ],
        [
            "Require Logic.PropositionalLogic.DeepEmbedded.KripkeSemantics.",
            "VernacRequire",
            "688d04e925b0cde14e566fd8e3f299660de44b86"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Local Open Scope kripke_model.",
            "VernacOpenCloseScope",
            "e49ee31afd7da8031602e71d800a363615169ff7"
        ],
        [
            "Local Open Scope kripke_model_class.",
            "VernacOpenCloseScope",
            "9c8cc313b368a0ea960d699dfc4b131e91c3cc48"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Import KripkeModelFamilyNotation.",
            "VernacImport",
            "e1b9787d5646dac924687ed660f3c109e8d952dd"
        ],
        [
            "Import KripkeModelNotation_Intuitionistic.",
            "VernacImport",
            "d7b7fe443374144a34554b0fe36caedd27cfce5b"
        ],
        [
            "Import KripkeModelClass.",
            "VernacImport",
            "3755e3315d5fa82755ccb16532d6d9d04e331574"
        ],
        [
            "Section Complete.",
            "VernacBeginSection",
            "618f5c87580d76567cfdf26c065fb4a894be1b95"
        ],
        [
            "Context {Sigma: PropositionalLanguage.PropositionalVariables} {CV: Countable PropositionalLanguage.Var}.",
            "VernacContext",
            "014b524c2154419944c1f337215b07855bebbfed"
        ],
        [
            "Existing Instances PropositionalLanguage.L PropositionalLanguage.minL PropositionalLanguage.pL.",
            "VernacDeclareInstances",
            "a3b962c7807a75565bfcd7ceed638ea90a3809cc"
        ],
        [
            "Existing Instances KripkeSemantics.MD KripkeSemantics.kMD KripkeSemantics.R KripkeSemantics.SM KripkeSemantics.kminSM KripkeSemantics.kpSM.",
            "VernacDeclareInstances",
            "a7040559763292117dd328353138fbf477fe399b"
        ],
        [
            "Section General_Completeness.",
            "VernacBeginSection",
            "7fac6a299cada702b7508dff08e01c45012a672d"
        ],
        [
            "Context {Gamma: ProofTheory PropositionalLanguage.L}.",
            "VernacContext",
            "9e4c653952c1a3bf0013d36bde5799cfe7c1d99b"
        ],
        [
            "Definition cP : context -> Prop := Intersection _ (Intersection _ derivable_closed orp_witnessed) consistent.",
            "VernacDefinition",
            "85e5ab59f31fa8c24c567a69eaf6e9f7df73a1fb"
        ],
        [
            "Lemma AL_DC: at_least derivable_closed cP.",
            "VernacStartTheoremProof",
            "5b35ddaa0e737a152e6facf014b6d5393021c562"
        ],
        [
            "solve_at_least.",
            "VernacExtend",
            "9eab0178c8b7eca91229f90d2a572dca17514a13"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma AL_OW: at_least orp_witnessed cP.",
            "VernacStartTheoremProof",
            "5738fa023e2931f808cb9f4b8fca621e71640d51"
        ],
        [
            "solve_at_least.",
            "VernacExtend",
            "9eab0178c8b7eca91229f90d2a572dca17514a13"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma AL_CONSI: at_least consistent cP.",
            "VernacStartTheoremProof",
            "458cddd3ff773dfb5b8f8ef148e35bac2f04c699"
        ],
        [
            "solve_at_least.",
            "VernacExtend",
            "9eab0178c8b7eca91229f90d2a572dca17514a13"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Context {SC: NormalSequentCalculus _ Gamma} {bSC: BasicSequentCalculus _ Gamma} {fwSC: FiniteWitnessedSequentCalculus _ Gamma} {minSC: MinimunSequentCalculus _ Gamma} {ipSC: IntuitionisticPropositionalSequentCalculus _ Gamma} {AX: NormalAxiomatization _ Gamma} {minAX: MinimunAxiomatization _ Gamma} {ipGamma: IntuitionisticPropositionalLogic _ Gamma}.",
            "VernacContext",
            "dd2dd4f802d7c337cff767ec1094684272df7314"
        ],
        [
            "Lemma LIN_CD: forall x: expr, Lindenbaum_constructable (cannot_derive x) cP.",
            "VernacStartTheoremProof",
            "3bdf9a076059264bfa362d6556371eec674d4472"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Lindenbaum_constructable_suffice; auto.",
            "VernacExtend",
            "c24a4bf970fc8f7b997ecd853b303a9a18ecde39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply PropositionalLanguage.formula_countable; auto.",
            "VernacExtend",
            "cbb8651c3a115f7d543dba3137c12539218b59eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Lindenbaum_preserves_cannot_derive.",
            "VernacExtend",
            "13544c6e6df1538712858d8f5beabdae1f05c203"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold cP.",
            "VernacExtend",
            "cd70c0a2a89bdf917e237a208b0c4273ac29cb24"
        ],
        [
            "repeat apply Lindenbaum_ensures_by_conjunct.",
            "VernacExtend",
            "4bdf2148ca0a54733d35c6b0918c3a447b96ab65"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Lindenbaum_cannot_derive_ensures_derivable_closed.",
            "VernacExtend",
            "f3c3ccceea34b1c2a720f3f6a9f5f43ff36525d7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Lindenbaum_cannot_derive_ensures_orp_witnessed.",
            "VernacExtend",
            "8839f0c67e4f82365908565226a2517b68582c38"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Lindenbaum_cannot_derive_ensures_consistent.",
            "VernacExtend",
            "96bb1841cc30a8aac97c30736df62fad68ef878c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition canonical_frame: KripkeSemantics.frame := KripkeSemantics.Build_frame (sig cP) (fun a b => Included _ (proj1_sig a) (proj1_sig b)).",
            "VernacDefinition",
            "560806a7e5bb8ef4e3f5fc7dd8739056d95a44ab"
        ],
        [
            "Definition canonical_eval: PropositionalLanguage.Var -> KripkeSemantics.sem canonical_frame := fun p a => proj1_sig a (PropositionalLanguage.varp p).",
            "VernacDefinition",
            "16f72a21e8aaead351121aa6c62341f6fcbd4074"
        ],
        [
            "Definition canonical_Kmodel: @Kmodel KripkeSemantics.MD KripkeSemantics.kMD := KripkeSemantics.Build_Kmodel canonical_frame canonical_eval.",
            "VernacDefinition",
            "ea264d83f90127eb295002cd75d61e9b5c106bdc"
        ],
        [
            "Definition rel: bijection (Kworlds canonical_Kmodel) (sig cP) := bijection_refl.",
            "VernacDefinition",
            "b35f85a0fe290f9edbc5ac70acb4f39290e3ccac"
        ],
        [
            "Definition H_R: forall m n Phi Psi, rel m Phi -> rel n Psi -> (m <= n <-> Included _ (proj1_sig Phi) (proj1_sig Psi)).",
            "VernacDefinition",
            "cb8de7a39e557cd1a9d6891d4c8b5e96145ea63a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change (m = Phi) in H.",
            "VernacExtend",
            "0ec6f4f934b97aa6bfdfc780e56825153a383776"
        ],
        [
            "change (n = Psi) in H0.",
            "VernacExtend",
            "49969171c9b66439730f51658d4e64372975f642"
        ],
        [
            "subst; reflexivity.",
            "VernacExtend",
            "e0e2f5d2bb0ba834bbb8fede1abdf8af65f1ce87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Existing Instances PropositionalLanguage.L PropositionalLanguage.minL PropositionalLanguage.pL.",
            "VernacDeclareInstances",
            "a3b962c7807a75565bfcd7ceed638ea90a3809cc"
        ],
        [
            "Lemma TRUTH: forall x: expr, forall m Phi, rel m Phi -> (KRIPKE: canonical_Kmodel, m |= x <-> proj1_sig Phi x).",
            "VernacStartTheoremProof",
            "76c21a3a4bf3fc0c14bbe180c9ba45ef802ef2dc"
        ],
        [
            "induction x.",
            "VernacExtend",
            "8d91f99bf5ea35862c5721d2308df13dc2f7aeed"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (truth_lemma_andp cP rel AL_DC x1 x2 IHx1 IHx2).",
            "VernacExtend",
            "a823e6de8339c5086795223e35f1b35b4e5a8920"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (truth_lemma_orp cP rel AL_DC AL_OW x1 x2 IHx1 IHx2).",
            "VernacExtend",
            "59fb8be8085151f2fb86f74fde8b9b84055938be"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (truth_lemma_impp cP rel H_R AL_DC LIN_CD x1 x2 IHx1 IHx2).",
            "VernacExtend",
            "22e57ab34af8853a55f370c0ad79284833c35c50"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (truth_lemma_falsep cP rel AL_CONSI).",
            "VernacExtend",
            "2d545ec054fba57e1300eae9aec5a1e1c8f1dcbd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros; change (m = Phi) in H; subst; reflexivity.",
            "VernacExtend",
            "b07f9bc4b5990d33bb85cf3041aa3392195fb07f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End General_Completeness.",
            "VernacEndSegment",
            "74a3ff96db0adb6db4c85fe94ca2bf739be36b95"
        ],
        [
            "Section Intuitionistic_Completeness.",
            "VernacBeginSection",
            "91c5583e4de8671ab0bcafda5a06dd29435dca82"
        ],
        [
            "Existing Instances ProofTheories.IntuitionisticPropositionalLogic.G ProofTheories.IntuitionisticPropositionalLogic.AX ProofTheories.IntuitionisticPropositionalLogic.minAX ProofTheories.IntuitionisticPropositionalLogic.ipG.",
            "VernacDeclareInstances",
            "0072009534a19d1989d37a2124b3e760f3a0c02f"
        ],
        [
            "Existing Instances Axiomatization2SequentCalculus_SC Axiomatization2SequentCalculus_bSC Axiomatization2SequentCalculus_fwSC Axiomatization2SequentCalculus_minSC Axiomatization2SequentCalculus_ipSC.",
            "VernacDeclareInstances",
            "145b02cde0f8a5e459cfa54ca8bf724ce4d1d6b6"
        ],
        [
            "Import Logic.PropositionalLogic.DeepEmbedded.KripkeSemantics.",
            "VernacImport",
            "3e605777202218926065a015887edcb20d509b67"
        ],
        [
            "Theorem complete_intuitionistic_Kripke_all: strongly_complete ProofTheories.IntuitionisticPropositionalLogic.G KripkeSemantics.SM (KripkeModelClass _ (Kmodel_Monotonic + Kmodel_PreOrder)).",
            "VernacStartTheoremProof",
            "6e5ca5edbebd939d6fc3c3ba4d76a983b186d20e"
        ],
        [
            "apply (@general_completeness _ _ _ _ _ _ _ _ cP rel LIN_CD TRUTH).",
            "VernacExtend",
            "35332b430a50ae10d9c41ec4b59420ef0a2119c1"
        ],
        [
            "constructor; hnf.",
            "VernacExtend",
            "a94c05acb520dc67a12d56e8a5a9612bfa96358c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exact (denote_monotonic cP rel H_R (PropositionalLanguage.varp v) (TRUTH (PropositionalLanguage.varp v))).",
            "VernacExtend",
            "cebb049b9cd85305918a108a65e0b99f8684c619"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (po_R cP rel H_R).",
            "VernacExtend",
            "8fbb731690597f85e8e31473f70b2b81b9593651"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Intuitionistic_Completeness.",
            "VernacEndSegment",
            "64bc350d1a88338b1c4b5406985213901884b291"
        ],
        [
            "Section DeMorgan_Completeness.",
            "VernacBeginSection",
            "e0c4ea745faec94af93f7290217e0ff8444f168d"
        ],
        [
            "Existing Instances ProofTheories.DeMorganPropositionalLogic.G ProofTheories.DeMorganPropositionalLogic.AX ProofTheories.DeMorganPropositionalLogic.minAX ProofTheories.DeMorganPropositionalLogic.ipG ProofTheories.DeMorganPropositionalLogic.dmpG.",
            "VernacDeclareInstances",
            "eeb721cbe3e1a9a28a2a88a301153e739d260c38"
        ],
        [
            "Existing Instances Axiomatization2SequentCalculus_SC Axiomatization2SequentCalculus_bSC Axiomatization2SequentCalculus_fwSC Axiomatization2SequentCalculus_minSC Axiomatization2SequentCalculus_ipSC.",
            "VernacDeclareInstances",
            "145b02cde0f8a5e459cfa54ca8bf724ce4d1d6b6"
        ],
        [
            "Import Logic.PropositionalLogic.DeepEmbedded.KripkeSemantics.",
            "VernacImport",
            "3e605777202218926065a015887edcb20d509b67"
        ],
        [
            "Theorem complete_DeMorgan_Kripke_branch_join: strongly_complete ProofTheories.DeMorganPropositionalLogic.G KripkeSemantics.SM (KripkeModelClass _ (Kmodel_Monotonic + Kmodel_PreOrder + Kmodel_BranchJoin)).",
            "VernacStartTheoremProof",
            "c46d4df5de8241e35f340f2fadb58d49daa9d774"
        ],
        [
            "apply (@general_completeness _ _ _ _ _ _ _ _ cP rel LIN_CD TRUTH).",
            "VernacExtend",
            "35332b430a50ae10d9c41ec4b59420ef0a2119c1"
        ],
        [
            "constructor; [split |]; hnf.",
            "VernacExtend",
            "7eff96d9b3337ffffab91bb6b8e4231813a80b3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exact (denote_monotonic cP rel H_R (PropositionalLanguage.varp v) (TRUTH (PropositionalLanguage.varp v))).",
            "VernacExtend",
            "cebb049b9cd85305918a108a65e0b99f8684c619"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (po_R cP rel H_R).",
            "VernacExtend",
            "8fbb731690597f85e8e31473f70b2b81b9593651"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (DeMorgan_canonical_branch_join cP rel H_R AL_DC AL_OW AL_CONSI LIN_CD).",
            "VernacExtend",
            "5f7a16f037715e79d450d7f74b6a17aacf4abb92"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DeMorgan_Completeness.",
            "VernacEndSegment",
            "a7fdb04246b874b96ce4c7321cd64ae052c04a9d"
        ],
        [
            "Section GodelDummett_Completeness.",
            "VernacBeginSection",
            "c23a9e41ef3db3f010d58302fc75cf102b25de91"
        ],
        [
            "Existing Instances ProofTheories.GodelDummettPropositionalLogic.G ProofTheories.GodelDummettPropositionalLogic.AX ProofTheories.GodelDummettPropositionalLogic.minAX ProofTheories.GodelDummettPropositionalLogic.ipG ProofTheories.GodelDummettPropositionalLogic.gdpG.",
            "VernacDeclareInstances",
            "238b9677a9aa203dd3e581aafc5182ae0d08d9ab"
        ],
        [
            "Existing Instances Axiomatization2SequentCalculus_SC Axiomatization2SequentCalculus_bSC Axiomatization2SequentCalculus_fwSC Axiomatization2SequentCalculus_minSC Axiomatization2SequentCalculus_ipSC.",
            "VernacDeclareInstances",
            "145b02cde0f8a5e459cfa54ca8bf724ce4d1d6b6"
        ],
        [
            "Import Logic.PropositionalLogic.DeepEmbedded.KripkeSemantics.",
            "VernacImport",
            "3e605777202218926065a015887edcb20d509b67"
        ],
        [
            "Theorem complete_GodelDummett_Kripke_no_branch: strongly_complete ProofTheories.GodelDummettPropositionalLogic.G KripkeSemantics.SM (KripkeModelClass _ (Kmodel_Monotonic + Kmodel_PreOrder + Kmodel_NoBranch)).",
            "VernacStartTheoremProof",
            "3cbb1dd4471374fc03932e543d3ebb4adaf7ea6e"
        ],
        [
            "apply (@general_completeness _ _ _ _ _ _ _ _ cP rel LIN_CD TRUTH).",
            "VernacExtend",
            "35332b430a50ae10d9c41ec4b59420ef0a2119c1"
        ],
        [
            "constructor; [split |]; hnf.",
            "VernacExtend",
            "7eff96d9b3337ffffab91bb6b8e4231813a80b3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exact (denote_monotonic cP rel H_R (PropositionalLanguage.varp v) (TRUTH (PropositionalLanguage.varp v))).",
            "VernacExtend",
            "cebb049b9cd85305918a108a65e0b99f8684c619"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (po_R cP rel H_R).",
            "VernacExtend",
            "8fbb731690597f85e8e31473f70b2b81b9593651"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (GodelDummett_canonical_no_branch cP rel H_R AL_DC AL_OW).",
            "VernacExtend",
            "fe89c3e049b8d40db6c6a7156d639aef204378b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GodelDummett_Completeness.",
            "VernacEndSegment",
            "2e8d88f81243b28e9c59c804dc24bb8a2bea360f"
        ],
        [
            "Section Classical_Completeness.",
            "VernacBeginSection",
            "bd539f1842e06335f2c3cb08132859d67adc84e8"
        ],
        [
            "Import Logic.PropositionalLogic.DeepEmbedded.KripkeSemantics.",
            "VernacImport",
            "3e605777202218926065a015887edcb20d509b67"
        ],
        [
            "Existing Instances ProofTheories.ClassicalPropositionalLogic.G ProofTheories.ClassicalPropositionalLogic.AX ProofTheories.ClassicalPropositionalLogic.minAX ProofTheories.ClassicalPropositionalLogic.ipG ProofTheories.ClassicalPropositionalLogic.cpG.",
            "VernacDeclareInstances",
            "25e96f52762f4c4ba3104aa7de79496a3c883ab3"
        ],
        [
            "Existing Instances Axiomatization2SequentCalculus_SC Axiomatization2SequentCalculus_bSC Axiomatization2SequentCalculus_fwSC Axiomatization2SequentCalculus_minSC Axiomatization2SequentCalculus_ipSC Axiomatization2SequentCalculus_cpSC.",
            "VernacDeclareInstances",
            "c14c08d3e752818c97805afdaff8f92b51af01a2"
        ],
        [
            "Theorem complete_Classical_Kripke_identity: strongly_complete ProofTheories.ClassicalPropositionalLogic.G KripkeSemantics.SM (KripkeModelClass _ (Kmodel_Monotonic + Kmodel_PreOrder + Kmodel_Identity)).",
            "VernacStartTheoremProof",
            "d07b93e7f6293575774a8cd9a1e696e32f613bba"
        ],
        [
            "apply (@general_completeness _ _ _ _ _ _ _ _ cP rel LIN_CD TRUTH).",
            "VernacExtend",
            "35332b430a50ae10d9c41ec4b59420ef0a2119c1"
        ],
        [
            "constructor; [split |]; hnf.",
            "VernacExtend",
            "7eff96d9b3337ffffab91bb6b8e4231813a80b3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exact (denote_monotonic cP rel H_R (PropositionalLanguage.varp v) (TRUTH (PropositionalLanguage.varp v))).",
            "VernacExtend",
            "cebb049b9cd85305918a108a65e0b99f8684c619"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (po_R cP rel H_R).",
            "VernacExtend",
            "8fbb731690597f85e8e31473f70b2b81b9593651"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (classical_canonical_ident cP rel H_R AL_DC AL_OW AL_CONSI).",
            "VernacExtend",
            "2fccdb241d24e25df7e9ebdda4ccb15a08314175"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Classical_Completeness.",
            "VernacEndSegment",
            "e619e61eee72a36adaed62d74fa5855ac621e167"
        ],
        [
            "End Complete.",
            "VernacEndSegment",
            "0a4ba3dd0ad3c00d9559c9c3908c15032790b9c4"
        ]
    ],
    "proofs": [
        {
            "name": "AL_DC",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "solve_at_least.",
                        "VernacExtend",
                        "9eab0178c8b7eca91229f90d2a572dca17514a13"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "AL_OW",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "solve_at_least.",
                        "VernacExtend",
                        "9eab0178c8b7eca91229f90d2a572dca17514a13"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "AL_CONSI",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "solve_at_least.",
                        "VernacExtend",
                        "9eab0178c8b7eca91229f90d2a572dca17514a13"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LIN_CD",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Lindenbaum_constructable_suffice; auto.",
                        "VernacExtend",
                        "c24a4bf970fc8f7b997ecd853b303a9a18ecde39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply PropositionalLanguage.formula_countable; auto.",
                        "VernacExtend",
                        "cbb8651c3a115f7d543dba3137c12539218b59eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Lindenbaum_preserves_cannot_derive.",
                        "VernacExtend",
                        "13544c6e6df1538712858d8f5beabdae1f05c203"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold cP.",
                        "VernacExtend",
                        "cd70c0a2a89bdf917e237a208b0c4273ac29cb24"
                    ]
                },
                {
                    "command": [
                        "repeat apply Lindenbaum_ensures_by_conjunct.",
                        "VernacExtend",
                        "4bdf2148ca0a54733d35c6b0918c3a447b96ab65"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Lindenbaum_cannot_derive_ensures_derivable_closed.",
                        "VernacExtend",
                        "f3c3ccceea34b1c2a720f3f6a9f5f43ff36525d7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Lindenbaum_cannot_derive_ensures_orp_witnessed.",
                        "VernacExtend",
                        "8839f0c67e4f82365908565226a2517b68582c38"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Lindenbaum_cannot_derive_ensures_consistent.",
                        "VernacExtend",
                        "96bb1841cc30a8aac97c30736df62fad68ef878c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "H_R",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change (m = Phi) in H.",
                        "VernacExtend",
                        "0ec6f4f934b97aa6bfdfc780e56825153a383776"
                    ]
                },
                {
                    "command": [
                        "change (n = Psi) in H0.",
                        "VernacExtend",
                        "49969171c9b66439730f51658d4e64372975f642"
                    ]
                },
                {
                    "command": [
                        "subst; reflexivity.",
                        "VernacExtend",
                        "e0e2f5d2bb0ba834bbb8fede1abdf8af65f1ce87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TRUTH",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "induction x.",
                        "VernacExtend",
                        "8d91f99bf5ea35862c5721d2308df13dc2f7aeed"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (truth_lemma_andp cP rel AL_DC x1 x2 IHx1 IHx2).",
                        "VernacExtend",
                        "a823e6de8339c5086795223e35f1b35b4e5a8920"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (truth_lemma_orp cP rel AL_DC AL_OW x1 x2 IHx1 IHx2).",
                        "VernacExtend",
                        "59fb8be8085151f2fb86f74fde8b9b84055938be"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (truth_lemma_impp cP rel H_R AL_DC LIN_CD x1 x2 IHx1 IHx2).",
                        "VernacExtend",
                        "22e57ab34af8853a55f370c0ad79284833c35c50"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (truth_lemma_falsep cP rel AL_CONSI).",
                        "VernacExtend",
                        "2d545ec054fba57e1300eae9aec5a1e1c8f1dcbd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros; change (m = Phi) in H; subst; reflexivity.",
                        "VernacExtend",
                        "b07f9bc4b5990d33bb85cf3041aa3392195fb07f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "complete_intuitionistic_Kripke_all",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "apply (@general_completeness _ _ _ _ _ _ _ _ cP rel LIN_CD TRUTH).",
                        "VernacExtend",
                        "35332b430a50ae10d9c41ec4b59420ef0a2119c1"
                    ]
                },
                {
                    "command": [
                        "constructor; hnf.",
                        "VernacExtend",
                        "a94c05acb520dc67a12d56e8a5a9612bfa96358c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exact (denote_monotonic cP rel H_R (PropositionalLanguage.varp v) (TRUTH (PropositionalLanguage.varp v))).",
                        "VernacExtend",
                        "cebb049b9cd85305918a108a65e0b99f8684c619"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (po_R cP rel H_R).",
                        "VernacExtend",
                        "8fbb731690597f85e8e31473f70b2b81b9593651"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "complete_DeMorgan_Kripke_branch_join",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "apply (@general_completeness _ _ _ _ _ _ _ _ cP rel LIN_CD TRUTH).",
                        "VernacExtend",
                        "35332b430a50ae10d9c41ec4b59420ef0a2119c1"
                    ]
                },
                {
                    "command": [
                        "constructor; [split |]; hnf.",
                        "VernacExtend",
                        "7eff96d9b3337ffffab91bb6b8e4231813a80b3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exact (denote_monotonic cP rel H_R (PropositionalLanguage.varp v) (TRUTH (PropositionalLanguage.varp v))).",
                        "VernacExtend",
                        "cebb049b9cd85305918a108a65e0b99f8684c619"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (po_R cP rel H_R).",
                        "VernacExtend",
                        "8fbb731690597f85e8e31473f70b2b81b9593651"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (DeMorgan_canonical_branch_join cP rel H_R AL_DC AL_OW AL_CONSI LIN_CD).",
                        "VernacExtend",
                        "5f7a16f037715e79d450d7f74b6a17aacf4abb92"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "complete_GodelDummett_Kripke_no_branch",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "apply (@general_completeness _ _ _ _ _ _ _ _ cP rel LIN_CD TRUTH).",
                        "VernacExtend",
                        "35332b430a50ae10d9c41ec4b59420ef0a2119c1"
                    ]
                },
                {
                    "command": [
                        "constructor; [split |]; hnf.",
                        "VernacExtend",
                        "7eff96d9b3337ffffab91bb6b8e4231813a80b3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exact (denote_monotonic cP rel H_R (PropositionalLanguage.varp v) (TRUTH (PropositionalLanguage.varp v))).",
                        "VernacExtend",
                        "cebb049b9cd85305918a108a65e0b99f8684c619"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (po_R cP rel H_R).",
                        "VernacExtend",
                        "8fbb731690597f85e8e31473f70b2b81b9593651"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (GodelDummett_canonical_no_branch cP rel H_R AL_DC AL_OW).",
                        "VernacExtend",
                        "fe89c3e049b8d40db6c6a7156d639aef204378b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "complete_Classical_Kripke_identity",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "apply (@general_completeness _ _ _ _ _ _ _ _ cP rel LIN_CD TRUTH).",
                        "VernacExtend",
                        "35332b430a50ae10d9c41ec4b59420ef0a2119c1"
                    ]
                },
                {
                    "command": [
                        "constructor; [split |]; hnf.",
                        "VernacExtend",
                        "7eff96d9b3337ffffab91bb6b8e4231813a80b3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exact (denote_monotonic cP rel H_R (PropositionalLanguage.varp v) (TRUTH (PropositionalLanguage.varp v))).",
                        "VernacExtend",
                        "cebb049b9cd85305918a108a65e0b99f8684c619"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (po_R cP rel H_R).",
                        "VernacExtend",
                        "8fbb731690597f85e8e31473f70b2b81b9593651"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (classical_canonical_ident cP rel H_R AL_DC AL_OW AL_CONSI).",
                        "VernacExtend",
                        "2fccdb241d24e25df7e9ebdda4ccb15a08314175"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}