{
    "filename": "PropositionalLogic/Complete/ContextProperty_Trivial.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Logic.FunctionalExtensionality.",
            "VernacRequire",
            "995f7da90b97352c349ef6dde6ab058f3b7f46f2"
        ],
        [
            "Require Import Coq.Logic.Classical_Prop.",
            "VernacRequire",
            "9ccd680c17c6039100012bae5c1bef8ed35d228a"
        ],
        [
            "Require Import Coq.Logic.Classical_Pred_Type.",
            "VernacRequire",
            "2d2ddc9b783f2ae37bb8ab62203e8a65a17b70b1"
        ],
        [
            "Require Import Logic.lib.Bijection.",
            "VernacRequire",
            "7bb59803be65e1b0331aebf5a5e54fdb046de426"
        ],
        [
            "Require Import Logic.lib.Countable.",
            "VernacRequire",
            "0e6db58557f71a0dcd04cbe972aeb1392ac877d1"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.GeneralLogic.ProofTheory.BasicSequentCalculus.",
            "VernacRequire",
            "f2fbc894d63ff9f72127ac59dc8b190ee459f36d"
        ],
        [
            "Require Import Logic.GeneralLogic.KripkeModel.",
            "VernacRequire",
            "6b79568e5e653c27c6a8e7063552aa2142ab9f3f"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.ContextProperty.",
            "VernacRequire",
            "4c577b10b65f245cd5256f34a21c8cb66986698f"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "01895830dc7a4ab9e5c862740d0b95dfbde3605b"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.ContextProperty_Trivial.",
            "VernacRequire",
            "be9c38cf18386bf87514350e3d50d61a778788d6"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.Minimun.",
            "VernacRequire",
            "7dd3badfb0ea34d33454f0c461fceaac94fde835"
        ],
        [
            "Require Import Logic.MinimunLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "9198e08651938b4b127c1a31fcf2cef11fad9c9b"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Intuitionistic.",
            "VernacRequire",
            "918be0c1da11c6e84f2fca83e0414062df4a6509"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.DeMorgan.",
            "VernacRequire",
            "979253b4e51bd4c70a2820690cbe8456571aeec4"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.GodelDummett.",
            "VernacRequire",
            "6b75b7bbc32a6656be72ad029a1da066beffebf4"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Classical.",
            "VernacRequire",
            "9db43e6b1f1b9e4d12563fea4db9562a4e6fcb7d"
        ],
        [
            "Require Import Logic.PropositionalLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "37347c25f3b23188e0cd586c72d9be961cc359ea"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Section ContextProperties.",
            "VernacBeginSection",
            "e1532071a6237ea2dd8a28d92030308122cc6675"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {Gamma: ProofTheory L} {bSC: BasicSequentCalculus L Gamma} {minSC: MinimunSequentCalculus L Gamma} {ipSC: IntuitionisticPropositionalSequentCalculus L Gamma} {cpSC: ClassicalPropositionalSequentCalculus L Gamma}.",
            "VernacContext",
            "b2642c0c6638447e4ccc7e08b832dba202ce5ca0"
        ],
        [
            "Lemma classical_derivable_spec: forall (Phi: context) (x: expr), Phi |-- x <-> ~ consistent (Union _ Phi (Singleton _ (~~ x))).",
            "VernacStartTheoremProof",
            "2bde5cfbf67d25283a190f0267e9f4734e82911a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold consistent.",
            "VernacExtend",
            "7ef9556de9b6a61f1486f40f361caac874923405"
        ],
        [
            "AddAxiomatization Gamma.",
            "VernacExtend",
            "e03ddfa665c2487732717ebeca20885316b66a7c"
        ],
        [
            "fold (@consistent L Gamma (Phi;; ~~ x)).",
            "VernacExtend",
            "e7cde676b49896488abd8a5066ff12a1a87f37ea"
        ],
        [
            "rewrite <- (double_negp x) at 1.",
            "VernacExtend",
            "2c018fbf4dfdd9f5b0cdc809d09be2773b1edc83"
        ],
        [
            "unfold negp at 1.",
            "VernacExtend",
            "55e96996a896fc0577ff61c91bc6679707466358"
        ],
        [
            "rewrite <- deduction_theorem.",
            "VernacExtend",
            "82e4824d472c9145a3058f9e9721dece1b211b23"
        ],
        [
            "rewrite consistent_spec.",
            "VernacExtend",
            "49add648bb38de38c47e68cdfd01a650e1395a22"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MCS_nonelement_inconsistent: forall (Phi: context), maximal consistent Phi -> (forall x: expr, ~ Phi x <-> Phi |-- x --> FF).",
            "VernacStartTheoremProof",
            "d74d40defcd3f83f81cfa6263f165ac97c3afa2b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "specialize (H1 (Union _ Phi (Singleton _ x))).",
            "VernacExtend",
            "2fac6303bf08337934925dbe1b4ce09e9ee45b2f"
        ],
        [
            "rewrite consistent_spec in H1.",
            "VernacExtend",
            "7df6f25cf04a6920051e75bc45dc5136290e12d5"
        ],
        [
            "rewrite deduction_theorem in H1.",
            "VernacExtend",
            "d019fc4755768d44567389d9bb82a521aad8e8b9"
        ],
        [
            "assert (Included expr Phi (Union expr Phi (Singleton expr x))) by (intros ? ?; left; auto).",
            "VernacExtend",
            "7a70c07630c298dd624867d87390e0e24eda33dc"
        ],
        [
            "assert (~ Included expr (Union expr Phi (Singleton expr x)) Phi) by (intros HH; specialize (HH x); apply H0, HH; right; constructor).",
            "VernacExtend",
            "608ef06d2881ccafd71fa0431b50ec53bda82f7b"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "pose proof derivable_assum Phi x H1.",
            "VernacExtend",
            "4a6dba94dfce164dcbf51ac3bc649049afe71e5b"
        ],
        [
            "pose proof deduction_modus_ponens _ _ _ H2 H0.",
            "VernacExtend",
            "f336f3aea3a4a1078b042fdd8e83839eae1fc9b5"
        ],
        [
            "destruct H as [? _].",
            "VernacExtend",
            "8866aea99b3fa2b02b2674afa91c0a8f539221fc"
        ],
        [
            "rewrite consistent_spec in H; auto.",
            "VernacExtend",
            "db111da06bdfa94b4617fcbbb3f22e1c5b3cc90a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maximal_consistent_orp_witnessed: forall (Phi: context), maximal consistent Phi -> orp_witnessed Phi.",
            "VernacStartTheoremProof",
            "c37b787c030eb6374449f622b4bc488e339b090e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "rewrite MCS_element_derivable in H0 by auto.",
            "VernacExtend",
            "422d72f3cf84f7a769ea4823fad6f0c304c9fca0"
        ],
        [
            "apply NNPP; intro.",
            "VernacExtend",
            "55e5f4eb66528dc4c7274b2b611cda0433510c40"
        ],
        [
            "apply not_or_and in H1.",
            "VernacExtend",
            "bafc3c6041e94cdeeee8aa348328717452d2012b"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "rewrite MCS_nonelement_inconsistent in H1, H2 by eauto.",
            "VernacExtend",
            "55a436d3fdb0618d96187888dd6ecb687e7c9322"
        ],
        [
            "destruct H as [? _]; rewrite consistent_spec in H.",
            "VernacExtend",
            "571fc6da1c63695707d12680b02e9f4b0c0bc0dd"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply deduction_modus_ponens; [exact H0 |].",
            "VernacExtend",
            "c3ea621fe29875b6d866aa719f2df3e89de2a420"
        ],
        [
            "apply deduction_orp_elim'; auto.",
            "VernacExtend",
            "6699159c6df55caae3feab6161daf9b66da954e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MCS_andp_iff: forall (Phi: context), maximal consistent Phi -> (forall x y: expr, Phi (x && y) <-> (Phi x /\\ Phi y)).",
            "VernacStartTheoremProof",
            "ebda1b237f8fb400be7cdedb7ea823fe8cd1de7b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply maximal_consistent_derivable_closed in H.",
            "VernacExtend",
            "09c2ed8e98ee9aefe22087dd8a1b02e8fedf9fe0"
        ],
        [
            "apply DCS_andp_iff; auto.",
            "VernacExtend",
            "b466ea5b0708c516cf6d335b77aca74833e25b59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MCS_orp_iff: forall (Phi: context), maximal consistent Phi -> (forall x y: expr, Phi (x || y) <-> (Phi x \\/ Phi y)).",
            "VernacStartTheoremProof",
            "365e39b7e08cb98f160aa25f23628b8ee9dc661f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply DCS_orp_iff; auto.",
            "VernacExtend",
            "2548bdccce026794d246b7030bda6f3a3bce91e0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply maximal_consistent_derivable_closed; auto.",
            "VernacExtend",
            "6905ca76403ad0b00430a710990c6c5bdcaf7e10"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply maximal_consistent_orp_witnessed; auto.",
            "VernacExtend",
            "d4df6e49e877aa52efa8f68d24472cf4e3a40afb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MCS_impp_iff: forall (Phi: context), maximal consistent Phi -> (forall x y: expr, Phi (x --> y) <-> (Phi x -> Phi y)).",
            "VernacStartTheoremProof",
            "1dbe5c89df7903cccbcd2e6b13a144bfbc3a5023"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite MCS_element_derivable in H0, H1 |- * by auto.",
            "VernacExtend",
            "78981abafe014581bef026ac682accc5f8440df1"
        ],
        [
            "apply (deduction_modus_ponens _ x y); auto.",
            "VernacExtend",
            "c4421d54b6cc446b6cd84e1147a108003d21f5b6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof derivable_excluded_middle Phi y.",
            "VernacExtend",
            "bc0a6a68393edd03d0701e8b7c5a64b3981b83e3"
        ],
        [
            "rewrite <- MCS_element_derivable in H1 by auto.",
            "VernacExtend",
            "afec49ac765cf4109b67e5383221cf0b462a06cb"
        ],
        [
            "rewrite MCS_orp_iff in H1 by auto.",
            "VernacExtend",
            "8d9177b56d88ada94897fefdaaad97ecef02a43f"
        ],
        [
            "pose proof derivable_excluded_middle Phi x.",
            "VernacExtend",
            "1981d7f670b2e7e68ba745b71edba863c1d7e807"
        ],
        [
            "rewrite <- MCS_element_derivable in H2 by auto.",
            "VernacExtend",
            "8586858eae0d326ff68bdefd7c7e0f6cb935be20"
        ],
        [
            "rewrite MCS_orp_iff in H2 by auto.",
            "VernacExtend",
            "1bdc0a3a093baa7e66319182bb2e2bfb3e84acaf"
        ],
        [
            "destruct H1; [| destruct H2].",
            "VernacExtend",
            "e038bd5bcafc83d49ce7707277c058d5007d0562"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite MCS_element_derivable in H1 |- * by auto.",
            "VernacExtend",
            "acdd25c54b77e9caeaa920c09464d5be536c8571"
        ],
        [
            "apply deduction_left_impp_intros; auto.",
            "VernacExtend",
            "d870ac5da147a6406f76540a00494e2a0957f7f0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply H0 in H2.",
            "VernacExtend",
            "d887f7b54fc680f0802cf0c8ef67f7262135c938"
        ],
        [
            "rewrite MCS_element_derivable in H1, H2 by auto.",
            "VernacExtend",
            "a7b34a6cde1c1598ba7d04f62ed34e300069a0b7"
        ],
        [
            "pose proof deduction_modus_ponens _ _ _ H2 H1.",
            "VernacExtend",
            "c26302114bccf4f186415426bf234c41ad5d488c"
        ],
        [
            "destruct H as [? _].",
            "VernacExtend",
            "8866aea99b3fa2b02b2674afa91c0a8f539221fc"
        ],
        [
            "rewrite consistent_spec in H; auto.",
            "VernacExtend",
            "db111da06bdfa94b4617fcbbb3f22e1c5b3cc90a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite MCS_element_derivable in H2 |- * by auto.",
            "VernacExtend",
            "f0789a5c87f3d1cc6e280d0a1f32d31ba7b7b66c"
        ],
        [
            "unfold negp in H2.",
            "VernacExtend",
            "c5cffd1086813fae9e0046aa64cd7d26d819eca6"
        ],
        [
            "rewrite <- deduction_theorem in H2 |- *.",
            "VernacExtend",
            "8750df7cdebcdd2746cba131fc9e0c9007a5eb84"
        ],
        [
            "pose proof deduction_falsep_elim _ y H2.",
            "VernacExtend",
            "c05045ce0e70cdc434efa306e40de2a9aba954fd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MCS_negp_iff: forall (Phi: context), maximal consistent Phi -> (forall x: expr, Phi (~~ x) <-> ~ Phi x).",
            "VernacStartTheoremProof",
            "050472e8ab29cf201d4107376896d54ba8a25339"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold negp.",
            "VernacExtend",
            "05b657a2d4b189a08faaf57e9c54414b9046e7f5"
        ],
        [
            "rewrite MCS_impp_iff by auto.",
            "VernacExtend",
            "46195efb74cf23024726eb146d6d46ea4d6bacd7"
        ],
        [
            "assert (~ Phi FF); [| tauto].",
            "VernacExtend",
            "803921a2a1c98253ee9fdcb8b359a56d21c427da"
        ],
        [
            "pose proof proj1 H.",
            "VernacExtend",
            "17340a9582cef210d1f0ee6d6fbb7c7bbe2bbe6f"
        ],
        [
            "rewrite consistent_spec, <- MCS_element_derivable in H0 by auto.",
            "VernacExtend",
            "3082884f85c9bfdbd07f85af90cb1faa3873f20c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma DDCS_MCS: forall (Phi: context), derivable_closed Phi -> orp_witnessed Phi -> consistent Phi -> maximal consistent Phi.",
            "VernacStartTheoremProof",
            "b1d710b6a2fec8611744cf188e118e05314b9074"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Included, Ensembles.In; intros.",
            "VernacExtend",
            "bcb3341ac78d9d71ce5e1d27022c1b442cbfb134"
        ],
        [
            "pose proof derivable_excluded_middle Phi x.",
            "VernacExtend",
            "1981d7f670b2e7e68ba745b71edba863c1d7e807"
        ],
        [
            "apply H in H5.",
            "VernacExtend",
            "ea398339b61bc7ae344817a62f28fa9cbad79787"
        ],
        [
            "apply H0 in H5.",
            "VernacExtend",
            "db40c93584133a6e75a269a4b3dd9629e0e9338e"
        ],
        [
            "destruct H5; auto.",
            "VernacExtend",
            "b9f734f26670c6cbb4ef084d12cc07899a81999a"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply H3 in H5; unfold Ensembles.In in H5.",
            "VernacExtend",
            "c743f8a44282104f2d18b46b5e9584a8053f9e34"
        ],
        [
            "rewrite consistent_spec in H2.",
            "VernacExtend",
            "38780ce7844af0708bd74755f821a0f91f398adf"
        ],
        [
            "apply H2; clear H2.",
            "VernacExtend",
            "51f44ca5050b63f25734fe947f35792609ddc6ec"
        ],
        [
            "apply derivable_assum in H4.",
            "VernacExtend",
            "d7f3702a00fc7582a918d3ce9dbca8b25915ea67"
        ],
        [
            "apply derivable_assum in H5.",
            "VernacExtend",
            "bd97d841b812b4d659678124de73d5d82c77cfb2"
        ],
        [
            "eapply deduction_modus_ponens.",
            "VernacExtend",
            "cca7ef3996b99c95ce4ddf1b70460890f97b66fc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ContextProperties.",
            "VernacEndSegment",
            "109b47cc393388f1ddaba8a2e49faab1902511ee"
        ]
    ],
    "proofs": [
        {
            "name": "classical_derivable_spec",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold consistent.",
                        "VernacExtend",
                        "7ef9556de9b6a61f1486f40f361caac874923405"
                    ]
                },
                {
                    "command": [
                        "AddAxiomatization Gamma.",
                        "VernacExtend",
                        "e03ddfa665c2487732717ebeca20885316b66a7c"
                    ]
                },
                {
                    "command": [
                        "fold (@consistent L Gamma (Phi;; ~~ x)).",
                        "VernacExtend",
                        "e7cde676b49896488abd8a5066ff12a1a87f37ea"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (double_negp x) at 1.",
                        "VernacExtend",
                        "2c018fbf4dfdd9f5b0cdc809d09be2773b1edc83"
                    ]
                },
                {
                    "command": [
                        "unfold negp at 1.",
                        "VernacExtend",
                        "55e96996a896fc0577ff61c91bc6679707466358"
                    ]
                },
                {
                    "command": [
                        "rewrite <- deduction_theorem.",
                        "VernacExtend",
                        "82e4824d472c9145a3058f9e9721dece1b211b23"
                    ]
                },
                {
                    "command": [
                        "rewrite consistent_spec.",
                        "VernacExtend",
                        "49add648bb38de38c47e68cdfd01a650e1395a22"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MCS_nonelement_inconsistent",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "specialize (H1 (Union _ Phi (Singleton _ x))).",
                        "VernacExtend",
                        "2fac6303bf08337934925dbe1b4ce09e9ee45b2f"
                    ]
                },
                {
                    "command": [
                        "rewrite consistent_spec in H1.",
                        "VernacExtend",
                        "7df6f25cf04a6920051e75bc45dc5136290e12d5"
                    ]
                },
                {
                    "command": [
                        "rewrite deduction_theorem in H1.",
                        "VernacExtend",
                        "d019fc4755768d44567389d9bb82a521aad8e8b9"
                    ]
                },
                {
                    "command": [
                        "assert (Included expr Phi (Union expr Phi (Singleton expr x))) by (intros ? ?; left; auto).",
                        "VernacExtend",
                        "7a70c07630c298dd624867d87390e0e24eda33dc"
                    ]
                },
                {
                    "command": [
                        "assert (~ Included expr (Union expr Phi (Singleton expr x)) Phi) by (intros HH; specialize (HH x); apply H0, HH; right; constructor).",
                        "VernacExtend",
                        "608ef06d2881ccafd71fa0431b50ec53bda82f7b"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "pose proof derivable_assum Phi x H1.",
                        "VernacExtend",
                        "4a6dba94dfce164dcbf51ac3bc649049afe71e5b"
                    ]
                },
                {
                    "command": [
                        "pose proof deduction_modus_ponens _ _ _ H2 H0.",
                        "VernacExtend",
                        "f336f3aea3a4a1078b042fdd8e83839eae1fc9b5"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? _].",
                        "VernacExtend",
                        "8866aea99b3fa2b02b2674afa91c0a8f539221fc"
                    ]
                },
                {
                    "command": [
                        "rewrite consistent_spec in H; auto.",
                        "VernacExtend",
                        "db111da06bdfa94b4617fcbbb3f22e1c5b3cc90a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maximal_consistent_orp_witnessed",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "rewrite MCS_element_derivable in H0 by auto.",
                        "VernacExtend",
                        "422d72f3cf84f7a769ea4823fad6f0c304c9fca0"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; intro.",
                        "VernacExtend",
                        "55e5f4eb66528dc4c7274b2b611cda0433510c40"
                    ]
                },
                {
                    "command": [
                        "apply not_or_and in H1.",
                        "VernacExtend",
                        "bafc3c6041e94cdeeee8aa348328717452d2012b"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "rewrite MCS_nonelement_inconsistent in H1, H2 by eauto.",
                        "VernacExtend",
                        "55a436d3fdb0618d96187888dd6ecb687e7c9322"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? _]; rewrite consistent_spec in H.",
                        "VernacExtend",
                        "571fc6da1c63695707d12680b02e9f4b0c0bc0dd"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "eapply deduction_modus_ponens; [exact H0 |].",
                        "VernacExtend",
                        "c3ea621fe29875b6d866aa719f2df3e89de2a420"
                    ]
                },
                {
                    "command": [
                        "apply deduction_orp_elim'; auto.",
                        "VernacExtend",
                        "6699159c6df55caae3feab6161daf9b66da954e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MCS_andp_iff",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply maximal_consistent_derivable_closed in H.",
                        "VernacExtend",
                        "09c2ed8e98ee9aefe22087dd8a1b02e8fedf9fe0"
                    ]
                },
                {
                    "command": [
                        "apply DCS_andp_iff; auto.",
                        "VernacExtend",
                        "b466ea5b0708c516cf6d335b77aca74833e25b59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MCS_orp_iff",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply DCS_orp_iff; auto.",
                        "VernacExtend",
                        "2548bdccce026794d246b7030bda6f3a3bce91e0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply maximal_consistent_derivable_closed; auto.",
                        "VernacExtend",
                        "6905ca76403ad0b00430a710990c6c5bdcaf7e10"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply maximal_consistent_orp_witnessed; auto.",
                        "VernacExtend",
                        "d4df6e49e877aa52efa8f68d24472cf4e3a40afb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MCS_impp_iff",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite MCS_element_derivable in H0, H1 |- * by auto.",
                        "VernacExtend",
                        "78981abafe014581bef026ac682accc5f8440df1"
                    ]
                },
                {
                    "command": [
                        "apply (deduction_modus_ponens _ x y); auto.",
                        "VernacExtend",
                        "c4421d54b6cc446b6cd84e1147a108003d21f5b6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof derivable_excluded_middle Phi y.",
                        "VernacExtend",
                        "bc0a6a68393edd03d0701e8b7c5a64b3981b83e3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- MCS_element_derivable in H1 by auto.",
                        "VernacExtend",
                        "afec49ac765cf4109b67e5383221cf0b462a06cb"
                    ]
                },
                {
                    "command": [
                        "rewrite MCS_orp_iff in H1 by auto.",
                        "VernacExtend",
                        "8d9177b56d88ada94897fefdaaad97ecef02a43f"
                    ]
                },
                {
                    "command": [
                        "pose proof derivable_excluded_middle Phi x.",
                        "VernacExtend",
                        "1981d7f670b2e7e68ba745b71edba863c1d7e807"
                    ]
                },
                {
                    "command": [
                        "rewrite <- MCS_element_derivable in H2 by auto.",
                        "VernacExtend",
                        "8586858eae0d326ff68bdefd7c7e0f6cb935be20"
                    ]
                },
                {
                    "command": [
                        "rewrite MCS_orp_iff in H2 by auto.",
                        "VernacExtend",
                        "1bdc0a3a093baa7e66319182bb2e2bfb3e84acaf"
                    ]
                },
                {
                    "command": [
                        "destruct H1; [| destruct H2].",
                        "VernacExtend",
                        "e038bd5bcafc83d49ce7707277c058d5007d0562"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite MCS_element_derivable in H1 |- * by auto.",
                        "VernacExtend",
                        "acdd25c54b77e9caeaa920c09464d5be536c8571"
                    ]
                },
                {
                    "command": [
                        "apply deduction_left_impp_intros; auto.",
                        "VernacExtend",
                        "d870ac5da147a6406f76540a00494e2a0957f7f0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H2.",
                        "VernacExtend",
                        "d887f7b54fc680f0802cf0c8ef67f7262135c938"
                    ]
                },
                {
                    "command": [
                        "rewrite MCS_element_derivable in H1, H2 by auto.",
                        "VernacExtend",
                        "a7b34a6cde1c1598ba7d04f62ed34e300069a0b7"
                    ]
                },
                {
                    "command": [
                        "pose proof deduction_modus_ponens _ _ _ H2 H1.",
                        "VernacExtend",
                        "c26302114bccf4f186415426bf234c41ad5d488c"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? _].",
                        "VernacExtend",
                        "8866aea99b3fa2b02b2674afa91c0a8f539221fc"
                    ]
                },
                {
                    "command": [
                        "rewrite consistent_spec in H; auto.",
                        "VernacExtend",
                        "db111da06bdfa94b4617fcbbb3f22e1c5b3cc90a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite MCS_element_derivable in H2 |- * by auto.",
                        "VernacExtend",
                        "f0789a5c87f3d1cc6e280d0a1f32d31ba7b7b66c"
                    ]
                },
                {
                    "command": [
                        "unfold negp in H2.",
                        "VernacExtend",
                        "c5cffd1086813fae9e0046aa64cd7d26d819eca6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- deduction_theorem in H2 |- *.",
                        "VernacExtend",
                        "8750df7cdebcdd2746cba131fc9e0c9007a5eb84"
                    ]
                },
                {
                    "command": [
                        "pose proof deduction_falsep_elim _ y H2.",
                        "VernacExtend",
                        "c05045ce0e70cdc434efa306e40de2a9aba954fd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MCS_negp_iff",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold negp.",
                        "VernacExtend",
                        "05b657a2d4b189a08faaf57e9c54414b9046e7f5"
                    ]
                },
                {
                    "command": [
                        "rewrite MCS_impp_iff by auto.",
                        "VernacExtend",
                        "46195efb74cf23024726eb146d6d46ea4d6bacd7"
                    ]
                },
                {
                    "command": [
                        "assert (~ Phi FF); [| tauto].",
                        "VernacExtend",
                        "803921a2a1c98253ee9fdcb8b359a56d21c427da"
                    ]
                },
                {
                    "command": [
                        "pose proof proj1 H.",
                        "VernacExtend",
                        "17340a9582cef210d1f0ee6d6fbb7c7bbe2bbe6f"
                    ]
                },
                {
                    "command": [
                        "rewrite consistent_spec, <- MCS_element_derivable in H0 by auto.",
                        "VernacExtend",
                        "3082884f85c9bfdbd07f85af90cb1faa3873f20c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}