{
    "filename": "PropositionalLogic/Complete/Truth_Trivial.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Logic.FunctionalExtensionality.",
            "VernacRequire",
            "995f7da90b97352c349ef6dde6ab058f3b7f46f2"
        ],
        [
            "Require Import Coq.Logic.Classical_Prop.",
            "VernacRequire",
            "9ccd680c17c6039100012bae5c1bef8ed35d228a"
        ],
        [
            "Require Import Coq.Logic.Classical_Pred_Type.",
            "VernacRequire",
            "2d2ddc9b783f2ae37bb8ab62203e8a65a17b70b1"
        ],
        [
            "Require Import Logic.lib.Bijection.",
            "VernacRequire",
            "7bb59803be65e1b0331aebf5a5e54fdb046de426"
        ],
        [
            "Require Import Logic.lib.Countable.",
            "VernacRequire",
            "0e6db58557f71a0dcd04cbe972aeb1392ac877d1"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.GeneralLogic.KripkeModel.",
            "VernacRequire",
            "6b79568e5e653c27c6a8e7063552aa2142ab9f3f"
        ],
        [
            "Require Import Logic.GeneralLogic.ProofTheory.BasicSequentCalculus.",
            "VernacRequire",
            "f2fbc894d63ff9f72127ac59dc8b190ee459f36d"
        ],
        [
            "Require Import Logic.GeneralLogic.Semantics.Kripke.",
            "VernacRequire",
            "4f0a29ef213cb173f58f6b351c743bcacb5b71e5"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.ContextProperty.",
            "VernacRequire",
            "4c577b10b65f245cd5256f34a21c8cb66986698f"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "01895830dc7a4ab9e5c862740d0b95dfbde3605b"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.Minimun.",
            "VernacRequire",
            "7dd3badfb0ea34d33454f0c461fceaac94fde835"
        ],
        [
            "Require Import Logic.MinimunLogic.Semantics.Trivial.",
            "VernacRequire",
            "4d1d979fd969109c003d33e1d74a51d676b2305a"
        ],
        [
            "Require Import Logic.MinimunLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "9198e08651938b4b127c1a31fcf2cef11fad9c9b"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Intuitionistic.",
            "VernacRequire",
            "918be0c1da11c6e84f2fca83e0414062df4a6509"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.DeMorgan.",
            "VernacRequire",
            "979253b4e51bd4c70a2820690cbe8456571aeec4"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.GodelDummett.",
            "VernacRequire",
            "6b75b7bbc32a6656be72ad029a1da066beffebf4"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Classical.",
            "VernacRequire",
            "9db43e6b1f1b9e4d12563fea4db9562a4e6fcb7d"
        ],
        [
            "Require Import Logic.PropositionalLogic.Semantics.Trivial.",
            "VernacRequire",
            "be55cb773882a5f5f14a473460b60e51f9f3e47f"
        ],
        [
            "Require Import Logic.PropositionalLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "37347c25f3b23188e0cd586c72d9be961cc359ea"
        ],
        [
            "Require Import Logic.PropositionalLogic.Complete.ContextProperty_Trivial.",
            "VernacRequire",
            "bba23b7828694944722e5c3c6298d1b8c2cff253"
        ],
        [
            "Require Import Logic.PropositionalLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "37347c25f3b23188e0cd586c72d9be961cc359ea"
        ],
        [
            "Require Import Logic.PropositionalLogic.Complete.ContextProperty_Trivial.",
            "VernacRequire",
            "bba23b7828694944722e5c3c6298d1b8c2cff253"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Local Open Scope kripke_model.",
            "VernacOpenCloseScope",
            "e49ee31afd7da8031602e71d800a363615169ff7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Import KripkeModelFamilyNotation.",
            "VernacImport",
            "e1b9787d5646dac924687ed660f3c109e8d952dd"
        ],
        [
            "Import KripkeModelNotation_Intuitionistic.",
            "VernacImport",
            "d7b7fe443374144a34554b0fe36caedd27cfce5b"
        ],
        [
            "Section TruthLemma.",
            "VernacBeginSection",
            "4cbaf19e8c51cf345f3e5f9813557b65ca8daa5d"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {Gamma: ProofTheory L} {bSC: BasicSequentCalculus L Gamma} {minSC: MinimunSequentCalculus L Gamma} {ipSC: IntuitionisticPropositionalSequentCalculus L Gamma} {cpSC: ClassicalPropositionalSequentCalculus L Gamma} {MD: Model} {kMD: KripkeModel MD} {M: Kmodel} {SM: Semantics L MD} {tminSM: TrivialMinimunSemantics L MD SM} {tpSM: TrivialPropositionalSemantics L MD SM}.",
            "VernacContext",
            "9f65e9e090bc423720a48539d5af39744a536a29"
        ],
        [
            "Context (cP: context -> Prop) (rel: bijection (Kworlds M) (sig cP)).",
            "VernacContext",
            "dcb9346bacb75a86d858fb10a14c4532a3b5732d"
        ],
        [
            "Context (AL_MC: at_least (maximal consistent) cP).",
            "VernacContext",
            "19a7f6b609eb2ff5b2e46a20035245f22bc508c9"
        ],
        [
            "Lemma truth_lemma_falsep: forall m Phi, rel m Phi -> (KRIPKE: M, m |= falsep <-> proj1_sig Phi falsep).",
            "VernacStartTheoremProof",
            "e7d5fd363cfba8339bec4987a130ec8962e6dd48"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_falsep.",
            "VernacExtend",
            "6e4a42ccb7409847e22edfda0111b4fb12ed74b0"
        ],
        [
            "pose proof proj2_sig Phi.",
            "VernacExtend",
            "cd406b84c707aa41a5d6b55b89b19099c7afc3b2"
        ],
        [
            "pose proof proj1 (AL_MC _ H0).",
            "VernacExtend",
            "6e3a3e4049fc127fccdf5acac5712208157bbc9d"
        ],
        [
            "rewrite consistent_spec in H1.",
            "VernacExtend",
            "7df6f25cf04a6920051e75bc45dc5136290e12d5"
        ],
        [
            "split; [intros [] |].",
            "VernacExtend",
            "741ad347cf4a98e3b2650b27fc7270d2a9a70161"
        ],
        [
            "intro; apply H1.",
            "VernacExtend",
            "868e99754cb1ff2431f4fb10ad32d6ab65a5563a"
        ],
        [
            "apply derivable_assum; auto.",
            "VernacExtend",
            "8be152674e5c0de7aa40c41150dd4a43b321a939"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma truth_lemma_andp (x y: expr) (IHx: forall m Phi, rel m Phi -> (KRIPKE: M, m |= x <-> proj1_sig Phi x)) (IHy: forall m Phi, rel m Phi -> (KRIPKE: M, m |= y <-> proj1_sig Phi y)): forall m Phi, rel m Phi -> (KRIPKE: M, m |= x && y <-> proj1_sig Phi (x && y)).",
            "VernacStartTheoremProof",
            "d9aff21f08334f3797afe513de9b6c11ece57c84"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_andp.",
            "VernacExtend",
            "511bceb3d7db3790ff91f8bf5406e677c2785fcc"
        ],
        [
            "rewrite MCS_andp_iff by (apply AL_MC, (proj2_sig Phi)).",
            "VernacExtend",
            "376552dfa629271521dbb0494229692df687ce03"
        ],
        [
            "apply Morphisms_Prop.and_iff_morphism; auto.",
            "VernacExtend",
            "596b944c5a4121f226d7d69fa1e7706b6a079033"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma truth_lemma_orp (x y: expr) (IHx: forall m Phi, rel m Phi -> (KRIPKE: M, m |= x <-> proj1_sig Phi x)) (IHy: forall m Phi, rel m Phi -> (KRIPKE: M, m |= y <-> proj1_sig Phi y)): forall m Phi, rel m Phi -> (KRIPKE: M, m |= x || y <-> proj1_sig Phi (x || y)).",
            "VernacStartTheoremProof",
            "c740f7dd4de0b71c606c86e7cd6b65ff40c29b05"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_orp.",
            "VernacExtend",
            "e17def3a68591c133ad7d872cfed6c67c0b587c9"
        ],
        [
            "rewrite MCS_orp_iff by (apply AL_MC, (proj2_sig Phi)).",
            "VernacExtend",
            "5c14b55205518e47436f5d1ca613813a91a4bf85"
        ],
        [
            "apply Morphisms_Prop.or_iff_morphism; auto.",
            "VernacExtend",
            "677b333b6db5133b271678b7f625a94650a47543"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma truth_lemma_impp (x y: expr) (IHx: forall m Phi, rel m Phi -> (KRIPKE: M, m |= x <-> proj1_sig Phi x)) (IHy: forall m Phi, rel m Phi -> (KRIPKE: M, m |= y <-> proj1_sig Phi y)): forall m Phi, rel m Phi -> (KRIPKE: M, m |= x --> y <-> proj1_sig Phi (x --> y)).",
            "VernacStartTheoremProof",
            "0b511b681c98ad732c34514a4822104e6bcbc178"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_impp.",
            "VernacExtend",
            "e574f9024e5a3623119729b730aa1d548fd18259"
        ],
        [
            "rewrite MCS_impp_iff by (apply AL_MC, (proj2_sig Phi)).",
            "VernacExtend",
            "91340b0d43ffbe3e4e47d5a7cb178e8f03a35bd7"
        ],
        [
            "apply Morphisms_Prop.iff_iff_iff_impl_morphism; auto.",
            "VernacExtend",
            "7b080a6e0148abb847572db3f4e7f84ad0896b55"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End TruthLemma.",
            "VernacEndSegment",
            "15db27250375412032ef22912ac2d0c598846210"
        ]
    ],
    "proofs": [
        {
            "name": "truth_lemma_falsep",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_falsep.",
                        "VernacExtend",
                        "6e4a42ccb7409847e22edfda0111b4fb12ed74b0"
                    ]
                },
                {
                    "command": [
                        "pose proof proj2_sig Phi.",
                        "VernacExtend",
                        "cd406b84c707aa41a5d6b55b89b19099c7afc3b2"
                    ]
                },
                {
                    "command": [
                        "pose proof proj1 (AL_MC _ H0).",
                        "VernacExtend",
                        "6e3a3e4049fc127fccdf5acac5712208157bbc9d"
                    ]
                },
                {
                    "command": [
                        "rewrite consistent_spec in H1.",
                        "VernacExtend",
                        "7df6f25cf04a6920051e75bc45dc5136290e12d5"
                    ]
                },
                {
                    "command": [
                        "split; [intros [] |].",
                        "VernacExtend",
                        "741ad347cf4a98e3b2650b27fc7270d2a9a70161"
                    ]
                },
                {
                    "command": [
                        "intro; apply H1.",
                        "VernacExtend",
                        "868e99754cb1ff2431f4fb10ad32d6ab65a5563a"
                    ]
                },
                {
                    "command": [
                        "apply derivable_assum; auto.",
                        "VernacExtend",
                        "8be152674e5c0de7aa40c41150dd4a43b321a939"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "truth_lemma_andp",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_andp.",
                        "VernacExtend",
                        "511bceb3d7db3790ff91f8bf5406e677c2785fcc"
                    ]
                },
                {
                    "command": [
                        "rewrite MCS_andp_iff by (apply AL_MC, (proj2_sig Phi)).",
                        "VernacExtend",
                        "376552dfa629271521dbb0494229692df687ce03"
                    ]
                },
                {
                    "command": [
                        "apply Morphisms_Prop.and_iff_morphism; auto.",
                        "VernacExtend",
                        "596b944c5a4121f226d7d69fa1e7706b6a079033"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "truth_lemma_orp",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_orp.",
                        "VernacExtend",
                        "e17def3a68591c133ad7d872cfed6c67c0b587c9"
                    ]
                },
                {
                    "command": [
                        "rewrite MCS_orp_iff by (apply AL_MC, (proj2_sig Phi)).",
                        "VernacExtend",
                        "5c14b55205518e47436f5d1ca613813a91a4bf85"
                    ]
                },
                {
                    "command": [
                        "apply Morphisms_Prop.or_iff_morphism; auto.",
                        "VernacExtend",
                        "677b333b6db5133b271678b7f625a94650a47543"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "truth_lemma_impp",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp.",
                        "VernacExtend",
                        "e574f9024e5a3623119729b730aa1d548fd18259"
                    ]
                },
                {
                    "command": [
                        "rewrite MCS_impp_iff by (apply AL_MC, (proj2_sig Phi)).",
                        "VernacExtend",
                        "91340b0d43ffbe3e4e47d5a7cb178e8f03a35bd7"
                    ]
                },
                {
                    "command": [
                        "apply Morphisms_Prop.iff_iff_iff_impl_morphism; auto.",
                        "VernacExtend",
                        "7b080a6e0148abb847572db3f4e7f84ad0896b55"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}