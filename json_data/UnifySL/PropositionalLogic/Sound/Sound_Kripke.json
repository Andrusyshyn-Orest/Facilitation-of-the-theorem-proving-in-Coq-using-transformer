{
    "filename": "PropositionalLogic/Sound/Sound_Kripke.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Logic.Classical_Prop.",
            "VernacRequire",
            "9ccd680c17c6039100012bae5c1bef8ed35d228a"
        ],
        [
            "Require Import Coq.Logic.Classical_Pred_Type.",
            "VernacRequire",
            "2d2ddc9b783f2ae37bb8ab62203e8a65a17b70b1"
        ],
        [
            "Require Import Coq.Classes.RelationClasses.",
            "VernacRequire",
            "e1e9fb5bb83f789dcff9c0bfa33e2d359b0caa70"
        ],
        [
            "Require Import Coq.Relations.Relation_Definitions.",
            "VernacRequire",
            "e90e5840c35495258b335912cbf63f3e29ec520e"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.GeneralLogic.KripkeModel.",
            "VernacRequire",
            "6b79568e5e653c27c6a8e7063552aa2142ab9f3f"
        ],
        [
            "Require Import Logic.GeneralLogic.Semantics.Kripke.",
            "VernacRequire",
            "4f0a29ef213cb173f58f6b351c743bcacb5b71e5"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.MinimunLogic.Semantics.Kripke.",
            "VernacRequire",
            "4fcfcd4fde2d735d73bfaf30e9c1caf49711101e"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.PropositionalLogic.Semantics.Kripke.",
            "VernacRequire",
            "ca0341362accf77b79eee54fec205c480dd1c1bd"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Local Open Scope kripke_model.",
            "VernacOpenCloseScope",
            "e49ee31afd7da8031602e71d800a363615169ff7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Import KripkeModelFamilyNotation.",
            "VernacImport",
            "e1b9787d5646dac924687ed660f3c109e8d952dd"
        ],
        [
            "Import KripkeModelNotation_Intuitionistic.",
            "VernacImport",
            "d7b7fe443374144a34554b0fe36caedd27cfce5b"
        ],
        [
            "Section Sound_Kripke.",
            "VernacBeginSection",
            "6fc417bcb13351aa09a8ca02beec3784b72337c0"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {MD: Model} {kMD: KripkeModel MD} {M: Kmodel} {R: Relation (Kworlds M)} {po_R: PreOrder Krelation} {SM: Semantics L MD} {kiSM: KripkeIntuitionisticSemantics L MD M SM} {kminSM: KripkeMinimunSemantics L MD M SM} {kpSM: KripkePropositionalSemantics L MD M SM}.",
            "VernacContext",
            "6afc22c5fad467d0c935ec5269c9343fe1372d10"
        ],
        [
            "Lemma sound_andp_intros: forall x y: expr, forall m, KRIPKE: M, m |= x --> y --> x && y.",
            "VernacStartTheoremProof",
            "a9ec7b4c17e2a43b9c2a26dd595a70285e36a768"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_impp; intros.",
            "VernacExtend",
            "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
        ],
        [
            "rewrite sat_impp; intros.",
            "VernacExtend",
            "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
        ],
        [
            "rewrite sat_andp.",
            "VernacExtend",
            "511bceb3d7db3790ff91f8bf5406e677c2785fcc"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply sat_mono; eauto.",
            "VernacExtend",
            "83063df13b2c52833e65b8b13ac6b06a3a4f35c2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sound_andp_elim1: forall x y: expr, forall m, KRIPKE: M, m |= x && y --> x.",
            "VernacStartTheoremProof",
            "84c16fbebdf82ba5f02e469684552cd51218aec7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_impp; intros.",
            "VernacExtend",
            "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
        ],
        [
            "rewrite sat_andp in H0.",
            "VernacExtend",
            "9f3cbd047afcbf7bb42c7e3ecadda991d9e39a5b"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sound_andp_elim2: forall x y: expr, forall m, KRIPKE: M, m |= x && y --> y.",
            "VernacStartTheoremProof",
            "6bb2892451d1f81d6699da0eb25709706ae73e7b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_impp; intros.",
            "VernacExtend",
            "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
        ],
        [
            "rewrite sat_andp in H0.",
            "VernacExtend",
            "9f3cbd047afcbf7bb42c7e3ecadda991d9e39a5b"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sound_orp_intros1: forall x y: expr, forall m, KRIPKE: M, m |= x --> x || y.",
            "VernacStartTheoremProof",
            "f7587123a5a61a75706158058c48d3c86b3ca0ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_impp; intros.",
            "VernacExtend",
            "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
        ],
        [
            "rewrite sat_orp.",
            "VernacExtend",
            "e17def3a68591c133ad7d872cfed6c67c0b587c9"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sound_orp_intros2: forall x y: expr, forall m, KRIPKE: M, m |= y --> x || y.",
            "VernacStartTheoremProof",
            "6ee5619151b245a845c2602931544fbcacc6f643"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_impp; intros.",
            "VernacExtend",
            "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
        ],
        [
            "rewrite sat_orp.",
            "VernacExtend",
            "e17def3a68591c133ad7d872cfed6c67c0b587c9"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sound_orp_elim: forall x y z: expr, forall m, KRIPKE: M, m |= (x --> z) --> (y --> z) --> (x || y --> z).",
            "VernacStartTheoremProof",
            "7fe0a8fdf28a601e05cb24bd3edee802289d1dfd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_impp; intros.",
            "VernacExtend",
            "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
        ],
        [
            "rewrite sat_impp; intros.",
            "VernacExtend",
            "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
        ],
        [
            "rewrite sat_impp; intros.",
            "VernacExtend",
            "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
        ],
        [
            "rewrite sat_orp in H4.",
            "VernacExtend",
            "74644795589e4049199bc2d487382ce62762b358"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite sat_impp in H0.",
            "VernacExtend",
            "54b063e5daec6186b296603d6fd7b46ccdf90537"
        ],
        [
            "apply H0; auto.",
            "VernacExtend",
            "e167f871dfeec1cef76aaf201c54c081f29f730b"
        ],
        [
            "etransitivity; eauto.",
            "VernacExtend",
            "9a7a03ac784b775f6203b3104ab84c89b908a8ba"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite sat_impp in H2.",
            "VernacExtend",
            "42793765669efc7d3e2fd38c015ddfa39bec0811"
        ],
        [
            "apply H2; auto.",
            "VernacExtend",
            "30acbf5144f9dcdba4f738b81d251d83daba847e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sound_falsep_elim: forall x: expr, forall m, KRIPKE: M, m |= FF --> x.",
            "VernacStartTheoremProof",
            "e86a92b3f5568ac0b2759ee636a6ad10d88c452e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_impp; intros.",
            "VernacExtend",
            "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
        ],
        [
            "pose proof sat_falsep n.",
            "VernacExtend",
            "97c98b28052d94d9122526d93b7c2522930ee487"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sound_excluded_middle_ident {ikiM: IdentityKripkeIntuitionisticModel (Kworlds M)}: forall x: expr, forall m, KRIPKE: M, m |= x || ~~ x.",
            "VernacStartTheoremProof",
            "d1bad13fc4f2e2bd525a8a15ef9657c739620314"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold negp.",
            "VernacExtend",
            "05b657a2d4b189a08faaf57e9c54414b9046e7f5"
        ],
        [
            "rewrite sat_orp, sat_impp.",
            "VernacExtend",
            "48da006638263d06c78b7032c94df814e8e1908f"
        ],
        [
            "destruct (Classical_Prop.classic (KRIPKE: M, m |= x)); auto.",
            "VernacExtend",
            "eafeec44d8fd3bdc987ae0e9e25437abf89ab078"
        ],
        [
            "right; intros.",
            "VernacExtend",
            "55f32a4c85976dbf403d59803ef666837ed695da"
        ],
        [
            "apply ikiM in H0; subst n.",
            "VernacExtend",
            "80624513daed397e019c22cea485b96509231325"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sound_impp_choice_no_branch {nkiM: NoBranchKripkeIntuitionisticModel (Kworlds M)}: forall x y: expr, forall m, KRIPKE: M, m |= (x --> y) || (y --> x).",
            "VernacStartTheoremProof",
            "5c8acae6f9ef8b800dbc8c4c1225c93feea31d74"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_orp, !sat_impp.",
            "VernacExtend",
            "99becfb365aee503f524e023f7130c7c3e6a76ca"
        ],
        [
            "apply Classical_Prop.NNPP; intro.",
            "VernacExtend",
            "ccebaf0be6ad4ae89e8059fbe6fff4e8c458a878"
        ],
        [
            "apply not_or_and in H; destruct H.",
            "VernacExtend",
            "84a57a99fe5cceaf602700a8ed8ae0480c421db0"
        ],
        [
            "apply not_all_ex_not in H.",
            "VernacExtend",
            "5e4ab0a34d7c97f5fb87218f6284db221ca0e1d8"
        ],
        [
            "apply not_all_ex_not in H0.",
            "VernacExtend",
            "9a461b71d56de91cc9a52e92704f5b0c483106ff"
        ],
        [
            "destruct H as [n1 ?], H0 as [n2 ?].",
            "VernacExtend",
            "d0cd6632385cc1671eaf6eeb4776037040324e2a"
        ],
        [
            "apply imply_to_and in H.",
            "VernacExtend",
            "d16b6a96dc93d7bd8748af95c906f99b910d036d"
        ],
        [
            "apply imply_to_and in H0.",
            "VernacExtend",
            "b749e7a4dcdb6e9873d0f2a00c2e1ab4a59c68d4"
        ],
        [
            "destruct H, H0.",
            "VernacExtend",
            "8db9e1441c64ed20802e4526963172d1abdaee94"
        ],
        [
            "apply imply_to_and in H1.",
            "VernacExtend",
            "6ea3d1b5ef0d47cb8b915f7e750aca5e8977a1e2"
        ],
        [
            "apply imply_to_and in H2.",
            "VernacExtend",
            "e16da1d14ec478a91aed81b619c738403d60a47c"
        ],
        [
            "destruct H1, H2.",
            "VernacExtend",
            "c42e3efd2d0cc8b1830bef8d65eae16cc1554f4c"
        ],
        [
            "destruct (Korder_no_branch n1 n2 m H H0).",
            "VernacExtend",
            "8f15a60674c1a53976484b9662e3d268ab4b14b9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (sat_mono _ _ x H5).",
            "VernacExtend",
            "35e7c352c16fe63815a8f6a3151c9366e99d1c8a"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (sat_mono _ _ y H5).",
            "VernacExtend",
            "9ce82f5b49be8f1931b6f6b0e2eaa28d97e42f53"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sound_weak_excluded_middle_branch_join {bkiM: BranchJoinKripkeIntuitionisticModel (Kworlds M)}: forall x: expr, forall m, KRIPKE: M, m |= ~~ x || ~~ ~~ x.",
            "VernacStartTheoremProof",
            "8f53b117fb797c28ceb78240ce035702d1cc5fce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold negp.",
            "VernacExtend",
            "05b657a2d4b189a08faaf57e9c54414b9046e7f5"
        ],
        [
            "rewrite sat_orp, !sat_impp.",
            "VernacExtend",
            "99becfb365aee503f524e023f7130c7c3e6a76ca"
        ],
        [
            "apply Classical_Prop.NNPP; intro.",
            "VernacExtend",
            "ccebaf0be6ad4ae89e8059fbe6fff4e8c458a878"
        ],
        [
            "apply not_or_and in H; destruct H.",
            "VernacExtend",
            "84a57a99fe5cceaf602700a8ed8ae0480c421db0"
        ],
        [
            "apply not_all_ex_not in H.",
            "VernacExtend",
            "5e4ab0a34d7c97f5fb87218f6284db221ca0e1d8"
        ],
        [
            "apply not_all_ex_not in H0.",
            "VernacExtend",
            "9a461b71d56de91cc9a52e92704f5b0c483106ff"
        ],
        [
            "destruct H as [n1 ?], H0 as [n2 ?].",
            "VernacExtend",
            "d0cd6632385cc1671eaf6eeb4776037040324e2a"
        ],
        [
            "apply imply_to_and in H.",
            "VernacExtend",
            "d16b6a96dc93d7bd8748af95c906f99b910d036d"
        ],
        [
            "apply imply_to_and in H0.",
            "VernacExtend",
            "b749e7a4dcdb6e9873d0f2a00c2e1ab4a59c68d4"
        ],
        [
            "destruct H, H0.",
            "VernacExtend",
            "8db9e1441c64ed20802e4526963172d1abdaee94"
        ],
        [
            "apply imply_to_and in H1.",
            "VernacExtend",
            "6ea3d1b5ef0d47cb8b915f7e750aca5e8977a1e2"
        ],
        [
            "apply imply_to_and in H2.",
            "VernacExtend",
            "e16da1d14ec478a91aed81b619c738403d60a47c"
        ],
        [
            "destruct H1 as [? _], H2 as [? _].",
            "VernacExtend",
            "64b7b8cb2dbc5361961fa9fef105f3cc540359da"
        ],
        [
            "destruct (Korder_branch_join n1 n2 m H H0) as [n [? ?]].",
            "VernacExtend",
            "36a87dc16ad2fa9f624e4849b70823e574a96d82"
        ],
        [
            "eapply sat_mono in H2; [| eassumption].",
            "VernacExtend",
            "0ecf2fbbe48f20486450a1ad9d7c6125c72563a6"
        ],
        [
            "eapply sat_mono in H1; [| eassumption].",
            "VernacExtend",
            "af428cba27b78239e7f29326d064ab0e185eb71e"
        ],
        [
            "rewrite sat_impp in H2.",
            "VernacExtend",
            "42793765669efc7d3e2fd38c015ddfa39bec0811"
        ],
        [
            "apply (H2 n) in H1; [| reflexivity].",
            "VernacExtend",
            "36e44411f6753a7aa3f1603e3336a271189b83d2"
        ],
        [
            "apply sat_falsep in H1; auto.",
            "VernacExtend",
            "948a5ee978b48e6d181bef322b99af1a514ac028"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Sound_Kripke.",
            "VernacEndSegment",
            "0a0e3cae85edd7bc817cf263f5955efd2cc638aa"
        ]
    ],
    "proofs": [
        {
            "name": "sound_andp_intros",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp; intros.",
                        "VernacExtend",
                        "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp; intros.",
                        "VernacExtend",
                        "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_andp.",
                        "VernacExtend",
                        "511bceb3d7db3790ff91f8bf5406e677c2785fcc"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply sat_mono; eauto.",
                        "VernacExtend",
                        "83063df13b2c52833e65b8b13ac6b06a3a4f35c2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sound_andp_elim1",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp; intros.",
                        "VernacExtend",
                        "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_andp in H0.",
                        "VernacExtend",
                        "9f3cbd047afcbf7bb42c7e3ecadda991d9e39a5b"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sound_andp_elim2",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp; intros.",
                        "VernacExtend",
                        "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_andp in H0.",
                        "VernacExtend",
                        "9f3cbd047afcbf7bb42c7e3ecadda991d9e39a5b"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sound_orp_intros1",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp; intros.",
                        "VernacExtend",
                        "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_orp.",
                        "VernacExtend",
                        "e17def3a68591c133ad7d872cfed6c67c0b587c9"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sound_orp_intros2",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp; intros.",
                        "VernacExtend",
                        "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_orp.",
                        "VernacExtend",
                        "e17def3a68591c133ad7d872cfed6c67c0b587c9"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sound_orp_elim",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp; intros.",
                        "VernacExtend",
                        "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp; intros.",
                        "VernacExtend",
                        "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp; intros.",
                        "VernacExtend",
                        "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_orp in H4.",
                        "VernacExtend",
                        "74644795589e4049199bc2d487382ce62762b358"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp in H0.",
                        "VernacExtend",
                        "54b063e5daec6186b296603d6fd7b46ccdf90537"
                    ]
                },
                {
                    "command": [
                        "apply H0; auto.",
                        "VernacExtend",
                        "e167f871dfeec1cef76aaf201c54c081f29f730b"
                    ]
                },
                {
                    "command": [
                        "etransitivity; eauto.",
                        "VernacExtend",
                        "9a7a03ac784b775f6203b3104ab84c89b908a8ba"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp in H2.",
                        "VernacExtend",
                        "42793765669efc7d3e2fd38c015ddfa39bec0811"
                    ]
                },
                {
                    "command": [
                        "apply H2; auto.",
                        "VernacExtend",
                        "30acbf5144f9dcdba4f738b81d251d83daba847e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sound_falsep_elim",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp; intros.",
                        "VernacExtend",
                        "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
                    ]
                },
                {
                    "command": [
                        "pose proof sat_falsep n.",
                        "VernacExtend",
                        "97c98b28052d94d9122526d93b7c2522930ee487"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sound_excluded_middle_ident",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold negp.",
                        "VernacExtend",
                        "05b657a2d4b189a08faaf57e9c54414b9046e7f5"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_orp, sat_impp.",
                        "VernacExtend",
                        "48da006638263d06c78b7032c94df814e8e1908f"
                    ]
                },
                {
                    "command": [
                        "destruct (Classical_Prop.classic (KRIPKE: M, m |= x)); auto.",
                        "VernacExtend",
                        "eafeec44d8fd3bdc987ae0e9e25437abf89ab078"
                    ]
                },
                {
                    "command": [
                        "right; intros.",
                        "VernacExtend",
                        "55f32a4c85976dbf403d59803ef666837ed695da"
                    ]
                },
                {
                    "command": [
                        "apply ikiM in H0; subst n.",
                        "VernacExtend",
                        "80624513daed397e019c22cea485b96509231325"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sound_impp_choice_no_branch",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_orp, !sat_impp.",
                        "VernacExtend",
                        "99becfb365aee503f524e023f7130c7c3e6a76ca"
                    ]
                },
                {
                    "command": [
                        "apply Classical_Prop.NNPP; intro.",
                        "VernacExtend",
                        "ccebaf0be6ad4ae89e8059fbe6fff4e8c458a878"
                    ]
                },
                {
                    "command": [
                        "apply not_or_and in H; destruct H.",
                        "VernacExtend",
                        "84a57a99fe5cceaf602700a8ed8ae0480c421db0"
                    ]
                },
                {
                    "command": [
                        "apply not_all_ex_not in H.",
                        "VernacExtend",
                        "5e4ab0a34d7c97f5fb87218f6284db221ca0e1d8"
                    ]
                },
                {
                    "command": [
                        "apply not_all_ex_not in H0.",
                        "VernacExtend",
                        "9a461b71d56de91cc9a52e92704f5b0c483106ff"
                    ]
                },
                {
                    "command": [
                        "destruct H as [n1 ?], H0 as [n2 ?].",
                        "VernacExtend",
                        "d0cd6632385cc1671eaf6eeb4776037040324e2a"
                    ]
                },
                {
                    "command": [
                        "apply imply_to_and in H.",
                        "VernacExtend",
                        "d16b6a96dc93d7bd8748af95c906f99b910d036d"
                    ]
                },
                {
                    "command": [
                        "apply imply_to_and in H0.",
                        "VernacExtend",
                        "b749e7a4dcdb6e9873d0f2a00c2e1ab4a59c68d4"
                    ]
                },
                {
                    "command": [
                        "destruct H, H0.",
                        "VernacExtend",
                        "8db9e1441c64ed20802e4526963172d1abdaee94"
                    ]
                },
                {
                    "command": [
                        "apply imply_to_and in H1.",
                        "VernacExtend",
                        "6ea3d1b5ef0d47cb8b915f7e750aca5e8977a1e2"
                    ]
                },
                {
                    "command": [
                        "apply imply_to_and in H2.",
                        "VernacExtend",
                        "e16da1d14ec478a91aed81b619c738403d60a47c"
                    ]
                },
                {
                    "command": [
                        "destruct H1, H2.",
                        "VernacExtend",
                        "c42e3efd2d0cc8b1830bef8d65eae16cc1554f4c"
                    ]
                },
                {
                    "command": [
                        "destruct (Korder_no_branch n1 n2 m H H0).",
                        "VernacExtend",
                        "8f15a60674c1a53976484b9662e3d268ab4b14b9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (sat_mono _ _ x H5).",
                        "VernacExtend",
                        "35e7c352c16fe63815a8f6a3151c9366e99d1c8a"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (sat_mono _ _ y H5).",
                        "VernacExtend",
                        "9ce82f5b49be8f1931b6f6b0e2eaa28d97e42f53"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sound_weak_excluded_middle_branch_join",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold negp.",
                        "VernacExtend",
                        "05b657a2d4b189a08faaf57e9c54414b9046e7f5"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_orp, !sat_impp.",
                        "VernacExtend",
                        "99becfb365aee503f524e023f7130c7c3e6a76ca"
                    ]
                },
                {
                    "command": [
                        "apply Classical_Prop.NNPP; intro.",
                        "VernacExtend",
                        "ccebaf0be6ad4ae89e8059fbe6fff4e8c458a878"
                    ]
                },
                {
                    "command": [
                        "apply not_or_and in H; destruct H.",
                        "VernacExtend",
                        "84a57a99fe5cceaf602700a8ed8ae0480c421db0"
                    ]
                },
                {
                    "command": [
                        "apply not_all_ex_not in H.",
                        "VernacExtend",
                        "5e4ab0a34d7c97f5fb87218f6284db221ca0e1d8"
                    ]
                },
                {
                    "command": [
                        "apply not_all_ex_not in H0.",
                        "VernacExtend",
                        "9a461b71d56de91cc9a52e92704f5b0c483106ff"
                    ]
                },
                {
                    "command": [
                        "destruct H as [n1 ?], H0 as [n2 ?].",
                        "VernacExtend",
                        "d0cd6632385cc1671eaf6eeb4776037040324e2a"
                    ]
                },
                {
                    "command": [
                        "apply imply_to_and in H.",
                        "VernacExtend",
                        "d16b6a96dc93d7bd8748af95c906f99b910d036d"
                    ]
                },
                {
                    "command": [
                        "apply imply_to_and in H0.",
                        "VernacExtend",
                        "b749e7a4dcdb6e9873d0f2a00c2e1ab4a59c68d4"
                    ]
                },
                {
                    "command": [
                        "destruct H, H0.",
                        "VernacExtend",
                        "8db9e1441c64ed20802e4526963172d1abdaee94"
                    ]
                },
                {
                    "command": [
                        "apply imply_to_and in H1.",
                        "VernacExtend",
                        "6ea3d1b5ef0d47cb8b915f7e750aca5e8977a1e2"
                    ]
                },
                {
                    "command": [
                        "apply imply_to_and in H2.",
                        "VernacExtend",
                        "e16da1d14ec478a91aed81b619c738403d60a47c"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [? _], H2 as [? _].",
                        "VernacExtend",
                        "64b7b8cb2dbc5361961fa9fef105f3cc540359da"
                    ]
                },
                {
                    "command": [
                        "destruct (Korder_branch_join n1 n2 m H H0) as [n [? ?]].",
                        "VernacExtend",
                        "36a87dc16ad2fa9f624e4849b70823e574a96d82"
                    ]
                },
                {
                    "command": [
                        "eapply sat_mono in H2; [| eassumption].",
                        "VernacExtend",
                        "0ecf2fbbe48f20486450a1ad9d7c6125c72563a6"
                    ]
                },
                {
                    "command": [
                        "eapply sat_mono in H1; [| eassumption].",
                        "VernacExtend",
                        "af428cba27b78239e7f29326d064ab0e185eb71e"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp in H2.",
                        "VernacExtend",
                        "42793765669efc7d3e2fd38c015ddfa39bec0811"
                    ]
                },
                {
                    "command": [
                        "apply (H2 n) in H1; [| reflexivity].",
                        "VernacExtend",
                        "36e44411f6753a7aa3f1603e3336a271189b83d2"
                    ]
                },
                {
                    "command": [
                        "apply sat_falsep in H1; auto.",
                        "VernacExtend",
                        "948a5ee978b48e6d181bef322b99af1a514ac028"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}