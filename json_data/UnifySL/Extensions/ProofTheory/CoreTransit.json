{
    "filename": "Extensions/ProofTheory/CoreTransit.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Classes.Morphisms.",
            "VernacRequire",
            "d6f94fe62e68e8d5e6a6c6513b6c2e04f2b5d71a"
        ],
        [
            "Require Import Coq.Classes.RelationClasses.",
            "VernacRequire",
            "e1e9fb5bb83f789dcff9c0bfa33e2d359b0caa70"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.ModalLogic.Syntax.",
            "VernacRequire",
            "5622ed4aa206f322d0c747758fe045fbf3322e66"
        ],
        [
            "Require Import Logic.SeparationLogic.Syntax.",
            "VernacRequire",
            "06f045a49fc8f11e28ecdce8309ad8f23a886843"
        ],
        [
            "Require Import Logic.Extensions.Syntax_CoreTransit.",
            "VernacRequire",
            "df64eb6fdc7fec544b32872f1a1863da6f7abad5"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.Minimun.",
            "VernacRequire",
            "7dd3badfb0ea34d33454f0c461fceaac94fde835"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.RewriteClass.",
            "VernacRequire",
            "979c209afa85ced49ff62f7a9b2136c799474941"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Intuitionistic.",
            "VernacRequire",
            "918be0c1da11c6e84f2fca83e0414062df4a6509"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.DeMorgan.",
            "VernacRequire",
            "979253b4e51bd4c70a2820690cbe8456571aeec4"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.GodelDummett.",
            "VernacRequire",
            "6b75b7bbc32a6656be72ad029a1da066beffebf4"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Classical.",
            "VernacRequire",
            "9db43e6b1f1b9e4d12563fea4db9562a4e6fcb7d"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.RewriteClass.",
            "VernacRequire",
            "e93eef38e75c736b6e3ce3c196435253280f259c"
        ],
        [
            "Require Import Logic.ModalLogic.ProofTheory.ModalLogic.",
            "VernacRequire",
            "4f5756099af4c7a3fdb31035cadbbeb32f199bec"
        ],
        [
            "Require Import Logic.ModalLogic.ProofTheory.RewriteClass.",
            "VernacRequire",
            "bccb46c355b6299cb8d425e48da8f7f216326c1e"
        ],
        [
            "Require Import Logic.ModalLogic.ProofTheory.IntuitionisticDerivedRules.",
            "VernacRequire",
            "eaf292c1909ea4a324354c21e3baf49d0dacaf11"
        ],
        [
            "Require Import Logic.SeparationLogic.ProofTheory.SeparationLogic.",
            "VernacRequire",
            "5622e8313e681fd82a117cfb8733fb58c94e9134"
        ],
        [
            "Require Import Logic.SeparationLogic.ProofTheory.DerivedRules.",
            "VernacRequire",
            "dd891d40078f9e3e2718ac8caf7cec1def4b2911"
        ],
        [
            "Require Import Logic.SeparationLogic.ProofTheory.RewriteClass.",
            "VernacRequire",
            "1fd18b510c03e9c7af0f4f5a68b3ed48b1eb26d2"
        ],
        [
            "Require Import Logic.Extensions.ProofTheory.Stable.",
            "VernacRequire",
            "5264be177afd9e788075eebd629f71cbec83c995"
        ],
        [
            "Require Import Logic.Extensions.ProofTheory.ModalSeparation.",
            "VernacRequire",
            "b09d9832196d83248ac08c6f3304257687cc6eec"
        ],
        [
            "Require Import Logic.Extensions.ProofTheory.Corable.",
            "VernacRequire",
            "1ab766e7117b4a8c0f4c728a83f1fe7361ddd827"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Import SeparationLogicNotation.",
            "VernacImport",
            "ef77ed65f39901a78bbb8e7daa1c2fee20e46d4e"
        ],
        [
            "Import CoreTransitNotation.",
            "VernacImport",
            "6d33a8da39d436c7d38d2ad822ad150ecf3fbfbf"
        ],
        [
            "Class CoreTransitSeparationLogic (L: Language) {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {sL: SeparationLanguage L} {CtsL: CoreTransitSeparationLanguage L} (Gamma: ProofTheory L) {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} {sGamma: SeparationLogic L Gamma} {CosGamma: Corable L Gamma}:= { core_tr_SystemK: @SystemK L minL pL (ct_mL L) Gamma minAX ipGamma; core_tr_PTransparent: @PropositionalTransparentModality L minL pL (ct_mL L) Gamma minAX ipGamma core_tr_SystemK; core_tr_STransparent1: @SeparationTransparentModality1 L minL pL (ct_mL L) sL Gamma minAX ipGamma core_tr_SystemK sGamma; core_tr_STransparent2: @SeparationTransparentModality2 L minL pL (ct_mL L) sL Gamma minAX ipGamma core_tr_SystemK sGamma; core_tr_andp_sepcon: forall x y, |-- core_tr (x && y) --> core_tr (x * y); coreAbsorb: @ModalAbsorbStable L minL (ct_mL L) Gamma corable }.",
            "VernacInductive",
            "3de1937b2120cbde7fd6a3715c620a9ac6c93951"
        ],
        [
            "Section CoreTransit.",
            "VernacBeginSection",
            "35d5729c2fdb7b7b7b86b523be7601879883e1d6"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {sL: SeparationLanguage L} {CtsL: CoreTransitSeparationLanguage L} {Gamma: ProofTheory L} {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} {sGamma: SeparationLogic L Gamma} {CosGamma: Corable L Gamma} {CtsGamma: CoreTransitSeparationLogic L Gamma}.",
            "VernacContext",
            "185570667e510f87fe28bd8b7a533a1a6b64a132"
        ],
        [
            "Lemma core_tr_andp: forall x y, |-- core_tr (x && y) <--> core_tr x && core_tr y.",
            "VernacStartTheoremProof",
            "4a2afcb3b58750ba10cd5f2649541a06db9d2ece"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@boxp_andp L _ _ (ct_mL L) Gamma _ _ core_tr_SystemK).",
            "VernacExtend",
            "c2e801388502bcbb9d5a264ceff88c012d0146c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma core_tr_orp: forall x y, |-- core_tr (x || y) <--> core_tr x || core_tr y.",
            "VernacStartTheoremProof",
            "7c5eecc30b5f40fd18f5e876706724de98ba8a37"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@boxp_orp L _ _ (ct_mL L) Gamma _ _ _ core_tr_PTransparent).",
            "VernacExtend",
            "9f62966f89f94c0cf9d167c852761dcd775cc2bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma core_tr_sepcon: forall x y, |-- core_tr x * core_tr y <--> core_tr (x * y).",
            "VernacStartTheoremProof",
            "829086a701ea537004b86220931e18e82e83b697"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply solve_andp_intros.",
            "VernacExtend",
            "1aec82a7bdb2634029e894f6b658851d06ac88ae"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (@sepcon_boxp L _ _ (ct_mL L) sL Gamma _ _ _ _ core_tr_STransparent1).",
            "VernacExtend",
            "0370c2e7b2e2aeb7c2d4a34658ce96806717f24a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (@boxp_sepcon L _ _ (ct_mL L) sL Gamma _ _ _ _ core_tr_STransparent2).",
            "VernacExtend",
            "04290ff3f2b6f54c2adeed4d92e8e1ea3e91f7d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance core_tr_proper_impp: Proper ((fun x y => |-- impp x y) ==> (fun x y => |-- impp x y)) core_tr.",
            "VernacInstance",
            "fe954ae6dca50950ca9f85caf0188fa1b1f974ed"
        ],
        [
            "apply (@boxp_proper_impp L _ _ (ct_mL L) Gamma _ _ core_tr_SystemK).",
            "VernacExtend",
            "78e656bbeb793f56dbbad685a66c6a69fc726e40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance core_tr_proper_iffp: Proper ((fun x y => |-- x <--> y) ==> (fun x y => |-- x <--> y)) core_tr.",
            "VernacInstance",
            "55532e28c82bac031fde80d4b787c5030a994e4d"
        ],
        [
            "apply (@boxp_proper_iffp L _ _ (ct_mL L) Gamma _ _ core_tr_SystemK).",
            "VernacExtend",
            "c065199e01a9544562be800f8994e80c29a79f81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma core_tr_andp_sepcon_iffp {GC: GarbageCollectSeparationLogic L Gamma}: forall x y, |-- core_tr (x && y) <--> core_tr (x * y).",
            "VernacStartTheoremProof",
            "f9d251e1728ef07d5df92ff6ce1be2ca5a2ba438"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply solve_andp_intros.",
            "VernacExtend",
            "1aec82a7bdb2634029e894f6b658851d06ac88ae"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply core_tr_andp_sepcon.",
            "VernacExtend",
            "e0c6b18b88f54857a5d8fb4db0c5f1ca088502c4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (@axiom_K L _ _ (ct_mL L) Gamma _ _ core_tr_SystemK).",
            "VernacExtend",
            "099a9bf8fe8d69f19e9aea1dcaa6f76402dabc89"
        ],
        [
            "simpl in H; rewrite <- H; clear H.",
            "VernacExtend",
            "7df30d1e7248b571bb834478ba7a6bf69fdcb1ea"
        ],
        [
            "apply (@rule_N L _ _ (ct_mL L) Gamma _ _ core_tr_SystemK).",
            "VernacExtend",
            "f5bac090ca56855a523786f16a1df140cacec5b5"
        ],
        [
            "apply solve_impp_andp.",
            "VernacExtend",
            "000e430fd2da80930a75e733976d6678a49ceeaf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- (sepcon_elim1 x y) at 2.",
            "VernacExtend",
            "c83ad02a6f9a90da98539bd22e60067421711928"
        ],
        [
            "apply provable_impp_refl.",
            "VernacExtend",
            "2cef60de23967c402db3e33ea4d2e3fd4e449812"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- (sepcon_elim2 x y) at 2.",
            "VernacExtend",
            "53b442726c6478b0b109a892c4465aea510ab71a"
        ],
        [
            "apply provable_impp_refl.",
            "VernacExtend",
            "2cef60de23967c402db3e33ea4d2e3fd4e449812"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma core_tr_dup {GC: GarbageCollectSeparationLogic L Gamma}: forall x, |-- core_tr x <--> core_tr x * core_tr x.",
            "VernacStartTheoremProof",
            "ab7e28978fb9413261e5d1f67bca4c78fdb58ea6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (andp_dup x) at 1.",
            "VernacExtend",
            "0bed0ad27711556b38e3d10afdf85e731fe0dd3b"
        ],
        [
            "rewrite core_tr_andp_sepcon_iffp.",
            "VernacExtend",
            "90b59742e54e063b1d0433ce2939d3a0b4056e41"
        ],
        [
            "rewrite core_tr_sepcon.",
            "VernacExtend",
            "7985fe415781a207f60ed48cfbe74423626d5140"
        ],
        [
            "apply provable_iffp_refl.",
            "VernacExtend",
            "8ddb88f6a631e104f73b8994c11dd69b29dbce26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma core_tr_absorb_corable: forall x, corable x -> |-- x --> core_tr x.",
            "VernacStartTheoremProof",
            "576222df7f75926e152cb7aecc61e83b4ebcb811"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@boxp_absorb_stable _ _ (ct_mL L) Gamma corable coreAbsorb); auto.",
            "VernacExtend",
            "5ae9250be4e05f1e17d4ed7cf4b23c526f770ce4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CoreTransit.",
            "VernacEndSegment",
            "8ca177123993269c8afdf1cb1d880cb2c1a18057"
        ],
        [
            "Existing Instances core_tr_proper_impp core_tr_proper_iffp.",
            "VernacDeclareInstances",
            "2a439533daf0e3cc8b664a6428971cfae22d02f2"
        ]
    ],
    "proofs": [
        {
            "name": "core_tr_andp",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@boxp_andp L _ _ (ct_mL L) Gamma _ _ core_tr_SystemK).",
                        "VernacExtend",
                        "c2e801388502bcbb9d5a264ceff88c012d0146c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "core_tr_orp",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@boxp_orp L _ _ (ct_mL L) Gamma _ _ _ core_tr_PTransparent).",
                        "VernacExtend",
                        "9f62966f89f94c0cf9d167c852761dcd775cc2bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "core_tr_sepcon",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply solve_andp_intros.",
                        "VernacExtend",
                        "1aec82a7bdb2634029e894f6b658851d06ac88ae"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (@sepcon_boxp L _ _ (ct_mL L) sL Gamma _ _ _ _ core_tr_STransparent1).",
                        "VernacExtend",
                        "0370c2e7b2e2aeb7c2d4a34658ce96806717f24a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (@boxp_sepcon L _ _ (ct_mL L) sL Gamma _ _ _ _ core_tr_STransparent2).",
                        "VernacExtend",
                        "04290ff3f2b6f54c2adeed4d92e8e1ea3e91f7d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "core_tr_proper_impp",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "apply (@boxp_proper_impp L _ _ (ct_mL L) Gamma _ _ core_tr_SystemK).",
                        "VernacExtend",
                        "78e656bbeb793f56dbbad685a66c6a69fc726e40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "core_tr_proper_iffp",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "apply (@boxp_proper_iffp L _ _ (ct_mL L) Gamma _ _ core_tr_SystemK).",
                        "VernacExtend",
                        "c065199e01a9544562be800f8994e80c29a79f81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "core_tr_andp_sepcon_iffp",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply solve_andp_intros.",
                        "VernacExtend",
                        "1aec82a7bdb2634029e894f6b658851d06ac88ae"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply core_tr_andp_sepcon.",
                        "VernacExtend",
                        "e0c6b18b88f54857a5d8fb4db0c5f1ca088502c4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (@axiom_K L _ _ (ct_mL L) Gamma _ _ core_tr_SystemK).",
                        "VernacExtend",
                        "099a9bf8fe8d69f19e9aea1dcaa6f76402dabc89"
                    ]
                },
                {
                    "command": [
                        "simpl in H; rewrite <- H; clear H.",
                        "VernacExtend",
                        "7df30d1e7248b571bb834478ba7a6bf69fdcb1ea"
                    ]
                },
                {
                    "command": [
                        "apply (@rule_N L _ _ (ct_mL L) Gamma _ _ core_tr_SystemK).",
                        "VernacExtend",
                        "f5bac090ca56855a523786f16a1df140cacec5b5"
                    ]
                },
                {
                    "command": [
                        "apply solve_impp_andp.",
                        "VernacExtend",
                        "000e430fd2da80930a75e733976d6678a49ceeaf"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (sepcon_elim1 x y) at 2.",
                        "VernacExtend",
                        "c83ad02a6f9a90da98539bd22e60067421711928"
                    ]
                },
                {
                    "command": [
                        "apply provable_impp_refl.",
                        "VernacExtend",
                        "2cef60de23967c402db3e33ea4d2e3fd4e449812"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (sepcon_elim2 x y) at 2.",
                        "VernacExtend",
                        "53b442726c6478b0b109a892c4465aea510ab71a"
                    ]
                },
                {
                    "command": [
                        "apply provable_impp_refl.",
                        "VernacExtend",
                        "2cef60de23967c402db3e33ea4d2e3fd4e449812"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "core_tr_dup",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (andp_dup x) at 1.",
                        "VernacExtend",
                        "0bed0ad27711556b38e3d10afdf85e731fe0dd3b"
                    ]
                },
                {
                    "command": [
                        "rewrite core_tr_andp_sepcon_iffp.",
                        "VernacExtend",
                        "90b59742e54e063b1d0433ce2939d3a0b4056e41"
                    ]
                },
                {
                    "command": [
                        "rewrite core_tr_sepcon.",
                        "VernacExtend",
                        "7985fe415781a207f60ed48cfbe74423626d5140"
                    ]
                },
                {
                    "command": [
                        "apply provable_iffp_refl.",
                        "VernacExtend",
                        "8ddb88f6a631e104f73b8994c11dd69b29dbce26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "core_tr_absorb_corable",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@boxp_absorb_stable _ _ (ct_mL L) Gamma corable coreAbsorb); auto.",
                        "VernacExtend",
                        "5ae9250be4e05f1e17d4ed7cf4b23c526f770ce4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}