{
    "filename": "MinimunLogic/DeepEmbedded/Complete_Kripke.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Logic.Classical_Prop.",
            "VernacRequire",
            "9ccd680c17c6039100012bae5c1bef8ed35d228a"
        ],
        [
            "Require Import Logic.lib.Ensembles_ext.",
            "VernacRequire",
            "19fa136320dca316056a1bf8e4a3fb50fe8a2192"
        ],
        [
            "Require Import Logic.lib.EnsemblesProperties.",
            "VernacRequire",
            "fe77844366aea5d903a9e9096f5fbf875745882f"
        ],
        [
            "Require Import Logic.lib.Bijection.",
            "VernacRequire",
            "7bb59803be65e1b0331aebf5a5e54fdb046de426"
        ],
        [
            "Require Import Logic.lib.Countable.",
            "VernacRequire",
            "0e6db58557f71a0dcd04cbe972aeb1392ac877d1"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.GeneralLogic.ProofTheory.BasicSequentCalculus.",
            "VernacRequire",
            "f2fbc894d63ff9f72127ac59dc8b190ee459f36d"
        ],
        [
            "Require Import Logic.GeneralLogic.KripkeModel.",
            "VernacRequire",
            "6b79568e5e653c27c6a8e7063552aa2142ab9f3f"
        ],
        [
            "Require Import Logic.GeneralLogic.Semantics.Kripke.",
            "VernacRequire",
            "4f0a29ef213cb173f58f6b351c743bcacb5b71e5"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.ContextProperty.",
            "VernacRequire",
            "4c577b10b65f245cd5256f34a21c8cb66986698f"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "01895830dc7a4ab9e5c862740d0b95dfbde3605b"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.Lindenbaum.",
            "VernacRequire",
            "900d8f4a2c06d421896258623602c7b6b362955c"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.Canonical_Kripke.",
            "VernacRequire",
            "d5bcdf5a09c1a9eec79a99a15668d87b77cb34cc"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.Complete_Kripke.",
            "VernacRequire",
            "041c62b1506308ded653d1bca3b62576aea40062"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.Minimun.",
            "VernacRequire",
            "7dd3badfb0ea34d33454f0c461fceaac94fde835"
        ],
        [
            "Require Import Logic.MinimunLogic.Semantics.Kripke.",
            "VernacRequire",
            "4fcfcd4fde2d735d73bfaf30e9c1caf49711101e"
        ],
        [
            "Require Import Logic.MinimunLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "9198e08651938b4b127c1a31fcf2cef11fad9c9b"
        ],
        [
            "Require Import Logic.MinimunLogic.Complete.Truth_Kripke.",
            "VernacRequire",
            "cbad35089afd82d1cf5ac5ab82d5a66b10abb3d2"
        ],
        [
            "Require Import Logic.MinimunLogic.Complete.Lindenbaum_Kripke.",
            "VernacRequire",
            "02f4dd4e6fa141be6f442d91a352e116d36675c0"
        ],
        [
            "Require Logic.MinimunLogic.DeepEmbedded.MinimunLanguage.",
            "VernacRequire",
            "c51e25e61db06effcf186a458609fc327bf4193d"
        ],
        [
            "Require Logic.MinimunLogic.DeepEmbedded.MinimunLogic.",
            "VernacRequire",
            "4c5381e8fb33485b7c6121d3bb26e802bb9cdb52"
        ],
        [
            "Require Logic.MinimunLogic.DeepEmbedded.KripkeSemantics.",
            "VernacRequire",
            "1c5e44db2d45e86ba32956dbfbed21131922511b"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Local Open Scope kripke_model.",
            "VernacOpenCloseScope",
            "e49ee31afd7da8031602e71d800a363615169ff7"
        ],
        [
            "Local Open Scope kripke_model_class.",
            "VernacOpenCloseScope",
            "9c8cc313b368a0ea960d699dfc4b131e91c3cc48"
        ],
        [
            "Import KripkeModelFamilyNotation.",
            "VernacImport",
            "e1b9787d5646dac924687ed660f3c109e8d952dd"
        ],
        [
            "Import KripkeModelNotation_Intuitionistic.",
            "VernacImport",
            "d7b7fe443374144a34554b0fe36caedd27cfce5b"
        ],
        [
            "Import KripkeModelClass.",
            "VernacImport",
            "3755e3315d5fa82755ccb16532d6d9d04e331574"
        ],
        [
            "Section Complete.",
            "VernacBeginSection",
            "618f5c87580d76567cfdf26c065fb4a894be1b95"
        ],
        [
            "Context (Var: Type) (CV: Countable Var).",
            "VernacContext",
            "13929643ba309eb719917cf75b8948d5cc37ab65"
        ],
        [
            "Instance L: Language := MinimunLanguage.L Var.",
            "VernacInstance",
            "2cfa77a52173ac71fae62140c93353c4308a8e83"
        ],
        [
            "Instance minL: MinimunLanguage L := MinimunLanguage.minL Var.",
            "VernacInstance",
            "dd9aea7c0304ead2fda8591e284874d2d13ecf79"
        ],
        [
            "Instance G: ProofTheory L := MinimunLogic.G Var.",
            "VernacInstance",
            "5a9a2935cdabb33f85926873142bc61f9f99ea59"
        ],
        [
            "Instance AX: NormalAxiomatization L G := MinimunLogic.AX Var.",
            "VernacInstance",
            "b1d4f2875e4b464daed9b38670c8900bacc53113"
        ],
        [
            "Instance minAX: MinimunAxiomatization L G := MinimunLogic.minAX Var.",
            "VernacInstance",
            "92511c7e60f384a28a8fa7b265965ea5d43f11c8"
        ],
        [
            "Instance SC: NormalSequentCalculus L G := MinimunLogic.SC Var.",
            "VernacInstance",
            "79afd3ff81aab8d0f78bfaa1f407c848a16618fc"
        ],
        [
            "Instance bSC: BasicSequentCalculus L G := MinimunLogic.bSC Var.",
            "VernacInstance",
            "b131c34a9d6fc2578e82d3a1e75205cde283cdc3"
        ],
        [
            "Instance fwSC: FiniteWitnessedSequentCalculus L G := MinimunLogic.fwSC Var.",
            "VernacInstance",
            "617bcbfbeb30b47155a2751ee0a6952ecc68926d"
        ],
        [
            "Instance minSC: MinimunSequentCalculus L G := MinimunLogic.minSC Var.",
            "VernacInstance",
            "ae2b924e8904f8ab8dbefb3d46b0f2304a56adc3"
        ],
        [
            "Instance Kripke_MD: Model := KripkeSemantics.MD Var.",
            "VernacInstance",
            "410155088a0dce97bcc6b41d65be6df5a557538c"
        ],
        [
            "Instance Kripke_kMD: KripkeModel Kripke_MD := KripkeSemantics.kMD Var.",
            "VernacInstance",
            "b2e8e93b612d0a8827c867a71f255ab42a857521"
        ],
        [
            "Instance Kripke_R (M: Kmodel): Relation (Kworlds M) := KripkeSemantics.R Var M.",
            "VernacInstance",
            "9161d2b627ffa9cd64f7a9820192191f1a315432"
        ],
        [
            "Instance Kripke_SM: Semantics L Kripke_MD := KripkeSemantics.SM Var.",
            "VernacInstance",
            "59d3923135845be65b6d5d039d8ae1f42f8ae0b3"
        ],
        [
            "Instance Kripke_kminSM (M: Kmodel): KripkeMinimunSemantics L Kripke_MD M Kripke_SM := KripkeSemantics.kminSM Var M.",
            "VernacInstance",
            "4a00dba5aa03d66b4aee2353569be82133aaf87a"
        ],
        [
            "Definition cP: context -> Prop := derivable_closed.",
            "VernacDefinition",
            "545c0cae7227ea375dd5e36b341fbc134f43223b"
        ],
        [
            "Lemma AL_DC: at_least derivable_closed cP.",
            "VernacStartTheoremProof",
            "5b35ddaa0e737a152e6facf014b6d5393021c562"
        ],
        [
            "solve_at_least.",
            "VernacExtend",
            "9eab0178c8b7eca91229f90d2a572dca17514a13"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LIN_CD: forall x: expr, Lindenbaum_constructable (cannot_derive x) cP.",
            "VernacStartTheoremProof",
            "3bdf9a076059264bfa362d6556371eec674d4472"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Lindenbaum_constructable_suffice; auto.",
            "VernacExtend",
            "c24a4bf970fc8f7b997ecd853b303a9a18ecde39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply MinimunLanguage.formula_countable; auto.",
            "VernacExtend",
            "41089b2e65dafe3a484dddd790969581d1cd55ac"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Lindenbaum_preserves_cannot_derive.",
            "VernacExtend",
            "13544c6e6df1538712858d8f5beabdae1f05c203"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold cP.",
            "VernacExtend",
            "cd70c0a2a89bdf917e237a208b0c4273ac29cb24"
        ],
        [
            "apply Lindenbaum_cannot_derive_ensures_derivable_closed.",
            "VernacExtend",
            "f3c3ccceea34b1c2a720f3f6a9f5f43ff36525d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition canonical_frame: KripkeSemantics.frame := KripkeSemantics.Build_frame (sig cP) (fun a b => Included _ (proj1_sig a) (proj1_sig b)).",
            "VernacDefinition",
            "560806a7e5bb8ef4e3f5fc7dd8739056d95a44ab"
        ],
        [
            "Definition canonical_eval: Var -> KripkeSemantics.sem canonical_frame := fun p a => proj1_sig a (MinimunLanguage.varp p).",
            "VernacDefinition",
            "f30616e0e200fbcc3feb8fd1e6892d1183ec8d5f"
        ],
        [
            "Definition canonical_Kmodel: @Kmodel (KripkeSemantics.MD Var) (KripkeSemantics.kMD Var) := KripkeSemantics.Build_Kmodel Var canonical_frame canonical_eval.",
            "VernacDefinition",
            "df12ec00be0045cd9bb2cea7a6dd8185216a96e3"
        ],
        [
            "Definition rel: bijection (Kworlds canonical_Kmodel) (sig cP) := bijection_refl.",
            "VernacDefinition",
            "b35f85a0fe290f9edbc5ac70acb4f39290e3ccac"
        ],
        [
            "Definition H_R: forall m n Phi Psi, rel m Phi -> rel n Psi -> (m <= n <-> Included _ (proj1_sig Phi) (proj1_sig Psi)).",
            "VernacDefinition",
            "cb8de7a39e557cd1a9d6891d4c8b5e96145ea63a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change (m = Phi) in H.",
            "VernacExtend",
            "0ec6f4f934b97aa6bfdfc780e56825153a383776"
        ],
        [
            "change (n = Psi) in H0.",
            "VernacExtend",
            "49969171c9b66439730f51658d4e64372975f642"
        ],
        [
            "subst; reflexivity.",
            "VernacExtend",
            "e0e2f5d2bb0ba834bbb8fede1abdf8af65f1ce87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma TRUTH: forall x: expr, forall m Phi, rel m Phi -> (KRIPKE: canonical_Kmodel, m |= x <-> proj1_sig Phi x).",
            "VernacStartTheoremProof",
            "76c21a3a4bf3fc0c14bbe180c9ba45ef802ef2dc"
        ],
        [
            "induction x.",
            "VernacExtend",
            "8d91f99bf5ea35862c5721d2308df13dc2f7aeed"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (truth_lemma_impp cP rel H_R AL_DC LIN_CD x1 x2 IHx1 IHx2).",
            "VernacExtend",
            "22e57ab34af8853a55f370c0ad79284833c35c50"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros; change (m = Phi) in H; subst; reflexivity.",
            "VernacExtend",
            "b07f9bc4b5990d33bb85cf3041aa3392195fb07f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Import Logic.MinimunLogic.DeepEmbedded.KripkeSemantics.",
            "VernacImport",
            "2129bb49e4763b8033c801d95580ae2eb56ed665"
        ],
        [
            "Theorem complete_MinimunLogic_Kripke_all: strongly_complete G Kripke_SM (KripkeModelClass _ (Kmodel_Monotonic + Kmodel_PreOrder)).",
            "VernacStartTheoremProof",
            "195cd95f7e1e085812f36ba24713819985e9c834"
        ],
        [
            "apply (general_completeness cP rel LIN_CD TRUTH).",
            "VernacExtend",
            "fea1c7afd9e99ea5e058ebfbb90d1ff33621d728"
        ],
        [
            "constructor; hnf.",
            "VernacExtend",
            "a94c05acb520dc67a12d56e8a5a9612bfa96358c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exact (denote_monotonic cP rel H_R (MinimunLanguage.varp v) (TRUTH (MinimunLanguage.varp v))).",
            "VernacExtend",
            "41196d5e8cf3c91cf40be790654358086ee789ec"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (po_R cP rel H_R).",
            "VernacExtend",
            "8fbb731690597f85e8e31473f70b2b81b9593651"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Complete.",
            "VernacEndSegment",
            "0a4ba3dd0ad3c00d9559c9c3908c15032790b9c4"
        ]
    ],
    "proofs": [
        {
            "name": "AL_DC",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "solve_at_least.",
                        "VernacExtend",
                        "9eab0178c8b7eca91229f90d2a572dca17514a13"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LIN_CD",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Lindenbaum_constructable_suffice; auto.",
                        "VernacExtend",
                        "c24a4bf970fc8f7b997ecd853b303a9a18ecde39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply MinimunLanguage.formula_countable; auto.",
                        "VernacExtend",
                        "41089b2e65dafe3a484dddd790969581d1cd55ac"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Lindenbaum_preserves_cannot_derive.",
                        "VernacExtend",
                        "13544c6e6df1538712858d8f5beabdae1f05c203"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold cP.",
                        "VernacExtend",
                        "cd70c0a2a89bdf917e237a208b0c4273ac29cb24"
                    ]
                },
                {
                    "command": [
                        "apply Lindenbaum_cannot_derive_ensures_derivable_closed.",
                        "VernacExtend",
                        "f3c3ccceea34b1c2a720f3f6a9f5f43ff36525d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "H_R",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change (m = Phi) in H.",
                        "VernacExtend",
                        "0ec6f4f934b97aa6bfdfc780e56825153a383776"
                    ]
                },
                {
                    "command": [
                        "change (n = Psi) in H0.",
                        "VernacExtend",
                        "49969171c9b66439730f51658d4e64372975f642"
                    ]
                },
                {
                    "command": [
                        "subst; reflexivity.",
                        "VernacExtend",
                        "e0e2f5d2bb0ba834bbb8fede1abdf8af65f1ce87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TRUTH",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "induction x.",
                        "VernacExtend",
                        "8d91f99bf5ea35862c5721d2308df13dc2f7aeed"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (truth_lemma_impp cP rel H_R AL_DC LIN_CD x1 x2 IHx1 IHx2).",
                        "VernacExtend",
                        "22e57ab34af8853a55f370c0ad79284833c35c50"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros; change (m = Phi) in H; subst; reflexivity.",
                        "VernacExtend",
                        "b07f9bc4b5990d33bb85cf3041aa3392195fb07f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "complete_MinimunLogic_Kripke_all",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "apply (general_completeness cP rel LIN_CD TRUTH).",
                        "VernacExtend",
                        "fea1c7afd9e99ea5e058ebfbb90d1ff33621d728"
                    ]
                },
                {
                    "command": [
                        "constructor; hnf.",
                        "VernacExtend",
                        "a94c05acb520dc67a12d56e8a5a9612bfa96358c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exact (denote_monotonic cP rel H_R (MinimunLanguage.varp v) (TRUTH (MinimunLanguage.varp v))).",
                        "VernacExtend",
                        "41196d5e8cf3c91cf40be790654358086ee789ec"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (po_R cP rel H_R).",
                        "VernacExtend",
                        "8fbb731690597f85e8e31473f70b2b81b9593651"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}