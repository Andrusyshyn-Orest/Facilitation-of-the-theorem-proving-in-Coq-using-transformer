{
    "filename": "MinimunLogic/Complete/ContextProperty_Kripke.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Logic.lib.EnsemblesProperties.",
            "VernacRequire",
            "fe77844366aea5d903a9e9096f5fbf875745882f"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.GeneralLogic.ProofTheory.BasicSequentCalculus.",
            "VernacRequire",
            "f2fbc894d63ff9f72127ac59dc8b190ee459f36d"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.Minimun.",
            "VernacRequire",
            "7dd3badfb0ea34d33454f0c461fceaac94fde835"
        ],
        [
            "Require Import Logic.GeneralLogic.Complete.ContextProperty_Kripke.",
            "VernacRequire",
            "01895830dc7a4ab9e5c862740d0b95dfbde3605b"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Section ContextProperty.",
            "VernacBeginSection",
            "ac9783086cf37d7f9b1d47322dcc0e879ffc6a7b"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {fwSC: FiniteWitnessedSequentCalculus L Gamma}.",
            "VernacContext",
            "3b16e7082f297be12004ce6b97e78187b18fe27b"
        ],
        [
            "Lemma can_derive_finite_witnessed: forall x, finite_witnessed (can_derive x).",
            "VernacStartTheoremProof",
            "79572a7070cbcd00c8f16049ee770026466005ba"
        ],
        [
            "intros; hnf; intros.",
            "VernacExtend",
            "25a2940453addb35c5cb9a45b859c5bb9137430c"
        ],
        [
            "apply derivable_finite_witnessed; auto.",
            "VernacExtend",
            "e581b28ce0c9b583d2ef9225d21f8a6e82bf31be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cannot_derive_finite_captured: forall x, finite_captured (cannot_derive x).",
            "VernacStartTheoremProof",
            "5cccb163db051278fe64fc5944c92050a147d23e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (not_finite_witnessed_finite_captured _ (can_derive_finite_witnessed x)).",
            "VernacExtend",
            "631f1b9ca10d61cf206b6983ccd63c44bf1fe7bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ContextProperty.",
            "VernacEndSegment",
            "eb4d91cb49cbf69a2f4c536fecec8650844d153a"
        ]
    ],
    "proofs": [
        {
            "name": "can_derive_finite_witnessed",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros; hnf; intros.",
                        "VernacExtend",
                        "25a2940453addb35c5cb9a45b859c5bb9137430c"
                    ]
                },
                {
                    "command": [
                        "apply derivable_finite_witnessed; auto.",
                        "VernacExtend",
                        "e581b28ce0c9b583d2ef9225d21f8a6e82bf31be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cannot_derive_finite_captured",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (not_finite_witnessed_finite_captured _ (can_derive_finite_witnessed x)).",
                        "VernacExtend",
                        "631f1b9ca10d61cf206b6983ccd63c44bf1fe7bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}