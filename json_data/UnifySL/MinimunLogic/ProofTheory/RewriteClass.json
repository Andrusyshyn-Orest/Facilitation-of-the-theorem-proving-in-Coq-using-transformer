{
    "filename": "MinimunLogic/ProofTheory/RewriteClass.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Classes.Morphisms.",
            "VernacRequire",
            "d6f94fe62e68e8d5e6a6c6513b6c2e04f2b5d71a"
        ],
        [
            "Require Import Coq.Classes.RelationClasses.",
            "VernacRequire",
            "e1e9fb5bb83f789dcff9c0bfa33e2d359b0caa70"
        ],
        [
            "Require Import Coq.Logic.Classical_Prop.",
            "VernacRequire",
            "9ccd680c17c6039100012bae5c1bef8ed35d228a"
        ],
        [
            "Require Import Logic.lib.Coqlib.",
            "VernacRequire",
            "075e5d7e5a261753a32e2d1ec79bc22503d420dc"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.GeneralLogic.ProofTheory.BasicSequentCalculus.",
            "VernacRequire",
            "f2fbc894d63ff9f72127ac59dc8b190ee459f36d"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.Minimun.",
            "VernacRequire",
            "7dd3badfb0ea34d33454f0c461fceaac94fde835"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Section RewriteClass.",
            "VernacBeginSection",
            "b9391048408d5b59206d3cf6517f605ee8d435a0"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L}.",
            "VernacContext",
            "5991dc2b76d7dc2c3ccaaf9fc5981e6faa35598b"
        ],
        [
            "Instance provable_impp_rewrite: RewriteRelation (fun x y => |-- x --> y).",
            "VernacInstance",
            "a68f6c2e44558b8b5d739dbc14faf93b59bf616f"
        ],
        [
            "Instance provable_impp_refl {minAX: MinimunAxiomatization L Gamma}: Reflexive (fun x y => |-- x --> y).",
            "VernacInstance",
            "b7a23bed94972a7583a818492287684f515c1896"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "apply provable_impp_refl.",
            "VernacExtend",
            "2cef60de23967c402db3e33ea4d2e3fd4e449812"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance provable_proper_impp {minAX: MinimunAxiomatization L Gamma} : Proper ((fun x y => |-- impp x y) ==> Basics.impl) provable.",
            "VernacInstance",
            "d677fb22ab0b3d7a3eb2619e0badc9d13dd2ea04"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "eapply modus_ponens; eauto.",
            "VernacExtend",
            "4a0f6c475c0c7a380db49ec68cce671c94cf8792"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance impp_proper_impp {minAX: MinimunAxiomatization L Gamma} : Proper ((fun x y => |-- impp x y) --> (fun x y => |-- impp x y) ==> (fun x y => |-- impp x y)) impp.",
            "VernacInstance",
            "1f585fb317455d9be3848778998c6506a55336aa"
        ],
        [
            "hnf; intros x1 x2 ?.",
            "VernacExtend",
            "8e90a8da42a3f7575ce1a0ed375b243db7d4a357"
        ],
        [
            "hnf; intros y1 y2 ?.",
            "VernacExtend",
            "44aed0e6103062b0d26169cb1b6114bdfd82aa87"
        ],
        [
            "unfold Basics.flip in H.",
            "VernacExtend",
            "1b71405d32bcd599031a7d3e3eac52e5d587a75e"
        ],
        [
            "eapply modus_ponens; [apply provable_impp_arg_switch |].",
            "VernacExtend",
            "3336ebfed6100d0216a33552f00f12a077f18eee"
        ],
        [
            "eapply aux_minimun_rule02; [apply H |].",
            "VernacExtend",
            "c2550519697d1943b7aafeb1bc24248227e47afd"
        ],
        [
            "eapply modus_ponens; [apply provable_impp_arg_switch |].",
            "VernacExtend",
            "3336ebfed6100d0216a33552f00f12a077f18eee"
        ],
        [
            "apply aux_minimun_rule01, H0.",
            "VernacExtend",
            "4864ff585a107a8a363774be6ad615601c0fd4bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance derivable_proper_impp {SC: NormalSequentCalculus L Gamma} {bSC: BasicSequentCalculus L Gamma} {minSC: MinimunSequentCalculus L Gamma} : Proper (eq ==> (fun x y => |-- impp x y) ==> Basics.impl) derivable.",
            "VernacInstance",
            "e11ecb7d8b34152980bf2f44ed5a3227fa068531"
        ],
        [
            "hnf; intros Phi Phi' ?; subst Phi'.",
            "VernacExtend",
            "04113815b0f65ca27d2a8c9b471176f9a5c11d62"
        ],
        [
            "hnf; intros x1 x2 ?.",
            "VernacExtend",
            "8e90a8da42a3f7575ce1a0ed375b243db7d4a357"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply (deduction_weaken0 Phi) in H.",
            "VernacExtend",
            "897fbb7f00334ba0b155e106719bed07a1e02a05"
        ],
        [
            "exact (deduction_modus_ponens _ _ _ H0 H).",
            "VernacExtend",
            "e58bd5af03e2fe40b1527d8cc79ebe5a670c475b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RewriteClass.",
            "VernacEndSegment",
            "b1d6911d78cdd5c1c7fa86bc478c65677d3bd0c4"
        ],
        [
            "Existing Instances provable_impp_rewrite provable_impp_refl provable_proper_impp derivable_proper_impp impp_proper_impp.",
            "VernacDeclareInstances",
            "b430ae597b58dde83b05e841fe2260459ea0138d"
        ],
        [
            "Module TestInAxiomatization.",
            "VernacDefineModule",
            "8d55ae588ffafc1a77c6e3ff15f0a2b911c27139"
        ],
        [
            "Section TestInAxiomatization.",
            "VernacBeginSection",
            "f5c1053eb01590e654d259f2d07e60c8d4776c14"
        ],
        [
            "Existing Instances Axiomatization2SequentCalculus_SC Axiomatization2SequentCalculus_bSC Axiomatization2SequentCalculus_minSC.",
            "VernacDeclareInstances",
            "dc6a7eada46d3df43dcc3aa6c4e231b210ffb52f"
        ],
        [
            "Goal forall {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {AX: NormalAxiomatization L Gamma} {minAX: MinimunAxiomatization L Gamma} (Phi: context) y1 y2, |-- y1 --> y2 -> Phi |-- y1 -> Phi |-- y2.",
            "VernacDefinition",
            "4b74938fe6536134c4dfa181ba9183e062ce5232"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal forall {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {AX: NormalAxiomatization L Gamma} {minAX: MinimunAxiomatization L Gamma} (Phi: context) x1 y1 x2 y2, |-- x2 --> x1 -> |-- y1 --> y2 -> Phi |-- x1 --> y1 -> Phi |-- x2 --> y2.",
            "VernacDefinition",
            "bcbacf7c32726f7ebe379e6395bf4d3db3c97510"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H0 in H1.",
            "VernacExtend",
            "45eb32137302b214d582b77378332f104f8e1d7f"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal forall {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {AX: NormalAxiomatization L Gamma} {minAX: MinimunAxiomatization L Gamma} (Phi: context) x1 y1 x2 y2, |-- x2 --> x1 -> |-- y1 --> y2 -> |-- (x1 --> y1) --> (x2 --> y2).",
            "VernacDefinition",
            "e9c629dac1530950ab495514f00bc8098011399a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H0, H.",
            "VernacExtend",
            "99cac8658cee7b0a177fa471bf63b775311a93ad"
        ],
        [
            "apply provable_impp_refl.",
            "VernacExtend",
            "2cef60de23967c402db3e33ea4d2e3fd4e449812"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End TestInAxiomatization.",
            "VernacEndSegment",
            "bcc07a164077d07d4b38f1f8cc60989df1bfb924"
        ],
        [
            "End TestInAxiomatization.",
            "VernacEndSegment",
            "bcc07a164077d07d4b38f1f8cc60989df1bfb924"
        ],
        [
            "Module TestInSequentCalculus.",
            "VernacDefineModule",
            "cb06afa4f4a2da40585caa9208bb37c48e7f151f"
        ],
        [
            "Section TestInSequentCalculus.",
            "VernacBeginSection",
            "32e1fb2147f7ba47c9cfe48dbda903d8685bd415"
        ],
        [
            "Existing Instances SequentCalculus2Axiomatization_minAX.",
            "VernacDeclareInstances",
            "54d96ec2234be86fce346eeb8ad4a10cc1f3f150"
        ],
        [
            "Goal forall {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {SC: NormalSequentCalculus L Gamma} {bSC: BasicSequentCalculus L Gamma} {minSC: MinimunSequentCalculus L Gamma} (Phi: context) y1 y2, |-- y1 --> y2 -> Phi |-- y1 -> Phi |-- y2.",
            "VernacDefinition",
            "a1fa404f232a1074bf0e5775a7313c901ad942fd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal forall {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {SC: NormalSequentCalculus L Gamma} {bSC: BasicSequentCalculus L Gamma} {minSC: MinimunSequentCalculus L Gamma} (Phi: context) x1 y1 x2 y2, |-- x2 --> x1 -> |-- y1 --> y2 -> Phi |-- x1 --> y1 -> Phi |-- x2 --> y2.",
            "VernacDefinition",
            "0d05ec68d89b3d1e5fcba9899d0d039ac2bc671c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H0 in H1.",
            "VernacExtend",
            "45eb32137302b214d582b77378332f104f8e1d7f"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal forall {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {SC: NormalSequentCalculus L Gamma} {bSC: BasicSequentCalculus L Gamma} {minSC: MinimunSequentCalculus L Gamma} (Phi: context) x1 y1 x2 y2, |-- x2 --> x1 -> |-- y1 --> y2 -> |-- (x1 --> y1) --> (x2 --> y2).",
            "VernacDefinition",
            "04e5fe4c67d982b1ad32a5b75db4624d2bf8742f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H0, H.",
            "VernacExtend",
            "99cac8658cee7b0a177fa471bf63b775311a93ad"
        ],
        [
            "apply provable_impp_refl.",
            "VernacExtend",
            "2cef60de23967c402db3e33ea4d2e3fd4e449812"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End TestInSequentCalculus.",
            "VernacEndSegment",
            "7b98954539958ce5331e70beaea1e4fc3ff9816a"
        ],
        [
            "End TestInSequentCalculus.",
            "VernacEndSegment",
            "7b98954539958ce5331e70beaea1e4fc3ff9816a"
        ]
    ],
    "proofs": [
        {
            "name": "provable_impp_refl",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "apply provable_impp_refl.",
                        "VernacExtend",
                        "2cef60de23967c402db3e33ea4d2e3fd4e449812"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_proper_impp",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "eapply modus_ponens; eauto.",
                        "VernacExtend",
                        "4a0f6c475c0c7a380db49ec68cce671c94cf8792"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "impp_proper_impp",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "hnf; intros x1 x2 ?.",
                        "VernacExtend",
                        "8e90a8da42a3f7575ce1a0ed375b243db7d4a357"
                    ]
                },
                {
                    "command": [
                        "hnf; intros y1 y2 ?.",
                        "VernacExtend",
                        "44aed0e6103062b0d26169cb1b6114bdfd82aa87"
                    ]
                },
                {
                    "command": [
                        "unfold Basics.flip in H.",
                        "VernacExtend",
                        "1b71405d32bcd599031a7d3e3eac52e5d587a75e"
                    ]
                },
                {
                    "command": [
                        "eapply modus_ponens; [apply provable_impp_arg_switch |].",
                        "VernacExtend",
                        "3336ebfed6100d0216a33552f00f12a077f18eee"
                    ]
                },
                {
                    "command": [
                        "eapply aux_minimun_rule02; [apply H |].",
                        "VernacExtend",
                        "c2550519697d1943b7aafeb1bc24248227e47afd"
                    ]
                },
                {
                    "command": [
                        "eapply modus_ponens; [apply provable_impp_arg_switch |].",
                        "VernacExtend",
                        "3336ebfed6100d0216a33552f00f12a077f18eee"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_rule01, H0.",
                        "VernacExtend",
                        "4864ff585a107a8a363774be6ad615601c0fd4bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivable_proper_impp",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "hnf; intros Phi Phi' ?; subst Phi'.",
                        "VernacExtend",
                        "04113815b0f65ca27d2a8c9b471176f9a5c11d62"
                    ]
                },
                {
                    "command": [
                        "hnf; intros x1 x2 ?.",
                        "VernacExtend",
                        "8e90a8da42a3f7575ce1a0ed375b243db7d4a357"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply (deduction_weaken0 Phi) in H.",
                        "VernacExtend",
                        "897fbb7f00334ba0b155e106719bed07a1e02a05"
                    ]
                },
                {
                    "command": [
                        "exact (deduction_modus_ponens _ _ _ H0 H).",
                        "VernacExtend",
                        "e58bd5af03e2fe40b1527d8cc79ebe5a670c475b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Unnamed_thm",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Unnamed_thm0",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H1.",
                        "VernacExtend",
                        "45eb32137302b214d582b77378332f104f8e1d7f"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Unnamed_thm1",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0, H.",
                        "VernacExtend",
                        "99cac8658cee7b0a177fa471bf63b775311a93ad"
                    ]
                },
                {
                    "command": [
                        "apply provable_impp_refl.",
                        "VernacExtend",
                        "2cef60de23967c402db3e33ea4d2e3fd4e449812"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}