{
    "filename": "MinimunLogic/ProofTheory/Minimun.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Logic.lib.Coqlib.",
            "VernacRequire",
            "075e5d7e5a261753a32e2d1ec79bc22503d420dc"
        ],
        [
            "Require Import Logic.lib.Ensembles_ext.",
            "VernacRequire",
            "19fa136320dca316056a1bf8e4a3fb50fe8a2192"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.GeneralLogic.ProofTheory.TheoryOfSequentCalculus.",
            "VernacRequire",
            "e09adf6abc8cad08c4b7fb9913bafd46aaa36819"
        ],
        [
            "Require Import Logic.GeneralLogic.ProofTheory.BasicSequentCalculus.",
            "VernacRequire",
            "f2fbc894d63ff9f72127ac59dc8b190ee459f36d"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.TheoryOfSequentCalculus.",
            "VernacRequire",
            "a1ef75b1ed1734998112176830f9724b5ef0adad"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Definition multi_imp {L: Language} {minL: MinimunLanguage L} (xs: list expr) (y: expr): expr := fold_right impp y xs.",
            "VernacDefinition",
            "2ce60b7719116207565de6d4b26f7ef672a32638"
        ],
        [
            "Class NormalAxiomatization (L: Language) {minL: MinimunLanguage L} (Gamma: ProofTheory L): Type := { derivable_provable: forall Phi y, derivable Phi y <-> exists xs, Forall (fun x => Phi x) xs /\\ provable (multi_imp xs y) }.",
            "VernacInductive",
            "e3c121d83fe28f87a91ee8e1fbb21b924f78c53e"
        ],
        [
            "Class MinimunAxiomatization (L: Language) {minL: MinimunLanguage L} (Gamma: ProofTheory L) := { modus_ponens: forall x y, |-- (x --> y) -> |-- x -> |-- y; axiom1: forall x y, |-- (x --> (y --> x)); axiom2: forall x y z, |-- ((x --> y --> z) --> (x --> y) --> (x --> z)) }.",
            "VernacInductive",
            "0fc427f1a43720edf1242784f0febe0ba594a6bb"
        ],
        [
            "Class MinimunSequentCalculus (L: Language) {minL: MinimunLanguage L} (Gamma: ProofTheory L) := { deduction_modus_ponens: forall Phi x y, Phi |-- x -> Phi |-- x --> y -> Phi |-- y; deduction_impp_intros: forall Phi x y, Phi;; x |-- y -> Phi |-- x --> y }.",
            "VernacInductive",
            "81d951542d4d73a07195e55c55bb1b553eb44eab"
        ],
        [
            "Section DerivableRulesFromAxiomatization.",
            "VernacBeginSection",
            "517488eb3e5d7ee9e41a0ef9f56d092d85d1c887"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {minAX: MinimunAxiomatization L Gamma}.",
            "VernacContext",
            "a4a977d77521e39985620e49f4a45b5ccb09da20"
        ],
        [
            "Lemma provable_impp_refl: forall (x: expr), |-- x --> x.",
            "VernacStartTheoremProof",
            "e844e1ea86db96fa1c9b0fbb712583e4d84dc19a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof axiom2 x (x --> x) x.",
            "VernacExtend",
            "a7cd5760ca2a73dbaf6fdde21218b5525d2f1f54"
        ],
        [
            "pose proof axiom1 x (x --> x).",
            "VernacExtend",
            "d8058ca6b93a2ef7385c5ea9f85bc591090df806"
        ],
        [
            "pose proof axiom1 x x.",
            "VernacExtend",
            "6501b8a971e70ee9b614f854bb2747fb565426cc"
        ],
        [
            "pose proof modus_ponens _ _ H H0.",
            "VernacExtend",
            "5f100d5fdc0bfb7ffa3f6645fc32ef940d95824e"
        ],
        [
            "pose proof modus_ponens _ _ H2 H1.",
            "VernacExtend",
            "8d2269d4707c9d99367b2e94cad0afda8bfe51a6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aux_minimun_rule00: forall (x y: expr), |-- x -> |-- y --> x.",
            "VernacStartTheoremProof",
            "2edd99509c38afe315b23782af29f7673bf0873c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof axiom1 x y.",
            "VernacExtend",
            "f6b95e126fce0575f991b473c81e9ef2b078c847"
        ],
        [
            "eapply modus_ponens; eauto.",
            "VernacExtend",
            "4a0f6c475c0c7a380db49ec68cce671c94cf8792"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aux_minimun_theorem00: forall (x y z: expr), |-- (y --> z) --> (x --> y) --> (x --> z).",
            "VernacStartTheoremProof",
            "ca67d0ae082336d5c926523b465cb7325c47a686"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof axiom2 x y z.",
            "VernacExtend",
            "e74421b16c4dc9a8cb838a8f0447f7dc6689275e"
        ],
        [
            "pose proof aux_minimun_rule00 _ (y --> z) H.",
            "VernacExtend",
            "0c96d00d8fdd35d9bba02db35cf14220939752cc"
        ],
        [
            "pose proof axiom1 (y --> z) x.",
            "VernacExtend",
            "4794a38b48ece204fc17ad5ca00e72df4786ab20"
        ],
        [
            "pose proof axiom2 (y --> z) (x --> y --> z) ((x --> y) --> (x --> z)).",
            "VernacExtend",
            "36fa63ae97d5de622f5d3050bef7bbee76a5c887"
        ],
        [
            "pose proof modus_ponens _ _ H2 H0.",
            "VernacExtend",
            "6e00cbd370d7c7f069585a1568bc1cee2a865281"
        ],
        [
            "pose proof modus_ponens _ _ H3 H1.",
            "VernacExtend",
            "0bf9a9b1d1e1021ef088210924d991fb7585628c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aux_minimun_rule01: forall (x y z: expr), |-- x --> y -> |-- (z --> x) --> (z --> y).",
            "VernacStartTheoremProof",
            "4c3ef5aa3c3789e2b77286c09d03f2ec51bc7005"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof aux_minimun_theorem00 z x y.",
            "VernacExtend",
            "17785f034d0e7417370784f678ba0b89766fb528"
        ],
        [
            "pose proof modus_ponens _ _ H0 H.",
            "VernacExtend",
            "3164128b16c386b15e6b52fe4ba88d9cbe3b637f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aux_minimun_rule02: forall (x y z: expr), |-- x --> y -> |-- y --> z -> |-- x --> z.",
            "VernacStartTheoremProof",
            "36d5a00f2ee878938c5c2ec755df2c4d5b00aac1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof aux_minimun_theorem00 x y z.",
            "VernacExtend",
            "13a8fa09976e0cae3c97307a7a3b37d92fcdab3a"
        ],
        [
            "pose proof modus_ponens _ _ H1 H0.",
            "VernacExtend",
            "a2a92a4f42f67633657b27ac4984ca725dac1a04"
        ],
        [
            "pose proof modus_ponens _ _ H2 H.",
            "VernacExtend",
            "f01a974b33f3bf9a14258334fa940b27bb8b8c17"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aux_minimun_theorem01: forall (x y z: expr), |-- (x --> z) --> (x --> y --> z).",
            "VernacStartTheoremProof",
            "18beff8573a33dd268e1c959e74be9fe2e8c5ca4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply aux_minimun_rule01.",
            "VernacExtend",
            "228a3498c27706b55a60cef7df00bc7400d9f920"
        ],
        [
            "apply axiom1.",
            "VernacExtend",
            "7855e8fddfd7840bda503aa9283762f0e86ece23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aux_minimun_theorem02: forall (x y: expr), |-- x --> (x --> y) --> y.",
            "VernacStartTheoremProof",
            "9217c300b19fe0b036bcdfdb5f305228a24fc3eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof axiom2 (x --> y) x y.",
            "VernacExtend",
            "91ee8150af6a594812bc6df02d606c80805876e8"
        ],
        [
            "pose proof provable_impp_refl (x --> y).",
            "VernacExtend",
            "d7e32f9ed7125eccf1d76c317b6c9313c36267a3"
        ],
        [
            "pose proof modus_ponens _ _ H H0.",
            "VernacExtend",
            "5f100d5fdc0bfb7ffa3f6645fc32ef940d95824e"
        ],
        [
            "pose proof aux_minimun_rule01 _ _ x H1.",
            "VernacExtend",
            "dce094db9513b48a9cf53eace0b35ee797049249"
        ],
        [
            "pose proof axiom1 x (x --> y).",
            "VernacExtend",
            "ff57489c0d47a636968e2f86661d1191d539004b"
        ],
        [
            "pose proof modus_ponens _ _ H2 H3.",
            "VernacExtend",
            "efd53f610b3dafc56dc9f1573bce2c560682bdf8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aux_minimun_theorem03: forall (x y z: expr), |-- y --> (x --> y --> z) --> (x --> z).",
            "VernacStartTheoremProof",
            "0cb81aa88b0a2e34657e91707747874616067589"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof aux_minimun_theorem00 x (y --> z) z.",
            "VernacExtend",
            "d29e6808a48a9df65a8d9a7496ccd96268c554fe"
        ],
        [
            "pose proof aux_minimun_theorem02 y z.",
            "VernacExtend",
            "f8212360704dc967f188190045257322462f96d1"
        ],
        [
            "eapply aux_minimun_rule02; eauto.",
            "VernacExtend",
            "62da9983769004c1a556a64dd74a79b87e069e52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aux_minimun_theorem04: forall (x y: expr), |-- (x --> x --> y) --> x --> y.",
            "VernacStartTheoremProof",
            "315b40757a639cddedaf645f3bea55fec49ea30e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof axiom2 x (x --> y) y.",
            "VernacExtend",
            "cb4312de54cc3d481b2b899b4f462950c0a3377a"
        ],
        [
            "pose proof aux_minimun_theorem02 x y.",
            "VernacExtend",
            "96be832252924fa0e48e65c3b7d00791910fd050"
        ],
        [
            "pose proof modus_ponens _ _ H H0.",
            "VernacExtend",
            "5f100d5fdc0bfb7ffa3f6645fc32ef940d95824e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma provable_impp_arg_switch: forall (x y z: expr), |-- (x --> y --> z) --> (y --> x --> z).",
            "VernacStartTheoremProof",
            "8171f94110c32dd45312d137e1098697b1c591be"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply aux_minimun_rule02 with (y --> x --> y --> z).",
            "VernacExtend",
            "859f82c0442f0ab30f25666cc3e0f2424fc8461b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply axiom1.",
            "VernacExtend",
            "7855e8fddfd7840bda503aa9283762f0e86ece23"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof axiom2 y (x --> y --> z) (x --> z).",
            "VernacExtend",
            "0f3f3f30715cf2cda04818655487a1176da983f2"
        ],
        [
            "eapply modus_ponens; eauto.",
            "VernacExtend",
            "4a0f6c475c0c7a380db49ec68cce671c94cf8792"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "pose proof aux_minimun_theorem00 x (y --> z) z.",
            "VernacExtend",
            "d29e6808a48a9df65a8d9a7496ccd96268c554fe"
        ],
        [
            "eapply aux_minimun_rule02; eauto.",
            "VernacExtend",
            "62da9983769004c1a556a64dd74a79b87e069e52"
        ],
        [
            "apply aux_minimun_theorem02.",
            "VernacExtend",
            "04de4d38e9be62b00a6cd02278abd8265b7b7c42"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma provable_impp_trans: forall (x y z: expr), |-- (x --> y) --> (y --> z) --> (x --> z).",
            "VernacStartTheoremProof",
            "0080e560ad3b86d0a4c494ba1ed94e53fa38bf62"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof provable_impp_arg_switch (y --> z) (x --> y) (x --> z).",
            "VernacExtend",
            "0547233487233e4c507dfd96f7a2aec1ea0e55c3"
        ],
        [
            "eapply modus_ponens; eauto.",
            "VernacExtend",
            "4a0f6c475c0c7a380db49ec68cce671c94cf8792"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "apply aux_minimun_theorem00.",
            "VernacExtend",
            "e9835fd8f1018491aa727c8bea87d7eae027c151"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DerivableRulesFromAxiomatization.",
            "VernacEndSegment",
            "edd3468ba3a73aec42e5a6944ebffaf56978b597"
        ],
        [
            "Section DerivableRules_multi_impp.",
            "VernacBeginSection",
            "734a8b115ab64aa558a4e939b1235339f1d9cf8a"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {minAX: MinimunAxiomatization L Gamma}.",
            "VernacContext",
            "a4a977d77521e39985620e49f4a45b5ccb09da20"
        ],
        [
            "Lemma provable_multi_imp_shrink: forall (xs: list expr) (x y: expr), |-- (x --> multi_imp xs (x --> y)) --> multi_imp xs (x --> y).",
            "VernacStartTheoremProof",
            "d44fe0f02c9de7d99b8bd6a7d2ac22b486c18f41"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction xs.",
            "VernacExtend",
            "0e9eb6fc1f0dee078c23e7297de8adcefdbd4711"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply aux_minimun_theorem04.",
            "VernacExtend",
            "89aa4d885f59998890a8b45984936b34ee020560"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply aux_minimun_rule01 with (z := a) in IHxs.",
            "VernacExtend",
            "d6aee067c0653df4a1f636f836080bba8cf8bc5f"
        ],
        [
            "eapply aux_minimun_rule02; [| eauto].",
            "VernacExtend",
            "f3f6b5830e8a49de00a3c3cf9235a683a4e5f951"
        ],
        [
            "apply provable_impp_arg_switch.",
            "VernacExtend",
            "587147ad5c398a1d63b2ea8ff3adba2f35d1f67a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma provable_multi_imp_arg_switch1: forall (xs: list expr) (x y: expr), |-- (x --> multi_imp xs y) --> multi_imp xs (x --> y).",
            "VernacStartTheoremProof",
            "4f818bb6076561d9e7b72b8dcdf034fbf8d8ddfa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction xs.",
            "VernacExtend",
            "0e9eb6fc1f0dee078c23e7297de8adcefdbd4711"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply provable_impp_refl.",
            "VernacExtend",
            "2cef60de23967c402db3e33ea4d2e3fd4e449812"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply aux_minimun_rule02 with (a --> x --> multi_imp xs y).",
            "VernacExtend",
            "41321514fe58be3cfbb51c085b6646ead6be522e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply provable_impp_arg_switch.",
            "VernacExtend",
            "587147ad5c398a1d63b2ea8ff3adba2f35d1f67a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply aux_minimun_rule01; auto.",
            "VernacExtend",
            "00b436a89bfde3a3a213f4098a2b3847f626e59c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma provable_multi_imp_arg_switch2: forall (xs: list expr) (x y: expr), |-- multi_imp xs (x --> y) --> (x --> multi_imp xs y).",
            "VernacStartTheoremProof",
            "1d20bf6a6d2c2006b1a9161d014e7f97e2576058"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction xs.",
            "VernacExtend",
            "0e9eb6fc1f0dee078c23e7297de8adcefdbd4711"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply provable_impp_refl.",
            "VernacExtend",
            "2cef60de23967c402db3e33ea4d2e3fd4e449812"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply aux_minimun_rule02 with (a --> x --> multi_imp xs y).",
            "VernacExtend",
            "41321514fe58be3cfbb51c085b6646ead6be522e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply aux_minimun_rule01; auto.",
            "VernacExtend",
            "00b436a89bfde3a3a213f4098a2b3847f626e59c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply provable_impp_arg_switch.",
            "VernacExtend",
            "587147ad5c398a1d63b2ea8ff3adba2f35d1f67a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma provable_multi_imp_weaken: forall (xs: list expr) (x y: expr), |-- x --> y -> |-- multi_imp xs x --> multi_imp xs y.",
            "VernacStartTheoremProof",
            "ef0399e7e2a3b5ce4855e4c033a224c6b24c66fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction xs.",
            "VernacExtend",
            "0e9eb6fc1f0dee078c23e7297de8adcefdbd4711"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply aux_minimun_rule01; auto.",
            "VernacExtend",
            "00b436a89bfde3a3a213f4098a2b3847f626e59c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma provable_multi_imp_split: forall Phi1 Phi2 (xs: list expr) (y: expr), Forall (Union _ Phi1 Phi2) xs -> |-- multi_imp xs y -> exists xs1 xs2, Forall Phi1 xs1 /\\ Forall Phi2 xs2 /\\ |-- multi_imp xs1 (multi_imp xs2 y).",
            "VernacStartTheoremProof",
            "2c85f9f92e83691269d5fdf5276023e37ca37733"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert y H0; induction H.",
            "VernacExtend",
            "66cefd3a3b3b47f769759ba8f3ec392bb5c8f6b6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists nil, nil.",
            "VernacExtend",
            "477b7089fbf250a5f4762d297bec9823c35a3148"
        ],
        [
            "split; [| split]; [constructor .. | auto].",
            "VernacExtend",
            "7b76661335b33c051be80ee6d62286b5aa8efc94"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "specialize (IHForall (x --> y)).",
            "VernacExtend",
            "a37480b5e9d036efed799acd1deb1d9017fd358b"
        ],
        [
            "eapply modus_ponens in H1; [| simpl; apply provable_multi_imp_arg_switch1].",
            "VernacExtend",
            "38dfe6f21759e05fdc033f2b19940ecf0e1e0d5d"
        ],
        [
            "specialize (IHForall H1); clear H1.",
            "VernacExtend",
            "a55db853eb0d24b5ad6a60079f255445c85f1d59"
        ],
        [
            "destruct IHForall as [xs1 [xs2 [? [? ?]]]].",
            "VernacExtend",
            "db87b8e74255c839ee97ed46d9c04917a8715f73"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (x :: xs1), xs2.",
            "VernacExtend",
            "a5c03686a6f10b565a988c62b0299efe99998cae"
        ],
        [
            "split; [constructor | split]; auto.",
            "VernacExtend",
            "a1dfe7096cc50768134aeb5ce894048cd974b019"
        ],
        [
            "simpl; eapply modus_ponens; [apply provable_multi_imp_arg_switch2 |].",
            "VernacExtend",
            "aca8ac3f32d671b5df702b66f6e43c1fd8682466"
        ],
        [
            "eapply modus_ponens; [apply provable_multi_imp_weaken | exact H3].",
            "VernacExtend",
            "54185a00dfa1e1902248926ba5189b8f07c16758"
        ],
        [
            "apply provable_multi_imp_arg_switch2.",
            "VernacExtend",
            "6748484a2af3dd867ebccb4b30b55056dadae04a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists xs1, (x :: xs2).",
            "VernacExtend",
            "c85bd9f08ac269fa50b2ba74b928b2fa061a5876"
        ],
        [
            "split; [| split; [constructor | ]]; auto.",
            "VernacExtend",
            "d82e0f35581dc84738520241252cf3ff2884b02e"
        ],
        [
            "eapply modus_ponens; [apply provable_multi_imp_weaken | exact H3].",
            "VernacExtend",
            "54185a00dfa1e1902248926ba5189b8f07c16758"
        ],
        [
            "simpl; apply provable_multi_imp_arg_switch2.",
            "VernacExtend",
            "e3e67c02e1ce44d495128d1eac30b7b6f866613b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma provable_add_multi_imp_left_head: forall xs1 xs2 y, |-- multi_imp xs2 y --> multi_imp (xs1 ++ xs2) y.",
            "VernacStartTheoremProof",
            "79accf10991411b12dcd7f50943050bb6b2c40b2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction xs1.",
            "VernacExtend",
            "c87c1084ea303741f85a18f44837aa491bd4666f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply provable_impp_refl.",
            "VernacExtend",
            "2cef60de23967c402db3e33ea4d2e3fd4e449812"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply aux_minimun_rule02; eauto.",
            "VernacExtend",
            "62da9983769004c1a556a64dd74a79b87e069e52"
        ],
        [
            "apply axiom1.",
            "VernacExtend",
            "7855e8fddfd7840bda503aa9283762f0e86ece23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma provable_add_multi_imp_left_tail: forall xs1 xs2 y, |-- multi_imp xs1 y --> multi_imp (xs1 ++ xs2) y.",
            "VernacStartTheoremProof",
            "7c83c179d0274e66e4520085b1b10a590213c3d3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction xs1; simpl.",
            "VernacExtend",
            "254af69b9f69fcf789bc6355f7a3028a2e34be3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (provable_add_multi_imp_left_head xs2 nil y).",
            "VernacExtend",
            "1def8dd6ecbaa4765a4de81f01a34b9abd06a390"
        ],
        [
            "rewrite app_nil_r in H; auto.",
            "VernacExtend",
            "f2d220a8c8a0bdeb671db1e3d577ecdccc55d6de"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply aux_minimun_rule01; auto.",
            "VernacExtend",
            "00b436a89bfde3a3a213f4098a2b3847f626e59c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma provable_multi_imp_modus_ponens: forall xs y z, |-- multi_imp xs y --> multi_imp xs (y --> z) --> multi_imp xs z.",
            "VernacStartTheoremProof",
            "6e5bfcd758b2776e9a8955a1557e3f7298ac2ac0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction xs; simpl.",
            "VernacExtend",
            "40c854081c19706371701b3faa91a9a85bff1fbc"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply aux_minimun_theorem02.",
            "VernacExtend",
            "04de4d38e9be62b00a6cd02278abd8265b7b7c42"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply aux_minimun_rule02; [| apply provable_impp_arg_switch].",
            "VernacExtend",
            "ac4a3c206bd8c4aced102652df2982b6b3c8a334"
        ],
        [
            "eapply aux_minimun_rule02; [| apply aux_minimun_theorem04].",
            "VernacExtend",
            "e3f6e77aa97d03b200fdea605e9bfdba15be69a5"
        ],
        [
            "apply aux_minimun_rule01.",
            "VernacExtend",
            "228a3498c27706b55a60cef7df00bc7400d9f920"
        ],
        [
            "eapply aux_minimun_rule02; [eauto |].",
            "VernacExtend",
            "f0cd1993729e681cbab67d16c74a370a33220074"
        ],
        [
            "eapply aux_minimun_rule02; [| apply provable_impp_arg_switch].",
            "VernacExtend",
            "ac4a3c206bd8c4aced102652df2982b6b3c8a334"
        ],
        [
            "apply aux_minimun_theorem00.",
            "VernacExtend",
            "e9835fd8f1018491aa727c8bea87d7eae027c151"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DerivableRules_multi_impp.",
            "VernacEndSegment",
            "06a8233aebdb608ea1db1e1c73f8ae01a39f89c8"
        ],
        [
            "Section Axiomatization2SequentCalculus.",
            "VernacBeginSection",
            "887005e15fb357e549e5cd43d3b17feac4d1ceac"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {AX: NormalAxiomatization L Gamma}.",
            "VernacContext",
            "b6392fd9a5bcde535b0b9d62cf54b1901cc2e109"
        ],
        [
            "Lemma Axiomatization2SequentCalculus_SC: NormalSequentCalculus L Gamma.",
            "VernacStartTheoremProof",
            "51bbb40b7287bcef5b7c717d13447a63f082efe0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite derivable_provable.",
            "VernacExtend",
            "94c13223b5d575effa74d5d9ac45be5ef0b3403d"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists nil; split; auto.",
            "VernacExtend",
            "7e80d9014a9ada67737b220185b6df997d48b4ed"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H as [xs [? ?]].",
            "VernacExtend",
            "0ab4fe8af6122e075588673eb903d246e6e736f8"
        ],
        [
            "destruct xs; [auto |].",
            "VernacExtend",
            "780b5bc6c86e2957b4d69fe4bb86a4dca84e5200"
        ],
        [
            "inversion H; subst.",
            "VernacExtend",
            "123ebc73101dcac5781200440a60232218464ea1"
        ],
        [
            "inversion H3.",
            "VernacExtend",
            "129aa425681b58d2ed0d3637122128b1b28fd63b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Context {minAX: MinimunAxiomatization L Gamma}.",
            "VernacContext",
            "16500b98e7d953d7666330cfead8721b3897bbc1"
        ],
        [
            "Lemma Axiomatization2SequentCalculus_fwSC: FiniteWitnessedSequentCalculus L Gamma.",
            "VernacStartTheoremProof",
            "7563bf6cb40b0cc8525debb35cc1b51fb8b44b68"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "rewrite derivable_provable in H.",
            "VernacExtend",
            "a0ab07ac425b343c8ca1e3eaeeb06543b80e0321"
        ],
        [
            "destruct H as [xs [? ?]].",
            "VernacExtend",
            "0ab4fe8af6122e075588673eb903d246e6e736f8"
        ],
        [
            "exists xs.",
            "VernacExtend",
            "424cf2dab50b36ff4dcabebd417cbeb5f2f87d15"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite derivable_provable.",
            "VernacExtend",
            "94c13223b5d575effa74d5d9ac45be5ef0b3403d"
        ],
        [
            "exists xs.",
            "VernacExtend",
            "424cf2dab50b36ff4dcabebd417cbeb5f2f87d15"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite Forall_forall; auto.",
            "VernacExtend",
            "9c82c9fa278e9a49a8ac859f05f73c06aec968e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Axiomatization2SequentCalculus_minSC: MinimunSequentCalculus L Gamma.",
            "VernacStartTheoremProof",
            "836bede5ade9aa0c94271d24599cfcbf944a4e19"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite derivable_provable in H, H0 |- *.",
            "VernacExtend",
            "ef075bcd582d27ccb418be636c39c760dab49b32"
        ],
        [
            "destruct H as [xs1 [? ?]], H0 as [xs2 [? ?]].",
            "VernacExtend",
            "d3b434d264297befb2f04bc265de8c011d035597"
        ],
        [
            "exists (xs1 ++ xs2); split.",
            "VernacExtend",
            "467eb84180140b4c3ca8e7cdab10fa3212eb29c3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Forall_app_iff; auto.",
            "VernacExtend",
            "19b49d147b4392c981c28816578f458d1d41bdb2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof modus_ponens _ _ (provable_add_multi_imp_left_tail xs1 xs2 _) H1.",
            "VernacExtend",
            "aad40a1953c40c1a33d71c7fd8fa864876913c9d"
        ],
        [
            "pose proof modus_ponens _ _ (provable_add_multi_imp_left_head xs1 xs2 _) H2.",
            "VernacExtend",
            "a03d4fa4b161dfc7a4eda73ae247f597df26cbdc"
        ],
        [
            "pose proof provable_multi_imp_modus_ponens (xs1 ++ xs2) x y.",
            "VernacExtend",
            "78eda62d6cb7911ffdd7bb08455bbdf45d630495"
        ],
        [
            "pose proof modus_ponens _ _ H5 H3.",
            "VernacExtend",
            "9040c648ac27b7bf2914fc7ff8c20af515487c43"
        ],
        [
            "pose proof modus_ponens _ _ H6 H4.",
            "VernacExtend",
            "a1451a64a8a66393f10a4f126aaa8eadb85493f2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite derivable_provable in H |- *.",
            "VernacExtend",
            "0e3de1a546f9c4f049646d557dbad00f69aba624"
        ],
        [
            "destruct H as [xs [? ?]].",
            "VernacExtend",
            "0ab4fe8af6122e075588673eb903d246e6e736f8"
        ],
        [
            "pose proof provable_multi_imp_split _ _ _ _ H H0 as [xs1 [xs2 [? [? ?]]]].",
            "VernacExtend",
            "4facd0219a8cc73f5b881d357fb6e154adc999b8"
        ],
        [
            "exists xs1.",
            "VernacExtend",
            "651ac749e492e0c9e3c2c3e3a7845d8a31e4be05"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "eapply modus_ponens; [| exact H3].",
            "VernacExtend",
            "dc46171a19acad078b07534c466e47789e9c6368"
        ],
        [
            "apply provable_multi_imp_weaken.",
            "VernacExtend",
            "9d501afc08712be1a519f2a835d03c991f25d365"
        ],
        [
            "clear - H2 minAX.",
            "VernacExtend",
            "67c7335b68910f3810332d6dd3ee6c2e776edcb7"
        ],
        [
            "induction H2.",
            "VernacExtend",
            "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply axiom1.",
            "VernacExtend",
            "7855e8fddfd7840bda503aa9283762f0e86ece23"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H; subst x0; clear H.",
            "VernacExtend",
            "7a42d07a6a5069f7730659e3aa0bbebd4d69546b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "pose proof aux_minimun_theorem04 x y.",
            "VernacExtend",
            "9d0bac94cce721022ea3208d65dd66724e74499c"
        ],
        [
            "pose proof aux_minimun_rule01 _ _ x IHForall.",
            "VernacExtend",
            "74073697326fe7bb69ae7c890d68335b8eb095f2"
        ],
        [
            "eapply aux_minimun_rule02; [exact H0 | exact H].",
            "VernacExtend",
            "cbc3e3bedf7e2a0ec7dc3fc4f20a0daf7e919ac3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Axiomatization2SequentCalculus_bSC: BasicSequentCalculus L Gamma.",
            "VernacStartTheoremProof",
            "bb5b2c39ec3ec44b8430f26664491369edc57b21"
        ],
        [
            "assert (DW: DeductionWeaken L Gamma).",
            "VernacExtend",
            "fa544517ff291cad12dff256942887ede9d5752c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "rewrite derivable_provable in H0 |- *.",
            "VernacExtend",
            "6982e98cb13d3b09b290e843c639d21e0d5ea260"
        ],
        [
            "destruct H0 as [xs [? ?]].",
            "VernacExtend",
            "4a63a985430767950b1c47a34504c20dfafa9267"
        ],
        [
            "exists xs; split; auto.",
            "VernacExtend",
            "1ba0b4128e26ae7762c57f08b26f14094818e065"
        ],
        [
            "revert H0; apply Forall_impl.",
            "VernacExtend",
            "47c08e7ee8d4aa7968777223f33b3a524c6e2648"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite derivable_provable.",
            "VernacExtend",
            "94c13223b5d575effa74d5d9ac45be5ef0b3403d"
        ],
        [
            "exists (x :: nil); split.",
            "VernacExtend",
            "8e61ed6111f9b72212c7210168e97b6630dde016"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply provable_impp_refl.",
            "VernacExtend",
            "2cef60de23967c402db3e33ea4d2e3fd4e449812"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply DeductionWeaken_ContextualDerivableFiniteWitnessed_DeductionSubst1_2_DeductionSubst.",
            "VernacExtend",
            "83061629e1e7fa6cedd294c8f1eb6eb5a7190052"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact DW.",
            "VernacExtend",
            "6e750827b0c29ea2001dcbc94a11fbc61cbdd182"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply DeductionWeaken_DerivableFiniteWitnessed_2_ContextualDerivableFiniteWitnessed.",
            "VernacExtend",
            "884afa43c3cf331e367a61ee33caf565c032ab55"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exact DW.",
            "VernacExtend",
            "6e750827b0c29ea2001dcbc94a11fbc61cbdd182"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exact (@derivable_finite_witnessed _ _ Axiomatization2SequentCalculus_fwSC).",
            "VernacExtend",
            "08eccc44e7710ba9f263d921b625b13a13eb5ca3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply DeductionImpIntro_DeductionMP_2_DeductionSubst1.",
            "VernacExtend",
            "d8dc9ab67ec9b44ac396ae8b0ac28c50de1cea25"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exact (@deduction_impp_intros _ _ _ Axiomatization2SequentCalculus_minSC).",
            "VernacExtend",
            "c782ae00d0d62ffd50cbeb9bef76d14a3f932fde"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exact (@deduction_modus_ponens _ _ _ Axiomatization2SequentCalculus_minSC).",
            "VernacExtend",
            "c8c60055ff1c6857d0458e03c6ae4fd5166162be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Axiomatization2SequentCalculus.",
            "VernacEndSegment",
            "48414f08040f4caf001b29ccd236ca13251bf19c"
        ],
        [
            "Section DerivableRulesFromSequentCalculus.",
            "VernacBeginSection",
            "1fd51f070f089c0bab056285c7fcc69e0010d816"
        ],
        [
            "Context {L: Language} {Gamma: ProofTheory L} {bSC: BasicSequentCalculus L Gamma}.",
            "VernacContext",
            "db6a70b328f14b2e53d7394efce645ef5973c21b"
        ],
        [
            "Context {minL: MinimunLanguage L} {minSC: MinimunSequentCalculus L Gamma}.",
            "VernacContext",
            "c447d7eb2131f28ab82f70061ddc3c31cc2af570"
        ],
        [
            "Lemma deduction_impp_elim: forall Phi x y, Phi |-- impp x y -> Union _ Phi (Singleton _ x) |-- y.",
            "VernacStartTheoremProof",
            "609b3c7ae29c81b6ac3cbd7959362d162abc6e42"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply deduction_modus_ponens; solve_assum.",
            "VernacExtend",
            "7a8aacd33a57013f32ce517dc146af948558c64d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem deduction_theorem: forall (Phi: context) (x y: expr), Union _ Phi (Singleton _ x) |-- y <-> Phi |-- x --> y.",
            "VernacStartTheoremProof",
            "ea0570d0f355c2884c06960ede8b3be6da056f91"
        ],
        [
            "intros; split.",
            "VernacExtend",
            "786909835bea92a2bb1ac0d0634a6eb379d5f275"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply deduction_impp_intros; auto.",
            "VernacExtend",
            "2f1050a6933adb3717116ce17d6660073af4187b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply deduction_impp_elim; auto.",
            "VernacExtend",
            "7c6d1a62e4c30bead53c6f22f49ca4230dcadeba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem deduction_theorem_multi_imp: forall (Phi: context) (xs: list expr) (y: expr), Union _ Phi (fun x => In x xs) |-- y <-> Phi |-- multi_imp xs y.",
            "VernacStartTheoremProof",
            "154d4d09f70d78d2ff512456a589e7266b0ccdd8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert Phi; induction xs; intros.",
            "VernacExtend",
            "3719eb92bf30dc702a8cc0d2869b7e467b6cc7a0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; apply deduction_weaken; unfold Included, Ensembles.In; intros.",
            "VernacExtend",
            "196f75844f4c4ff3d34bea0cd1f78360c6d6f300"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Union_spec in H.",
            "VernacExtend",
            "464a4640421f91afd394c7c085caea785135c4ca"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Union_spec.",
            "VernacExtend",
            "6b2707bb2c80d1b562506c2334ca525ac00cf82f"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- deduction_theorem, <- IHxs.",
            "VernacExtend",
            "b325feba0eef32ec6d33b5209411304af1dea885"
        ],
        [
            "split; apply deduction_weaken; unfold Included, Ensembles.In; intros.",
            "VernacExtend",
            "196f75844f4c4ff3d34bea0cd1f78360c6d6f300"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Union_spec in H.",
            "VernacExtend",
            "464a4640421f91afd394c7c085caea785135c4ca"
        ],
        [
            "rewrite !Union_spec, Singleton_spec.",
            "VernacExtend",
            "640089dee5b3092df100683fb2e50710e90b2d62"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !Union_spec, Singleton_spec in H.",
            "VernacExtend",
            "abaa9a88397c558fbd3f8bb61d7c5cbb0a3231e6"
        ],
        [
            "rewrite !Union_spec.",
            "VernacExtend",
            "201b9dfdaf11a7511391ab37c15cfe7679677bac"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivable_impp_refl: forall (Phi: context) (x: expr), Phi |-- x --> x.",
            "VernacStartTheoremProof",
            "749217518469ecd84947727f4b5ab4c8250b8dcb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply deduction_theorem.",
            "VernacExtend",
            "d055fd1127fcc11f22053ca677d3e1ad6309665f"
        ],
        [
            "solve_assum.",
            "VernacExtend",
            "8f9708b28b38c712b9fecb8c5d489646f65554e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma deduction_left_impp_intros: forall (Phi: context) (x y: expr), Phi |-- x -> Phi |-- y --> x.",
            "VernacStartTheoremProof",
            "d967491d35c8080307b1ac438fc09e070d4d8081"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply deduction_theorem.",
            "VernacExtend",
            "d055fd1127fcc11f22053ca677d3e1ad6309665f"
        ],
        [
            "solve_assum.",
            "VernacExtend",
            "8f9708b28b38c712b9fecb8c5d489646f65554e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivable_axiom1: forall (Phi: context) (x y: expr), Phi |-- x --> y --> x.",
            "VernacStartTheoremProof",
            "8791a33e5de58d2f53d20d3abdd39de5f610feec"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- !deduction_theorem.",
            "VernacExtend",
            "5c120584a05b4c3b080a2463f321331d3f4a3863"
        ],
        [
            "solve_assum.",
            "VernacExtend",
            "8f9708b28b38c712b9fecb8c5d489646f65554e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivable_axiom2: forall (Phi: context) (x y z: expr), Phi |-- (x --> y --> z) --> (x --> y) --> (x --> z).",
            "VernacStartTheoremProof",
            "b52a5810ce8e217c527b8d3b92397b3ee2077790"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- !deduction_theorem.",
            "VernacExtend",
            "5c120584a05b4c3b080a2463f321331d3f4a3863"
        ],
        [
            "apply deduction_modus_ponens with y.",
            "VernacExtend",
            "6628313686d3a077ac904335f06c479688284ea1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply deduction_modus_ponens with x; solve_assum.",
            "VernacExtend",
            "cd089a10807f7c422433144da4d98dd3ac58480c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply deduction_modus_ponens with x; solve_assum.",
            "VernacExtend",
            "cd089a10807f7c422433144da4d98dd3ac58480c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivable_modus_ponens: forall (Phi: context) (x y: expr), Phi |-- x --> (x --> y) --> y.",
            "VernacStartTheoremProof",
            "864387590a12abeeda74686f4a3497274070ae2d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- !deduction_theorem.",
            "VernacExtend",
            "5c120584a05b4c3b080a2463f321331d3f4a3863"
        ],
        [
            "apply deduction_modus_ponens with x; solve_assum.",
            "VernacExtend",
            "cd089a10807f7c422433144da4d98dd3ac58480c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma deduction_impp_trans: forall (Phi: context) (x y z: expr), Phi |-- x --> y -> Phi |-- y --> z -> Phi |-- x --> z.",
            "VernacStartTheoremProof",
            "13a5f9cd076966e512423aba2f2beea3bf5b3807"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- deduction_theorem in H |- *.",
            "VernacExtend",
            "33f391ebfb8da0459662f0bf82246d899811e6a7"
        ],
        [
            "apply deduction_modus_ponens with y; solve_assum.",
            "VernacExtend",
            "131c4324a15e788148a484af60165cb6a73d9385"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma deduction_impp_arg_switch: forall (Phi: context) (x y z: expr), Phi |-- x --> y --> z -> Phi |-- y --> x --> z.",
            "VernacStartTheoremProof",
            "c538a25687c9f73cceec218c788da5d9baafa533"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- !deduction_theorem in *.",
            "VernacExtend",
            "e4eade536392034ecde8a3bc91f06833f4efb21c"
        ],
        [
            "eapply deduction_weaken; [| exact H].",
            "VernacExtend",
            "97b63efe3f7497d96d364df91fedbe618730d829"
        ],
        [
            "intros ? ?.",
            "VernacExtend",
            "546ddfdd2482db9e439533251e7f222ee06f71aa"
        ],
        [
            "destruct H0; [destruct H0 |].",
            "VernacExtend",
            "7c8b10ec86eea6277760fbb311af31f3b5564af5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left; left; auto.",
            "VernacExtend",
            "f6cf51484f8300856a7ad6e00e325892f97d0caf"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left; right; auto.",
            "VernacExtend",
            "9729522883c290cbce64be154870e9dde81b81f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DerivableRulesFromSequentCalculus.",
            "VernacEndSegment",
            "3a5f8de0d8e163add5f3cf539db50c42e0f82492"
        ],
        [
            "Section SequentCalculus2Axiomatization.",
            "VernacBeginSection",
            "9ac94bc4f66832f79dece7b382a34e9f3d1fe781"
        ],
        [
            "Context {L: Language} {Gamma: ProofTheory L} {minL: MinimunLanguage L} {SC: NormalSequentCalculus L Gamma} {bSC: BasicSequentCalculus L Gamma} {minSC: MinimunSequentCalculus L Gamma}.",
            "VernacContext",
            "7717ea1cc0c56499e058ddad666733ab6629f287"
        ],
        [
            "Theorem SequentCalculus2Axiomatization_minAX: MinimunAxiomatization L Gamma.",
            "VernacStartTheoremProof",
            "a96027d3f9de269e45098558c8cf800cdb75e64d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "rewrite !provable_derivable.",
            "VernacExtend",
            "8ef94f5f5e09a57ebeaede984af39835428c289c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply deduction_modus_ponens; eauto.",
            "VernacExtend",
            "99dabfc1f4077f7d023cc87ba4d17f5460d34a03"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "rewrite provable_derivable.",
            "VernacExtend",
            "c3e3d0b03abdee59ff63b6e9286ddf71eaf4872e"
        ],
        [
            "apply derivable_axiom1.",
            "VernacExtend",
            "cd29932fccfffa6090b5a0611b30cd92c514bd91"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros x y z.",
            "VernacExtend",
            "8357c7ce661033f932c65582aab008de3b5d8530"
        ],
        [
            "rewrite provable_derivable.",
            "VernacExtend",
            "c3e3d0b03abdee59ff63b6e9286ddf71eaf4872e"
        ],
        [
            "apply derivable_axiom2.",
            "VernacExtend",
            "4fdd9587f6d24b73960e9af3eef4ba581ebb2fc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem SequentCalculus2Axiomatization_AX {fwSC: FiniteWitnessedSequentCalculus L Gamma}: NormalAxiomatization L Gamma.",
            "VernacStartTheoremProof",
            "4ca360c8cbb5e430962fda9f5427f96bb4c92ef8"
        ],
        [
            "constructor; intros.",
            "VernacExtend",
            "6563c593bcf639ae667d436a08cab59e1ac2dcce"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply derivable_finite_witnessed in H.",
            "VernacExtend",
            "1e6fa09311a955a28c79c03cd8ba38ccace74c2e"
        ],
        [
            "destruct H as [xs [? ?]]; exists xs.",
            "VernacExtend",
            "3bd1d978df811d4ef4f711d062509525fb0ad0fb"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply provable_derivable.",
            "VernacExtend",
            "10b4970ee35fc04728c1118210bcef2a187d19b0"
        ],
        [
            "apply deduction_theorem_multi_imp.",
            "VernacExtend",
            "402974c388de39f6b90cb9b15468dc1ca421e19e"
        ],
        [
            "eapply deduction_weaken; eauto.",
            "VernacExtend",
            "198d51929239d92819e4f380e1723b112b06449b"
        ],
        [
            "apply right_Included_Union.",
            "VernacExtend",
            "3b38617dd60cabdccbf5b19c9d6b3929f1fbc2fd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H as [xs [? ?]].",
            "VernacExtend",
            "0ab4fe8af6122e075588673eb903d246e6e736f8"
        ],
        [
            "apply provable_derivable in H0.",
            "VernacExtend",
            "68426230944801300ad4985913599f856ccb4fd2"
        ],
        [
            "apply deduction_theorem_multi_imp in H0.",
            "VernacExtend",
            "06da50f9fb1a14492cfb1cc8a2fe97043c938ddc"
        ],
        [
            "eapply deduction_weaken; eauto.",
            "VernacExtend",
            "198d51929239d92819e4f380e1723b112b06449b"
        ],
        [
            "unfold Included, Ensembles.In; intros.",
            "VernacExtend",
            "bcb3341ac78d9d71ce5e1d27022c1b442cbfb134"
        ],
        [
            "rewrite Union_spec in H1.",
            "VernacExtend",
            "44fcc13d4aa05ee24d5a478d21d72a84c5cd0d8b"
        ],
        [
            "destruct H1 as [[] |].",
            "VernacExtend",
            "6bb05cc9dc82cb65e7ef5afa64309dcebed72521"
        ],
        [
            "revert x H1.",
            "VernacExtend",
            "a8e72731d01762d817796101b2cdd6c16b44d483"
        ],
        [
            "rewrite Forall_forall in H; auto.",
            "VernacExtend",
            "d385abc73ecb9cdcd17a1cf1481bbb13cff50185"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SequentCalculus2Axiomatization.",
            "VernacEndSegment",
            "0d2db334ac15732ce547e3ef273b36c9c898ff77"
        ],
        [
            "Definition Build_AxiomaticProofTheory {L: Language} {minL: MinimunLanguage L} (Provable: expr -> Prop): ProofTheory L := Build_ProofTheory L Provable (fun Phi y => exists xs, Forall (fun x => Phi x) xs /\\ Provable (multi_imp xs y)).",
            "VernacDefinition",
            "a88e128947dd886b8ad245ae00bb5606253956d8"
        ],
        [
            "Definition Build_AxiomaticProofTheory_AX {L: Language} {minL: MinimunLanguage L} (Provable: expr -> Prop): NormalAxiomatization L (Build_AxiomaticProofTheory Provable) := Build_NormalAxiomatization L minL (Build_AxiomaticProofTheory Provable) (fun _ _ => iff_refl _).",
            "VernacDefinition",
            "0ddc90d67c320f0506369a89e8f1e299956c93e7"
        ],
        [
            "Definition Build_SequentCalculus {L: Language} (Derivable: context -> expr -> Prop): ProofTheory L := Build_ProofTheory L (fun x => Derivable (Empty_set _) x) Derivable.",
            "VernacDefinition",
            "2f459b34086eb0f141de920293615eabb7a29cd4"
        ],
        [
            "Definition Build_SequentCalculus_SC {L: Language} (Derivable: context -> expr -> Prop): NormalSequentCalculus L (Build_SequentCalculus Derivable) := Build_NormalSequentCalculus L (Build_SequentCalculus Derivable) (fun _ => iff_refl _).",
            "VernacDefinition",
            "efd93eca83b7c4c159d8cf66026ee3cc24ec2eb0"
        ],
        [
            "Inductive Typeclass_Rewrite (l: list (sig (fun X: Prop => X))): Prop := | Typeclass_Rewrite_I : Typeclass_Rewrite l.",
            "VernacInductive",
            "faf13fea07d1d0f426b96151c329cc37392e3898"
        ],
        [
            "Definition OpaqueProp (P: Prop): Prop := P.",
            "VernacDefinition",
            "39180abf9363e06dd1769fe03f4d52a38d53c009"
        ],
        [
            "Ltac revert_dep_rec T := match goal with | H: context [T] |- _ => first [ revert H | revert_dep_rec H]; revert_dep_rec T | _ => idtac end.",
            "VernacExtend",
            "79d3846ec2faa1a87d1cb9e811d1bc88f3e962cb"
        ],
        [
            "Ltac revert_dep Gamma := match goal with | |- ?G => change (OpaqueProp G) end; revert_dep_rec Gamma.",
            "VernacExtend",
            "843fc373f446da77352226b27a7ede078a8a92f6"
        ],
        [
            "Lemma ready_for_intros: forall G: Prop, OpaqueProp (Typeclass_Rewrite nil -> G) -> OpaqueProp G.",
            "VernacStartTheoremProof",
            "bcc4cdc7023e098cf1a7a7a13b60bc2cf9a4f3e5"
        ],
        [
            "unfold OpaqueProp.",
            "VernacExtend",
            "dccd09f116741ccea873e262abb1b54eebd66d71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intro_with_record: forall (l: list (sig (fun X: Prop => X))) (P: Prop) (G: P -> Prop), (forall _____: P, OpaqueProp (Typeclass_Rewrite ((exist (fun X: Prop => X) P _____) :: l) -> G _____)) -> OpaqueProp (Typeclass_Rewrite l -> forall _____: P, G _____).",
            "VernacStartTheoremProof",
            "c9cce6f57d51c015b462c8816955bba902a79e33"
        ],
        [
            "unfold OpaqueProp.",
            "VernacExtend",
            "dccd09f116741ccea873e262abb1b54eebd66d71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac intros_dep := match goal with | |- ?G => change (OpaqueProp G); simple apply ready_for_intros end; repeat match goal with | |- OpaqueProp (Typeclass_Rewrite _ -> OpaqueProp _) => fail 1 | _ => apply intro_with_record; intro end.",
            "VernacExtend",
            "bb1e177d908319c0ce113cec14047121798f0d57"
        ],
        [
            "Ltac schedule := match goal with | |- OpaqueProp (Typeclass_Rewrite ?L -> _) => constr: (L) end.",
            "VernacExtend",
            "488caf952cde9ae530f94c678841aeb8c6d8a52d"
        ],
        [
            "Ltac tactic_rev_rec L1 L2 := match L1 with | nil => L2 | cons ?H ?L => tactic_rev_rec L (cons H L2) end.",
            "VernacExtend",
            "c12cfb3911539ccd2bd54862858481302ba1ed9e"
        ],
        [
            "Ltac tactic_rev L := match type of L with | list ?T => tactic_rev_rec L constr:(@nil T) end.",
            "VernacExtend",
            "24bb0b7381a39ba5ec7620df134c6e50dd21fb4f"
        ],
        [
            "Lemma change_schedule: forall (l l': list (sig (fun X: Prop => X))) (G: Prop), OpaqueProp (Typeclass_Rewrite l -> G) -> OpaqueProp (Typeclass_Rewrite l' -> G).",
            "VernacStartTheoremProof",
            "fa258c47484f2be8759412b59b3b03c458daed57"
        ],
        [
            "unfold OpaqueProp.",
            "VernacExtend",
            "dccd09f116741ccea873e262abb1b54eebd66d71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pop_schedule: forall (x: (sig (fun X: Prop => X))) (l: list (sig (fun X: Prop => X))) (G: Prop), OpaqueProp (Typeclass_Rewrite l -> G) -> OpaqueProp (Typeclass_Rewrite (x :: l) -> G).",
            "VernacStartTheoremProof",
            "f2c7b6443955e368ef40e844ab8fb1cd37c9aa13"
        ],
        [
            "unfold OpaqueProp.",
            "VernacExtend",
            "dccd09f116741ccea873e262abb1b54eebd66d71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma push_schedule: forall (x: (sig (fun X: Prop => X))) (l: list (sig (fun X: Prop => X))) (G: Prop), OpaqueProp (Typeclass_Rewrite (x :: l) -> G) -> OpaqueProp (Typeclass_Rewrite l -> G).",
            "VernacStartTheoremProof",
            "b4cec7d33d2d86513dd04a68a390778c9572566a"
        ],
        [
            "unfold OpaqueProp.",
            "VernacExtend",
            "dccd09f116741ccea873e262abb1b54eebd66d71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac AddSC_enrich := progress autorewrite with AddSC; intros; unfold OpaqueProp at 1.",
            "VernacExtend",
            "8353a4ca7565bb4232dc9de367048d65e913c089"
        ],
        [
            "Ltac AddAX_enrich := progress autorewrite with AddAX; intros; unfold OpaqueProp at 1.",
            "VernacExtend",
            "d24b5873819ba208393de9ff3e55a93d5517d3a0"
        ],
        [
            "Lemma finish_enrich: forall (G: Prop), G -> OpaqueProp (Typeclass_Rewrite nil -> OpaqueProp G).",
            "VernacStartTheoremProof",
            "1974d3d40c3241793a12a8d40426d989a5a158e8"
        ],
        [
            "unfold OpaqueProp.",
            "VernacExtend",
            "dccd09f116741ccea873e262abb1b54eebd66d71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac enrich tac := first [ tac | match goal with | |- OpaqueProp (Typeclass_Rewrite (?x :: _) -> _) => apply (pop_schedule x); enrich tac; apply (push_schedule x) end ].",
            "VernacExtend",
            "7075fe727691fdf140b26193ed4e403ae1f6dd64"
        ],
        [
            "Ltac enrichs L tac := apply (change_schedule L); repeat match goal with | |- OpaqueProp (Typeclass_Rewrite (?x :: _) -> _) => enrich tac | |- OpaqueProp (Typeclass_Rewrite nil -> _) => fail 1 | |- OpaqueProp (Typeclass_Rewrite ?l -> _) => fail 1000 \"Cannot proceed these typeclasses: \" l end; apply finish_enrich.",
            "VernacExtend",
            "3b50a374c69e26f296f96af84cb777a4553021dd"
        ],
        [
            "Ltac clear_rec L := match L with | nil => idtac | exist _ _ ?H :: ?L' => clear H; clear_rec L' end.",
            "VernacExtend",
            "a4a215456b327e415fe21ad030de88803516c153"
        ],
        [
            "Ltac AddSequentCalculus Gamma := revert_dep Gamma; intros_dep; let L := schedule in let L' := tactic_rev L in enrichs L' AddSC_enrich; clear_rec L; change (@provable _ Gamma) with (@provable _ (Build_AxiomaticProofTheory provable)); set (Gamma' := (Build_AxiomaticProofTheory provable)) in *; clearbody Gamma'; clear Gamma; rename Gamma' into Gamma.",
            "VernacExtend",
            "578955853f3ffda6f59c8a56f1c6a00aa91a6379"
        ],
        [
            "Ltac AddAxiomatization Gamma := revert_dep Gamma; intros_dep; let L := schedule in let L' := tactic_rev L in enrichs L' AddAX_enrich; clear_rec L; change (@derivable _ Gamma) with (@derivable _ (Build_SequentCalculus derivable)); set (Gamma' := (Build_SequentCalculus derivable)) in *; clearbody Gamma'; clear Gamma; rename Gamma' into Gamma.",
            "VernacExtend",
            "459821cc152e0c1fc57575fa0f434ac4f394be75"
        ],
        [
            "Ltac instantiate_must_succeed := instantiate (1 := _); try (instantiate (1 := _); fail 2 || fail 1).",
            "VernacExtend",
            "dbad4322c4d3eb4e72398b3863c48428d8e6049e"
        ],
        [
            "Lemma MakeSequentCalculus_MinimunAxiomatization {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {minAX: MinimunAxiomatization L Gamma}: forall (G: Prop) (l: list (sig (fun X: Prop => X))), (forall (AX: NormalAxiomatization L (Build_AxiomaticProofTheory (@provable L Gamma))) (minAX: MinimunAxiomatization L (Build_AxiomaticProofTheory (@provable L Gamma))) (SC: NormalSequentCalculus L (Build_AxiomaticProofTheory (@provable L Gamma))) (bSC: BasicSequentCalculus L (Build_AxiomaticProofTheory (@provable L Gamma))) (fwSC: FiniteWitnessedSequentCalculus L (Build_AxiomaticProofTheory (@provable L Gamma))) (minSC: MinimunSequentCalculus L (Build_AxiomaticProofTheory (@provable L Gamma))), OpaqueProp (OpaqueProp (Typeclass_Rewrite l -> G))) <-> OpaqueProp (Typeclass_Rewrite ((exist (fun X: Prop => X) (MinimunAxiomatization L Gamma) minAX) :: l) -> G).",
            "VernacStartTheoremProof",
            "4aad8713265a4896428d4e5167af60860952cc5d"
        ],
        [
            "unfold OpaqueProp.",
            "VernacExtend",
            "dccd09f116741ccea873e262abb1b54eebd66d71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "assert (NormalAxiomatization L (Build_AxiomaticProofTheory provable)) by (apply Build_AxiomaticProofTheory_AX).",
            "VernacExtend",
            "2c603deb28903ed4bc0422fe2717620ea8aa59a0"
        ],
        [
            "assert (MinimunAxiomatization L (Build_AxiomaticProofTheory provable)) by (destruct minAX; constructor; auto).",
            "VernacExtend",
            "01b801665bf9d18329cca7167fb2537a211c1a59"
        ],
        [
            "assert (NormalSequentCalculus L (Build_AxiomaticProofTheory provable)) by (apply Axiomatization2SequentCalculus_SC).",
            "VernacExtend",
            "c5c918b8f10e4fc63dc92a63c242c1e0407391ea"
        ],
        [
            "assert (BasicSequentCalculus L (Build_AxiomaticProofTheory provable)) by (apply Axiomatization2SequentCalculus_bSC).",
            "VernacExtend",
            "551fb6602829b8afed5b34cbc1be35e4f4e6ba39"
        ],
        [
            "assert (MinimunSequentCalculus L (Build_AxiomaticProofTheory provable)) by (apply Axiomatization2SequentCalculus_minSC).",
            "VernacExtend",
            "9fccd4d696aeb9f20da59879f3bad9bc794dc4fa"
        ],
        [
            "assert (FiniteWitnessedSequentCalculus L (Build_AxiomaticProofTheory provable)) by (apply Axiomatization2SequentCalculus_fwSC).",
            "VernacExtend",
            "88791c34313dcbbb2af7fb51ad3a0d04e6c95bcf"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite <- @MakeSequentCalculus_MinimunAxiomatization: AddSC.",
            "VernacExtend",
            "6180d14500f5371beca058fbd521d04c44e49677"
        ],
        [
            "Lemma MakeAxiomatization_BasicSequentCalculus {L: Language} {Gamma: ProofTheory L} {bSC: BasicSequentCalculus L Gamma}: forall (G: Prop) (l: list (sig (fun X: Prop => X))), (forall (SC: NormalSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) (bSC: BasicSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))), OpaqueProp (OpaqueProp (Typeclass_Rewrite l -> G))) <-> OpaqueProp (Typeclass_Rewrite ((exist (fun X: Prop => X) (BasicSequentCalculus L Gamma) bSC) :: l) -> G).",
            "VernacStartTheoremProof",
            "83fdab15d6162778534abd4a690fd140f06a5f78"
        ],
        [
            "unfold OpaqueProp.",
            "VernacExtend",
            "dccd09f116741ccea873e262abb1b54eebd66d71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "assert (NormalSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) by (apply Build_SequentCalculus_SC).",
            "VernacExtend",
            "27670aab980a70e33420bb9a531f1e38046ead5e"
        ],
        [
            "assert (BasicSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) by (destruct bSC; constructor; auto).",
            "VernacExtend",
            "12409006bfb5c827097d0519bac6196197c548d0"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite <- @MakeAxiomatization_BasicSequentCalculus: AddAX.",
            "VernacExtend",
            "6ea428db71bcc4fc6ec2da027a877d29b8c60e0c"
        ],
        [
            "Lemma MakeAxiomatization_MinimunSequentCalculus {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {minSC: MinimunSequentCalculus L Gamma} {bSC': BasicSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))}: forall (G: Prop) (l: list (sig (fun X: Prop => X))), (forall (minSC: MinimunSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) (minAX: MinimunAxiomatization L (Build_SequentCalculus (@derivable L Gamma))), OpaqueProp (OpaqueProp (Typeclass_Rewrite l -> G))) <-> OpaqueProp (Typeclass_Rewrite ((exist (fun X: Prop => X) (MinimunSequentCalculus L Gamma) minSC) :: l) -> G).",
            "VernacStartTheoremProof",
            "7f907994f948cc487d6ef977c875237d4ef11ea5"
        ],
        [
            "unfold OpaqueProp.",
            "VernacExtend",
            "dccd09f116741ccea873e262abb1b54eebd66d71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "assert (NormalSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) by (apply Build_SequentCalculus_SC).",
            "VernacExtend",
            "27670aab980a70e33420bb9a531f1e38046ead5e"
        ],
        [
            "assert (MinimunSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) by (destruct minSC; constructor; auto).",
            "VernacExtend",
            "68931b0672e84c5d3ff04e13190c035b91e67442"
        ],
        [
            "assert (MinimunAxiomatization L (Build_SequentCalculus (@derivable L Gamma))) by (apply SequentCalculus2Axiomatization_minAX).",
            "VernacExtend",
            "a54466eefdc792b8a2d47cdba1f76b48acf99bef"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite <- @MakeAxiomatization_MinimunSequentCalculus using (typeclasses eauto): AddAX.",
            "VernacExtend",
            "b605d7186858610f12a16a70825200266ff35ba0"
        ],
        [
            "Lemma MakeAxiomatization_FiniteWitnessedSequentCalculus {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {fwSC: FiniteWitnessedSequentCalculus L Gamma} {bSC': BasicSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))} {minSC': MinimunSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))}: forall (G: Prop) (l: list (sig (fun X: Prop => X))), (forall (fwSC: FiniteWitnessedSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) (AX: NormalAxiomatization L (Build_SequentCalculus (@derivable L Gamma))), OpaqueProp (OpaqueProp (Typeclass_Rewrite l -> G))) <-> OpaqueProp (Typeclass_Rewrite ((exist (fun X: Prop => X) (FiniteWitnessedSequentCalculus L Gamma) fwSC) :: l) -> G).",
            "VernacStartTheoremProof",
            "1f0f49aa985ad23c8b4ad9bdbfcf284737a0304c"
        ],
        [
            "unfold OpaqueProp.",
            "VernacExtend",
            "dccd09f116741ccea873e262abb1b54eebd66d71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "assert (NormalSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) by (apply Build_SequentCalculus_SC).",
            "VernacExtend",
            "27670aab980a70e33420bb9a531f1e38046ead5e"
        ],
        [
            "assert (FiniteWitnessedSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) by (destruct fwSC; constructor; auto).",
            "VernacExtend",
            "b16ea449a4326162e5e6ab6dc3510c8a54dc10da"
        ],
        [
            "assert (NormalAxiomatization L (Build_SequentCalculus (@derivable L Gamma))) by (apply SequentCalculus2Axiomatization_AX).",
            "VernacExtend",
            "af238acdebf8799f4251a42c2d1e2e8874fc4679"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply Typeclass_Rewrite_I.",
            "VernacExtend",
            "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite <- @MakeAxiomatization_FiniteWitnessedSequentCalculus using (typeclasses eauto): AddAX.",
            "VernacExtend",
            "c3cb98f068e9ab4fcffcc26f507f1a931c622b98"
        ],
        [
            "Section Test_AddSC.",
            "VernacBeginSection",
            "deb77e43ffcb9bd4d751ff61c2df2cb5d92a851a"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {minAX: MinimunAxiomatization L Gamma}.",
            "VernacContext",
            "a4a977d77521e39985620e49f4a45b5ccb09da20"
        ],
        [
            "Lemma provable_impp_refl': forall (x: expr), |-- x --> x.",
            "VernacStartTheoremProof",
            "a6d207ff3955b6d79c09836e76e1cc71085eaf69"
        ],
        [
            "AddSequentCalculus Gamma.",
            "VernacExtend",
            "29cadf68780773a48c1233fdefc6ccf727f07b82"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "End Test_AddSC.",
            "VernacEndSegment",
            "45264392bd114c1ba171e06bd7d99815500c05d4"
        ],
        [
            "Section Test_AddAX.",
            "VernacBeginSection",
            "437ca97b5655bad7b50d3aebfd7e3cfd31452cbf"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {Gamma: ProofTheory L} {bSC: BasicSequentCalculus L Gamma} {minSC: MinimunSequentCalculus L Gamma} {fwSC: FiniteWitnessedSequentCalculus L Gamma}.",
            "VernacContext",
            "4981635d6f99684531fbcb94bb070e2454ea6217"
        ],
        [
            "Lemma derivable_axiom2': forall Phi (x y z: expr), Phi |-- (x --> y --> z) --> (x --> y) --> (x --> z).",
            "VernacStartTheoremProof",
            "a8e40a51556f438a71d35294939bb8c83b5e64bf"
        ],
        [
            "AddAxiomatization Gamma.",
            "VernacExtend",
            "e03ddfa665c2487732717ebeca20885316b66a7c"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "End Test_AddAX.",
            "VernacEndSegment",
            "078e2149409d5b8dca376450fbe035c484ae6d7c"
        ]
    ],
    "proofs": [
        {
            "name": "provable_impp_refl",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof axiom2 x (x --> x) x.",
                        "VernacExtend",
                        "a7cd5760ca2a73dbaf6fdde21218b5525d2f1f54"
                    ]
                },
                {
                    "command": [
                        "pose proof axiom1 x (x --> x).",
                        "VernacExtend",
                        "d8058ca6b93a2ef7385c5ea9f85bc591090df806"
                    ]
                },
                {
                    "command": [
                        "pose proof axiom1 x x.",
                        "VernacExtend",
                        "6501b8a971e70ee9b614f854bb2747fb565426cc"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ H H0.",
                        "VernacExtend",
                        "5f100d5fdc0bfb7ffa3f6645fc32ef940d95824e"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ H2 H1.",
                        "VernacExtend",
                        "8d2269d4707c9d99367b2e94cad0afda8bfe51a6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aux_minimun_theorem00",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof axiom2 x y z.",
                        "VernacExtend",
                        "e74421b16c4dc9a8cb838a8f0447f7dc6689275e"
                    ]
                },
                {
                    "command": [
                        "pose proof aux_minimun_rule00 _ (y --> z) H.",
                        "VernacExtend",
                        "0c96d00d8fdd35d9bba02db35cf14220939752cc"
                    ]
                },
                {
                    "command": [
                        "pose proof axiom1 (y --> z) x.",
                        "VernacExtend",
                        "4794a38b48ece204fc17ad5ca00e72df4786ab20"
                    ]
                },
                {
                    "command": [
                        "pose proof axiom2 (y --> z) (x --> y --> z) ((x --> y) --> (x --> z)).",
                        "VernacExtend",
                        "36fa63ae97d5de622f5d3050bef7bbee76a5c887"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ H2 H0.",
                        "VernacExtend",
                        "6e00cbd370d7c7f069585a1568bc1cee2a865281"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ H3 H1.",
                        "VernacExtend",
                        "0bf9a9b1d1e1021ef088210924d991fb7585628c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aux_minimun_rule01",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof aux_minimun_theorem00 z x y.",
                        "VernacExtend",
                        "17785f034d0e7417370784f678ba0b89766fb528"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ H0 H.",
                        "VernacExtend",
                        "3164128b16c386b15e6b52fe4ba88d9cbe3b637f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aux_minimun_rule02",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof aux_minimun_theorem00 x y z.",
                        "VernacExtend",
                        "13a8fa09976e0cae3c97307a7a3b37d92fcdab3a"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ H1 H0.",
                        "VernacExtend",
                        "a2a92a4f42f67633657b27ac4984ca725dac1a04"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ H2 H.",
                        "VernacExtend",
                        "f01a974b33f3bf9a14258334fa940b27bb8b8c17"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aux_minimun_theorem01",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_rule01.",
                        "VernacExtend",
                        "228a3498c27706b55a60cef7df00bc7400d9f920"
                    ]
                },
                {
                    "command": [
                        "apply axiom1.",
                        "VernacExtend",
                        "7855e8fddfd7840bda503aa9283762f0e86ece23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aux_minimun_theorem02",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof axiom2 (x --> y) x y.",
                        "VernacExtend",
                        "91ee8150af6a594812bc6df02d606c80805876e8"
                    ]
                },
                {
                    "command": [
                        "pose proof provable_impp_refl (x --> y).",
                        "VernacExtend",
                        "d7e32f9ed7125eccf1d76c317b6c9313c36267a3"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ H H0.",
                        "VernacExtend",
                        "5f100d5fdc0bfb7ffa3f6645fc32ef940d95824e"
                    ]
                },
                {
                    "command": [
                        "pose proof aux_minimun_rule01 _ _ x H1.",
                        "VernacExtend",
                        "dce094db9513b48a9cf53eace0b35ee797049249"
                    ]
                },
                {
                    "command": [
                        "pose proof axiom1 x (x --> y).",
                        "VernacExtend",
                        "ff57489c0d47a636968e2f86661d1191d539004b"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ H2 H3.",
                        "VernacExtend",
                        "efd53f610b3dafc56dc9f1573bce2c560682bdf8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aux_minimun_theorem03",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof aux_minimun_theorem00 x (y --> z) z.",
                        "VernacExtend",
                        "d29e6808a48a9df65a8d9a7496ccd96268c554fe"
                    ]
                },
                {
                    "command": [
                        "pose proof aux_minimun_theorem02 y z.",
                        "VernacExtend",
                        "f8212360704dc967f188190045257322462f96d1"
                    ]
                },
                {
                    "command": [
                        "eapply aux_minimun_rule02; eauto.",
                        "VernacExtend",
                        "62da9983769004c1a556a64dd74a79b87e069e52"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aux_minimun_theorem04",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof axiom2 x (x --> y) y.",
                        "VernacExtend",
                        "cb4312de54cc3d481b2b899b4f462950c0a3377a"
                    ]
                },
                {
                    "command": [
                        "pose proof aux_minimun_theorem02 x y.",
                        "VernacExtend",
                        "96be832252924fa0e48e65c3b7d00791910fd050"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ H H0.",
                        "VernacExtend",
                        "5f100d5fdc0bfb7ffa3f6645fc32ef940d95824e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_impp_arg_switch",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_rule02 with (y --> x --> y --> z).",
                        "VernacExtend",
                        "859f82c0442f0ab30f25666cc3e0f2424fc8461b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply axiom1.",
                        "VernacExtend",
                        "7855e8fddfd7840bda503aa9283762f0e86ece23"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof axiom2 y (x --> y --> z) (x --> z).",
                        "VernacExtend",
                        "0f3f3f30715cf2cda04818655487a1176da983f2"
                    ]
                },
                {
                    "command": [
                        "eapply modus_ponens; eauto.",
                        "VernacExtend",
                        "4a0f6c475c0c7a380db49ec68cce671c94cf8792"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "pose proof aux_minimun_theorem00 x (y --> z) z.",
                        "VernacExtend",
                        "d29e6808a48a9df65a8d9a7496ccd96268c554fe"
                    ]
                },
                {
                    "command": [
                        "eapply aux_minimun_rule02; eauto.",
                        "VernacExtend",
                        "62da9983769004c1a556a64dd74a79b87e069e52"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_theorem02.",
                        "VernacExtend",
                        "04de4d38e9be62b00a6cd02278abd8265b7b7c42"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_impp_trans",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof provable_impp_arg_switch (y --> z) (x --> y) (x --> z).",
                        "VernacExtend",
                        "0547233487233e4c507dfd96f7a2aec1ea0e55c3"
                    ]
                },
                {
                    "command": [
                        "eapply modus_ponens; eauto.",
                        "VernacExtend",
                        "4a0f6c475c0c7a380db49ec68cce671c94cf8792"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_theorem00.",
                        "VernacExtend",
                        "e9835fd8f1018491aa727c8bea87d7eae027c151"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_multi_imp_shrink",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction xs.",
                        "VernacExtend",
                        "0e9eb6fc1f0dee078c23e7297de8adcefdbd4711"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_theorem04.",
                        "VernacExtend",
                        "89aa4d885f59998890a8b45984936b34ee020560"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_rule01 with (z := a) in IHxs.",
                        "VernacExtend",
                        "d6aee067c0653df4a1f636f836080bba8cf8bc5f"
                    ]
                },
                {
                    "command": [
                        "eapply aux_minimun_rule02; [| eauto].",
                        "VernacExtend",
                        "f3f6b5830e8a49de00a3c3cf9235a683a4e5f951"
                    ]
                },
                {
                    "command": [
                        "apply provable_impp_arg_switch.",
                        "VernacExtend",
                        "587147ad5c398a1d63b2ea8ff3adba2f35d1f67a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_multi_imp_arg_switch1",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction xs.",
                        "VernacExtend",
                        "0e9eb6fc1f0dee078c23e7297de8adcefdbd4711"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply provable_impp_refl.",
                        "VernacExtend",
                        "2cef60de23967c402db3e33ea4d2e3fd4e449812"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_rule02 with (a --> x --> multi_imp xs y).",
                        "VernacExtend",
                        "41321514fe58be3cfbb51c085b6646ead6be522e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply provable_impp_arg_switch.",
                        "VernacExtend",
                        "587147ad5c398a1d63b2ea8ff3adba2f35d1f67a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_rule01; auto.",
                        "VernacExtend",
                        "00b436a89bfde3a3a213f4098a2b3847f626e59c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_multi_imp_arg_switch2",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction xs.",
                        "VernacExtend",
                        "0e9eb6fc1f0dee078c23e7297de8adcefdbd4711"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply provable_impp_refl.",
                        "VernacExtend",
                        "2cef60de23967c402db3e33ea4d2e3fd4e449812"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_rule02 with (a --> x --> multi_imp xs y).",
                        "VernacExtend",
                        "41321514fe58be3cfbb51c085b6646ead6be522e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_rule01; auto.",
                        "VernacExtend",
                        "00b436a89bfde3a3a213f4098a2b3847f626e59c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply provable_impp_arg_switch.",
                        "VernacExtend",
                        "587147ad5c398a1d63b2ea8ff3adba2f35d1f67a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_multi_imp_weaken",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction xs.",
                        "VernacExtend",
                        "0e9eb6fc1f0dee078c23e7297de8adcefdbd4711"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_rule01; auto.",
                        "VernacExtend",
                        "00b436a89bfde3a3a213f4098a2b3847f626e59c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_multi_imp_split",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert y H0; induction H.",
                        "VernacExtend",
                        "66cefd3a3b3b47f769759ba8f3ec392bb5c8f6b6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists nil, nil.",
                        "VernacExtend",
                        "477b7089fbf250a5f4762d297bec9823c35a3148"
                    ]
                },
                {
                    "command": [
                        "split; [| split]; [constructor .. | auto].",
                        "VernacExtend",
                        "7b76661335b33c051be80ee6d62286b5aa8efc94"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "specialize (IHForall (x --> y)).",
                        "VernacExtend",
                        "a37480b5e9d036efed799acd1deb1d9017fd358b"
                    ]
                },
                {
                    "command": [
                        "eapply modus_ponens in H1; [| simpl; apply provable_multi_imp_arg_switch1].",
                        "VernacExtend",
                        "38dfe6f21759e05fdc033f2b19940ecf0e1e0d5d"
                    ]
                },
                {
                    "command": [
                        "specialize (IHForall H1); clear H1.",
                        "VernacExtend",
                        "a55db853eb0d24b5ad6a60079f255445c85f1d59"
                    ]
                },
                {
                    "command": [
                        "destruct IHForall as [xs1 [xs2 [? [? ?]]]].",
                        "VernacExtend",
                        "db87b8e74255c839ee97ed46d9c04917a8715f73"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (x :: xs1), xs2.",
                        "VernacExtend",
                        "a5c03686a6f10b565a988c62b0299efe99998cae"
                    ]
                },
                {
                    "command": [
                        "split; [constructor | split]; auto.",
                        "VernacExtend",
                        "a1dfe7096cc50768134aeb5ce894048cd974b019"
                    ]
                },
                {
                    "command": [
                        "simpl; eapply modus_ponens; [apply provable_multi_imp_arg_switch2 |].",
                        "VernacExtend",
                        "aca8ac3f32d671b5df702b66f6e43c1fd8682466"
                    ]
                },
                {
                    "command": [
                        "eapply modus_ponens; [apply provable_multi_imp_weaken | exact H3].",
                        "VernacExtend",
                        "54185a00dfa1e1902248926ba5189b8f07c16758"
                    ]
                },
                {
                    "command": [
                        "apply provable_multi_imp_arg_switch2.",
                        "VernacExtend",
                        "6748484a2af3dd867ebccb4b30b55056dadae04a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists xs1, (x :: xs2).",
                        "VernacExtend",
                        "c85bd9f08ac269fa50b2ba74b928b2fa061a5876"
                    ]
                },
                {
                    "command": [
                        "split; [| split; [constructor | ]]; auto.",
                        "VernacExtend",
                        "d82e0f35581dc84738520241252cf3ff2884b02e"
                    ]
                },
                {
                    "command": [
                        "eapply modus_ponens; [apply provable_multi_imp_weaken | exact H3].",
                        "VernacExtend",
                        "54185a00dfa1e1902248926ba5189b8f07c16758"
                    ]
                },
                {
                    "command": [
                        "simpl; apply provable_multi_imp_arg_switch2.",
                        "VernacExtend",
                        "e3e67c02e1ce44d495128d1eac30b7b6f866613b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_add_multi_imp_left_head",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction xs1.",
                        "VernacExtend",
                        "c87c1084ea303741f85a18f44837aa491bd4666f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply provable_impp_refl.",
                        "VernacExtend",
                        "2cef60de23967c402db3e33ea4d2e3fd4e449812"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply aux_minimun_rule02; eauto.",
                        "VernacExtend",
                        "62da9983769004c1a556a64dd74a79b87e069e52"
                    ]
                },
                {
                    "command": [
                        "apply axiom1.",
                        "VernacExtend",
                        "7855e8fddfd7840bda503aa9283762f0e86ece23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_add_multi_imp_left_tail",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction xs1; simpl.",
                        "VernacExtend",
                        "254af69b9f69fcf789bc6355f7a3028a2e34be3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (provable_add_multi_imp_left_head xs2 nil y).",
                        "VernacExtend",
                        "1def8dd6ecbaa4765a4de81f01a34b9abd06a390"
                    ]
                },
                {
                    "command": [
                        "rewrite app_nil_r in H; auto.",
                        "VernacExtend",
                        "f2d220a8c8a0bdeb671db1e3d577ecdccc55d6de"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_rule01; auto.",
                        "VernacExtend",
                        "00b436a89bfde3a3a213f4098a2b3847f626e59c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_multi_imp_modus_ponens",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction xs; simpl.",
                        "VernacExtend",
                        "40c854081c19706371701b3faa91a9a85bff1fbc"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_theorem02.",
                        "VernacExtend",
                        "04de4d38e9be62b00a6cd02278abd8265b7b7c42"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply aux_minimun_rule02; [| apply provable_impp_arg_switch].",
                        "VernacExtend",
                        "ac4a3c206bd8c4aced102652df2982b6b3c8a334"
                    ]
                },
                {
                    "command": [
                        "eapply aux_minimun_rule02; [| apply aux_minimun_theorem04].",
                        "VernacExtend",
                        "e3f6e77aa97d03b200fdea605e9bfdba15be69a5"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_rule01.",
                        "VernacExtend",
                        "228a3498c27706b55a60cef7df00bc7400d9f920"
                    ]
                },
                {
                    "command": [
                        "eapply aux_minimun_rule02; [eauto |].",
                        "VernacExtend",
                        "f0cd1993729e681cbab67d16c74a370a33220074"
                    ]
                },
                {
                    "command": [
                        "eapply aux_minimun_rule02; [| apply provable_impp_arg_switch].",
                        "VernacExtend",
                        "ac4a3c206bd8c4aced102652df2982b6b3c8a334"
                    ]
                },
                {
                    "command": [
                        "apply aux_minimun_theorem00.",
                        "VernacExtend",
                        "e9835fd8f1018491aa727c8bea87d7eae027c151"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Axiomatization2SequentCalculus_SC",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite derivable_provable.",
                        "VernacExtend",
                        "94c13223b5d575effa74d5d9ac45be5ef0b3403d"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists nil; split; auto.",
                        "VernacExtend",
                        "7e80d9014a9ada67737b220185b6df997d48b4ed"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct H as [xs [? ?]].",
                        "VernacExtend",
                        "0ab4fe8af6122e075588673eb903d246e6e736f8"
                    ]
                },
                {
                    "command": [
                        "destruct xs; [auto |].",
                        "VernacExtend",
                        "780b5bc6c86e2957b4d69fe4bb86a4dca84e5200"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst.",
                        "VernacExtend",
                        "123ebc73101dcac5781200440a60232218464ea1"
                    ]
                },
                {
                    "command": [
                        "inversion H3.",
                        "VernacExtend",
                        "129aa425681b58d2ed0d3637122128b1b28fd63b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Axiomatization2SequentCalculus_fwSC",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "rewrite derivable_provable in H.",
                        "VernacExtend",
                        "a0ab07ac425b343c8ca1e3eaeeb06543b80e0321"
                    ]
                },
                {
                    "command": [
                        "destruct H as [xs [? ?]].",
                        "VernacExtend",
                        "0ab4fe8af6122e075588673eb903d246e6e736f8"
                    ]
                },
                {
                    "command": [
                        "exists xs.",
                        "VernacExtend",
                        "424cf2dab50b36ff4dcabebd417cbeb5f2f87d15"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite derivable_provable.",
                        "VernacExtend",
                        "94c13223b5d575effa74d5d9ac45be5ef0b3403d"
                    ]
                },
                {
                    "command": [
                        "exists xs.",
                        "VernacExtend",
                        "424cf2dab50b36ff4dcabebd417cbeb5f2f87d15"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite Forall_forall; auto.",
                        "VernacExtend",
                        "9c82c9fa278e9a49a8ac859f05f73c06aec968e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Axiomatization2SequentCalculus_minSC",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite derivable_provable in H, H0 |- *.",
                        "VernacExtend",
                        "ef075bcd582d27ccb418be636c39c760dab49b32"
                    ]
                },
                {
                    "command": [
                        "destruct H as [xs1 [? ?]], H0 as [xs2 [? ?]].",
                        "VernacExtend",
                        "d3b434d264297befb2f04bc265de8c011d035597"
                    ]
                },
                {
                    "command": [
                        "exists (xs1 ++ xs2); split.",
                        "VernacExtend",
                        "467eb84180140b4c3ca8e7cdab10fa3212eb29c3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Forall_app_iff; auto.",
                        "VernacExtend",
                        "19b49d147b4392c981c28816578f458d1d41bdb2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ (provable_add_multi_imp_left_tail xs1 xs2 _) H1.",
                        "VernacExtend",
                        "aad40a1953c40c1a33d71c7fd8fa864876913c9d"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ (provable_add_multi_imp_left_head xs1 xs2 _) H2.",
                        "VernacExtend",
                        "a03d4fa4b161dfc7a4eda73ae247f597df26cbdc"
                    ]
                },
                {
                    "command": [
                        "pose proof provable_multi_imp_modus_ponens (xs1 ++ xs2) x y.",
                        "VernacExtend",
                        "78eda62d6cb7911ffdd7bb08455bbdf45d630495"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ H5 H3.",
                        "VernacExtend",
                        "9040c648ac27b7bf2914fc7ff8c20af515487c43"
                    ]
                },
                {
                    "command": [
                        "pose proof modus_ponens _ _ H6 H4.",
                        "VernacExtend",
                        "a1451a64a8a66393f10a4f126aaa8eadb85493f2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite derivable_provable in H |- *.",
                        "VernacExtend",
                        "0e3de1a546f9c4f049646d557dbad00f69aba624"
                    ]
                },
                {
                    "command": [
                        "destruct H as [xs [? ?]].",
                        "VernacExtend",
                        "0ab4fe8af6122e075588673eb903d246e6e736f8"
                    ]
                },
                {
                    "command": [
                        "pose proof provable_multi_imp_split _ _ _ _ H H0 as [xs1 [xs2 [? [? ?]]]].",
                        "VernacExtend",
                        "4facd0219a8cc73f5b881d357fb6e154adc999b8"
                    ]
                },
                {
                    "command": [
                        "exists xs1.",
                        "VernacExtend",
                        "651ac749e492e0c9e3c2c3e3a7845d8a31e4be05"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "eapply modus_ponens; [| exact H3].",
                        "VernacExtend",
                        "dc46171a19acad078b07534c466e47789e9c6368"
                    ]
                },
                {
                    "command": [
                        "apply provable_multi_imp_weaken.",
                        "VernacExtend",
                        "9d501afc08712be1a519f2a835d03c991f25d365"
                    ]
                },
                {
                    "command": [
                        "clear - H2 minAX.",
                        "VernacExtend",
                        "67c7335b68910f3810332d6dd3ee6c2e776edcb7"
                    ]
                },
                {
                    "command": [
                        "induction H2.",
                        "VernacExtend",
                        "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply axiom1.",
                        "VernacExtend",
                        "7855e8fddfd7840bda503aa9283762f0e86ece23"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst x0; clear H.",
                        "VernacExtend",
                        "7a42d07a6a5069f7730659e3aa0bbebd4d69546b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "pose proof aux_minimun_theorem04 x y.",
                        "VernacExtend",
                        "9d0bac94cce721022ea3208d65dd66724e74499c"
                    ]
                },
                {
                    "command": [
                        "pose proof aux_minimun_rule01 _ _ x IHForall.",
                        "VernacExtend",
                        "74073697326fe7bb69ae7c890d68335b8eb095f2"
                    ]
                },
                {
                    "command": [
                        "eapply aux_minimun_rule02; [exact H0 | exact H].",
                        "VernacExtend",
                        "cbc3e3bedf7e2a0ec7dc3fc4f20a0daf7e919ac3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Axiomatization2SequentCalculus_bSC",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "assert (DW: DeductionWeaken L Gamma).",
                        "VernacExtend",
                        "fa544517ff291cad12dff256942887ede9d5752c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "rewrite derivable_provable in H0 |- *.",
                        "VernacExtend",
                        "6982e98cb13d3b09b290e843c639d21e0d5ea260"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [xs [? ?]].",
                        "VernacExtend",
                        "4a63a985430767950b1c47a34504c20dfafa9267"
                    ]
                },
                {
                    "command": [
                        "exists xs; split; auto.",
                        "VernacExtend",
                        "1ba0b4128e26ae7762c57f08b26f14094818e065"
                    ]
                },
                {
                    "command": [
                        "revert H0; apply Forall_impl.",
                        "VernacExtend",
                        "47c08e7ee8d4aa7968777223f33b3a524c6e2648"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite derivable_provable.",
                        "VernacExtend",
                        "94c13223b5d575effa74d5d9ac45be5ef0b3403d"
                    ]
                },
                {
                    "command": [
                        "exists (x :: nil); split.",
                        "VernacExtend",
                        "8e61ed6111f9b72212c7210168e97b6630dde016"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply provable_impp_refl.",
                        "VernacExtend",
                        "2cef60de23967c402db3e33ea4d2e3fd4e449812"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply DeductionWeaken_ContextualDerivableFiniteWitnessed_DeductionSubst1_2_DeductionSubst.",
                        "VernacExtend",
                        "83061629e1e7fa6cedd294c8f1eb6eb5a7190052"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exact DW.",
                        "VernacExtend",
                        "6e750827b0c29ea2001dcbc94a11fbc61cbdd182"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply DeductionWeaken_DerivableFiniteWitnessed_2_ContextualDerivableFiniteWitnessed.",
                        "VernacExtend",
                        "884afa43c3cf331e367a61ee33caf565c032ab55"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "exact DW.",
                        "VernacExtend",
                        "6e750827b0c29ea2001dcbc94a11fbc61cbdd182"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "exact (@derivable_finite_witnessed _ _ Axiomatization2SequentCalculus_fwSC).",
                        "VernacExtend",
                        "08eccc44e7710ba9f263d921b625b13a13eb5ca3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply DeductionImpIntro_DeductionMP_2_DeductionSubst1.",
                        "VernacExtend",
                        "d8dc9ab67ec9b44ac396ae8b0ac28c50de1cea25"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "exact (@deduction_impp_intros _ _ _ Axiomatization2SequentCalculus_minSC).",
                        "VernacExtend",
                        "c782ae00d0d62ffd50cbeb9bef76d14a3f932fde"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "exact (@deduction_modus_ponens _ _ _ Axiomatization2SequentCalculus_minSC).",
                        "VernacExtend",
                        "c8c60055ff1c6857d0458e03c6ae4fd5166162be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deduction_impp_elim",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply deduction_modus_ponens; solve_assum.",
                        "VernacExtend",
                        "7a8aacd33a57013f32ce517dc146af948558c64d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deduction_theorem",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "intros; split.",
                        "VernacExtend",
                        "786909835bea92a2bb1ac0d0634a6eb379d5f275"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply deduction_impp_intros; auto.",
                        "VernacExtend",
                        "2f1050a6933adb3717116ce17d6660073af4187b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply deduction_impp_elim; auto.",
                        "VernacExtend",
                        "7c6d1a62e4c30bead53c6f22f49ca4230dcadeba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deduction_theorem_multi_imp",
            "line_nb": 324,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert Phi; induction xs; intros.",
                        "VernacExtend",
                        "3719eb92bf30dc702a8cc0d2869b7e467b6cc7a0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; apply deduction_weaken; unfold Included, Ensembles.In; intros.",
                        "VernacExtend",
                        "196f75844f4c4ff3d34bea0cd1f78360c6d6f300"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Union_spec in H.",
                        "VernacExtend",
                        "464a4640421f91afd394c7c085caea785135c4ca"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Union_spec.",
                        "VernacExtend",
                        "6b2707bb2c80d1b562506c2334ca525ac00cf82f"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- deduction_theorem, <- IHxs.",
                        "VernacExtend",
                        "b325feba0eef32ec6d33b5209411304af1dea885"
                    ]
                },
                {
                    "command": [
                        "split; apply deduction_weaken; unfold Included, Ensembles.In; intros.",
                        "VernacExtend",
                        "196f75844f4c4ff3d34bea0cd1f78360c6d6f300"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Union_spec in H.",
                        "VernacExtend",
                        "464a4640421f91afd394c7c085caea785135c4ca"
                    ]
                },
                {
                    "command": [
                        "rewrite !Union_spec, Singleton_spec.",
                        "VernacExtend",
                        "640089dee5b3092df100683fb2e50710e90b2d62"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite !Union_spec, Singleton_spec in H.",
                        "VernacExtend",
                        "abaa9a88397c558fbd3f8bb61d7c5cbb0a3231e6"
                    ]
                },
                {
                    "command": [
                        "rewrite !Union_spec.",
                        "VernacExtend",
                        "201b9dfdaf11a7511391ab37c15cfe7679677bac"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivable_impp_refl",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply deduction_theorem.",
                        "VernacExtend",
                        "d055fd1127fcc11f22053ca677d3e1ad6309665f"
                    ]
                },
                {
                    "command": [
                        "solve_assum.",
                        "VernacExtend",
                        "8f9708b28b38c712b9fecb8c5d489646f65554e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deduction_left_impp_intros",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply deduction_theorem.",
                        "VernacExtend",
                        "d055fd1127fcc11f22053ca677d3e1ad6309665f"
                    ]
                },
                {
                    "command": [
                        "solve_assum.",
                        "VernacExtend",
                        "8f9708b28b38c712b9fecb8c5d489646f65554e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivable_axiom1",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !deduction_theorem.",
                        "VernacExtend",
                        "5c120584a05b4c3b080a2463f321331d3f4a3863"
                    ]
                },
                {
                    "command": [
                        "solve_assum.",
                        "VernacExtend",
                        "8f9708b28b38c712b9fecb8c5d489646f65554e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivable_axiom2",
            "line_nb": 364,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !deduction_theorem.",
                        "VernacExtend",
                        "5c120584a05b4c3b080a2463f321331d3f4a3863"
                    ]
                },
                {
                    "command": [
                        "apply deduction_modus_ponens with y.",
                        "VernacExtend",
                        "6628313686d3a077ac904335f06c479688284ea1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply deduction_modus_ponens with x; solve_assum.",
                        "VernacExtend",
                        "cd089a10807f7c422433144da4d98dd3ac58480c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply deduction_modus_ponens with x; solve_assum.",
                        "VernacExtend",
                        "cd089a10807f7c422433144da4d98dd3ac58480c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivable_modus_ponens",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !deduction_theorem.",
                        "VernacExtend",
                        "5c120584a05b4c3b080a2463f321331d3f4a3863"
                    ]
                },
                {
                    "command": [
                        "apply deduction_modus_ponens with x; solve_assum.",
                        "VernacExtend",
                        "cd089a10807f7c422433144da4d98dd3ac58480c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deduction_impp_trans",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- deduction_theorem in H |- *.",
                        "VernacExtend",
                        "33f391ebfb8da0459662f0bf82246d899811e6a7"
                    ]
                },
                {
                    "command": [
                        "apply deduction_modus_ponens with y; solve_assum.",
                        "VernacExtend",
                        "131c4324a15e788148a484af60165cb6a73d9385"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deduction_impp_arg_switch",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !deduction_theorem in *.",
                        "VernacExtend",
                        "e4eade536392034ecde8a3bc91f06833f4efb21c"
                    ]
                },
                {
                    "command": [
                        "eapply deduction_weaken; [| exact H].",
                        "VernacExtend",
                        "97b63efe3f7497d96d364df91fedbe618730d829"
                    ]
                },
                {
                    "command": [
                        "intros ? ?.",
                        "VernacExtend",
                        "546ddfdd2482db9e439533251e7f222ee06f71aa"
                    ]
                },
                {
                    "command": [
                        "destruct H0; [destruct H0 |].",
                        "VernacExtend",
                        "7c8b10ec86eea6277760fbb311af31f3b5564af5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left; left; auto.",
                        "VernacExtend",
                        "f6cf51484f8300856a7ad6e00e325892f97d0caf"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right; auto.",
                        "VernacExtend",
                        "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left; right; auto.",
                        "VernacExtend",
                        "9729522883c290cbce64be154870e9dde81b81f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SequentCalculus2Axiomatization_minAX",
            "line_nb": 399,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "rewrite !provable_derivable.",
                        "VernacExtend",
                        "8ef94f5f5e09a57ebeaede984af39835428c289c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply deduction_modus_ponens; eauto.",
                        "VernacExtend",
                        "99dabfc1f4077f7d023cc87ba4d17f5460d34a03"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "rewrite provable_derivable.",
                        "VernacExtend",
                        "c3e3d0b03abdee59ff63b6e9286ddf71eaf4872e"
                    ]
                },
                {
                    "command": [
                        "apply derivable_axiom1.",
                        "VernacExtend",
                        "cd29932fccfffa6090b5a0611b30cd92c514bd91"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros x y z.",
                        "VernacExtend",
                        "8357c7ce661033f932c65582aab008de3b5d8530"
                    ]
                },
                {
                    "command": [
                        "rewrite provable_derivable.",
                        "VernacExtend",
                        "c3e3d0b03abdee59ff63b6e9286ddf71eaf4872e"
                    ]
                },
                {
                    "command": [
                        "apply derivable_axiom2.",
                        "VernacExtend",
                        "4fdd9587f6d24b73960e9af3eef4ba581ebb2fc3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SequentCalculus2Axiomatization_AX",
            "line_nb": 415,
            "steps": [
                {
                    "command": [
                        "constructor; intros.",
                        "VernacExtend",
                        "6563c593bcf639ae667d436a08cab59e1ac2dcce"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply derivable_finite_witnessed in H.",
                        "VernacExtend",
                        "1e6fa09311a955a28c79c03cd8ba38ccace74c2e"
                    ]
                },
                {
                    "command": [
                        "destruct H as [xs [? ?]]; exists xs.",
                        "VernacExtend",
                        "3bd1d978df811d4ef4f711d062509525fb0ad0fb"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply provable_derivable.",
                        "VernacExtend",
                        "10b4970ee35fc04728c1118210bcef2a187d19b0"
                    ]
                },
                {
                    "command": [
                        "apply deduction_theorem_multi_imp.",
                        "VernacExtend",
                        "402974c388de39f6b90cb9b15468dc1ca421e19e"
                    ]
                },
                {
                    "command": [
                        "eapply deduction_weaken; eauto.",
                        "VernacExtend",
                        "198d51929239d92819e4f380e1723b112b06449b"
                    ]
                },
                {
                    "command": [
                        "apply right_Included_Union.",
                        "VernacExtend",
                        "3b38617dd60cabdccbf5b19c9d6b3929f1fbc2fd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct H as [xs [? ?]].",
                        "VernacExtend",
                        "0ab4fe8af6122e075588673eb903d246e6e736f8"
                    ]
                },
                {
                    "command": [
                        "apply provable_derivable in H0.",
                        "VernacExtend",
                        "68426230944801300ad4985913599f856ccb4fd2"
                    ]
                },
                {
                    "command": [
                        "apply deduction_theorem_multi_imp in H0.",
                        "VernacExtend",
                        "06da50f9fb1a14492cfb1cc8a2fe97043c938ddc"
                    ]
                },
                {
                    "command": [
                        "eapply deduction_weaken; eauto.",
                        "VernacExtend",
                        "198d51929239d92819e4f380e1723b112b06449b"
                    ]
                },
                {
                    "command": [
                        "unfold Included, Ensembles.In; intros.",
                        "VernacExtend",
                        "bcb3341ac78d9d71ce5e1d27022c1b442cbfb134"
                    ]
                },
                {
                    "command": [
                        "rewrite Union_spec in H1.",
                        "VernacExtend",
                        "44fcc13d4aa05ee24d5a478d21d72a84c5cd0d8b"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [[] |].",
                        "VernacExtend",
                        "6bb05cc9dc82cb65e7ef5afa64309dcebed72521"
                    ]
                },
                {
                    "command": [
                        "revert x H1.",
                        "VernacExtend",
                        "a8e72731d01762d817796101b2cdd6c16b44d483"
                    ]
                },
                {
                    "command": [
                        "rewrite Forall_forall in H; auto.",
                        "VernacExtend",
                        "d385abc73ecb9cdcd17a1cf1481bbb13cff50185"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ready_for_intros",
            "line_nb": 446,
            "steps": [
                {
                    "command": [
                        "unfold OpaqueProp.",
                        "VernacExtend",
                        "dccd09f116741ccea873e262abb1b54eebd66d71"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intro_with_record",
            "line_nb": 452,
            "steps": [
                {
                    "command": [
                        "unfold OpaqueProp.",
                        "VernacExtend",
                        "dccd09f116741ccea873e262abb1b54eebd66d71"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "change_schedule",
            "line_nb": 462,
            "steps": [
                {
                    "command": [
                        "unfold OpaqueProp.",
                        "VernacExtend",
                        "dccd09f116741ccea873e262abb1b54eebd66d71"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pop_schedule",
            "line_nb": 468,
            "steps": [
                {
                    "command": [
                        "unfold OpaqueProp.",
                        "VernacExtend",
                        "dccd09f116741ccea873e262abb1b54eebd66d71"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "push_schedule",
            "line_nb": 474,
            "steps": [
                {
                    "command": [
                        "unfold OpaqueProp.",
                        "VernacExtend",
                        "dccd09f116741ccea873e262abb1b54eebd66d71"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finish_enrich",
            "line_nb": 482,
            "steps": [
                {
                    "command": [
                        "unfold OpaqueProp.",
                        "VernacExtend",
                        "dccd09f116741ccea873e262abb1b54eebd66d71"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MakeSequentCalculus_MinimunAxiomatization",
            "line_nb": 493,
            "steps": [
                {
                    "command": [
                        "unfold OpaqueProp.",
                        "VernacExtend",
                        "dccd09f116741ccea873e262abb1b54eebd66d71"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "assert (NormalAxiomatization L (Build_AxiomaticProofTheory provable)) by (apply Build_AxiomaticProofTheory_AX).",
                        "VernacExtend",
                        "2c603deb28903ed4bc0422fe2717620ea8aa59a0"
                    ]
                },
                {
                    "command": [
                        "assert (MinimunAxiomatization L (Build_AxiomaticProofTheory provable)) by (destruct minAX; constructor; auto).",
                        "VernacExtend",
                        "01b801665bf9d18329cca7167fb2537a211c1a59"
                    ]
                },
                {
                    "command": [
                        "assert (NormalSequentCalculus L (Build_AxiomaticProofTheory provable)) by (apply Axiomatization2SequentCalculus_SC).",
                        "VernacExtend",
                        "c5c918b8f10e4fc63dc92a63c242c1e0407391ea"
                    ]
                },
                {
                    "command": [
                        "assert (BasicSequentCalculus L (Build_AxiomaticProofTheory provable)) by (apply Axiomatization2SequentCalculus_bSC).",
                        "VernacExtend",
                        "551fb6602829b8afed5b34cbc1be35e4f4e6ba39"
                    ]
                },
                {
                    "command": [
                        "assert (MinimunSequentCalculus L (Build_AxiomaticProofTheory provable)) by (apply Axiomatization2SequentCalculus_minSC).",
                        "VernacExtend",
                        "9fccd4d696aeb9f20da59879f3bad9bc794dc4fa"
                    ]
                },
                {
                    "command": [
                        "assert (FiniteWitnessedSequentCalculus L (Build_AxiomaticProofTheory provable)) by (apply Axiomatization2SequentCalculus_fwSC).",
                        "VernacExtend",
                        "88791c34313dcbbb2af7fb51ad3a0d04e6c95bcf"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MakeAxiomatization_BasicSequentCalculus",
            "line_nb": 512,
            "steps": [
                {
                    "command": [
                        "unfold OpaqueProp.",
                        "VernacExtend",
                        "dccd09f116741ccea873e262abb1b54eebd66d71"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "assert (NormalSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) by (apply Build_SequentCalculus_SC).",
                        "VernacExtend",
                        "27670aab980a70e33420bb9a531f1e38046ead5e"
                    ]
                },
                {
                    "command": [
                        "assert (BasicSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) by (destruct bSC; constructor; auto).",
                        "VernacExtend",
                        "12409006bfb5c827097d0519bac6196197c548d0"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MakeAxiomatization_MinimunSequentCalculus",
            "line_nb": 527,
            "steps": [
                {
                    "command": [
                        "unfold OpaqueProp.",
                        "VernacExtend",
                        "dccd09f116741ccea873e262abb1b54eebd66d71"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "assert (NormalSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) by (apply Build_SequentCalculus_SC).",
                        "VernacExtend",
                        "27670aab980a70e33420bb9a531f1e38046ead5e"
                    ]
                },
                {
                    "command": [
                        "assert (MinimunSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) by (destruct minSC; constructor; auto).",
                        "VernacExtend",
                        "68931b0672e84c5d3ff04e13190c035b91e67442"
                    ]
                },
                {
                    "command": [
                        "assert (MinimunAxiomatization L (Build_SequentCalculus (@derivable L Gamma))) by (apply SequentCalculus2Axiomatization_minAX).",
                        "VernacExtend",
                        "a54466eefdc792b8a2d47cdba1f76b48acf99bef"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MakeAxiomatization_FiniteWitnessedSequentCalculus",
            "line_nb": 543,
            "steps": [
                {
                    "command": [
                        "unfold OpaqueProp.",
                        "VernacExtend",
                        "dccd09f116741ccea873e262abb1b54eebd66d71"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "assert (NormalSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) by (apply Build_SequentCalculus_SC).",
                        "VernacExtend",
                        "27670aab980a70e33420bb9a531f1e38046ead5e"
                    ]
                },
                {
                    "command": [
                        "assert (FiniteWitnessedSequentCalculus L (Build_SequentCalculus (@derivable L Gamma))) by (destruct fwSC; constructor; auto).",
                        "VernacExtend",
                        "b16ea449a4326162e5e6ab6dc3510c8a54dc10da"
                    ]
                },
                {
                    "command": [
                        "assert (NormalAxiomatization L (Build_SequentCalculus (@derivable L Gamma))) by (apply SequentCalculus2Axiomatization_AX).",
                        "VernacExtend",
                        "af238acdebf8799f4251a42c2d1e2e8874fc4679"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply Typeclass_Rewrite_I.",
                        "VernacExtend",
                        "3ea6cc27f18f7772e502f0a5373a8079f62dd831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}