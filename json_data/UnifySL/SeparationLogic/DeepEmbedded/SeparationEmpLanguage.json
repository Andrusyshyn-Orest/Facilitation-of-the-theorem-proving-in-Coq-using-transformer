{
    "filename": "SeparationLogic/DeepEmbedded/SeparationEmpLanguage.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Logic.ProofIrrelevance.",
            "VernacRequire",
            "830bd67b83ecfa87e763e0503e058c6181d73cd1"
        ],
        [
            "Require Import Coq.omega.Omega.",
            "VernacRequire",
            "c22118512de22ca1f471830b29716d6337180b58"
        ],
        [
            "Require Import Logic.lib.Bijection.",
            "VernacRequire",
            "7bb59803be65e1b0331aebf5a5e54fdb046de426"
        ],
        [
            "Require Import Logic.lib.Countable.",
            "VernacRequire",
            "0e6db58557f71a0dcd04cbe972aeb1392ac877d1"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.SeparationLogic.Syntax.",
            "VernacRequire",
            "06f045a49fc8f11e28ecdce8309ad8f23a886843"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Import SeparationLogicNotation.",
            "VernacImport",
            "ef77ed65f39901a78bbb8e7daa1c2fee20e46d4e"
        ],
        [
            "Class PropositionalVariables: Type := { Var: Type }.",
            "VernacInductive",
            "4e4a3e7a77d3c192de053382e27c2d7c8cf398a9"
        ],
        [
            "Inductive expr {Sigma: PropositionalVariables}: Type := | andp : expr -> expr -> expr | orp : expr -> expr -> expr | impp : expr -> expr -> expr | sepcon : expr -> expr -> expr | wand : expr -> expr -> expr | emp : expr | falsep : expr | varp : Var -> expr.",
            "VernacInductive",
            "11d6c53c45dbc93fbeb17c304febc1fd42f1dac7"
        ],
        [
            "Arguments expr: clear implicits.",
            "VernacArguments",
            "e41201e1f8f78d1bfc0203ef0f6fbd45635abb3a"
        ],
        [
            "Definition expr_eqb {Sigma: PropositionalVariables} (eqb: Var -> Var -> bool): expr Sigma -> expr Sigma -> bool := fix expr_eqb x1 x2 := match x1, x2 with | andp y1 z1, andp y2 z2 => andb (expr_eqb y1 y2) (expr_eqb z1 z2) | orp y1 z1, orp y2 z2 => andb (expr_eqb y1 y2) (expr_eqb z1 z2) | impp y1 z1, impp y2 z2 => andb (expr_eqb y1 y2) (expr_eqb z1 z2) | sepcon y1 z1, sepcon y2 z2 => andb (expr_eqb y1 y2) (expr_eqb z1 z2) | wand y1 z1, wand y2 z2 => andb (expr_eqb y1 y2) (expr_eqb z1 z2) | emp, emp => true | falsep, falsep => true | varp p, varp q => eqb p q | _, _ => false end.",
            "VernacDefinition",
            "2f2e0c0dfcf54217fdac4a1639b4040a3887c917"
        ],
        [
            "Lemma expr_eqb_true {Sigma: PropositionalVariables} (eqb: Var -> Var -> bool): (forall p q, eqb p q = true <-> p = q) -> (forall x y, expr_eqb eqb x y = true <-> x = y).",
            "VernacStartTheoremProof",
            "1687abc7d14ef26da5b7e1a2502296086cc20ec5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert y; induction x; intros; destruct y; try solve [split; intros HH; inversion HH].",
            "VernacExtend",
            "b7e21bbf83a14324cdf68fbefd8c7799b73fe139"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl; rewrite Bool.andb_true_iff.",
            "VernacExtend",
            "aecfce2176b7bff7c677c9159853c76255ae4389"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "rewrite IHx1 in H0; rewrite IHx2 in H1.",
            "VernacExtend",
            "7f1df19d3ccd49e534e4a5d03d94fb0d35786169"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H0; subst.",
            "VernacExtend",
            "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
        ],
        [
            "rewrite IHx1, IHx2.",
            "VernacExtend",
            "c958b45147e762399abf10dd2f102e08292a6050"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl; rewrite Bool.andb_true_iff.",
            "VernacExtend",
            "aecfce2176b7bff7c677c9159853c76255ae4389"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "rewrite IHx1 in H0; rewrite IHx2 in H1.",
            "VernacExtend",
            "7f1df19d3ccd49e534e4a5d03d94fb0d35786169"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H0; subst.",
            "VernacExtend",
            "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
        ],
        [
            "rewrite IHx1, IHx2.",
            "VernacExtend",
            "c958b45147e762399abf10dd2f102e08292a6050"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl; rewrite Bool.andb_true_iff.",
            "VernacExtend",
            "aecfce2176b7bff7c677c9159853c76255ae4389"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "rewrite IHx1 in H0; rewrite IHx2 in H1.",
            "VernacExtend",
            "7f1df19d3ccd49e534e4a5d03d94fb0d35786169"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H0; subst.",
            "VernacExtend",
            "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
        ],
        [
            "rewrite IHx1, IHx2.",
            "VernacExtend",
            "c958b45147e762399abf10dd2f102e08292a6050"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl; rewrite Bool.andb_true_iff.",
            "VernacExtend",
            "aecfce2176b7bff7c677c9159853c76255ae4389"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "rewrite IHx1 in H0; rewrite IHx2 in H1.",
            "VernacExtend",
            "7f1df19d3ccd49e534e4a5d03d94fb0d35786169"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H0; subst.",
            "VernacExtend",
            "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
        ],
        [
            "rewrite IHx1, IHx2.",
            "VernacExtend",
            "c958b45147e762399abf10dd2f102e08292a6050"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl; rewrite Bool.andb_true_iff.",
            "VernacExtend",
            "aecfce2176b7bff7c677c9159853c76255ae4389"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "rewrite IHx1 in H0; rewrite IHx2 in H1.",
            "VernacExtend",
            "7f1df19d3ccd49e534e4a5d03d94fb0d35786169"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H0; subst.",
            "VernacExtend",
            "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
        ],
        [
            "rewrite IHx1, IHx2.",
            "VernacExtend",
            "c958b45147e762399abf10dd2f102e08292a6050"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "split; intros; congruence.",
            "VernacExtend",
            "e6e7134eeb6213890fdce2a7ed77f1313465a8a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance L {Sigma: PropositionalVariables}: Language := Build_Language (expr Sigma).",
            "VernacInstance",
            "0d0580f170dbb510b42895e0558f820071b3564a"
        ],
        [
            "Instance minL {Sigma: PropositionalVariables}: MinimunLanguage L := Build_MinimunLanguage L impp.",
            "VernacInstance",
            "c3d136d842331b7c9890d721b73a10d6c3ffd651"
        ],
        [
            "Instance pL {Sigma: PropositionalVariables}: PropositionalLanguage L := Build_PropositionalLanguage L andp orp falsep.",
            "VernacInstance",
            "a9a37cd89169b22b1083583c7905fdd51fa31b80"
        ],
        [
            "Instance sL {Sigma: PropositionalVariables}: SeparationLanguage L := Build_SeparationLanguage L sepcon wand.",
            "VernacInstance",
            "0ecbbfa48cc91ef32220af109ab6fb58d45df20d"
        ],
        [
            "Instance s'L {Sigma: PropositionalVariables}: SeparationEmpLanguage L := Build_SeparationEmpLanguage L sL emp.",
            "VernacInstance",
            "cd227d8f558cb2c30884d3c581c9756b9b8ccefa"
        ],
        [
            "Definition rank {Sigma: PropositionalVariables}: expr Sigma -> nat := fix rank (x: expr Sigma): nat := match x with | andp y z => 1 + rank y + rank z | orp y z => 1 + rank y + rank z | impp y z => 1 + rank y + rank z | sepcon y z => 1 + rank y + rank z | wand y z => 1 + rank y + rank z | emp => 0 | falsep => 0 | varp p => 0 end.",
            "VernacDefinition",
            "810d224fe10f370d8a156328816943bcc7404c76"
        ],
        [
            "Definition formula_countable {Sigma: PropositionalVariables}: Countable Var -> Countable (expr Sigma).",
            "VernacDefinition",
            "05cac16e381656bdd44e483e04b9e60e0beddc08"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall n, Countable (sig (fun x: expr Sigma => rank x <= n))).",
            "VernacExtend",
            "a339040004efcdcee2fbda9be3540e0d9a2e95bb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (@bijection_Countable _ (Var + unit + unit)%type); [| solve_Countable].",
            "VernacExtend",
            "706958c98a85f63bdbb58c3189ae2b45f1804ba6"
        ],
        [
            "apply bijection_sym.",
            "VernacExtend",
            "271e6010b1376f0171b44a40450c33fef8d362d8"
        ],
        [
            "apply (FBuild_bijection _ _ (fun x => match x with | inl (inl p) => exist (fun x: expr Sigma => rank x <= 0) (varp p) (le_n 0) | inl (inr _) => exist (fun x: expr Sigma => rank x <= 0) emp (le_n 0) | inr _ => exist (fun x: expr Sigma => rank x <= 0) falsep (le_n 0) end)).",
            "VernacExtend",
            "436f9e5c66cddd0b87600b6e032b3a8892a5ec5a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "destruct a1 as [[? | []] | []], a2 as [[? | []] | []]; inversion H; auto.",
            "VernacExtend",
            "b6cbcadfd3b01a274300c1d698043bc2c53b4e21"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "destruct b as [[] HH]; try solve [inversion HH].",
            "VernacExtend",
            "55c1c86b53408fff2c33f5ee46f30315594f8541"
        ],
        [
            "1: exists (inl (inr tt)); eauto; f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "37739ddad46915eb9f42096a1dcf3abbfe8a6d22"
        ],
        [
            "1: exists (inr tt); eauto; f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "364f0f082b13fc0d384639c75e7a098c2669b610"
        ],
        [
            "1: exists (inl (inl v)); eauto; f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "669bc383274eed99f633416867f0a35e11a96dec"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "set (s := sig (fun x: expr Sigma => rank x <= n)).",
            "VernacExtend",
            "9fff7547d6fc0e74c5645548ec93e1abbe7d2e3d"
        ],
        [
            "apply (@injection_Countable _ (s * s + s * s + s * s + s * s + s * s + unit + unit + Var)%type); [| solve_Countable].",
            "VernacExtend",
            "4f467b40dca89a42b13910b243dd9c00b5297fa8"
        ],
        [
            "apply (Build_injection _ _ (fun x y => match y with | inl (inl (inl (inl (inl (inl (inl (exist _ y _, exist _ z _))))))) => proj1_sig x = andp y z | inl (inl (inl (inl (inl (inl (inr (exist _ y _, exist _ z _))))))) => proj1_sig x = orp y z | inl (inl (inl (inl (inl (inr (exist _ y _, exist _ z _)))))) => proj1_sig x = impp y z | inl (inl (inl (inl (inr (exist _ y _, exist _ z _))))) => proj1_sig x = sepcon y z | inl (inl (inl (inr (exist _ y _, exist _ z _)))) => proj1_sig x = wand y z | inl (inl (inr _)) => proj1_sig x = emp | inl (inr _) => proj1_sig x = falsep | inr p => proj1_sig x = varp p end)).",
            "VernacExtend",
            "e2e69cce92744173f22280a66cea1cc4d147f3b6"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "destruct a as [[y z | y z | y z | y z | y z | | | p] ?H].",
            "VernacExtend",
            "e1f4e26f99d490b5946d0c027e705e1b66c54bba"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "assert (rank y <= n) by omega.",
            "VernacExtend",
            "6827e2c6f1c6a7d1918bc79ade17859944898c17"
        ],
        [
            "assert (rank z <= n) by omega.",
            "VernacExtend",
            "df2e334dd6be89a893a32ec9eb1626b6ea9ab3ad"
        ],
        [
            "exists (inl (inl (inl (inl (inl (inl (inl (exist _ y H0, exist _ z H1)))))))); auto.",
            "VernacExtend",
            "82d2d242ee5a5ccd610019d2d0ea1d71dcd01b09"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "assert (rank y <= n) by omega.",
            "VernacExtend",
            "6827e2c6f1c6a7d1918bc79ade17859944898c17"
        ],
        [
            "assert (rank z <= n) by omega.",
            "VernacExtend",
            "df2e334dd6be89a893a32ec9eb1626b6ea9ab3ad"
        ],
        [
            "exists (inl (inl (inl (inl (inl (inl (inr (exist _ y H0, exist _ z H1)))))))); auto.",
            "VernacExtend",
            "b077d84bcc3f971d433e217a1a64bac91ec1bb76"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "assert (rank y <= n) by omega.",
            "VernacExtend",
            "6827e2c6f1c6a7d1918bc79ade17859944898c17"
        ],
        [
            "assert (rank z <= n) by omega.",
            "VernacExtend",
            "df2e334dd6be89a893a32ec9eb1626b6ea9ab3ad"
        ],
        [
            "exists (inl (inl (inl (inl (inl (inr (exist _ y H0, exist _ z H1))))))); auto.",
            "VernacExtend",
            "0c13d56435e880df979b3cd9f59964ca90ed7165"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "assert (rank y <= n) by omega.",
            "VernacExtend",
            "6827e2c6f1c6a7d1918bc79ade17859944898c17"
        ],
        [
            "assert (rank z <= n) by omega.",
            "VernacExtend",
            "df2e334dd6be89a893a32ec9eb1626b6ea9ab3ad"
        ],
        [
            "exists (inl (inl (inl (inl (inr (exist _ y H0, exist _ z H1)))))); auto.",
            "VernacExtend",
            "89b6eab42e9b7c07ffb440c453dc2c4d86d14f03"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "assert (rank y <= n) by omega.",
            "VernacExtend",
            "6827e2c6f1c6a7d1918bc79ade17859944898c17"
        ],
        [
            "assert (rank z <= n) by omega.",
            "VernacExtend",
            "df2e334dd6be89a893a32ec9eb1626b6ea9ab3ad"
        ],
        [
            "exists (inl (inl (inl (inr (exist _ y H0, exist _ z H1))))); auto.",
            "VernacExtend",
            "ad7361e606b9ce2e331190e5c3c04f179b15d910"
        ],
        [
            "exists (inl (inl (inr tt))); auto.",
            "VernacExtend",
            "2a23e90cc13f45ba5c712e29a01ce7e87145d439"
        ],
        [
            "exists (inl (inr tt)); auto.",
            "VernacExtend",
            "cf5674ff021a728a39a7651c972695d0eac2f3a4"
        ],
        [
            "exists (inr p); auto.",
            "VernacExtend",
            "4b06ef24d7a6e2711cbd75675243aca6e8720e07"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "destruct a as [[y z | y z | y z | y z | y z | | | p] ?H]; destruct b1 as [[[[[[[[[y1 ?H] [z1 ?H]] | [[y1 ?H] [z1 ?H]]] | [[y1 ?H] [z1 ?H]]] | [[y1 ?H] [z1 ?H]]] | [[y1 ?H] [z1 ?H]]] |] |] | p1]; try solve [inversion H]; destruct b2 as [[[[[[[[[y2 ?H] [z2 ?H]] | [[y2 ?H] [z2 ?H]]] | [[y2 ?H] [z2 ?H]]] | [[y2 ?H] [z2 ?H]]] | [[y2 ?H] [z2 ?H]]] |] |] | p2]; try solve [inversion H0].",
            "VernacExtend",
            "b24c58936e09e664d1689024af3b825c5adca31f"
        ],
        [
            "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "80ffffd82f902a7b329c7fade798d523651de3f8"
        ],
        [
            "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "80ffffd82f902a7b329c7fade798d523651de3f8"
        ],
        [
            "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "80ffffd82f902a7b329c7fade798d523651de3f8"
        ],
        [
            "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "80ffffd82f902a7b329c7fade798d523651de3f8"
        ],
        [
            "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "80ffffd82f902a7b329c7fade798d523651de3f8"
        ],
        [
            "destruct u, u0; auto.",
            "VernacExtend",
            "8cd7502e9d6b2b35ab951c4f1eb57ca74f711c3a"
        ],
        [
            "destruct u, u0; auto.",
            "VernacExtend",
            "8cd7502e9d6b2b35ab951c4f1eb57ca74f711c3a"
        ],
        [
            "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "80ffffd82f902a7b329c7fade798d523651de3f8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "destruct b as [[[[[[[[[y ?H] [z ?H]] | [[y ?H] [z ?H]]] | [[y ?H] [z ?H]]] | [[y ?H] [z ?H]]] | [[y ?H] [z ?H]]] |] |] | p]; destruct a1 as [[y1 z1 | y1 z1 | y1 z1 | y1 z1 | y1 z1 | | | p1] ?H]; try solve [inversion H]; destruct a2 as [[y2 z2 | y2 z2 | y2 z2 | y2 z2 | y2 z2 | | | p2] ?H]; try solve [inversion H0].",
            "VernacExtend",
            "85c80dd173d729beaef2ae308500b6f98b492a25"
        ],
        [
            "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "80ffffd82f902a7b329c7fade798d523651de3f8"
        ],
        [
            "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "80ffffd82f902a7b329c7fade798d523651de3f8"
        ],
        [
            "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "80ffffd82f902a7b329c7fade798d523651de3f8"
        ],
        [
            "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "80ffffd82f902a7b329c7fade798d523651de3f8"
        ],
        [
            "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "80ffffd82f902a7b329c7fade798d523651de3f8"
        ],
        [
            "f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "9732b0267eacdeb94a66e939183c158104cc20de"
        ],
        [
            "f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "9732b0267eacdeb94a66e939183c158104cc20de"
        ],
        [
            "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
            "VernacExtend",
            "80ffffd82f902a7b329c7fade798d523651de3f8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (@injection_Countable _ (sigT (fun n => sig (fun x: expr Sigma => rank x <= n)))); [| solve_Countable; auto].",
            "VernacExtend",
            "73ffa1bcf772a9720d1758c7fd5841cf95684aad"
        ],
        [
            "apply (FBuild_injection _ _ (fun x0 => existT (fun n => sig (fun x => rank x <= n)) (rank x0) (exist (fun x => rank x <= rank x0) x0 (le_n (rank x0))))).",
            "VernacExtend",
            "d6de867f1eac0666ab9e9756b99400a83dd831c2"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "inversion H; auto.",
            "VernacExtend",
            "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "expr_eqb_true",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert y; induction x; intros; destruct y; try solve [split; intros HH; inversion HH].",
                        "VernacExtend",
                        "b7e21bbf83a14324cdf68fbefd8c7799b73fe139"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Bool.andb_true_iff.",
                        "VernacExtend",
                        "aecfce2176b7bff7c677c9159853c76255ae4389"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx1 in H0; rewrite IHx2 in H1.",
                        "VernacExtend",
                        "7f1df19d3ccd49e534e4a5d03d94fb0d35786169"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H0; subst.",
                        "VernacExtend",
                        "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx1, IHx2.",
                        "VernacExtend",
                        "c958b45147e762399abf10dd2f102e08292a6050"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Bool.andb_true_iff.",
                        "VernacExtend",
                        "aecfce2176b7bff7c677c9159853c76255ae4389"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx1 in H0; rewrite IHx2 in H1.",
                        "VernacExtend",
                        "7f1df19d3ccd49e534e4a5d03d94fb0d35786169"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H0; subst.",
                        "VernacExtend",
                        "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx1, IHx2.",
                        "VernacExtend",
                        "c958b45147e762399abf10dd2f102e08292a6050"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Bool.andb_true_iff.",
                        "VernacExtend",
                        "aecfce2176b7bff7c677c9159853c76255ae4389"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx1 in H0; rewrite IHx2 in H1.",
                        "VernacExtend",
                        "7f1df19d3ccd49e534e4a5d03d94fb0d35786169"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H0; subst.",
                        "VernacExtend",
                        "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx1, IHx2.",
                        "VernacExtend",
                        "c958b45147e762399abf10dd2f102e08292a6050"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Bool.andb_true_iff.",
                        "VernacExtend",
                        "aecfce2176b7bff7c677c9159853c76255ae4389"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx1 in H0; rewrite IHx2 in H1.",
                        "VernacExtend",
                        "7f1df19d3ccd49e534e4a5d03d94fb0d35786169"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H0; subst.",
                        "VernacExtend",
                        "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx1, IHx2.",
                        "VernacExtend",
                        "c958b45147e762399abf10dd2f102e08292a6050"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Bool.andb_true_iff.",
                        "VernacExtend",
                        "aecfce2176b7bff7c677c9159853c76255ae4389"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx1 in H0; rewrite IHx2 in H1.",
                        "VernacExtend",
                        "7f1df19d3ccd49e534e4a5d03d94fb0d35786169"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H0; subst.",
                        "VernacExtend",
                        "9d4a402d7b2b14ad44ce7fa1fc818e48d61f4474"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx1, IHx2.",
                        "VernacExtend",
                        "c958b45147e762399abf10dd2f102e08292a6050"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "split; intros; congruence.",
                        "VernacExtend",
                        "e6e7134eeb6213890fdce2a7ed77f1313465a8a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "formula_countable",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (forall n, Countable (sig (fun x: expr Sigma => rank x <= n))).",
                        "VernacExtend",
                        "a339040004efcdcee2fbda9be3540e0d9a2e95bb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply (@bijection_Countable _ (Var + unit + unit)%type); [| solve_Countable].",
                        "VernacExtend",
                        "706958c98a85f63bdbb58c3189ae2b45f1804ba6"
                    ]
                },
                {
                    "command": [
                        "apply bijection_sym.",
                        "VernacExtend",
                        "271e6010b1376f0171b44a40450c33fef8d362d8"
                    ]
                },
                {
                    "command": [
                        "apply (FBuild_bijection _ _ (fun x => match x with | inl (inl p) => exist (fun x: expr Sigma => rank x <= 0) (varp p) (le_n 0) | inl (inr _) => exist (fun x: expr Sigma => rank x <= 0) emp (le_n 0) | inr _ => exist (fun x: expr Sigma => rank x <= 0) falsep (le_n 0) end)).",
                        "VernacExtend",
                        "436f9e5c66cddd0b87600b6e032b3a8892a5ec5a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "destruct a1 as [[? | []] | []], a2 as [[? | []] | []]; inversion H; auto.",
                        "VernacExtend",
                        "b6cbcadfd3b01a274300c1d698043bc2c53b4e21"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "destruct b as [[] HH]; try solve [inversion HH].",
                        "VernacExtend",
                        "55c1c86b53408fff2c33f5ee46f30315594f8541"
                    ]
                },
                {
                    "command": [
                        "1: exists (inl (inr tt)); eauto; f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "37739ddad46915eb9f42096a1dcf3abbfe8a6d22"
                    ]
                },
                {
                    "command": [
                        "1: exists (inr tt); eauto; f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "364f0f082b13fc0d384639c75e7a098c2669b610"
                    ]
                },
                {
                    "command": [
                        "1: exists (inl (inl v)); eauto; f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "669bc383274eed99f633416867f0a35e11a96dec"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "set (s := sig (fun x: expr Sigma => rank x <= n)).",
                        "VernacExtend",
                        "9fff7547d6fc0e74c5645548ec93e1abbe7d2e3d"
                    ]
                },
                {
                    "command": [
                        "apply (@injection_Countable _ (s * s + s * s + s * s + s * s + s * s + unit + unit + Var)%type); [| solve_Countable].",
                        "VernacExtend",
                        "4f467b40dca89a42b13910b243dd9c00b5297fa8"
                    ]
                },
                {
                    "command": [
                        "apply (Build_injection _ _ (fun x y => match y with | inl (inl (inl (inl (inl (inl (inl (exist _ y _, exist _ z _))))))) => proj1_sig x = andp y z | inl (inl (inl (inl (inl (inl (inr (exist _ y _, exist _ z _))))))) => proj1_sig x = orp y z | inl (inl (inl (inl (inl (inr (exist _ y _, exist _ z _)))))) => proj1_sig x = impp y z | inl (inl (inl (inl (inr (exist _ y _, exist _ z _))))) => proj1_sig x = sepcon y z | inl (inl (inl (inr (exist _ y _, exist _ z _)))) => proj1_sig x = wand y z | inl (inl (inr _)) => proj1_sig x = emp | inl (inr _) => proj1_sig x = falsep | inr p => proj1_sig x = varp p end)).",
                        "VernacExtend",
                        "e2e69cce92744173f22280a66cea1cc4d147f3b6"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "destruct a as [[y z | y z | y z | y z | y z | | | p] ?H].",
                        "VernacExtend",
                        "e1f4e26f99d490b5946d0c027e705e1b66c54bba"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "assert (rank y <= n) by omega.",
                        "VernacExtend",
                        "6827e2c6f1c6a7d1918bc79ade17859944898c17"
                    ]
                },
                {
                    "command": [
                        "assert (rank z <= n) by omega.",
                        "VernacExtend",
                        "df2e334dd6be89a893a32ec9eb1626b6ea9ab3ad"
                    ]
                },
                {
                    "command": [
                        "exists (inl (inl (inl (inl (inl (inl (inl (exist _ y H0, exist _ z H1)))))))); auto.",
                        "VernacExtend",
                        "82d2d242ee5a5ccd610019d2d0ea1d71dcd01b09"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "assert (rank y <= n) by omega.",
                        "VernacExtend",
                        "6827e2c6f1c6a7d1918bc79ade17859944898c17"
                    ]
                },
                {
                    "command": [
                        "assert (rank z <= n) by omega.",
                        "VernacExtend",
                        "df2e334dd6be89a893a32ec9eb1626b6ea9ab3ad"
                    ]
                },
                {
                    "command": [
                        "exists (inl (inl (inl (inl (inl (inl (inr (exist _ y H0, exist _ z H1)))))))); auto.",
                        "VernacExtend",
                        "b077d84bcc3f971d433e217a1a64bac91ec1bb76"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "assert (rank y <= n) by omega.",
                        "VernacExtend",
                        "6827e2c6f1c6a7d1918bc79ade17859944898c17"
                    ]
                },
                {
                    "command": [
                        "assert (rank z <= n) by omega.",
                        "VernacExtend",
                        "df2e334dd6be89a893a32ec9eb1626b6ea9ab3ad"
                    ]
                },
                {
                    "command": [
                        "exists (inl (inl (inl (inl (inl (inr (exist _ y H0, exist _ z H1))))))); auto.",
                        "VernacExtend",
                        "0c13d56435e880df979b3cd9f59964ca90ed7165"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "assert (rank y <= n) by omega.",
                        "VernacExtend",
                        "6827e2c6f1c6a7d1918bc79ade17859944898c17"
                    ]
                },
                {
                    "command": [
                        "assert (rank z <= n) by omega.",
                        "VernacExtend",
                        "df2e334dd6be89a893a32ec9eb1626b6ea9ab3ad"
                    ]
                },
                {
                    "command": [
                        "exists (inl (inl (inl (inl (inr (exist _ y H0, exist _ z H1)))))); auto.",
                        "VernacExtend",
                        "89b6eab42e9b7c07ffb440c453dc2c4d86d14f03"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "assert (rank y <= n) by omega.",
                        "VernacExtend",
                        "6827e2c6f1c6a7d1918bc79ade17859944898c17"
                    ]
                },
                {
                    "command": [
                        "assert (rank z <= n) by omega.",
                        "VernacExtend",
                        "df2e334dd6be89a893a32ec9eb1626b6ea9ab3ad"
                    ]
                },
                {
                    "command": [
                        "exists (inl (inl (inl (inr (exist _ y H0, exist _ z H1))))); auto.",
                        "VernacExtend",
                        "ad7361e606b9ce2e331190e5c3c04f179b15d910"
                    ]
                },
                {
                    "command": [
                        "exists (inl (inl (inr tt))); auto.",
                        "VernacExtend",
                        "2a23e90cc13f45ba5c712e29a01ce7e87145d439"
                    ]
                },
                {
                    "command": [
                        "exists (inl (inr tt)); auto.",
                        "VernacExtend",
                        "cf5674ff021a728a39a7651c972695d0eac2f3a4"
                    ]
                },
                {
                    "command": [
                        "exists (inr p); auto.",
                        "VernacExtend",
                        "4b06ef24d7a6e2711cbd75675243aca6e8720e07"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "destruct a as [[y z | y z | y z | y z | y z | | | p] ?H]; destruct b1 as [[[[[[[[[y1 ?H] [z1 ?H]] | [[y1 ?H] [z1 ?H]]] | [[y1 ?H] [z1 ?H]]] | [[y1 ?H] [z1 ?H]]] | [[y1 ?H] [z1 ?H]]] |] |] | p1]; try solve [inversion H]; destruct b2 as [[[[[[[[[y2 ?H] [z2 ?H]] | [[y2 ?H] [z2 ?H]]] | [[y2 ?H] [z2 ?H]]] | [[y2 ?H] [z2 ?H]]] | [[y2 ?H] [z2 ?H]]] |] |] | p2]; try solve [inversion H0].",
                        "VernacExtend",
                        "b24c58936e09e664d1689024af3b825c5adca31f"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "80ffffd82f902a7b329c7fade798d523651de3f8"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "80ffffd82f902a7b329c7fade798d523651de3f8"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "80ffffd82f902a7b329c7fade798d523651de3f8"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "80ffffd82f902a7b329c7fade798d523651de3f8"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "80ffffd82f902a7b329c7fade798d523651de3f8"
                    ]
                },
                {
                    "command": [
                        "destruct u, u0; auto.",
                        "VernacExtend",
                        "8cd7502e9d6b2b35ab951c4f1eb57ca74f711c3a"
                    ]
                },
                {
                    "command": [
                        "destruct u, u0; auto.",
                        "VernacExtend",
                        "8cd7502e9d6b2b35ab951c4f1eb57ca74f711c3a"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "80ffffd82f902a7b329c7fade798d523651de3f8"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "destruct b as [[[[[[[[[y ?H] [z ?H]] | [[y ?H] [z ?H]]] | [[y ?H] [z ?H]]] | [[y ?H] [z ?H]]] | [[y ?H] [z ?H]]] |] |] | p]; destruct a1 as [[y1 z1 | y1 z1 | y1 z1 | y1 z1 | y1 z1 | | | p1] ?H]; try solve [inversion H]; destruct a2 as [[y2 z2 | y2 z2 | y2 z2 | y2 z2 | y2 z2 | | | p2] ?H]; try solve [inversion H0].",
                        "VernacExtend",
                        "85c80dd173d729beaef2ae308500b6f98b492a25"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "80ffffd82f902a7b329c7fade798d523651de3f8"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "80ffffd82f902a7b329c7fade798d523651de3f8"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "80ffffd82f902a7b329c7fade798d523651de3f8"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "80ffffd82f902a7b329c7fade798d523651de3f8"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "80ffffd82f902a7b329c7fade798d523651de3f8"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "9732b0267eacdeb94a66e939183c158104cc20de"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "9732b0267eacdeb94a66e939183c158104cc20de"
                    ]
                },
                {
                    "command": [
                        "inversion H; inversion H0; subst; subst; repeat f_equal; apply proof_irrelevance.",
                        "VernacExtend",
                        "80ffffd82f902a7b329c7fade798d523651de3f8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (@injection_Countable _ (sigT (fun n => sig (fun x: expr Sigma => rank x <= n)))); [| solve_Countable; auto].",
                        "VernacExtend",
                        "73ffa1bcf772a9720d1758c7fd5841cf95684aad"
                    ]
                },
                {
                    "command": [
                        "apply (FBuild_injection _ _ (fun x0 => existT (fun n => sig (fun x => rank x <= n)) (rank x0) (exist (fun x => rank x <= rank x0) x0 (le_n (rank x0))))).",
                        "VernacExtend",
                        "d6de867f1eac0666ab9e9756b99400a83dd831c2"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "inversion H; auto.",
                        "VernacExtend",
                        "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}