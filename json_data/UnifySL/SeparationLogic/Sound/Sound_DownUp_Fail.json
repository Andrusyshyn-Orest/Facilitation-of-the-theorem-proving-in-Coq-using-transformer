{
    "filename": "SeparationLogic/Sound/Sound_DownUp_Fail.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Logic.lib.Coqlib.",
            "VernacRequire",
            "075e5d7e5a261753a32e2d1ec79bc22503d420dc"
        ],
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.GeneralLogic.KripkeModel.",
            "VernacRequire",
            "6b79568e5e653c27c6a8e7063552aa2142ab9f3f"
        ],
        [
            "Require Import Logic.GeneralLogic.Semantics.Kripke.",
            "VernacRequire",
            "4f0a29ef213cb173f58f6b351c743bcacb5b71e5"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.MinimunLogic.Semantics.Kripke.",
            "VernacRequire",
            "4fcfcd4fde2d735d73bfaf30e9c1caf49711101e"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.PropositionalLogic.Semantics.Kripke.",
            "VernacRequire",
            "ca0341362accf77b79eee54fec205c480dd1c1bd"
        ],
        [
            "Require Import Logic.SeparationLogic.Syntax.",
            "VernacRequire",
            "06f045a49fc8f11e28ecdce8309ad8f23a886843"
        ],
        [
            "Require Import Logic.SeparationLogic.Model.SeparationAlgebra.",
            "VernacRequire",
            "fff7e35feb20a10cad353e63f1dbfcd95597c6ca"
        ],
        [
            "Require Import Logic.SeparationLogic.Model.OrderedSA.",
            "VernacRequire",
            "c39ff54bd2278860ad247e36ee8f65fdcfafa4a7"
        ],
        [
            "Require Import Logic.SeparationLogic.Semantics.DownUpSemantics_Fail.",
            "VernacRequire",
            "489b171a44df671036e3f92d63b0da03f00f1ec5"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Local Open Scope kripke_model.",
            "VernacOpenCloseScope",
            "e49ee31afd7da8031602e71d800a363615169ff7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Import SeparationLogicNotation.",
            "VernacImport",
            "ef77ed65f39901a78bbb8e7daa1c2fee20e46d4e"
        ],
        [
            "Import KripkeModelFamilyNotation.",
            "VernacImport",
            "e1b9787d5646dac924687ed660f3c109e8d952dd"
        ],
        [
            "Import KripkeModelNotation_Intuitionistic.",
            "VernacImport",
            "d7b7fe443374144a34554b0fe36caedd27cfce5b"
        ],
        [
            "Lemma sound_sepcon_comm {L: Language} {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {sL: SeparationLanguage L} {MD: Model} {kMD: KripkeModel MD} (M: Kmodel) {R: Relation (Kworlds M)} {po_R: PreOrder Krelation} {J: Join (Kworlds M)} {SA: SeparationAlgebra (Kworlds M)} {SM: Semantics L MD} {kiSM: KripkeIntuitionisticSemantics L MD M SM} {kminSM: KripkeMinimunSemantics L MD M SM} {kpSM: KripkePropositionalSemantics L MD M SM} {dusSM: DownUpSemantics_Fail.SeparatingSemantics L MD M SM}: forall x y: expr, forall m, KRIPKE: M, m |= x * y --> y * x.",
            "VernacStartTheoremProof",
            "0350dada16b560f1869a4b2b69c3ea4c8c56fa6e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sat_impp; intros.",
            "VernacExtend",
            "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
        ],
        [
            "rewrite sat_sepcon in H0 |- *; intros.",
            "VernacExtend",
            "8e9bbbc3d5975c7830dd4169d5af96751b8f01fa"
        ],
        [
            "destruct H0 as [m0 [m1 [m2 [? [? [? ?]]]]]].",
            "VernacExtend",
            "463f1e4d1e926a5bfb5472c66bb1b435e0a685ab"
        ],
        [
            "exists m0, m2, m1.",
            "VernacExtend",
            "5ac070279f42f6f493dece451948e33c027c8222"
        ],
        [
            "split; [| split; [| split]]; auto.",
            "VernacExtend",
            "8ec75c621a1a6b8002bb9fc62dd3064e5f7ebb6a"
        ],
        [
            "apply join_comm; auto.",
            "VernacExtend",
            "f8704e28f12171aea84f4aa6046756c8e2b1fb03"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sound_sepcon_assoc {L: Language} {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {sL: SeparationLanguage L} {MD: Model} {kMD: KripkeModel MD} (M: Kmodel) {R: Relation (Kworlds M)} {po_R: PreOrder Krelation} {J: Join (Kworlds M)} {SA: SeparationAlgebra (Kworlds M)} {SM: Semantics L MD} {kiSM: KripkeIntuitionisticSemantics L MD M SM} {kminSM: KripkeMinimunSemantics L MD M SM} {kpSM: KripkePropositionalSemantics L MD M SM} {dusSM: DownUpSemantics_Fail.SeparatingSemantics L MD M SM}: forall x y z: expr, forall m, KRIPKE: M, m |= x * (y * z) <--> (x * y) * z.",
            "VernacStartTheoremProof",
            "7cc5ac027930fa13db90055df3bbbd274f3bf053"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold iffp.",
            "VernacExtend",
            "0a3c21e8bcedfd5a0e032d0fc7debd7b46d1b2e0"
        ],
        [
            "rewrite sat_andp.",
            "VernacExtend",
            "511bceb3d7db3790ff91f8bf5406e677c2785fcc"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite sat_impp; intros.",
            "VernacExtend",
            "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
        ],
        [
            "rewrite sat_sepcon in H0.",
            "VernacExtend",
            "2128d9c8ff465a07c44f7768af047acc21af6cd4"
        ],
        [
            "destruct H0 as [m0 [m1 [m2 [? [? [? ?]]]]]].",
            "VernacExtend",
            "463f1e4d1e926a5bfb5472c66bb1b435e0a685ab"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ]
    ],
    "proofs": [
        {
            "name": "sound_sepcon_comm",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_impp; intros.",
                        "VernacExtend",
                        "cb8734ab8ac271c3053f991c8e4eaa52bbefe705"
                    ]
                },
                {
                    "command": [
                        "rewrite sat_sepcon in H0 |- *; intros.",
                        "VernacExtend",
                        "8e9bbbc3d5975c7830dd4169d5af96751b8f01fa"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [m0 [m1 [m2 [? [? [? ?]]]]]].",
                        "VernacExtend",
                        "463f1e4d1e926a5bfb5472c66bb1b435e0a685ab"
                    ]
                },
                {
                    "command": [
                        "exists m0, m2, m1.",
                        "VernacExtend",
                        "5ac070279f42f6f493dece451948e33c027c8222"
                    ]
                },
                {
                    "command": [
                        "split; [| split; [| split]]; auto.",
                        "VernacExtend",
                        "8ec75c621a1a6b8002bb9fc62dd3064e5f7ebb6a"
                    ]
                },
                {
                    "command": [
                        "apply join_comm; auto.",
                        "VernacExtend",
                        "f8704e28f12171aea84f4aa6046756c8e2b1fb03"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}