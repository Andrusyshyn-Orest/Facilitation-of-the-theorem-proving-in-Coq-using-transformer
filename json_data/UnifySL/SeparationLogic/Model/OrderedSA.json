{
    "filename": "SeparationLogic/Model/OrderedSA.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Coq.Logic.Classical_Prop.",
            "VernacRequire",
            "9ccd680c17c6039100012bae5c1bef8ed35d228a"
        ],
        [
            "Require Import Logic.lib.Coqlib.",
            "VernacRequire",
            "075e5d7e5a261753a32e2d1ec79bc22503d420dc"
        ],
        [
            "Require Import Logic.GeneralLogic.KripkeModel.",
            "VernacRequire",
            "6b79568e5e653c27c6a8e7063552aa2142ab9f3f"
        ],
        [
            "Require Import Logic.SeparationLogic.Model.SeparationAlgebra.",
            "VernacRequire",
            "fff7e35feb20a10cad353e63f1dbfcd95597c6ca"
        ],
        [
            "Local Open Scope kripke_model.",
            "VernacOpenCloseScope",
            "e49ee31afd7da8031602e71d800a363615169ff7"
        ],
        [
            "Import KripkeModelNotation_Intuitionistic.",
            "VernacImport",
            "d7b7fe443374144a34554b0fe36caedd27cfce5b"
        ],
        [
            "Definition increasing {worlds: Type} {R: Relation worlds} {J: Join worlds}: worlds -> Prop := fun m => forall n n', join m n n' -> n <= n'.",
            "VernacDefinition",
            "4f566919d3e8bc9ebc94268e41ddcb9e73984f6e"
        ],
        [
            "Definition increasing' {worlds: Type} {R: Relation worlds} {J: Join worlds}: worlds -> Prop := fun m => forall n, m <= n -> increasing n.",
            "VernacDefinition",
            "46c20c478d249ee3be043ee21d5e9a71daf3ad6c"
        ],
        [
            "Lemma incr_incr' {worlds: Type} {R: Relation worlds} {po_R: PreOrder Krelation} {J: Join worlds}: forall m, increasing' m -> increasing m.",
            "VernacStartTheoremProof",
            "f5c6f3fe2b29c6af36b0d77cfe2707001b652375"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma disc_incr_unit {worlds: Type} {R: Relation worlds} {po_R: PreOrder Krelation} {J: Join worlds}: IdentityKripkeIntuitionisticModel worlds -> forall e, increasing e <-> unit_element e.",
            "VernacStartTheoremProof",
            "e089863f8214d61baa83311ec67b2843a501834e"
        ],
        [
            "intros; split; intros; hnf; intros.",
            "VernacExtend",
            "a55f836e3920479c12f5591138fbf6ed66faf389"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H0; auto.",
            "VernacExtend",
            "e167f871dfeec1cef76aaf201c54c081f29f730b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply H0 in H1; subst; reflexivity.",
            "VernacExtend",
            "0406f6d96dd2f92b43fd957e95c59b61d8c8b57a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class IncreasingSeparationAlgebra (worlds: Type) {R: Relation worlds} {J: Join worlds }: Type := { all_increasing: forall x: worlds, increasing x }.",
            "VernacInductive",
            "e505f3eddf32cea1f68f2bf6955dcee6dd126765"
        ],
        [
            "Definition residue {worlds: Type} {R: Relation worlds} {J: Join worlds} (m n: worlds): Prop := exists n', join n n' m /\\ m <= n'.",
            "VernacDefinition",
            "c770c78e4e75690672399601af72ec275351b7d3"
        ],
        [
            "Class ResidualSeparationAlgebra (worlds: Type) {R: Relation worlds} {J: Join worlds}: Type := { residue_exists: forall n: worlds, exists m, residue n m; }.",
            "VernacInductive",
            "c356269e4ffff827c32ad6594e1b78e6e868ce24"
        ],
        [
            "Class UnitalSeparationAlgebra (worlds: Type) {R: Relation worlds} {J: Join worlds}: Type := { incr_exists: forall n: worlds, exists m, residue n m /\\ increasing m }.",
            "VernacInductive",
            "260c7bf745bbcb6c9603dc412ddd196d40f21270"
        ],
        [
            "Class UnitalSeparationAlgebra' (worlds: Type) {R: Relation worlds} {J: Join worlds}: Type := { incr'_exists: forall n: worlds, exists m, residue n m /\\ increasing' m }.",
            "VernacInductive",
            "438b0afff400ee1375ac8267efa3ba3340ccbf59"
        ],
        [
            "Lemma unital_is_residual {worlds: Type} {R: Relation worlds} {po_R: PreOrder Krelation} {J: Join worlds}: UnitalSeparationAlgebra worlds -> ResidualSeparationAlgebra worlds.",
            "VernacStartTheoremProof",
            "7ee2a37700f1a598979fc8176f071965d827d3f4"
        ],
        [
            "constructor; intros.",
            "VernacExtend",
            "6563c593bcf639ae667d436a08cab59e1ac2dcce"
        ],
        [
            "destruct (incr_exists n) as [m [RES _]].",
            "VernacExtend",
            "edfe0340f2f73a5cadb0e54e852691007555a30f"
        ],
        [
            "exists m; auto.",
            "VernacExtend",
            "fb13db96ce37a2f1e435b910c6153be94b428590"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incr_unital_iff_residual {worlds: Type} {R: Relation worlds} {po_R: PreOrder Krelation} {J: Join worlds}: IncreasingSeparationAlgebra worlds -> UnitalSeparationAlgebra worlds <-> ResidualSeparationAlgebra worlds.",
            "VernacStartTheoremProof",
            "68fb363b0e3370d540755b16bbc919f9de207826"
        ],
        [
            "intros; split.",
            "VernacExtend",
            "786909835bea92a2bb1ac0d0634a6eb379d5f275"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply unital_is_residual; auto.",
            "VernacExtend",
            "95e074f9822e887d865df8c50f847cf62b2ea5ba"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor; intros.",
            "VernacExtend",
            "6563c593bcf639ae667d436a08cab59e1ac2dcce"
        ],
        [
            "destruct (residue_exists n) as [m RES].",
            "VernacExtend",
            "4ccfacf412952b69a0856785b4e4ee33f4d06c6b"
        ],
        [
            "exists m; split; auto.",
            "VernacExtend",
            "8c05a9ec2d23bf5a00841f19e3f53ccdfb0c6874"
        ],
        [
            "apply all_increasing.",
            "VernacExtend",
            "9cfc92d3ddc6ae54ddcc1e75f8d0ef7c217bf1ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class IncreasingJoinSelfSeparationAlgebra (worlds: Type) {R: Relation worlds} {J: Join worlds}: Type := incr_join_self: forall m, increasing m -> join m m m.",
            "VernacInductive",
            "6ff4b2a395b4381cf85adfa0debb0a51f1ff3752"
        ],
        [
            "Class IncreasingSplitSmallerSeparationAlgebra (worlds: Type) {R: Relation worlds} {J: Join worlds}: Type := incr_split_smaller: forall m1 m2 m, increasing m -> join m1 m2 m -> m1 <= m.",
            "VernacInductive",
            "44b540aa7365dd415b7a8c8e19764dacd41567da"
        ],
        [
            "Class UpwardsClosedSeparationAlgebra (worlds: Type) {R: Relation worlds} {J: Join worlds}: Type := join_Korder_up: forall m n m1 m2: worlds, join m1 m2 m -> m <= n -> exists n1 n2, join n1 n2 n /\\ m1 <= n1 /\\ m2 <= n2.",
            "VernacInductive",
            "82871b7b82fa5372eae05483d4bd1e562c1cceba"
        ],
        [
            "Class DownwardsClosedSeparationAlgebra (worlds: Type) {R: Relation worlds} {J: Join worlds}: Type := join_Korder_down: forall m1 m2 m n1 n2: worlds, join m1 m2 m -> n1 <= m1 -> n2 <= m2 -> exists n, join n1 n2 n /\\ n <= m.",
            "VernacInductive",
            "ba87297c1b9bcab1d72d10faa06df4f481e8eb03"
        ],
        [
            "Lemma residue_extensible {worlds: Type} {R: Relation worlds} {po_R: PreOrder Krelation} {J: Join worlds} {dSA: DownwardsClosedSeparationAlgebra worlds}: forall e u, residue u e -> exists v, join e u v.",
            "VernacStartTheoremProof",
            "7f170c35bd70bcddb5b377313bb079dac5884b4a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [u' [? ?]].",
            "VernacExtend",
            "71db768f1f53e1449d7f14d08f5e3dd06394091c"
        ],
        [
            "pose proof join_Korder_down _ _ _ _ _ H ltac:(reflexivity) H0.",
            "VernacExtend",
            "a664198c43837ebf0e673e1b33304cd578256f34"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma residual_extensible {worlds: Type} {R: Relation worlds} {po_R: PreOrder Krelation} {J: Join worlds} {SA: SeparationAlgebra worlds} {dSA: DownwardsClosedSeparationAlgebra worlds} {resSA: ResidualSeparationAlgebra worlds}: forall u, exists e v, join u e v.",
            "VernacStartTheoremProof",
            "db882716b67211e91823b182df21288c7158ef93"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (residue_exists u) as [e ?].",
            "VernacExtend",
            "b4428a2226d20ab330b6d8d3d78c3750c59ae338"
        ],
        [
            "apply residue_extensible in H.",
            "VernacExtend",
            "1e001b7f7b9be0599a6940ad7250461cb0b927a7"
        ],
        [
            "destruct H as [v ?].",
            "VernacExtend",
            "c4d1ea27ffdddfe01d0bededa1a53632babc10c7"
        ],
        [
            "apply join_comm in H.",
            "VernacExtend",
            "6430d4c65b40e6875fb2470579dbfa1c0a109213"
        ],
        [
            "exists e, v; auto.",
            "VernacExtend",
            "2321455d116d6228a00925d9d48d4cc1bac1fb3f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "incr_incr'",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "disc_incr_unit",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros; split; intros; hnf; intros.",
                        "VernacExtend",
                        "a55f836e3920479c12f5591138fbf6ed66faf389"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply H0; auto.",
                        "VernacExtend",
                        "e167f871dfeec1cef76aaf201c54c081f29f730b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H1; subst; reflexivity.",
                        "VernacExtend",
                        "0406f6d96dd2f92b43fd957e95c59b61d8c8b57a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unital_is_residual",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "constructor; intros.",
                        "VernacExtend",
                        "6563c593bcf639ae667d436a08cab59e1ac2dcce"
                    ]
                },
                {
                    "command": [
                        "destruct (incr_exists n) as [m [RES _]].",
                        "VernacExtend",
                        "edfe0340f2f73a5cadb0e54e852691007555a30f"
                    ]
                },
                {
                    "command": [
                        "exists m; auto.",
                        "VernacExtend",
                        "fb13db96ce37a2f1e435b910c6153be94b428590"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incr_unital_iff_residual",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros; split.",
                        "VernacExtend",
                        "786909835bea92a2bb1ac0d0634a6eb379d5f275"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply unital_is_residual; auto.",
                        "VernacExtend",
                        "95e074f9822e887d865df8c50f847cf62b2ea5ba"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor; intros.",
                        "VernacExtend",
                        "6563c593bcf639ae667d436a08cab59e1ac2dcce"
                    ]
                },
                {
                    "command": [
                        "destruct (residue_exists n) as [m RES].",
                        "VernacExtend",
                        "4ccfacf412952b69a0856785b4e4ee33f4d06c6b"
                    ]
                },
                {
                    "command": [
                        "exists m; split; auto.",
                        "VernacExtend",
                        "8c05a9ec2d23bf5a00841f19e3f53ccdfb0c6874"
                    ]
                },
                {
                    "command": [
                        "apply all_increasing.",
                        "VernacExtend",
                        "9cfc92d3ddc6ae54ddcc1e75f8d0ef7c217bf1ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "residue_extensible",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [u' [? ?]].",
                        "VernacExtend",
                        "71db768f1f53e1449d7f14d08f5e3dd06394091c"
                    ]
                },
                {
                    "command": [
                        "pose proof join_Korder_down _ _ _ _ _ H ltac:(reflexivity) H0.",
                        "VernacExtend",
                        "a664198c43837ebf0e673e1b33304cd578256f34"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "residual_extensible",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (residue_exists u) as [e ?].",
                        "VernacExtend",
                        "b4428a2226d20ab330b6d8d3d78c3750c59ae338"
                    ]
                },
                {
                    "command": [
                        "apply residue_extensible in H.",
                        "VernacExtend",
                        "1e001b7f7b9be0599a6940ad7250461cb0b927a7"
                    ]
                },
                {
                    "command": [
                        "destruct H as [v ?].",
                        "VernacExtend",
                        "c4d1ea27ffdddfe01d0bededa1a53632babc10c7"
                    ]
                },
                {
                    "command": [
                        "apply join_comm in H.",
                        "VernacExtend",
                        "6430d4c65b40e6875fb2470579dbfa1c0a109213"
                    ]
                },
                {
                    "command": [
                        "exists e, v; auto.",
                        "VernacExtend",
                        "2321455d116d6228a00925d9d48d4cc1bac1fb3f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}