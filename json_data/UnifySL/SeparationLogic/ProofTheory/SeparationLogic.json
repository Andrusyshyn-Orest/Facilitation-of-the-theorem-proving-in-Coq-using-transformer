{
    "filename": "SeparationLogic/ProofTheory/SeparationLogic.v",
    "coq_project": "UnifySL",
    "vernac_cmds": [
        [
            "Require Import Logic.GeneralLogic.Base.",
            "VernacRequire",
            "070e14a34b6bbb533eb71ad7d5a289e752dd93e4"
        ],
        [
            "Require Import Logic.GeneralLogic.ProofTheory.BasicSequentCalculus.",
            "VernacRequire",
            "f2fbc894d63ff9f72127ac59dc8b190ee459f36d"
        ],
        [
            "Require Import Logic.MinimunLogic.Syntax.",
            "VernacRequire",
            "1fe3f501db6a35e0c279335c26da5e64e6b0b57b"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.Minimun.",
            "VernacRequire",
            "7dd3badfb0ea34d33454f0c461fceaac94fde835"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.ProofTheoryPatterns.",
            "VernacRequire",
            "edc2a664140878f2b6c142af63db54a1d63d6521"
        ],
        [
            "Require Import Logic.MinimunLogic.ProofTheory.RewriteClass.",
            "VernacRequire",
            "979c209afa85ced49ff62f7a9b2136c799474941"
        ],
        [
            "Require Import Logic.PropositionalLogic.Syntax.",
            "VernacRequire",
            "441acd893a589161321f487f85bee0d46b168a77"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Intuitionistic.",
            "VernacRequire",
            "918be0c1da11c6e84f2fca83e0414062df4a6509"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.DeMorgan.",
            "VernacRequire",
            "979253b4e51bd4c70a2820690cbe8456571aeec4"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.GodelDummett.",
            "VernacRequire",
            "6b75b7bbc32a6656be72ad029a1da066beffebf4"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.Classical.",
            "VernacRequire",
            "9db43e6b1f1b9e4d12563fea4db9562a4e6fcb7d"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.RewriteClass.",
            "VernacRequire",
            "e93eef38e75c736b6e3ce3c196435253280f259c"
        ],
        [
            "Require Import Logic.PropositionalLogic.ProofTheory.ProofTheoryPatterns.",
            "VernacRequire",
            "4963a955d2db3ace67637593d6850468f9af9e51"
        ],
        [
            "Require Import Logic.SeparationLogic.Syntax.",
            "VernacRequire",
            "06f045a49fc8f11e28ecdce8309ad8f23a886843"
        ],
        [
            "Local Open Scope logic_base.",
            "VernacOpenCloseScope",
            "5c8594c0dfdcdf011d6f504e216bb05a6ae4277a"
        ],
        [
            "Local Open Scope syntax.",
            "VernacOpenCloseScope",
            "b783c96de8f41f381acfa7d6f61aaee81388d5d7"
        ],
        [
            "Import PropositionalLanguageNotation.",
            "VernacImport",
            "69bfca1fca0e417f262dd3cc9ce6113dc17ba916"
        ],
        [
            "Import SeparationLogicNotation.",
            "VernacImport",
            "ef77ed65f39901a78bbb8e7daa1c2fee20e46d4e"
        ],
        [
            "Class SeparationLogic (L: Language) {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {sL: SeparationLanguage L} (Gamma: ProofTheory L) {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} := { sepcon_comm_impp: forall x y, |-- x * y --> y * x; sepcon_assoc: forall x y z, |-- x * (y * z) <--> (x * y) * z; wand_sepcon_adjoint: forall x y z, |-- x * y --> z <-> |-- x --> (y -* z) }.",
            "VernacInductive",
            "df4021a9932dc22e74822fd9752a9c55890679b3"
        ],
        [
            "Class EmpSeparationLogic (L: Language) {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {sL: SeparationLanguage L} {s'L: SeparationEmpLanguage L} (Gamma: ProofTheory L) {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} {sGamma: SeparationLogic L Gamma} := { sepcon_emp: forall x, |-- x * emp <--> x }.",
            "VernacInductive",
            "cc485e3d61ae277887f36c9b02558a830431df31"
        ],
        [
            "Class ExtSeparationLogic (L: Language) {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {sL: SeparationLanguage L} (Gamma: ProofTheory L) {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} {sGamma: SeparationLogic L Gamma} := { sepcon_ext: forall x, |-- x --> x * TT }.",
            "VernacInductive",
            "518c52438131640528acaf3f51224608a688fc21"
        ],
        [
            "Class NonsplitEmpSeparationLogic (L: Language) {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {sL: SeparationLanguage L} {s'L: SeparationEmpLanguage L} (Gamma: ProofTheory L) {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} {sGamma: SeparationLogic L Gamma} {eGamma: EmpSeparationLogic L Gamma} := { emp_sepcon_truep_elim: forall x, |-- x * TT && emp --> x }.",
            "VernacInductive",
            "2066d275a5d6b6f6a2eae535d23c32758c1b41d1"
        ],
        [
            "Class DupEmpSeparationLogic (L: Language) {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {sL: SeparationLanguage L} {s'L: SeparationEmpLanguage L} (Gamma: ProofTheory L) {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} {sGamma: SeparationLogic L Gamma} {eGamma: EmpSeparationLogic L Gamma} := { emp_dup: forall x, |-- x && emp --> x * x }.",
            "VernacInductive",
            "3fd77dcca1cd10a5728d64281d5121f2599d8a1d"
        ],
        [
            "Class MallocFreeSeparationLogic (L: Language) {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {sL: SeparationLanguage L} {s'L: SeparationEmpLanguage L} (Gamma: ProofTheory L) {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} {sGamma: SeparationLogic L Gamma} {eGamma: EmpSeparationLogic L Gamma} := { MallocFreeSeparationLogic_NonsplitEmpSeparationLogic :> NonsplitEmpSeparationLogic L Gamma; MallocFreeSeparationLogic_DupEmpSeparationLogic :> DupEmpSeparationLogic L Gamma }.",
            "VernacInductive",
            "7db1593b6e123c2b213ed0ad70ae6288b9330813"
        ],
        [
            "Class GarbageCollectSeparationLogic (L: Language) {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {sL: SeparationLanguage L} (Gamma: ProofTheory L) {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} {sGamma: SeparationLogic L Gamma} := { sepcon_elim1: forall x y, |-- x * y --> x }.",
            "VernacInductive",
            "1d86351dd6fa8f850d32e61a633121ec67e2e754"
        ],
        [
            "Section DerivableRules.",
            "VernacBeginSection",
            "c01a947062985995f1529e03ac879ce03b3719d5"
        ],
        [
            "Context {L: Language} {minL: MinimunLanguage L} {pL: PropositionalLanguage L} {sL: SeparationLanguage L} {Gamma: ProofTheory L} {minAX: MinimunAxiomatization L Gamma} {ipGamma: IntuitionisticPropositionalLogic L Gamma} {sGamma: SeparationLogic L Gamma}.",
            "VernacContext",
            "37b5c0973ebbf2a1ace3d2d491fa580b3db49296"
        ],
        [
            "Lemma wand_sepcon_Adj: Adjointness L Gamma sepcon wand.",
            "VernacStartTheoremProof",
            "493a199e6731272822c7886048d547215e78e099"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wand_sepcon_adjoint.",
            "VernacExtend",
            "fbf6785c920a452e456ac93d7196ce469016cc71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_orp_distr_l: forall (x y z: expr), |-- (x || y) * z <--> x * z || y * z.",
            "VernacStartTheoremProof",
            "9f19e3c8045302293e9d2f605e0e4f098af59624"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@prodp_orp_distr_l _ _ _ _ _ _ _ _ wand_sepcon_Adj).",
            "VernacExtend",
            "5b65e74258fe56a59acc7ff7f7562aab19163396"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma falsep_sepcon: forall (x: expr), |-- FF * x <--> FF.",
            "VernacStartTheoremProof",
            "6751d27699f1296b2ecb3f3f9ccfe2872cc58781"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@falsep_prodp _ _ _ _ _ _ _ _ wand_sepcon_Adj).",
            "VernacExtend",
            "ea72ff77e372e342bacf26859782e3181c080a2c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma provable_wand_sepcon_modus_ponens1: forall (x y: expr), |-- (x -* y) * x --> y.",
            "VernacStartTheoremProof",
            "efb2cc6ec9beb3a77aa0d1d8dafcc3aca121859d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@adjoint_modus_ponens _ _ _ _ _ _ wand_sepcon_Adj).",
            "VernacExtend",
            "1e9ef1b1aa988bbcac5d3ab4da4b5d2e7a6cc02c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wand_andp: forall x y z: expr, |-- x -* y && z <--> (x -* y) && (x -* z).",
            "VernacStartTheoremProof",
            "8c9c94a0de4ebcff218a2267649ce16246989807"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@funcp_andp_distr_r _ _ _ _ _ _ _ _ wand_sepcon_Adj); auto.",
            "VernacExtend",
            "9b4c8fd1718d13f46c564f422ebdaeb1051f1f1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_Comm: Commutativity L Gamma sepcon.",
            "VernacStartTheoremProof",
            "125b6295010099f62a0c625ac78d6e84adc2ee10"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply sepcon_comm_impp.",
            "VernacExtend",
            "148e0e03e2cfd86996d00ac982b4384b0106a13b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_comm: forall (x y: expr), |-- x * y <--> y * x.",
            "VernacStartTheoremProof",
            "feaca3ec6a56747f7903ef8a5a9a7d64058677c1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@prodp_comm _ _ _ _ _ _ _ sepcon_Comm).",
            "VernacExtend",
            "aa4e3498bddaaf9d79a478c2b4d957819104963b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_orp_distr_r: forall (x y z: expr), |-- x * (y || z) <--> x * y || x * z.",
            "VernacStartTheoremProof",
            "86c40c53e98ac0243696e93770be0ef97b359cea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@prodp_orp_distr_r _ _ _ _ _ _ _ _ wand_sepcon_Adj sepcon_Comm).",
            "VernacExtend",
            "f4f31fda5cc9d713dcd1dcff6fa740f2c6998474"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_falsep: forall (x: expr), |-- x * FF <--> FF.",
            "VernacStartTheoremProof",
            "b240d48a77073a57f372eb7b1f09c46b6d394ec4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@prodp_falsep _ _ _ _ _ _ _ _ wand_sepcon_Adj sepcon_Comm).",
            "VernacExtend",
            "e0377bb7161959d89cb0dac587f3620fa57f4fb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma provable_wand_sepcon_modus_ponens2: forall (x y: expr), |-- x * (x -* y) --> y.",
            "VernacStartTheoremProof",
            "f415899e2163e8c194260bea1457c6df5f96cfc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (sepcon_comm x (x -* y)).",
            "VernacExtend",
            "a33911169aaf9e47cd0b15299da995db1ca88045"
        ],
        [
            "apply provable_wand_sepcon_modus_ponens1.",
            "VernacExtend",
            "1c6c26004102a86d3ef8902f4a0de9f3dddc9790"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wand_mono: forall x1 x2 y1 y2, |-- x2 --> x1 -> |-- y1 --> y2 -> |-- (x1 -* y1) --> (x2 -* y2).",
            "VernacStartTheoremProof",
            "87494cefcd172cc226e267d6f6289a4efc61e4ae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@funcp_mono _ _ _ _ _ _ wand_sepcon_Adj sepcon_Comm); auto.",
            "VernacExtend",
            "c3fc883165847eba74dd550a133a011994307674"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orp_wand: forall x y z: expr, |-- (x || y) -* z <--> (x -* z) && (y -* z).",
            "VernacStartTheoremProof",
            "caec1d7d16171def14904198fc2d4ea4459c4871"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@orp_funcp _ _ _ _ _ _ _ _ wand_sepcon_Adj sepcon_Comm); auto.",
            "VernacExtend",
            "a6bb93658009c2c34c78f7f32c24baf9965dad50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_Mono: Monotonicity L Gamma sepcon.",
            "VernacStartTheoremProof",
            "843f2f017f61ff2629ee67f80e92cd8b19642a0e"
        ],
        [
            "apply @Adjoint2Mono with (funcp := wand).",
            "VernacExtend",
            "b9de07991618f46db828d845055360aa5f44f394"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply wand_sepcon_Adj.",
            "VernacExtend",
            "1c0b6a61ea95d9774b30134b8bb688ca054f6db4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply sepcon_Comm.",
            "VernacExtend",
            "bb7759892622411e8b012e25bc35392b937b5a5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_mono: forall x1 x2 y1 y2, |-- x1 --> x2 -> |-- y1 --> y2 -> |-- (x1 * y1) --> (x2 * y2).",
            "VernacStartTheoremProof",
            "4f11de1963ea3a9cb9b36c070a09a11943f4d62b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@prodp_mono _ _ _ _ sepcon_Mono); auto.",
            "VernacExtend",
            "63f0dea4ff1a271a3681558d87e6d1f4fb253818"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_Assoc: Associativity L Gamma sepcon.",
            "VernacStartTheoremProof",
            "b549bbfc37f79f745d73367127d586caa0b332b7"
        ],
        [
            "apply Build_Associativity'.",
            "VernacExtend",
            "7a35b965eb7611d9e579d969852a88cf49fa477f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sepcon_assoc.",
            "VernacExtend",
            "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
        ],
        [
            "apply provable_iffp_refl.",
            "VernacExtend",
            "8ddb88f6a631e104f73b8994c11dd69b29dbce26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_LU {s'L: SeparationEmpLanguage L} {eGamma: EmpSeparationLogic L Gamma}: LeftUnit L Gamma emp sepcon.",
            "VernacStartTheoremProof",
            "cd6234cc5c737883a23a39c71fd399303c1f08d4"
        ],
        [
            "apply Build_LeftUnit'.",
            "VernacExtend",
            "ec22a17a7d2616e17d7191264fdc6a2280365e81"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "apply sepcon_emp.",
            "VernacExtend",
            "a319337a6ce334955c3901ccd7dd8ae757f7c346"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_RU {s'L: SeparationEmpLanguage L} {eGamma: EmpSeparationLogic L Gamma}: RightUnit L Gamma emp sepcon.",
            "VernacStartTheoremProof",
            "9c34e85e36be024a646a2189d34703bf80502c6f"
        ],
        [
            "apply Build_RightUnit'.",
            "VernacExtend",
            "4826ca7d9f487f1451e427ff2e3015bee5205275"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply sepcon_emp.",
            "VernacExtend",
            "a319337a6ce334955c3901ccd7dd8ae757f7c346"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_elim2: forall {gcsGamma: GarbageCollectSeparationLogic L Gamma} (x y: expr), |-- x * y --> y.",
            "VernacStartTheoremProof",
            "22ca4272b89802488be6fd2fe3741f4f8b37cf0f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (sepcon_comm x y).",
            "VernacExtend",
            "bef4fa72c476f0c7b9ede237dd62832c8954a023"
        ],
        [
            "apply sepcon_elim1.",
            "VernacExtend",
            "66b459440dc2a701aa85357be8bdb8d5abb7696b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma emp_sepcon_elim1: forall {s'L: SeparationEmpLanguage L} {eGamma: EmpSeparationLogic L Gamma} {nssGamma: NonsplitEmpSeparationLogic L Gamma} x y, |-- x * y && emp --> x.",
            "VernacStartTheoremProof",
            "3fd08f60d8cf7380fc11423e21602fb529088cd6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (emp_sepcon_truep_elim x) at 2.",
            "VernacExtend",
            "44f741bbf4a11291289780debbbcd685d8eb2ccf"
        ],
        [
            "apply andp_proper_impp; [| apply provable_impp_refl].",
            "VernacExtend",
            "90d3875d5cced8d41f7949243a7c5a73e329d020"
        ],
        [
            "apply sepcon_mono; [apply provable_impp_refl |].",
            "VernacExtend",
            "53c9da00fd7f7fc019ee330c07a5baaadfc57fce"
        ],
        [
            "apply solve_impp_elim_left, provable_truep.",
            "VernacExtend",
            "648a568b0d904133891d3a70d8494aa733e36478"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma emp_sepcon_elim2: forall {s'L: SeparationEmpLanguage L} {eGamma: EmpSeparationLogic L Gamma} {nssGamma: NonsplitEmpSeparationLogic L Gamma} x y, |-- x * y && emp --> y.",
            "VernacStartTheoremProof",
            "c3c32a0bdd769d22f21d0939e425890b7e54142b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "apply emp_sepcon_elim1.",
            "VernacExtend",
            "931d83b72a2341ad34b678bc713c8ef641a76515"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DerivableRules.",
            "VernacEndSegment",
            "c6d65963b1a9125593a0a830daf2968e515ab648"
        ]
    ],
    "proofs": [
        {
            "name": "wand_sepcon_Adj",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wand_sepcon_adjoint.",
                        "VernacExtend",
                        "fbf6785c920a452e456ac93d7196ce469016cc71"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_orp_distr_l",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@prodp_orp_distr_l _ _ _ _ _ _ _ _ wand_sepcon_Adj).",
                        "VernacExtend",
                        "5b65e74258fe56a59acc7ff7f7562aab19163396"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "falsep_sepcon",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@falsep_prodp _ _ _ _ _ _ _ _ wand_sepcon_Adj).",
                        "VernacExtend",
                        "ea72ff77e372e342bacf26859782e3181c080a2c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_wand_sepcon_modus_ponens1",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@adjoint_modus_ponens _ _ _ _ _ _ wand_sepcon_Adj).",
                        "VernacExtend",
                        "1e9ef1b1aa988bbcac5d3ab4da4b5d2e7a6cc02c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_andp",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@funcp_andp_distr_r _ _ _ _ _ _ _ _ wand_sepcon_Adj); auto.",
                        "VernacExtend",
                        "9b4c8fd1718d13f46c564f422ebdaeb1051f1f1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_Comm",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_comm_impp.",
                        "VernacExtend",
                        "148e0e03e2cfd86996d00ac982b4384b0106a13b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_comm",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@prodp_comm _ _ _ _ _ _ _ sepcon_Comm).",
                        "VernacExtend",
                        "aa4e3498bddaaf9d79a478c2b4d957819104963b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_orp_distr_r",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@prodp_orp_distr_r _ _ _ _ _ _ _ _ wand_sepcon_Adj sepcon_Comm).",
                        "VernacExtend",
                        "f4f31fda5cc9d713dcd1dcff6fa740f2c6998474"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_falsep",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@prodp_falsep _ _ _ _ _ _ _ _ wand_sepcon_Adj sepcon_Comm).",
                        "VernacExtend",
                        "e0377bb7161959d89cb0dac587f3620fa57f4fb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "provable_wand_sepcon_modus_ponens2",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (sepcon_comm x (x -* y)).",
                        "VernacExtend",
                        "a33911169aaf9e47cd0b15299da995db1ca88045"
                    ]
                },
                {
                    "command": [
                        "apply provable_wand_sepcon_modus_ponens1.",
                        "VernacExtend",
                        "1c6c26004102a86d3ef8902f4a0de9f3dddc9790"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_mono",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@funcp_mono _ _ _ _ _ _ wand_sepcon_Adj sepcon_Comm); auto.",
                        "VernacExtend",
                        "c3fc883165847eba74dd550a133a011994307674"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orp_wand",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@orp_funcp _ _ _ _ _ _ _ _ wand_sepcon_Adj sepcon_Comm); auto.",
                        "VernacExtend",
                        "a6bb93658009c2c34c78f7f32c24baf9965dad50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_Mono",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "apply @Adjoint2Mono with (funcp := wand).",
                        "VernacExtend",
                        "b9de07991618f46db828d845055360aa5f44f394"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply wand_sepcon_Adj.",
                        "VernacExtend",
                        "1c0b6a61ea95d9774b30134b8bb688ca054f6db4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_Comm.",
                        "VernacExtend",
                        "bb7759892622411e8b012e25bc35392b937b5a5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_mono",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@prodp_mono _ _ _ _ sepcon_Mono); auto.",
                        "VernacExtend",
                        "63f0dea4ff1a271a3681558d87e6d1f4fb253818"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_Assoc",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "apply Build_Associativity'.",
                        "VernacExtend",
                        "7a35b965eb7611d9e579d969852a88cf49fa477f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
                    ]
                },
                {
                    "command": [
                        "apply provable_iffp_refl.",
                        "VernacExtend",
                        "8ddb88f6a631e104f73b8994c11dd69b29dbce26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_LU",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "apply Build_LeftUnit'.",
                        "VernacExtend",
                        "ec22a17a7d2616e17d7191264fdc6a2280365e81"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm.",
                        "VernacExtend",
                        "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_emp.",
                        "VernacExtend",
                        "a319337a6ce334955c3901ccd7dd8ae757f7c346"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_RU",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "apply Build_RightUnit'.",
                        "VernacExtend",
                        "4826ca7d9f487f1451e427ff2e3015bee5205275"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_emp.",
                        "VernacExtend",
                        "a319337a6ce334955c3901ccd7dd8ae757f7c346"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_elim2",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (sepcon_comm x y).",
                        "VernacExtend",
                        "bef4fa72c476f0c7b9ede237dd62832c8954a023"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_elim1.",
                        "VernacExtend",
                        "66b459440dc2a701aa85357be8bdb8d5abb7696b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "emp_sepcon_elim1",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (emp_sepcon_truep_elim x) at 2.",
                        "VernacExtend",
                        "44f741bbf4a11291289780debbbcd685d8eb2ccf"
                    ]
                },
                {
                    "command": [
                        "apply andp_proper_impp; [| apply provable_impp_refl].",
                        "VernacExtend",
                        "90d3875d5cced8d41f7949243a7c5a73e329d020"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_mono; [apply provable_impp_refl |].",
                        "VernacExtend",
                        "53c9da00fd7f7fc019ee330c07a5baaadfc57fce"
                    ]
                },
                {
                    "command": [
                        "apply solve_impp_elim_left, provable_truep.",
                        "VernacExtend",
                        "648a568b0d904133891d3a70d8494aa733e36478"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "emp_sepcon_elim2",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm.",
                        "VernacExtend",
                        "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
                    ]
                },
                {
                    "command": [
                        "apply emp_sepcon_elim1.",
                        "VernacExtend",
                        "931d83b72a2341ad34b678bc713c8ef641a76515"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}