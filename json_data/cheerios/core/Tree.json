{
    "filename": "core/Tree.v",
    "coq_project": "cheerios",
    "vernac_cmds": [
        [
            "Require Import Cheerios.Combinators.",
            "VernacRequire",
            "8d7a5a9e0290d564e579aaa640a11223035d06c1"
        ],
        [
            "Require Import Cheerios.Core.",
            "VernacRequire",
            "715d681ca5c06ee97c90e568394388e7f22ebf08"
        ],
        [
            "Require Import Cheerios.DeserializerMonad.",
            "VernacRequire",
            "046eafe41098b766b2b6966306025548fd2ae0d9"
        ],
        [
            "Require Import Cheerios.Tactics.",
            "VernacRequire",
            "b7703a5c0a2d60ba85e204d8c70370395f22f2a3"
        ],
        [
            "Require Import Cheerios.Types.",
            "VernacRequire",
            "46b2cecda127dda2359c33e53831c86a39bf3e81"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import FMapPositive.",
            "VernacRequire",
            "f7e459fa6c36e80816f0bc229aff41135ca2b404"
        ],
        [
            "Import ListNotations.",
            "VernacImport",
            "52647db2a3b752153a8cbd37039246f200bccdee"
        ],
        [
            "Import DeserializerNotations.",
            "VernacImport",
            "db3cf56ed051293d59d6bc7c090ab36d014c94e1"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Section tree.",
            "VernacBeginSection",
            "43307e46a9797393be7891fee36fd7e769fc917f"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Local Unset Elimination Schemes.",
            "VernacUnsetOption",
            "2fc2e4d2065c5e8b5b407b11414df6bebc03d0a8"
        ],
        [
            "Inductive tree : Type := | atom : A -> tree | node : list tree -> tree .",
            "VernacInductive",
            "a1265c067854638c094e7642040405501818f8f2"
        ],
        [
            "Section tree_rect.",
            "VernacBeginSection",
            "ddca01b2034d08c18f78327dfddd392446d79a47"
        ],
        [
            "Variable P : tree -> Type.",
            "VernacAssumption",
            "51b6fd7ce3f92ef5a26781b9d16804d3b15a3b70"
        ],
        [
            "Variable P_list : list tree -> Type.",
            "VernacAssumption",
            "2c417c2cb8310561f73bb419c41ed65c726a207e"
        ],
        [
            "Hypothesis P_nil : P_list [].",
            "VernacAssumption",
            "5ac773cfd3de45f334c64def13370d6c023f2bdd"
        ],
        [
            "Hypothesis P_cons : forall t l, P t -> P_list l -> P_list (t :: l).",
            "VernacAssumption",
            "ed4c306b496509f1b8b3855297cef008df7ed2d7"
        ],
        [
            "Hypothesis P_atom : forall a, P (atom a).",
            "VernacAssumption",
            "b3137f894bf649e6f1a95f571a4bdd79e1b462d6"
        ],
        [
            "Hypothesis P_node : forall l, P_list l -> P (node l).",
            "VernacAssumption",
            "fcd2cc09d60e648c108196005048e7ad6ab547c5"
        ],
        [
            "Fixpoint tree_rect (t : tree) : P t := let fix go_list (l : list tree) : P_list l := match l with | [] => P_nil | t :: l => P_cons (tree_rect t) (go_list l) end in match t with | atom a => P_atom a | node l => P_node (go_list l) end.",
            "VernacFixpoint",
            "8e03a6f2c59f81de1f3ed1f95a83a73a686fe9d0"
        ],
        [
            "End tree_rect.",
            "VernacEndSegment",
            "ee86088a29079d5b28c402206056fd8208c9d0b9"
        ],
        [
            "Section tree_ind.",
            "VernacBeginSection",
            "bbda37f918b424d775b0942200cb18b5648504b0"
        ],
        [
            "Variable P : tree -> Prop.",
            "VernacAssumption",
            "5ce605bedd82d7883db4b8bb8b208f4c5208e0bb"
        ],
        [
            "Hypothesis P_atom : forall a, P (atom a).",
            "VernacAssumption",
            "b3137f894bf649e6f1a95f571a4bdd79e1b462d6"
        ],
        [
            "Hypothesis P_node : forall l, List.Forall P l -> P (node l).",
            "VernacAssumption",
            "ede36d0eda9a162941c66174e4c9440fd83dff4e"
        ],
        [
            "Definition tree_ind (t : tree) : P t := tree_rect P (List.Forall P) (List.Forall_nil _) (fun t l Pt Pl => List.Forall_cons _ Pt Pl) P_atom P_node t.",
            "VernacDefinition",
            "d86ea9a7d2a212e099968d132bf1592eb9af3e6c"
        ],
        [
            "End tree_ind.",
            "VernacEndSegment",
            "3f5e1eeda6199aad0a25029a2ff6d2a26df54941"
        ],
        [
            "End tree.",
            "VernacEndSegment",
            "7d0bc3e465872c687b39b2c8ce879baa1bcb4800"
        ],
        [
            "Fixpoint rev_rec {A} (l : list A) (acc : list A) := match l with | [] => acc | a :: l => rev_rec l (a :: acc) end.",
            "VernacFixpoint",
            "5fce271d747af1791cde0835ab6f81fb0fb38c92"
        ],
        [
            "Lemma rev_rec_spec : forall {A : Type} (l : list A) acc, rev_rec l acc = rev l ++ acc.",
            "VernacStartTheoremProof",
            "c22480a32c4eab65a62e809c5ae92c9ba48d8859"
        ],
        [
            "intros A l.",
            "VernacExtend",
            "5b3fb285feb0dd469b8347a7631376a3875a08ff"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- app_assoc.",
            "VernacExtend",
            "58419932d54cdd1541230f0515f44a2e52bfe908"
        ],
        [
            "now rewrite IHl.",
            "VernacExtend",
            "7467d02c87aa8e869ce52469e192a7cb32440c08"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rev' {A} (l : list A) := rev_rec l [].",
            "VernacDefinition",
            "eb69855e5429413103f2da57a86ed34b6f13193f"
        ],
        [
            "Theorem rev'_spec : forall {A : Type} (l : list A), rev' l = rev l.",
            "VernacStartTheoremProof",
            "e209918aa80bdc36e952ae58ae4c72605b3baf01"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold rev'.",
            "VernacExtend",
            "56f729bfa35acc12bc35025bae9c3588603642e9"
        ],
        [
            "now rewrite rev_rec_spec, app_nil_r.",
            "VernacExtend",
            "81f76616392f4b3de0424978c7aead500d06e892"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint map_rec {A B} (f : A -> B) (l : list A) (acc : list B) := match l with | [] => rev' acc | a :: l => map_rec f l (f a :: acc) end.",
            "VernacFixpoint",
            "0cdec3cca8a4688adc10fbfcd93c506a54bd60d4"
        ],
        [
            "Lemma map_rec_spec : forall {A B} (f : A -> B) (l : list A) (acc : list B), map_rec f l acc = rev acc ++ List.map f l.",
            "VernacStartTheoremProof",
            "c913de1275ebcab91acdd749c2d11542039209c4"
        ],
        [
            "intros A B f l.",
            "VernacExtend",
            "99c5692e6a0b01879113c3620a7fbc5012d95baa"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold rev'.",
            "VernacExtend",
            "56f729bfa35acc12bc35025bae9c3588603642e9"
        ],
        [
            "now rewrite rev_rec_spec.",
            "VernacExtend",
            "75bb0f974e99553c0c3dceb6be2744c80aef6b5f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHl.",
            "VernacExtend",
            "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- app_assoc.",
            "VernacExtend",
            "58419932d54cdd1541230f0515f44a2e52bfe908"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition list_map' {A B} (f : A -> B) (l : list A) := map_rec f l [].",
            "VernacDefinition",
            "51163d73cee27d3f62527e6f70403f9fd3baecba"
        ],
        [
            "Theorem map'_spec : forall {A B} (f : A -> B) (l : list A), List.map f l = list_map' f l.",
            "VernacStartTheoremProof",
            "335d54d2ea5ed2d1998eeedd34a8cf5386fbc1af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold list_map'.",
            "VernacExtend",
            "899e990638b21bac685cfbbb0fe081ff90dbd908"
        ],
        [
            "now rewrite map_rec_spec.",
            "VernacExtend",
            "7a303a99a7c8abaeaa51c75e816d25bbf6b90c35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint map {A B} (f : A -> B) (t : tree A) : tree B := match t with | atom a => atom (f a) | node l => node (List.map (map f) l) end.",
            "VernacFixpoint",
            "a8a54bed54e08eb3156b4ca1b96d72a0d80f7706"
        ],
        [
            "Definition shape {A} (t : tree A) : tree unit := map (fun _ => tt) t.",
            "VernacDefinition",
            "14961a96fd2f040be704353a173fc318d3fac754"
        ],
        [
            "Fixpoint tree_map' {A B} (f : A -> B) (t : tree A) : tree B := let fix tree_map_loop {A B} (f : A -> B) (l : list (tree A)) acc := match l with | [] => rev_rec acc [] | a :: l => tree_map_loop f l (map f a :: acc) end in match t with | atom a => atom (f a) | node l => node (tree_map_loop f l []) end.",
            "VernacFixpoint",
            "902253b32097eaca3c8e3a14a8699248b263f318"
        ],
        [
            "Definition tree_map_loop := fix tree_map_loop {A B} (f : A -> B) (l : list (tree A)) acc := match l with | [] => rev_rec acc [] | a :: l => tree_map_loop f l (map f a :: acc) end.",
            "VernacDefinition",
            "086875c7298a62725365902d154eeba9cc67b94e"
        ],
        [
            "Lemma tree_map_loop_spec : forall {A B} (f : A -> B) l acc, tree_map_loop f l acc = rev acc ++ List.map (map f) l.",
            "VernacStartTheoremProof",
            "a077d2d2d1f4ba243f192be03bf9bdab1f467cee"
        ],
        [
            "intros A B f l.",
            "VernacExtend",
            "99c5692e6a0b01879113c3620a7fbc5012d95baa"
        ],
        [
            "induction l; intros.",
            "VernacExtend",
            "f3f6b28c6822ad560a06f008ea0a5aa487d0e8e3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite rev_rec_spec.",
            "VernacExtend",
            "75bb0f974e99553c0c3dceb6be2744c80aef6b5f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHl.",
            "VernacExtend",
            "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite <- app_assoc.",
            "VernacExtend",
            "cba4b726d640f473641d7d5e62261f21ab76a238"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem tree_map'_spec : forall {A B} (f : A -> B) (t : tree A), tree_map' f t = map f t.",
            "VernacStartTheoremProof",
            "5c13708f987ec672ea44183496dd0f01d59c2ce8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct t.",
            "VernacExtend",
            "03d3fc39431171b40684d8dff6748881af772fc7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite tree_map_loop_spec.",
            "VernacExtend",
            "5b9637447c8114e349687b00483db8ca5c9e42c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint fill' {A B} (x : tree A) (bs : list B) : option (tree B * list B) := let fix fill'_list (l : list (tree A)) (bs : list B) : option (list (tree B) * list B) := match l with | [] => Some ([], bs) | x :: l => match fill' x bs with None => None | Some (x, bs) => match fill'_list l bs with None => None | Some (l, bs) => Some (x :: l, bs) end end end in match x with | atom _ => match bs with | [] => None | b :: bs => Some (atom b, bs) end | node l => match fill'_list l bs with None => None | Some (l, bs) => Some (node l, bs) end end.",
            "VernacFixpoint",
            "f43754cf7c29ea9842ea3328cb61f5642d528dec"
        ],
        [
            "Definition fill'_list {A B} := fix fill'_list (l : list (tree A)) (bs : list B) : option (list (tree B) * list B) := match l with | [] => Some ([], bs) | x :: l => match fill' x bs with None => None | Some (x, bs) => match fill'_list l bs with None => None | Some (l, bs) => Some (x :: l, bs) end end end.",
            "VernacDefinition",
            "d897cf03a1dac75c3bc7430f1de89414249033e2"
        ],
        [
            "Definition fill {A B} (x : tree A) (bs : list B) : option (tree B) := match fill' x bs with None => None | Some (t, _) => Some t end.",
            "VernacDefinition",
            "9666d33690fdde38d5507e44caee3f1227efebbd"
        ],
        [
            "Fixpoint preorder {A} (x : tree A) : list A := let fix preorder_list (l : list (tree A)) : list A := match l with | [] => [] | x :: l => preorder x ++ preorder_list l end in match x with | atom a => [a] | node l => preorder_list l end.",
            "VernacFixpoint",
            "de400ae9fb5def43d049ef55577b5a6deba6eeab"
        ],
        [
            "Definition preorder_list {A} := fix preorder_list (l : list (tree A)) : list A := match l with | [] => [] | x :: l => preorder x ++ preorder_list l end.",
            "VernacDefinition",
            "5003e6b1cc4e44f06d3d87b8be507003922c07a5"
        ],
        [
            "Fixpoint preorder' {A} (x : tree A) : list A := let fix preorder_list (l : list (tree A)) acc : list A := match l with | [] => acc | x :: l => preorder_list l (acc ++ preorder x) end in match x with | atom a => [a] | node l => preorder_list l [] end.",
            "VernacFixpoint",
            "891ecad124da3709cb5bcfa0ba0927c45d28fe75"
        ],
        [
            "Lemma fill'_preorder : forall A B (f : B -> A) t (bs : list B), fill' (map f t) (preorder t ++ bs) = Some (t, bs).",
            "VernacStartTheoremProof",
            "831fe7851988cd3ad8f3599f822db9830226a5a5"
        ],
        [
            "intros A B f.",
            "VernacExtend",
            "89eeda0bc3b4a1e797030413aeccb1808d9447cd"
        ],
        [
            "induction t using tree_rect with (P_list := fun l => forall bs, fill'_list (List.map (map f) l) (preorder_list l ++ bs) = Some (l, bs)); intros.",
            "VernacExtend",
            "399183b2a3da8cb9ee8250bdca877ab636e98033"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite app_ass.",
            "VernacExtend",
            "1e8737a155ba47802e4df29a56a47a094af2082d"
        ],
        [
            "rewrite IHt.",
            "VernacExtend",
            "d7c6a10da1c3b93e6cd1b076977ec06f52b9b586"
        ],
        [
            "rewrite IHt0.",
            "VernacExtend",
            "6c4e824f96296512a78316e523b833cc199248e5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (@preorder_list B).",
            "VernacExtend",
            "7ca2bf9d2ba7ca5431a7f3e97938b71281c8dcfc"
        ],
        [
            "fold (@fill'_list A B).",
            "VernacExtend",
            "e0eaca1d70aa977e481955a98a529fe1a70409db"
        ],
        [
            "now rewrite IHt.",
            "VernacExtend",
            "573f1c40624d31af332af08d7338dabc86a2a972"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fill_preorder : forall A B (f : A -> B) t, fill (map f t) (preorder t) = Some t.",
            "VernacStartTheoremProof",
            "84736ced224921a21b50048dd4dfa953a5438d2c"
        ],
        [
            "unfold fill.",
            "VernacExtend",
            "05d534e1f5f8de66425566af0d5641758f78c64b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- app_nil_r with (l := preorder t).",
            "VernacExtend",
            "3a15058bc8b7260a0f849f11a14ea9e49bd34d48"
        ],
        [
            "now rewrite fill'_preorder.",
            "VernacExtend",
            "4ce77de16bce8f7976b5e50f8d307b461b00bebf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section serializer.",
            "VernacBeginSection",
            "16ee10c975d46612647360d4ec63dec230d4abb2"
        ],
        [
            "Variables A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable sA :Serializer A.",
            "VernacAssumption",
            "1b37d14522fda709d4a6cc8bf9a6cdfd2ce4702a"
        ],
        [
            "Fixpoint serialize_tree_shape (t : tree A) : IOStreamWriter.t := let fix serialize_list_tree_shape (l : list (tree A)) : IOStreamWriter.t := match l with | [] => IOStreamWriter.empty | x :: xs => IOStreamWriter.append (fun _ => serialize_tree_shape x) (fun _ => serialize_list_tree_shape xs) end in match t with | atom _ => serialize x00 | node l => IOStreamWriter.append (fun _ => serialize x01) (fun _ => (IOStreamWriter.append (fun _ => serialize_list_tree_shape l) (fun _ => serialize x02))) end.",
            "VernacFixpoint",
            "292013744a96cc0a3624ac1513c9eb7b8f2e3000"
        ],
        [
            "Definition serialize_list_tree_shape := fix serialize_list_tree_shape (l : list (tree A)) : IOStreamWriter.t := match l with | [] => IOStreamWriter.empty | x :: xs => IOStreamWriter.append (fun _ => serialize_tree_shape x) (fun _ => serialize_list_tree_shape xs) end.",
            "VernacDefinition",
            "b6253a19c59c924969fa33feea9848003b0fc8ae"
        ],
        [
            "Definition deserialize_tree_shape_step (b : byte) (s : list (list (tree unit))) : fold_state (list (list (tree unit))) (tree unit) := match b with | x00 => match s with | [] => Done (atom tt) | ts :: s => More ((atom tt :: ts) :: s) end | x01 => More ([] :: s) | x02 => match s with | [] => Error | ts :: s => let t := node (rev' ts) in match s with | [] => Done t | ts :: acc => More ((t :: ts) :: acc) end end | _ => Error end.",
            "VernacDefinition",
            "17f9be90797f446a4b9fc54ab1b4a0ad1313bc17"
        ],
        [
            "Lemma shape_aux : forall t acc bytes, ByteListReader.unwrap (ByteListReader.fold deserialize_tree_shape_step acc) (IOStreamWriter.unwrap (serialize_tree_shape t) ++ bytes) = match acc with | [] => Some (shape t, bytes) | j :: js => ByteListReader.unwrap (ByteListReader.fold deserialize_tree_shape_step ((shape t :: j) :: js)) bytes end.",
            "VernacStartTheoremProof",
            "3b593530e10ff654614d72df7b3c2a96e70cb263"
        ],
        [
            "induction t using tree_rect with (P_list := fun l => forall ts acc bytes, ByteListReader.unwrap (ByteListReader.fold deserialize_tree_shape_step (ts :: acc)) (IOStreamWriter.unwrap (serialize_list_tree_shape l) ++ bytes) = ByteListReader.unwrap (ByteListReader.fold deserialize_tree_shape_step ((rev (List.map shape l) ++ ts) :: acc)) bytes); intros; try (unfold serialize_list_tree_shape; rewrite IOStreamWriter.append_unwrap, app_ass, IHt, IHt0; simpl; now rewrite app_ass).",
            "VernacExtend",
            "5bd4d4cc3e50fca10b43e41ccf4cc5656d74ef31"
        ],
        [
            "(cheerios_crush; simpl; cheerios_crush; simpl).",
            "VernacExtend",
            "2889e9f73b2caf12dbc38e32b1582c2ee07ca08f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct acc; repeat (cheerios_crush; simpl).",
            "VernacExtend",
            "5e2fbfad1823cee073ae036d1fa2e81f92e40607"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct acc; simpl; rewrite IOStreamWriter.append_unwrap, ByteListReader.fold_unwrap, IOStreamWriter.append_unwrap, IOStreamWriter.putByte_unwrap; simpl; fold serialize_list_tree_shape; rewrite app_ass, IHt, ByteListReader.fold_unwrap, IOStreamWriter.putByte_unwrap; simpl; rewrite app_nil_r, rev'_spec, rev_involutive; reflexivity.",
            "VernacExtend",
            "01d563c98cd199553e8e9953973ba276923976ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition deserialize_tree_shape : ByteListReader.t (tree unit) := ByteListReader.fold deserialize_tree_shape_step [].",
            "VernacDefinition",
            "863c74974b3fd4bd09540111c6467811d0e2581f"
        ],
        [
            "Lemma serialize_deserialize_shape_id : forall t bytes, ByteListReader.unwrap deserialize_tree_shape (IOStreamWriter.unwrap (serialize_tree_shape t) ++ bytes) = Some (shape t, bytes).",
            "VernacStartTheoremProof",
            "3b14b5bb4113d8fcc1b8bc5375605f1bb2d6da21"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold deserialize_tree_shape.",
            "VernacExtend",
            "b77310716739f253d73e7198dbe0632fa01f0f5a"
        ],
        [
            "now rewrite shape_aux.",
            "VernacExtend",
            "a37c86a86e1da378b3f6282011668f4daacf870b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint serialize_tree_elements (t : tree A) : IOStreamWriter.t := let fix serialize_tree_elements_list (l : list (tree A)) : IOStreamWriter.t := match l with | [] => IOStreamWriter.empty | t :: l' => IOStreamWriter.append (fun _ => serialize_tree_elements t) (fun _ => serialize_tree_elements_list l') end in match t with | atom a => serialize a | node l => serialize_tree_elements_list l end.",
            "VernacFixpoint",
            "78fe2e35053d3b8b88dc33fb699794c2cd1755ed"
        ],
        [
            "Definition serialize_tree_elements_list := fix serialize_tree_elements_list (l : list (tree A)) : IOStreamWriter.t := match l with | [] => IOStreamWriter.empty | t :: l' => IOStreamWriter.append (fun _ => serialize_tree_elements t) (fun _ => serialize_tree_elements_list l') end.",
            "VernacDefinition",
            "4185be1b3a8c4b1d9c58eac1fe51f429711e6a60"
        ],
        [
            "Fixpoint deserialize_tree_elements (t : tree unit) : ByteListReader.t (tree A) := let fix deserialize_tree_elements_list (l : list (tree unit)) := match l with | [] => ByteListReader.ret [] | t :: l' => cons <$> deserialize_tree_elements t <*> deserialize_tree_elements_list l' end in match t with | atom tt => @atom _ <$> deserialize | node l => @node _ <$> deserialize_tree_elements_list l end.",
            "VernacFixpoint",
            "327013d98745c04f572fcee66923d3fddb6c92a1"
        ],
        [
            "Definition deserialize_tree_elements_list := fix deserialize_tree_elements_list (l : list (tree unit)) := match l with | [] => ByteListReader.ret [] | t :: l' => cons <$> deserialize_tree_elements t <*> deserialize_tree_elements_list l' end.",
            "VernacDefinition",
            "43232d7b8365704ffe83ae463ebf66c41457a30a"
        ],
        [
            "Lemma serialize_deserialize_tree_elements_id : forall t bytes, ByteListReader.unwrap (deserialize_tree_elements (shape t)) (IOStreamWriter.unwrap (serialize_tree_elements t) ++ bytes) = Some (t, bytes).",
            "VernacStartTheoremProof",
            "8304acb5793c6aacfdf99fbb5c43d3fe0e4858f3"
        ],
        [
            "induction t using tree_rect with (P_list := fun l => forall bytes, ByteListReader.unwrap (deserialize_tree_elements_list (List.map shape l)) (IOStreamWriter.unwrap (serialize_tree_elements_list l) ++ bytes) = Some (l, bytes)); intros; cbn [shape map List.map serialize_tree_shape deserialize_tree_shape serialize_tree_elements deserialize_tree_elements serialize_tree_elements_list deserialize_tree_elements_list].",
            "VernacExtend",
            "13b9ac470e155b1c3d462115f90603989c06645a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now cheerios_crush.",
            "VernacExtend",
            "5c51c5caed165379f1611821acb72f07fde7ede3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "cheerios_crush.",
            "VernacExtend",
            "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
        ],
        [
            "rewrite IHt.",
            "VernacExtend",
            "d7c6a10da1c3b93e6cd1b076977ec06f52b9b586"
        ],
        [
            "cheerios_crush.",
            "VernacExtend",
            "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
        ],
        [
            "rewrite IHt0.",
            "VernacExtend",
            "6c4e824f96296512a78316e523b833cc199248e5"
        ],
        [
            "cheerios_crush.",
            "VernacExtend",
            "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now cheerios_crush.",
            "VernacExtend",
            "5c51c5caed165379f1611821acb72f07fde7ede3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "fold deserialize_tree_elements_list.",
            "VernacExtend",
            "29c3455114d14ee0307b533917e80f7262c1271f"
        ],
        [
            "fold serialize_tree_elements_list.",
            "VernacExtend",
            "67ba207f4d5a51299dddd37ae01039f36b0441f8"
        ],
        [
            "cheerios_crush.",
            "VernacExtend",
            "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
        ],
        [
            "now rewrite IHt.",
            "VernacExtend",
            "573f1c40624d31af332af08d7338dabc86a2a972"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition tree_serialize (t : tree A) : IOStreamWriter.t := IOStreamWriter.append (fun _ => serialize_tree_shape t) (fun _ => serialize_tree_elements t).",
            "VernacDefinition",
            "4d84af3ea616aa1dbb88a098eb721e93f606993e"
        ],
        [
            "Definition tree_deserialize : ByteListReader.t (tree A) := shape <- deserialize_tree_shape ;; deserialize_tree_elements shape.",
            "VernacDefinition",
            "2949abf331138423a58de288c0a6e696683e8085"
        ],
        [
            "Lemma tree_serialize_deserialize_id : serialize_deserialize_id_spec tree_serialize tree_deserialize.",
            "VernacStartTheoremProof",
            "9f0fde6a2677ce4fb881d33b276dc8dd2470ec09"
        ],
        [
            "unfold tree_serialize, tree_deserialize.",
            "VernacExtend",
            "5a141885219f51fef61cebbe7fdb556ac7372eca"
        ],
        [
            "cheerios_crush.",
            "VernacExtend",
            "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
        ],
        [
            "rewrite serialize_deserialize_shape_id.",
            "VernacExtend",
            "75580737e879e4661d90455fe1d8a4b4a7cfccdf"
        ],
        [
            "now rewrite serialize_deserialize_tree_elements_id.",
            "VernacExtend",
            "2c7790d95918116bbde3b79848d4b3588b64b3a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance tree_Serializer : Serializer (tree A) := {| serialize := tree_serialize; deserialize := tree_deserialize; serialize_deserialize_id := tree_serialize_deserialize_id |}.",
            "VernacInstance",
            "bb183a146af83cdccd1979ea0756c4cf16a5295a"
        ],
        [
            "End serializer.",
            "VernacEndSegment",
            "7bbd2631c3a906634a167b2866b7d1a1f7e2ad09"
        ],
        [
            "Module sexp.",
            "VernacDefineModule",
            "c031191389badd0bcd8151049a053044cecb12c5"
        ],
        [
            "Import String.",
            "VernacImport",
            "ab06a84ba92a619ceea6d71b5e5638414d80c1ee"
        ],
        [
            "Definition sexp := tree string.",
            "VernacDefinition",
            "4f388158d922c9321db28ca03f40d72ae7f821f5"
        ],
        [
            "Module examples.",
            "VernacDefineModule",
            "fe74282cbde6d2bce9ad4b5a66f85031163b973c"
        ],
        [
            "Definition id : sexp := node [atom \"define\"; node [atom \"id\"; atom \"x\"]; atom \"x\"]%string.",
            "VernacDefinition",
            "1cbf0c0a353a980ff9040e54d0df6cef5ca6d1bb"
        ],
        [
            "Lemma foo: ByteListReader.unwrap deserialize (IOStreamWriter.unwrap (serialize id)) = Some (id, []).",
            "VernacStartTheoremProof",
            "02e4b4d4d798b7cdc7331c6a307fc1b1ef8c0002"
        ],
        [
            "now rewrite serialize_deserialize_id_nil.",
            "VernacExtend",
            "b57047b64cf69c33a48a3e24d5143a0dce4a7646"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Y : sexp := node [atom \"define\"; node [atom \"Y\"; atom \"f\"]; node [node [atom \"lambda\"; node [atom \"x\"]; node [atom \"f\"; node [atom \"x\"; atom \"x\"]]]; node [atom \"lambda\"; node [atom \"x\"]; node [atom \"f\"; node [atom \"x\"; atom \"x\"]]]]] %string.",
            "VernacDefinition",
            "cde1a5060a87fe81048f9190b8712ec8f02f9a57"
        ],
        [
            "Lemma foo' : ByteListReader.unwrap deserialize (IOStreamWriter.unwrap (serialize Y)) = Some (Y, []).",
            "VernacStartTheoremProof",
            "cc9760adac9909fb076889178b18c835fd0d072a"
        ],
        [
            "now rewrite serialize_deserialize_id_nil.",
            "VernacExtend",
            "b57047b64cf69c33a48a3e24d5143a0dce4a7646"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End examples.",
            "VernacEndSegment",
            "fa3da53b5cf2f7b7709fc46e41afc5d7d3707ea9"
        ],
        [
            "End sexp.",
            "VernacEndSegment",
            "900548b4e3a985c2aa2c67c1fb310936b0964f8f"
        ],
        [
            "Module JSON.",
            "VernacDefineModule",
            "1e4955f8bc134fa76544160867e130379e95f9eb"
        ],
        [
            "Module json.",
            "VernacDefineModule",
            "232e3feb9825ac55d5ad6052a5114632df7b20da"
        ],
        [
            "Inductive t := | Null : t | Bool : bool -> t | Num : nat -> t | String : String.string -> t | Arr : list t -> t | Obj : list (String.string * t) -> t.",
            "VernacInductive",
            "27edd28bdb4c37a24e4452a1363f8cb10c0fa785"
        ],
        [
            "Section json_rect.",
            "VernacBeginSection",
            "a83f29a815abf68d173b27e5ec9d80bead9e54b2"
        ],
        [
            "Variable P : t -> Type.",
            "VernacAssumption",
            "970338f6e3f1b1b183b844641ecaed6ed18c1a08"
        ],
        [
            "Variable P_list : list t -> Type.",
            "VernacAssumption",
            "4c106bfcfb4df64c4e89084f902d34f34551b3b0"
        ],
        [
            "Variable P_list' : list (String.string * t) -> Type.",
            "VernacAssumption",
            "211aeda7d55f8073fe60dcfc976b3b41b126f330"
        ],
        [
            "Hypothesis P_nil : P_list [].",
            "VernacAssumption",
            "5ac773cfd3de45f334c64def13370d6c023f2bdd"
        ],
        [
            "Hypothesis P_cons : forall j l, P j -> P_list l -> P_list (j :: l).",
            "VernacAssumption",
            "bf82cc945dbb37f9db7538f8c10786c184b9aa86"
        ],
        [
            "Hypothesis P_nil' : P_list' [].",
            "VernacAssumption",
            "efd8388bf01357c56e96378d8f697665f472afc9"
        ],
        [
            "Hypothesis P_cons' : forall s j l, P j -> P_list' l -> P_list' ((s, j) :: l).",
            "VernacAssumption",
            "3b6e8c7bc610d3870cc535b3a45072f6226b7ff1"
        ],
        [
            "Hypothesis P_null : P Null.",
            "VernacAssumption",
            "bd48d1319daca2a7d64da78630cc297cda8f8d25"
        ],
        [
            "Hypothesis P_bool : forall b, P (Bool b).",
            "VernacAssumption",
            "b47a780b969466095f8121f3739817f9dbacf717"
        ],
        [
            "Hypothesis P_num : forall n, P (Num n).",
            "VernacAssumption",
            "fe231976fb91e1155be6cdaf171fae39c0e440d6"
        ],
        [
            "Hypothesis P_string : forall s, P (String s).",
            "VernacAssumption",
            "debe20b4b2d3524e63071c2b83ef92c8724e819d"
        ],
        [
            "Hypothesis P_arr : forall l, P_list l -> P (Arr l).",
            "VernacAssumption",
            "880a590cb1735d1975ff91d6a4fbfe615fbbf293"
        ],
        [
            "Hypothesis P_obj : forall l, P_list' l -> P (Obj l).",
            "VernacAssumption",
            "af52374aaeca7dd6852c18157d9ae398831dea39"
        ],
        [
            "Fixpoint json_rect (j : t) : P j := let fix go_list (l : list t) : P_list l := match l with | [] => P_nil | j :: l => P_cons (json_rect j) (go_list l) end in let fix go_list' (l : list (String.string * t)) : P_list' l := match l with | [] => P_nil' | (s, j) :: l => P_cons' s (json_rect j) (go_list' l) end in match j with | Null => P_null | Bool b => P_bool b | Num n => P_num n | String s => P_string s | Arr l => P_arr (go_list l) | Obj l => P_obj (go_list' l) end.",
            "VernacFixpoint",
            "5c8d3a91fafb007dfd5749872fb9f1a1c71706a7"
        ],
        [
            "End json_rect.",
            "VernacEndSegment",
            "7d0f4c6046b661b5f87e288dcc36a1715fbb0d6c"
        ],
        [
            "Section json_ind.",
            "VernacBeginSection",
            "ecfe9ffd917f5bda829b32f9bcd982ec0dba62f4"
        ],
        [
            "Variable P : t -> Prop.",
            "VernacAssumption",
            "83bd7ae17076cfc06e3462c2b4dc59828d2e64c0"
        ],
        [
            "Hypothesis P_null : P Null.",
            "VernacAssumption",
            "bd48d1319daca2a7d64da78630cc297cda8f8d25"
        ],
        [
            "Hypothesis P_bool : forall b, P (Bool b).",
            "VernacAssumption",
            "b47a780b969466095f8121f3739817f9dbacf717"
        ],
        [
            "Hypothesis P_num : forall n, P (Num n).",
            "VernacAssumption",
            "fe231976fb91e1155be6cdaf171fae39c0e440d6"
        ],
        [
            "Hypothesis P_string : forall s, P (String s).",
            "VernacAssumption",
            "debe20b4b2d3524e63071c2b83ef92c8724e819d"
        ],
        [
            "Hypothesis P_arr : forall l, List.Forall P l -> P (Arr l).",
            "VernacAssumption",
            "9528b38935b61835a80b1d5bc34afccf9b1b71c9"
        ],
        [
            "Hypothesis P_obj : forall l, List.Forall (fun s => P (snd s)) l -> P (Obj l).",
            "VernacAssumption",
            "81f38d6bc451a02e633105f3bbfe724705ee76ee"
        ],
        [
            "Definition json_ind (j : t) : P j := json_rect P (List.Forall P) (List.Forall (fun s => P (snd s))) (List.Forall_nil _) (fun j l Pt Pl => List.Forall_cons j Pt Pl) (List.Forall_nil _) (fun s j l Pj Pt => List.Forall_cons (s, j) Pj Pt) P_null P_bool P_num P_string P_arr P_obj j.",
            "VernacDefinition",
            "822e3f7b3ffba656415d3f6cf3f30c49cab47e05"
        ],
        [
            "End json_ind.",
            "VernacEndSegment",
            "56f77b6b952b1e2e031f338e583bf1d66ed851b1"
        ],
        [
            "End json.",
            "VernacEndSegment",
            "9c12b0998979e7784fde283e5b40353c45f7e23e"
        ],
        [
            "Module tag.",
            "VernacDefineModule",
            "9667906d0f4ccea1c20aa3768e0b09ab7cf5d55d"
        ],
        [
            "Inductive t := | Null : t | Bool : bool -> t | Num : nat -> t | Str : String.string -> t | Arr : t | Obj : t.",
            "VernacInductive",
            "70f79948d06089f329a225dc971ade9712693ffc"
        ],
        [
            "Definition tag_serialize (t : t) : IOStreamWriter.t := match t with | Null => serialize x00 | Bool b => IOStreamWriter.append (fun _ => serialize x01) (fun _ => serialize b) | Num n => IOStreamWriter.append (fun _ => serialize x02) (fun _ => serialize n) | Str s => IOStreamWriter.append (fun _ => serialize x03) (fun _ => serialize s) | Arr => serialize x04 | Obj => serialize x05 end.",
            "VernacDefinition",
            "8fb17f6f4cb7627c497fe1e415a8a91005d95b4f"
        ],
        [
            "Definition tag_deserialize : ByteListReader.t t := tag <- deserialize ;; match tag with | x00 => ByteListReader.ret Null | x01 => Bool <$> deserialize | x02 => Num <$> deserialize | x03 => Str <$> deserialize | x04 => ByteListReader.ret Arr | x05 => ByteListReader.ret Obj | _ => ByteListReader.error end.",
            "VernacDefinition",
            "46af23dd410230e54689ae80f6bc6f406d79b4b6"
        ],
        [
            "Lemma tag_serialize_deserialize_id : serialize_deserialize_id_spec tag_serialize tag_deserialize.",
            "VernacStartTheoremProof",
            "8d5cb97df8d86c5279551a1e274d6356b9062832"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct a; unfold tag_serialize, tag_deserialize; cheerios_crush; unfold app; cheerios_crush.",
            "VernacExtend",
            "0ef359a431fa17b2646372e618047848087270cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance tag_Serializer : Serializer t.",
            "VernacInstance",
            "8c18a121a2a840b177858d0c13b85bb3568a0fa0"
        ],
        [
            "exact {| serialize := tag_serialize; deserialize := tag_deserialize; serialize_deserialize_id := tag_serialize_deserialize_id |}.",
            "VernacExtend",
            "e20c2c292a33d9730207528c0584fd7b62dc8da2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint json_treeify (j : json.t) : tree tag.t := let fix obj_list_to_tree_list (l : list (String.string * json.t)) := match l with | [] => [] | (s, j) :: l => atom (tag.Str s) :: json_treeify j :: obj_list_to_tree_list l end in match j with | json.Null => atom tag.Null | json.Bool b => atom (tag.Bool b) | json.Num n => atom (tag.Num n) | json.String s => atom (tag.Str s) | json.Arr l => node (atom tag.Arr :: List.map json_treeify l) | json.Obj l => node (atom tag.Obj :: obj_list_to_tree_list l) end.",
            "VernacFixpoint",
            "e7addaf7fbe95a5bae813699f0a73fdcb9d1563c"
        ],
        [
            "Definition obj_list_to_tree_list := fix obj_list_to_tree_list (l : list (String.string * json.t)) : list (tree tag.t) := match l with | [] => [] | (s, j) :: l => atom (tag.Str s) :: json_treeify j :: obj_list_to_tree_list l end.",
            "VernacDefinition",
            "0a4d0ca74d8eabb4b41470f752118804bf6b6441"
        ],
        [
            "Fixpoint json_untreeify (t : tree tag.t) : option json.t := let fix untreeify_list (l : list (tree tag.t)) : option (list json.t) := match l with | [] => Some [] | x :: l => match json_untreeify x with | None => None | Some y => match untreeify_list l with | None => None | Some l => Some (y :: l) end end end in let fix untreeify_obj_list (l : list (tree tag.t)) : option (list (String.string * json.t)) := match l with | [] => Some [] | atom (tag.Str s) :: t :: l => match json_untreeify t with | None => None | Some j => match untreeify_obj_list l with | None => None | Some l => Some ((s, j) :: l) end end | _ => None end in match t with | atom (tag.Num n) => Some (json.Num n) | atom (tag.Bool b) => Some (json.Bool b) | atom (tag.Str s) => Some (json.String s) | node (atom tag.Arr :: l) => match untreeify_list l with | None => None | Some l => Some (json.Arr l) end | atom (tag.Null) => Some (json.Null) | node (atom tag.Obj :: l) => match untreeify_obj_list l with | None => None | Some l => Some (json.Obj l) end | _ => None end.",
            "VernacFixpoint",
            "5088edc0ad0a6eb11d51e982b3fa4d2a0ca178e8"
        ],
        [
            "Definition untreeify_obj_list := fix untreeify_obj_list (l : list (tree tag.t)) : option (list (String.string * json.t)) := match l with | [] => Some [] | atom (tag.Str s) :: t :: l => match json_untreeify t with | None => None | Some j => match untreeify_obj_list l with | None => None | Some l => Some ((s, j) :: l) end end | _ => None end.",
            "VernacDefinition",
            "4428a7fd9edcbd4291aa3d6af38b942788b237b3"
        ],
        [
            "Definition untreeify_list := fix untreeify_list l : option (list json.t) := match l with | [] => Some [] | x :: l => match json_untreeify x with | None => None | Some y => match untreeify_list l with | None => None | Some l => Some (y :: l) end end end.",
            "VernacDefinition",
            "7d1b6b139d247a374ab37adc256c19aa5a36b95e"
        ],
        [
            "Definition treeify_untreeify_aux (j : json.t) := json_untreeify (json_treeify j) = Some j.",
            "VernacDefinition",
            "37917c3c9af8c3ea7eff5ba36cdd34fe1344a0db"
        ],
        [
            "Lemma treeify_untreeify_id : forall j : json.t, treeify_untreeify_aux j.",
            "VernacStartTheoremProof",
            "119b96af8d757341a279d1744532474361dede7e"
        ],
        [
            "induction j using json.json_rect with (P_list := fun l => untreeify_list (List.map json_treeify l) = Some l) (P_list' := fun l => untreeify_obj_list (obj_list_to_tree_list l) = Some l); unfold treeify_untreeify_aux; auto; simpl; try (fold untreeify_list); try (fold untreeify_obj_list); try (fold obj_list_to_tree_list); try (rewrite IHj); try (rewrite IHj0); auto.",
            "VernacExtend",
            "8d867c91525e1f9315952c7e450506eec236faa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition json_serialize (j : json.t) : IOStreamWriter.t := serialize (json_treeify j).",
            "VernacDefinition",
            "7fb46542dc46cb6b5e06af0f81f4282669034279"
        ],
        [
            "Definition json_deserialize : ByteListReader.t json.t := j <- deserialize;; match json_untreeify j with | Some j => ByteListReader.ret j | None => ByteListReader.error end.",
            "VernacDefinition",
            "88cae99b634036cc250113d17b301d887cb03396"
        ],
        [
            "Lemma json_serialize_deserialize_id : serialize_deserialize_id_spec json_serialize json_deserialize.",
            "VernacStartTheoremProof",
            "0b7c3e115f841f860892c3f1b16730511d8d4eca"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold json_serialize, json_deserialize.",
            "VernacExtend",
            "50a2eea589de82c1011bc934c673f217bd8f64b6"
        ],
        [
            "cheerios_crush.",
            "VernacExtend",
            "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
        ],
        [
            "rewrite treeify_untreeify_id.",
            "VernacExtend",
            "d99866325ef737e4f54078997e80bd9c25d6fea9"
        ],
        [
            "cheerios_crush.",
            "VernacExtend",
            "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance json_Serializer : Serializer json.t.",
            "VernacInstance",
            "0ec9f46dfd155681ee2fa32eeb8f68fe164c9187"
        ],
        [
            "exact {| serialize := json_serialize; deserialize := json_deserialize; serialize_deserialize_id := json_serialize_deserialize_id |}.",
            "VernacExtend",
            "1b919bb68321ee25ba0e70a01648bd1b6a782c82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End tag.",
            "VernacEndSegment",
            "2e364d2ba880677a5a108b3b67cca1b4db2030f2"
        ],
        [
            "Definition string_eqb s s' := if (String.string_dec s s') then true else false.",
            "VernacDefinition",
            "38ae4ec9bb40ecceeff42fd26cc31cb611f20b63"
        ],
        [
            "Lemma string_eqb_true : forall s s', string_eqb s s' = true -> s = s'.",
            "VernacStartTheoremProof",
            "03276f31a225ed5d7cae463d6774bb5b414b241c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold string_eqb in H.",
            "VernacExtend",
            "a3373a6614b8f9ebdb982a41fb10e0886daf4d78"
        ],
        [
            "destruct (String.string_dec s s').",
            "VernacExtend",
            "88c52c7a79b3cada56ef4d04fdd9f8670ac5f038"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma string_eqb_refl : forall s, string_eqb s s = true.",
            "VernacStartTheoremProof",
            "0f6c1824bf9ebb41c62c0df144119392b5d18a0e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold string_eqb.",
            "VernacExtend",
            "fc2a978d57f20fe8daca6801e1e984f0e3cb3cce"
        ],
        [
            "destruct (String.string_dec s s); congruence.",
            "VernacExtend",
            "5447f1703af0e1b65baeffe94204a2cd5eb7c034"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint json_eqb (j j' : json.t) : bool := let fix loop_arr (l l': list json.t) : bool := match (l, l') with | ([], []) => true | (j :: l, j' :: l') => andb (json_eqb j j') (loop_arr l l') | (_, _) => false end in let fix loop_obj (l l' : list (String.string * json.t)) : bool := match (l, l') with | ([], []) => true | ((s, j) :: l, (s', j') :: l') => andb (string_eqb s s') (andb (json_eqb j j') (loop_obj l l')) | (_, _) => false end in match (j, j') with | (json.Null, json.Null) => true | (json.Bool b, json.Bool b') => Bool.eqb b b' | (json.Num n, json.Num n') => Nat.eqb n n' | (json.String s, json.String s') => string_eqb s s' | (json.Arr l, json.Arr l') => loop_arr l l' | (json.Obj l, json.Obj l') => loop_obj l l' | _ => false end.",
            "VernacFixpoint",
            "288b6aab893baf41d6c634d56b72482b39ef9308"
        ],
        [
            "Definition loop_arr := fix loop_arr (l l': list json.t) : bool := match (l, l') with | ([], []) => true | (j :: l, j' :: l') => andb (json_eqb j j') (loop_arr l l') | (_, _) => false end.",
            "VernacDefinition",
            "c4ec8aa7cf36bb38237a4fd108a2533afedbc637"
        ],
        [
            "Definition loop_obj := fix loop_obj (l l' : list (String.string * json.t)) : bool := match (l, l') with | ([], []) => true | ((s, j) :: l, (s', j') :: l') => andb (string_eqb s s') (andb (json_eqb j j') (loop_obj l l')) | (_, _) => false end.",
            "VernacDefinition",
            "fa47612c3ee92fa88deee366e12038cc79ebb19d"
        ],
        [
            "Lemma json_eqb_eq : forall j j', json_eqb j j' = true -> j = j'.",
            "VernacStartTheoremProof",
            "b16d4882a68995d5c6bf635f21f67b11be34f085"
        ],
        [
            "induction j using json.json_rect with (P_list := fun l => forall l', loop_arr l l' = true -> l = l') (P_list' := fun l => forall l', loop_obj l l' = true -> l = l'); unfold json_eqb.",
            "VernacExtend",
            "862d16fbe1bf60db2a2c11f8330df2d93534551b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct l'.",
            "VernacExtend",
            "d3a2cf1f5af31737cd1e570fd3939d7f963563b3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct l'.",
            "VernacExtend",
            "d3a2cf1f5af31737cd1e570fd3939d7f963563b3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "apply Bool.andb_true_iff in H.",
            "VernacExtend",
            "96ec432e176970b201fe145d41dcefe2227c68bf"
        ],
        [
            "assert (j = t).",
            "VernacExtend",
            "269a07294df22eb4744f0d70b9c85d78c48aee5a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IHj.",
            "VernacExtend",
            "7d899a4df818b523664b617886a9c89fec174ee2"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert (l = l').",
            "VernacExtend",
            "4b38006d20c86d00a552aceadfd84a2670d525a5"
        ],
        [
            "--",
            "VernacBullet",
            "ba168e40f4056f7e624b4823d483fd7320648256"
        ],
        [
            "apply IHj0.",
            "VernacExtend",
            "27123e829b0a9471a542591bc13cb5184860e1a0"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "--",
            "VernacBullet",
            "ba168e40f4056f7e624b4823d483fd7320648256"
        ],
        [
            "now rewrite H0, H1.",
            "VernacExtend",
            "83bfca649481b71646f4745c1a88a33d75d4e0f0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct l'.",
            "VernacExtend",
            "d3a2cf1f5af31737cd1e570fd3939d7f963563b3"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct l'; simpl in H.",
            "VernacExtend",
            "e9067bf81352143965453aafe880ee334b35d4aa"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "apply Bool.andb_true_iff in H.",
            "VernacExtend",
            "96ec432e176970b201fe145d41dcefe2227c68bf"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "apply Bool.andb_true_iff in H0.",
            "VernacExtend",
            "ef6cb7640b0aff07e690b1b08bfd92ac21150514"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "assert (s = s0).",
            "VernacExtend",
            "4082470f27d93f73ef68618b1491ccc64c7be1cc"
        ],
        [
            "now apply string_eqb_true in H.",
            "VernacExtend",
            "62626e880dfe7243d602241e4f3f981806e46f19"
        ],
        [
            "assert (j = t).",
            "VernacExtend",
            "269a07294df22eb4744f0d70b9c85d78c48aee5a"
        ],
        [
            "apply (IHj t H0).",
            "VernacExtend",
            "db5774ae1f27cf792d20a85788702e9844c9c89f"
        ],
        [
            "assert (l = l').",
            "VernacExtend",
            "4b38006d20c86d00a552aceadfd84a2670d525a5"
        ],
        [
            "apply (IHj0 _ H1).",
            "VernacExtend",
            "3f2b808b7f7fa67885cdd33bf343511840814970"
        ],
        [
            "now rewrite H2, H3, H4.",
            "VernacExtend",
            "a0a539283ea0d4408e47b52360d1d9f35e25ded5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct j'; try congruence.",
            "VernacExtend",
            "ee130c7d3846fbe95a7cd72426d5c7f982a1e40d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct j'; try congruence.",
            "VernacExtend",
            "ee130c7d3846fbe95a7cd72426d5c7f982a1e40d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Bool.eqb_prop in H.",
            "VernacExtend",
            "559f35d72523a4e3888262c3f9d968f355c62807"
        ],
        [
            "now rewrite H.",
            "VernacExtend",
            "4b48f672d72bdaa3470accf224603b6461e14cf4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct j'; try congruence.",
            "VernacExtend",
            "ee130c7d3846fbe95a7cd72426d5c7f982a1e40d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply EqNat.beq_nat_true in H.",
            "VernacExtend",
            "9be77faf195eaea2d62443ab391e03fbdbb877b1"
        ],
        [
            "now rewrite H.",
            "VernacExtend",
            "4b48f672d72bdaa3470accf224603b6461e14cf4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct j'; try congruence.",
            "VernacExtend",
            "ee130c7d3846fbe95a7cd72426d5c7f982a1e40d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply string_eqb_true in H.",
            "VernacExtend",
            "8a7baa33448e226cf9afa91499dd533b3123ea09"
        ],
        [
            "now rewrite H.",
            "VernacExtend",
            "4b48f672d72bdaa3470accf224603b6461e14cf4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "fold json_eqb.",
            "VernacExtend",
            "543df943933c768d9456a1303ae962564338ce57"
        ],
        [
            "fold loop_arr.",
            "VernacExtend",
            "62c6369dde44f5b53ac370abbf3fecfe4a142faa"
        ],
        [
            "destruct j'; try congruence.",
            "VernacExtend",
            "ee130c7d3846fbe95a7cd72426d5c7f982a1e40d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply IHj in H.",
            "VernacExtend",
            "7be7e212eed154139b2021d228758b98fbbca950"
        ],
        [
            "now rewrite H.",
            "VernacExtend",
            "4b48f672d72bdaa3470accf224603b6461e14cf4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "fold json_eqb.",
            "VernacExtend",
            "543df943933c768d9456a1303ae962564338ce57"
        ],
        [
            "fold loop_obj.",
            "VernacExtend",
            "33ba6309cc10263cc633fa2f32b82900c71f3c62"
        ],
        [
            "destruct j'; try congruence.",
            "VernacExtend",
            "ee130c7d3846fbe95a7cd72426d5c7f982a1e40d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply IHj in H.",
            "VernacExtend",
            "7be7e212eed154139b2021d228758b98fbbca950"
        ],
        [
            "now rewrite H.",
            "VernacExtend",
            "4b48f672d72bdaa3470accf224603b6461e14cf4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma json_eq_eqb : forall j j', j = j' -> json_eqb j j' = true.",
            "VernacStartTheoremProof",
            "0a73238cde9e8d882204477f1a7101dfdff26089"
        ],
        [
            "induction j using json.json_rect with (P_list := fun l => loop_arr l l = true) (P_list' := fun l => loop_obj l l = true).",
            "VernacExtend",
            "307f892106835ee4fc196ae1065e204e1987196e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "specialize IHj with j.",
            "VernacExtend",
            "05afa5753b65014ecfd5ce3486fa933ec90b5f8f"
        ],
        [
            "rewrite IHj0.",
            "VernacExtend",
            "e4d16f8f9d8c9858c7cf6961ea364c575b24066e"
        ],
        [
            "rewrite IHj; reflexivity.",
            "VernacExtend",
            "7ff9cb5cccecaa5931f791309de390f6361adaad"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite string_eqb_refl, IHj0.",
            "VernacExtend",
            "22591f644031f67d0fa2745342e0b09450a9493c"
        ],
        [
            "rewrite IHj; auto.",
            "VernacExtend",
            "c5e8f4a230faab10be78e97fa04256d3eee22654"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite <- H.",
            "VernacExtend",
            "263ddf4271621bf4b397740764d4ad46d50c2bb1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Bool.eqb_reflx.",
            "VernacExtend",
            "4366c298c9b4571ffbf0f1c733533a507492a4b1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply EqNat.beq_nat_refl.",
            "VernacExtend",
            "293455cdf3bd7838ac1f9d2e9a160c94ee5bf6f2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply string_eqb_refl.",
            "VernacExtend",
            "2884fc4e8ba95384131e2baa9c6b193c73d230dc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma json_eq_dec : forall j j' : json.t, {j = j'} + {j <> j'}.",
            "VernacStartTheoremProof",
            "ebe82c235c8adc5ff008069a942536e37d24f245"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (json_eqb j j') eqn:H.",
            "VernacExtend",
            "fde5a4189cd2b670d78af8e697db43c89eafcba4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "now apply json_eqb_eq.",
            "VernacExtend",
            "d0695b51288216f83d44779850ee484c5476e799"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite json_eq_eqb in H; congruence.",
            "VernacExtend",
            "80571791f8650dfa6be5a22796627bda747f3452"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End JSON.",
            "VernacEndSegment",
            "8da4196a8dae94d1b2ba612a017c663eb891330a"
        ],
        [
            "Section Ptree.",
            "VernacBeginSection",
            "ab4e6c65162bb350982f2516849b381a996b1851"
        ],
        [
            "Context {A : Type} {sA : Serializer A}.",
            "VernacContext",
            "fff8cff2fb9be2562034568530f4f4f4d94ded0c"
        ],
        [
            "Fixpoint tree_of_ptree (t : PositiveMap.t A) : tree (option A) := match t with | PositiveMap.Leaf _ => atom None | PositiveMap.Node t1 v t2 => node [tree_of_ptree t1; atom v; tree_of_ptree t2] end.",
            "VernacFixpoint",
            "8a06eb18df5b57aca1c39f6b2a9068a4a427ff47"
        ],
        [
            "Fixpoint ptree_of_tree (t : tree (option A)) : option (PositiveMap.t A) := match t with | atom None => Some (PositiveMap.Leaf A) | node [t1; atom v; t2] => match ptree_of_tree t1, ptree_of_tree t2 with | Some pt1, Some pt2 => Some (PositiveMap.Node pt1 v pt2) | _, _ => None end | _ => None end.",
            "VernacFixpoint",
            "7c296bdb0f4ef04e3a98e198e71a186fd51e34d3"
        ],
        [
            "Lemma tree_of_ptree_ptree_of_tree : forall t, ptree_of_tree (tree_of_ptree t) = Some t.",
            "VernacStartTheoremProof",
            "d07ab9d663a42322079d385a01082c5282a063e5"
        ],
        [
            "induction t using PositiveMap.tree_ind; auto.",
            "VernacExtend",
            "7abf24612aacd68459e0ee5cc9837a5878bdbb4e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHt1.",
            "VernacExtend",
            "b9477a6e6c54eb73a9f7db18368a2401bb611dde"
        ],
        [
            "rewrite IHt2.",
            "VernacExtend",
            "395cf4850f32caf7a475943fa626d4cc6efe15bc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ptree_serialize (t : PositiveMap.t A) : IOStreamWriter.t := serialize (tree_of_ptree t).",
            "VernacDefinition",
            "2a30307a9490359424571c32637c3eebcafcbf08"
        ],
        [
            "Definition ptree_deserialize : ByteListReader.t (PositiveMap.t A) := t <- deserialize;; match ptree_of_tree t with | Some pt => ByteListReader.ret pt | None => ByteListReader.error end.",
            "VernacDefinition",
            "adb878b795c5dda8e2da5bc3503c682228f5c52d"
        ],
        [
            "Lemma ptree_serialize_deserialize_id : serialize_deserialize_id_spec ptree_serialize ptree_deserialize.",
            "VernacStartTheoremProof",
            "5e83e062ec40ad660b6d025f50ba36939a415d19"
        ],
        [
            "unfold ptree_serialize, ptree_deserialize.",
            "VernacExtend",
            "0fdca34e19e74a3a0fd978c53a61616a43aa4778"
        ],
        [
            "cheerios_crush.",
            "VernacExtend",
            "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
        ],
        [
            "rewrite tree_of_ptree_ptree_of_tree.",
            "VernacExtend",
            "4683aa6c51aa680a462da90415ba6f233d9be180"
        ],
        [
            "cheerios_crush.",
            "VernacExtend",
            "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance ptree_Serializer : Serializer (PositiveMap.t A) := {| serialize := ptree_serialize; deserialize := ptree_deserialize; serialize_deserialize_id := ptree_serialize_deserialize_id |}.",
            "VernacInstance",
            "b6243c9ed1ea84728ee1277c438d5ed7a0303baf"
        ],
        [
            "End Ptree.",
            "VernacEndSegment",
            "cf434d2b99031aa4cda4a4a15110c2bb303b1942"
        ]
    ],
    "proofs": [
        {
            "name": "rev_rec_spec",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros A l.",
                        "VernacExtend",
                        "5b3fb285feb0dd469b8347a7631376a3875a08ff"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_assoc.",
                        "VernacExtend",
                        "58419932d54cdd1541230f0515f44a2e52bfe908"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHl.",
                        "VernacExtend",
                        "7467d02c87aa8e869ce52469e192a7cb32440c08"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rev'_spec",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold rev'.",
                        "VernacExtend",
                        "56f729bfa35acc12bc35025bae9c3588603642e9"
                    ]
                },
                {
                    "command": [
                        "now rewrite rev_rec_spec, app_nil_r.",
                        "VernacExtend",
                        "81f76616392f4b3de0424978c7aead500d06e892"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_rec_spec",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros A B f l.",
                        "VernacExtend",
                        "99c5692e6a0b01879113c3620a7fbc5012d95baa"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold rev'.",
                        "VernacExtend",
                        "56f729bfa35acc12bc35025bae9c3588603642e9"
                    ]
                },
                {
                    "command": [
                        "now rewrite rev_rec_spec.",
                        "VernacExtend",
                        "75bb0f974e99553c0c3dceb6be2744c80aef6b5f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl.",
                        "VernacExtend",
                        "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_assoc.",
                        "VernacExtend",
                        "58419932d54cdd1541230f0515f44a2e52bfe908"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map'_spec",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold list_map'.",
                        "VernacExtend",
                        "899e990638b21bac685cfbbb0fe081ff90dbd908"
                    ]
                },
                {
                    "command": [
                        "now rewrite map_rec_spec.",
                        "VernacExtend",
                        "7a303a99a7c8abaeaa51c75e816d25bbf6b90c35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tree_map_loop_spec",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros A B f l.",
                        "VernacExtend",
                        "99c5692e6a0b01879113c3620a7fbc5012d95baa"
                    ]
                },
                {
                    "command": [
                        "induction l; intros.",
                        "VernacExtend",
                        "f3f6b28c6822ad560a06f008ea0a5aa487d0e8e3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite rev_rec_spec.",
                        "VernacExtend",
                        "75bb0f974e99553c0c3dceb6be2744c80aef6b5f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl.",
                        "VernacExtend",
                        "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- app_assoc.",
                        "VernacExtend",
                        "cba4b726d640f473641d7d5e62261f21ab76a238"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tree_map'_spec",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct t.",
                        "VernacExtend",
                        "03d3fc39431171b40684d8dff6748881af772fc7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite tree_map_loop_spec.",
                        "VernacExtend",
                        "5b9637447c8114e349687b00483db8ca5c9e42c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fill'_preorder",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "intros A B f.",
                        "VernacExtend",
                        "89eeda0bc3b4a1e797030413aeccb1808d9447cd"
                    ]
                },
                {
                    "command": [
                        "induction t using tree_rect with (P_list := fun l => forall bs, fill'_list (List.map (map f) l) (preorder_list l ++ bs) = Some (l, bs)); intros.",
                        "VernacExtend",
                        "399183b2a3da8cb9ee8250bdca877ab636e98033"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass.",
                        "VernacExtend",
                        "1e8737a155ba47802e4df29a56a47a094af2082d"
                    ]
                },
                {
                    "command": [
                        "rewrite IHt.",
                        "VernacExtend",
                        "d7c6a10da1c3b93e6cd1b076977ec06f52b9b586"
                    ]
                },
                {
                    "command": [
                        "rewrite IHt0.",
                        "VernacExtend",
                        "6c4e824f96296512a78316e523b833cc199248e5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold (@preorder_list B).",
                        "VernacExtend",
                        "7ca2bf9d2ba7ca5431a7f3e97938b71281c8dcfc"
                    ]
                },
                {
                    "command": [
                        "fold (@fill'_list A B).",
                        "VernacExtend",
                        "e0eaca1d70aa977e481955a98a529fe1a70409db"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHt.",
                        "VernacExtend",
                        "573f1c40624d31af332af08d7338dabc86a2a972"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fill_preorder",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "unfold fill.",
                        "VernacExtend",
                        "05d534e1f5f8de66425566af0d5641758f78c64b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_nil_r with (l := preorder t).",
                        "VernacExtend",
                        "3a15058bc8b7260a0f849f11a14ea9e49bd34d48"
                    ]
                },
                {
                    "command": [
                        "now rewrite fill'_preorder.",
                        "VernacExtend",
                        "4ce77de16bce8f7976b5e50f8d307b461b00bebf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shape_aux",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "induction t using tree_rect with (P_list := fun l => forall ts acc bytes, ByteListReader.unwrap (ByteListReader.fold deserialize_tree_shape_step (ts :: acc)) (IOStreamWriter.unwrap (serialize_list_tree_shape l) ++ bytes) = ByteListReader.unwrap (ByteListReader.fold deserialize_tree_shape_step ((rev (List.map shape l) ++ ts) :: acc)) bytes); intros; try (unfold serialize_list_tree_shape; rewrite IOStreamWriter.append_unwrap, app_ass, IHt, IHt0; simpl; now rewrite app_ass).",
                        "VernacExtend",
                        "5bd4d4cc3e50fca10b43e41ccf4cc5656d74ef31"
                    ]
                },
                {
                    "command": [
                        "(cheerios_crush; simpl; cheerios_crush; simpl).",
                        "VernacExtend",
                        "2889e9f73b2caf12dbc38e32b1582c2ee07ca08f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct acc; repeat (cheerios_crush; simpl).",
                        "VernacExtend",
                        "5e2fbfad1823cee073ae036d1fa2e81f92e40607"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct acc; simpl; rewrite IOStreamWriter.append_unwrap, ByteListReader.fold_unwrap, IOStreamWriter.append_unwrap, IOStreamWriter.putByte_unwrap; simpl; fold serialize_list_tree_shape; rewrite app_ass, IHt, ByteListReader.fold_unwrap, IOStreamWriter.putByte_unwrap; simpl; rewrite app_nil_r, rev'_spec, rev_involutive; reflexivity.",
                        "VernacExtend",
                        "01d563c98cd199553e8e9953973ba276923976ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "serialize_deserialize_shape_id",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold deserialize_tree_shape.",
                        "VernacExtend",
                        "b77310716739f253d73e7198dbe0632fa01f0f5a"
                    ]
                },
                {
                    "command": [
                        "now rewrite shape_aux.",
                        "VernacExtend",
                        "a37c86a86e1da378b3f6282011668f4daacf870b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "serialize_deserialize_tree_elements_id",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "induction t using tree_rect with (P_list := fun l => forall bytes, ByteListReader.unwrap (deserialize_tree_elements_list (List.map shape l)) (IOStreamWriter.unwrap (serialize_tree_elements_list l) ++ bytes) = Some (l, bytes)); intros; cbn [shape map List.map serialize_tree_shape deserialize_tree_shape serialize_tree_elements deserialize_tree_elements serialize_tree_elements_list deserialize_tree_elements_list].",
                        "VernacExtend",
                        "13b9ac470e155b1c3d462115f90603989c06645a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now cheerios_crush.",
                        "VernacExtend",
                        "5c51c5caed165379f1611821acb72f07fde7ede3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "cheerios_crush.",
                        "VernacExtend",
                        "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
                    ]
                },
                {
                    "command": [
                        "rewrite IHt.",
                        "VernacExtend",
                        "d7c6a10da1c3b93e6cd1b076977ec06f52b9b586"
                    ]
                },
                {
                    "command": [
                        "cheerios_crush.",
                        "VernacExtend",
                        "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
                    ]
                },
                {
                    "command": [
                        "rewrite IHt0.",
                        "VernacExtend",
                        "6c4e824f96296512a78316e523b833cc199248e5"
                    ]
                },
                {
                    "command": [
                        "cheerios_crush.",
                        "VernacExtend",
                        "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now cheerios_crush.",
                        "VernacExtend",
                        "5c51c5caed165379f1611821acb72f07fde7ede3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "fold deserialize_tree_elements_list.",
                        "VernacExtend",
                        "29c3455114d14ee0307b533917e80f7262c1271f"
                    ]
                },
                {
                    "command": [
                        "fold serialize_tree_elements_list.",
                        "VernacExtend",
                        "67ba207f4d5a51299dddd37ae01039f36b0441f8"
                    ]
                },
                {
                    "command": [
                        "cheerios_crush.",
                        "VernacExtend",
                        "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHt.",
                        "VernacExtend",
                        "573f1c40624d31af332af08d7338dabc86a2a972"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tree_serialize_deserialize_id",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "unfold tree_serialize, tree_deserialize.",
                        "VernacExtend",
                        "5a141885219f51fef61cebbe7fdb556ac7372eca"
                    ]
                },
                {
                    "command": [
                        "cheerios_crush.",
                        "VernacExtend",
                        "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
                    ]
                },
                {
                    "command": [
                        "rewrite serialize_deserialize_shape_id.",
                        "VernacExtend",
                        "75580737e879e4661d90455fe1d8a4b4a7cfccdf"
                    ]
                },
                {
                    "command": [
                        "now rewrite serialize_deserialize_tree_elements_id.",
                        "VernacExtend",
                        "2c7790d95918116bbde3b79848d4b3588b64b3a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "foo",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "now rewrite serialize_deserialize_id_nil.",
                        "VernacExtend",
                        "b57047b64cf69c33a48a3e24d5143a0dce4a7646"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "foo'",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "now rewrite serialize_deserialize_id_nil.",
                        "VernacExtend",
                        "b57047b64cf69c33a48a3e24d5143a0dce4a7646"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tag_serialize_deserialize_id",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct a; unfold tag_serialize, tag_deserialize; cheerios_crush; unfold app; cheerios_crush.",
                        "VernacExtend",
                        "0ef359a431fa17b2646372e618047848087270cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tag_Serializer",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "exact {| serialize := tag_serialize; deserialize := tag_deserialize; serialize_deserialize_id := tag_serialize_deserialize_id |}.",
                        "VernacExtend",
                        "e20c2c292a33d9730207528c0584fd7b62dc8da2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "treeify_untreeify_id",
            "line_nb": 240,
            "steps": [
                {
                    "command": [
                        "induction j using json.json_rect with (P_list := fun l => untreeify_list (List.map json_treeify l) = Some l) (P_list' := fun l => untreeify_obj_list (obj_list_to_tree_list l) = Some l); unfold treeify_untreeify_aux; auto; simpl; try (fold untreeify_list); try (fold untreeify_obj_list); try (fold obj_list_to_tree_list); try (rewrite IHj); try (rewrite IHj0); auto.",
                        "VernacExtend",
                        "8d867c91525e1f9315952c7e450506eec236faa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "json_serialize_deserialize_id",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold json_serialize, json_deserialize.",
                        "VernacExtend",
                        "50a2eea589de82c1011bc934c673f217bd8f64b6"
                    ]
                },
                {
                    "command": [
                        "cheerios_crush.",
                        "VernacExtend",
                        "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
                    ]
                },
                {
                    "command": [
                        "rewrite treeify_untreeify_id.",
                        "VernacExtend",
                        "d99866325ef737e4f54078997e80bd9c25d6fea9"
                    ]
                },
                {
                    "command": [
                        "cheerios_crush.",
                        "VernacExtend",
                        "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "json_Serializer",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "exact {| serialize := json_serialize; deserialize := json_deserialize; serialize_deserialize_id := json_serialize_deserialize_id |}.",
                        "VernacExtend",
                        "1b919bb68321ee25ba0e70a01648bd1b6a782c82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "string_eqb_true",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold string_eqb in H.",
                        "VernacExtend",
                        "a3373a6614b8f9ebdb982a41fb10e0886daf4d78"
                    ]
                },
                {
                    "command": [
                        "destruct (String.string_dec s s').",
                        "VernacExtend",
                        "88c52c7a79b3cada56ef4d04fdd9f8670ac5f038"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "string_eqb_refl",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold string_eqb.",
                        "VernacExtend",
                        "fc2a978d57f20fe8daca6801e1e984f0e3cb3cce"
                    ]
                },
                {
                    "command": [
                        "destruct (String.string_dec s s); congruence.",
                        "VernacExtend",
                        "5447f1703af0e1b65baeffe94204a2cd5eb7c034"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "json_eqb_eq",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "induction j using json.json_rect with (P_list := fun l => forall l', loop_arr l l' = true -> l = l') (P_list' := fun l => forall l', loop_obj l l' = true -> l = l'); unfold json_eqb.",
                        "VernacExtend",
                        "862d16fbe1bf60db2a2c11f8330df2d93534551b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct l'.",
                        "VernacExtend",
                        "d3a2cf1f5af31737cd1e570fd3939d7f963563b3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct l'.",
                        "VernacExtend",
                        "d3a2cf1f5af31737cd1e570fd3939d7f963563b3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "apply Bool.andb_true_iff in H.",
                        "VernacExtend",
                        "96ec432e176970b201fe145d41dcefe2227c68bf"
                    ]
                },
                {
                    "command": [
                        "assert (j = t).",
                        "VernacExtend",
                        "269a07294df22eb4744f0d70b9c85d78c48aee5a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply IHj.",
                        "VernacExtend",
                        "7d899a4df818b523664b617886a9c89fec174ee2"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "assert (l = l').",
                        "VernacExtend",
                        "4b38006d20c86d00a552aceadfd84a2670d525a5"
                    ]
                },
                {
                    "command": [
                        "--",
                        "VernacBullet",
                        "ba168e40f4056f7e624b4823d483fd7320648256"
                    ]
                },
                {
                    "command": [
                        "apply IHj0.",
                        "VernacExtend",
                        "27123e829b0a9471a542591bc13cb5184860e1a0"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "--",
                        "VernacBullet",
                        "ba168e40f4056f7e624b4823d483fd7320648256"
                    ]
                },
                {
                    "command": [
                        "now rewrite H0, H1.",
                        "VernacExtend",
                        "83bfca649481b71646f4745c1a88a33d75d4e0f0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct l'.",
                        "VernacExtend",
                        "d3a2cf1f5af31737cd1e570fd3939d7f963563b3"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct l'; simpl in H.",
                        "VernacExtend",
                        "e9067bf81352143965453aafe880ee334b35d4aa"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "apply Bool.andb_true_iff in H.",
                        "VernacExtend",
                        "96ec432e176970b201fe145d41dcefe2227c68bf"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "apply Bool.andb_true_iff in H0.",
                        "VernacExtend",
                        "ef6cb7640b0aff07e690b1b08bfd92ac21150514"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "assert (s = s0).",
                        "VernacExtend",
                        "4082470f27d93f73ef68618b1491ccc64c7be1cc"
                    ]
                },
                {
                    "command": [
                        "now apply string_eqb_true in H.",
                        "VernacExtend",
                        "62626e880dfe7243d602241e4f3f981806e46f19"
                    ]
                },
                {
                    "command": [
                        "assert (j = t).",
                        "VernacExtend",
                        "269a07294df22eb4744f0d70b9c85d78c48aee5a"
                    ]
                },
                {
                    "command": [
                        "apply (IHj t H0).",
                        "VernacExtend",
                        "db5774ae1f27cf792d20a85788702e9844c9c89f"
                    ]
                },
                {
                    "command": [
                        "assert (l = l').",
                        "VernacExtend",
                        "4b38006d20c86d00a552aceadfd84a2670d525a5"
                    ]
                },
                {
                    "command": [
                        "apply (IHj0 _ H1).",
                        "VernacExtend",
                        "3f2b808b7f7fa67885cdd33bf343511840814970"
                    ]
                },
                {
                    "command": [
                        "now rewrite H2, H3, H4.",
                        "VernacExtend",
                        "a0a539283ea0d4408e47b52360d1d9f35e25ded5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct j'; try congruence.",
                        "VernacExtend",
                        "ee130c7d3846fbe95a7cd72426d5c7f982a1e40d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct j'; try congruence.",
                        "VernacExtend",
                        "ee130c7d3846fbe95a7cd72426d5c7f982a1e40d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Bool.eqb_prop in H.",
                        "VernacExtend",
                        "559f35d72523a4e3888262c3f9d968f355c62807"
                    ]
                },
                {
                    "command": [
                        "now rewrite H.",
                        "VernacExtend",
                        "4b48f672d72bdaa3470accf224603b6461e14cf4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct j'; try congruence.",
                        "VernacExtend",
                        "ee130c7d3846fbe95a7cd72426d5c7f982a1e40d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply EqNat.beq_nat_true in H.",
                        "VernacExtend",
                        "9be77faf195eaea2d62443ab391e03fbdbb877b1"
                    ]
                },
                {
                    "command": [
                        "now rewrite H.",
                        "VernacExtend",
                        "4b48f672d72bdaa3470accf224603b6461e14cf4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct j'; try congruence.",
                        "VernacExtend",
                        "ee130c7d3846fbe95a7cd72426d5c7f982a1e40d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply string_eqb_true in H.",
                        "VernacExtend",
                        "8a7baa33448e226cf9afa91499dd533b3123ea09"
                    ]
                },
                {
                    "command": [
                        "now rewrite H.",
                        "VernacExtend",
                        "4b48f672d72bdaa3470accf224603b6461e14cf4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "fold json_eqb.",
                        "VernacExtend",
                        "543df943933c768d9456a1303ae962564338ce57"
                    ]
                },
                {
                    "command": [
                        "fold loop_arr.",
                        "VernacExtend",
                        "62c6369dde44f5b53ac370abbf3fecfe4a142faa"
                    ]
                },
                {
                    "command": [
                        "destruct j'; try congruence.",
                        "VernacExtend",
                        "ee130c7d3846fbe95a7cd72426d5c7f982a1e40d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply IHj in H.",
                        "VernacExtend",
                        "7be7e212eed154139b2021d228758b98fbbca950"
                    ]
                },
                {
                    "command": [
                        "now rewrite H.",
                        "VernacExtend",
                        "4b48f672d72bdaa3470accf224603b6461e14cf4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "fold json_eqb.",
                        "VernacExtend",
                        "543df943933c768d9456a1303ae962564338ce57"
                    ]
                },
                {
                    "command": [
                        "fold loop_obj.",
                        "VernacExtend",
                        "33ba6309cc10263cc633fa2f32b82900c71f3c62"
                    ]
                },
                {
                    "command": [
                        "destruct j'; try congruence.",
                        "VernacExtend",
                        "ee130c7d3846fbe95a7cd72426d5c7f982a1e40d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply IHj in H.",
                        "VernacExtend",
                        "7be7e212eed154139b2021d228758b98fbbca950"
                    ]
                },
                {
                    "command": [
                        "now rewrite H.",
                        "VernacExtend",
                        "4b48f672d72bdaa3470accf224603b6461e14cf4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "json_eq_eqb",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "induction j using json.json_rect with (P_list := fun l => loop_arr l l = true) (P_list' := fun l => loop_obj l l = true).",
                        "VernacExtend",
                        "307f892106835ee4fc196ae1065e204e1987196e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "specialize IHj with j.",
                        "VernacExtend",
                        "05afa5753b65014ecfd5ce3486fa933ec90b5f8f"
                    ]
                },
                {
                    "command": [
                        "rewrite IHj0.",
                        "VernacExtend",
                        "e4d16f8f9d8c9858c7cf6961ea364c575b24066e"
                    ]
                },
                {
                    "command": [
                        "rewrite IHj; reflexivity.",
                        "VernacExtend",
                        "7ff9cb5cccecaa5931f791309de390f6361adaad"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite string_eqb_refl, IHj0.",
                        "VernacExtend",
                        "22591f644031f67d0fa2745342e0b09450a9493c"
                    ]
                },
                {
                    "command": [
                        "rewrite IHj; auto.",
                        "VernacExtend",
                        "c5e8f4a230faab10be78e97fa04256d3eee22654"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- H.",
                        "VernacExtend",
                        "263ddf4271621bf4b397740764d4ad46d50c2bb1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Bool.eqb_reflx.",
                        "VernacExtend",
                        "4366c298c9b4571ffbf0f1c733533a507492a4b1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply EqNat.beq_nat_refl.",
                        "VernacExtend",
                        "293455cdf3bd7838ac1f9d2e9a160c94ee5bf6f2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply string_eqb_refl.",
                        "VernacExtend",
                        "2884fc4e8ba95384131e2baa9c6b193c73d230dc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "json_eq_dec",
            "line_nb": 407,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (json_eqb j j') eqn:H.",
                        "VernacExtend",
                        "fde5a4189cd2b670d78af8e697db43c89eafcba4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "now apply json_eqb_eq.",
                        "VernacExtend",
                        "d0695b51288216f83d44779850ee484c5476e799"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite json_eq_eqb in H; congruence.",
                        "VernacExtend",
                        "80571791f8650dfa6be5a22796627bda747f3452"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tree_of_ptree_ptree_of_tree",
            "line_nb": 423,
            "steps": [
                {
                    "command": [
                        "induction t using PositiveMap.tree_ind; auto.",
                        "VernacExtend",
                        "7abf24612aacd68459e0ee5cc9837a5878bdbb4e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHt1.",
                        "VernacExtend",
                        "b9477a6e6c54eb73a9f7db18368a2401bb611dde"
                    ]
                },
                {
                    "command": [
                        "rewrite IHt2.",
                        "VernacExtend",
                        "395cf4850f32caf7a475943fa626d4cc6efe15bc"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptree_serialize_deserialize_id",
            "line_nb": 432,
            "steps": [
                {
                    "command": [
                        "unfold ptree_serialize, ptree_deserialize.",
                        "VernacExtend",
                        "0fdca34e19e74a3a0fd978c53a61616a43aa4778"
                    ]
                },
                {
                    "command": [
                        "cheerios_crush.",
                        "VernacExtend",
                        "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
                    ]
                },
                {
                    "command": [
                        "rewrite tree_of_ptree_ptree_of_tree.",
                        "VernacExtend",
                        "4683aa6c51aa680a462da90415ba6f233d9be180"
                    ]
                },
                {
                    "command": [
                        "cheerios_crush.",
                        "VernacExtend",
                        "cd9abf2aaa45ac64ce554017f49d53791fbc9c23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}