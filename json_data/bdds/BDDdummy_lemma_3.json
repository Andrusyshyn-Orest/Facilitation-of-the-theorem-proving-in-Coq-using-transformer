{
    "filename": "BDDdummy_lemma_3.v",
    "coq_project": "bdds",
    "vernac_cmds": [
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Require Import Sumbool.",
            "VernacRequire",
            "555a25fa361ace801dc7927d5872def951dfbee5"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import ZArith NArith Nnat Ndec Ndigits.",
            "VernacRequire",
            "c2baea4a0fda1451ad00e307f8a2db5ff87567aa"
        ],
        [
            "From IntMap Require Import Allmaps.",
            "VernacRequire",
            "d3a19fbc306700804973888ef7ccf716277e64fb"
        ],
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Require Import BDDvar_ad_nat.",
            "VernacRequire",
            "ecfee313280da558d300523c60b3cd65e5165656"
        ],
        [
            "Require Import bdd1.",
            "VernacRequire",
            "35415fd818f4fbf6a7da419d967a777932ddb1b7"
        ],
        [
            "Require Import bdd2.",
            "VernacRequire",
            "fc7fe718a45de74f8628c84379872e19aab95145"
        ],
        [
            "Require Import bdd3.",
            "VernacRequire",
            "95f3e899c409f5147a2e5ffb6cff783e84759a38"
        ],
        [
            "Require Import bdd4.",
            "VernacRequire",
            "b5ef55533b9f5bd8b43ccb8df189a285dcb3ba46"
        ],
        [
            "Require Import bdd5_1.",
            "VernacRequire",
            "4c8c2f942b9627ed770481f7d36a53832d08f61c"
        ],
        [
            "Require Import bdd5_2.",
            "VernacRequire",
            "72388d3e5d26c2c3f56663e5bf381713ca09cb1f"
        ],
        [
            "Require Import bdd6.",
            "VernacRequire",
            "286d35c5775bfdf01fd3faeac9f6b0e5d419a507"
        ],
        [
            "Require Import bdd7.",
            "VernacRequire",
            "9d31e7215b7376e06b848ded02ec0d224ac8ce88"
        ],
        [
            "Lemma BDDdummy_lemma_3 : forall bound : nat, (forall m : nat, m < bound -> forall (cfg : BDDconfig) (node1 node2 : ad) (memo : BDDor_memo), BDDconfig_OK cfg -> BDDor_memo_OK cfg memo -> config_node_OK cfg node1 -> config_node_OK cfg node2 -> (is_internal_node cfg node1 -> is_internal_node cfg node2 -> max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2)) < m) -> BDDconfig_OK (fst (BDDor_1 cfg memo node1 node2 m)) /\\ BDDor_memo_OK (fst (BDDor_1 cfg memo node1 node2 m)) (snd (snd (BDDor_1 cfg memo node1 node2 m))) /\\ config_node_OK (fst (BDDor_1 cfg memo node1 node2 m)) (fst (snd (BDDor_1 cfg memo node1 node2 m))) /\\ nodes_preserved cfg (fst (BDDor_1 cfg memo node1 node2 m)) /\\ BDDvar_le (var (fst (BDDor_1 cfg memo node1 node2 m)) (fst (snd (BDDor_1 cfg memo node1 node2 m)))) (BDDvar_max (var cfg node1) (var cfg node2)) = true /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 node2 m)) (fst (snd (BDDor_1 cfg memo node1 node2 m)))) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2))) -> forall (cfg : BDDconfig) (node1 node2 : ad) (memo : BDDor_memo), BDDconfig_OK cfg -> BDDor_memo_OK cfg memo -> config_node_OK cfg node1 -> config_node_OK cfg node2 -> (is_internal_node cfg node1 -> is_internal_node cfg node2 -> max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2)) < bound) -> BDDor_memo_lookup memo node1 node2 = None -> in_dom (BDDvar * (ad * ad)) node1 (fst cfg) = true -> node2 = BDDone \\/ in_dom (BDDvar * (ad * ad)) node2 (fst cfg) = true -> is_internal_node cfg node1 -> in_dom (BDDvar * (ad * ad)) node2 (fst cfg) = true -> is_internal_node cfg node2 -> forall bound' : nat, bound = S bound' -> max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2)) < bound -> BDDcompare (var cfg node1) (var cfg node2) = Datatypes.Lt -> BDDconfig_OK (fst (BDDor_1 cfg memo node1 node2 bound)) /\\ BDDor_memo_OK (fst (BDDor_1 cfg memo node1 node2 bound)) (snd (snd (BDDor_1 cfg memo node1 node2 bound))) /\\ config_node_OK (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound))) /\\ nodes_preserved cfg (fst (BDDor_1 cfg memo node1 node2 bound)) /\\ BDDvar_le (var (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))) (BDDvar_max (var cfg node1) (var cfg node2)) = true /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2)).",
            "VernacStartTheoremProof",
            "56fec269afb4a11ac31af44ac19162bce6f2e33e"
        ],
        [
            "intros bound H cfg node1 node2 memo H0 H1 H2 H3 H4 y H5 H6 H8 H9 H7 bound' y0 H10 y1.",
            "VernacExtend",
            "a8c9daa60b7335b66d70b77b9270cff62fc3f966"
        ],
        [
            "cut (config_node_OK cfg (low cfg node1)).",
            "VernacExtend",
            "f6ecdc03c444efa62d5ff49dbd7078372e8a831e"
        ],
        [
            "cut (config_node_OK cfg (low cfg node2)).",
            "VernacExtend",
            "66bad16f9fa9c44ffc23ad37c8eb037535dd5b63"
        ],
        [
            "cut (config_node_OK cfg (high cfg node1)).",
            "VernacExtend",
            "a4f4f4b6e84a73a935f9a1dbf3617c1bc70d4192"
        ],
        [
            "cut (config_node_OK cfg (high cfg node2)).",
            "VernacExtend",
            "a57e2fb96e305116bafdd06b9b54000d3bf5c39d"
        ],
        [
            "intros H11 H12 H13 H14.",
            "VernacExtend",
            "a8fe16ce9818523560599c6cc1eec479c34e94e6"
        ],
        [
            "cut (is_internal_node cfg node1 -> is_internal_node cfg (low cfg node2) -> max (nat_of_N (var cfg node1)) (nat_of_N (var cfg (low cfg node2))) < bound').",
            "VernacExtend",
            "c763b17b07071c13f433b09293752f72ad8da2b7"
        ],
        [
            "intro H15.",
            "VernacExtend",
            "a496e7944923dd251836a55eac0efac7fac32b63"
        ],
        [
            "cut (BDDconfig_OK (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) /\\ BDDor_memo_OK (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) /\\ config_node_OK (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) /\\ nodes_preserved cfg (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) /\\ BDDvar_le (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))) (BDDvar_max (var cfg node1) (var cfg (low cfg node2))) = true /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg (low cfg node2)))).",
            "VernacExtend",
            "95f61a9e35c9db376b9157986484e4b1514e5524"
        ],
        [
            "intro H16.",
            "VernacExtend",
            "c16d9f76387f574dd166fbfa7eb1ba04610dff17"
        ],
        [
            "elim H16; clear H16; intros.",
            "VernacExtend",
            "987fd0abe5abdff81668f10fed9d606523fadfda"
        ],
        [
            "elim H17; clear H17; intros.",
            "VernacExtend",
            "271a1d7d9f3390b5904324e763c676eaeeddfb34"
        ],
        [
            "elim H18; clear H18; intros.",
            "VernacExtend",
            "92928b13de3b5c9f46eddea905325f29d40d55f0"
        ],
        [
            "elim H19; clear H19; intros.",
            "VernacExtend",
            "88696fce058e7a60782126925d3de775d2410af0"
        ],
        [
            "elim H20; clear H20; intros.",
            "VernacExtend",
            "25d631f98d84bb58e93f7962fe6d0abf7c5bee12"
        ],
        [
            "cut (config_node_OK (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1).",
            "VernacExtend",
            "7d21e857286bea1a21397193515909f50f35a1bf"
        ],
        [
            "intro H22.",
            "VernacExtend",
            "471fed4e3acc94f8b858b6a5bfd767aa3f32e539"
        ],
        [
            "cut (config_node_OK (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2)).",
            "VernacExtend",
            "297533d9993409f9a74300c834808d908c3952e9"
        ],
        [
            "intro H23.",
            "VernacExtend",
            "27cf1eb2a9f42bc55b51e28871f128ec3190b7dc"
        ],
        [
            "cut (is_internal_node (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1 -> is_internal_node (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2) -> max (nat_of_N (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1)) (nat_of_N (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2))) < bound').",
            "VernacExtend",
            "45814f8fe04dab4ae0df9c8d7075363d544df277"
        ],
        [
            "intro H24.",
            "VernacExtend",
            "1f66b1b825d93042ea5224c105ce756edce8c1e1"
        ],
        [
            "cut (BDDconfig_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) /\\ BDDor_memo_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (snd (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) /\\ config_node_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) /\\ nodes_preserved (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) /\\ BDDvar_le (var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))) (BDDvar_max (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1) (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2))) = true /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))) (bool_fun_or (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1) (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2)))).",
            "VernacExtend",
            "af8e3c4255f84efa599b595b9ee3db5581dd68a3"
        ],
        [
            "intro H25.",
            "VernacExtend",
            "1242b520804e036a43df22fa2fe21de5dbb0514e"
        ],
        [
            "elim H25; clear H25; intros.",
            "VernacExtend",
            "378d9101d475e5a40e7d723d44549330cc4eb8b7"
        ],
        [
            "elim H26; clear H26; intros.",
            "VernacExtend",
            "f8f496e9394be3d2b00e5d47b6e7506e64462199"
        ],
        [
            "elim H27; clear H27; intros.",
            "VernacExtend",
            "ce40a9b817a84c99cdc95b2e1a8d2c312d76464e"
        ],
        [
            "elim H28; clear H28; intros.",
            "VernacExtend",
            "da81581ebe6f54800c73dbbebb91cccedf2890cf"
        ],
        [
            "elim H29; clear H29; intros.",
            "VernacExtend",
            "239203a62bdfb5ad3857464e5e9205b8f7b075d2"
        ],
        [
            "cut (config_node_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))).",
            "VernacExtend",
            "fad9666e066210be77a6e955f1eb80d20408f649"
        ],
        [
            "intro H31.",
            "VernacExtend",
            "a749096845d230d6eed3060e63d1491fd760aa87"
        ],
        [
            "cut (is_internal_node (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) -> BDDcompare (var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))) (var cfg node2) = Datatypes.Lt).",
            "VernacExtend",
            "d493d57b9cd360b036745bc5d711e6b3750d79b6"
        ],
        [
            "intro H32.",
            "VernacExtend",
            "3dbf8efba1716fda1ce8652f6197483f11edbd2e"
        ],
        [
            "cut (is_internal_node (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) -> BDDcompare (var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))) (var cfg node2) = Datatypes.Lt).",
            "VernacExtend",
            "0b5869571f20b4f58081dd20f57e936c5b9f99ec"
        ],
        [
            "intro H33.",
            "VernacExtend",
            "2b29c48c9bf0b676f36a586228e09fb5c938f091"
        ],
        [
            "cut (BDDconfig_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) /\\ (Neqb (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) = false -> MapGet _ (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))))) (snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) = Some (var cfg node2, (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')), fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) /\\ (Neqb (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) = true -> snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))) = fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) /\\ (forall (a l' r' : ad) (x' : BDDvar), (MapGet _ (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))))) a = Some (x', (l', r')) -> MapGet _ (fst (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) a = Some (x', (l', r')) \\/ snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))) = a) /\\ (MapGet _ (fst (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) a = Some (x', (l', r')) -> MapGet _ (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))))) a = Some (x', (l', r')))) /\\ node_OK (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))))) (snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))))).",
            "VernacExtend",
            "f27a9b26f64253970bdd022153d7754ebaf6a993"
        ],
        [
            "intro H34.",
            "VernacExtend",
            "b691ea8a2778e063d94b875bad8f7c250ba66886"
        ],
        [
            "elim H34; clear H34; intros.",
            "VernacExtend",
            "461883f759c9d68aba2ba6174a9fec866cdb9063"
        ],
        [
            "elim H35; clear H35; intros.",
            "VernacExtend",
            "696d26f9ddd71880a06d73afb5a30717ec752f23"
        ],
        [
            "elim H36; clear H36; intros.",
            "VernacExtend",
            "b633ee2af654686e361def033006955c85776880"
        ],
        [
            "elim H37; clear H37; intros.",
            "VernacExtend",
            "cf8a2f123e67978c834a002ef3c0b62f13cac051"
        ],
        [
            "cut (BDDconfig_OK (fst (BDDor_1 cfg memo node1 node2 bound))).",
            "VernacExtend",
            "e2db7fad08484256645d82b9dba352e9c0f7a36b"
        ],
        [
            "intro H39.",
            "VernacExtend",
            "925232329d0f8c5d00da50cb076a69b4accf54e3"
        ],
        [
            "cut (config_node_OK (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))).",
            "VernacExtend",
            "049e9c261c7d7a1e5ad0daee695c47d99fdc750e"
        ],
        [
            "intro H40.",
            "VernacExtend",
            "969bef4669167a481de1cd14f432fd096dbf60db"
        ],
        [
            "cut (nodes_preserved cfg (fst (BDDor_1 cfg memo node1 node2 bound))).",
            "VernacExtend",
            "ff3d92c7346ce10b85556691fcf1c33b92e6b104"
        ],
        [
            "intro H41.",
            "VernacExtend",
            "a3c4b72ca8d807bfff74bb21acfc477d16da7f5c"
        ],
        [
            "cut (BDDvar_le (var (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))) (BDDvar_max (var cfg node1) (var cfg node2)) = true).",
            "VernacExtend",
            "b19db2cad86ae9099c0e75a84338ab7f28c1aa1f"
        ],
        [
            "intro H42.",
            "VernacExtend",
            "634f36c60e4cfc6109f27ad7a2f8a10fd9bd1659"
        ],
        [
            "cut (bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2))).",
            "VernacExtend",
            "475bdf4b4ee467dd9c8632331ce9920cb3743ac1"
        ],
        [
            "intro H43.",
            "VernacExtend",
            "131e86db72429f6d1425c057170e9e6bb449025c"
        ],
        [
            "cut (BDDor_memo_OK (fst (BDDor_1 cfg memo node1 node2 bound)) (snd (snd (BDDor_1 cfg memo node1 node2 bound)))).",
            "VernacExtend",
            "ad84130bf0a933ee98fdce7e5cbf1fa39eaf33c0"
        ],
        [
            "intro H44.",
            "VernacExtend",
            "22b50c77d42c7e59090614c3ad70855f42016867"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold BDDor_memo_OK in |- *.",
            "VernacExtend",
            "1895dafe933a9a3c710b7210e857ff81584c72b1"
        ],
        [
            "intros node1' node2' node.",
            "VernacExtend",
            "0e5a24c25590a06d0039f131949ca8c0775ca9a4"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
            "VernacExtend",
            "17cb5e18fed38710026ee8a5f40e375b2bbc8a97"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (BDDor_memo_lookup_semantics (snd (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) node1 node2 (snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node1' node2') .",
            "VernacExtend",
            "9637e05a83c0e3b2ce9713ed62b81fdf18aa04da"
        ],
        [
            "elim (sumbool_of_bool (Neqb node1 node1' && Neqb node2 node2')); intro y2.",
            "VernacExtend",
            "c7a0bb2c0a2d245a65ca6225c59099001464b3ed"
        ],
        [
            "rewrite y2.",
            "VernacExtend",
            "2442b677655ba21bf3c218983e052542c9e239bf"
        ],
        [
            "cut (node1 = node1').",
            "VernacExtend",
            "ba86a63e7eded5e460a24a2fb0586b6d67370c02"
        ],
        [
            "cut (node2 = node2').",
            "VernacExtend",
            "bb1a49fefb3c5885f25efbaa7ef5bc5e81050b04"
        ],
        [
            "intro H44.",
            "VernacExtend",
            "22b50c77d42c7e59090614c3ad70855f42016867"
        ],
        [
            "intro H45.",
            "VernacExtend",
            "ec486eede2396f7feff735fff7c53325bf0775eb"
        ],
        [
            "intro H46.",
            "VernacExtend",
            "6821aaf98c4b8d47f3a4a14a7c5e2ad7ed1299e4"
        ],
        [
            "injection H46.",
            "VernacExtend",
            "c72eaedffbf319e4f6ad80b0a68c306175d07ad4"
        ],
        [
            "clear H46; intros.",
            "VernacExtend",
            "8644f0f7d170f3d16c85495a5a30fc53d2297e42"
        ],
        [
            "cut (config_node_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node1').",
            "VernacExtend",
            "14389b0fa475fff13e5f72203d763e29d85873f2"
        ],
        [
            "intro H47.",
            "VernacExtend",
            "600503429ff475ada409f7d978f24a0998edb6f9"
        ],
        [
            "cut (config_node_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node2').",
            "VernacExtend",
            "2d1e7a1d7ecadcef3ee75b153cf5a216e619e0fe"
        ],
        [
            "intro H48.",
            "VernacExtend",
            "81d6e1f7bc7b7141ceeaee2efa8eed9b9cd855d5"
        ],
        [
            "cut (config_node_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node).",
            "VernacExtend",
            "a6fcec6736f8bb87f784f81c98f12baa9006e2e3"
        ],
        [
            "intro H49.",
            "VernacExtend",
            "83ebbf41aa1f92b054ed8655b4cd5ebe2c8c2bc9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite <- H44; rewrite <- H45.",
            "VernacExtend",
            "c6cc36870ee957bc26018c4ed4ebd5f407bf5708"
        ],
        [
            "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node1 = var cfg node1).",
            "VernacExtend",
            "9d06ef930d84346736cda789a6cf970229f18218"
        ],
        [
            "intro H50.",
            "VernacExtend",
            "de211d6301ec352cee32f7a9b748cdad196fcd79"
        ],
        [
            "rewrite H50.",
            "VernacExtend",
            "4d457004df802cf1d3bd517b926eb91552323a2a"
        ],
        [
            "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node2 = var cfg node2).",
            "VernacExtend",
            "8c44014dae8ac707fd349484a312f3f7c5d36741"
        ],
        [
            "intro H51.",
            "VernacExtend",
            "74ff7e7a184e5fd9c34c7633098da7f5890f5f5a"
        ],
        [
            "rewrite H51.",
            "VernacExtend",
            "48b1b2eadf05628eb657c35471ab0afab3812915"
        ],
        [
            "rewrite <- H46.",
            "VernacExtend",
            "f57c3ee141300d48c1c6df52bb56e7bd0c4240d0"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H42.",
            "VernacExtend",
            "a451db7b5e269ae70a15c3044be26df53fc0d2ac"
        ],
        [
            "simpl in H42.",
            "VernacExtend",
            "50099696f1ffb9b79dab5b87fc20eb2b6848d0d0"
        ],
        [
            "exact H42.",
            "VernacExtend",
            "ac52f7280cdca1b8f93a929d26f49e5a6a6ad739"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
            "VernacExtend",
            "36c8f29131702f7ba9da6e6133bdaf2e13549520"
        ],
        [
            "apply nodes_preserved_var.",
            "VernacExtend",
            "b23a251fc935c1f2c90dd166371d3411f44d4a0f"
        ],
        [
            "exact H41.",
            "VernacExtend",
            "d9d5b5b5dbb07c570005e102e3268b23970410d6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_var.",
            "VernacExtend",
            "b23a251fc935c1f2c90dd166371d3411f44d4a0f"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
            "VernacExtend",
            "36c8f29131702f7ba9da6e6133bdaf2e13549520"
        ],
        [
            "simpl in H39; exact H41.",
            "VernacExtend",
            "e76bf83811575619a3e0bdd3db2a024034abda35"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H44; rewrite <- H45.",
            "VernacExtend",
            "c6cc36870ee957bc26018c4ed4ebd5f407bf5708"
        ],
        [
            "rewrite <- H46.",
            "VernacExtend",
            "f57c3ee141300d48c1c6df52bb56e7bd0c4240d0"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2)).",
            "VernacExtend",
            "3920391a5dc2048f5647c0811692bd0f2abfabab"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H43.",
            "VernacExtend",
            "73d572bb916974ad2cfebd4a278c080b6c600cc5"
        ],
        [
            "simpl in H43; exact H43.",
            "VernacExtend",
            "a22bb9683ce82acc8b65f1b72b68a734a6c28174"
        ],
        [
            "apply bool_fun_or_preserves_eq.",
            "VernacExtend",
            "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
            "VernacExtend",
            "36c8f29131702f7ba9da6e6133bdaf2e13549520"
        ],
        [
            "exact H41.",
            "VernacExtend",
            "d9d5b5b5dbb07c570005e102e3268b23970410d6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
            "VernacExtend",
            "36c8f29131702f7ba9da6e6133bdaf2e13549520"
        ],
        [
            "exact H41.",
            "VernacExtend",
            "d9d5b5b5dbb07c570005e102e3268b23970410d6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H46.",
            "VernacExtend",
            "f57c3ee141300d48c1c6df52bb56e7bd0c4240d0"
        ],
        [
            "exact H38.",
            "VernacExtend",
            "24fdc42b30a842dd3a1bf28e27bc0d145ef321d4"
        ],
        [
            "rewrite <- H44.",
            "VernacExtend",
            "523ad9dceac44396217d74c2dbab0e149ea3e755"
        ],
        [
            "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')).",
            "VernacExtend",
            "3d29a15e20e9c28a33425781ca914f5282f09de4"
        ],
        [
            "apply nodes_preserved_2 with (cfg := fst (BDDor_1 cfg memo node1 (low cfg node2) bound')).",
            "VernacExtend",
            "1e77a26e37bacd0d07143931ccd2cd1327ea63ee"
        ],
        [
            "apply nodes_preserved_2 with (cfg := cfg).",
            "VernacExtend",
            "7e5df592869ceccf5be79ad15e4020d4223187aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H45.",
            "VernacExtend",
            "463faf4696bbb4acf0022c082b2943caf519f236"
        ],
        [
            "apply nodes_preserved_2 with (cfg := cfg).",
            "VernacExtend",
            "7e5df592869ceccf5be79ad15e4020d4223187aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
            "VernacExtend",
            "36c8f29131702f7ba9da6e6133bdaf2e13549520"
        ],
        [
            "exact H41.",
            "VernacExtend",
            "d9d5b5b5dbb07c570005e102e3268b23970410d6"
        ],
        [
            "apply Neqb_complete.",
            "VernacExtend",
            "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
        ],
        [
            "exact (proj2 (andb_prop (Neqb node1 node1') (Neqb node2 node2') y2)).",
            "VernacExtend",
            "45b22921b423a901a6be24829f78c9c88b1a3258"
        ],
        [
            "apply Neqb_complete.",
            "VernacExtend",
            "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
        ],
        [
            "exact (proj1 (andb_prop (Neqb node1 node1') (Neqb node2 node2') y2)).",
            "VernacExtend",
            "95f2a36dfd168f101bbd9ed03968d7e02c036aca"
        ],
        [
            "rewrite y2.",
            "VernacExtend",
            "2442b677655ba21bf3c218983e052542c9e239bf"
        ],
        [
            "intros H44.",
            "VernacExtend",
            "b10961f3bdc929de8ebb161ce5a9c0e27ff16caa"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')).",
            "VernacExtend",
            "3d29a15e20e9c28a33425781ca914f5282f09de4"
        ],
        [
            "unfold BDDor_memo_OK in H26.",
            "VernacExtend",
            "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
        ],
        [
            "exact (proj1 (H26 node1' node2' node H44)).",
            "VernacExtend",
            "2030fbef991de5a0f5f13ab0852b2d680b107a4f"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')).",
            "VernacExtend",
            "3d29a15e20e9c28a33425781ca914f5282f09de4"
        ],
        [
            "unfold BDDor_memo_OK in H26.",
            "VernacExtend",
            "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
        ],
        [
            "exact (proj1 (proj2 (H26 node1' node2' node H44))).",
            "VernacExtend",
            "6875b88d9bbbecee8646a84c7697c1131ccdb27c"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')).",
            "VernacExtend",
            "3d29a15e20e9c28a33425781ca914f5282f09de4"
        ],
        [
            "unfold BDDor_memo_OK in H26.",
            "VernacExtend",
            "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
        ],
        [
            "exact (proj1 (proj2 (proj2 (H26 node1' node2' node H44)))).",
            "VernacExtend",
            "afada985ff7f2e7c1d82adb509cab3f7e84e987a"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node = var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) node).",
            "VernacExtend",
            "29adb3564c017dfaa239ea486214240cf7f6b125"
        ],
        [
            "intro H45.",
            "VernacExtend",
            "ec486eede2396f7feff735fff7c53325bf0775eb"
        ],
        [
            "rewrite H45.",
            "VernacExtend",
            "654754dcc7a98b3a46bee89cebef9d92f3835080"
        ],
        [
            "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node1' = var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) node1').",
            "VernacExtend",
            "07297b93248d14c3347124f7329ccdffb6d2d740"
        ],
        [
            "intro H46.",
            "VernacExtend",
            "6821aaf98c4b8d47f3a4a14a7c5e2ad7ed1299e4"
        ],
        [
            "rewrite H46.",
            "VernacExtend",
            "bc71364af929d23beead6694a00c2c61fc8b32ec"
        ],
        [
            "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node2' = var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) node2').",
            "VernacExtend",
            "783201ff4c974e2d392119c83d443b88d18ba542"
        ],
        [
            "intro H47.",
            "VernacExtend",
            "600503429ff475ada409f7d978f24a0998edb6f9"
        ],
        [
            "rewrite H47.",
            "VernacExtend",
            "359985ef01b573ff9f51f7759e620b37f608e41d"
        ],
        [
            "unfold BDDor_memo_OK in H26.",
            "VernacExtend",
            "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
        ],
        [
            "exact (proj1 (proj2 (proj2 (proj2 (H26 node1' node2' node H44))))).",
            "VernacExtend",
            "ec944f8878b2298e77f5d52588d26f49aa9bf675"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold BDDor_memo_OK in H26.",
            "VernacExtend",
            "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
        ],
        [
            "exact (proj1 (proj2 (H26 node1' node2' node H44))).",
            "VernacExtend",
            "6875b88d9bbbecee8646a84c7697c1131ccdb27c"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes; assumption.",
            "VernacExtend",
            "ac10650a004b96a9df5c8f1f9d5ad0ba52a11df8"
        ],
        [
            "unfold BDDor_memo_OK in H26.",
            "VernacExtend",
            "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
        ],
        [
            "exact (proj1 (H26 node1' node2' node H44)).",
            "VernacExtend",
            "2030fbef991de5a0f5f13ab0852b2d680b107a4f"
        ],
        [
            "apply nodes_preserved_var_1 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')).",
            "VernacExtend",
            "eb37972b241d725dad2e843aa8b1007cf1974f74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exact (proj1 (proj2 (proj2 (H26 node1' node2' node H44)))).",
            "VernacExtend",
            "afada985ff7f2e7c1d82adb509cab3f7e84e987a"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) node).",
            "VernacExtend",
            "c288f6dfb763ce63370ca0b753c99503387b0272"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exact (proj1 (proj2 (proj2 (H26 node1' node2' node H44)))).",
            "VernacExtend",
            "afada985ff7f2e7c1d82adb509cab3f7e84e987a"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) node1') (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) node2')).",
            "VernacExtend",
            "9dafca44e33a2892754860f3d86e9888607de0ba"
        ],
        [
            "exact (proj2 (proj2 (proj2 (proj2 (H26 node1' node2' node H44))))).",
            "VernacExtend",
            "cd27babb608ea0947a9aa67020e89ae87c2f5360"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_or_preserves_eq.",
            "VernacExtend",
            "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exact (proj1 (H26 node1' node2' node H44)).",
            "VernacExtend",
            "2030fbef991de5a0f5f13ab0852b2d680b107a4f"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exact (proj1 (proj2 (H26 node1' node2' node H44))).",
            "VernacExtend",
            "6875b88d9bbbecee8646a84c7697c1131ccdb27c"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_if (var cfg node2) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg (high cfg node2))) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg (low cfg node2)))).",
            "VernacExtend",
            "93253d5841b32ca97f78616619404c2b9e20d22c"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
            "VernacExtend",
            "17cb5e18fed38710026ee8a5f40e375b2bbc8a97"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_if (var cfg node2) (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))) (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))))).",
            "VernacExtend",
            "e06c97e9977f4c5cb8393d76e0983354291a694a"
        ],
        [
            "apply BDDmake_bool_fun.",
            "VernacExtend",
            "f4c92828105114f8609f253aff654bee7db1e563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_if_preserves_eq.",
            "VernacExtend",
            "1c2a4f5b6b88ee3776baaeedd296c8f06bd07398"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1) (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2))).",
            "VernacExtend",
            "d4c93a6588f090598651619d15e9f9963440d422"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_or_preserves_eq.",
            "VernacExtend",
            "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))).",
            "VernacExtend",
            "879ff2dfe044b1aa0a5d94136c2c0ea3b231a613"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_if (var cfg node2) (bool_fun_of_BDD cfg (high cfg node2)) (bool_fun_of_BDD cfg (low cfg node2)))).",
            "VernacExtend",
            "5e4ce3992f39a29bf285c41fb260952fbdb2ba87"
        ],
        [
            "apply bool_fun_if_lemma_3.",
            "VernacExtend",
            "275276888f9a2716aaff754ee6b9d1eca60e8dde"
        ],
        [
            "apply bool_fun_or_preserves_eq.",
            "VernacExtend",
            "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
        ],
        [
            "unfold bool_fun_eq in |- *.",
            "VernacExtend",
            "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_if_lemma_2.",
            "VernacExtend",
            "3923b51783181711f5a75b695553d946c09407ac"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold BDDvar_le in |- *.",
            "VernacExtend",
            "005e717f8bf9be29377e3bb7cc34ab759881c776"
        ],
        [
            "apply Nleb_trans with (b := var cfg node2).",
            "VernacExtend",
            "2c065f37020194bce98818f30078504eae536ac7"
        ],
        [
            "fold BDDvar_le in |- *.",
            "VernacExtend",
            "fe3f07c3cdd3fb7f5e2561f5728a0065945ddd52"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
            "VernacExtend",
            "17cb5e18fed38710026ee8a5f40e375b2bbc8a97"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply BDDmake_var_order.",
            "VernacExtend",
            "686ced47ac195b5ff5b6a7dd3559d3fedd4639f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "fold BDDvar_le in |- *.",
            "VernacExtend",
            "fe3f07c3cdd3fb7f5e2561f5728a0065945ddd52"
        ],
        [
            "apply BDDvar_le_max_2.",
            "VernacExtend",
            "399fbf5013a50e6589d650e7e632283c66bb0d3b"
        ],
        [
            "apply nodes_preserved_trans with (cfg2 := fst (BDDor_1 cfg memo node1 (low cfg node2) bound')).",
            "VernacExtend",
            "62faee2b9431ebff0d8ddf641083c8206a3f013d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_trans with (cfg2 := fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')).",
            "VernacExtend",
            "c425f9d1062a91dd7824c78689717ff7e70b3798"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
            "VernacExtend",
            "17cb5e18fed38710026ee8a5f40e375b2bbc8a97"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
            "VernacExtend",
            "17cb5e18fed38710026ee8a5f40e375b2bbc8a97"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exact H38.",
            "VernacExtend",
            "24fdc42b30a842dd3a1bf28e27bc0d145ef321d4"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
            "VernacExtend",
            "17cb5e18fed38710026ee8a5f40e375b2bbc8a97"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exact H34.",
            "VernacExtend",
            "66f4fdd99b5f2a78cd57b5c0768878d81ff77563"
        ],
        [
            "apply BDDmake_semantics.",
            "VernacExtend",
            "8e0da208880e09b5388444c98fddbbedfa0d0a0f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros xl ll rl H34.",
            "VernacExtend",
            "537aac98a218b828cd27abe360639396b95f441e"
        ],
        [
            "cut (xl = var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))).",
            "VernacExtend",
            "8166f9d0b16802520774843ec6c9d198cd2ee520"
        ],
        [
            "intro H35.",
            "VernacExtend",
            "d21704803fd5da5ea70f7ff3b8d3b38fc1246374"
        ],
        [
            "rewrite H35.",
            "VernacExtend",
            "cf9b5433432199ab59221776153c00b2712ab58b"
        ],
        [
            "apply H32.",
            "VernacExtend",
            "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
        ],
        [
            "split with xl.",
            "VernacExtend",
            "1f25a32fbded523e82de370f5d84686bce391be3"
        ],
        [
            "split with ll.",
            "VernacExtend",
            "bc0d59bd8d3b100edd1a8952c150c110d509a673"
        ],
        [
            "split with rl.",
            "VernacExtend",
            "1352cf957ea14023a125eb4591f4ef4bb8b2d9ba"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold var in |- *.",
            "VernacExtend",
            "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
        ],
        [
            "rewrite H34.",
            "VernacExtend",
            "754ff9e53df6c5b34e6f0ec13124cc12ead4f10c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros xr lr rr H34.",
            "VernacExtend",
            "ffe28f8243910447490a69e84c9ef12a3e89ed57"
        ],
        [
            "cut (xr = var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))).",
            "VernacExtend",
            "580c3363aba16e82b6d68949fe34dfc6a686481a"
        ],
        [
            "intro H35.",
            "VernacExtend",
            "d21704803fd5da5ea70f7ff3b8d3b38fc1246374"
        ],
        [
            "rewrite H35.",
            "VernacExtend",
            "cf9b5433432199ab59221776153c00b2712ab58b"
        ],
        [
            "apply H33.",
            "VernacExtend",
            "6386d9775de9aeb848361511299770f2029fa22e"
        ],
        [
            "split with xr.",
            "VernacExtend",
            "921285c6f7c1334c015bf39bda0f33409dcee228"
        ],
        [
            "split with lr.",
            "VernacExtend",
            "a7813d02a02336d1650e902916d97e8904113a9e"
        ],
        [
            "split with rr.",
            "VernacExtend",
            "037d912fc81db603e97b1e39ae32e4d2d95e0b6e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold var in |- *; rewrite H34; reflexivity.",
            "VernacExtend",
            "f01ea5d4d99a970bd2aa3979c681b15e2308be00"
        ],
        [
            "intro H33.",
            "VernacExtend",
            "2b29c48c9bf0b676f36a586228e09fb5c938f091"
        ],
        [
            "apply BDDcompare_le_INFERIEUR_1 with (y := BDDvar_max (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1) (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2))).",
            "VernacExtend",
            "ca3f96ec99d54192411ad73e500773b5b21c4af8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1 = var cfg node1).",
            "VernacExtend",
            "38a914176a47ab55ec19234e91d611570f327716"
        ],
        [
            "intro H34.",
            "VernacExtend",
            "b691ea8a2778e063d94b875bad8f7c250ba66886"
        ],
        [
            "rewrite H34.",
            "VernacExtend",
            "754ff9e53df6c5b34e6f0ec13124cc12ead4f10c"
        ],
        [
            "cut (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2) = var cfg (high cfg node2)).",
            "VernacExtend",
            "49d8a20f228f8d65be483ec8628e2b2135c1c5f0"
        ],
        [
            "intro; rewrite H35.",
            "VernacExtend",
            "ddc414a3167422d7f5aec5e34f6d8c1d6d6e292c"
        ],
        [
            "apply BDDvar_ordered_high_2.",
            "VernacExtend",
            "d6dbe58df1543f5ed007d80259ebb660009eefda"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro H32.",
            "VernacExtend",
            "3dbf8efba1716fda1ce8652f6197483f11edbd2e"
        ],
        [
            "cut (var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) = var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))).",
            "VernacExtend",
            "0c1972e148d67edc339748740567eecd872e8693"
        ],
        [
            "intro H33.",
            "VernacExtend",
            "2b29c48c9bf0b676f36a586228e09fb5c938f091"
        ],
        [
            "rewrite H33.",
            "VernacExtend",
            "843203e5d023b7f527f482879145e736e392695d"
        ],
        [
            "apply BDDcompare_le_INFERIEUR_1 with (y := BDDvar_max (var cfg node1) (var cfg (low cfg node2))).",
            "VernacExtend",
            "9b65a00c2d03227efa164745a812803af78361ac"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDvar_ordered_low_2.",
            "VernacExtend",
            "1bb5c51478fdc6691e3e691efcfb542772f59446"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_2 with (cfg := fst (BDDor_1 cfg memo node1 (low cfg node2) bound')).",
            "VernacExtend",
            "1e77a26e37bacd0d07143931ccd2cd1327ea63ee"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "rewrite y0; unfold lt in |- *; apply le_n.",
            "VernacExtend",
            "6d3109cb29d0a4568cb8f1214365a788ca0c0b81"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros H24 H25.",
            "VernacExtend",
            "f0139375754e77c6551433b289b3c2ce0ab407a4"
        ],
        [
            "cut (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1 = var cfg node1).",
            "VernacExtend",
            "38a914176a47ab55ec19234e91d611570f327716"
        ],
        [
            "intro; rewrite H26.",
            "VernacExtend",
            "c571d72337fd1e65b60b120b43a734528ed857d3"
        ],
        [
            "cut (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2) = var cfg (high cfg node2)).",
            "VernacExtend",
            "49d8a20f228f8d65be483ec8628e2b2135c1c5f0"
        ],
        [
            "intro; rewrite H27.",
            "VernacExtend",
            "4d0b77b04ea7c80b9014cd5e00d25171c4a7361d"
        ],
        [
            "apply lt_trans_1 with (y := nat_of_N (var cfg node2)).",
            "VernacExtend",
            "94c37caac0e53a52241df78e5bd1513ad22d7512"
        ],
        [
            "apply lt_max_nat_of_N.",
            "VernacExtend",
            "c7cef12824f3437cc7339d2cc57ccbca0e85e0ae"
        ],
        [
            "apply BDDvar_ordered_high_2.",
            "VernacExtend",
            "d6dbe58df1543f5ed007d80259ebb660009eefda"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- y0.",
            "VernacExtend",
            "bea4b18ce4700c623c0ef6498ec62f190e4c3d09"
        ],
        [
            "apply le_lt_trans with (m := max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2))).",
            "VernacExtend",
            "0cfe0b0ef8e5338a11cc757bf2c46d247697cc9f"
        ],
        [
            "apply le_nat_of_N_max.",
            "VernacExtend",
            "fb2df83f164e1e4f092e3665b77429a35a877f89"
        ],
        [
            "apply BDDvar_le_max_2.",
            "VernacExtend",
            "399fbf5013a50e6589d650e7e632283c66bb0d3b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_2 with (cfg := cfg).",
            "VernacExtend",
            "7e5df592869ceccf5be79ad15e4020d4223187aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_2 with (cfg := cfg).",
            "VernacExtend",
            "7e5df592869ceccf5be79ad15e4020d4223187aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "rewrite y0; unfold lt in |- *; apply le_n.",
            "VernacExtend",
            "6d3109cb29d0a4568cb8f1214365a788ca0c0b81"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros H15 H16.",
            "VernacExtend",
            "011f2cbfd8cab00298b47ef7500b9c86f8300c26"
        ],
        [
            "apply lt_trans_1 with (y := nat_of_N (var cfg node2)).",
            "VernacExtend",
            "94c37caac0e53a52241df78e5bd1513ad22d7512"
        ],
        [
            "apply lt_max_nat_of_N.",
            "VernacExtend",
            "c7cef12824f3437cc7339d2cc57ccbca0e85e0ae"
        ],
        [
            "apply BDDvar_ordered_low_2.",
            "VernacExtend",
            "1bb5c51478fdc6691e3e691efcfb542772f59446"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- y0.",
            "VernacExtend",
            "bea4b18ce4700c623c0ef6498ec62f190e4c3d09"
        ],
        [
            "apply le_lt_trans with (m := max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2))).",
            "VernacExtend",
            "0cfe0b0ef8e5338a11cc757bf2c46d247697cc9f"
        ],
        [
            "apply le_nat_of_N_max.",
            "VernacExtend",
            "fb2df83f164e1e4f092e3665b77429a35a877f89"
        ],
        [
            "apply BDDvar_le_max_2.",
            "VernacExtend",
            "399fbf5013a50e6589d650e7e632283c66bb0d3b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "BDDdummy_lemma_3",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros bound H cfg node1 node2 memo H0 H1 H2 H3 H4 y H5 H6 H8 H9 H7 bound' y0 H10 y1.",
                        "VernacExtend",
                        "a8c9daa60b7335b66d70b77b9270cff62fc3f966"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK cfg (low cfg node1)).",
                        "VernacExtend",
                        "f6ecdc03c444efa62d5ff49dbd7078372e8a831e"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK cfg (low cfg node2)).",
                        "VernacExtend",
                        "66bad16f9fa9c44ffc23ad37c8eb037535dd5b63"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK cfg (high cfg node1)).",
                        "VernacExtend",
                        "a4f4f4b6e84a73a935f9a1dbf3617c1bc70d4192"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK cfg (high cfg node2)).",
                        "VernacExtend",
                        "a57e2fb96e305116bafdd06b9b54000d3bf5c39d"
                    ]
                },
                {
                    "command": [
                        "intros H11 H12 H13 H14.",
                        "VernacExtend",
                        "a8fe16ce9818523560599c6cc1eec479c34e94e6"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node cfg node1 -> is_internal_node cfg (low cfg node2) -> max (nat_of_N (var cfg node1)) (nat_of_N (var cfg (low cfg node2))) < bound').",
                        "VernacExtend",
                        "c763b17b07071c13f433b09293752f72ad8da2b7"
                    ]
                },
                {
                    "command": [
                        "intro H15.",
                        "VernacExtend",
                        "a496e7944923dd251836a55eac0efac7fac32b63"
                    ]
                },
                {
                    "command": [
                        "cut (BDDconfig_OK (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) /\\ BDDor_memo_OK (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) /\\ config_node_OK (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) /\\ nodes_preserved cfg (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) /\\ BDDvar_le (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))) (BDDvar_max (var cfg node1) (var cfg (low cfg node2))) = true /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg (low cfg node2)))).",
                        "VernacExtend",
                        "95f61a9e35c9db376b9157986484e4b1514e5524"
                    ]
                },
                {
                    "command": [
                        "intro H16.",
                        "VernacExtend",
                        "c16d9f76387f574dd166fbfa7eb1ba04610dff17"
                    ]
                },
                {
                    "command": [
                        "elim H16; clear H16; intros.",
                        "VernacExtend",
                        "987fd0abe5abdff81668f10fed9d606523fadfda"
                    ]
                },
                {
                    "command": [
                        "elim H17; clear H17; intros.",
                        "VernacExtend",
                        "271a1d7d9f3390b5904324e763c676eaeeddfb34"
                    ]
                },
                {
                    "command": [
                        "elim H18; clear H18; intros.",
                        "VernacExtend",
                        "92928b13de3b5c9f46eddea905325f29d40d55f0"
                    ]
                },
                {
                    "command": [
                        "elim H19; clear H19; intros.",
                        "VernacExtend",
                        "88696fce058e7a60782126925d3de775d2410af0"
                    ]
                },
                {
                    "command": [
                        "elim H20; clear H20; intros.",
                        "VernacExtend",
                        "25d631f98d84bb58e93f7962fe6d0abf7c5bee12"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1).",
                        "VernacExtend",
                        "7d21e857286bea1a21397193515909f50f35a1bf"
                    ]
                },
                {
                    "command": [
                        "intro H22.",
                        "VernacExtend",
                        "471fed4e3acc94f8b858b6a5bfd767aa3f32e539"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2)).",
                        "VernacExtend",
                        "297533d9993409f9a74300c834808d908c3952e9"
                    ]
                },
                {
                    "command": [
                        "intro H23.",
                        "VernacExtend",
                        "27cf1eb2a9f42bc55b51e28871f128ec3190b7dc"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1 -> is_internal_node (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2) -> max (nat_of_N (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1)) (nat_of_N (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2))) < bound').",
                        "VernacExtend",
                        "45814f8fe04dab4ae0df9c8d7075363d544df277"
                    ]
                },
                {
                    "command": [
                        "intro H24.",
                        "VernacExtend",
                        "1f66b1b825d93042ea5224c105ce756edce8c1e1"
                    ]
                },
                {
                    "command": [
                        "cut (BDDconfig_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) /\\ BDDor_memo_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (snd (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) /\\ config_node_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) /\\ nodes_preserved (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) /\\ BDDvar_le (var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))) (BDDvar_max (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1) (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2))) = true /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))) (bool_fun_or (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1) (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2)))).",
                        "VernacExtend",
                        "af8e3c4255f84efa599b595b9ee3db5581dd68a3"
                    ]
                },
                {
                    "command": [
                        "intro H25.",
                        "VernacExtend",
                        "1242b520804e036a43df22fa2fe21de5dbb0514e"
                    ]
                },
                {
                    "command": [
                        "elim H25; clear H25; intros.",
                        "VernacExtend",
                        "378d9101d475e5a40e7d723d44549330cc4eb8b7"
                    ]
                },
                {
                    "command": [
                        "elim H26; clear H26; intros.",
                        "VernacExtend",
                        "f8f496e9394be3d2b00e5d47b6e7506e64462199"
                    ]
                },
                {
                    "command": [
                        "elim H27; clear H27; intros.",
                        "VernacExtend",
                        "ce40a9b817a84c99cdc95b2e1a8d2c312d76464e"
                    ]
                },
                {
                    "command": [
                        "elim H28; clear H28; intros.",
                        "VernacExtend",
                        "da81581ebe6f54800c73dbbebb91cccedf2890cf"
                    ]
                },
                {
                    "command": [
                        "elim H29; clear H29; intros.",
                        "VernacExtend",
                        "239203a62bdfb5ad3857464e5e9205b8f7b075d2"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))).",
                        "VernacExtend",
                        "fad9666e066210be77a6e955f1eb80d20408f649"
                    ]
                },
                {
                    "command": [
                        "intro H31.",
                        "VernacExtend",
                        "a749096845d230d6eed3060e63d1491fd760aa87"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) -> BDDcompare (var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))) (var cfg node2) = Datatypes.Lt).",
                        "VernacExtend",
                        "d493d57b9cd360b036745bc5d711e6b3750d79b6"
                    ]
                },
                {
                    "command": [
                        "intro H32.",
                        "VernacExtend",
                        "3dbf8efba1716fda1ce8652f6197483f11edbd2e"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) -> BDDcompare (var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))) (var cfg node2) = Datatypes.Lt).",
                        "VernacExtend",
                        "0b5869571f20b4f58081dd20f57e936c5b9f99ec"
                    ]
                },
                {
                    "command": [
                        "intro H33.",
                        "VernacExtend",
                        "2b29c48c9bf0b676f36a586228e09fb5c938f091"
                    ]
                },
                {
                    "command": [
                        "cut (BDDconfig_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) /\\ (Neqb (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) = false -> MapGet _ (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))))) (snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) = Some (var cfg node2, (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')), fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) /\\ (Neqb (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) = true -> snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))) = fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) /\\ (forall (a l' r' : ad) (x' : BDDvar), (MapGet _ (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))))) a = Some (x', (l', r')) -> MapGet _ (fst (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) a = Some (x', (l', r')) \\/ snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))) = a) /\\ (MapGet _ (fst (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) a = Some (x', (l', r')) -> MapGet _ (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))))) a = Some (x', (l', r')))) /\\ node_OK (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))))) (snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))))).",
                        "VernacExtend",
                        "f27a9b26f64253970bdd022153d7754ebaf6a993"
                    ]
                },
                {
                    "command": [
                        "intro H34.",
                        "VernacExtend",
                        "b691ea8a2778e063d94b875bad8f7c250ba66886"
                    ]
                },
                {
                    "command": [
                        "elim H34; clear H34; intros.",
                        "VernacExtend",
                        "461883f759c9d68aba2ba6174a9fec866cdb9063"
                    ]
                },
                {
                    "command": [
                        "elim H35; clear H35; intros.",
                        "VernacExtend",
                        "696d26f9ddd71880a06d73afb5a30717ec752f23"
                    ]
                },
                {
                    "command": [
                        "elim H36; clear H36; intros.",
                        "VernacExtend",
                        "b633ee2af654686e361def033006955c85776880"
                    ]
                },
                {
                    "command": [
                        "elim H37; clear H37; intros.",
                        "VernacExtend",
                        "cf8a2f123e67978c834a002ef3c0b62f13cac051"
                    ]
                },
                {
                    "command": [
                        "cut (BDDconfig_OK (fst (BDDor_1 cfg memo node1 node2 bound))).",
                        "VernacExtend",
                        "e2db7fad08484256645d82b9dba352e9c0f7a36b"
                    ]
                },
                {
                    "command": [
                        "intro H39.",
                        "VernacExtend",
                        "925232329d0f8c5d00da50cb076a69b4accf54e3"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))).",
                        "VernacExtend",
                        "049e9c261c7d7a1e5ad0daee695c47d99fdc750e"
                    ]
                },
                {
                    "command": [
                        "intro H40.",
                        "VernacExtend",
                        "969bef4669167a481de1cd14f432fd096dbf60db"
                    ]
                },
                {
                    "command": [
                        "cut (nodes_preserved cfg (fst (BDDor_1 cfg memo node1 node2 bound))).",
                        "VernacExtend",
                        "ff3d92c7346ce10b85556691fcf1c33b92e6b104"
                    ]
                },
                {
                    "command": [
                        "intro H41.",
                        "VernacExtend",
                        "a3c4b72ca8d807bfff74bb21acfc477d16da7f5c"
                    ]
                },
                {
                    "command": [
                        "cut (BDDvar_le (var (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))) (BDDvar_max (var cfg node1) (var cfg node2)) = true).",
                        "VernacExtend",
                        "b19db2cad86ae9099c0e75a84338ab7f28c1aa1f"
                    ]
                },
                {
                    "command": [
                        "intro H42.",
                        "VernacExtend",
                        "634f36c60e4cfc6109f27ad7a2f8a10fd9bd1659"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2))).",
                        "VernacExtend",
                        "475bdf4b4ee467dd9c8632331ce9920cb3743ac1"
                    ]
                },
                {
                    "command": [
                        "intro H43.",
                        "VernacExtend",
                        "131e86db72429f6d1425c057170e9e6bb449025c"
                    ]
                },
                {
                    "command": [
                        "cut (BDDor_memo_OK (fst (BDDor_1 cfg memo node1 node2 bound)) (snd (snd (BDDor_1 cfg memo node1 node2 bound)))).",
                        "VernacExtend",
                        "ad84130bf0a933ee98fdce7e5cbf1fa39eaf33c0"
                    ]
                },
                {
                    "command": [
                        "intro H44.",
                        "VernacExtend",
                        "22b50c77d42c7e59090614c3ad70855f42016867"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in |- *.",
                        "VernacExtend",
                        "1895dafe933a9a3c710b7210e857ff81584c72b1"
                    ]
                },
                {
                    "command": [
                        "intros node1' node2' node.",
                        "VernacExtend",
                        "0e5a24c25590a06d0039f131949ca8c0775ca9a4"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
                        "VernacExtend",
                        "17cb5e18fed38710026ee8a5f40e375b2bbc8a97"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_memo_lookup_semantics (snd (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))) node1 node2 (snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node1' node2') .",
                        "VernacExtend",
                        "9637e05a83c0e3b2ce9713ed62b81fdf18aa04da"
                    ]
                },
                {
                    "command": [
                        "elim (sumbool_of_bool (Neqb node1 node1' && Neqb node2 node2')); intro y2.",
                        "VernacExtend",
                        "c7a0bb2c0a2d245a65ca6225c59099001464b3ed"
                    ]
                },
                {
                    "command": [
                        "rewrite y2.",
                        "VernacExtend",
                        "2442b677655ba21bf3c218983e052542c9e239bf"
                    ]
                },
                {
                    "command": [
                        "cut (node1 = node1').",
                        "VernacExtend",
                        "ba86a63e7eded5e460a24a2fb0586b6d67370c02"
                    ]
                },
                {
                    "command": [
                        "cut (node2 = node2').",
                        "VernacExtend",
                        "bb1a49fefb3c5885f25efbaa7ef5bc5e81050b04"
                    ]
                },
                {
                    "command": [
                        "intro H44.",
                        "VernacExtend",
                        "22b50c77d42c7e59090614c3ad70855f42016867"
                    ]
                },
                {
                    "command": [
                        "intro H45.",
                        "VernacExtend",
                        "ec486eede2396f7feff735fff7c53325bf0775eb"
                    ]
                },
                {
                    "command": [
                        "intro H46.",
                        "VernacExtend",
                        "6821aaf98c4b8d47f3a4a14a7c5e2ad7ed1299e4"
                    ]
                },
                {
                    "command": [
                        "injection H46.",
                        "VernacExtend",
                        "c72eaedffbf319e4f6ad80b0a68c306175d07ad4"
                    ]
                },
                {
                    "command": [
                        "clear H46; intros.",
                        "VernacExtend",
                        "8644f0f7d170f3d16c85495a5a30fc53d2297e42"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node1').",
                        "VernacExtend",
                        "14389b0fa475fff13e5f72203d763e29d85873f2"
                    ]
                },
                {
                    "command": [
                        "intro H47.",
                        "VernacExtend",
                        "600503429ff475ada409f7d978f24a0998edb6f9"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node2').",
                        "VernacExtend",
                        "2d1e7a1d7ecadcef3ee75b153cf5a216e619e0fe"
                    ]
                },
                {
                    "command": [
                        "intro H48.",
                        "VernacExtend",
                        "81d6e1f7bc7b7141ceeaee2efa8eed9b9cd855d5"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node).",
                        "VernacExtend",
                        "a6fcec6736f8bb87f784f81c98f12baa9006e2e3"
                    ]
                },
                {
                    "command": [
                        "intro H49.",
                        "VernacExtend",
                        "83ebbf41aa1f92b054ed8655b4cd5ebe2c8c2bc9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H44; rewrite <- H45.",
                        "VernacExtend",
                        "c6cc36870ee957bc26018c4ed4ebd5f407bf5708"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node1 = var cfg node1).",
                        "VernacExtend",
                        "9d06ef930d84346736cda789a6cf970229f18218"
                    ]
                },
                {
                    "command": [
                        "intro H50.",
                        "VernacExtend",
                        "de211d6301ec352cee32f7a9b748cdad196fcd79"
                    ]
                },
                {
                    "command": [
                        "rewrite H50.",
                        "VernacExtend",
                        "4d457004df802cf1d3bd517b926eb91552323a2a"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node2 = var cfg node2).",
                        "VernacExtend",
                        "8c44014dae8ac707fd349484a312f3f7c5d36741"
                    ]
                },
                {
                    "command": [
                        "intro H51.",
                        "VernacExtend",
                        "74ff7e7a184e5fd9c34c7633098da7f5890f5f5a"
                    ]
                },
                {
                    "command": [
                        "rewrite H51.",
                        "VernacExtend",
                        "48b1b2eadf05628eb657c35471ab0afab3812915"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H46.",
                        "VernacExtend",
                        "f57c3ee141300d48c1c6df52bb56e7bd0c4240d0"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H42.",
                        "VernacExtend",
                        "a451db7b5e269ae70a15c3044be26df53fc0d2ac"
                    ]
                },
                {
                    "command": [
                        "simpl in H42.",
                        "VernacExtend",
                        "50099696f1ffb9b79dab5b87fc20eb2b6848d0d0"
                    ]
                },
                {
                    "command": [
                        "exact H42.",
                        "VernacExtend",
                        "ac52f7280cdca1b8f93a929d26f49e5a6a6ad739"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
                        "VernacExtend",
                        "36c8f29131702f7ba9da6e6133bdaf2e13549520"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var.",
                        "VernacExtend",
                        "b23a251fc935c1f2c90dd166371d3411f44d4a0f"
                    ]
                },
                {
                    "command": [
                        "exact H41.",
                        "VernacExtend",
                        "d9d5b5b5dbb07c570005e102e3268b23970410d6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var.",
                        "VernacExtend",
                        "b23a251fc935c1f2c90dd166371d3411f44d4a0f"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
                        "VernacExtend",
                        "36c8f29131702f7ba9da6e6133bdaf2e13549520"
                    ]
                },
                {
                    "command": [
                        "simpl in H39; exact H41.",
                        "VernacExtend",
                        "e76bf83811575619a3e0bdd3db2a024034abda35"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H44; rewrite <- H45.",
                        "VernacExtend",
                        "c6cc36870ee957bc26018c4ed4ebd5f407bf5708"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H46.",
                        "VernacExtend",
                        "f57c3ee141300d48c1c6df52bb56e7bd0c4240d0"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2)).",
                        "VernacExtend",
                        "3920391a5dc2048f5647c0811692bd0f2abfabab"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H43.",
                        "VernacExtend",
                        "73d572bb916974ad2cfebd4a278c080b6c600cc5"
                    ]
                },
                {
                    "command": [
                        "simpl in H43; exact H43.",
                        "VernacExtend",
                        "a22bb9683ce82acc8b65f1b72b68a734a6c28174"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_or_preserves_eq.",
                        "VernacExtend",
                        "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
                        "VernacExtend",
                        "36c8f29131702f7ba9da6e6133bdaf2e13549520"
                    ]
                },
                {
                    "command": [
                        "exact H41.",
                        "VernacExtend",
                        "d9d5b5b5dbb07c570005e102e3268b23970410d6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
                        "VernacExtend",
                        "36c8f29131702f7ba9da6e6133bdaf2e13549520"
                    ]
                },
                {
                    "command": [
                        "exact H41.",
                        "VernacExtend",
                        "d9d5b5b5dbb07c570005e102e3268b23970410d6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H46.",
                        "VernacExtend",
                        "f57c3ee141300d48c1c6df52bb56e7bd0c4240d0"
                    ]
                },
                {
                    "command": [
                        "exact H38.",
                        "VernacExtend",
                        "24fdc42b30a842dd3a1bf28e27bc0d145ef321d4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H44.",
                        "VernacExtend",
                        "523ad9dceac44396217d74c2dbab0e149ea3e755"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')).",
                        "VernacExtend",
                        "3d29a15e20e9c28a33425781ca914f5282f09de4"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := fst (BDDor_1 cfg memo node1 (low cfg node2) bound')).",
                        "VernacExtend",
                        "1e77a26e37bacd0d07143931ccd2cd1327ea63ee"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := cfg).",
                        "VernacExtend",
                        "7e5df592869ceccf5be79ad15e4020d4223187aa"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H45.",
                        "VernacExtend",
                        "463faf4696bbb4acf0022c082b2943caf519f236"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := cfg).",
                        "VernacExtend",
                        "7e5df592869ceccf5be79ad15e4020d4223187aa"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
                        "VernacExtend",
                        "36c8f29131702f7ba9da6e6133bdaf2e13549520"
                    ]
                },
                {
                    "command": [
                        "exact H41.",
                        "VernacExtend",
                        "d9d5b5b5dbb07c570005e102e3268b23970410d6"
                    ]
                },
                {
                    "command": [
                        "apply Neqb_complete.",
                        "VernacExtend",
                        "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (andb_prop (Neqb node1 node1') (Neqb node2 node2') y2)).",
                        "VernacExtend",
                        "45b22921b423a901a6be24829f78c9c88b1a3258"
                    ]
                },
                {
                    "command": [
                        "apply Neqb_complete.",
                        "VernacExtend",
                        "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (andb_prop (Neqb node1 node1') (Neqb node2 node2') y2)).",
                        "VernacExtend",
                        "95f2a36dfd168f101bbd9ed03968d7e02c036aca"
                    ]
                },
                {
                    "command": [
                        "rewrite y2.",
                        "VernacExtend",
                        "2442b677655ba21bf3c218983e052542c9e239bf"
                    ]
                },
                {
                    "command": [
                        "intros H44.",
                        "VernacExtend",
                        "b10961f3bdc929de8ebb161ce5a9c0e27ff16caa"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')).",
                        "VernacExtend",
                        "3d29a15e20e9c28a33425781ca914f5282f09de4"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in H26.",
                        "VernacExtend",
                        "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (H26 node1' node2' node H44)).",
                        "VernacExtend",
                        "2030fbef991de5a0f5f13ab0852b2d680b107a4f"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')).",
                        "VernacExtend",
                        "3d29a15e20e9c28a33425781ca914f5282f09de4"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in H26.",
                        "VernacExtend",
                        "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (H26 node1' node2' node H44))).",
                        "VernacExtend",
                        "6875b88d9bbbecee8646a84c7697c1131ccdb27c"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')).",
                        "VernacExtend",
                        "3d29a15e20e9c28a33425781ca914f5282f09de4"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in H26.",
                        "VernacExtend",
                        "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (proj2 (H26 node1' node2' node H44)))).",
                        "VernacExtend",
                        "afada985ff7f2e7c1d82adb509cab3f7e84e987a"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node = var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) node).",
                        "VernacExtend",
                        "29adb3564c017dfaa239ea486214240cf7f6b125"
                    ]
                },
                {
                    "command": [
                        "intro H45.",
                        "VernacExtend",
                        "ec486eede2396f7feff735fff7c53325bf0775eb"
                    ]
                },
                {
                    "command": [
                        "rewrite H45.",
                        "VernacExtend",
                        "654754dcc7a98b3a46bee89cebef9d92f3835080"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node1' = var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) node1').",
                        "VernacExtend",
                        "07297b93248d14c3347124f7329ccdffb6d2d740"
                    ]
                },
                {
                    "command": [
                        "intro H46.",
                        "VernacExtend",
                        "6821aaf98c4b8d47f3a4a14a7c5e2ad7ed1299e4"
                    ]
                },
                {
                    "command": [
                        "rewrite H46.",
                        "VernacExtend",
                        "bc71364af929d23beead6694a00c2c61fc8b32ec"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (var cfg node2) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound'))))) node2' = var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) node2').",
                        "VernacExtend",
                        "783201ff4c974e2d392119c83d443b88d18ba542"
                    ]
                },
                {
                    "command": [
                        "intro H47.",
                        "VernacExtend",
                        "600503429ff475ada409f7d978f24a0998edb6f9"
                    ]
                },
                {
                    "command": [
                        "rewrite H47.",
                        "VernacExtend",
                        "359985ef01b573ff9f51f7759e620b37f608e41d"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in H26.",
                        "VernacExtend",
                        "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (proj2 (proj2 (H26 node1' node2' node H44))))).",
                        "VernacExtend",
                        "ec944f8878b2298e77f5d52588d26f49aa9bf675"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in H26.",
                        "VernacExtend",
                        "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (H26 node1' node2' node H44))).",
                        "VernacExtend",
                        "6875b88d9bbbecee8646a84c7697c1131ccdb27c"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes; assumption.",
                        "VernacExtend",
                        "ac10650a004b96a9df5c8f1f9d5ad0ba52a11df8"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in H26.",
                        "VernacExtend",
                        "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (H26 node1' node2' node H44)).",
                        "VernacExtend",
                        "2030fbef991de5a0f5f13ab0852b2d680b107a4f"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')).",
                        "VernacExtend",
                        "eb37972b241d725dad2e843aa8b1007cf1974f74"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (proj2 (H26 node1' node2' node H44)))).",
                        "VernacExtend",
                        "afada985ff7f2e7c1d82adb509cab3f7e84e987a"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) node).",
                        "VernacExtend",
                        "c288f6dfb763ce63370ca0b753c99503387b0272"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (proj2 (H26 node1' node2' node H44)))).",
                        "VernacExtend",
                        "afada985ff7f2e7c1d82adb509cab3f7e84e987a"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) node1') (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) node2')).",
                        "VernacExtend",
                        "9dafca44e33a2892754860f3d86e9888607de0ba"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (proj2 (proj2 (proj2 (H26 node1' node2' node H44))))).",
                        "VernacExtend",
                        "cd27babb608ea0947a9aa67020e89ae87c2f5360"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_or_preserves_eq.",
                        "VernacExtend",
                        "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (H26 node1' node2' node H44)).",
                        "VernacExtend",
                        "2030fbef991de5a0f5f13ab0852b2d680b107a4f"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (H26 node1' node2' node H44))).",
                        "VernacExtend",
                        "6875b88d9bbbecee8646a84c7697c1131ccdb27c"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_if (var cfg node2) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg (high cfg node2))) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg (low cfg node2)))).",
                        "VernacExtend",
                        "93253d5841b32ca97f78616619404c2b9e20d22c"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
                        "VernacExtend",
                        "17cb5e18fed38710026ee8a5f40e375b2bbc8a97"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_if (var cfg node2) (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))) (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))))).",
                        "VernacExtend",
                        "e06c97e9977f4c5cb8393d76e0983354291a694a"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_bool_fun.",
                        "VernacExtend",
                        "f4c92828105114f8609f253aff654bee7db1e563"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_if_preserves_eq.",
                        "VernacExtend",
                        "1c2a4f5b6b88ee3776baaeedd296c8f06bd07398"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1) (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2))).",
                        "VernacExtend",
                        "d4c93a6588f090598651619d15e9f9963440d422"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_or_preserves_eq.",
                        "VernacExtend",
                        "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))).",
                        "VernacExtend",
                        "879ff2dfe044b1aa0a5d94136c2c0ea3b231a613"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_if (var cfg node2) (bool_fun_of_BDD cfg (high cfg node2)) (bool_fun_of_BDD cfg (low cfg node2)))).",
                        "VernacExtend",
                        "5e4ce3992f39a29bf285c41fb260952fbdb2ba87"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_if_lemma_3.",
                        "VernacExtend",
                        "275276888f9a2716aaff754ee6b9d1eca60e8dde"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_or_preserves_eq.",
                        "VernacExtend",
                        "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *.",
                        "VernacExtend",
                        "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_if_lemma_2.",
                        "VernacExtend",
                        "3923b51783181711f5a75b695553d946c09407ac"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold BDDvar_le in |- *.",
                        "VernacExtend",
                        "005e717f8bf9be29377e3bb7cc34ab759881c776"
                    ]
                },
                {
                    "command": [
                        "apply Nleb_trans with (b := var cfg node2).",
                        "VernacExtend",
                        "2c065f37020194bce98818f30078504eae536ac7"
                    ]
                },
                {
                    "command": [
                        "fold BDDvar_le in |- *.",
                        "VernacExtend",
                        "fe3f07c3cdd3fb7f5e2561f5728a0065945ddd52"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
                        "VernacExtend",
                        "17cb5e18fed38710026ee8a5f40e375b2bbc8a97"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_var_order.",
                        "VernacExtend",
                        "686ced47ac195b5ff5b6a7dd3559d3fedd4639f1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "fold BDDvar_le in |- *.",
                        "VernacExtend",
                        "fe3f07c3cdd3fb7f5e2561f5728a0065945ddd52"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_le_max_2.",
                        "VernacExtend",
                        "399fbf5013a50e6589d650e7e632283c66bb0d3b"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_trans with (cfg2 := fst (BDDor_1 cfg memo node1 (low cfg node2) bound')).",
                        "VernacExtend",
                        "62faee2b9431ebff0d8ddf641083c8206a3f013d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_trans with (cfg2 := fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')).",
                        "VernacExtend",
                        "c425f9d1062a91dd7824c78689717ff7e70b3798"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
                        "VernacExtend",
                        "17cb5e18fed38710026ee8a5f40e375b2bbc8a97"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
                        "VernacExtend",
                        "17cb5e18fed38710026ee8a5f40e375b2bbc8a97"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exact H38.",
                        "VernacExtend",
                        "24fdc42b30a842dd3a1bf28e27bc0d145ef321d4"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_2 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
                        "VernacExtend",
                        "17cb5e18fed38710026ee8a5f40e375b2bbc8a97"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exact H34.",
                        "VernacExtend",
                        "66f4fdd99b5f2a78cd57b5c0768878d81ff77563"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_semantics.",
                        "VernacExtend",
                        "8e0da208880e09b5388444c98fddbbedfa0d0a0f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros xl ll rl H34.",
                        "VernacExtend",
                        "537aac98a218b828cd27abe360639396b95f441e"
                    ]
                },
                {
                    "command": [
                        "cut (xl = var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))).",
                        "VernacExtend",
                        "8166f9d0b16802520774843ec6c9d198cd2ee520"
                    ]
                },
                {
                    "command": [
                        "intro H35.",
                        "VernacExtend",
                        "d21704803fd5da5ea70f7ff3b8d3b38fc1246374"
                    ]
                },
                {
                    "command": [
                        "rewrite H35.",
                        "VernacExtend",
                        "cf9b5433432199ab59221776153c00b2712ab58b"
                    ]
                },
                {
                    "command": [
                        "apply H32.",
                        "VernacExtend",
                        "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
                    ]
                },
                {
                    "command": [
                        "split with xl.",
                        "VernacExtend",
                        "1f25a32fbded523e82de370f5d84686bce391be3"
                    ]
                },
                {
                    "command": [
                        "split with ll.",
                        "VernacExtend",
                        "bc0d59bd8d3b100edd1a8952c150c110d509a673"
                    ]
                },
                {
                    "command": [
                        "split with rl.",
                        "VernacExtend",
                        "1352cf957ea14023a125eb4591f4ef4bb8b2d9ba"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold var in |- *.",
                        "VernacExtend",
                        "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
                    ]
                },
                {
                    "command": [
                        "rewrite H34.",
                        "VernacExtend",
                        "754ff9e53df6c5b34e6f0ec13124cc12ead4f10c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros xr lr rr H34.",
                        "VernacExtend",
                        "ffe28f8243910447490a69e84c9ef12a3e89ed57"
                    ]
                },
                {
                    "command": [
                        "cut (xr = var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')))).",
                        "VernacExtend",
                        "580c3363aba16e82b6d68949fe34dfc6a686481a"
                    ]
                },
                {
                    "command": [
                        "intro H35.",
                        "VernacExtend",
                        "d21704803fd5da5ea70f7ff3b8d3b38fc1246374"
                    ]
                },
                {
                    "command": [
                        "rewrite H35.",
                        "VernacExtend",
                        "cf9b5433432199ab59221776153c00b2712ab58b"
                    ]
                },
                {
                    "command": [
                        "apply H33.",
                        "VernacExtend",
                        "6386d9775de9aeb848361511299770f2029fa22e"
                    ]
                },
                {
                    "command": [
                        "split with xr.",
                        "VernacExtend",
                        "921285c6f7c1334c015bf39bda0f33409dcee228"
                    ]
                },
                {
                    "command": [
                        "split with lr.",
                        "VernacExtend",
                        "a7813d02a02336d1650e902916d97e8904113a9e"
                    ]
                },
                {
                    "command": [
                        "split with rr.",
                        "VernacExtend",
                        "037d912fc81db603e97b1e39ae32e4d2d95e0b6e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold var in |- *; rewrite H34; reflexivity.",
                        "VernacExtend",
                        "f01ea5d4d99a970bd2aa3979c681b15e2308be00"
                    ]
                },
                {
                    "command": [
                        "intro H33.",
                        "VernacExtend",
                        "2b29c48c9bf0b676f36a586228e09fb5c938f091"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_le_INFERIEUR_1 with (y := BDDvar_max (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1) (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2))).",
                        "VernacExtend",
                        "ca3f96ec99d54192411ad73e500773b5b21c4af8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1 = var cfg node1).",
                        "VernacExtend",
                        "38a914176a47ab55ec19234e91d611570f327716"
                    ]
                },
                {
                    "command": [
                        "intro H34.",
                        "VernacExtend",
                        "b691ea8a2778e063d94b875bad8f7c250ba66886"
                    ]
                },
                {
                    "command": [
                        "rewrite H34.",
                        "VernacExtend",
                        "754ff9e53df6c5b34e6f0ec13124cc12ead4f10c"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2) = var cfg (high cfg node2)).",
                        "VernacExtend",
                        "49d8a20f228f8d65be483ec8628e2b2135c1c5f0"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H35.",
                        "VernacExtend",
                        "ddc414a3167422d7f5aec5e34f6d8c1d6d6e292c"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high_2.",
                        "VernacExtend",
                        "d6dbe58df1543f5ed007d80259ebb660009eefda"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro H32.",
                        "VernacExtend",
                        "3dbf8efba1716fda1ce8652f6197483f11edbd2e"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDor_1 (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (snd (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) node1 (high cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound'))) = var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (fst (snd (BDDor_1 cfg memo node1 (low cfg node2) bound')))).",
                        "VernacExtend",
                        "0c1972e148d67edc339748740567eecd872e8693"
                    ]
                },
                {
                    "command": [
                        "intro H33.",
                        "VernacExtend",
                        "2b29c48c9bf0b676f36a586228e09fb5c938f091"
                    ]
                },
                {
                    "command": [
                        "rewrite H33.",
                        "VernacExtend",
                        "843203e5d023b7f527f482879145e736e392695d"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_le_INFERIEUR_1 with (y := BDDvar_max (var cfg node1) (var cfg (low cfg node2))).",
                        "VernacExtend",
                        "9b65a00c2d03227efa164745a812803af78361ac"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low_2.",
                        "VernacExtend",
                        "1bb5c51478fdc6691e3e691efcfb542772f59446"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := fst (BDDor_1 cfg memo node1 (low cfg node2) bound')).",
                        "VernacExtend",
                        "1e77a26e37bacd0d07143931ccd2cd1327ea63ee"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "rewrite y0; unfold lt in |- *; apply le_n.",
                        "VernacExtend",
                        "6d3109cb29d0a4568cb8f1214365a788ca0c0b81"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros H24 H25.",
                        "VernacExtend",
                        "f0139375754e77c6551433b289b3c2ce0ab407a4"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) node1 = var cfg node1).",
                        "VernacExtend",
                        "38a914176a47ab55ec19234e91d611570f327716"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H26.",
                        "VernacExtend",
                        "c571d72337fd1e65b60b120b43a734528ed857d3"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDor_1 cfg memo node1 (low cfg node2) bound')) (high cfg node2) = var cfg (high cfg node2)).",
                        "VernacExtend",
                        "49d8a20f228f8d65be483ec8628e2b2135c1c5f0"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H27.",
                        "VernacExtend",
                        "4d0b77b04ea7c80b9014cd5e00d25171c4a7361d"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans_1 with (y := nat_of_N (var cfg node2)).",
                        "VernacExtend",
                        "94c37caac0e53a52241df78e5bd1513ad22d7512"
                    ]
                },
                {
                    "command": [
                        "apply lt_max_nat_of_N.",
                        "VernacExtend",
                        "c7cef12824f3437cc7339d2cc57ccbca0e85e0ae"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high_2.",
                        "VernacExtend",
                        "d6dbe58df1543f5ed007d80259ebb660009eefda"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- y0.",
                        "VernacExtend",
                        "bea4b18ce4700c623c0ef6498ec62f190e4c3d09"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (m := max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2))).",
                        "VernacExtend",
                        "0cfe0b0ef8e5338a11cc757bf2c46d247697cc9f"
                    ]
                },
                {
                    "command": [
                        "apply le_nat_of_N_max.",
                        "VernacExtend",
                        "fb2df83f164e1e4f092e3665b77429a35a877f89"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_le_max_2.",
                        "VernacExtend",
                        "399fbf5013a50e6589d650e7e632283c66bb0d3b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := cfg).",
                        "VernacExtend",
                        "7e5df592869ceccf5be79ad15e4020d4223187aa"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := cfg).",
                        "VernacExtend",
                        "7e5df592869ceccf5be79ad15e4020d4223187aa"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "rewrite y0; unfold lt in |- *; apply le_n.",
                        "VernacExtend",
                        "6d3109cb29d0a4568cb8f1214365a788ca0c0b81"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros H15 H16.",
                        "VernacExtend",
                        "011f2cbfd8cab00298b47ef7500b9c86f8300c26"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans_1 with (y := nat_of_N (var cfg node2)).",
                        "VernacExtend",
                        "94c37caac0e53a52241df78e5bd1513ad22d7512"
                    ]
                },
                {
                    "command": [
                        "apply lt_max_nat_of_N.",
                        "VernacExtend",
                        "c7cef12824f3437cc7339d2cc57ccbca0e85e0ae"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low_2.",
                        "VernacExtend",
                        "1bb5c51478fdc6691e3e691efcfb542772f59446"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- y0.",
                        "VernacExtend",
                        "bea4b18ce4700c623c0ef6498ec62f190e4c3d09"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (m := max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2))).",
                        "VernacExtend",
                        "0cfe0b0ef8e5338a11cc757bf2c46d247697cc9f"
                    ]
                },
                {
                    "command": [
                        "apply le_nat_of_N_max.",
                        "VernacExtend",
                        "fb2df83f164e1e4f092e3665b77429a35a877f89"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_le_max_2.",
                        "VernacExtend",
                        "399fbf5013a50e6589d650e7e632283c66bb0d3b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}