{
    "filename": "BDDdummy_lemma_4.v",
    "coq_project": "bdds",
    "vernac_cmds": [
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Require Import Sumbool.",
            "VernacRequire",
            "555a25fa361ace801dc7927d5872def951dfbee5"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import ZArith NArith Nnat Ndec Ndigits.",
            "VernacRequire",
            "c2baea4a0fda1451ad00e307f8a2db5ff87567aa"
        ],
        [
            "From IntMap Require Import Allmaps.",
            "VernacRequire",
            "d3a19fbc306700804973888ef7ccf716277e64fb"
        ],
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Require Import BDDvar_ad_nat.",
            "VernacRequire",
            "ecfee313280da558d300523c60b3cd65e5165656"
        ],
        [
            "Require Import bdd1.",
            "VernacRequire",
            "35415fd818f4fbf6a7da419d967a777932ddb1b7"
        ],
        [
            "Require Import bdd2.",
            "VernacRequire",
            "fc7fe718a45de74f8628c84379872e19aab95145"
        ],
        [
            "Require Import bdd3.",
            "VernacRequire",
            "95f3e899c409f5147a2e5ffb6cff783e84759a38"
        ],
        [
            "Require Import bdd4.",
            "VernacRequire",
            "b5ef55533b9f5bd8b43ccb8df189a285dcb3ba46"
        ],
        [
            "Require Import bdd5_1.",
            "VernacRequire",
            "4c8c2f942b9627ed770481f7d36a53832d08f61c"
        ],
        [
            "Require Import bdd5_2.",
            "VernacRequire",
            "72388d3e5d26c2c3f56663e5bf381713ca09cb1f"
        ],
        [
            "Require Import bdd6.",
            "VernacRequire",
            "286d35c5775bfdf01fd3faeac9f6b0e5d419a507"
        ],
        [
            "Require Import bdd7.",
            "VernacRequire",
            "9d31e7215b7376e06b848ded02ec0d224ac8ce88"
        ],
        [
            "Lemma BDDdummy_lemma_4 : forall bound : nat, (forall m : nat, m < bound -> forall (cfg : BDDconfig) (node1 node2 : ad) (memo : BDDor_memo), BDDconfig_OK cfg -> BDDor_memo_OK cfg memo -> config_node_OK cfg node1 -> config_node_OK cfg node2 -> (is_internal_node cfg node1 -> is_internal_node cfg node2 -> max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2)) < m) -> BDDconfig_OK (fst (BDDor_1 cfg memo node1 node2 m)) /\\ BDDor_memo_OK (fst (BDDor_1 cfg memo node1 node2 m)) (snd (snd (BDDor_1 cfg memo node1 node2 m))) /\\ config_node_OK (fst (BDDor_1 cfg memo node1 node2 m)) (fst (snd (BDDor_1 cfg memo node1 node2 m))) /\\ nodes_preserved cfg (fst (BDDor_1 cfg memo node1 node2 m)) /\\ BDDvar_le (var (fst (BDDor_1 cfg memo node1 node2 m)) (fst (snd (BDDor_1 cfg memo node1 node2 m)))) (BDDvar_max (var cfg node1) (var cfg node2)) = true /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 node2 m)) (fst (snd (BDDor_1 cfg memo node1 node2 m)))) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2))) -> forall (cfg : BDDconfig) (node1 node2 : ad) (memo : BDDor_memo), BDDconfig_OK cfg -> BDDor_memo_OK cfg memo -> config_node_OK cfg node1 -> config_node_OK cfg node2 -> (is_internal_node cfg node1 -> is_internal_node cfg node2 -> max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2)) < bound) -> BDDor_memo_lookup memo node1 node2 = None -> in_dom (BDDvar * (ad * ad)) node1 (fst cfg) = true -> node2 = BDDone \\/ in_dom (BDDvar * (ad * ad)) node2 (fst cfg) = true -> is_internal_node cfg node1 -> in_dom (BDDvar * (ad * ad)) node2 (fst cfg) = true -> is_internal_node cfg node2 -> forall bound' : nat, bound = S bound' -> max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2)) < bound -> BDDcompare (var cfg node1) (var cfg node2) = Datatypes.Gt -> BDDconfig_OK (fst (BDDor_1 cfg memo node1 node2 bound)) /\\ BDDor_memo_OK (fst (BDDor_1 cfg memo node1 node2 bound)) (snd (snd (BDDor_1 cfg memo node1 node2 bound))) /\\ config_node_OK (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound))) /\\ nodes_preserved cfg (fst (BDDor_1 cfg memo node1 node2 bound)) /\\ BDDvar_le (var (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))) (BDDvar_max (var cfg node1) (var cfg node2)) = true /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2)).",
            "VernacStartTheoremProof",
            "fc8373d7228cba5d067b7177efacc04f637c391b"
        ],
        [
            "intros bound H cfg node1 node2 memo H0 H1 H2 H3 H4 y H5 H6 H8 H9 H7 bound' y0 H10 y1.",
            "VernacExtend",
            "a8c9daa60b7335b66d70b77b9270cff62fc3f966"
        ],
        [
            "cut (BDDcompare (var cfg node2) (var cfg node1) = Datatypes.Lt).",
            "VernacExtend",
            "a1b78d300467457c69d72b8ac98a69309f86fed6"
        ],
        [
            "intro y11.",
            "VernacExtend",
            "166dfccba42ad90a5c175142cf413c241de37b80"
        ],
        [
            "cut (config_node_OK cfg (low cfg node1)).",
            "VernacExtend",
            "f6ecdc03c444efa62d5ff49dbd7078372e8a831e"
        ],
        [
            "cut (config_node_OK cfg (low cfg node2)).",
            "VernacExtend",
            "66bad16f9fa9c44ffc23ad37c8eb037535dd5b63"
        ],
        [
            "cut (config_node_OK cfg (high cfg node1)).",
            "VernacExtend",
            "a4f4f4b6e84a73a935f9a1dbf3617c1bc70d4192"
        ],
        [
            "cut (config_node_OK cfg (high cfg node2)).",
            "VernacExtend",
            "a57e2fb96e305116bafdd06b9b54000d3bf5c39d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (is_internal_node cfg (low cfg node1) -> is_internal_node cfg node2 -> max (nat_of_N (var cfg (low cfg node1))) (nat_of_N (var cfg node2)) < bound').",
            "VernacExtend",
            "55c4dc872e83b7eff6a825b388ce19c081a49e75"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (BDDconfig_OK (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) /\\ BDDor_memo_OK (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) /\\ config_node_OK (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) /\\ nodes_preserved cfg (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) /\\ BDDvar_le (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))) (BDDvar_max (var cfg (low cfg node1)) (var cfg node2)) = true /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))) (bool_fun_or (bool_fun_of_BDD cfg (low cfg node1)) (bool_fun_of_BDD cfg node2))).",
            "VernacExtend",
            "267b1d2070972941d0718b8552fbbff47343c241"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim H16; clear H16; intros.",
            "VernacExtend",
            "987fd0abe5abdff81668f10fed9d606523fadfda"
        ],
        [
            "elim H17; clear H17; intros.",
            "VernacExtend",
            "271a1d7d9f3390b5904324e763c676eaeeddfb34"
        ],
        [
            "elim H18; clear H18; intros.",
            "VernacExtend",
            "92928b13de3b5c9f46eddea905325f29d40d55f0"
        ],
        [
            "elim H19; clear H19; intros.",
            "VernacExtend",
            "88696fce058e7a60782126925d3de775d2410af0"
        ],
        [
            "elim H20; clear H20; intros.",
            "VernacExtend",
            "25d631f98d84bb58e93f7962fe6d0abf7c5bee12"
        ],
        [
            "cut (config_node_OK (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1)).",
            "VernacExtend",
            "196b2b6e5c11bf9be20f8bfe49dee35c9f924a62"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (config_node_OK (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2).",
            "VernacExtend",
            "9716372ac345046cdb31f961b8340004b4519ad9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (is_internal_node (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1) -> is_internal_node (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2 -> max (nat_of_N (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1))) (nat_of_N (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2)) < bound').",
            "VernacExtend",
            "e80540472dd2207802bb83d7d3152f17759c9cae"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (BDDconfig_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) /\\ BDDor_memo_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (snd (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) /\\ config_node_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) /\\ nodes_preserved (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) /\\ BDDvar_le (var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))) (BDDvar_max (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1)) (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2)) = true /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))) (bool_fun_or (bool_fun_of_BDD (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1)) (bool_fun_of_BDD (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2))).",
            "VernacExtend",
            "28be4e891dfaf6c4d32d232e964c71708af4a115"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim H25; clear H25; intros.",
            "VernacExtend",
            "378d9101d475e5a40e7d723d44549330cc4eb8b7"
        ],
        [
            "elim H26; clear H26; intros.",
            "VernacExtend",
            "f8f496e9394be3d2b00e5d47b6e7506e64462199"
        ],
        [
            "elim H27; clear H27; intros.",
            "VernacExtend",
            "ce40a9b817a84c99cdc95b2e1a8d2c312d76464e"
        ],
        [
            "elim H28; clear H28; intros.",
            "VernacExtend",
            "da81581ebe6f54800c73dbbebb91cccedf2890cf"
        ],
        [
            "elim H29; clear H29; intros.",
            "VernacExtend",
            "239203a62bdfb5ad3857464e5e9205b8f7b075d2"
        ],
        [
            "cut (config_node_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))).",
            "VernacExtend",
            "1e9fdaadcc55d606886bbdd293c6b97ddd5d9e0a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (is_internal_node (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) -> BDDcompare (var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))) (var cfg node1) = Datatypes.Lt).",
            "VernacExtend",
            "ad5f0ec27668b843f9337790baf69008bf8d5a5d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (is_internal_node (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) -> BDDcompare (var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))) (var cfg node1) = Datatypes.Lt).",
            "VernacExtend",
            "ee4fb80cd7666298812a87b3a95100f0f1aaa495"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (BDDconfig_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) /\\ (Neqb (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) = false -> MapGet _ (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))))) (snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) = Some (var cfg node1, (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')), fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) /\\ (Neqb (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) = true -> snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))) = fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) /\\ (forall (a l' r' : ad) (x' : BDDvar), (MapGet _ (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))))) a = Some (x', (l', r')) -> MapGet _ (fst (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) a = Some (x', (l', r')) \\/ snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))) = a) /\\ (MapGet _ (fst (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) a = Some (x', (l', r')) -> MapGet _ (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))))) a = Some (x', (l', r')))) /\\ node_OK (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))))) (snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))))).",
            "VernacExtend",
            "f319017a12b47fb1c3728827fcdc33b071c95da5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim H34; clear H34; intros.",
            "VernacExtend",
            "461883f759c9d68aba2ba6174a9fec866cdb9063"
        ],
        [
            "elim H35; clear H35; intros.",
            "VernacExtend",
            "696d26f9ddd71880a06d73afb5a30717ec752f23"
        ],
        [
            "elim H36; clear H36; intros.",
            "VernacExtend",
            "b633ee2af654686e361def033006955c85776880"
        ],
        [
            "elim H37; clear H37; intros.",
            "VernacExtend",
            "cf8a2f123e67978c834a002ef3c0b62f13cac051"
        ],
        [
            "cut (BDDconfig_OK (fst (BDDor_1 cfg memo node1 node2 bound))).",
            "VernacExtend",
            "e2db7fad08484256645d82b9dba352e9c0f7a36b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (config_node_OK (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))).",
            "VernacExtend",
            "049e9c261c7d7a1e5ad0daee695c47d99fdc750e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (nodes_preserved cfg (fst (BDDor_1 cfg memo node1 node2 bound))).",
            "VernacExtend",
            "ff3d92c7346ce10b85556691fcf1c33b92e6b104"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (BDDvar_le (var (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))) (BDDvar_max (var cfg node1) (var cfg node2)) = true).",
            "VernacExtend",
            "b19db2cad86ae9099c0e75a84338ab7f28c1aa1f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2))).",
            "VernacExtend",
            "475bdf4b4ee467dd9c8632331ce9920cb3743ac1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (BDDor_memo_OK (fst (BDDor_1 cfg memo node1 node2 bound)) (snd (snd (BDDor_1 cfg memo node1 node2 bound)))).",
            "VernacExtend",
            "ad84130bf0a933ee98fdce7e5cbf1fa39eaf33c0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold BDDor_memo_OK in |- *.",
            "VernacExtend",
            "1895dafe933a9a3c710b7210e857ff81584c72b1"
        ],
        [
            "intros node1' node2' node.",
            "VernacExtend",
            "0e5a24c25590a06d0039f131949ca8c0775ca9a4"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
            "VernacExtend",
            "470694e3862a58b37f992883db0ff499a51bb4d3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (BDDor_memo_lookup_semantics (snd (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) node1 node2 (snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node1' node2') .",
            "VernacExtend",
            "38b316497db780b3c02782e8756a1593a747263e"
        ],
        [
            "elim (sumbool_of_bool (Neqb node1 node1' && Neqb node2 node2')); intro y2.",
            "VernacExtend",
            "c7a0bb2c0a2d245a65ca6225c59099001464b3ed"
        ],
        [
            "rewrite y2.",
            "VernacExtend",
            "2442b677655ba21bf3c218983e052542c9e239bf"
        ],
        [
            "cut (node1 = node1').",
            "VernacExtend",
            "ba86a63e7eded5e460a24a2fb0586b6d67370c02"
        ],
        [
            "cut (node2 = node2').",
            "VernacExtend",
            "bb1a49fefb3c5885f25efbaa7ef5bc5e81050b04"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "injection H46.",
            "VernacExtend",
            "c72eaedffbf319e4f6ad80b0a68c306175d07ad4"
        ],
        [
            "clear H46; intros.",
            "VernacExtend",
            "8644f0f7d170f3d16c85495a5a30fc53d2297e42"
        ],
        [
            "cut (config_node_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node1').",
            "VernacExtend",
            "2005b282130aa3a46f42f4b33f9557e4e180caf4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (config_node_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node2').",
            "VernacExtend",
            "b768251cacf569e568681fab2a48b14c57bdd4af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (config_node_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node).",
            "VernacExtend",
            "031f1c4af84dfa72349ee7dd0a74dd542bcb748d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite <- H44; rewrite <- H45.",
            "VernacExtend",
            "c6cc36870ee957bc26018c4ed4ebd5f407bf5708"
        ],
        [
            "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node1 = var cfg node1).",
            "VernacExtend",
            "9f8828f1193851786ee5ca040f76d48a88af89b6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H50.",
            "VernacExtend",
            "4d457004df802cf1d3bd517b926eb91552323a2a"
        ],
        [
            "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node2 = var cfg node2).",
            "VernacExtend",
            "de8f47d2f5073ed3a80685c80ee4caea4b1c0ad4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H51.",
            "VernacExtend",
            "48b1b2eadf05628eb657c35471ab0afab3812915"
        ],
        [
            "rewrite <- H46.",
            "VernacExtend",
            "f57c3ee141300d48c1c6df52bb56e7bd0c4240d0"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H42.",
            "VernacExtend",
            "ed3f4ea2aa842ebaf3ecabd785979266d02ffae1"
        ],
        [
            "simpl in H42.",
            "VernacExtend",
            "50099696f1ffb9b79dab5b87fc20eb2b6848d0d0"
        ],
        [
            "exact H42.",
            "VernacExtend",
            "ac52f7280cdca1b8f93a929d26f49e5a6a6ad739"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
            "VernacExtend",
            "e10a58f758df77c257c32c304b2e971948001c95"
        ],
        [
            "apply nodes_preserved_var.",
            "VernacExtend",
            "b23a251fc935c1f2c90dd166371d3411f44d4a0f"
        ],
        [
            "exact H41.",
            "VernacExtend",
            "d9d5b5b5dbb07c570005e102e3268b23970410d6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_var.",
            "VernacExtend",
            "b23a251fc935c1f2c90dd166371d3411f44d4a0f"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
            "VernacExtend",
            "e10a58f758df77c257c32c304b2e971948001c95"
        ],
        [
            "simpl in H41; exact H41.",
            "VernacExtend",
            "0e6b3d660c5406dd07182d95e45bba6f1839d9ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H45; rewrite <- H46.",
            "VernacExtend",
            "e4b174f993852bf4c51dd50dcdbfd0823df50ecd"
        ],
        [
            "rewrite <- H44.",
            "VernacExtend",
            "523ad9dceac44396217d74c2dbab0e149ea3e755"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2)).",
            "VernacExtend",
            "3920391a5dc2048f5647c0811692bd0f2abfabab"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H43.",
            "VernacExtend",
            "77c3386a1cdbc65b3853e52584cf0c0d1fcd7898"
        ],
        [
            "simpl in H43; exact H43.",
            "VernacExtend",
            "a22bb9683ce82acc8b65f1b72b68a734a6c28174"
        ],
        [
            "apply bool_fun_or_preserves_eq.",
            "VernacExtend",
            "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
            "VernacExtend",
            "e10a58f758df77c257c32c304b2e971948001c95"
        ],
        [
            "exact H41.",
            "VernacExtend",
            "d9d5b5b5dbb07c570005e102e3268b23970410d6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
            "VernacExtend",
            "e10a58f758df77c257c32c304b2e971948001c95"
        ],
        [
            "exact H41.",
            "VernacExtend",
            "d9d5b5b5dbb07c570005e102e3268b23970410d6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H46.",
            "VernacExtend",
            "f57c3ee141300d48c1c6df52bb56e7bd0c4240d0"
        ],
        [
            "exact H38.",
            "VernacExtend",
            "24fdc42b30a842dd3a1bf28e27bc0d145ef321d4"
        ],
        [
            "rewrite <- H44.",
            "VernacExtend",
            "523ad9dceac44396217d74c2dbab0e149ea3e755"
        ],
        [
            "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')).",
            "VernacExtend",
            "f20c586bedaa36c1c6b1b0dc2b2586c7b07896a7"
        ],
        [
            "apply nodes_preserved_2 with (cfg := fst (BDDor_1 cfg memo (low cfg node1) node2 bound')).",
            "VernacExtend",
            "faa464148d1fee0c0d37440cb782581fb5043350"
        ],
        [
            "apply nodes_preserved_2 with (cfg := cfg).",
            "VernacExtend",
            "7e5df592869ceccf5be79ad15e4020d4223187aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H45.",
            "VernacExtend",
            "463faf4696bbb4acf0022c082b2943caf519f236"
        ],
        [
            "apply nodes_preserved_2 with (cfg := cfg).",
            "VernacExtend",
            "7e5df592869ceccf5be79ad15e4020d4223187aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
            "VernacExtend",
            "e10a58f758df77c257c32c304b2e971948001c95"
        ],
        [
            "exact H41.",
            "VernacExtend",
            "d9d5b5b5dbb07c570005e102e3268b23970410d6"
        ],
        [
            "apply Neqb_complete.",
            "VernacExtend",
            "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
        ],
        [
            "exact (proj2 (andb_prop (Neqb node1 node1') (Neqb node2 node2') y2)).",
            "VernacExtend",
            "45b22921b423a901a6be24829f78c9c88b1a3258"
        ],
        [
            "apply Neqb_complete.",
            "VernacExtend",
            "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
        ],
        [
            "exact (proj1 (andb_prop (Neqb node1 node1') (Neqb node2 node2') y2)).",
            "VernacExtend",
            "95f2a36dfd168f101bbd9ed03968d7e02c036aca"
        ],
        [
            "rewrite y2.",
            "VernacExtend",
            "2442b677655ba21bf3c218983e052542c9e239bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')).",
            "VernacExtend",
            "f20c586bedaa36c1c6b1b0dc2b2586c7b07896a7"
        ],
        [
            "unfold BDDor_memo_OK in H26.",
            "VernacExtend",
            "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
        ],
        [
            "exact (proj1 (H26 node1' node2' node H44)).",
            "VernacExtend",
            "2030fbef991de5a0f5f13ab0852b2d680b107a4f"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')).",
            "VernacExtend",
            "f20c586bedaa36c1c6b1b0dc2b2586c7b07896a7"
        ],
        [
            "unfold BDDor_memo_OK in H26.",
            "VernacExtend",
            "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
        ],
        [
            "exact (proj1 (proj2 (H26 node1' node2' node H44))).",
            "VernacExtend",
            "6875b88d9bbbecee8646a84c7697c1131ccdb27c"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')).",
            "VernacExtend",
            "f20c586bedaa36c1c6b1b0dc2b2586c7b07896a7"
        ],
        [
            "unfold BDDor_memo_OK in H26.",
            "VernacExtend",
            "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
        ],
        [
            "exact (proj1 (proj2 (proj2 (H26 node1' node2' node H44)))).",
            "VernacExtend",
            "afada985ff7f2e7c1d82adb509cab3f7e84e987a"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node = var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) node).",
            "VernacExtend",
            "e7aaf7e2707daba627d4fffd57c7c17d9c47e490"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H45.",
            "VernacExtend",
            "654754dcc7a98b3a46bee89cebef9d92f3835080"
        ],
        [
            "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node1' = var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) node1').",
            "VernacExtend",
            "a5eaf16c7f1745ad8122f4b4de0329148b4d2bf9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H46.",
            "VernacExtend",
            "bc71364af929d23beead6694a00c2c61fc8b32ec"
        ],
        [
            "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node2' = var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) node2').",
            "VernacExtend",
            "7b9b86ee6a1ba5bf98a51368416b4440504e9ce3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H47.",
            "VernacExtend",
            "359985ef01b573ff9f51f7759e620b37f608e41d"
        ],
        [
            "unfold BDDor_memo_OK in H26.",
            "VernacExtend",
            "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
        ],
        [
            "exact (proj1 (proj2 (proj2 (proj2 (H26 node1' node2' node H44))))).",
            "VernacExtend",
            "ec944f8878b2298e77f5d52588d26f49aa9bf675"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold BDDor_memo_OK in H26.",
            "VernacExtend",
            "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
        ],
        [
            "exact (proj1 (proj2 (H26 node1' node2' node H44))).",
            "VernacExtend",
            "6875b88d9bbbecee8646a84c7697c1131ccdb27c"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes; assumption.",
            "VernacExtend",
            "ac10650a004b96a9df5c8f1f9d5ad0ba52a11df8"
        ],
        [
            "unfold BDDor_memo_OK in H26.",
            "VernacExtend",
            "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
        ],
        [
            "exact (proj1 (H26 node1' node2' node H44)).",
            "VernacExtend",
            "2030fbef991de5a0f5f13ab0852b2d680b107a4f"
        ],
        [
            "apply nodes_preserved_var_1 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')).",
            "VernacExtend",
            "345fa9a5d4c026327c05c59e82438a6a4187835d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exact (proj1 (proj2 (proj2 (H26 node1' node2' node H44)))).",
            "VernacExtend",
            "afada985ff7f2e7c1d82adb509cab3f7e84e987a"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) node).",
            "VernacExtend",
            "3309be1abeb0005ff4d9528cdd74208e407328cb"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exact (proj1 (proj2 (proj2 (H26 node1' node2' node H44)))).",
            "VernacExtend",
            "afada985ff7f2e7c1d82adb509cab3f7e84e987a"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) node1') (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) node2')).",
            "VernacExtend",
            "7ae60e8bc7c89e4f5a9c5a755527d16fa4c029e4"
        ],
        [
            "exact (proj2 (proj2 (proj2 (proj2 (H26 node1' node2' node H44))))).",
            "VernacExtend",
            "cd27babb608ea0947a9aa67020e89ae87c2f5360"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_or_preserves_eq.",
            "VernacExtend",
            "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exact (proj1 (H26 node1' node2' node H44)).",
            "VernacExtend",
            "2030fbef991de5a0f5f13ab0852b2d680b107a4f"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exact (proj1 (proj2 (H26 node1' node2' node H44))).",
            "VernacExtend",
            "6875b88d9bbbecee8646a84c7697c1131ccdb27c"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_if (var cfg node1) (bool_fun_or (bool_fun_of_BDD cfg (high cfg node1)) (bool_fun_of_BDD cfg node2)) (bool_fun_or (bool_fun_of_BDD cfg (low cfg node1)) (bool_fun_of_BDD cfg node2))).",
            "VernacExtend",
            "862ac68944d4f28cc4a4bf9f2ea815a5f5b13577"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
            "VernacExtend",
            "470694e3862a58b37f992883db0ff499a51bb4d3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_if (var cfg node1) (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))) (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))))).",
            "VernacExtend",
            "a02dce4d0a436b83d3a1cbf8b625dac9d9954c07"
        ],
        [
            "apply BDDmake_bool_fun.",
            "VernacExtend",
            "f4c92828105114f8609f253aff654bee7db1e563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_if_preserves_eq.",
            "VernacExtend",
            "1c2a4f5b6b88ee3776baaeedd296c8f06bd07398"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1)) (bool_fun_of_BDD (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2)).",
            "VernacExtend",
            "2c10c3a90e7be84a4a13adad30a1c55209075f8f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_or_preserves_eq.",
            "VernacExtend",
            "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))).",
            "VernacExtend",
            "7efaf6e9679d122603e5394aa4ceba6e874e8056"
        ],
        [
            "apply nodes_preserved_3.",
            "VernacExtend",
            "9f86903082eb2288123aa593677baf707605aabb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_if (var cfg node1) (bool_fun_of_BDD cfg (high cfg node1)) (bool_fun_of_BDD cfg (low cfg node1))) (bool_fun_of_BDD cfg node2)).",
            "VernacExtend",
            "92f250f3cc3eff856ea55c48cc50d0398a315bd1"
        ],
        [
            "apply bool_fun_if_lemma_4.",
            "VernacExtend",
            "344421cf3e4233898421e83142738f4d9e1fdfc8"
        ],
        [
            "apply bool_fun_or_preserves_eq.",
            "VernacExtend",
            "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_if_lemma_2.",
            "VernacExtend",
            "3923b51783181711f5a75b695553d946c09407ac"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold bool_fun_eq in |- *.",
            "VernacExtend",
            "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold BDDvar_le in |- *.",
            "VernacExtend",
            "005e717f8bf9be29377e3bb7cc34ab759881c776"
        ],
        [
            "apply Nleb_trans with (b := var cfg node1).",
            "VernacExtend",
            "986e9269126cc21e08096e79daa50d044c4ae4d8"
        ],
        [
            "fold BDDvar_le in |- *.",
            "VernacExtend",
            "fe3f07c3cdd3fb7f5e2561f5728a0065945ddd52"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
            "VernacExtend",
            "470694e3862a58b37f992883db0ff499a51bb4d3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply BDDmake_var_order.",
            "VernacExtend",
            "686ced47ac195b5ff5b6a7dd3559d3fedd4639f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "fold BDDvar_le in |- *.",
            "VernacExtend",
            "fe3f07c3cdd3fb7f5e2561f5728a0065945ddd52"
        ],
        [
            "apply BDDvar_le_max_1.",
            "VernacExtend",
            "06c65348b8508600576d05a2f5c6e6571997e501"
        ],
        [
            "apply nodes_preserved_trans with (cfg2 := fst (BDDor_1 cfg memo (low cfg node1) node2 bound')).",
            "VernacExtend",
            "b3cca0f8ca0bebf083ba1a2d1f5da377e5fd499f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_trans with (cfg2 := fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')).",
            "VernacExtend",
            "7a8e24595421fa2c437bf3b0bbd4b12722964701"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
            "VernacExtend",
            "470694e3862a58b37f992883db0ff499a51bb4d3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
            "VernacExtend",
            "470694e3862a58b37f992883db0ff499a51bb4d3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exact H38.",
            "VernacExtend",
            "24fdc42b30a842dd3a1bf28e27bc0d145ef321d4"
        ],
        [
            "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
            "VernacExtend",
            "470694e3862a58b37f992883db0ff499a51bb4d3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exact H34.",
            "VernacExtend",
            "66f4fdd99b5f2a78cd57b5c0768878d81ff77563"
        ],
        [
            "apply BDDmake_semantics.",
            "VernacExtend",
            "8e0da208880e09b5388444c98fddbbedfa0d0a0f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (xl = var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))).",
            "VernacExtend",
            "ade1dae5b689e779a935bd608406b631d5c8b6a6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H35.",
            "VernacExtend",
            "cf9b5433432199ab59221776153c00b2712ab58b"
        ],
        [
            "apply H32.",
            "VernacExtend",
            "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
        ],
        [
            "split with xl.",
            "VernacExtend",
            "1f25a32fbded523e82de370f5d84686bce391be3"
        ],
        [
            "split with ll.",
            "VernacExtend",
            "bc0d59bd8d3b100edd1a8952c150c110d509a673"
        ],
        [
            "split with rl.",
            "VernacExtend",
            "1352cf957ea14023a125eb4591f4ef4bb8b2d9ba"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold var in |- *.",
            "VernacExtend",
            "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
        ],
        [
            "rewrite H34.",
            "VernacExtend",
            "754ff9e53df6c5b34e6f0ec13124cc12ead4f10c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (xr = var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))).",
            "VernacExtend",
            "995b312a90995e0915340f1c4dcdd48da12bff93"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H35.",
            "VernacExtend",
            "cf9b5433432199ab59221776153c00b2712ab58b"
        ],
        [
            "apply H33.",
            "VernacExtend",
            "6386d9775de9aeb848361511299770f2029fa22e"
        ],
        [
            "split with xr.",
            "VernacExtend",
            "921285c6f7c1334c015bf39bda0f33409dcee228"
        ],
        [
            "split with lr.",
            "VernacExtend",
            "a7813d02a02336d1650e902916d97e8904113a9e"
        ],
        [
            "split with rr.",
            "VernacExtend",
            "037d912fc81db603e97b1e39ae32e4d2d95e0b6e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold var in |- *; rewrite H34; reflexivity.",
            "VernacExtend",
            "f01ea5d4d99a970bd2aa3979c681b15e2308be00"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply BDDcompare_le_INFERIEUR_1 with (y := BDDvar_max (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1)) (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2)).",
            "VernacExtend",
            "5151f162609a4f97c392d6f4d123a312c9ce3719"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1) = var cfg (high cfg node1)).",
            "VernacExtend",
            "17a1e5849ca853bc6b5e028d5a9c93b76ed0ecc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H34.",
            "VernacExtend",
            "754ff9e53df6c5b34e6f0ec13124cc12ead4f10c"
        ],
        [
            "cut (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2 = var cfg node2).",
            "VernacExtend",
            "9f24622ce3c94ca0a3b23189bc44d43f7634f289"
        ],
        [
            "intro; rewrite H35.",
            "VernacExtend",
            "ddc414a3167422d7f5aec5e34f6d8c1d6d6e292c"
        ],
        [
            "apply BDDvar_ordered_high_3.",
            "VernacExtend",
            "cf88316d975aaf3b5f1eb4b55a53e0f9c1ab4f54"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) = var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))).",
            "VernacExtend",
            "c32cbc451c0d582f7a77e56cdfa16feac3c629df"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H33.",
            "VernacExtend",
            "843203e5d023b7f527f482879145e736e392695d"
        ],
        [
            "apply BDDcompare_le_INFERIEUR_1 with (y := BDDvar_max (var cfg (low cfg node1)) (var cfg node2)).",
            "VernacExtend",
            "a917b37e492bcc4fdf095bdb215f28ae5f22c457"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDvar_ordered_low_3.",
            "VernacExtend",
            "323889045a2b30c6ac5eaffe34607afe5dfd33a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_2 with (cfg := fst (BDDor_1 cfg memo (low cfg node1) node2 bound')).",
            "VernacExtend",
            "faa464148d1fee0c0d37440cb782581fb5043350"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "rewrite y0; unfold lt in |- *; apply le_n.",
            "VernacExtend",
            "6d3109cb29d0a4568cb8f1214365a788ca0c0b81"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1) = var cfg (high cfg node1)).",
            "VernacExtend",
            "17a1e5849ca853bc6b5e028d5a9c93b76ed0ecc0"
        ],
        [
            "intro; rewrite H26.",
            "VernacExtend",
            "c571d72337fd1e65b60b120b43a734528ed857d3"
        ],
        [
            "cut (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2 = var cfg node2).",
            "VernacExtend",
            "9f24622ce3c94ca0a3b23189bc44d43f7634f289"
        ],
        [
            "intro; rewrite H27.",
            "VernacExtend",
            "4d0b77b04ea7c80b9014cd5e00d25171c4a7361d"
        ],
        [
            "apply lt_trans_1 with (y := nat_of_N (var cfg node1)).",
            "VernacExtend",
            "8d1e2747e90a242fff3c26187cfadc4af0f60391"
        ],
        [
            "apply lt_max_nat_of_N.",
            "VernacExtend",
            "c7cef12824f3437cc7339d2cc57ccbca0e85e0ae"
        ],
        [
            "apply BDDvar_ordered_high_3.",
            "VernacExtend",
            "cf88316d975aaf3b5f1eb4b55a53e0f9c1ab4f54"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- y0.",
            "VernacExtend",
            "bea4b18ce4700c623c0ef6498ec62f190e4c3d09"
        ],
        [
            "apply le_lt_trans with (m := max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2))).",
            "VernacExtend",
            "0cfe0b0ef8e5338a11cc757bf2c46d247697cc9f"
        ],
        [
            "apply le_nat_of_N_max.",
            "VernacExtend",
            "fb2df83f164e1e4f092e3665b77429a35a877f89"
        ],
        [
            "apply BDDvar_le_max_1.",
            "VernacExtend",
            "06c65348b8508600576d05a2f5c6e6571997e501"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_var_1.",
            "VernacExtend",
            "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_2 with (cfg := cfg).",
            "VernacExtend",
            "7e5df592869ceccf5be79ad15e4020d4223187aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nodes_preserved_2 with (cfg := cfg).",
            "VernacExtend",
            "7e5df592869ceccf5be79ad15e4020d4223187aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "rewrite y0; unfold lt in |- *; apply le_n.",
            "VernacExtend",
            "6d3109cb29d0a4568cb8f1214365a788ca0c0b81"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lt_trans_1 with (y := nat_of_N (var cfg node1)).",
            "VernacExtend",
            "8d1e2747e90a242fff3c26187cfadc4af0f60391"
        ],
        [
            "apply lt_max_nat_of_N.",
            "VernacExtend",
            "c7cef12824f3437cc7339d2cc57ccbca0e85e0ae"
        ],
        [
            "apply BDDvar_ordered_low_3.",
            "VernacExtend",
            "323889045a2b30c6ac5eaffe34607afe5dfd33a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- y0.",
            "VernacExtend",
            "bea4b18ce4700c623c0ef6498ec62f190e4c3d09"
        ],
        [
            "apply le_lt_trans with (m := max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2))).",
            "VernacExtend",
            "0cfe0b0ef8e5338a11cc757bf2c46d247697cc9f"
        ],
        [
            "apply le_nat_of_N_max.",
            "VernacExtend",
            "fb2df83f164e1e4f092e3665b77429a35a877f89"
        ],
        [
            "apply BDDvar_le_max_1.",
            "VernacExtend",
            "06c65348b8508600576d05a2f5c6e6571997e501"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDcompare_sup_inf.",
            "VernacExtend",
            "baf8fe4959ef74624b0b125229227a79c9e1445e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "BDDdummy_lemma_4",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros bound H cfg node1 node2 memo H0 H1 H2 H3 H4 y H5 H6 H8 H9 H7 bound' y0 H10 y1.",
                        "VernacExtend",
                        "a8c9daa60b7335b66d70b77b9270cff62fc3f966"
                    ]
                },
                {
                    "command": [
                        "cut (BDDcompare (var cfg node2) (var cfg node1) = Datatypes.Lt).",
                        "VernacExtend",
                        "a1b78d300467457c69d72b8ac98a69309f86fed6"
                    ]
                },
                {
                    "command": [
                        "intro y11.",
                        "VernacExtend",
                        "166dfccba42ad90a5c175142cf413c241de37b80"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK cfg (low cfg node1)).",
                        "VernacExtend",
                        "f6ecdc03c444efa62d5ff49dbd7078372e8a831e"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK cfg (low cfg node2)).",
                        "VernacExtend",
                        "66bad16f9fa9c44ffc23ad37c8eb037535dd5b63"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK cfg (high cfg node1)).",
                        "VernacExtend",
                        "a4f4f4b6e84a73a935f9a1dbf3617c1bc70d4192"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK cfg (high cfg node2)).",
                        "VernacExtend",
                        "a57e2fb96e305116bafdd06b9b54000d3bf5c39d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node cfg (low cfg node1) -> is_internal_node cfg node2 -> max (nat_of_N (var cfg (low cfg node1))) (nat_of_N (var cfg node2)) < bound').",
                        "VernacExtend",
                        "55c4dc872e83b7eff6a825b388ce19c081a49e75"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (BDDconfig_OK (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) /\\ BDDor_memo_OK (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) /\\ config_node_OK (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) /\\ nodes_preserved cfg (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) /\\ BDDvar_le (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))) (BDDvar_max (var cfg (low cfg node1)) (var cfg node2)) = true /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))) (bool_fun_or (bool_fun_of_BDD cfg (low cfg node1)) (bool_fun_of_BDD cfg node2))).",
                        "VernacExtend",
                        "267b1d2070972941d0718b8552fbbff47343c241"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim H16; clear H16; intros.",
                        "VernacExtend",
                        "987fd0abe5abdff81668f10fed9d606523fadfda"
                    ]
                },
                {
                    "command": [
                        "elim H17; clear H17; intros.",
                        "VernacExtend",
                        "271a1d7d9f3390b5904324e763c676eaeeddfb34"
                    ]
                },
                {
                    "command": [
                        "elim H18; clear H18; intros.",
                        "VernacExtend",
                        "92928b13de3b5c9f46eddea905325f29d40d55f0"
                    ]
                },
                {
                    "command": [
                        "elim H19; clear H19; intros.",
                        "VernacExtend",
                        "88696fce058e7a60782126925d3de775d2410af0"
                    ]
                },
                {
                    "command": [
                        "elim H20; clear H20; intros.",
                        "VernacExtend",
                        "25d631f98d84bb58e93f7962fe6d0abf7c5bee12"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1)).",
                        "VernacExtend",
                        "196b2b6e5c11bf9be20f8bfe49dee35c9f924a62"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2).",
                        "VernacExtend",
                        "9716372ac345046cdb31f961b8340004b4519ad9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1) -> is_internal_node (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2 -> max (nat_of_N (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1))) (nat_of_N (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2)) < bound').",
                        "VernacExtend",
                        "e80540472dd2207802bb83d7d3152f17759c9cae"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (BDDconfig_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) /\\ BDDor_memo_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (snd (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) /\\ config_node_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) /\\ nodes_preserved (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) /\\ BDDvar_le (var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))) (BDDvar_max (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1)) (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2)) = true /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))) (bool_fun_or (bool_fun_of_BDD (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1)) (bool_fun_of_BDD (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2))).",
                        "VernacExtend",
                        "28be4e891dfaf6c4d32d232e964c71708af4a115"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim H25; clear H25; intros.",
                        "VernacExtend",
                        "378d9101d475e5a40e7d723d44549330cc4eb8b7"
                    ]
                },
                {
                    "command": [
                        "elim H26; clear H26; intros.",
                        "VernacExtend",
                        "f8f496e9394be3d2b00e5d47b6e7506e64462199"
                    ]
                },
                {
                    "command": [
                        "elim H27; clear H27; intros.",
                        "VernacExtend",
                        "ce40a9b817a84c99cdc95b2e1a8d2c312d76464e"
                    ]
                },
                {
                    "command": [
                        "elim H28; clear H28; intros.",
                        "VernacExtend",
                        "da81581ebe6f54800c73dbbebb91cccedf2890cf"
                    ]
                },
                {
                    "command": [
                        "elim H29; clear H29; intros.",
                        "VernacExtend",
                        "239203a62bdfb5ad3857464e5e9205b8f7b075d2"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))).",
                        "VernacExtend",
                        "1e9fdaadcc55d606886bbdd293c6b97ddd5d9e0a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) -> BDDcompare (var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))) (var cfg node1) = Datatypes.Lt).",
                        "VernacExtend",
                        "ad5f0ec27668b843f9337790baf69008bf8d5a5d"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) -> BDDcompare (var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))) (var cfg node1) = Datatypes.Lt).",
                        "VernacExtend",
                        "ee4fb80cd7666298812a87b3a95100f0f1aaa495"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (BDDconfig_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) /\\ (Neqb (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) = false -> MapGet _ (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))))) (snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) = Some (var cfg node1, (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')), fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) /\\ (Neqb (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) = true -> snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))) = fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) /\\ (forall (a l' r' : ad) (x' : BDDvar), (MapGet _ (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))))) a = Some (x', (l', r')) -> MapGet _ (fst (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) a = Some (x', (l', r')) \\/ snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))) = a) /\\ (MapGet _ (fst (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) a = Some (x', (l', r')) -> MapGet _ (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))))) a = Some (x', (l', r')))) /\\ node_OK (fst (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))))) (snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))))).",
                        "VernacExtend",
                        "f319017a12b47fb1c3728827fcdc33b071c95da5"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim H34; clear H34; intros.",
                        "VernacExtend",
                        "461883f759c9d68aba2ba6174a9fec866cdb9063"
                    ]
                },
                {
                    "command": [
                        "elim H35; clear H35; intros.",
                        "VernacExtend",
                        "696d26f9ddd71880a06d73afb5a30717ec752f23"
                    ]
                },
                {
                    "command": [
                        "elim H36; clear H36; intros.",
                        "VernacExtend",
                        "b633ee2af654686e361def033006955c85776880"
                    ]
                },
                {
                    "command": [
                        "elim H37; clear H37; intros.",
                        "VernacExtend",
                        "cf8a2f123e67978c834a002ef3c0b62f13cac051"
                    ]
                },
                {
                    "command": [
                        "cut (BDDconfig_OK (fst (BDDor_1 cfg memo node1 node2 bound))).",
                        "VernacExtend",
                        "e2db7fad08484256645d82b9dba352e9c0f7a36b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))).",
                        "VernacExtend",
                        "049e9c261c7d7a1e5ad0daee695c47d99fdc750e"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (nodes_preserved cfg (fst (BDDor_1 cfg memo node1 node2 bound))).",
                        "VernacExtend",
                        "ff3d92c7346ce10b85556691fcf1c33b92e6b104"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (BDDvar_le (var (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))) (BDDvar_max (var cfg node1) (var cfg node2)) = true).",
                        "VernacExtend",
                        "b19db2cad86ae9099c0e75a84338ab7f28c1aa1f"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_of_BDD (fst (BDDor_1 cfg memo node1 node2 bound)) (fst (snd (BDDor_1 cfg memo node1 node2 bound)))) (bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2))).",
                        "VernacExtend",
                        "475bdf4b4ee467dd9c8632331ce9920cb3743ac1"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (BDDor_memo_OK (fst (BDDor_1 cfg memo node1 node2 bound)) (snd (snd (BDDor_1 cfg memo node1 node2 bound)))).",
                        "VernacExtend",
                        "ad84130bf0a933ee98fdce7e5cbf1fa39eaf33c0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in |- *.",
                        "VernacExtend",
                        "1895dafe933a9a3c710b7210e857ff81584c72b1"
                    ]
                },
                {
                    "command": [
                        "intros node1' node2' node.",
                        "VernacExtend",
                        "0e5a24c25590a06d0039f131949ca8c0775ca9a4"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
                        "VernacExtend",
                        "470694e3862a58b37f992883db0ff499a51bb4d3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_memo_lookup_semantics (snd (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))) node1 node2 (snd (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node1' node2') .",
                        "VernacExtend",
                        "38b316497db780b3c02782e8756a1593a747263e"
                    ]
                },
                {
                    "command": [
                        "elim (sumbool_of_bool (Neqb node1 node1' && Neqb node2 node2')); intro y2.",
                        "VernacExtend",
                        "c7a0bb2c0a2d245a65ca6225c59099001464b3ed"
                    ]
                },
                {
                    "command": [
                        "rewrite y2.",
                        "VernacExtend",
                        "2442b677655ba21bf3c218983e052542c9e239bf"
                    ]
                },
                {
                    "command": [
                        "cut (node1 = node1').",
                        "VernacExtend",
                        "ba86a63e7eded5e460a24a2fb0586b6d67370c02"
                    ]
                },
                {
                    "command": [
                        "cut (node2 = node2').",
                        "VernacExtend",
                        "bb1a49fefb3c5885f25efbaa7ef5bc5e81050b04"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "injection H46.",
                        "VernacExtend",
                        "c72eaedffbf319e4f6ad80b0a68c306175d07ad4"
                    ]
                },
                {
                    "command": [
                        "clear H46; intros.",
                        "VernacExtend",
                        "8644f0f7d170f3d16c85495a5a30fc53d2297e42"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node1').",
                        "VernacExtend",
                        "2005b282130aa3a46f42f4b33f9557e4e180caf4"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node2').",
                        "VernacExtend",
                        "b768251cacf569e568681fab2a48b14c57bdd4af"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node).",
                        "VernacExtend",
                        "031f1c4af84dfa72349ee7dd0a74dd542bcb748d"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H44; rewrite <- H45.",
                        "VernacExtend",
                        "c6cc36870ee957bc26018c4ed4ebd5f407bf5708"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node1 = var cfg node1).",
                        "VernacExtend",
                        "9f8828f1193851786ee5ca040f76d48a88af89b6"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H50.",
                        "VernacExtend",
                        "4d457004df802cf1d3bd517b926eb91552323a2a"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node2 = var cfg node2).",
                        "VernacExtend",
                        "de8f47d2f5073ed3a80685c80ee4caea4b1c0ad4"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H51.",
                        "VernacExtend",
                        "48b1b2eadf05628eb657c35471ab0afab3812915"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H46.",
                        "VernacExtend",
                        "f57c3ee141300d48c1c6df52bb56e7bd0c4240d0"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H42.",
                        "VernacExtend",
                        "ed3f4ea2aa842ebaf3ecabd785979266d02ffae1"
                    ]
                },
                {
                    "command": [
                        "simpl in H42.",
                        "VernacExtend",
                        "50099696f1ffb9b79dab5b87fc20eb2b6848d0d0"
                    ]
                },
                {
                    "command": [
                        "exact H42.",
                        "VernacExtend",
                        "ac52f7280cdca1b8f93a929d26f49e5a6a6ad739"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
                        "VernacExtend",
                        "e10a58f758df77c257c32c304b2e971948001c95"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var.",
                        "VernacExtend",
                        "b23a251fc935c1f2c90dd166371d3411f44d4a0f"
                    ]
                },
                {
                    "command": [
                        "exact H41.",
                        "VernacExtend",
                        "d9d5b5b5dbb07c570005e102e3268b23970410d6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var.",
                        "VernacExtend",
                        "b23a251fc935c1f2c90dd166371d3411f44d4a0f"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
                        "VernacExtend",
                        "e10a58f758df77c257c32c304b2e971948001c95"
                    ]
                },
                {
                    "command": [
                        "simpl in H41; exact H41.",
                        "VernacExtend",
                        "0e6b3d660c5406dd07182d95e45bba6f1839d9ef"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H45; rewrite <- H46.",
                        "VernacExtend",
                        "e4b174f993852bf4c51dd50dcdbfd0823df50ecd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H44.",
                        "VernacExtend",
                        "523ad9dceac44396217d74c2dbab0e149ea3e755"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2)).",
                        "VernacExtend",
                        "3920391a5dc2048f5647c0811692bd0f2abfabab"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H43.",
                        "VernacExtend",
                        "77c3386a1cdbc65b3853e52584cf0c0d1fcd7898"
                    ]
                },
                {
                    "command": [
                        "simpl in H43; exact H43.",
                        "VernacExtend",
                        "a22bb9683ce82acc8b65f1b72b68a734a6c28174"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_or_preserves_eq.",
                        "VernacExtend",
                        "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
                        "VernacExtend",
                        "e10a58f758df77c257c32c304b2e971948001c95"
                    ]
                },
                {
                    "command": [
                        "exact H41.",
                        "VernacExtend",
                        "d9d5b5b5dbb07c570005e102e3268b23970410d6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
                        "VernacExtend",
                        "e10a58f758df77c257c32c304b2e971948001c95"
                    ]
                },
                {
                    "command": [
                        "exact H41.",
                        "VernacExtend",
                        "d9d5b5b5dbb07c570005e102e3268b23970410d6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H46.",
                        "VernacExtend",
                        "f57c3ee141300d48c1c6df52bb56e7bd0c4240d0"
                    ]
                },
                {
                    "command": [
                        "exact H38.",
                        "VernacExtend",
                        "24fdc42b30a842dd3a1bf28e27bc0d145ef321d4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H44.",
                        "VernacExtend",
                        "523ad9dceac44396217d74c2dbab0e149ea3e755"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')).",
                        "VernacExtend",
                        "f20c586bedaa36c1c6b1b0dc2b2586c7b07896a7"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := fst (BDDor_1 cfg memo (low cfg node1) node2 bound')).",
                        "VernacExtend",
                        "faa464148d1fee0c0d37440cb782581fb5043350"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := cfg).",
                        "VernacExtend",
                        "7e5df592869ceccf5be79ad15e4020d4223187aa"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H45.",
                        "VernacExtend",
                        "463faf4696bbb4acf0022c082b2943caf519f236"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := cfg).",
                        "VernacExtend",
                        "7e5df592869ceccf5be79ad15e4020d4223187aa"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1) in H41.",
                        "VernacExtend",
                        "e10a58f758df77c257c32c304b2e971948001c95"
                    ]
                },
                {
                    "command": [
                        "exact H41.",
                        "VernacExtend",
                        "d9d5b5b5dbb07c570005e102e3268b23970410d6"
                    ]
                },
                {
                    "command": [
                        "apply Neqb_complete.",
                        "VernacExtend",
                        "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (andb_prop (Neqb node1 node1') (Neqb node2 node2') y2)).",
                        "VernacExtend",
                        "45b22921b423a901a6be24829f78c9c88b1a3258"
                    ]
                },
                {
                    "command": [
                        "apply Neqb_complete.",
                        "VernacExtend",
                        "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (andb_prop (Neqb node1 node1') (Neqb node2 node2') y2)).",
                        "VernacExtend",
                        "95f2a36dfd168f101bbd9ed03968d7e02c036aca"
                    ]
                },
                {
                    "command": [
                        "rewrite y2.",
                        "VernacExtend",
                        "2442b677655ba21bf3c218983e052542c9e239bf"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')).",
                        "VernacExtend",
                        "f20c586bedaa36c1c6b1b0dc2b2586c7b07896a7"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in H26.",
                        "VernacExtend",
                        "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (H26 node1' node2' node H44)).",
                        "VernacExtend",
                        "2030fbef991de5a0f5f13ab0852b2d680b107a4f"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')).",
                        "VernacExtend",
                        "f20c586bedaa36c1c6b1b0dc2b2586c7b07896a7"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in H26.",
                        "VernacExtend",
                        "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (H26 node1' node2' node H44))).",
                        "VernacExtend",
                        "6875b88d9bbbecee8646a84c7697c1131ccdb27c"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')).",
                        "VernacExtend",
                        "f20c586bedaa36c1c6b1b0dc2b2586c7b07896a7"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in H26.",
                        "VernacExtend",
                        "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (proj2 (H26 node1' node2' node H44)))).",
                        "VernacExtend",
                        "afada985ff7f2e7c1d82adb509cab3f7e84e987a"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node = var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) node).",
                        "VernacExtend",
                        "e7aaf7e2707daba627d4fffd57c7c17d9c47e490"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H45.",
                        "VernacExtend",
                        "654754dcc7a98b3a46bee89cebef9d92f3835080"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node1' = var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) node1').",
                        "VernacExtend",
                        "a5eaf16c7f1745ad8122f4b4de0329148b4d2bf9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H46.",
                        "VernacExtend",
                        "bc71364af929d23beead6694a00c2c61fc8b32ec"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDmake (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (var cfg node1) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound'))))) node2' = var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) node2').",
                        "VernacExtend",
                        "7b9b86ee6a1ba5bf98a51368416b4440504e9ce3"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H47.",
                        "VernacExtend",
                        "359985ef01b573ff9f51f7759e620b37f608e41d"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in H26.",
                        "VernacExtend",
                        "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (proj2 (proj2 (H26 node1' node2' node H44))))).",
                        "VernacExtend",
                        "ec944f8878b2298e77f5d52588d26f49aa9bf675"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in H26.",
                        "VernacExtend",
                        "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (H26 node1' node2' node H44))).",
                        "VernacExtend",
                        "6875b88d9bbbecee8646a84c7697c1131ccdb27c"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes; assumption.",
                        "VernacExtend",
                        "ac10650a004b96a9df5c8f1f9d5ad0ba52a11df8"
                    ]
                },
                {
                    "command": [
                        "unfold BDDor_memo_OK in H26.",
                        "VernacExtend",
                        "310ecddd8f646198d2e882f45cfc2be3ec38bd8d"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (H26 node1' node2' node H44)).",
                        "VernacExtend",
                        "2030fbef991de5a0f5f13ab0852b2d680b107a4f"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1 with (cfg := fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')).",
                        "VernacExtend",
                        "345fa9a5d4c026327c05c59e82438a6a4187835d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (proj2 (H26 node1' node2' node H44)))).",
                        "VernacExtend",
                        "afada985ff7f2e7c1d82adb509cab3f7e84e987a"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) node).",
                        "VernacExtend",
                        "3309be1abeb0005ff4d9528cdd74208e407328cb"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (proj2 (H26 node1' node2' node H44)))).",
                        "VernacExtend",
                        "afada985ff7f2e7c1d82adb509cab3f7e84e987a"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) node1') (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) node2')).",
                        "VernacExtend",
                        "7ae60e8bc7c89e4f5a9c5a755527d16fa4c029e4"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (proj2 (proj2 (proj2 (H26 node1' node2' node H44))))).",
                        "VernacExtend",
                        "cd27babb608ea0947a9aa67020e89ae87c2f5360"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_or_preserves_eq.",
                        "VernacExtend",
                        "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (H26 node1' node2' node H44)).",
                        "VernacExtend",
                        "2030fbef991de5a0f5f13ab0852b2d680b107a4f"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (H26 node1' node2' node H44))).",
                        "VernacExtend",
                        "6875b88d9bbbecee8646a84c7697c1131ccdb27c"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_if (var cfg node1) (bool_fun_or (bool_fun_of_BDD cfg (high cfg node1)) (bool_fun_of_BDD cfg node2)) (bool_fun_or (bool_fun_of_BDD cfg (low cfg node1)) (bool_fun_of_BDD cfg node2))).",
                        "VernacExtend",
                        "862ac68944d4f28cc4a4bf9f2ea815a5f5b13577"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
                        "VernacExtend",
                        "470694e3862a58b37f992883db0ff499a51bb4d3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_if (var cfg node1) (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))) (bool_fun_of_BDD (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))))).",
                        "VernacExtend",
                        "a02dce4d0a436b83d3a1cbf8b625dac9d9954c07"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_bool_fun.",
                        "VernacExtend",
                        "f4c92828105114f8609f253aff654bee7db1e563"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_if_preserves_eq.",
                        "VernacExtend",
                        "1c2a4f5b6b88ee3776baaeedd296c8f06bd07398"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_of_BDD (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1)) (bool_fun_of_BDD (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2)).",
                        "VernacExtend",
                        "2c10c3a90e7be84a4a13adad30a1c55209075f8f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_or_preserves_eq.",
                        "VernacExtend",
                        "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))).",
                        "VernacExtend",
                        "7efaf6e9679d122603e5394aa4ceba6e874e8056"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_3.",
                        "VernacExtend",
                        "9f86903082eb2288123aa593677baf707605aabb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_or (bool_fun_if (var cfg node1) (bool_fun_of_BDD cfg (high cfg node1)) (bool_fun_of_BDD cfg (low cfg node1))) (bool_fun_of_BDD cfg node2)).",
                        "VernacExtend",
                        "92f250f3cc3eff856ea55c48cc50d0398a315bd1"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_if_lemma_4.",
                        "VernacExtend",
                        "344421cf3e4233898421e83142738f4d9e1fdfc8"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_or_preserves_eq.",
                        "VernacExtend",
                        "4dfe8b5ac6c4ea6bd27beae7f434de212bb8b33e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_if_lemma_2.",
                        "VernacExtend",
                        "3923b51783181711f5a75b695553d946c09407ac"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *.",
                        "VernacExtend",
                        "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold BDDvar_le in |- *.",
                        "VernacExtend",
                        "005e717f8bf9be29377e3bb7cc34ab759881c776"
                    ]
                },
                {
                    "command": [
                        "apply Nleb_trans with (b := var cfg node1).",
                        "VernacExtend",
                        "986e9269126cc21e08096e79daa50d044c4ae4d8"
                    ]
                },
                {
                    "command": [
                        "fold BDDvar_le in |- *.",
                        "VernacExtend",
                        "fe3f07c3cdd3fb7f5e2561f5728a0065945ddd52"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
                        "VernacExtend",
                        "470694e3862a58b37f992883db0ff499a51bb4d3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_var_order.",
                        "VernacExtend",
                        "686ced47ac195b5ff5b6a7dd3559d3fedd4639f1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "fold BDDvar_le in |- *.",
                        "VernacExtend",
                        "fe3f07c3cdd3fb7f5e2561f5728a0065945ddd52"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_le_max_1.",
                        "VernacExtend",
                        "06c65348b8508600576d05a2f5c6e6571997e501"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_trans with (cfg2 := fst (BDDor_1 cfg memo (low cfg node1) node2 bound')).",
                        "VernacExtend",
                        "b3cca0f8ca0bebf083ba1a2d1f5da377e5fd499f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_trans with (cfg2 := fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')).",
                        "VernacExtend",
                        "7a8e24595421fa2c437bf3b0bbd4b12722964701"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
                        "VernacExtend",
                        "470694e3862a58b37f992883db0ff499a51bb4d3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
                        "VernacExtend",
                        "470694e3862a58b37f992883db0ff499a51bb4d3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exact H38.",
                        "VernacExtend",
                        "24fdc42b30a842dd3a1bf28e27bc0d145ef321d4"
                    ]
                },
                {
                    "command": [
                        "rewrite (BDDor_1_lemma_internal_3 cfg memo node1 node2 bound bound' y H0 H8 H7 H10 y0 y1).",
                        "VernacExtend",
                        "470694e3862a58b37f992883db0ff499a51bb4d3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exact H34.",
                        "VernacExtend",
                        "66f4fdd99b5f2a78cd57b5c0768878d81ff77563"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_semantics.",
                        "VernacExtend",
                        "8e0da208880e09b5388444c98fddbbedfa0d0a0f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (xl = var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))).",
                        "VernacExtend",
                        "ade1dae5b689e779a935bd608406b631d5c8b6a6"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H35.",
                        "VernacExtend",
                        "cf9b5433432199ab59221776153c00b2712ab58b"
                    ]
                },
                {
                    "command": [
                        "apply H32.",
                        "VernacExtend",
                        "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
                    ]
                },
                {
                    "command": [
                        "split with xl.",
                        "VernacExtend",
                        "1f25a32fbded523e82de370f5d84686bce391be3"
                    ]
                },
                {
                    "command": [
                        "split with ll.",
                        "VernacExtend",
                        "bc0d59bd8d3b100edd1a8952c150c110d509a673"
                    ]
                },
                {
                    "command": [
                        "split with rl.",
                        "VernacExtend",
                        "1352cf957ea14023a125eb4591f4ef4bb8b2d9ba"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold var in |- *.",
                        "VernacExtend",
                        "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
                    ]
                },
                {
                    "command": [
                        "rewrite H34.",
                        "VernacExtend",
                        "754ff9e53df6c5b34e6f0ec13124cc12ead4f10c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (xr = var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')))).",
                        "VernacExtend",
                        "995b312a90995e0915340f1c4dcdd48da12bff93"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H35.",
                        "VernacExtend",
                        "cf9b5433432199ab59221776153c00b2712ab58b"
                    ]
                },
                {
                    "command": [
                        "apply H33.",
                        "VernacExtend",
                        "6386d9775de9aeb848361511299770f2029fa22e"
                    ]
                },
                {
                    "command": [
                        "split with xr.",
                        "VernacExtend",
                        "921285c6f7c1334c015bf39bda0f33409dcee228"
                    ]
                },
                {
                    "command": [
                        "split with lr.",
                        "VernacExtend",
                        "a7813d02a02336d1650e902916d97e8904113a9e"
                    ]
                },
                {
                    "command": [
                        "split with rr.",
                        "VernacExtend",
                        "037d912fc81db603e97b1e39ae32e4d2d95e0b6e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold var in |- *; rewrite H34; reflexivity.",
                        "VernacExtend",
                        "f01ea5d4d99a970bd2aa3979c681b15e2308be00"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_le_INFERIEUR_1 with (y := BDDvar_max (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1)) (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2)).",
                        "VernacExtend",
                        "5151f162609a4f97c392d6f4d123a312c9ce3719"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1) = var cfg (high cfg node1)).",
                        "VernacExtend",
                        "17a1e5849ca853bc6b5e028d5a9c93b76ed0ecc0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H34.",
                        "VernacExtend",
                        "754ff9e53df6c5b34e6f0ec13124cc12ead4f10c"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2 = var cfg node2).",
                        "VernacExtend",
                        "9f24622ce3c94ca0a3b23189bc44d43f7634f289"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H35.",
                        "VernacExtend",
                        "ddc414a3167422d7f5aec5e34f6d8c1d6d6e292c"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high_3.",
                        "VernacExtend",
                        "cf88316d975aaf3b5f1eb4b55a53e0f9c1ab4f54"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDor_1 (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (snd (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) (high cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound'))) = var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (fst (snd (BDDor_1 cfg memo (low cfg node1) node2 bound')))).",
                        "VernacExtend",
                        "c32cbc451c0d582f7a77e56cdfa16feac3c629df"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H33.",
                        "VernacExtend",
                        "843203e5d023b7f527f482879145e736e392695d"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_le_INFERIEUR_1 with (y := BDDvar_max (var cfg (low cfg node1)) (var cfg node2)).",
                        "VernacExtend",
                        "a917b37e492bcc4fdf095bdb215f28ae5f22c457"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low_3.",
                        "VernacExtend",
                        "323889045a2b30c6ac5eaffe34607afe5dfd33a6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := fst (BDDor_1 cfg memo (low cfg node1) node2 bound')).",
                        "VernacExtend",
                        "faa464148d1fee0c0d37440cb782581fb5043350"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "rewrite y0; unfold lt in |- *; apply le_n.",
                        "VernacExtend",
                        "6d3109cb29d0a4568cb8f1214365a788ca0c0b81"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) (high cfg node1) = var cfg (high cfg node1)).",
                        "VernacExtend",
                        "17a1e5849ca853bc6b5e028d5a9c93b76ed0ecc0"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H26.",
                        "VernacExtend",
                        "c571d72337fd1e65b60b120b43a734528ed857d3"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDor_1 cfg memo (low cfg node1) node2 bound')) node2 = var cfg node2).",
                        "VernacExtend",
                        "9f24622ce3c94ca0a3b23189bc44d43f7634f289"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H27.",
                        "VernacExtend",
                        "4d0b77b04ea7c80b9014cd5e00d25171c4a7361d"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans_1 with (y := nat_of_N (var cfg node1)).",
                        "VernacExtend",
                        "8d1e2747e90a242fff3c26187cfadc4af0f60391"
                    ]
                },
                {
                    "command": [
                        "apply lt_max_nat_of_N.",
                        "VernacExtend",
                        "c7cef12824f3437cc7339d2cc57ccbca0e85e0ae"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high_3.",
                        "VernacExtend",
                        "cf88316d975aaf3b5f1eb4b55a53e0f9c1ab4f54"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- y0.",
                        "VernacExtend",
                        "bea4b18ce4700c623c0ef6498ec62f190e4c3d09"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (m := max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2))).",
                        "VernacExtend",
                        "0cfe0b0ef8e5338a11cc757bf2c46d247697cc9f"
                    ]
                },
                {
                    "command": [
                        "apply le_nat_of_N_max.",
                        "VernacExtend",
                        "fb2df83f164e1e4f092e3665b77429a35a877f89"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_le_max_1.",
                        "VernacExtend",
                        "06c65348b8508600576d05a2f5c6e6571997e501"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_var_1.",
                        "VernacExtend",
                        "41c2aae7b0e10ae537448eb710cca01b734ae2f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := cfg).",
                        "VernacExtend",
                        "7e5df592869ceccf5be79ad15e4020d4223187aa"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := cfg).",
                        "VernacExtend",
                        "7e5df592869ceccf5be79ad15e4020d4223187aa"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "rewrite y0; unfold lt in |- *; apply le_n.",
                        "VernacExtend",
                        "6d3109cb29d0a4568cb8f1214365a788ca0c0b81"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans_1 with (y := nat_of_N (var cfg node1)).",
                        "VernacExtend",
                        "8d1e2747e90a242fff3c26187cfadc4af0f60391"
                    ]
                },
                {
                    "command": [
                        "apply lt_max_nat_of_N.",
                        "VernacExtend",
                        "c7cef12824f3437cc7339d2cc57ccbca0e85e0ae"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low_3.",
                        "VernacExtend",
                        "323889045a2b30c6ac5eaffe34607afe5dfd33a6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- y0.",
                        "VernacExtend",
                        "bea4b18ce4700c623c0ef6498ec62f190e4c3d09"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (m := max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2))).",
                        "VernacExtend",
                        "0cfe0b0ef8e5338a11cc757bf2c46d247697cc9f"
                    ]
                },
                {
                    "command": [
                        "apply le_nat_of_N_max.",
                        "VernacExtend",
                        "fb2df83f164e1e4f092e3665b77429a35a877f89"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_le_max_1.",
                        "VernacExtend",
                        "06c65348b8508600576d05a2f5c6e6571997e501"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_sup_inf.",
                        "VernacExtend",
                        "baf8fe4959ef74624b0b125229227a79c9e1445e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}