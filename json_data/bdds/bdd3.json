{
    "filename": "bdd3.v",
    "coq_project": "bdds",
    "vernac_cmds": [
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Require Import Sumbool.",
            "VernacRequire",
            "555a25fa361ace801dc7927d5872def951dfbee5"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import ZArith NArith Nnat Ndec Ndigits.",
            "VernacRequire",
            "c2baea4a0fda1451ad00e307f8a2db5ff87567aa"
        ],
        [
            "From IntMap Require Import Allmaps.",
            "VernacRequire",
            "d3a19fbc306700804973888ef7ccf716277e64fb"
        ],
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Require Import BDDvar_ad_nat.",
            "VernacRequire",
            "ecfee313280da558d300523c60b3cd65e5165656"
        ],
        [
            "Require Import bdd1.",
            "VernacRequire",
            "35415fd818f4fbf6a7da419d967a777932ddb1b7"
        ],
        [
            "Require Import bdd2.",
            "VernacRequire",
            "fc7fe718a45de74f8628c84379872e19aab95145"
        ],
        [
            "Lemma bool_fun_one_zero_eq : ~ bool_fun_eq bool_fun_one bool_fun_zero.",
            "VernacStartTheoremProof",
            "f77855380b9831c2bc884336a2aa3e14520baf58"
        ],
        [
            "unfold bool_fun_eq, bool_fun_zero, bool_fun_one in |- *.",
            "VernacExtend",
            "6453fd68e64ff4f2346f993b8ff401de8f1a4505"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "unfold bool_fun_eval in H.",
            "VernacExtend",
            "8c833ccc9dd13150c1debad3a11b4ee4e92b7f0a"
        ],
        [
            "cut (true = false).",
            "VernacExtend",
            "b590eb7256a56b2be1b191e9eda3ab8241e0870d"
        ],
        [
            "intro; discriminate.",
            "VernacExtend",
            "d63764752b13c9777fe3ccb54c65ae24ab510154"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "exact (fun x : BDDvar => true).",
            "VernacExtend",
            "6ce3f600f63f5acd0610431a3c0b4c1d64e63809"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_zero_one_eq : ~ bool_fun_eq bool_fun_zero bool_fun_one.",
            "VernacStartTheoremProof",
            "9896c6042f31984ae3349985a0573f1dec5f0b1b"
        ],
        [
            "unfold bool_fun_eq, bool_fun_zero, bool_fun_one in |- *.",
            "VernacExtend",
            "6453fd68e64ff4f2346f993b8ff401de8f1a4505"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "unfold bool_fun_eval in H.",
            "VernacExtend",
            "8c833ccc9dd13150c1debad3a11b4ee4e92b7f0a"
        ],
        [
            "cut (false = true).",
            "VernacExtend",
            "487808628e1cc285687e13fd91d5d2968e48593b"
        ],
        [
            "intro; discriminate.",
            "VernacExtend",
            "d63764752b13c9777fe3ccb54c65ae24ab510154"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "exact (fun x : BDDvar => true).",
            "VernacExtend",
            "6ce3f600f63f5acd0610431a3c0b4c1d64e63809"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition augment (vb : var_binding) (x : BDDvar) (b : bool) (y : BDDvar) := if BDDvar_eq x y then b else vb y.",
            "VernacDefinition",
            "84ad0bb721049c4c481cd710039241b3b29fe262"
        ],
        [
            "Definition bool_fun_restrict (bf : bool_fun) (x : BDDvar) (b : bool) (vb : var_binding) := bool_fun_eval bf (augment vb x b).",
            "VernacDefinition",
            "01eec6bc19fab3b7134110fc247a0224555330de"
        ],
        [
            "Lemma bool_fun_restrict_zero : forall (x : BDDvar) (b : bool), bool_fun_eq (bool_fun_restrict bool_fun_zero x b) bool_fun_zero.",
            "VernacStartTheoremProof",
            "a778c1b5ca25d93d0ad108e0371bda88d4ff7bfe"
        ],
        [
            "intros x b.",
            "VernacExtend",
            "53423c41291feb855a904cd72839e12ba28f59e7"
        ],
        [
            "unfold bool_fun_eq, bool_fun_restrict, bool_fun_zero, bool_fun_one in |- *.",
            "VernacExtend",
            "f2f2c7cb38e85f71d23261f416449e69db1cf33d"
        ],
        [
            "intros vb.",
            "VernacExtend",
            "11cff077e73de23665ee5d46242d9ad873547a2f"
        ],
        [
            "unfold bool_fun_eval, augment in |- *.",
            "VernacExtend",
            "27ce3e533dc7896ef9d43db79a702cbc019f0749"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_restrict_one : forall (x : BDDvar) (b : bool), bool_fun_eq (bool_fun_restrict bool_fun_one x b) bool_fun_one.",
            "VernacStartTheoremProof",
            "5eb6b16675e323a64ca937ee08536691c8c13af2"
        ],
        [
            "intros x b.",
            "VernacExtend",
            "53423c41291feb855a904cd72839e12ba28f59e7"
        ],
        [
            "unfold bool_fun_eq, bool_fun_restrict, bool_fun_zero, bool_fun_one in |- *.",
            "VernacExtend",
            "f2f2c7cb38e85f71d23261f416449e69db1cf33d"
        ],
        [
            "intros vb.",
            "VernacExtend",
            "11cff077e73de23665ee5d46242d9ad873547a2f"
        ],
        [
            "unfold bool_fun_eval, augment in |- *.",
            "VernacExtend",
            "27ce3e533dc7896ef9d43db79a702cbc019f0749"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_restrict_eq : forall (bf bf' : bool_fun) (x : BDDvar) (b : bool), bool_fun_eq bf bf' -> bool_fun_eq (bool_fun_restrict bf x b) (bool_fun_restrict bf' x b).",
            "VernacStartTheoremProof",
            "a32bd9ab3c0d91daf5369a50175cb3e9d36efdb7"
        ],
        [
            "intros bf bf' x b H.",
            "VernacExtend",
            "ac453fc5773802885861c9ba34057c501c1c8b61"
        ],
        [
            "unfold bool_fun_eq in |- *.",
            "VernacExtend",
            "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
        ],
        [
            "unfold bool_fun_restrict in |- *.",
            "VernacExtend",
            "8f5a662d1228cd59b9d9d647a9421f5c9c13ed3a"
        ],
        [
            "unfold bool_fun_eval at 1 3 in |- *.",
            "VernacExtend",
            "8e7b47d1f6cfd6cfd7e7e9cdeb9dbd71273f76ba"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition var_binding_eq (vb vb' : var_binding) := forall x : BDDvar, vb x = vb' x.",
            "VernacDefinition",
            "b303bc3f4622d5f69c85282d6c178dd811c5fa45"
        ],
        [
            "Definition bool_fun_ext (bf : bool_fun) := forall vb vb' : var_binding, var_binding_eq vb vb' -> bool_fun_eval bf vb = bool_fun_eval bf vb'.",
            "VernacDefinition",
            "29db55cdc6cf688ec4b7e7352a84c730bcd00920"
        ],
        [
            "Lemma bool_fun_of_BDD_1_ext : forall (bound : nat) (cfg : BDDconfig) (node : ad), bool_fun_ext (bool_fun_of_BDD_1 cfg node bound).",
            "VernacStartTheoremProof",
            "e3c13225f44888fea0e4f5499e17a8ef99c23af3"
        ],
        [
            "simple induction bound.",
            "VernacExtend",
            "e6eaba80df562d0a1ae7b07d94f210c1054f05dd"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg.",
            "VernacExtend",
            "8fae8665af568eb3c1dd2011dd03482c06225f1a"
        ],
        [
            "clear cfg.",
            "VernacExtend",
            "a3cce227bea4d3abcfe7270671f8707a9e3cbb32"
        ],
        [
            "intros bs y.",
            "VernacExtend",
            "d45133e21e3eb2c4564ae730ba47345baa980eb9"
        ],
        [
            "elim y.",
            "VernacExtend",
            "2e1340b20b979eff9f29f6f7a068bc217b31672c"
        ],
        [
            "clear y.",
            "VernacExtend",
            "511d70a5a7a86a9e4066c9ba3b5a692ac0b32d83"
        ],
        [
            "intros share counter.",
            "VernacExtend",
            "30d4f2e049ef4f98660d83bf19757cff3b0a27d3"
        ],
        [
            "intros node.",
            "VernacExtend",
            "1b3c9ec49b34bd4549c51ae440ece7af915b7ff2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "elim (MapGet (BDDvar * (ad * ad)) bs node).",
            "VernacExtend",
            "5cc3abdbacfbfa19f09b7e61ad8deca71a5c6712"
        ],
        [
            "Focus 2.",
            "VernacFocus",
            "485d4f15aaf5c71ed130bd270976f9fc4e12a61f"
        ],
        [
            "elim (Neqb node BDDzero).",
            "VernacExtend",
            "3c308816c42ad726645eff3d1faf9167d53d3a70"
        ],
        [
            "unfold bool_fun_ext in |- *.",
            "VernacExtend",
            "ff3a4095061df6aa114679e73cd5d0ed02bc0d1f"
        ],
        [
            "unfold bool_fun_eval, bool_fun_zero in |- *; reflexivity.",
            "VernacExtend",
            "954d5eb6224a8184309b1c9ca0051bc309214c92"
        ],
        [
            "unfold bool_fun_ext in |- *.",
            "VernacExtend",
            "ff3a4095061df6aa114679e73cd5d0ed02bc0d1f"
        ],
        [
            "unfold bool_fun_eval, bool_fun_one in |- *; reflexivity.",
            "VernacExtend",
            "c3829a21b36a5e51b3f0482cb9d74905d0e8b8b2"
        ],
        [
            "unfold bool_fun_ext in |- *.",
            "VernacExtend",
            "ff3a4095061df6aa114679e73cd5d0ed02bc0d1f"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "unfold bool_fun_zero in |- *.",
            "VernacExtend",
            "b4dd39bba65f841fd84af1fcaa292a6fbe55ed37"
        ],
        [
            "intro a.",
            "VernacExtend",
            "14896994838b4c124c1f1123678e1f3468f5e2ea"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "intro vb'.",
            "VernacExtend",
            "8dc41c399f00f5496006e459b7869e7ddd61020e"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "elim a.",
            "VernacExtend",
            "0c6adf0ffd2499090af2d0ebdf1d0d8f99dee374"
        ],
        [
            "intros y y0.",
            "VernacExtend",
            "2b7819cee54d977f978ca1e60fe3841ab60264dd"
        ],
        [
            "elim y0.",
            "VernacExtend",
            "e71ce3a6047692ad8369d196effe426cc35c6283"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg.",
            "VernacExtend",
            "8fae8665af568eb3c1dd2011dd03482c06225f1a"
        ],
        [
            "clear cfg.",
            "VernacExtend",
            "a3cce227bea4d3abcfe7270671f8707a9e3cbb32"
        ],
        [
            "intros bs y.",
            "VernacExtend",
            "d45133e21e3eb2c4564ae730ba47345baa980eb9"
        ],
        [
            "elim y.",
            "VernacExtend",
            "2e1340b20b979eff9f29f6f7a068bc217b31672c"
        ],
        [
            "clear y.",
            "VernacExtend",
            "511d70a5a7a86a9e4066c9ba3b5a692ac0b32d83"
        ],
        [
            "intros share counter.",
            "VernacExtend",
            "30d4f2e049ef4f98660d83bf19757cff3b0a27d3"
        ],
        [
            "intros node.",
            "VernacExtend",
            "1b3c9ec49b34bd4549c51ae440ece7af915b7ff2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "elim (MapGet (BDDvar * (ad * ad)) bs node).",
            "VernacExtend",
            "5cc3abdbacfbfa19f09b7e61ad8deca71a5c6712"
        ],
        [
            "Focus 2.",
            "VernacFocus",
            "485d4f15aaf5c71ed130bd270976f9fc4e12a61f"
        ],
        [
            "elim (Neqb node BDDzero).",
            "VernacExtend",
            "3c308816c42ad726645eff3d1faf9167d53d3a70"
        ],
        [
            "unfold bool_fun_ext, bool_fun_zero in |- *.",
            "VernacExtend",
            "49f55d6bcc28ce8146b0cebb10f0143e6389d5e8"
        ],
        [
            "unfold bool_fun_eval in |- *; reflexivity.",
            "VernacExtend",
            "b81404cbe9a1197dd80aaa21db4b4e5c8cc87a40"
        ],
        [
            "unfold bool_fun_ext, bool_fun_one in |- *.",
            "VernacExtend",
            "cbfe1d3cb2fe64164411cde7f1ceb58c95de79d9"
        ],
        [
            "unfold bool_fun_eval in |- *; reflexivity.",
            "VernacExtend",
            "b81404cbe9a1197dd80aaa21db4b4e5c8cc87a40"
        ],
        [
            "intros a.",
            "VernacExtend",
            "9fef235d1a71132a4c9de7f87ab95d540098d91d"
        ],
        [
            "elim a.",
            "VernacExtend",
            "0c6adf0ffd2499090af2d0ebdf1d0d8f99dee374"
        ],
        [
            "intros y y0.",
            "VernacExtend",
            "2b7819cee54d977f978ca1e60fe3841ab60264dd"
        ],
        [
            "elim y0.",
            "VernacExtend",
            "e71ce3a6047692ad8369d196effe426cc35c6283"
        ],
        [
            "intros y1 y2.",
            "VernacExtend",
            "d9aefd81c99b4d45206eeceec9e9d5d8481f9a11"
        ],
        [
            "cut (bool_fun_ext (bool_fun_of_BDD_1 (bs, (share, counter)) y2 n)).",
            "VernacExtend",
            "9d129c5c767a015063051c3e33e291a5edccec83"
        ],
        [
            "intro H0.",
            "VernacExtend",
            "33135fa360f1c5b700715c0dfac0804c96d2fa77"
        ],
        [
            "cut (bool_fun_ext (bool_fun_of_BDD_1 (bs, (share, counter)) y1 n)).",
            "VernacExtend",
            "5ef3a9c3fb616a14079bdc9a3ae96babd6b3b9e9"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "unfold bool_fun_ext in |- *.",
            "VernacExtend",
            "ff3a4095061df6aa114679e73cd5d0ed02bc0d1f"
        ],
        [
            "intros vb vb' H2.",
            "VernacExtend",
            "b6730886888c86a28862db300d1dc3a8bda674c5"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "unfold bool_fun_ext in H0, H1.",
            "VernacExtend",
            "da4e6ab960e2fdc1ad333c407f9b092f921d86a6"
        ],
        [
            "unfold bool_fun_eval in H0, H1.",
            "VernacExtend",
            "4b1fd71716391240b409aff3be7cad5d5f3c680a"
        ],
        [
            "rewrite (H1 vb vb' H2).",
            "VernacExtend",
            "021a2a0bac47f7bc4f23f147a1ae630f77e90aa1"
        ],
        [
            "rewrite (H0 vb vb' H2).",
            "VernacExtend",
            "eb5ea0d608d73c5aec3c5c29160d191a8d21d728"
        ],
        [
            "unfold var_binding_eq in H2.",
            "VernacExtend",
            "fc045a65ca16d14d515510f642f04c7e5464db31"
        ],
        [
            "rewrite (H2 y).",
            "VernacExtend",
            "b3e78a8af4747b51741ea246282ee0c06acf1ad1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_of_BDD_ext : forall (cfg : BDDconfig) (node : ad), bool_fun_ext (bool_fun_of_BDD cfg node).",
            "VernacStartTheoremProof",
            "9fe76451243097390b0983288bf93f481992afa9"
        ],
        [
            "unfold bool_fun_of_BDD in |- *.",
            "VernacExtend",
            "6db691e81231fd80696763d17a3695cfd8e0627e"
        ],
        [
            "intros cfg node.",
            "VernacExtend",
            "6fd14c7888c45af53a749c7ffdeb0a003989b080"
        ],
        [
            "apply bool_fun_of_BDD_1_ext.",
            "VernacExtend",
            "c21462474567e48a2508c4efb71a8e54e7d71050"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma augment_eq : forall (vb : var_binding) (x : BDDvar) (b : bool), vb x = b -> var_binding_eq (augment vb x b) vb.",
            "VernacStartTheoremProof",
            "91b744f0ef8b9208a6102b958174e7b46fce6eff"
        ],
        [
            "unfold var_binding_eq in |- *.",
            "VernacExtend",
            "e2e5c7b406e1cc1093cb6b4238aecf5940e25650"
        ],
        [
            "intros vb x b H x0.",
            "VernacExtend",
            "1408a231d06522d6a9ae326648f35d5b5f6bc112"
        ],
        [
            "unfold augment in |- *.",
            "VernacExtend",
            "2541ca0b2d7a468c91ad53f9af6a38fcb4e83a32"
        ],
        [
            "elim (sumbool_of_bool (BDDvar_eq x x0)).",
            "VernacExtend",
            "d13e5118ea1406b3446c4123bf55d077e5a0d23d"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "rewrite y.",
            "VernacExtend",
            "981e1312d3ff196b34a8ce70ebd2fc1285cb160f"
        ],
        [
            "cut (x = x0).",
            "VernacExtend",
            "67701fcbf85331b2210971fc334679f5dbb2ddb1"
        ],
        [
            "intro H0.",
            "VernacExtend",
            "33135fa360f1c5b700715c0dfac0804c96d2fa77"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite H; reflexivity.",
            "VernacExtend",
            "1eef9b63d851b99cfa44117acf0ddd958095123d"
        ],
        [
            "apply Neqb_complete.",
            "VernacExtend",
            "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
        ],
        [
            "exact y.",
            "VernacExtend",
            "797b6a352d38c8451a63806add6c46450ff721c5"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "rewrite y.",
            "VernacExtend",
            "981e1312d3ff196b34a8ce70ebd2fc1285cb160f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition bool_fun_independent (bf : bool_fun) (x : BDDvar) := forall vb : var_binding, bool_fun_eval bf (augment vb x true) = bool_fun_eval bf (augment vb x false).",
            "VernacDefinition",
            "dab9b8dc50ad9279b6e95ad57dd810593a389886"
        ],
        [
            "Lemma bool_fun_independent_lemma : forall (bf : bool_fun) (x : BDDvar) (vb : var_binding) (b : bool), bool_fun_ext bf -> bool_fun_independent bf x -> bool_fun_eval bf (augment vb x b) = bool_fun_eval bf vb.",
            "VernacStartTheoremProof",
            "91adec3ac04bf133045339ea54a4d1386705b2a3"
        ],
        [
            "intros bf x vb b H H0.",
            "VernacExtend",
            "d600dba7b0eecf9bcb81aeeda1e423b84470f680"
        ],
        [
            "elim (sumbool_of_bool (vb x)).",
            "VernacExtend",
            "a0970b3358e1bd41f4552622aa36dfddb0900e82"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "elim b.",
            "VernacExtend",
            "954e73d8a25006d790022abb5978a50d3a888a56"
        ],
        [
            "cut (var_binding_eq (augment vb x true) vb).",
            "VernacExtend",
            "ed395b54246b4c8b638bd005c84a1467464c59b2"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "rewrite (H (augment vb x true) vb H1).",
            "VernacExtend",
            "fb2a5c044e4545f959db2624b99c55ad583ba002"
        ],
        [
            "cut (bool_fun_eval bf (augment vb x true) = bool_fun_eval bf vb).",
            "VernacExtend",
            "0fc6ac46664c0f2a0eba1ee3824ca6ece6338681"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "intro H2.",
            "VernacExtend",
            "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite (H (augment vb x true) vb H1).",
            "VernacExtend",
            "fb2a5c044e4545f959db2624b99c55ad583ba002"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply augment_eq.",
            "VernacExtend",
            "f6cda00b2ead5e480bd1a79928ec0b102674b6c7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- (H0 vb).",
            "VernacExtend",
            "7cd58aa8ee7d0645942ce061b7498dcada528c69"
        ],
        [
            "cut (var_binding_eq (augment vb x true) vb).",
            "VernacExtend",
            "ed395b54246b4c8b638bd005c84a1467464c59b2"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "rewrite (H (augment vb x true) vb H1).",
            "VernacExtend",
            "fb2a5c044e4545f959db2624b99c55ad583ba002"
        ],
        [
            "cut (bool_fun_eval bf (augment vb x true) = bool_fun_eval bf vb).",
            "VernacExtend",
            "0fc6ac46664c0f2a0eba1ee3824ca6ece6338681"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "intro H2.",
            "VernacExtend",
            "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite (H (augment vb x true) vb H1).",
            "VernacExtend",
            "fb2a5c044e4545f959db2624b99c55ad583ba002"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply augment_eq.",
            "VernacExtend",
            "f6cda00b2ead5e480bd1a79928ec0b102674b6c7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "elim b.",
            "VernacExtend",
            "954e73d8a25006d790022abb5978a50d3a888a56"
        ],
        [
            "cut (var_binding_eq (augment vb x false) vb).",
            "VernacExtend",
            "38457ba05b1d0cc128795abd63a26d45bcb0d522"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "cut (bool_fun_eval bf (augment vb x false) = bool_fun_eval bf vb).",
            "VernacExtend",
            "f511334a28cdc9666f03d905a71899abbc7d2bea"
        ],
        [
            "intro H2.",
            "VernacExtend",
            "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply augment_eq.",
            "VernacExtend",
            "f6cda00b2ead5e480bd1a79928ec0b102674b6c7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (var_binding_eq (augment vb x false) vb).",
            "VernacExtend",
            "38457ba05b1d0cc128795abd63a26d45bcb0d522"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply augment_eq.",
            "VernacExtend",
            "f6cda00b2ead5e480bd1a79928ec0b102674b6c7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_independent_zero : forall (cfg : BDDconfig) (x : BDDvar), BDDconfig_OK cfg -> bool_fun_independent (bool_fun_of_BDD cfg BDDzero) x.",
            "VernacStartTheoremProof",
            "dcdece90dec9b221ac4d7d7f262c5c797f63ef3b"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros x H.",
            "VernacExtend",
            "a0cd74b85812810ce5a78a540bad98f664bd4842"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
            "VernacExtend",
            "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
        ],
        [
            "unfold bool_fun_independent in |- *.",
            "VernacExtend",
            "a9c1518f7123ea1f62c19e6eac44b0ba3fdabf3f"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "unfold bool_fun_eval, bool_fun_zero in |- *.",
            "VernacExtend",
            "e03c51d8148f10a47439237755d15e7edb116c7b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_independent_one : forall (cfg : BDDconfig) (x : BDDvar), BDDconfig_OK cfg -> bool_fun_independent (bool_fun_of_BDD cfg BDDone) x.",
            "VernacStartTheoremProof",
            "3db002097ff0630becf21333df4268db84118663"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros x H.",
            "VernacExtend",
            "a0cd74b85812810ce5a78a540bad98f664bd4842"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) .",
            "VernacExtend",
            "3f6607f94cebcd36beb279442c0b7fce4d5720f5"
        ],
        [
            "unfold bool_fun_independent in |- *.",
            "VernacExtend",
            "a9c1518f7123ea1f62c19e6eac44b0ba3fdabf3f"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "unfold bool_fun_eval, bool_fun_one in |- *.",
            "VernacExtend",
            "ea9a5484a003a4d9dd0302ccebfad634be48d4ce"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_dom_is_internal : forall (cfg : BDDconfig) (node : ad), in_dom _ node (fst cfg) = true -> is_internal_node cfg node.",
            "VernacStartTheoremProof",
            "eb5f4bbfa98926b82dba01b3e2469fc5b863bd2a"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros node H.",
            "VernacExtend",
            "810a326c618a8ae71b2402a410c47ae5e4bc4ad1"
        ],
        [
            "elim (option_sum _ (MapGet _ (fst (bs, (share, counter))) node)).",
            "VernacExtend",
            "1875675a9360866c4b8da8ad781710a59c5c06bb"
        ],
        [
            "intros y.",
            "VernacExtend",
            "d3cd14babe4904577f05dd23b379c589bf67ea40"
        ],
        [
            "elim y.",
            "VernacExtend",
            "2e1340b20b979eff9f29f6f7a068bc217b31672c"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "elim x.",
            "VernacExtend",
            "4dae947360dc7d88bee6f5459fc6c026a56c9298"
        ],
        [
            "intro y0.",
            "VernacExtend",
            "d1834bf95553ce1485d1c19693bbdd1e392d677e"
        ],
        [
            "intro y1.",
            "VernacExtend",
            "4d0ec3273193a8100c12a11465f6beb7953e5c77"
        ],
        [
            "elim y1.",
            "VernacExtend",
            "7deb42a0d69f05166c553edfbfcc7a66614866f4"
        ],
        [
            "intros y2 y3 y4.",
            "VernacExtend",
            "a37ec199aae417c062da0aa32fbb80092375c854"
        ],
        [
            "split with y0; split with y2; split with y3; assumption.",
            "VernacExtend",
            "e262d7409e0e1d8d5a1085a98879c939df506f59"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "unfold in_dom in H.",
            "VernacExtend",
            "f74550613788a9e05d16c146cb433d7ae258d92f"
        ],
        [
            "rewrite y in H.",
            "VernacExtend",
            "0d861e553bc0c4d173e68ac874cc26cc8570f70b"
        ],
        [
            "discriminate H.",
            "VernacExtend",
            "f00d7179963a09be7462e0ca3723e1bc13cd6c39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma internal_node_lemma : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> Neqb (low cfg node) (high cfg node) = false /\\ BDDbounded (fst cfg) (low cfg node) (var cfg node) /\\ BDDbounded (fst cfg) (high cfg node) (var cfg node).",
            "VernacStartTheoremProof",
            "917dc95111289883a7cab53658efc876a0fce410"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros node H H0.",
            "VernacExtend",
            "8d8c54b0bc0d07c3f27d23d06e4c765a91435774"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "elim H1.",
            "VernacExtend",
            "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
        ],
        [
            "intros H3 H4.",
            "VernacExtend",
            "a4ab42ba0b3ae584df1cc6650ce0a63bbbf6221c"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "inversion H5.",
            "VernacExtend",
            "c72c29a0eff26255c8a4846e1794fb6f7559049a"
        ],
        [
            "inversion H6.",
            "VernacExtend",
            "91475f7cc5dc394b5f8e34c38f1f3fae3256b731"
        ],
        [
            "cut (BDD_OK bs node).",
            "VernacExtend",
            "bf40d4ac11cacf3c4c7ab81a432d707f74a1c33f"
        ],
        [
            "unfold BDD_OK in |- *.",
            "VernacExtend",
            "b26518e0ed97c56b4066a7424bbd74e6c10a2677"
        ],
        [
            "unfold BDDordered in |- *.",
            "VernacExtend",
            "df9fe3c650a80b7babe1bb741a113ceb82eba8e3"
        ],
        [
            "simpl in H7; rewrite H7.",
            "VernacExtend",
            "a408ae2a1c472e42f8c62223f198c5c7da89aa7e"
        ],
        [
            "intro H8.",
            "VernacExtend",
            "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
        ],
        [
            "unfold var, high, low in |- *.",
            "VernacExtend",
            "533dccb89fed778ebbf74258d9372e72a231e90f"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "cut (node = BDDzero \\/ node = BDDone \\/ (exists x' : BDDvar, (exists l' : BDDvar, (exists r' : BDDvar, MapGet _ bs node = Some (x', (l', r')) /\\ BDDcompare x' (ad_S x) = Datatypes.Lt /\\ Neqb l' r' = false /\\ BDDbounded bs l' x' /\\ BDDbounded bs r' x')))).",
            "VernacExtend",
            "06807b374ba340eddf151b54b7e73277a53cc22d"
        ],
        [
            "intros H9.",
            "VernacExtend",
            "decee693aea2c0a8e1f65c42c7fc8ccde5deefa1"
        ],
        [
            "elim H9; intros.",
            "VernacExtend",
            "12334c97f44957e9c5cef0f3af9bfd7eaf28bd49"
        ],
        [
            "rewrite H10 in H7; rewrite H3 in H7; discriminate.",
            "VernacExtend",
            "af94b4e2f54ccc80fa7b5e247360b1ebcf88b7d2"
        ],
        [
            "elim H10; intros.",
            "VernacExtend",
            "2a1b8ee38a88a74aba2a10a94540a046496421a7"
        ],
        [
            "rewrite H11 in H7; rewrite (proj1 H4) in H7; discriminate.",
            "VernacExtend",
            "94ff88e6975fbab020ecf17a8dd69fb1510f1a57"
        ],
        [
            "inversion H11.",
            "VernacExtend",
            "e3dad2cd24e24300a066e006efd8d61e85377ebb"
        ],
        [
            "inversion H12.",
            "VernacExtend",
            "d5ec1d67ecbf066a6575bda368738e1ad0dbbc60"
        ],
        [
            "inversion H13.",
            "VernacExtend",
            "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
        ],
        [
            "inversion H14.",
            "VernacExtend",
            "158c311bb69c3e5a75670dfcbe8f342a533b833e"
        ],
        [
            "rewrite H7 in H15.",
            "VernacExtend",
            "17bef0af3df296a117969c00514306f28f087450"
        ],
        [
            "injection H15.",
            "VernacExtend",
            "ec21fb25b74b443f9a45e6195a722ee9dd005b64"
        ],
        [
            "intros H17 H18 H19.",
            "VernacExtend",
            "add8cba8dea95e86bddefff463463963fae3b5bc"
        ],
        [
            "rewrite <- H17 in H16.",
            "VernacExtend",
            "c3b4f1b86b0c4408ab279c84eb1dc4da6e9d1d4c"
        ],
        [
            "rewrite <- H18 in H16.",
            "VernacExtend",
            "430b38d843901e1266773eefec550bd7bcbb93f2"
        ],
        [
            "rewrite <- H19 in H16.",
            "VernacExtend",
            "4582c6a17ca0d682e099593964ad0f52ef9dbd38"
        ],
        [
            "exact (proj2 H16).",
            "VernacExtend",
            "9b87742b55aa6762f8959571717ed753dcaf64af"
        ],
        [
            "apply BDDbounded_lemma.",
            "VernacExtend",
            "3c870649dc3c5e44a0fffe297aa2687fc5c7ef38"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply (proj2 H4).",
            "VernacExtend",
            "0aaacc2b7f33cb5b25bd47ddeea55c4164aa728d"
        ],
        [
            "unfold in_dom in |- *; simpl in H7; rewrite H7; reflexivity.",
            "VernacExtend",
            "988f80497377ddb8881bcbfc8e4bca5a5ac0d967"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma high_bounded : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> BDDbounded (fst cfg) (high cfg node) (var cfg node).",
            "VernacStartTheoremProof",
            "983fddef9db55daad627dbea69c25ea85a34ecdf"
        ],
        [
            "intros cfg node H H0.",
            "VernacExtend",
            "6915d884c6cb81130501cdde0beadbda4013e056"
        ],
        [
            "exact (proj2 (proj2 (internal_node_lemma cfg node H H0))).",
            "VernacExtend",
            "0cc7be38cf1fd8f84fcac74571ee7d25a5a8eb65"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma low_bounded : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> BDDbounded (fst cfg) (low cfg node) (var cfg node).",
            "VernacStartTheoremProof",
            "fa632aa4df3b408c4ccc92a635343a1b58fd20ec"
        ],
        [
            "intros cfg node H H0.",
            "VernacExtend",
            "6915d884c6cb81130501cdde0beadbda4013e056"
        ],
        [
            "exact (proj1 (proj2 (internal_node_lemma cfg node H H0))).",
            "VernacExtend",
            "cf7f820794f55cde0801e2a1c4696a3746b25b84"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma high_OK : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> config_node_OK cfg (high cfg node).",
            "VernacStartTheoremProof",
            "999330468772dccf5ef0823803ea8940be7a859e"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros node H H0.",
            "VernacExtend",
            "8d8c54b0bc0d07c3f27d23d06e4c765a91435774"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "inversion H2.",
            "VernacExtend",
            "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
        ],
        [
            "unfold high in |- *.",
            "VernacExtend",
            "af6be3a481b55356ef54ee85b5fb2cba596f398f"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "cut (BDDbounded (fst (bs, (share, counter))) (high (bs, (share, counter)) node) (var (bs, (share, counter)) node)).",
            "VernacExtend",
            "f9f069c4093507d05b657e63d52719b669a4f107"
        ],
        [
            "unfold var, high in |- *.",
            "VernacExtend",
            "85c8068a4d01a91ae85f7af62100be5915a2ddf7"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "unfold config_node_OK in |- *.",
            "VernacExtend",
            "5edbe1a9b1457638fa819af9125dd811697d609e"
        ],
        [
            "apply BDDbounded_node_OK with (n := x).",
            "VernacExtend",
            "60001235dea6263170f4fd3418ac039c8862414a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_bounded.",
            "VernacExtend",
            "ff362efe69676962e245e5ff07be9a8cb361badf"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma low_OK : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> config_node_OK cfg (low cfg node).",
            "VernacStartTheoremProof",
            "da185284f79e5d3206fa7630c9afa5116d91b1d2"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros node H H0.",
            "VernacExtend",
            "8d8c54b0bc0d07c3f27d23d06e4c765a91435774"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "inversion H2.",
            "VernacExtend",
            "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
        ],
        [
            "unfold low in |- *.",
            "VernacExtend",
            "344cb2081628177ec374c362b17ddb5395ae8549"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "cut (BDDbounded (fst (bs, (share, counter))) (low (bs, (share, counter)) node) (var (bs, (share, counter)) node)).",
            "VernacExtend",
            "42f910f7cddb254db618457370b676b26f300ae5"
        ],
        [
            "unfold var, low in |- *.",
            "VernacExtend",
            "a773b97e90ea3ef3e28a86f604b6ab8ce6c64d12"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "unfold config_node_OK in |- *.",
            "VernacExtend",
            "5edbe1a9b1457638fa819af9125dd811697d609e"
        ],
        [
            "apply BDDbounded_node_OK with (n := x).",
            "VernacExtend",
            "60001235dea6263170f4fd3418ac039c8862414a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_bounded.",
            "VernacExtend",
            "dac579d6870a3ae558811d081bd7030f5ca862d4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma low_high_neq : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> Neqb (low cfg node) (high cfg node) = false.",
            "VernacStartTheoremProof",
            "1332330056c23207f69bfce78bf1e8787e3ff776"
        ],
        [
            "intros cfg node H H0.",
            "VernacExtend",
            "6915d884c6cb81130501cdde0beadbda4013e056"
        ],
        [
            "exact (proj1 (internal_node_lemma cfg node H H0)).",
            "VernacExtend",
            "cee21884bf4f477f0b688d30bed6dfc12e7c0f4d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDvar_independent_1 : forall (cfg : BDDconfig) (n : nat) (node : ad) (x : BDDvar), BDDconfig_OK cfg -> is_internal_node cfg node -> n = nat_of_N (var cfg node) -> BDDcompare (var cfg node) x = Datatypes.Lt -> bool_fun_independent (bool_fun_of_BDD cfg node) x.",
            "VernacStartTheoremProof",
            "9a4144ba65bccf1f0e918b64aa01b5f631fb982d"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "apply lt_wf_ind with (P := fun n : nat => forall (node : ad) (x : BDDvar), BDDconfig_OK (bs, (share, counter)) -> is_internal_node (bs, (share, counter)) node -> n = nat_of_N (var (bs, (share, counter)) node) -> BDDcompare (var (bs, (share, counter)) node) x = Datatypes.Lt -> bool_fun_independent (bool_fun_of_BDD (bs, (share, counter)) node) x).",
            "VernacExtend",
            "0e39ccdc46f663d179b4f86488e9fee00701f3bb"
        ],
        [
            "intros n0 H node x H0 H1 H2 H3.",
            "VernacExtend",
            "a928a7e9017dfe889201f9aa99579a44f640603b"
        ],
        [
            "cut (bool_fun_independent (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)) x).",
            "VernacExtend",
            "c9434d0cbb2f3105f1ba3767cca0d4c6755e7223"
        ],
        [
            "cut (bool_fun_independent (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) x).",
            "VernacExtend",
            "41d853cabb44d31e85be7b2322f0e288e29850fe"
        ],
        [
            "intros H4 H5.",
            "VernacExtend",
            "46089e7a15bf8449e308e9b67ccaeb21f87323c9"
        ],
        [
            "rewrite (proj2 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0)) node H1).",
            "VernacExtend",
            "17617156dde6264be01e8b117d04c90deaa59f2b"
        ],
        [
            "unfold bool_fun_independent in |- *.",
            "VernacExtend",
            "a9c1518f7123ea1f62c19e6eac44b0ba3fdabf3f"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "unfold bool_fun_independent in H4, H5.",
            "VernacExtend",
            "ab5a1b3ef571073037960a8f40adec4dbd0aa34b"
        ],
        [
            "unfold bool_fun_eval in H4, H5.",
            "VernacExtend",
            "6822c93e4ee90602f0b1d87fc56c308abf867054"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "inversion H6.",
            "VernacExtend",
            "91475f7cc5dc394b5f8e34c38f1f3fae3256b731"
        ],
        [
            "inversion H7.",
            "VernacExtend",
            "42a5ca7b50f733735ed76a249aba00e788a69623"
        ],
        [
            "unfold var, high, low in |- *.",
            "VernacExtend",
            "533dccb89fed778ebbf74258d9372e72a231e90f"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "unfold augment at 1 4 in |- *.",
            "VernacExtend",
            "5b9376c07c64aa236f933f84f862b7d17732f4a5"
        ],
        [
            "cut (BDDvar_eq x x0 = false).",
            "VernacExtend",
            "1afce096dd78a592e6c2787abb0b62f3434e4387"
        ],
        [
            "intro H9.",
            "VernacExtend",
            "3a5cee2c4602853379bc498c20515b4b8bb64031"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "unfold var, high, low in H5, H4.",
            "VernacExtend",
            "c40c73cb7f56cf144bb95346a24dae3e6c8c4efa"
        ],
        [
            "rewrite H8 in H4.",
            "VernacExtend",
            "81d77aa72a8a5f09afd6f31bcd5ef237bf150c2a"
        ],
        [
            "rewrite H8 in H5.",
            "VernacExtend",
            "d1f0a58fe6fce7615e114e391cab67ca89c6e81d"
        ],
        [
            "rewrite (H4 vb).",
            "VernacExtend",
            "5b1e99f7a76bf2514f390447aa8bcffab40ddd9f"
        ],
        [
            "rewrite (H5 vb).",
            "VernacExtend",
            "972de0249707f7925458f5259351d348c97b7139"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold BDDvar_eq in |- *.",
            "VernacExtend",
            "778a0eac62de44c97ec42185c9140b79d1f3d966"
        ],
        [
            "cut (Neqb x x0 <> true).",
            "VernacExtend",
            "6593d7af182d704c932bc22645f7bdce95a82441"
        ],
        [
            "elim (Neqb x x0).",
            "VernacExtend",
            "fabd03b35ee35a34b0fc7ed7b14cd9b9f9ff2b33"
        ],
        [
            "intro H9.",
            "VernacExtend",
            "3a5cee2c4602853379bc498c20515b4b8bb64031"
        ],
        [
            "absurd (true = true).",
            "VernacExtend",
            "f7e3fd18e2df0389fa139b111aee1ee7bd370b6a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intro H9.",
            "VernacExtend",
            "3a5cee2c4602853379bc498c20515b4b8bb64031"
        ],
        [
            "unfold var in H3.",
            "VernacExtend",
            "3d4cba6f8aefbdf470f0af2fc2d627b0e0e01d35"
        ],
        [
            "rewrite H8 in H3.",
            "VernacExtend",
            "92121e6027d4f2d3073b05c17d7381d9c9743e71"
        ],
        [
            "cut (nat_of_N x0 < nat_of_N x).",
            "VernacExtend",
            "47467ceae5957ba26d9d5e59ada7e2800d5d9779"
        ],
        [
            "cut (x = x0).",
            "VernacExtend",
            "67701fcbf85331b2210971fc334679f5dbb2ddb1"
        ],
        [
            "intro H10.",
            "VernacExtend",
            "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
        ],
        [
            "rewrite H10.",
            "VernacExtend",
            "cd2638bc5a7f85648c5e2c9d77046abc07e2da6a"
        ],
        [
            "exact (lt_irrefl (nat_of_N x0)).",
            "VernacExtend",
            "9549e97c15d5246308f1fb8647e19127811d06b7"
        ],
        [
            "apply Neqb_complete.",
            "VernacExtend",
            "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (node_OK bs (high (bs, (share, counter)) node)).",
            "VernacExtend",
            "7699d0d9986851dc6ff260c18fcb324a9ef87fe6"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "elim H4.",
            "VernacExtend",
            "fcfe1d1075db57bfda358e292efa503f39fdf8e2"
        ],
        [
            "intro H5.",
            "VernacExtend",
            "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "apply bool_fun_independent_zero.",
            "VernacExtend",
            "9a377873f1b1d341e646a18508cb937f4ed28b57"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro H5.",
            "VernacExtend",
            "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
        ],
        [
            "elim H5; intro H6.",
            "VernacExtend",
            "d7221a3f3787063eaa2b75c748f35904fa3b4885"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "apply bool_fun_independent_one.",
            "VernacExtend",
            "7de4b8b13839ac0016f662c16bcfa3b65e229bc9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H with (m := nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node))).",
            "VernacExtend",
            "d154ebea6413294bd72a627204e29fd1ce6ffe05"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_high.",
            "VernacExtend",
            "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold is_internal_node in |- *.",
            "VernacExtend",
            "bb72e5c5b6dd4d1ba90a81e8f3c00cec26c747e5"
        ],
        [
            "elim (option_sum _ (MapGet (BDDvar * (ad * ad)) (fst (bs, (share, counter))) (high (bs, (share, counter)) node))).",
            "VernacExtend",
            "54f6a793015602b176588e6a2536039f54434764"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "elim y.",
            "VernacExtend",
            "2e1340b20b979eff9f29f6f7a068bc217b31672c"
        ],
        [
            "intro x0.",
            "VernacExtend",
            "e74c874e61a3691df9987468fe1f6ab72f4039f2"
        ],
        [
            "elim x0.",
            "VernacExtend",
            "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
        ],
        [
            "intro y0.",
            "VernacExtend",
            "d1834bf95553ce1485d1c19693bbdd1e392d677e"
        ],
        [
            "intro y1.",
            "VernacExtend",
            "4d0ec3273193a8100c12a11465f6beb7953e5c77"
        ],
        [
            "elim y1.",
            "VernacExtend",
            "7deb42a0d69f05166c553edfbfcc7a66614866f4"
        ],
        [
            "intro y2.",
            "VernacExtend",
            "3898c5088224886d1f593f040ef01a41b72ccc02"
        ],
        [
            "intro y3.",
            "VernacExtend",
            "0d3d2cd4a29eff63110bfe427038dcee633962e5"
        ],
        [
            "split with y0.",
            "VernacExtend",
            "d3c52e55802fb43db466fd9162315e497a478832"
        ],
        [
            "split with y2.",
            "VernacExtend",
            "5e9b70a4ddc0ca617c1b771ec00accaaa526b228"
        ],
        [
            "split with y3.",
            "VernacExtend",
            "888702823f47785900de6c86b4ecb0609cb5a1c9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "unfold in_dom in H6.",
            "VernacExtend",
            "60b2126906d8653037c7a0e424afea7c8202ab2a"
        ],
        [
            "simpl in y.",
            "VernacExtend",
            "8b4bef855eef9bd24190f48a91d19fe39b9a9e63"
        ],
        [
            "rewrite y in H6.",
            "VernacExtend",
            "9351c08cd0fc8d04007b46c5b3979d018643ba8b"
        ],
        [
            "discriminate H6.",
            "VernacExtend",
            "7415b937012eb118b755d10a8be2a67e478ec2c8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply BDDcompare_trans with (y := var (bs, (share, counter)) node).",
            "VernacExtend",
            "ec7a4d40be119fdf6d4626e2f9b30aadcf7a7c08"
        ],
        [
            "apply BDDvar_ordered_high.",
            "VernacExtend",
            "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exact (high_OK (bs, (share, counter)) node H0 H1).",
            "VernacExtend",
            "eab905f4316a15a97c3c3bf4fc8f3f26b45a67f8"
        ],
        [
            "cut (node_OK bs (low (bs, (share, counter)) node)).",
            "VernacExtend",
            "a4c6b635f85ce22ab2697146adc950d27cad4145"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "elim H4.",
            "VernacExtend",
            "fcfe1d1075db57bfda358e292efa503f39fdf8e2"
        ],
        [
            "intro H5.",
            "VernacExtend",
            "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "apply bool_fun_independent_zero.",
            "VernacExtend",
            "9a377873f1b1d341e646a18508cb937f4ed28b57"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro H5.",
            "VernacExtend",
            "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
        ],
        [
            "elim H5; intro H6.",
            "VernacExtend",
            "d7221a3f3787063eaa2b75c748f35904fa3b4885"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "apply bool_fun_independent_one.",
            "VernacExtend",
            "7de4b8b13839ac0016f662c16bcfa3b65e229bc9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H with (m := nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node))).",
            "VernacExtend",
            "3b54771b8fbc271104928c326d8ae314891789cc"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_low.",
            "VernacExtend",
            "ba66c15448aced83d225d0e66a0f593162c936e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply BDDcompare_trans with (y := var (bs, (share, counter)) node).",
            "VernacExtend",
            "ec7a4d40be119fdf6d4626e2f9b30aadcf7a7c08"
        ],
        [
            "apply BDDvar_ordered_low.",
            "VernacExtend",
            "ba66c15448aced83d225d0e66a0f593162c936e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exact (low_OK (bs, (share, counter)) node H0 H1).",
            "VernacExtend",
            "95400dc029d070d1590d6bcda8e750c8ecb500ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDvar_independent_high : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> bool_fun_independent (bool_fun_of_BDD cfg (high cfg node)) (var cfg node).",
            "VernacStartTheoremProof",
            "3c55e6e29c0c37aa49c2fac861f32b28e2e3546f"
        ],
        [
            "intros cfg node H H0.",
            "VernacExtend",
            "6915d884c6cb81130501cdde0beadbda4013e056"
        ],
        [
            "cut (config_node_OK cfg (high cfg node)).",
            "VernacExtend",
            "90438356955ae9c107262fe44f209b7f065e21d2"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "elim H1.",
            "VernacExtend",
            "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
        ],
        [
            "intro H2.",
            "VernacExtend",
            "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply bool_fun_independent_zero.",
            "VernacExtend",
            "9a377873f1b1d341e646a18508cb937f4ed28b57"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro H2.",
            "VernacExtend",
            "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
        ],
        [
            "elim H2; intro.",
            "VernacExtend",
            "939c927788b9492b13127156d1f300437fdf7754"
        ],
        [
            "rewrite H3; apply bool_fun_independent_one; assumption.",
            "VernacExtend",
            "d6865e78b2839fd237df104d47cbf5b2e87283ac"
        ],
        [
            "cut (is_internal_node cfg (high cfg node)).",
            "VernacExtend",
            "c94e9a9f879281d544b03f7e20455ffded458ebf"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "apply BDDvar_independent_1 with (n := nat_of_N (var cfg (high cfg node))).",
            "VernacExtend",
            "216dc93465208ad889fe0be54c8d4c337a30e3c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply BDDvar_ordered_high.",
            "VernacExtend",
            "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDvar_independent_low : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> bool_fun_independent (bool_fun_of_BDD cfg (low cfg node)) (var cfg node).",
            "VernacStartTheoremProof",
            "71caa4adff39c179d3788fa933eb21ef5dc8b1e8"
        ],
        [
            "intros cfg node H H0.",
            "VernacExtend",
            "6915d884c6cb81130501cdde0beadbda4013e056"
        ],
        [
            "cut (config_node_OK cfg (low cfg node)).",
            "VernacExtend",
            "f8099f38ad9a7a0e17a93ba8d6998f40f49b1ff9"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "elim H1.",
            "VernacExtend",
            "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
        ],
        [
            "intro H2.",
            "VernacExtend",
            "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply bool_fun_independent_zero.",
            "VernacExtend",
            "9a377873f1b1d341e646a18508cb937f4ed28b57"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro H2.",
            "VernacExtend",
            "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
        ],
        [
            "elim H2; intro.",
            "VernacExtend",
            "939c927788b9492b13127156d1f300437fdf7754"
        ],
        [
            "rewrite H3; apply bool_fun_independent_one; assumption.",
            "VernacExtend",
            "d6865e78b2839fd237df104d47cbf5b2e87283ac"
        ],
        [
            "cut (is_internal_node cfg (low cfg node)).",
            "VernacExtend",
            "3bbfd083f0306a5b6511b77b38b14776096baba6"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "apply BDDvar_independent_1 with (n := nat_of_N (var cfg (low cfg node))).",
            "VernacExtend",
            "482c0eada3ec538beb002f9fe5fdb55a619d0a47"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply BDDvar_ordered_low.",
            "VernacExtend",
            "ba66c15448aced83d225d0e66a0f593162c936e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_of_BDDzero : forall cfg : BDDconfig, BDDconfig_OK cfg -> bool_fun_eq (bool_fun_of_BDD cfg BDDzero) bool_fun_zero.",
            "VernacStartTheoremProof",
            "3cca82a6169aea56f32e82a939b8846b5da33f67"
        ],
        [
            "intros cfg H.",
            "VernacExtend",
            "ce3919e4a24071a40503b43aa3d70397760f15a0"
        ],
        [
            "unfold bool_fun_eq in |- *.",
            "VernacExtend",
            "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics cfg H)).",
            "VernacExtend",
            "c832aa1105b6d72c1c7d1da16723d7bf82ffcd82"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_of_BDDone : forall cfg : BDDconfig, BDDconfig_OK cfg -> bool_fun_eq (bool_fun_of_BDD cfg BDDone) bool_fun_one.",
            "VernacStartTheoremProof",
            "1269887fc9de13befd2821e3103f34825aad6f0a"
        ],
        [
            "intros cfg H.",
            "VernacExtend",
            "ce3919e4a24071a40503b43aa3d70397760f15a0"
        ],
        [
            "unfold bool_fun_eq in |- *.",
            "VernacExtend",
            "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics cfg H))).",
            "VernacExtend",
            "6a046cc2a966da273026f537e5b43d010721f74a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_of_BDDhigh : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> bool_fun_eq (bool_fun_of_BDD cfg (high cfg node)) (bool_fun_restrict (bool_fun_of_BDD cfg node) (var cfg node) true).",
            "VernacStartTheoremProof",
            "f24a75f8006a7d92066eb497109c652b2f475352"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros node H H0.",
            "VernacExtend",
            "8d8c54b0bc0d07c3f27d23d06e4c765a91435774"
        ],
        [
            "rewrite (proj2 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)) node H0).",
            "VernacExtend",
            "10405fd24088fdcfdb878ea083953b8a18cb77b4"
        ],
        [
            "unfold bool_fun_restrict in |- *.",
            "VernacExtend",
            "8f5a662d1228cd59b9d9d647a9421f5c9c13ed3a"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "unfold bool_fun_eq in |- *.",
            "VernacExtend",
            "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "unfold augment at 1 in |- *.",
            "VernacExtend",
            "1d433c78b96755eca7e111353b73a069bdea35fd"
        ],
        [
            "unfold BDDvar_eq in |- *.",
            "VernacExtend",
            "778a0eac62de44c97ec42185c9140b79d1f3d966"
        ],
        [
            "cut (Neqb (var (bs, (share, counter)) node) (var (bs, (share, counter)) node) = true).",
            "VernacExtend",
            "6322fd4e0d44d5083658fd5ae5650d0c42326e3b"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "cut (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node) (augment vb (var (bs, (share, counter)) node) true) = bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node) vb).",
            "VernacExtend",
            "41677fa3c1479d874804878b59191a5a13a207f5"
        ],
        [
            "intro H2.",
            "VernacExtend",
            "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "change (bool_fun_eval (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) (augment vb (var (bs, (share, counter)) node) true) = bool_fun_eval (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) vb) in |- *.",
            "VernacExtend",
            "4ee7c5c965e24f738ffea9883cb0efb2a224fc63"
        ],
        [
            "apply bool_fun_independent_lemma.",
            "VernacExtend",
            "96d5f1d92b89ae60d2d7b44a295c24f9c6ae60fc"
        ],
        [
            "apply bool_fun_of_BDD_ext.",
            "VernacExtend",
            "b4ca4bcdc77510aa1141d8e839805305e49722a4"
        ],
        [
            "apply BDDvar_independent_high.",
            "VernacExtend",
            "64235056f2921db57fc578b5f42b721d055c2379"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Neqb_correct.",
            "VernacExtend",
            "44ce40dca1a752c4f29effe8c09acf1cbe16e2b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_of_BDDlow : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> bool_fun_eq (bool_fun_of_BDD cfg (low cfg node)) (bool_fun_restrict (bool_fun_of_BDD cfg node) (var cfg node) false).",
            "VernacStartTheoremProof",
            "898e467ab220a35572c8bb9c8b11a63147cd2741"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros node H H0.",
            "VernacExtend",
            "8d8c54b0bc0d07c3f27d23d06e4c765a91435774"
        ],
        [
            "rewrite (proj2 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)) node H0).",
            "VernacExtend",
            "10405fd24088fdcfdb878ea083953b8a18cb77b4"
        ],
        [
            "unfold bool_fun_restrict in |- *.",
            "VernacExtend",
            "8f5a662d1228cd59b9d9d647a9421f5c9c13ed3a"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "unfold bool_fun_eq in |- *.",
            "VernacExtend",
            "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "unfold augment at 1 in |- *.",
            "VernacExtend",
            "1d433c78b96755eca7e111353b73a069bdea35fd"
        ],
        [
            "unfold BDDvar_eq in |- *.",
            "VernacExtend",
            "778a0eac62de44c97ec42185c9140b79d1f3d966"
        ],
        [
            "cut (Neqb (var (bs, (share, counter)) node) (var (bs, (share, counter)) node) = true).",
            "VernacExtend",
            "6322fd4e0d44d5083658fd5ae5650d0c42326e3b"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "cut (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node) (augment vb (var (bs, (share, counter)) node) false) = bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node) vb).",
            "VernacExtend",
            "23455e9887d295d4b6bdaf4dd6eb5cc851270a58"
        ],
        [
            "intro H2.",
            "VernacExtend",
            "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "change (bool_fun_eval (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)) (augment vb (var (bs, (share, counter)) node) false) = bool_fun_eval (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)) vb) in |- *.",
            "VernacExtend",
            "03c6d5d91d933894d590a493a82ca7b79b9ffc4f"
        ],
        [
            "apply bool_fun_independent_lemma.",
            "VernacExtend",
            "96d5f1d92b89ae60d2d7b44a295c24f9c6ae60fc"
        ],
        [
            "apply bool_fun_of_BDD_ext.",
            "VernacExtend",
            "b4ca4bcdc77510aa1141d8e839805305e49722a4"
        ],
        [
            "apply BDDvar_independent_low.",
            "VernacExtend",
            "d022a4e0b41b685c46c1e9225d17f38432cbcd82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Neqb_correct.",
            "VernacExtend",
            "44ce40dca1a752c4f29effe8c09acf1cbe16e2b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma internal_node_not_constant_1 : forall cfg : BDDconfig, BDDconfig_OK cfg -> forall (n : nat) (node : ad), is_internal_node cfg node -> n = nat_of_N (var cfg node) -> ~ bool_fun_eq (bool_fun_of_BDD cfg node) bool_fun_zero /\\ ~ bool_fun_eq (bool_fun_of_BDD cfg node) bool_fun_one.",
            "VernacStartTheoremProof",
            "503be0bf1218e4d719c1d8345177169bc82547c6"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "apply lt_wf_ind with (P := fun n : nat => forall node : ad, is_internal_node (bs, (share, counter)) node -> n = nat_of_N (var (bs, (share, counter)) node) -> ~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node) bool_fun_zero /\\ ~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node) bool_fun_one).",
            "VernacExtend",
            "cd338197ada6ebe377cba3336221b6af1a2db064"
        ],
        [
            "intros n0 H0 node H1 H2.",
            "VernacExtend",
            "cd07bc2b66791d48f2d117718ef9ab39a2c003c6"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "inversion H3.",
            "VernacExtend",
            "129aa425681b58d2ed0d3637122128b1b28fd63b"
        ],
        [
            "inversion H4.",
            "VernacExtend",
            "184e412874313f14014d688ef3b69568302d00ff"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node)).",
            "VernacExtend",
            "b814f80db45bffc5d1eb82f58679c238c6f54d48"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node)).",
            "VernacExtend",
            "372e75dc28bba5c8c7cfe221d9ab83fa6e9a8a94"
        ],
        [
            "intros H6 H7.",
            "VernacExtend",
            "e2e2ada7386798291fb8162c6cb3c2ab2b722a88"
        ],
        [
            "elim H6.",
            "VernacExtend",
            "37df90b4b62522e9f9376bbd0ca7d8f3c914a4a2"
        ],
        [
            "intro H8.",
            "VernacExtend",
            "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
        ],
        [
            "elim H7.",
            "VernacExtend",
            "d11e601778a3e545ccfe02aa465a49d69e77f350"
        ],
        [
            "intro H9.",
            "VernacExtend",
            "3a5cee2c4602853379bc498c20515b4b8bb64031"
        ],
        [
            "cut (Neqb (low (bs, (share, counter)) node) (high (bs, (share, counter)) node) = true).",
            "VernacExtend",
            "f78a1010aa0c59a16ce853877a323eedbbe0cde1"
        ],
        [
            "rewrite (low_high_neq (bs, (share, counter)) node H H1).",
            "VernacExtend",
            "8200f4db32af643916a5f0b2e7e1aa0c0674427f"
        ],
        [
            "intro H10.",
            "VernacExtend",
            "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
        ],
        [
            "discriminate H10.",
            "VernacExtend",
            "228e79a0dcb8e779bfb8b45f980dc0f6fe321d89"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "apply Neqb_correct.",
            "VernacExtend",
            "44ce40dca1a752c4f29effe8c09acf1cbe16e2b0"
        ],
        [
            "intro H9.",
            "VernacExtend",
            "3a5cee2c4602853379bc498c20515b4b8bb64031"
        ],
        [
            "elim H9; clear H9; intro.",
            "VernacExtend",
            "2618dfbd4dc69087075ba00fb0091dd309ae01c5"
        ],
        [
            "cut (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node) = bool_fun_one).",
            "VernacExtend",
            "e69f2c5ea85fdf732f86279abc0e756e6d42217b"
        ],
        [
            "cut (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node) = bool_fun_zero).",
            "VernacExtend",
            "4161a4492e11240723ef94b07db976c1d6d4ebc1"
        ],
        [
            "cut (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true)).",
            "VernacExtend",
            "b43ba004b5405d8d98bddaf70ad2bae3d0b30f9c"
        ],
        [
            "intros H10 H11 H12.",
            "VernacExtend",
            "3cc92cbeb753b1a94476b8cbdeb47754f8af0298"
        ],
        [
            "cut (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)) (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false)).",
            "VernacExtend",
            "d1c25776f111d0e9cae598caa35df0c8f7e4e6b4"
        ],
        [
            "intros H13.",
            "VernacExtend",
            "961853039ce94dda169b244d95771a66979b4911"
        ],
        [
            "rewrite H12 in H10.",
            "VernacExtend",
            "32011b0bcd65037713d6bb3a5c7ec7b15cc3b4be"
        ],
        [
            "rewrite H11 in H13.",
            "VernacExtend",
            "ad19a1aa3ee7bff3c6138fcca12e5278e7881488"
        ],
        [
            "split; unfold not in |- *; intro.",
            "VernacExtend",
            "7d277322ca38dab7968e203ade51288dfebdf0fa"
        ],
        [
            "cut (bool_fun_eq (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true) (bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) true)).",
            "VernacExtend",
            "40da75104b04a24546c9ae33ad18355203154161"
        ],
        [
            "intro H15.",
            "VernacExtend",
            "a496e7944923dd251836a55eac0efac7fac32b63"
        ],
        [
            "cut (bool_fun_eq bool_fun_one (bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) true)).",
            "VernacExtend",
            "d3b63ba46b3882f720e1a347c2d8cb0bf89b391f"
        ],
        [
            "intro H16.",
            "VernacExtend",
            "c16d9f76387f574dd166fbfa7eb1ba04610dff17"
        ],
        [
            "cut (bool_fun_eq bool_fun_one bool_fun_zero).",
            "VernacExtend",
            "ca29df00f46b17cf10d2f42e25ea3005f804e1dc"
        ],
        [
            "intro H17.",
            "VernacExtend",
            "f61e811a0b2585f5af44b7f35f6a2ee6b4f75091"
        ],
        [
            "absurd (bool_fun_eq bool_fun_one bool_fun_zero).",
            "VernacExtend",
            "22925f182d7855d2ece234c4f734fbd65f35356f"
        ],
        [
            "exact bool_fun_one_zero_eq.",
            "VernacExtend",
            "809326944663650fc4b03900e818cbe023c0f6a1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) true).",
            "VernacExtend",
            "ebddd8ac867fd4bcdc8d69d4318a89d42e3c78ac"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_zero.",
            "VernacExtend",
            "627017d7b907a1dfbffdc090c2b1141f9db08208"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true).",
            "VernacExtend",
            "97fba0e5b46a42431f0dcdcd0f013ff1d25d8124"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (bool_fun_eq (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false) (bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) false)).",
            "VernacExtend",
            "028bb5abdd5602aa527c2b71640ebf903c37b213"
        ],
        [
            "intro H15.",
            "VernacExtend",
            "a496e7944923dd251836a55eac0efac7fac32b63"
        ],
        [
            "cut (bool_fun_eq bool_fun_zero (bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) false)).",
            "VernacExtend",
            "a14b60644b21560dc2f6fd6e4dfbbdcaebb9405f"
        ],
        [
            "intro H16.",
            "VernacExtend",
            "c16d9f76387f574dd166fbfa7eb1ba04610dff17"
        ],
        [
            "cut (bool_fun_eq bool_fun_zero bool_fun_one).",
            "VernacExtend",
            "cf53715ce00b1af5bfd965b92ea73ef06486546e"
        ],
        [
            "intro H17.",
            "VernacExtend",
            "f61e811a0b2585f5af44b7f35f6a2ee6b4f75091"
        ],
        [
            "absurd (bool_fun_eq bool_fun_zero bool_fun_one).",
            "VernacExtend",
            "768ea100fa4ddda3b44bd148ed97540b50cf235f"
        ],
        [
            "exact bool_fun_zero_one_eq.",
            "VernacExtend",
            "32355414da3ed6423089cb30b21c9b0fa62cdced"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) false).",
            "VernacExtend",
            "891c1b9efd5356c507e9efba64fb1acf603d7c86"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_one.",
            "VernacExtend",
            "23747cff9727bba66a0eff66ad0a9616034ed4b3"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false).",
            "VernacExtend",
            "e087509fdf8349c1f93134ac4ada38e2cd338f61"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_of_BDDlow.",
            "VernacExtend",
            "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
            "VernacExtend",
            "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) .",
            "VernacExtend",
            "3f6607f94cebcd36beb279442c0b7fce4d5720f5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "cut (~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) bool_fun_zero /\\ ~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) bool_fun_one).",
            "VernacExtend",
            "6fd8ebcdd24748470635e3479fac20f2133db650"
        ],
        [
            "intro H10.",
            "VernacExtend",
            "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
        ],
        [
            "split; unfold not in |- *; intro.",
            "VernacExtend",
            "7d277322ca38dab7968e203ade51288dfebdf0fa"
        ],
        [
            "apply (proj1 H10).",
            "VernacExtend",
            "627593781422aa5c64a4c0ce7b2eda4277715cf2"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true).",
            "VernacExtend",
            "97fba0e5b46a42431f0dcdcd0f013ff1d25d8124"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) true).",
            "VernacExtend",
            "ebddd8ac867fd4bcdc8d69d4318a89d42e3c78ac"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_zero.",
            "VernacExtend",
            "627017d7b907a1dfbffdc090c2b1141f9db08208"
        ],
        [
            "apply (proj2 H10).",
            "VernacExtend",
            "2af96001715b571521097b7bf6cd9fd501b59a00"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true).",
            "VernacExtend",
            "97fba0e5b46a42431f0dcdcd0f013ff1d25d8124"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) true).",
            "VernacExtend",
            "5357903d2fab9c14f37f4cf9218e341256837700"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_one.",
            "VernacExtend",
            "23747cff9727bba66a0eff66ad0a9616034ed4b3"
        ],
        [
            "apply H0 with (m := nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node))).",
            "VernacExtend",
            "1ef336aeddd36b1ceb580615af5604d511c6bedb"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_high.",
            "VernacExtend",
            "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro H8.",
            "VernacExtend",
            "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
        ],
        [
            "elim H8; intro.",
            "VernacExtend",
            "06790f5549123bdba8b20144c04fa5771b456c13"
        ],
        [
            "elim H7; intro.",
            "VernacExtend",
            "070405caa108b888f9b7cdae90f17b6f92d6f351"
        ],
        [
            "split; unfold not in |- *; intro.",
            "VernacExtend",
            "7d277322ca38dab7968e203ade51288dfebdf0fa"
        ],
        [
            "apply bool_fun_zero_one_eq.",
            "VernacExtend",
            "6c4c02ec119344314fcc5ca407d8b00c14b77253"
        ],
        [
            "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false).",
            "VernacExtend",
            "e3287300acf9610169e96e9b400bd1a03d57cc6a"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) false).",
            "VernacExtend",
            "7bcab4292dc81b6b8aad3fb6e3ece772bab37b7e"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_restrict_zero.",
            "VernacExtend",
            "627017d7b907a1dfbffdc090c2b1141f9db08208"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)).",
            "VernacExtend",
            "592b7570edfa996bb1a70260fa8fc71cdb654094"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_of_BDDlow.",
            "VernacExtend",
            "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) .",
            "VernacExtend",
            "3f6607f94cebcd36beb279442c0b7fce4d5720f5"
        ],
        [
            "unfold bool_fun_eq, bool_fun_one in |- *.",
            "VernacExtend",
            "b7b91eb304665263b8bcdb8296234a253ef6b00a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply bool_fun_zero_one_eq.",
            "VernacExtend",
            "6c4c02ec119344314fcc5ca407d8b00c14b77253"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)).",
            "VernacExtend",
            "d2645c35b42b29634291ab6cdb432ba80c8d5c3b"
        ],
        [
            "rewrite H10.",
            "VernacExtend",
            "cd2638bc5a7f85648c5e2c9d77046abc07e2da6a"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
            "VernacExtend",
            "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
        ],
        [
            "unfold bool_fun_eq in |- *; reflexivity.",
            "VernacExtend",
            "92c45c90f429704a67958e204600034d59b26df0"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true).",
            "VernacExtend",
            "97fba0e5b46a42431f0dcdcd0f013ff1d25d8124"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) true).",
            "VernacExtend",
            "5357903d2fab9c14f37f4cf9218e341256837700"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_one.",
            "VernacExtend",
            "23747cff9727bba66a0eff66ad0a9616034ed4b3"
        ],
        [
            "elim H10; intro.",
            "VernacExtend",
            "ab023baaf96f9d45672d63bd85c3e1e9b0c70460"
        ],
        [
            "cut (Neqb (low (bs, (share, counter)) node) (high (bs, (share, counter)) node) = false).",
            "VernacExtend",
            "5c4ef0c6491372b82a00b50ddc2d5d900436f621"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "rewrite H11.",
            "VernacExtend",
            "5c05c623605d2f85e82d91f881b0be37a5db37eb"
        ],
        [
            "rewrite (Neqb_correct BDDone).",
            "VernacExtend",
            "5ecfd724a8de57f0e297ed76ce1887feaec1e9be"
        ],
        [
            "intro; discriminate.",
            "VernacExtend",
            "d63764752b13c9777fe3ccb54c65ae24ab510154"
        ],
        [
            "apply low_high_neq.",
            "VernacExtend",
            "5bbc81050d70154e424751b43b474476254f8c37"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) bool_fun_zero /\\ ~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) bool_fun_one).",
            "VernacExtend",
            "6fd8ebcdd24748470635e3479fac20f2133db650"
        ],
        [
            "intro H12.",
            "VernacExtend",
            "afc6629c474ec2e325da340fcb3a46ec73eead51"
        ],
        [
            "split; unfold not in |- *; intro.",
            "VernacExtend",
            "7d277322ca38dab7968e203ade51288dfebdf0fa"
        ],
        [
            "apply (proj1 H12).",
            "VernacExtend",
            "944008abed29b4c4ec6238663b055bf4887afacf"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true).",
            "VernacExtend",
            "97fba0e5b46a42431f0dcdcd0f013ff1d25d8124"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) true).",
            "VernacExtend",
            "ebddd8ac867fd4bcdc8d69d4318a89d42e3c78ac"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_zero.",
            "VernacExtend",
            "627017d7b907a1dfbffdc090c2b1141f9db08208"
        ],
        [
            "apply (proj2 H12).",
            "VernacExtend",
            "81786886856443bfd052aa49e781101951bfa484"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true).",
            "VernacExtend",
            "97fba0e5b46a42431f0dcdcd0f013ff1d25d8124"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) true).",
            "VernacExtend",
            "5357903d2fab9c14f37f4cf9218e341256837700"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_one.",
            "VernacExtend",
            "23747cff9727bba66a0eff66ad0a9616034ed4b3"
        ],
        [
            "apply H0 with (m := nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node))).",
            "VernacExtend",
            "1ef336aeddd36b1ceb580615af5604d511c6bedb"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_high.",
            "VernacExtend",
            "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "cut (~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)) bool_fun_zero /\\ ~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)) bool_fun_one).",
            "VernacExtend",
            "ce040518bdfd7be70d139524d76459cda65fa0ca"
        ],
        [
            "intro H10.",
            "VernacExtend",
            "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
        ],
        [
            "split; unfold not in |- *; intro.",
            "VernacExtend",
            "7d277322ca38dab7968e203ade51288dfebdf0fa"
        ],
        [
            "apply (proj1 H10).",
            "VernacExtend",
            "627593781422aa5c64a4c0ce7b2eda4277715cf2"
        ],
        [
            "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false).",
            "VernacExtend",
            "e3287300acf9610169e96e9b400bd1a03d57cc6a"
        ],
        [
            "apply bool_fun_of_BDDlow.",
            "VernacExtend",
            "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) false).",
            "VernacExtend",
            "7bcab4292dc81b6b8aad3fb6e3ece772bab37b7e"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_zero.",
            "VernacExtend",
            "627017d7b907a1dfbffdc090c2b1141f9db08208"
        ],
        [
            "apply (proj2 H10).",
            "VernacExtend",
            "2af96001715b571521097b7bf6cd9fd501b59a00"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false).",
            "VernacExtend",
            "e087509fdf8349c1f93134ac4ada38e2cd338f61"
        ],
        [
            "apply bool_fun_of_BDDlow.",
            "VernacExtend",
            "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) false).",
            "VernacExtend",
            "891c1b9efd5356c507e9efba64fb1acf603d7c86"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_one.",
            "VernacExtend",
            "23747cff9727bba66a0eff66ad0a9616034ed4b3"
        ],
        [
            "apply H0 with (m := nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node))).",
            "VernacExtend",
            "33f9981be015ece195e207ba3d44a0965c163105"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_low.",
            "VernacExtend",
            "ba66c15448aced83d225d0e66a0f593162c936e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma internal_node_not_constant : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> ~ bool_fun_eq (bool_fun_of_BDD cfg node) bool_fun_zero /\\ ~ bool_fun_eq (bool_fun_of_BDD cfg node) bool_fun_one.",
            "VernacStartTheoremProof",
            "289537ae9f5b3c8729aff04bd870e6bcc4d053c3"
        ],
        [
            "intros cfg node H H0.",
            "VernacExtend",
            "6915d884c6cb81130501cdde0beadbda4013e056"
        ],
        [
            "apply internal_node_not_constant_1 with (n := nat_of_N (var cfg node)).",
            "VernacExtend",
            "ed570222b17b0387791eca86241af5ac1feb0973"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_neq_internal_zero : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> ~ bool_fun_eq (bool_fun_of_BDD cfg node) (bool_fun_of_BDD cfg BDDzero).",
            "VernacStartTheoremProof",
            "72bb7da113d780a997e87083aeebc83115a0f35e"
        ],
        [
            "intros cfg node H H0.",
            "VernacExtend",
            "6915d884c6cb81130501cdde0beadbda4013e056"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics cfg H)).",
            "VernacExtend",
            "c832aa1105b6d72c1c7d1da16723d7bf82ffcd82"
        ],
        [
            "exact (proj1 (internal_node_not_constant cfg node H H0)).",
            "VernacExtend",
            "14ad187b2fb0d153b921118dea5a088b138214f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_neq_internal_one : forall (cfg : BDDconfig) (node : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> ~ bool_fun_eq (bool_fun_of_BDD cfg node) (bool_fun_of_BDD cfg BDDone).",
            "VernacStartTheoremProof",
            "286d35d21de9b7a769e8cb61f121b7c98503bf9a"
        ],
        [
            "intros cfg node H H0.",
            "VernacExtend",
            "6915d884c6cb81130501cdde0beadbda4013e056"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics cfg H))).",
            "VernacExtend",
            "6a046cc2a966da273026f537e5b43d010721f74a"
        ],
        [
            "exact (proj2 (internal_node_not_constant cfg node H H0)).",
            "VernacExtend",
            "9c270db5776565839299d7a4ae6cfc62a03ae77e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_neq_zero_one : forall cfg : BDDconfig, BDDconfig_OK cfg -> ~ bool_fun_eq (bool_fun_of_BDD cfg BDDzero) (bool_fun_of_BDD cfg BDDone).",
            "VernacStartTheoremProof",
            "521382f7a3c821a2a9d0399c0946033c46406b1e"
        ],
        [
            "intros cfg H.",
            "VernacExtend",
            "ce3919e4a24071a40503b43aa3d70397760f15a0"
        ],
        [
            "unfold bool_fun_eq, bool_fun_zero, bool_fun_one in |- *.",
            "VernacExtend",
            "6453fd68e64ff4f2346f993b8ff401de8f1a4505"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics cfg H)).",
            "VernacExtend",
            "c832aa1105b6d72c1c7d1da16723d7bf82ffcd82"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics cfg H))).",
            "VernacExtend",
            "6a046cc2a966da273026f537e5b43d010721f74a"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "absurd (true = false).",
            "VernacExtend",
            "9eee97e974560169b3d65a974b1c1fa7328f70d0"
        ],
        [
            "unfold not in |- *; discriminate.",
            "VernacExtend",
            "bc78230aa5a664409e6098bd702946390677ebb6"
        ],
        [
            "unfold bool_fun_zero, bool_fun_one in H0.",
            "VernacExtend",
            "1eb9a53d6443b86bc83d3d0679a2cf21f9a21068"
        ],
        [
            "rewrite (H0 (fun x : BDDvar => true)).",
            "VernacExtend",
            "6ccff376b3c60a817ac86ac16bb5628ffca4d218"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_neq_one_zero : forall cfg : BDDconfig, BDDconfig_OK cfg -> ~ bool_fun_eq (bool_fun_of_BDD cfg BDDone) (bool_fun_of_BDD cfg BDDzero).",
            "VernacStartTheoremProof",
            "68d8131739611fa3de2347a3e51e503d31074334"
        ],
        [
            "intros cfg H.",
            "VernacExtend",
            "ce3919e4a24071a40503b43aa3d70397760f15a0"
        ],
        [
            "unfold bool_fun_eq, bool_fun_zero, bool_fun_one in |- *.",
            "VernacExtend",
            "6453fd68e64ff4f2346f993b8ff401de8f1a4505"
        ],
        [
            "unfold bool_fun_eval in |- *.",
            "VernacExtend",
            "e1bd32083c9d545eed865fc3000888293547add0"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics cfg H)).",
            "VernacExtend",
            "c832aa1105b6d72c1c7d1da16723d7bf82ffcd82"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics cfg H))).",
            "VernacExtend",
            "6a046cc2a966da273026f537e5b43d010721f74a"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "absurd (false = true).",
            "VernacExtend",
            "14bb5dca2fd0caca5d6d61486c2ddc2eac89bfcd"
        ],
        [
            "unfold not in |- *; discriminate.",
            "VernacExtend",
            "bc78230aa5a664409e6098bd702946390677ebb6"
        ],
        [
            "unfold bool_fun_zero, bool_fun_one in H0.",
            "VernacExtend",
            "1eb9a53d6443b86bc83d3d0679a2cf21f9a21068"
        ],
        [
            "rewrite (H0 (fun x : BDDvar => true)).",
            "VernacExtend",
            "6ccff376b3c60a817ac86ac16bb5628ffca4d218"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_neq_lemma : forall bf1 bf2 : bool_fun, ~ bool_fun_eq bf1 bf2 -> ~ bool_fun_eq bf2 bf1.",
            "VernacStartTheoremProof",
            "5359ab4d002c787ff80f91155b1bb6915e645e0d"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma no_duplicate_node : forall (cfg : BDDconfig) (node1 node2 : ad), BDDconfig_OK cfg -> is_internal_node cfg node1 -> is_internal_node cfg node2 -> var cfg node1 = var cfg node2 -> high cfg node1 = high cfg node2 -> low cfg node1 = low cfg node2 -> node1 = node2.",
            "VernacStartTheoremProof",
            "94849f29def0d3bfe571391bd7848cc9636cdeae"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros node1 node2 H H0 H1 H2 H3 H4.",
            "VernacExtend",
            "6be37180c4f0ac258fb6e1662f85e5ca437778db"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "inversion H5.",
            "VernacExtend",
            "c72c29a0eff26255c8a4846e1794fb6f7559049a"
        ],
        [
            "inversion H6.",
            "VernacExtend",
            "91475f7cc5dc394b5f8e34c38f1f3fae3256b731"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "inversion H8.",
            "VernacExtend",
            "bd1054a31f838f58a763ae9f4c46f33682fb2e03"
        ],
        [
            "inversion H9.",
            "VernacExtend",
            "ba06d75575d77a771abfe438435f8748713f713e"
        ],
        [
            "unfold var in H2; rewrite H7 in H2; rewrite H10 in H2.",
            "VernacExtend",
            "bc44e47f3f6676a952e8512d91478f61acb751d4"
        ],
        [
            "unfold high in H3; rewrite H7 in H3; rewrite H10 in H3.",
            "VernacExtend",
            "7d90e97ebb5b3941203e59050278344c358d6931"
        ],
        [
            "unfold low in H4; rewrite H7 in H4; rewrite H10 in H4.",
            "VernacExtend",
            "4ef7bc0e637f49c2fe61f219dfdd33bdcdbf503d"
        ],
        [
            "cut (BDDshare_lookup share x x0 x1 = Some node1).",
            "VernacExtend",
            "83ea6e3a7c57fe2f5582b4ee222909cfb449aebb"
        ],
        [
            "cut (BDDshare_lookup share x2 x3 x4 = Some node2).",
            "VernacExtend",
            "49ef2ce67a02fd0106b5cfd5b4bc13cf559a485f"
        ],
        [
            "intros H11 H12.",
            "VernacExtend",
            "2f30f551c324561c0b6cd0c62d157122b2777f91"
        ],
        [
            "rewrite H2 in H12.",
            "VernacExtend",
            "e9a4f91ff7cedae0c31fbcd0d9b0e1ac62a964bf"
        ],
        [
            "rewrite H3 in H12.",
            "VernacExtend",
            "6a8ab3bd25f56258f0fb68224ed5176c51924107"
        ],
        [
            "rewrite H4 in H12.",
            "VernacExtend",
            "54f17f292d29fb698804eba8f4f7c629a88efdf4"
        ],
        [
            "rewrite H11 in H12.",
            "VernacExtend",
            "6e80bd5d2b022bbf2b9b1b25a647a09576313f6e"
        ],
        [
            "injection H12.",
            "VernacExtend",
            "7f72bd6518ee63a41cbfdb9a53583c0a23dbcb2f"
        ],
        [
            "intro H13.",
            "VernacExtend",
            "feb8e9eb0f7422cc52051473f8890af27e8240ca"
        ],
        [
            "rewrite H13; reflexivity.",
            "VernacExtend",
            "d4b403382a1fd86e17d4175c5e8306bb799b1c91"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "intros H11 H12.",
            "VernacExtend",
            "2f30f551c324561c0b6cd0c62d157122b2777f91"
        ],
        [
            "apply (proj2 (proj1 H12 x2 x3 x4 node2)).",
            "VernacExtend",
            "e543484a25bf99bf8c5b7e75bad21cb95230638a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H; intros.",
            "VernacExtend",
            "79e1c8a1444242deed6d2876e3fe7bb2cf051f26"
        ],
        [
            "apply (proj2 (proj1 H12 x x0 x1 node1)).",
            "VernacExtend",
            "8eaa4900bf7fffd82721960fc5445822acf2f5b5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDunique_1 : forall cfg : BDDconfig, BDDconfig_OK cfg -> forall (n : nat) (node1 node2 : ad), n = max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2)) -> config_node_OK cfg node1 -> config_node_OK cfg node2 -> bool_fun_eq (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2) -> node1 = node2.",
            "VernacStartTheoremProof",
            "580f4f2476733583ae68b07502585fac3dcdec49"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros H n.",
            "VernacExtend",
            "d752e09d818a9b8e578599d7f37f8a11ff877107"
        ],
        [
            "apply lt_wf_ind with (P := fun n : nat => forall node1 node2 : ad, n = max (nat_of_N (var (bs, (share, counter)) node1)) (nat_of_N (var (bs, (share, counter)) node2)) -> config_node_OK (bs, (share, counter)) node1 -> config_node_OK (bs, (share, counter)) node2 -> bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node1) (bool_fun_of_BDD (bs, (share, counter)) node2) -> node1 = node2).",
            "VernacExtend",
            "88c204fb65978acc3d6836f01b069c4b17b16622"
        ],
        [
            "intros n0 H00.",
            "VernacExtend",
            "6a63612546bd256d77a7f880d347ec81f1cfb3fa"
        ],
        [
            "intros node1 node2 H0 H1 H2 H3.",
            "VernacExtend",
            "5260ebde7f64285b13061c8db9c653b50c0c00ba"
        ],
        [
            "elim H1; intro.",
            "VernacExtend",
            "69e6dce0928c10bc8e91776963343c6dbf299832"
        ],
        [
            "elim H2; intro.",
            "VernacExtend",
            "939c927788b9492b13127156d1f300437fdf7754"
        ],
        [
            "rewrite H4; rewrite H5; reflexivity.",
            "VernacExtend",
            "e5001b9d3bc8b60d6e3e4546161e8bf15030b9f8"
        ],
        [
            "elim H5; intro.",
            "VernacExtend",
            "29923dfc32add298aa4e01bbfee147f65e05faf2"
        ],
        [
            "rewrite H4 in H3.",
            "VernacExtend",
            "806e5e7c7d38d93d32fde28c08821b0d11eaea9a"
        ],
        [
            "rewrite H6 in H3.",
            "VernacExtend",
            "9287f162e5f86f92ae2e9e1ad6f4aeec5e254469"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)) in H3.",
            "VernacExtend",
            "5fc06fa98535c260eab9a5eaa3a6a20fb0fcaf82"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) in H3.",
            "VernacExtend",
            "18beca64bf2e1e3c9f557b3c4903a4cdbf3b59c1"
        ],
        [
            "absurd (bool_fun_eq bool_fun_zero bool_fun_one).",
            "VernacExtend",
            "768ea100fa4ddda3b44bd148ed97540b50cf235f"
        ],
        [
            "exact bool_fun_zero_one_eq.",
            "VernacExtend",
            "32355414da3ed6423089cb30b21c9b0fa62cdced"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node2) bool_fun_zero).",
            "VernacExtend",
            "2aa1579acb3150652ff58c7215c524387637dfd0"
        ],
        [
            "cut (is_internal_node (bs, (share, counter)) node2).",
            "VernacExtend",
            "bf596ad3a4aab959d9f7f8055812c8d8578c4a8b"
        ],
        [
            "intro H7.",
            "VernacExtend",
            "fdf814253dc825557adb6789b752d060ee4394be"
        ],
        [
            "exact (proj1 (internal_node_not_constant (bs, (share, counter)) node2 H H7)).",
            "VernacExtend",
            "cb4e51cdb502d31b23a3d912dfa1611ebe4eb4a8"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bool_fun_of_BDD (bs, (share, counter)) node1).",
            "VernacExtend",
            "25ebfcc65a834ca7a6cd32862f212302b177a5c6"
        ],
        [
            "apply bool_fun_eq_symm; assumption.",
            "VernacExtend",
            "fd46031de504c74c266b17505de12795fb5a5a62"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
            "VernacExtend",
            "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
        ],
        [
            "unfold bool_fun_eq in |- *; reflexivity.",
            "VernacExtend",
            "92c45c90f429704a67958e204600034d59b26df0"
        ],
        [
            "elim H4; intro.",
            "VernacExtend",
            "5fb7c04a4c863371b345204c3ef35e9076208d64"
        ],
        [
            "elim H2; intro.",
            "VernacExtend",
            "939c927788b9492b13127156d1f300437fdf7754"
        ],
        [
            "rewrite H5 in H3; rewrite H6 in H3.",
            "VernacExtend",
            "4d4997582a32c8bcbd1e5837c9fe6c323692ac63"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)) in H3.",
            "VernacExtend",
            "5fc06fa98535c260eab9a5eaa3a6a20fb0fcaf82"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) in H3.",
            "VernacExtend",
            "18beca64bf2e1e3c9f557b3c4903a4cdbf3b59c1"
        ],
        [
            "absurd (bool_fun_eq bool_fun_one bool_fun_zero).",
            "VernacExtend",
            "22925f182d7855d2ece234c4f734fbd65f35356f"
        ],
        [
            "exact bool_fun_one_zero_eq.",
            "VernacExtend",
            "809326944663650fc4b03900e818cbe023c0f6a1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H6; intro.",
            "VernacExtend",
            "e85bcbbf1e2e7245dba06fdc165dee137f165a99"
        ],
        [
            "rewrite H5; rewrite H7; reflexivity.",
            "VernacExtend",
            "917b4f69928a0652717b9c5d78d0ed10a9724912"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node2) bool_fun_one).",
            "VernacExtend",
            "48b100c1e7597b0ce98f8682f20e8bd0cd8dac5d"
        ],
        [
            "cut (is_internal_node (bs, (share, counter)) node2).",
            "VernacExtend",
            "bf596ad3a4aab959d9f7f8055812c8d8578c4a8b"
        ],
        [
            "intro H8.",
            "VernacExtend",
            "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
        ],
        [
            "exact (proj2 (internal_node_not_constant (bs, (share, counter)) node2 H H8)).",
            "VernacExtend",
            "3028e33af4f52fbc8c0ae192bc7c933144187547"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite H5 in H3.",
            "VernacExtend",
            "ffc4e047ccba0c6e301223fc336ee84216cd0e9f"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) in H3.",
            "VernacExtend",
            "18beca64bf2e1e3c9f557b3c4903a4cdbf3b59c1"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H2; intro.",
            "VernacExtend",
            "939c927788b9492b13127156d1f300437fdf7754"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node1) bool_fun_zero).",
            "VernacExtend",
            "ad51d988d1b10ff8936356f5b2d21a90302fd5ec"
        ],
        [
            "cut (is_internal_node (bs, (share, counter)) node1).",
            "VernacExtend",
            "97b6edde1495b946bc3591798e5d89d32da3a093"
        ],
        [
            "intro H7.",
            "VernacExtend",
            "fdf814253dc825557adb6789b752d060ee4394be"
        ],
        [
            "exact (proj1 (internal_node_not_constant (bs, (share, counter)) node1 H H7)).",
            "VernacExtend",
            "138692b7343c629845d4531a9d47af79990aafd9"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "rewrite H6 in H3.",
            "VernacExtend",
            "9287f162e5f86f92ae2e9e1ad6f4aeec5e254469"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)) in H3.",
            "VernacExtend",
            "5fc06fa98535c260eab9a5eaa3a6a20fb0fcaf82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H6; intro.",
            "VernacExtend",
            "e85bcbbf1e2e7245dba06fdc165dee137f165a99"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node1) bool_fun_one).",
            "VernacExtend",
            "3e338cf7c503a4b0ae1cb3eeb56cf532b847730d"
        ],
        [
            "cut (is_internal_node (bs, (share, counter)) node1).",
            "VernacExtend",
            "97b6edde1495b946bc3591798e5d89d32da3a093"
        ],
        [
            "intro H8.",
            "VernacExtend",
            "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
        ],
        [
            "exact (proj2 (internal_node_not_constant (bs, (share, counter)) node1 H H8)).",
            "VernacExtend",
            "6cc739347cff76146e022e90370023a328c17d53"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "rewrite H7 in H3.",
            "VernacExtend",
            "b232804e91bb6c2b2860d06057623ecef24e0afe"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) in H3.",
            "VernacExtend",
            "18beca64bf2e1e3c9f557b3c4903a4cdbf3b59c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (is_internal_node (bs, (share, counter)) node1).",
            "VernacExtend",
            "97b6edde1495b946bc3591798e5d89d32da3a093"
        ],
        [
            "cut (is_internal_node (bs, (share, counter)) node2).",
            "VernacExtend",
            "bf596ad3a4aab959d9f7f8055812c8d8578c4a8b"
        ],
        [
            "intros H8 H9.",
            "VernacExtend",
            "f720374270a7af876475ce0f9bf0d300f82ebc9a"
        ],
        [
            "elim (relation_sum (BDDcompare (var (bs, (share, counter)) node1) (var (bs, (share, counter)) node2))); intro y.",
            "VernacExtend",
            "e038e5c8737f682ce8bcf4dd5c3c7d456de5d31d"
        ],
        [
            "elim y; clear y; intro y0.",
            "VernacExtend",
            "351ffbdca743623e5f6e6278b15a383c7179987d"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node1)).",
            "VernacExtend",
            "15c42b9b531174e4c3fa9032cc8aeee4b2986526"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node2)).",
            "VernacExtend",
            "34b79c53b9fb60c47c59d3d517258d32742fb1e3"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node1)).",
            "VernacExtend",
            "83c417554528e4d032cd3dabe3f8c866b94de883"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node2)).",
            "VernacExtend",
            "fc893617c7979026586b5f845b8e43db34373104"
        ],
        [
            "intros H10 H11 H12 H13.",
            "VernacExtend",
            "4cb07ca4137215a4588e3d7fb666a1b5abe2f439"
        ],
        [
            "cut (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "0788612fbe7e8f559b999c349244ef610cea46ad"
        ],
        [
            "cut (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
            "VernacExtend",
            "1eb340dcc5efc7fbd492067e0104655b2e4921d8"
        ],
        [
            "intros H14 H15.",
            "VernacExtend",
            "056499278da1e5936eb41289e1655f2551e88a4d"
        ],
        [
            "cut (high (bs, (share, counter)) node1 = high (bs, (share, counter)) node2).",
            "VernacExtend",
            "7fe7b5e0ce357e992e912e4f485ae36bd95e429a"
        ],
        [
            "cut (low (bs, (share, counter)) node1 = low (bs, (share, counter)) node2).",
            "VernacExtend",
            "7de6b9e1574819945190983a5a373e551615c4b6"
        ],
        [
            "intros H16 H17.",
            "VernacExtend",
            "070a46417e8e4048bf752eaf9a8d2ee7fd3510d4"
        ],
        [
            "apply no_duplicate_node with (cfg := (bs, (share, counter))).",
            "VernacExtend",
            "ddaa4757237d524a2e26b17f5dcf2144edc9a0d6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDcompare_eq; assumption.",
            "VernacExtend",
            "f1c1b6d5becd296fd511ccab7b3b67efc5187715"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H11; intro.",
            "VernacExtend",
            "0c29eb3ff440f3a0ec9425df045e9df7bd15a2a4"
        ],
        [
            "elim H10; intro.",
            "VernacExtend",
            "ab023baaf96f9d45672d63bd85c3e1e9b0c70460"
        ],
        [
            "rewrite H16; rewrite H17; reflexivity.",
            "VernacExtend",
            "ff46fd6d6be928c3457bee49ad655bc92a1b4536"
        ],
        [
            "elim H17; intro.",
            "VernacExtend",
            "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
            "VernacExtend",
            "d2454443961e5b2e76fae5f75836e1bc465809bc"
        ],
        [
            "rewrite H16; rewrite H18.",
            "VernacExtend",
            "c50bacc838f1a9a0b0cb85d4c1ca555a88e774c3"
        ],
        [
            "apply bool_fun_neq_zero_one.",
            "VernacExtend",
            "a5d7c83d87ec3f42c2fc43ba9ad1035dad2d3219"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
            "VernacExtend",
            "d2454443961e5b2e76fae5f75836e1bc465809bc"
        ],
        [
            "apply bool_fun_neq_lemma.",
            "VernacExtend",
            "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
        ],
        [
            "rewrite H16.",
            "VernacExtend",
            "d46611b9926d3411ed586aec14fbb4de59848bae"
        ],
        [
            "apply bool_fun_neq_internal_zero.",
            "VernacExtend",
            "58520e3fa02a5669c566057263c0e2c0ad7c7645"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H16; intro.",
            "VernacExtend",
            "e542942227b5497210a7bd66eac66d3136fd5d0f"
        ],
        [
            "elim H10; intro.",
            "VernacExtend",
            "ab023baaf96f9d45672d63bd85c3e1e9b0c70460"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
            "VernacExtend",
            "d2454443961e5b2e76fae5f75836e1bc465809bc"
        ],
        [
            "rewrite H17; rewrite H18.",
            "VernacExtend",
            "ae6986055ac847a8a412eb9fc025aa3ae0f2f85e"
        ],
        [
            "apply bool_fun_neq_one_zero.",
            "VernacExtend",
            "48431ae2f7e026aa576d09ecaa04b9ce1164250c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H18; intro.",
            "VernacExtend",
            "fed561d0739ad8144c28aa14b967049b8c9be1a1"
        ],
        [
            "rewrite H17; rewrite H19; reflexivity.",
            "VernacExtend",
            "0095f18df7b5f0c8751edaef575bf8ca3e561024"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
            "VernacExtend",
            "d2454443961e5b2e76fae5f75836e1bc465809bc"
        ],
        [
            "rewrite H17.",
            "VernacExtend",
            "05ed26bf77cdb384d29c02889c582eb23b3f955e"
        ],
        [
            "apply bool_fun_neq_lemma.",
            "VernacExtend",
            "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
        ],
        [
            "apply bool_fun_neq_internal_one.",
            "VernacExtend",
            "601499f001ed4cdddbbef567dae88af1c293d310"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H10; intro.",
            "VernacExtend",
            "ab023baaf96f9d45672d63bd85c3e1e9b0c70460"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
            "VernacExtend",
            "d2454443961e5b2e76fae5f75836e1bc465809bc"
        ],
        [
            "rewrite H18.",
            "VernacExtend",
            "0f27b84408db59cbd9918e21d833066b93142bd6"
        ],
        [
            "apply bool_fun_neq_internal_zero.",
            "VernacExtend",
            "58520e3fa02a5669c566057263c0e2c0ad7c7645"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H18; intro.",
            "VernacExtend",
            "fed561d0739ad8144c28aa14b967049b8c9be1a1"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
            "VernacExtend",
            "d2454443961e5b2e76fae5f75836e1bc465809bc"
        ],
        [
            "rewrite H19.",
            "VernacExtend",
            "1680cdbaca48312bd8c17a9f25a2847458523bd0"
        ],
        [
            "apply bool_fun_neq_internal_one.",
            "VernacExtend",
            "601499f001ed4cdddbbef567dae88af1c293d310"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H00 with (m := max (nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node1))) (nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node2)))).",
            "VernacExtend",
            "50b7dcaadb3d29fc9a5ab1781a42a356f906483e"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply lt_max_1_2.",
            "VernacExtend",
            "4066a275d77c3d48b7ffce4074f4871887c2b678"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_low.",
            "VernacExtend",
            "ba66c15448aced83d225d0e66a0f593162c936e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_low.",
            "VernacExtend",
            "ba66c15448aced83d225d0e66a0f593162c936e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H13; intro.",
            "VernacExtend",
            "4239366b12ca7aa95c7092287208a6730e554f75"
        ],
        [
            "elim H12; intro.",
            "VernacExtend",
            "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
        ],
        [
            "rewrite H16; rewrite H17; reflexivity.",
            "VernacExtend",
            "ff46fd6d6be928c3457bee49ad655bc92a1b4536"
        ],
        [
            "elim H17; intro.",
            "VernacExtend",
            "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "b572b3b4b73f863b7d3158461bc23bd011d05d1d"
        ],
        [
            "rewrite H16; rewrite H18; apply bool_fun_neq_zero_one.",
            "VernacExtend",
            "60ec1210a902ddd8827dc7e473a5cf280bdafa57"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "b572b3b4b73f863b7d3158461bc23bd011d05d1d"
        ],
        [
            "rewrite H16.",
            "VernacExtend",
            "d46611b9926d3411ed586aec14fbb4de59848bae"
        ],
        [
            "apply bool_fun_neq_lemma.",
            "VernacExtend",
            "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
        ],
        [
            "apply bool_fun_neq_internal_zero.",
            "VernacExtend",
            "58520e3fa02a5669c566057263c0e2c0ad7c7645"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H16; intro.",
            "VernacExtend",
            "e542942227b5497210a7bd66eac66d3136fd5d0f"
        ],
        [
            "rewrite H17 in H15.",
            "VernacExtend",
            "b2ca3044def07e73e12d90657bf98935bf84b116"
        ],
        [
            "elim H12; intro.",
            "VernacExtend",
            "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
        ],
        [
            "rewrite H18 in H15.",
            "VernacExtend",
            "6b3769093a2cd1a5761f361a8c2a73c6481d6db7"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) BDDone) (bool_fun_of_BDD (bs, (share, counter)) BDDzero)).",
            "VernacExtend",
            "164bf02c0cb624002d7a9a52a0d918e85d1edc0c"
        ],
        [
            "apply bool_fun_neq_one_zero.",
            "VernacExtend",
            "48431ae2f7e026aa576d09ecaa04b9ce1164250c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H18; intro.",
            "VernacExtend",
            "fed561d0739ad8144c28aa14b967049b8c9be1a1"
        ],
        [
            "rewrite H17; rewrite H19; reflexivity.",
            "VernacExtend",
            "0095f18df7b5f0c8751edaef575bf8ca3e561024"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) BDDone) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "07f20e08de5848bb3f4b56b66210cbced66dc6c6"
        ],
        [
            "apply bool_fun_neq_lemma.",
            "VernacExtend",
            "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
        ],
        [
            "apply bool_fun_neq_internal_one.",
            "VernacExtend",
            "601499f001ed4cdddbbef567dae88af1c293d310"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H12; intro.",
            "VernacExtend",
            "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "b572b3b4b73f863b7d3158461bc23bd011d05d1d"
        ],
        [
            "rewrite H18.",
            "VernacExtend",
            "0f27b84408db59cbd9918e21d833066b93142bd6"
        ],
        [
            "apply bool_fun_neq_internal_zero.",
            "VernacExtend",
            "58520e3fa02a5669c566057263c0e2c0ad7c7645"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H18; intro.",
            "VernacExtend",
            "fed561d0739ad8144c28aa14b967049b8c9be1a1"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "b572b3b4b73f863b7d3158461bc23bd011d05d1d"
        ],
        [
            "rewrite H19.",
            "VernacExtend",
            "1680cdbaca48312bd8c17a9f25a2847458523bd0"
        ],
        [
            "apply bool_fun_neq_internal_one.",
            "VernacExtend",
            "601499f001ed4cdddbbef567dae88af1c293d310"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H00 with (m := max (nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node1))) (nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node2)))).",
            "VernacExtend",
            "8c073697cdbc7301f950a6c1fae7d730cb3f6b2b"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply lt_max_1_2.",
            "VernacExtend",
            "4066a275d77c3d48b7ffce4074f4871887c2b678"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_high.",
            "VernacExtend",
            "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_high.",
            "VernacExtend",
            "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node1) false).",
            "VernacExtend",
            "98d5d89c6bd1f121ac3e13d676983e9169a48bf8"
        ],
        [
            "apply bool_fun_of_BDDlow.",
            "VernacExtend",
            "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node2) false).",
            "VernacExtend",
            "aa456f32daf2e36a2ae4f7965df09e7b2251466d"
        ],
        [
            "cut (var (bs, (share, counter)) node1 = var (bs, (share, counter)) node2).",
            "VernacExtend",
            "7c91b7eb5f35109308a02af9a703b7485089f946"
        ],
        [
            "intro H14.",
            "VernacExtend",
            "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
        ],
        [
            "rewrite H14.",
            "VernacExtend",
            "b53d81c05d6007e728db7abfa7c98c200268f9e7"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDcompare_eq.",
            "VernacExtend",
            "e2f505554fbab788e736cfc15c5360e39264463b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_of_BDDlow.",
            "VernacExtend",
            "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node1) true).",
            "VernacExtend",
            "0a65f9d6e4e58d710f83620a8de2fc798d6b8211"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node2) true).",
            "VernacExtend",
            "862378b73759f40c061c7fff90cac9625cfd98f2"
        ],
        [
            "cut (var (bs, (share, counter)) node1 = var (bs, (share, counter)) node2).",
            "VernacExtend",
            "7c91b7eb5f35109308a02af9a703b7485089f946"
        ],
        [
            "intro H14.",
            "VernacExtend",
            "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
        ],
        [
            "rewrite H14.",
            "VernacExtend",
            "b53d81c05d6007e728db7abfa7c98c200268f9e7"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDcompare_eq.",
            "VernacExtend",
            "e2f505554fbab788e736cfc15c5360e39264463b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node1)).",
            "VernacExtend",
            "15c42b9b531174e4c3fa9032cc8aeee4b2986526"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node2)).",
            "VernacExtend",
            "34b79c53b9fb60c47c59d3d517258d32742fb1e3"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node1)).",
            "VernacExtend",
            "83c417554528e4d032cd3dabe3f8c866b94de883"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node2)).",
            "VernacExtend",
            "fc893617c7979026586b5f845b8e43db34373104"
        ],
        [
            "intros H10 H11 H12 H13.",
            "VernacExtend",
            "4cb07ca4137215a4588e3d7fb666a1b5abe2f439"
        ],
        [
            "cut (low (bs, (share, counter)) node2 = high (bs, (share, counter)) node2).",
            "VernacExtend",
            "db60ae3a163029cbce5edf2202163c6a8c10cd53"
        ],
        [
            "intros H14.",
            "VernacExtend",
            "800ab5421b06658afd42f05423ddaa63bcd8bed7"
        ],
        [
            "cut (Neqb (low (bs, (share, counter)) node2) (high (bs, (share, counter)) node2) = false).",
            "VernacExtend",
            "ed49590769f233e6a67f3bc025e73e6f78df1194"
        ],
        [
            "rewrite H14.",
            "VernacExtend",
            "b53d81c05d6007e728db7abfa7c98c200268f9e7"
        ],
        [
            "rewrite (Neqb_correct (high (bs, (share, counter)) node2)).",
            "VernacExtend",
            "abaea6637f93b85debcf8cfbc6aa7f918a21e4f4"
        ],
        [
            "intro H15.",
            "VernacExtend",
            "a496e7944923dd251836a55eac0efac7fac32b63"
        ],
        [
            "discriminate H15.",
            "VernacExtend",
            "7f5f3e570df4d130cb793c0ad7d77ce0ecc91596"
        ],
        [
            "apply low_high_neq.",
            "VernacExtend",
            "5bbc81050d70154e424751b43b474476254f8c37"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "502ee6c9af5922ff6640339104c94e10993590b9"
        ],
        [
            "intro H14.",
            "VernacExtend",
            "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
        ],
        [
            "elim H10; intro.",
            "VernacExtend",
            "ab023baaf96f9d45672d63bd85c3e1e9b0c70460"
        ],
        [
            "elim H12; intro.",
            "VernacExtend",
            "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
        ],
        [
            "rewrite H15; rewrite H16; reflexivity.",
            "VernacExtend",
            "9bce0e1667dca643562c205e5f1dc8cb17928a07"
        ],
        [
            "elim H16; intro.",
            "VernacExtend",
            "e542942227b5497210a7bd66eac66d3136fd5d0f"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "00c156a158a7262f5b2c10326588c3aa2c776fb0"
        ],
        [
            "rewrite H15; rewrite H17.",
            "VernacExtend",
            "056a47c61c9a59d7e4b5b50331213440a9132698"
        ],
        [
            "apply bool_fun_neq_zero_one.",
            "VernacExtend",
            "a5d7c83d87ec3f42c2fc43ba9ad1035dad2d3219"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "00c156a158a7262f5b2c10326588c3aa2c776fb0"
        ],
        [
            "rewrite H15.",
            "VernacExtend",
            "63b8b0d0c08cef2e135c7c663a2c78a6e22fdeb6"
        ],
        [
            "apply bool_fun_neq_lemma.",
            "VernacExtend",
            "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
        ],
        [
            "apply bool_fun_neq_internal_zero.",
            "VernacExtend",
            "58520e3fa02a5669c566057263c0e2c0ad7c7645"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H15; intro.",
            "VernacExtend",
            "a2b9a015f32109d3137a55d790ecf80a8ae43096"
        ],
        [
            "elim H12; intro.",
            "VernacExtend",
            "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "00c156a158a7262f5b2c10326588c3aa2c776fb0"
        ],
        [
            "rewrite H16; rewrite H17.",
            "VernacExtend",
            "71712afc55fd6dc7a7136f5996e7239dcac417c3"
        ],
        [
            "apply bool_fun_neq_one_zero.",
            "VernacExtend",
            "48431ae2f7e026aa576d09ecaa04b9ce1164250c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H17; intro.",
            "VernacExtend",
            "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
        ],
        [
            "rewrite H16; rewrite H18; reflexivity.",
            "VernacExtend",
            "24d383d7fdc0a099cd3540d6bd919e0befd568d9"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "00c156a158a7262f5b2c10326588c3aa2c776fb0"
        ],
        [
            "rewrite H16.",
            "VernacExtend",
            "d46611b9926d3411ed586aec14fbb4de59848bae"
        ],
        [
            "apply bool_fun_neq_lemma.",
            "VernacExtend",
            "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
        ],
        [
            "apply bool_fun_neq_internal_one.",
            "VernacExtend",
            "601499f001ed4cdddbbef567dae88af1c293d310"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H12; intro.",
            "VernacExtend",
            "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "00c156a158a7262f5b2c10326588c3aa2c776fb0"
        ],
        [
            "rewrite H17.",
            "VernacExtend",
            "05ed26bf77cdb384d29c02889c582eb23b3f955e"
        ],
        [
            "apply bool_fun_neq_internal_zero.",
            "VernacExtend",
            "58520e3fa02a5669c566057263c0e2c0ad7c7645"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H17; intro.",
            "VernacExtend",
            "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
            "VernacExtend",
            "00c156a158a7262f5b2c10326588c3aa2c776fb0"
        ],
        [
            "rewrite H18.",
            "VernacExtend",
            "0f27b84408db59cbd9918e21d833066b93142bd6"
        ],
        [
            "apply bool_fun_neq_internal_one.",
            "VernacExtend",
            "601499f001ed4cdddbbef567dae88af1c293d310"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H00 with (m := max (nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node2))) (nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node2)))).",
            "VernacExtend",
            "1d1c363c7828144b93dd24ab21425684a13f2439"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply lt_max_2.",
            "VernacExtend",
            "9d5b614882a5926001c3c7d35a66486a92cad342"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_low.",
            "VernacExtend",
            "ba66c15448aced83d225d0e66a0f593162c936e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_high.",
            "VernacExtend",
            "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (bool_fun_eq (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node2) false) (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node2) true)).",
            "VernacExtend",
            "aa67d9e0450a120f3bcfdbec69803edc2003733d"
        ],
        [
            "intro H14.",
            "VernacExtend",
            "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node2) false).",
            "VernacExtend",
            "5ca44c1a0d4c2664e9134fbbcc2a99e4b7b8058d"
        ],
        [
            "apply bool_fun_of_BDDlow.",
            "VernacExtend",
            "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node2) true).",
            "VernacExtend",
            "f8785c8f0f87182ba618c84428519a7b045ad323"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (bool_fun_eq (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node2) false) (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node2) true)).",
            "VernacExtend",
            "75a2baee772514da822b5fce7c1b92e1cc584c71"
        ],
        [
            "intro H14.",
            "VernacExtend",
            "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node2) false).",
            "VernacExtend",
            "bd0765d9750d13888c068e4bb48e4563326da2af"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node2) true).",
            "VernacExtend",
            "9a03c0efff84be7a5ad25bf46b4d2a994f3e8619"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (bool_fun_independent (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node2)).",
            "VernacExtend",
            "32fa96d7035e3f0f06ceb4374e98088f5856096a"
        ],
        [
            "intro H14.",
            "VernacExtend",
            "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
        ],
        [
            "unfold bool_fun_independent in H14.",
            "VernacExtend",
            "0c892abdb57802d053d00a805a837695cd7aa9ac"
        ],
        [
            "unfold bool_fun_eq in |- *.",
            "VernacExtend",
            "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
        ],
        [
            "unfold bool_fun_restrict in |- *.",
            "VernacExtend",
            "8f5a662d1228cd59b9d9d647a9421f5c9c13ed3a"
        ],
        [
            "unfold bool_fun_eval at 1 3 in |- *.",
            "VernacExtend",
            "8e7b47d1f6cfd6cfd7e7e9cdeb9dbd71273f76ba"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "rewrite (H14 vb); reflexivity.",
            "VernacExtend",
            "556c865547c18fb75e3b7f827b75e419a8a8e4dc"
        ],
        [
            "apply BDDvar_independent_1 with (n := nat_of_N (var (bs, (share, counter)) node1)).",
            "VernacExtend",
            "129286288113d17b0ff67b3c93ea73d49f602f2d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (BDDcompare (var (bs, (share, counter)) node2) (var (bs, (share, counter)) node1) = Datatypes.Lt).",
            "VernacExtend",
            "05af86dbe5da6e1cac267b506130e8b4a794910b"
        ],
        [
            "clear y; intro y.",
            "VernacExtend",
            "5f09b77b9f524be4c9a467af15716e8b43a98a39"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node1)).",
            "VernacExtend",
            "15c42b9b531174e4c3fa9032cc8aeee4b2986526"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node2)).",
            "VernacExtend",
            "34b79c53b9fb60c47c59d3d517258d32742fb1e3"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node1)).",
            "VernacExtend",
            "83c417554528e4d032cd3dabe3f8c866b94de883"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node2)).",
            "VernacExtend",
            "fc893617c7979026586b5f845b8e43db34373104"
        ],
        [
            "intros H10 H11 H12 H13.",
            "VernacExtend",
            "4cb07ca4137215a4588e3d7fb666a1b5abe2f439"
        ],
        [
            "cut (low (bs, (share, counter)) node1 = high (bs, (share, counter)) node1).",
            "VernacExtend",
            "f3cd3be0f942cfd4651da926d1e60c2965b627fe"
        ],
        [
            "intros H14.",
            "VernacExtend",
            "800ab5421b06658afd42f05423ddaa63bcd8bed7"
        ],
        [
            "cut (Neqb (low (bs, (share, counter)) node1) (high (bs, (share, counter)) node1) = false).",
            "VernacExtend",
            "61715972c97a0b21f0473729a8a8930fb5476327"
        ],
        [
            "rewrite H14.",
            "VernacExtend",
            "b53d81c05d6007e728db7abfa7c98c200268f9e7"
        ],
        [
            "rewrite (Neqb_correct (high (bs, (share, counter)) node1)).",
            "VernacExtend",
            "f8db5a710738b3d02b38b0ec5501c273211dc46f"
        ],
        [
            "intro H15.",
            "VernacExtend",
            "a496e7944923dd251836a55eac0efac7fac32b63"
        ],
        [
            "discriminate H15.",
            "VernacExtend",
            "7f5f3e570df4d130cb793c0ad7d77ce0ecc91596"
        ],
        [
            "apply low_high_neq.",
            "VernacExtend",
            "5bbc81050d70154e424751b43b474476254f8c37"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
            "VernacExtend",
            "b47dc096aea8f4259c6c6e62a39a69b04a8f1116"
        ],
        [
            "intro H14.",
            "VernacExtend",
            "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
        ],
        [
            "elim H11; intro.",
            "VernacExtend",
            "0c29eb3ff440f3a0ec9425df045e9df7bd15a2a4"
        ],
        [
            "elim H13; intro.",
            "VernacExtend",
            "4239366b12ca7aa95c7092287208a6730e554f75"
        ],
        [
            "rewrite H15; rewrite H16; reflexivity.",
            "VernacExtend",
            "9bce0e1667dca643562c205e5f1dc8cb17928a07"
        ],
        [
            "elim H16; intro.",
            "VernacExtend",
            "e542942227b5497210a7bd66eac66d3136fd5d0f"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
            "VernacExtend",
            "b5eee1cd2eb1850bed999d292e8925c388b21293"
        ],
        [
            "rewrite H15; rewrite H17.",
            "VernacExtend",
            "056a47c61c9a59d7e4b5b50331213440a9132698"
        ],
        [
            "apply bool_fun_neq_zero_one.",
            "VernacExtend",
            "a5d7c83d87ec3f42c2fc43ba9ad1035dad2d3219"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
            "VernacExtend",
            "b5eee1cd2eb1850bed999d292e8925c388b21293"
        ],
        [
            "rewrite H15.",
            "VernacExtend",
            "63b8b0d0c08cef2e135c7c663a2c78a6e22fdeb6"
        ],
        [
            "apply bool_fun_neq_lemma.",
            "VernacExtend",
            "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
        ],
        [
            "apply bool_fun_neq_internal_zero.",
            "VernacExtend",
            "58520e3fa02a5669c566057263c0e2c0ad7c7645"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H15; intro.",
            "VernacExtend",
            "a2b9a015f32109d3137a55d790ecf80a8ae43096"
        ],
        [
            "elim H13; intro.",
            "VernacExtend",
            "4239366b12ca7aa95c7092287208a6730e554f75"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
            "VernacExtend",
            "b5eee1cd2eb1850bed999d292e8925c388b21293"
        ],
        [
            "rewrite H16; rewrite H17.",
            "VernacExtend",
            "71712afc55fd6dc7a7136f5996e7239dcac417c3"
        ],
        [
            "apply bool_fun_neq_one_zero.",
            "VernacExtend",
            "48431ae2f7e026aa576d09ecaa04b9ce1164250c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H17; intro.",
            "VernacExtend",
            "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
        ],
        [
            "rewrite H16; rewrite H18; reflexivity.",
            "VernacExtend",
            "24d383d7fdc0a099cd3540d6bd919e0befd568d9"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
            "VernacExtend",
            "b5eee1cd2eb1850bed999d292e8925c388b21293"
        ],
        [
            "rewrite H16.",
            "VernacExtend",
            "d46611b9926d3411ed586aec14fbb4de59848bae"
        ],
        [
            "apply bool_fun_neq_lemma.",
            "VernacExtend",
            "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
        ],
        [
            "apply bool_fun_neq_internal_one.",
            "VernacExtend",
            "601499f001ed4cdddbbef567dae88af1c293d310"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H13; intro.",
            "VernacExtend",
            "4239366b12ca7aa95c7092287208a6730e554f75"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
            "VernacExtend",
            "b5eee1cd2eb1850bed999d292e8925c388b21293"
        ],
        [
            "rewrite H17.",
            "VernacExtend",
            "05ed26bf77cdb384d29c02889c582eb23b3f955e"
        ],
        [
            "apply bool_fun_neq_internal_zero.",
            "VernacExtend",
            "58520e3fa02a5669c566057263c0e2c0ad7c7645"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H17; intro.",
            "VernacExtend",
            "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
        ],
        [
            "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
            "VernacExtend",
            "b5eee1cd2eb1850bed999d292e8925c388b21293"
        ],
        [
            "rewrite H18.",
            "VernacExtend",
            "0f27b84408db59cbd9918e21d833066b93142bd6"
        ],
        [
            "apply bool_fun_neq_internal_one.",
            "VernacExtend",
            "601499f001ed4cdddbbef567dae88af1c293d310"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H00 with (m := max (nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node1))) (nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node1)))).",
            "VernacExtend",
            "9d9ddfb4e4fa8531e59198d4336e47243f213a4d"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply lt_max_12.",
            "VernacExtend",
            "1da1e8e1bdc14755c37e607e1aa3fc629c2502fc"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_low.",
            "VernacExtend",
            "ba66c15448aced83d225d0e66a0f593162c936e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_high.",
            "VernacExtend",
            "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "apply in_dom_is_internal; assumption.",
            "VernacExtend",
            "f29811d1eb17ec4abef2e731def8cb853bce0823"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (bool_fun_eq (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node1) false) (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node1) true)).",
            "VernacExtend",
            "a2e3b54ee3c2ecbb2dee5424808f741a282c5df0"
        ],
        [
            "intro H14.",
            "VernacExtend",
            "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node1) false).",
            "VernacExtend",
            "7e7e39e67886057a28198cfa7bf6172b02e4ea7e"
        ],
        [
            "apply bool_fun_of_BDDlow.",
            "VernacExtend",
            "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node1) true).",
            "VernacExtend",
            "34f0980c46b48f3f04a6ec23699830d483c15f49"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (bool_fun_eq (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node1) false) (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node1) true)).",
            "VernacExtend",
            "c2c95745b5b740cbbe8b9a9d55c510af62b8f1a8"
        ],
        [
            "intro H14.",
            "VernacExtend",
            "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node1) false).",
            "VernacExtend",
            "4c8c6a1e07ba5c311103e8b3eb8f3a3a52e5db94"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node1) true).",
            "VernacExtend",
            "cddddfee6ef902db622aa1918080c45655f57485"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (bool_fun_independent (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node1)).",
            "VernacExtend",
            "5308ba2ad4011d2608221ac0a0459ad0c8695655"
        ],
        [
            "intro H14.",
            "VernacExtend",
            "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
        ],
        [
            "unfold bool_fun_independent in H14.",
            "VernacExtend",
            "0c892abdb57802d053d00a805a837695cd7aa9ac"
        ],
        [
            "unfold bool_fun_eq in |- *.",
            "VernacExtend",
            "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
        ],
        [
            "unfold bool_fun_restrict in |- *.",
            "VernacExtend",
            "8f5a662d1228cd59b9d9d647a9421f5c9c13ed3a"
        ],
        [
            "unfold bool_fun_eval at 1 3 in |- *.",
            "VernacExtend",
            "8e7b47d1f6cfd6cfd7e7e9cdeb9dbd71273f76ba"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "rewrite (H14 vb); reflexivity.",
            "VernacExtend",
            "556c865547c18fb75e3b7f827b75e419a8a8e4dc"
        ],
        [
            "apply BDDvar_independent_1 with (n := nat_of_N (var (bs, (share, counter)) node2)).",
            "VernacExtend",
            "538639b27d943f7fd1d0bf528439c905ed8bdb2e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDcompare_sup_inf.",
            "VernacExtend",
            "baf8fe4959ef74624b0b125229227a79c9e1445e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDunique : forall cfg : BDDconfig, BDDconfig_OK cfg -> forall node1 node2 : ad, config_node_OK cfg node1 -> config_node_OK cfg node2 -> bool_fun_eq (bool_fun_of_BDD cfg node1) (bool_fun_of_BDD cfg node2) -> node1 = node2.",
            "VernacStartTheoremProof",
            "8951faff276967bc3bd5426de853c307693a4a4f"
        ],
        [
            "intros cfg H node1 node2 H0 H1 H2.",
            "VernacExtend",
            "ed2f8d4ab79471d1f94e2a156cbc5051d058a048"
        ],
        [
            "apply BDDunique_1 with (cfg := cfg) (n := max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2))).",
            "VernacExtend",
            "c579e36beaf906121ef0c2275dfe1bd9f66b9646"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_eq_lemma : forall (bf1 bf2 : bool_fun) (x : BDDvar), bool_fun_ext bf1 -> bool_fun_ext bf2 -> bool_fun_eq (bool_fun_restrict bf1 x true) (bool_fun_restrict bf2 x true) -> bool_fun_eq (bool_fun_restrict bf1 x false) (bool_fun_restrict bf2 x false) -> bool_fun_eq bf1 bf2.",
            "VernacStartTheoremProof",
            "1cb83a1fc36131d493c1d6a0acae2b0bdafb7d04"
        ],
        [
            "intros bf1 bf2 x H H0 H1 H2.",
            "VernacExtend",
            "51cb2a5be3d64177e16abf9f80ca36eaa0d4301d"
        ],
        [
            "unfold bool_fun_eq in |- *.",
            "VernacExtend",
            "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "elim (sumbool_of_bool (vb x)); intro.",
            "VernacExtend",
            "cf40d2a111e41f7e84b2920110e254cf86889191"
        ],
        [
            "cut (var_binding_eq (augment vb x true) vb).",
            "VernacExtend",
            "ed395b54246b4c8b638bd005c84a1467464c59b2"
        ],
        [
            "intro H3.",
            "VernacExtend",
            "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
        ],
        [
            "cut (bool_fun_eval bf2 (augment vb x true) = bool_fun_eval bf2 vb).",
            "VernacExtend",
            "7648ea8d6a471ed953188be042c36bf2eb8bc657"
        ],
        [
            "cut (bool_fun_eval bf1 (augment vb x true) = bool_fun_eval bf1 vb).",
            "VernacExtend",
            "ca74c17a4b232a45970cf345f65e2e59736c6b86"
        ],
        [
            "intros H4 H5.",
            "VernacExtend",
            "46089e7a15bf8449e308e9b67ccaeb21f87323c9"
        ],
        [
            "rewrite <- H4.",
            "VernacExtend",
            "15801069338f53d2cf64b6951fc88c5758e631f8"
        ],
        [
            "rewrite <- H5.",
            "VernacExtend",
            "7e7c68e08488a5f01b85c6a7ae27738d3a8af897"
        ],
        [
            "unfold bool_fun_eq, bool_fun_restrict in H1.",
            "VernacExtend",
            "4fab9293cba23852799090028b95d931caffcc08"
        ],
        [
            "unfold bool_fun_eval at 1 3 in H1.",
            "VernacExtend",
            "8bd278ac019b0d9b6b977ff4a478de625ef32e08"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply augment_eq.",
            "VernacExtend",
            "f6cda00b2ead5e480bd1a79928ec0b102674b6c7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (var_binding_eq (augment vb x false) vb).",
            "VernacExtend",
            "38457ba05b1d0cc128795abd63a26d45bcb0d522"
        ],
        [
            "intro H3.",
            "VernacExtend",
            "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
        ],
        [
            "cut (bool_fun_eval bf2 (augment vb x false) = bool_fun_eval bf2 vb).",
            "VernacExtend",
            "0c3391663685954c23162987a505d068f1fc8645"
        ],
        [
            "cut (bool_fun_eval bf1 (augment vb x false) = bool_fun_eval bf1 vb).",
            "VernacExtend",
            "bb7a2b5419290f4fdf9a21f0f102cf04da9b91cd"
        ],
        [
            "intros H4 H5.",
            "VernacExtend",
            "46089e7a15bf8449e308e9b67ccaeb21f87323c9"
        ],
        [
            "rewrite <- H4.",
            "VernacExtend",
            "15801069338f53d2cf64b6951fc88c5758e631f8"
        ],
        [
            "rewrite <- H5.",
            "VernacExtend",
            "7e7c68e08488a5f01b85c6a7ae27738d3a8af897"
        ],
        [
            "unfold bool_fun_eq, bool_fun_restrict in H2.",
            "VernacExtend",
            "ac5a6026284b438a0c29681ee9087556ddb76d7e"
        ],
        [
            "unfold bool_fun_eval at 1 3 in H2.",
            "VernacExtend",
            "19454720ecbb047e98b0584fa706cfa4cb911386"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply augment_eq.",
            "VernacExtend",
            "f6cda00b2ead5e480bd1a79928ec0b102674b6c7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_preservation_1 : forall cfg cfg' : BDDconfig, BDDconfig_OK cfg -> BDDconfig_OK cfg' -> (forall (x : BDDvar) (l r a : ad), MapGet _ (fst cfg) a = Some (x, (l, r)) -> MapGet _ (fst cfg') a = Some (x, (l, r))) -> forall (n : nat) (node : ad), n = nat_of_N (var cfg node) -> config_node_OK cfg node -> bool_fun_eq (bool_fun_of_BDD cfg' node) (bool_fun_of_BDD cfg node).",
            "VernacStartTheoremProof",
            "d6812410e938ea42f98d8f0513867bd466001b39"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y.",
            "VernacExtend",
            "b520c44f60af1aab60e05d6dde068a31774f78e4"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intro cfg'.",
            "VernacExtend",
            "177b524e7d7ba24599e9a3f739aa46fab9d91294"
        ],
        [
            "elim cfg'; clear cfg'; intros bs' y'.",
            "VernacExtend",
            "7c9494587a728ec12dc9ffb81c63af474a58d3a2"
        ],
        [
            "elim y'; clear y'; intros share' counter'.",
            "VernacExtend",
            "93da110326bb1472a1e0bb802f306b7cd477fa0b"
        ],
        [
            "intros H H0 H1 n.",
            "VernacExtend",
            "7e20c91d854fbe51eed092a3bd2283183f37b621"
        ],
        [
            "apply lt_wf_ind with (P := fun n : nat => forall node : ad, n = nat_of_N (var (bs, (share, counter)) node) -> config_node_OK (bs, (share, counter)) node -> bool_fun_eq (bool_fun_of_BDD (bs', (share', counter')) node) (bool_fun_of_BDD (bs, (share, counter)) node)).",
            "VernacExtend",
            "7250a09db675a8dbb80a43cf3832e99514e243de"
        ],
        [
            "intros n0 H2 node H3 H4.",
            "VernacExtend",
            "6ccdf16d4efa148b3c4c92d8bd9e87b7d1302036"
        ],
        [
            "cut (config_node_OK (bs', (share', counter')) node).",
            "VernacExtend",
            "371eccd808e43dafd75d3c5b24217d9ab6a110d8"
        ],
        [
            "intro H5.",
            "VernacExtend",
            "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
        ],
        [
            "elim H4; intro.",
            "VernacExtend",
            "5fb7c04a4c863371b345204c3ef35e9076208d64"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
            "VernacExtend",
            "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs', (share', counter')) H0)).",
            "VernacExtend",
            "31976344173e13f6e3937191951ef0a432b0621f"
        ],
        [
            "unfold bool_fun_eq in |- *; reflexivity.",
            "VernacExtend",
            "92c45c90f429704a67958e204600034d59b26df0"
        ],
        [
            "elim H6; intro.",
            "VernacExtend",
            "e85bcbbf1e2e7245dba06fdc165dee137f165a99"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs', (share', counter')) H0))) .",
            "VernacExtend",
            "25d65a7d65556d1bbb13bfff4ecb1e14eed86295"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) .",
            "VernacExtend",
            "3f6607f94cebcd36beb279442c0b7fce4d5720f5"
        ],
        [
            "unfold bool_fun_eq in |- *; reflexivity.",
            "VernacExtend",
            "92c45c90f429704a67958e204600034d59b26df0"
        ],
        [
            "cut (is_internal_node (bs, (share, counter)) node).",
            "VernacExtend",
            "b3132957a13adc28efb68a3d31a845c7073ba512"
        ],
        [
            "cut (is_internal_node (bs', (share', counter')) node).",
            "VernacExtend",
            "1f91367fae0cd8509a3f0b0f3f76e2c77eff69b6"
        ],
        [
            "intros H8 H9.",
            "VernacExtend",
            "f720374270a7af876475ce0f9bf0d300f82ebc9a"
        ],
        [
            "cut (bool_fun_eq (bool_fun_of_BDD (bs', (share', counter')) (low (bs', (share', counter')) node)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node))).",
            "VernacExtend",
            "9321919a050f53d2714e10af823344a018dc559d"
        ],
        [
            "cut (bool_fun_eq (bool_fun_of_BDD (bs', (share', counter')) (high (bs', (share', counter')) node)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node))).",
            "VernacExtend",
            "2ddfa3e4ad88636798a855a7e7d7eb8eedc4e4ca"
        ],
        [
            "intros H10 H11.",
            "VernacExtend",
            "1e9e77841a1287dac47b6c4243f9f11a30b06e73"
        ],
        [
            "cut (var (bs, (share, counter)) node = var (bs', (share', counter')) node).",
            "VernacExtend",
            "43ebfdcee6795fb7280d7bf75b19344d267665f8"
        ],
        [
            "intro H12.",
            "VernacExtend",
            "afc6629c474ec2e325da340fcb3a46ec73eead51"
        ],
        [
            "apply bool_fun_eq_lemma with (x := var (bs, (share, counter)) node).",
            "VernacExtend",
            "a1401d12b294af4bc501286ea87e1a7284e29316"
        ],
        [
            "apply bool_fun_of_BDD_ext.",
            "VernacExtend",
            "b4ca4bcdc77510aa1141d8e839805305e49722a4"
        ],
        [
            "apply bool_fun_of_BDD_ext.",
            "VernacExtend",
            "b4ca4bcdc77510aa1141d8e839805305e49722a4"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs', (share', counter')) (high (bs', (share', counter')) node)).",
            "VernacExtend",
            "02b9fa3a4381047ea740ca27823b194d7d8ad422"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "rewrite H12.",
            "VernacExtend",
            "808735886b50c5c4d7707b33984e66555647a2a9"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)).",
            "VernacExtend",
            "d2645c35b42b29634291ab6cdb432ba80c8d5c3b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs', (share', counter')) (low (bs', (share', counter')) node)).",
            "VernacExtend",
            "a170093bea93ff68ec84a9f1fe608d8646cb0bb7"
        ],
        [
            "rewrite H12.",
            "VernacExtend",
            "808735886b50c5c4d7707b33984e66555647a2a9"
        ],
        [
            "apply bool_fun_eq_symm; apply bool_fun_of_BDDlow; assumption; assumption.",
            "VernacExtend",
            "6750c7637142d7910f886647c002a928ff5cea56"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)).",
            "VernacExtend",
            "592b7570edfa996bb1a70260fa8fc71cdb654094"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_of_BDDlow; assumption; assumption.",
            "VernacExtend",
            "e7979d3a28f82e47e470c5052e347deeb3f30fcb"
        ],
        [
            "unfold var in |- *.",
            "VernacExtend",
            "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
        ],
        [
            "inversion H9.",
            "VernacExtend",
            "ba06d75575d77a771abfe438435f8748713f713e"
        ],
        [
            "inversion H12.",
            "VernacExtend",
            "d5ec1d67ecbf066a6575bda368738e1ad0dbbc60"
        ],
        [
            "inversion H13.",
            "VernacExtend",
            "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
        ],
        [
            "rewrite H14.",
            "VernacExtend",
            "b53d81c05d6007e728db7abfa7c98c200268f9e7"
        ],
        [
            "rewrite (H1 x x0 x1 node H14).",
            "VernacExtend",
            "252e55b8da65f16a9cfc2f6cd87bb9a03c953570"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node)).",
            "VernacExtend",
            "b814f80db45bffc5d1eb82f58679c238c6f54d48"
        ],
        [
            "cut (config_node_OK (bs', (share', counter')) (high (bs', (share', counter')) node)).",
            "VernacExtend",
            "4e4d87c74e9f9fb2a1d7397877d6f856200db254"
        ],
        [
            "intros H10 H11.",
            "VernacExtend",
            "1e9e77841a1287dac47b6c4243f9f11a30b06e73"
        ],
        [
            "inversion H9.",
            "VernacExtend",
            "ba06d75575d77a771abfe438435f8748713f713e"
        ],
        [
            "inversion H12.",
            "VernacExtend",
            "d5ec1d67ecbf066a6575bda368738e1ad0dbbc60"
        ],
        [
            "inversion H13.",
            "VernacExtend",
            "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
        ],
        [
            "cut (high (bs', (share', counter')) node = high (bs, (share, counter)) node).",
            "VernacExtend",
            "6c8ea60f4f22f78c0bcc5eac3c7fea5bd6361161"
        ],
        [
            "cut (low (bs', (share', counter')) node = low (bs, (share, counter)) node).",
            "VernacExtend",
            "d354dc89d62b22c6d58a3a4deb5aac8ddf200cec"
        ],
        [
            "intros H15 H16.",
            "VernacExtend",
            "011f2cbfd8cab00298b47ef7500b9c86f8300c26"
        ],
        [
            "elim H11; intro.",
            "VernacExtend",
            "0c29eb3ff440f3a0ec9425df045e9df7bd15a2a4"
        ],
        [
            "rewrite H16; rewrite H17.",
            "VernacExtend",
            "71712afc55fd6dc7a7136f5996e7239dcac417c3"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
            "VernacExtend",
            "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs', (share', counter')) H0)).",
            "VernacExtend",
            "31976344173e13f6e3937191951ef0a432b0621f"
        ],
        [
            "unfold bool_fun_eq in |- *; reflexivity.",
            "VernacExtend",
            "92c45c90f429704a67958e204600034d59b26df0"
        ],
        [
            "elim H17; intro.",
            "VernacExtend",
            "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
        ],
        [
            "rewrite H16; rewrite H18.",
            "VernacExtend",
            "c50bacc838f1a9a0b0cb85d4c1ca555a88e774c3"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs', (share', counter')) H0))) .",
            "VernacExtend",
            "25d65a7d65556d1bbb13bfff4ecb1e14eed86295"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) .",
            "VernacExtend",
            "3f6607f94cebcd36beb279442c0b7fce4d5720f5"
        ],
        [
            "unfold bool_fun_eq in |- *; reflexivity.",
            "VernacExtend",
            "92c45c90f429704a67958e204600034d59b26df0"
        ],
        [
            "rewrite H16.",
            "VernacExtend",
            "d46611b9926d3411ed586aec14fbb4de59848bae"
        ],
        [
            "apply H2 with (m := nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node))).",
            "VernacExtend",
            "cfa9ad629f86bba1ca4146c4e96bb1adeaea2667"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_high.",
            "VernacExtend",
            "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold low in |- *.",
            "VernacExtend",
            "344cb2081628177ec374c362b17ddb5395ae8549"
        ],
        [
            "rewrite H14.",
            "VernacExtend",
            "b53d81c05d6007e728db7abfa7c98c200268f9e7"
        ],
        [
            "rewrite (H1 x x0 x1 node H14).",
            "VernacExtend",
            "252e55b8da65f16a9cfc2f6cd87bb9a03c953570"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold high in |- *.",
            "VernacExtend",
            "af6be3a481b55356ef54ee85b5fb2cba596f398f"
        ],
        [
            "rewrite H14.",
            "VernacExtend",
            "b53d81c05d6007e728db7abfa7c98c200268f9e7"
        ],
        [
            "rewrite (H1 x x0 x1 node H14).",
            "VernacExtend",
            "252e55b8da65f16a9cfc2f6cd87bb9a03c953570"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (low (bs', (share', counter')) node = low (bs, (share, counter)) node).",
            "VernacExtend",
            "d354dc89d62b22c6d58a3a4deb5aac8ddf200cec"
        ],
        [
            "intro H10.",
            "VernacExtend",
            "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
        ],
        [
            "rewrite H10.",
            "VernacExtend",
            "cd2638bc5a7f85648c5e2c9d77046abc07e2da6a"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node)).",
            "VernacExtend",
            "372e75dc28bba5c8c7cfe221d9ab83fa6e9a8a94"
        ],
        [
            "intro H11.",
            "VernacExtend",
            "94ccd5954f5b20492a368275203c835bb786888f"
        ],
        [
            "elim H11.",
            "VernacExtend",
            "429643c673670fec28160f8e25479dd3e854bce2"
        ],
        [
            "intro H12.",
            "VernacExtend",
            "afc6629c474ec2e325da340fcb3a46ec73eead51"
        ],
        [
            "rewrite H12.",
            "VernacExtend",
            "808735886b50c5c4d7707b33984e66555647a2a9"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
            "VernacExtend",
            "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs', (share', counter')) H0)).",
            "VernacExtend",
            "31976344173e13f6e3937191951ef0a432b0621f"
        ],
        [
            "unfold bool_fun_eq in |- *; reflexivity.",
            "VernacExtend",
            "92c45c90f429704a67958e204600034d59b26df0"
        ],
        [
            "intro H12.",
            "VernacExtend",
            "afc6629c474ec2e325da340fcb3a46ec73eead51"
        ],
        [
            "elim H12; intro.",
            "VernacExtend",
            "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
        ],
        [
            "rewrite H13.",
            "VernacExtend",
            "bc2d32522e887645239b994008e234c058557cd9"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) .",
            "VernacExtend",
            "3f6607f94cebcd36beb279442c0b7fce4d5720f5"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs', (share', counter')) H0))) .",
            "VernacExtend",
            "25d65a7d65556d1bbb13bfff4ecb1e14eed86295"
        ],
        [
            "unfold bool_fun_eq in |- *; reflexivity.",
            "VernacExtend",
            "92c45c90f429704a67958e204600034d59b26df0"
        ],
        [
            "apply H2 with (m := nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node))).",
            "VernacExtend",
            "16ea36bb20ef3e83d34497d9bff70c7cc6d1f837"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_low.",
            "VernacExtend",
            "ba66c15448aced83d225d0e66a0f593162c936e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold low in |- *.",
            "VernacExtend",
            "344cb2081628177ec374c362b17ddb5395ae8549"
        ],
        [
            "inversion H9.",
            "VernacExtend",
            "ba06d75575d77a771abfe438435f8748713f713e"
        ],
        [
            "inversion H10.",
            "VernacExtend",
            "25696e0e8d3b74f79fae251fc7be3e8779c2da96"
        ],
        [
            "inversion H11.",
            "VernacExtend",
            "e3dad2cd24e24300a066e006efd8d61e85377ebb"
        ],
        [
            "rewrite H12.",
            "VernacExtend",
            "808735886b50c5c4d7707b33984e66555647a2a9"
        ],
        [
            "rewrite (H1 x x0 x1 node H12).",
            "VernacExtend",
            "6722061e91dac13a7e7eba7eb556c12f88d1b801"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "elim (option_sum _ (MapGet _ (fst (bs, (share, counter))) node)).",
            "VernacExtend",
            "1875675a9360866c4b8da8ad781710a59c5c06bb"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "elim y; intro x.",
            "VernacExtend",
            "4b426362cc009f919ab6edd221d45a6f70d107e6"
        ],
        [
            "elim x; intros x0 x1.",
            "VernacExtend",
            "572d73b768456bc9117314c5ad4f4d3b05d0ee5a"
        ],
        [
            "elim x1; intros y0 y1 y2.",
            "VernacExtend",
            "71c483afd7183c03482ecd72606bc936e7c6a1dd"
        ],
        [
            "unfold in_dom in |- *.",
            "VernacExtend",
            "72f928df3e3c19d4381dea5e9bd4414e3b95a02f"
        ],
        [
            "rewrite (H1 x0 y0 y1 node y2).",
            "VernacExtend",
            "d768e77307d7ce911027973e744425ae846cf967"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "unfold in_dom in H7.",
            "VernacExtend",
            "0d90e6a4e6199412e2827cc7759ad425e1881453"
        ],
        [
            "rewrite y in H7; discriminate.",
            "VernacExtend",
            "2d34d9365432389c16c0f56507d59039994fc893"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H4; intro.",
            "VernacExtend",
            "5fb7c04a4c863371b345204c3ef35e9076208d64"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "left; reflexivity.",
            "VernacExtend",
            "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
        ],
        [
            "elim H5; intro.",
            "VernacExtend",
            "29923dfc32add298aa4e01bbfee147f65e05faf2"
        ],
        [
            "rewrite H6; right; left; reflexivity.",
            "VernacExtend",
            "86231929f5d5b441e414f84beb8564a66b96a48f"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "elim (option_sum _ (MapGet _ (fst (bs, (share, counter))) node)).",
            "VernacExtend",
            "1875675a9360866c4b8da8ad781710a59c5c06bb"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "elim y; intro x.",
            "VernacExtend",
            "4b426362cc009f919ab6edd221d45a6f70d107e6"
        ],
        [
            "elim x; intro y0.",
            "VernacExtend",
            "7a6872f5a9f2263fa32faf7e684af3e1cb79fb82"
        ],
        [
            "intro y1.",
            "VernacExtend",
            "4d0ec3273193a8100c12a11465f6beb7953e5c77"
        ],
        [
            "elim y1; intros y2 y3 y4.",
            "VernacExtend",
            "279fa9a378c4b11f4a9e89d486064315a1749601"
        ],
        [
            "unfold in_dom in |- *; rewrite (H1 y0 y2 y3 node y4); reflexivity.",
            "VernacExtend",
            "00db41e826978d6cb1f64c77e23aeacb8308f2bd"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "unfold in_dom in H6; rewrite y in H6; discriminate.",
            "VernacExtend",
            "32c1de33836d6699f71e32776ddd8affd53b3a5c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_preservation : forall (cfg cfg' : BDDconfig) (node : ad), BDDconfig_OK cfg -> BDDconfig_OK cfg' -> (forall (x : BDDvar) (l r a : ad), MapGet _ (fst cfg) a = Some (x, (l, r)) -> MapGet _ (fst cfg') a = Some (x, (l, r))) -> config_node_OK cfg node -> bool_fun_eq (bool_fun_of_BDD cfg' node) (bool_fun_of_BDD cfg node).",
            "VernacStartTheoremProof",
            "f14be2caf44befaec658a6bf32b31d8d8b7b99f4"
        ],
        [
            "intros cfg cfg' node H H0 H1 H2.",
            "VernacExtend",
            "7c40224afe90a42fb62970ba531f91d112671cc1"
        ],
        [
            "apply bool_fun_preservation_1 with (n := nat_of_N (var cfg node)).",
            "VernacExtend",
            "4c42de6f191cc726ba487ac0298afbeb6f041707"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "bool_fun_one_zero_eq",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "unfold bool_fun_eq, bool_fun_zero, bool_fun_one in |- *.",
                        "VernacExtend",
                        "6453fd68e64ff4f2346f993b8ff401de8f1a4505"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in H.",
                        "VernacExtend",
                        "8c833ccc9dd13150c1debad3a11b4ee4e92b7f0a"
                    ]
                },
                {
                    "command": [
                        "cut (true = false).",
                        "VernacExtend",
                        "b590eb7256a56b2be1b191e9eda3ab8241e0870d"
                    ]
                },
                {
                    "command": [
                        "intro; discriminate.",
                        "VernacExtend",
                        "d63764752b13c9777fe3ccb54c65ae24ab510154"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "exact (fun x : BDDvar => true).",
                        "VernacExtend",
                        "6ce3f600f63f5acd0610431a3c0b4c1d64e63809"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_zero_one_eq",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "unfold bool_fun_eq, bool_fun_zero, bool_fun_one in |- *.",
                        "VernacExtend",
                        "6453fd68e64ff4f2346f993b8ff401de8f1a4505"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in H.",
                        "VernacExtend",
                        "8c833ccc9dd13150c1debad3a11b4ee4e92b7f0a"
                    ]
                },
                {
                    "command": [
                        "cut (false = true).",
                        "VernacExtend",
                        "487808628e1cc285687e13fd91d5d2968e48593b"
                    ]
                },
                {
                    "command": [
                        "intro; discriminate.",
                        "VernacExtend",
                        "d63764752b13c9777fe3ccb54c65ae24ab510154"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "exact (fun x : BDDvar => true).",
                        "VernacExtend",
                        "6ce3f600f63f5acd0610431a3c0b4c1d64e63809"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_restrict_zero",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros x b.",
                        "VernacExtend",
                        "53423c41291feb855a904cd72839e12ba28f59e7"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq, bool_fun_restrict, bool_fun_zero, bool_fun_one in |- *.",
                        "VernacExtend",
                        "f2f2c7cb38e85f71d23261f416449e69db1cf33d"
                    ]
                },
                {
                    "command": [
                        "intros vb.",
                        "VernacExtend",
                        "11cff077e73de23665ee5d46242d9ad873547a2f"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval, augment in |- *.",
                        "VernacExtend",
                        "27ce3e533dc7896ef9d43db79a702cbc019f0749"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_restrict_one",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros x b.",
                        "VernacExtend",
                        "53423c41291feb855a904cd72839e12ba28f59e7"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq, bool_fun_restrict, bool_fun_zero, bool_fun_one in |- *.",
                        "VernacExtend",
                        "f2f2c7cb38e85f71d23261f416449e69db1cf33d"
                    ]
                },
                {
                    "command": [
                        "intros vb.",
                        "VernacExtend",
                        "11cff077e73de23665ee5d46242d9ad873547a2f"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval, augment in |- *.",
                        "VernacExtend",
                        "27ce3e533dc7896ef9d43db79a702cbc019f0749"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_restrict_eq",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros bf bf' x b H.",
                        "VernacExtend",
                        "ac453fc5773802885861c9ba34057c501c1c8b61"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *.",
                        "VernacExtend",
                        "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_restrict in |- *.",
                        "VernacExtend",
                        "8f5a662d1228cd59b9d9d647a9421f5c9c13ed3a"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval at 1 3 in |- *.",
                        "VernacExtend",
                        "8e7b47d1f6cfd6cfd7e7e9cdeb9dbd71273f76ba"
                    ]
                },
                {
                    "command": [
                        "intro vb.",
                        "VernacExtend",
                        "e8b7ec7490ece50e805b33900ace150891cc88ee"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_of_BDD_ext",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "unfold bool_fun_of_BDD in |- *.",
                        "VernacExtend",
                        "6db691e81231fd80696763d17a3695cfd8e0627e"
                    ]
                },
                {
                    "command": [
                        "intros cfg node.",
                        "VernacExtend",
                        "6fd14c7888c45af53a749c7ffdeb0a003989b080"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDD_1_ext.",
                        "VernacExtend",
                        "c21462474567e48a2508c4efb71a8e54e7d71050"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "augment_eq",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "unfold var_binding_eq in |- *.",
                        "VernacExtend",
                        "e2e5c7b406e1cc1093cb6b4238aecf5940e25650"
                    ]
                },
                {
                    "command": [
                        "intros vb x b H x0.",
                        "VernacExtend",
                        "1408a231d06522d6a9ae326648f35d5b5f6bc112"
                    ]
                },
                {
                    "command": [
                        "unfold augment in |- *.",
                        "VernacExtend",
                        "2541ca0b2d7a468c91ad53f9af6a38fcb4e83a32"
                    ]
                },
                {
                    "command": [
                        "elim (sumbool_of_bool (BDDvar_eq x x0)).",
                        "VernacExtend",
                        "d13e5118ea1406b3446c4123bf55d077e5a0d23d"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "rewrite y.",
                        "VernacExtend",
                        "981e1312d3ff196b34a8ce70ebd2fc1285cb160f"
                    ]
                },
                {
                    "command": [
                        "cut (x = x0).",
                        "VernacExtend",
                        "67701fcbf85331b2210971fc334679f5dbb2ddb1"
                    ]
                },
                {
                    "command": [
                        "intro H0.",
                        "VernacExtend",
                        "33135fa360f1c5b700715c0dfac0804c96d2fa77"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "rewrite H; reflexivity.",
                        "VernacExtend",
                        "1eef9b63d851b99cfa44117acf0ddd958095123d"
                    ]
                },
                {
                    "command": [
                        "apply Neqb_complete.",
                        "VernacExtend",
                        "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
                    ]
                },
                {
                    "command": [
                        "exact y.",
                        "VernacExtend",
                        "797b6a352d38c8451a63806add6c46450ff721c5"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "rewrite y.",
                        "VernacExtend",
                        "981e1312d3ff196b34a8ce70ebd2fc1285cb160f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_independent_lemma",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "intros bf x vb b H H0.",
                        "VernacExtend",
                        "d600dba7b0eecf9bcb81aeeda1e423b84470f680"
                    ]
                },
                {
                    "command": [
                        "elim (sumbool_of_bool (vb x)).",
                        "VernacExtend",
                        "a0970b3358e1bd41f4552622aa36dfddb0900e82"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "elim b.",
                        "VernacExtend",
                        "954e73d8a25006d790022abb5978a50d3a888a56"
                    ]
                },
                {
                    "command": [
                        "cut (var_binding_eq (augment vb x true) vb).",
                        "VernacExtend",
                        "ed395b54246b4c8b638bd005c84a1467464c59b2"
                    ]
                },
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "rewrite (H (augment vb x true) vb H1).",
                        "VernacExtend",
                        "fb2a5c044e4545f959db2624b99c55ad583ba002"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eval bf (augment vb x true) = bool_fun_eval bf vb).",
                        "VernacExtend",
                        "0fc6ac46664c0f2a0eba1ee3824ca6ece6338681"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in |- *.",
                        "VernacExtend",
                        "e1bd32083c9d545eed865fc3000888293547add0"
                    ]
                },
                {
                    "command": [
                        "intro H2.",
                        "VernacExtend",
                        "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite (H (augment vb x true) vb H1).",
                        "VernacExtend",
                        "fb2a5c044e4545f959db2624b99c55ad583ba002"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply augment_eq.",
                        "VernacExtend",
                        "f6cda00b2ead5e480bd1a79928ec0b102674b6c7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H0 vb).",
                        "VernacExtend",
                        "7cd58aa8ee7d0645942ce061b7498dcada528c69"
                    ]
                },
                {
                    "command": [
                        "cut (var_binding_eq (augment vb x true) vb).",
                        "VernacExtend",
                        "ed395b54246b4c8b638bd005c84a1467464c59b2"
                    ]
                },
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "rewrite (H (augment vb x true) vb H1).",
                        "VernacExtend",
                        "fb2a5c044e4545f959db2624b99c55ad583ba002"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eval bf (augment vb x true) = bool_fun_eval bf vb).",
                        "VernacExtend",
                        "0fc6ac46664c0f2a0eba1ee3824ca6ece6338681"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in |- *.",
                        "VernacExtend",
                        "e1bd32083c9d545eed865fc3000888293547add0"
                    ]
                },
                {
                    "command": [
                        "intro H2.",
                        "VernacExtend",
                        "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite (H (augment vb x true) vb H1).",
                        "VernacExtend",
                        "fb2a5c044e4545f959db2624b99c55ad583ba002"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply augment_eq.",
                        "VernacExtend",
                        "f6cda00b2ead5e480bd1a79928ec0b102674b6c7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "elim b.",
                        "VernacExtend",
                        "954e73d8a25006d790022abb5978a50d3a888a56"
                    ]
                },
                {
                    "command": [
                        "cut (var_binding_eq (augment vb x false) vb).",
                        "VernacExtend",
                        "38457ba05b1d0cc128795abd63a26d45bcb0d522"
                    ]
                },
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eval bf (augment vb x false) = bool_fun_eval bf vb).",
                        "VernacExtend",
                        "f511334a28cdc9666f03d905a71899abbc7d2bea"
                    ]
                },
                {
                    "command": [
                        "intro H2.",
                        "VernacExtend",
                        "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2.",
                        "VernacExtend",
                        "c204509e5e85cb1396c425732210ff127ac38a7b"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply augment_eq.",
                        "VernacExtend",
                        "f6cda00b2ead5e480bd1a79928ec0b102674b6c7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (var_binding_eq (augment vb x false) vb).",
                        "VernacExtend",
                        "38457ba05b1d0cc128795abd63a26d45bcb0d522"
                    ]
                },
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply augment_eq.",
                        "VernacExtend",
                        "f6cda00b2ead5e480bd1a79928ec0b102674b6c7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_independent_zero",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros x H.",
                        "VernacExtend",
                        "a0cd74b85812810ce5a78a540bad98f664bd4842"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
                        "VernacExtend",
                        "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_independent in |- *.",
                        "VernacExtend",
                        "a9c1518f7123ea1f62c19e6eac44b0ba3fdabf3f"
                    ]
                },
                {
                    "command": [
                        "intro vb.",
                        "VernacExtend",
                        "e8b7ec7490ece50e805b33900ace150891cc88ee"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval, bool_fun_zero in |- *.",
                        "VernacExtend",
                        "e03c51d8148f10a47439237755d15e7edb116c7b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_independent_one",
            "line_nb": 205,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros x H.",
                        "VernacExtend",
                        "a0cd74b85812810ce5a78a540bad98f664bd4842"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) .",
                        "VernacExtend",
                        "3f6607f94cebcd36beb279442c0b7fce4d5720f5"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_independent in |- *.",
                        "VernacExtend",
                        "a9c1518f7123ea1f62c19e6eac44b0ba3fdabf3f"
                    ]
                },
                {
                    "command": [
                        "intro vb.",
                        "VernacExtend",
                        "e8b7ec7490ece50e805b33900ace150891cc88ee"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval, bool_fun_one in |- *.",
                        "VernacExtend",
                        "ea9a5484a003a4d9dd0302ccebfad634be48d4ce"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_dom_is_internal",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros node H.",
                        "VernacExtend",
                        "810a326c618a8ae71b2402a410c47ae5e4bc4ad1"
                    ]
                },
                {
                    "command": [
                        "elim (option_sum _ (MapGet _ (fst (bs, (share, counter))) node)).",
                        "VernacExtend",
                        "1875675a9360866c4b8da8ad781710a59c5c06bb"
                    ]
                },
                {
                    "command": [
                        "intros y.",
                        "VernacExtend",
                        "d3cd14babe4904577f05dd23b379c589bf67ea40"
                    ]
                },
                {
                    "command": [
                        "elim y.",
                        "VernacExtend",
                        "2e1340b20b979eff9f29f6f7a068bc217b31672c"
                    ]
                },
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "elim x.",
                        "VernacExtend",
                        "4dae947360dc7d88bee6f5459fc6c026a56c9298"
                    ]
                },
                {
                    "command": [
                        "intro y0.",
                        "VernacExtend",
                        "d1834bf95553ce1485d1c19693bbdd1e392d677e"
                    ]
                },
                {
                    "command": [
                        "intro y1.",
                        "VernacExtend",
                        "4d0ec3273193a8100c12a11465f6beb7953e5c77"
                    ]
                },
                {
                    "command": [
                        "elim y1.",
                        "VernacExtend",
                        "7deb42a0d69f05166c553edfbfcc7a66614866f4"
                    ]
                },
                {
                    "command": [
                        "intros y2 y3 y4.",
                        "VernacExtend",
                        "a37ec199aae417c062da0aa32fbb80092375c854"
                    ]
                },
                {
                    "command": [
                        "split with y0; split with y2; split with y3; assumption.",
                        "VernacExtend",
                        "e262d7409e0e1d8d5a1085a98879c939df506f59"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in H.",
                        "VernacExtend",
                        "f74550613788a9e05d16c146cb433d7ae258d92f"
                    ]
                },
                {
                    "command": [
                        "rewrite y in H.",
                        "VernacExtend",
                        "0d861e553bc0c4d173e68ac874cc26cc8570f70b"
                    ]
                },
                {
                    "command": [
                        "discriminate H.",
                        "VernacExtend",
                        "f00d7179963a09be7462e0ca3723e1bc13cd6c39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "internal_node_lemma",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros node H H0.",
                        "VernacExtend",
                        "8d8c54b0bc0d07c3f27d23d06e4c765a91435774"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "elim H1.",
                        "VernacExtend",
                        "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
                    ]
                },
                {
                    "command": [
                        "intros H3 H4.",
                        "VernacExtend",
                        "a4ab42ba0b3ae584df1cc6650ce0a63bbbf6221c"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "inversion H5.",
                        "VernacExtend",
                        "c72c29a0eff26255c8a4846e1794fb6f7559049a"
                    ]
                },
                {
                    "command": [
                        "inversion H6.",
                        "VernacExtend",
                        "91475f7cc5dc394b5f8e34c38f1f3fae3256b731"
                    ]
                },
                {
                    "command": [
                        "cut (BDD_OK bs node).",
                        "VernacExtend",
                        "bf40d4ac11cacf3c4c7ab81a432d707f74a1c33f"
                    ]
                },
                {
                    "command": [
                        "unfold BDD_OK in |- *.",
                        "VernacExtend",
                        "b26518e0ed97c56b4066a7424bbd74e6c10a2677"
                    ]
                },
                {
                    "command": [
                        "unfold BDDordered in |- *.",
                        "VernacExtend",
                        "df9fe3c650a80b7babe1bb741a113ceb82eba8e3"
                    ]
                },
                {
                    "command": [
                        "simpl in H7; rewrite H7.",
                        "VernacExtend",
                        "a408ae2a1c472e42f8c62223f198c5c7da89aa7e"
                    ]
                },
                {
                    "command": [
                        "intro H8.",
                        "VernacExtend",
                        "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
                    ]
                },
                {
                    "command": [
                        "unfold var, high, low in |- *.",
                        "VernacExtend",
                        "533dccb89fed778ebbf74258d9372e72a231e90f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H7.",
                        "VernacExtend",
                        "2b0de906e9dfacfe89c031c2266760d29b5450f6"
                    ]
                },
                {
                    "command": [
                        "cut (node = BDDzero \\/ node = BDDone \\/ (exists x' : BDDvar, (exists l' : BDDvar, (exists r' : BDDvar, MapGet _ bs node = Some (x', (l', r')) /\\ BDDcompare x' (ad_S x) = Datatypes.Lt /\\ Neqb l' r' = false /\\ BDDbounded bs l' x' /\\ BDDbounded bs r' x')))).",
                        "VernacExtend",
                        "06807b374ba340eddf151b54b7e73277a53cc22d"
                    ]
                },
                {
                    "command": [
                        "intros H9.",
                        "VernacExtend",
                        "decee693aea2c0a8e1f65c42c7fc8ccde5deefa1"
                    ]
                },
                {
                    "command": [
                        "elim H9; intros.",
                        "VernacExtend",
                        "12334c97f44957e9c5cef0f3af9bfd7eaf28bd49"
                    ]
                },
                {
                    "command": [
                        "rewrite H10 in H7; rewrite H3 in H7; discriminate.",
                        "VernacExtend",
                        "af94b4e2f54ccc80fa7b5e247360b1ebcf88b7d2"
                    ]
                },
                {
                    "command": [
                        "elim H10; intros.",
                        "VernacExtend",
                        "2a1b8ee38a88a74aba2a10a94540a046496421a7"
                    ]
                },
                {
                    "command": [
                        "rewrite H11 in H7; rewrite (proj1 H4) in H7; discriminate.",
                        "VernacExtend",
                        "94ff88e6975fbab020ecf17a8dd69fb1510f1a57"
                    ]
                },
                {
                    "command": [
                        "inversion H11.",
                        "VernacExtend",
                        "e3dad2cd24e24300a066e006efd8d61e85377ebb"
                    ]
                },
                {
                    "command": [
                        "inversion H12.",
                        "VernacExtend",
                        "d5ec1d67ecbf066a6575bda368738e1ad0dbbc60"
                    ]
                },
                {
                    "command": [
                        "inversion H13.",
                        "VernacExtend",
                        "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
                    ]
                },
                {
                    "command": [
                        "inversion H14.",
                        "VernacExtend",
                        "158c311bb69c3e5a75670dfcbe8f342a533b833e"
                    ]
                },
                {
                    "command": [
                        "rewrite H7 in H15.",
                        "VernacExtend",
                        "17bef0af3df296a117969c00514306f28f087450"
                    ]
                },
                {
                    "command": [
                        "injection H15.",
                        "VernacExtend",
                        "ec21fb25b74b443f9a45e6195a722ee9dd005b64"
                    ]
                },
                {
                    "command": [
                        "intros H17 H18 H19.",
                        "VernacExtend",
                        "add8cba8dea95e86bddefff463463963fae3b5bc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H17 in H16.",
                        "VernacExtend",
                        "c3b4f1b86b0c4408ab279c84eb1dc4da6e9d1d4c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H18 in H16.",
                        "VernacExtend",
                        "430b38d843901e1266773eefec550bd7bcbb93f2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H19 in H16.",
                        "VernacExtend",
                        "4582c6a17ca0d682e099593964ad0f52ef9dbd38"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 H16).",
                        "VernacExtend",
                        "9b87742b55aa6762f8959571717ed753dcaf64af"
                    ]
                },
                {
                    "command": [
                        "apply BDDbounded_lemma.",
                        "VernacExtend",
                        "3c870649dc3c5e44a0fffe297aa2687fc5c7ef38"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply (proj2 H4).",
                        "VernacExtend",
                        "0aaacc2b7f33cb5b25bd47ddeea55c4164aa728d"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in |- *; simpl in H7; rewrite H7; reflexivity.",
                        "VernacExtend",
                        "988f80497377ddb8881bcbfc8e4bca5a5ac0d967"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "high_bounded",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "intros cfg node H H0.",
                        "VernacExtend",
                        "6915d884c6cb81130501cdde0beadbda4013e056"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (proj2 (internal_node_lemma cfg node H H0))).",
                        "VernacExtend",
                        "0cc7be38cf1fd8f84fcac74571ee7d25a5a8eb65"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "low_bounded",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "intros cfg node H H0.",
                        "VernacExtend",
                        "6915d884c6cb81130501cdde0beadbda4013e056"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (internal_node_lemma cfg node H H0))).",
                        "VernacExtend",
                        "cf7f820794f55cde0801e2a1c4696a3746b25b84"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "high_OK",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros node H H0.",
                        "VernacExtend",
                        "8d8c54b0bc0d07c3f27d23d06e4c765a91435774"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "inversion H2.",
                        "VernacExtend",
                        "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
                    ]
                },
                {
                    "command": [
                        "unfold high in |- *.",
                        "VernacExtend",
                        "af6be3a481b55356ef54ee85b5fb2cba596f398f"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "cut (BDDbounded (fst (bs, (share, counter))) (high (bs, (share, counter)) node) (var (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "f9f069c4093507d05b657e63d52719b669a4f107"
                    ]
                },
                {
                    "command": [
                        "unfold var, high in |- *.",
                        "VernacExtend",
                        "85c8068a4d01a91ae85f7af62100be5915a2ddf7"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "unfold config_node_OK in |- *.",
                        "VernacExtend",
                        "5edbe1a9b1457638fa819af9125dd811697d609e"
                    ]
                },
                {
                    "command": [
                        "apply BDDbounded_node_OK with (n := x).",
                        "VernacExtend",
                        "60001235dea6263170f4fd3418ac039c8862414a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_bounded.",
                        "VernacExtend",
                        "ff362efe69676962e245e5ff07be9a8cb361badf"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "low_OK",
            "line_nb": 307,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros node H H0.",
                        "VernacExtend",
                        "8d8c54b0bc0d07c3f27d23d06e4c765a91435774"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "inversion H2.",
                        "VernacExtend",
                        "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
                    ]
                },
                {
                    "command": [
                        "unfold low in |- *.",
                        "VernacExtend",
                        "344cb2081628177ec374c362b17ddb5395ae8549"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "cut (BDDbounded (fst (bs, (share, counter))) (low (bs, (share, counter)) node) (var (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "42f910f7cddb254db618457370b676b26f300ae5"
                    ]
                },
                {
                    "command": [
                        "unfold var, low in |- *.",
                        "VernacExtend",
                        "a773b97e90ea3ef3e28a86f604b6ab8ce6c64d12"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "unfold config_node_OK in |- *.",
                        "VernacExtend",
                        "5edbe1a9b1457638fa819af9125dd811697d609e"
                    ]
                },
                {
                    "command": [
                        "apply BDDbounded_node_OK with (n := x).",
                        "VernacExtend",
                        "60001235dea6263170f4fd3418ac039c8862414a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_bounded.",
                        "VernacExtend",
                        "dac579d6870a3ae558811d081bd7030f5ca862d4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "low_high_neq",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "intros cfg node H H0.",
                        "VernacExtend",
                        "6915d884c6cb81130501cdde0beadbda4013e056"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (internal_node_lemma cfg node H H0)).",
                        "VernacExtend",
                        "cee21884bf4f477f0b688d30bed6dfc12e7c0f4d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDvar_independent_1",
            "line_nb": 332,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intro n.",
                        "VernacExtend",
                        "7b184e6f13215b0f6a04b4277e277a724a645d52"
                    ]
                },
                {
                    "command": [
                        "apply lt_wf_ind with (P := fun n : nat => forall (node : ad) (x : BDDvar), BDDconfig_OK (bs, (share, counter)) -> is_internal_node (bs, (share, counter)) node -> n = nat_of_N (var (bs, (share, counter)) node) -> BDDcompare (var (bs, (share, counter)) node) x = Datatypes.Lt -> bool_fun_independent (bool_fun_of_BDD (bs, (share, counter)) node) x).",
                        "VernacExtend",
                        "0e39ccdc46f663d179b4f86488e9fee00701f3bb"
                    ]
                },
                {
                    "command": [
                        "intros n0 H node x H0 H1 H2 H3.",
                        "VernacExtend",
                        "a928a7e9017dfe889201f9aa99579a44f640603b"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_independent (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)) x).",
                        "VernacExtend",
                        "c9434d0cbb2f3105f1ba3767cca0d4c6755e7223"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_independent (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) x).",
                        "VernacExtend",
                        "41d853cabb44d31e85be7b2322f0e288e29850fe"
                    ]
                },
                {
                    "command": [
                        "intros H4 H5.",
                        "VernacExtend",
                        "46089e7a15bf8449e308e9b67ccaeb21f87323c9"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj2 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0)) node H1).",
                        "VernacExtend",
                        "17617156dde6264be01e8b117d04c90deaa59f2b"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_independent in |- *.",
                        "VernacExtend",
                        "a9c1518f7123ea1f62c19e6eac44b0ba3fdabf3f"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in |- *.",
                        "VernacExtend",
                        "e1bd32083c9d545eed865fc3000888293547add0"
                    ]
                },
                {
                    "command": [
                        "intro vb.",
                        "VernacExtend",
                        "e8b7ec7490ece50e805b33900ace150891cc88ee"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_independent in H4, H5.",
                        "VernacExtend",
                        "ab5a1b3ef571073037960a8f40adec4dbd0aa34b"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in H4, H5.",
                        "VernacExtend",
                        "6822c93e4ee90602f0b1d87fc56c308abf867054"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "inversion H6.",
                        "VernacExtend",
                        "91475f7cc5dc394b5f8e34c38f1f3fae3256b731"
                    ]
                },
                {
                    "command": [
                        "inversion H7.",
                        "VernacExtend",
                        "42a5ca7b50f733735ed76a249aba00e788a69623"
                    ]
                },
                {
                    "command": [
                        "unfold var, high, low in |- *.",
                        "VernacExtend",
                        "533dccb89fed778ebbf74258d9372e72a231e90f"
                    ]
                },
                {
                    "command": [
                        "rewrite H8.",
                        "VernacExtend",
                        "ef335154f8a1120928ddce71bc7a2456078d36bc"
                    ]
                },
                {
                    "command": [
                        "unfold augment at 1 4 in |- *.",
                        "VernacExtend",
                        "5b9376c07c64aa236f933f84f862b7d17732f4a5"
                    ]
                },
                {
                    "command": [
                        "cut (BDDvar_eq x x0 = false).",
                        "VernacExtend",
                        "1afce096dd78a592e6c2787abb0b62f3434e4387"
                    ]
                },
                {
                    "command": [
                        "intro H9.",
                        "VernacExtend",
                        "3a5cee2c4602853379bc498c20515b4b8bb64031"
                    ]
                },
                {
                    "command": [
                        "rewrite H9.",
                        "VernacExtend",
                        "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
                    ]
                },
                {
                    "command": [
                        "unfold var, high, low in H5, H4.",
                        "VernacExtend",
                        "c40c73cb7f56cf144bb95346a24dae3e6c8c4efa"
                    ]
                },
                {
                    "command": [
                        "rewrite H8 in H4.",
                        "VernacExtend",
                        "81d77aa72a8a5f09afd6f31bcd5ef237bf150c2a"
                    ]
                },
                {
                    "command": [
                        "rewrite H8 in H5.",
                        "VernacExtend",
                        "d1f0a58fe6fce7615e114e391cab67ca89c6e81d"
                    ]
                },
                {
                    "command": [
                        "rewrite (H4 vb).",
                        "VernacExtend",
                        "5b1e99f7a76bf2514f390447aa8bcffab40ddd9f"
                    ]
                },
                {
                    "command": [
                        "rewrite (H5 vb).",
                        "VernacExtend",
                        "972de0249707f7925458f5259351d348c97b7139"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold BDDvar_eq in |- *.",
                        "VernacExtend",
                        "778a0eac62de44c97ec42185c9140b79d1f3d966"
                    ]
                },
                {
                    "command": [
                        "cut (Neqb x x0 <> true).",
                        "VernacExtend",
                        "6593d7af182d704c932bc22645f7bdce95a82441"
                    ]
                },
                {
                    "command": [
                        "elim (Neqb x x0).",
                        "VernacExtend",
                        "fabd03b35ee35a34b0fc7ed7b14cd9b9f9ff2b33"
                    ]
                },
                {
                    "command": [
                        "intro H9.",
                        "VernacExtend",
                        "3a5cee2c4602853379bc498c20515b4b8bb64031"
                    ]
                },
                {
                    "command": [
                        "absurd (true = true).",
                        "VernacExtend",
                        "f7e3fd18e2df0389fa139b111aee1ee7bd370b6a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intro H9.",
                        "VernacExtend",
                        "3a5cee2c4602853379bc498c20515b4b8bb64031"
                    ]
                },
                {
                    "command": [
                        "unfold var in H3.",
                        "VernacExtend",
                        "3d4cba6f8aefbdf470f0af2fc2d627b0e0e01d35"
                    ]
                },
                {
                    "command": [
                        "rewrite H8 in H3.",
                        "VernacExtend",
                        "92121e6027d4f2d3073b05c17d7381d9c9743e71"
                    ]
                },
                {
                    "command": [
                        "cut (nat_of_N x0 < nat_of_N x).",
                        "VernacExtend",
                        "47467ceae5957ba26d9d5e59ada7e2800d5d9779"
                    ]
                },
                {
                    "command": [
                        "cut (x = x0).",
                        "VernacExtend",
                        "67701fcbf85331b2210971fc334679f5dbb2ddb1"
                    ]
                },
                {
                    "command": [
                        "intro H10.",
                        "VernacExtend",
                        "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
                    ]
                },
                {
                    "command": [
                        "rewrite H10.",
                        "VernacExtend",
                        "cd2638bc5a7f85648c5e2c9d77046abc07e2da6a"
                    ]
                },
                {
                    "command": [
                        "exact (lt_irrefl (nat_of_N x0)).",
                        "VernacExtend",
                        "9549e97c15d5246308f1fb8647e19127811d06b7"
                    ]
                },
                {
                    "command": [
                        "apply Neqb_complete.",
                        "VernacExtend",
                        "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (node_OK bs (high (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "7699d0d9986851dc6ff260c18fcb324a9ef87fe6"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "elim H4.",
                        "VernacExtend",
                        "fcfe1d1075db57bfda358e292efa503f39fdf8e2"
                    ]
                },
                {
                    "command": [
                        "intro H5.",
                        "VernacExtend",
                        "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_independent_zero.",
                        "VernacExtend",
                        "9a377873f1b1d341e646a18508cb937f4ed28b57"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro H5.",
                        "VernacExtend",
                        "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
                    ]
                },
                {
                    "command": [
                        "elim H5; intro H6.",
                        "VernacExtend",
                        "d7221a3f3787063eaa2b75c748f35904fa3b4885"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_independent_one.",
                        "VernacExtend",
                        "7de4b8b13839ac0016f662c16bcfa3b65e229bc9"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H with (m := nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "d154ebea6413294bd72a627204e29fd1ce6ffe05"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high.",
                        "VernacExtend",
                        "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold is_internal_node in |- *.",
                        "VernacExtend",
                        "bb72e5c5b6dd4d1ba90a81e8f3c00cec26c747e5"
                    ]
                },
                {
                    "command": [
                        "elim (option_sum _ (MapGet (BDDvar * (ad * ad)) (fst (bs, (share, counter))) (high (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "54f6a793015602b176588e6a2536039f54434764"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "elim y.",
                        "VernacExtend",
                        "2e1340b20b979eff9f29f6f7a068bc217b31672c"
                    ]
                },
                {
                    "command": [
                        "intro x0.",
                        "VernacExtend",
                        "e74c874e61a3691df9987468fe1f6ab72f4039f2"
                    ]
                },
                {
                    "command": [
                        "elim x0.",
                        "VernacExtend",
                        "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
                    ]
                },
                {
                    "command": [
                        "intro y0.",
                        "VernacExtend",
                        "d1834bf95553ce1485d1c19693bbdd1e392d677e"
                    ]
                },
                {
                    "command": [
                        "intro y1.",
                        "VernacExtend",
                        "4d0ec3273193a8100c12a11465f6beb7953e5c77"
                    ]
                },
                {
                    "command": [
                        "elim y1.",
                        "VernacExtend",
                        "7deb42a0d69f05166c553edfbfcc7a66614866f4"
                    ]
                },
                {
                    "command": [
                        "intro y2.",
                        "VernacExtend",
                        "3898c5088224886d1f593f040ef01a41b72ccc02"
                    ]
                },
                {
                    "command": [
                        "intro y3.",
                        "VernacExtend",
                        "0d3d2cd4a29eff63110bfe427038dcee633962e5"
                    ]
                },
                {
                    "command": [
                        "split with y0.",
                        "VernacExtend",
                        "d3c52e55802fb43db466fd9162315e497a478832"
                    ]
                },
                {
                    "command": [
                        "split with y2.",
                        "VernacExtend",
                        "5e9b70a4ddc0ca617c1b771ec00accaaa526b228"
                    ]
                },
                {
                    "command": [
                        "split with y3.",
                        "VernacExtend",
                        "888702823f47785900de6c86b4ecb0609cb5a1c9"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in H6.",
                        "VernacExtend",
                        "60b2126906d8653037c7a0e424afea7c8202ab2a"
                    ]
                },
                {
                    "command": [
                        "simpl in y.",
                        "VernacExtend",
                        "8b4bef855eef9bd24190f48a91d19fe39b9a9e63"
                    ]
                },
                {
                    "command": [
                        "rewrite y in H6.",
                        "VernacExtend",
                        "9351c08cd0fc8d04007b46c5b3979d018643ba8b"
                    ]
                },
                {
                    "command": [
                        "discriminate H6.",
                        "VernacExtend",
                        "7415b937012eb118b755d10a8be2a67e478ec2c8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_trans with (y := var (bs, (share, counter)) node).",
                        "VernacExtend",
                        "ec7a4d40be119fdf6d4626e2f9b30aadcf7a7c08"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high.",
                        "VernacExtend",
                        "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exact (high_OK (bs, (share, counter)) node H0 H1).",
                        "VernacExtend",
                        "eab905f4316a15a97c3c3bf4fc8f3f26b45a67f8"
                    ]
                },
                {
                    "command": [
                        "cut (node_OK bs (low (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "a4c6b635f85ce22ab2697146adc950d27cad4145"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "elim H4.",
                        "VernacExtend",
                        "fcfe1d1075db57bfda358e292efa503f39fdf8e2"
                    ]
                },
                {
                    "command": [
                        "intro H5.",
                        "VernacExtend",
                        "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_independent_zero.",
                        "VernacExtend",
                        "9a377873f1b1d341e646a18508cb937f4ed28b57"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro H5.",
                        "VernacExtend",
                        "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
                    ]
                },
                {
                    "command": [
                        "elim H5; intro H6.",
                        "VernacExtend",
                        "d7221a3f3787063eaa2b75c748f35904fa3b4885"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_independent_one.",
                        "VernacExtend",
                        "7de4b8b13839ac0016f662c16bcfa3b65e229bc9"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H with (m := nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "3b54771b8fbc271104928c326d8ae314891789cc"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low.",
                        "VernacExtend",
                        "ba66c15448aced83d225d0e66a0f593162c936e4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_trans with (y := var (bs, (share, counter)) node).",
                        "VernacExtend",
                        "ec7a4d40be119fdf6d4626e2f9b30aadcf7a7c08"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low.",
                        "VernacExtend",
                        "ba66c15448aced83d225d0e66a0f593162c936e4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exact (low_OK (bs, (share, counter)) node H0 H1).",
                        "VernacExtend",
                        "95400dc029d070d1590d6bcda8e750c8ecb500ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDvar_independent_high",
            "line_nb": 467,
            "steps": [
                {
                    "command": [
                        "intros cfg node H H0.",
                        "VernacExtend",
                        "6915d884c6cb81130501cdde0beadbda4013e056"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK cfg (high cfg node)).",
                        "VernacExtend",
                        "90438356955ae9c107262fe44f209b7f065e21d2"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "elim H1.",
                        "VernacExtend",
                        "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
                    ]
                },
                {
                    "command": [
                        "intro H2.",
                        "VernacExtend",
                        "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_independent_zero.",
                        "VernacExtend",
                        "9a377873f1b1d341e646a18508cb937f4ed28b57"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro H2.",
                        "VernacExtend",
                        "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
                    ]
                },
                {
                    "command": [
                        "elim H2; intro.",
                        "VernacExtend",
                        "939c927788b9492b13127156d1f300437fdf7754"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; apply bool_fun_independent_one; assumption.",
                        "VernacExtend",
                        "d6865e78b2839fd237df104d47cbf5b2e87283ac"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node cfg (high cfg node)).",
                        "VernacExtend",
                        "c94e9a9f879281d544b03f7e20455ffded458ebf"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_independent_1 with (n := nat_of_N (var cfg (high cfg node))).",
                        "VernacExtend",
                        "216dc93465208ad889fe0be54c8d4c337a30e3c4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high.",
                        "VernacExtend",
                        "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDvar_independent_low",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "intros cfg node H H0.",
                        "VernacExtend",
                        "6915d884c6cb81130501cdde0beadbda4013e056"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK cfg (low cfg node)).",
                        "VernacExtend",
                        "f8099f38ad9a7a0e17a93ba8d6998f40f49b1ff9"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "elim H1.",
                        "VernacExtend",
                        "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
                    ]
                },
                {
                    "command": [
                        "intro H2.",
                        "VernacExtend",
                        "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_independent_zero.",
                        "VernacExtend",
                        "9a377873f1b1d341e646a18508cb937f4ed28b57"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro H2.",
                        "VernacExtend",
                        "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
                    ]
                },
                {
                    "command": [
                        "elim H2; intro.",
                        "VernacExtend",
                        "939c927788b9492b13127156d1f300437fdf7754"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; apply bool_fun_independent_one; assumption.",
                        "VernacExtend",
                        "d6865e78b2839fd237df104d47cbf5b2e87283ac"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node cfg (low cfg node)).",
                        "VernacExtend",
                        "3bbfd083f0306a5b6511b77b38b14776096baba6"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_independent_1 with (n := nat_of_N (var cfg (low cfg node))).",
                        "VernacExtend",
                        "482c0eada3ec538beb002f9fe5fdb55a619d0a47"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low.",
                        "VernacExtend",
                        "ba66c15448aced83d225d0e66a0f593162c936e4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_of_BDDzero",
            "line_nb": 525,
            "steps": [
                {
                    "command": [
                        "intros cfg H.",
                        "VernacExtend",
                        "ce3919e4a24071a40503b43aa3d70397760f15a0"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *.",
                        "VernacExtend",
                        "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in |- *.",
                        "VernacExtend",
                        "e1bd32083c9d545eed865fc3000888293547add0"
                    ]
                },
                {
                    "command": [
                        "intro vb.",
                        "VernacExtend",
                        "e8b7ec7490ece50e805b33900ace150891cc88ee"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics cfg H)).",
                        "VernacExtend",
                        "c832aa1105b6d72c1c7d1da16723d7bf82ffcd82"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_of_BDDone",
            "line_nb": 533,
            "steps": [
                {
                    "command": [
                        "intros cfg H.",
                        "VernacExtend",
                        "ce3919e4a24071a40503b43aa3d70397760f15a0"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *.",
                        "VernacExtend",
                        "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in |- *.",
                        "VernacExtend",
                        "e1bd32083c9d545eed865fc3000888293547add0"
                    ]
                },
                {
                    "command": [
                        "intro vb.",
                        "VernacExtend",
                        "e8b7ec7490ece50e805b33900ace150891cc88ee"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics cfg H))).",
                        "VernacExtend",
                        "6a046cc2a966da273026f537e5b43d010721f74a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_of_BDDhigh",
            "line_nb": 541,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros node H H0.",
                        "VernacExtend",
                        "8d8c54b0bc0d07c3f27d23d06e4c765a91435774"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj2 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)) node H0).",
                        "VernacExtend",
                        "10405fd24088fdcfdb878ea083953b8a18cb77b4"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_restrict in |- *.",
                        "VernacExtend",
                        "8f5a662d1228cd59b9d9d647a9421f5c9c13ed3a"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in |- *.",
                        "VernacExtend",
                        "e1bd32083c9d545eed865fc3000888293547add0"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *.",
                        "VernacExtend",
                        "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in |- *.",
                        "VernacExtend",
                        "e1bd32083c9d545eed865fc3000888293547add0"
                    ]
                },
                {
                    "command": [
                        "unfold augment at 1 in |- *.",
                        "VernacExtend",
                        "1d433c78b96755eca7e111353b73a069bdea35fd"
                    ]
                },
                {
                    "command": [
                        "unfold BDDvar_eq in |- *.",
                        "VernacExtend",
                        "778a0eac62de44c97ec42185c9140b79d1f3d966"
                    ]
                },
                {
                    "command": [
                        "cut (Neqb (var (bs, (share, counter)) node) (var (bs, (share, counter)) node) = true).",
                        "VernacExtend",
                        "6322fd4e0d44d5083658fd5ae5650d0c42326e3b"
                    ]
                },
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "intro vb.",
                        "VernacExtend",
                        "e8b7ec7490ece50e805b33900ace150891cc88ee"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node) (augment vb (var (bs, (share, counter)) node) true) = bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node) vb).",
                        "VernacExtend",
                        "41677fa3c1479d874804878b59191a5a13a207f5"
                    ]
                },
                {
                    "command": [
                        "intro H2.",
                        "VernacExtend",
                        "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "change (bool_fun_eval (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) (augment vb (var (bs, (share, counter)) node) true) = bool_fun_eval (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) vb) in |- *.",
                        "VernacExtend",
                        "4ee7c5c965e24f738ffea9883cb0efb2a224fc63"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_independent_lemma.",
                        "VernacExtend",
                        "96d5f1d92b89ae60d2d7b44a295c24f9c6ae60fc"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDD_ext.",
                        "VernacExtend",
                        "b4ca4bcdc77510aa1141d8e839805305e49722a4"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_independent_high.",
                        "VernacExtend",
                        "64235056f2921db57fc578b5f42b721d055c2379"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Neqb_correct.",
                        "VernacExtend",
                        "44ce40dca1a752c4f29effe8c09acf1cbe16e2b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_of_BDDlow",
            "line_nb": 569,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros node H H0.",
                        "VernacExtend",
                        "8d8c54b0bc0d07c3f27d23d06e4c765a91435774"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj2 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)) node H0).",
                        "VernacExtend",
                        "10405fd24088fdcfdb878ea083953b8a18cb77b4"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_restrict in |- *.",
                        "VernacExtend",
                        "8f5a662d1228cd59b9d9d647a9421f5c9c13ed3a"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in |- *.",
                        "VernacExtend",
                        "e1bd32083c9d545eed865fc3000888293547add0"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *.",
                        "VernacExtend",
                        "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in |- *.",
                        "VernacExtend",
                        "e1bd32083c9d545eed865fc3000888293547add0"
                    ]
                },
                {
                    "command": [
                        "unfold augment at 1 in |- *.",
                        "VernacExtend",
                        "1d433c78b96755eca7e111353b73a069bdea35fd"
                    ]
                },
                {
                    "command": [
                        "unfold BDDvar_eq in |- *.",
                        "VernacExtend",
                        "778a0eac62de44c97ec42185c9140b79d1f3d966"
                    ]
                },
                {
                    "command": [
                        "cut (Neqb (var (bs, (share, counter)) node) (var (bs, (share, counter)) node) = true).",
                        "VernacExtend",
                        "6322fd4e0d44d5083658fd5ae5650d0c42326e3b"
                    ]
                },
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "intro vb.",
                        "VernacExtend",
                        "e8b7ec7490ece50e805b33900ace150891cc88ee"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node) (augment vb (var (bs, (share, counter)) node) false) = bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node) vb).",
                        "VernacExtend",
                        "23455e9887d295d4b6bdaf4dd6eb5cc851270a58"
                    ]
                },
                {
                    "command": [
                        "intro H2.",
                        "VernacExtend",
                        "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "change (bool_fun_eval (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)) (augment vb (var (bs, (share, counter)) node) false) = bool_fun_eval (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)) vb) in |- *.",
                        "VernacExtend",
                        "03c6d5d91d933894d590a493a82ca7b79b9ffc4f"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_independent_lemma.",
                        "VernacExtend",
                        "96d5f1d92b89ae60d2d7b44a295c24f9c6ae60fc"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDD_ext.",
                        "VernacExtend",
                        "b4ca4bcdc77510aa1141d8e839805305e49722a4"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_independent_low.",
                        "VernacExtend",
                        "d022a4e0b41b685c46c1e9225d17f38432cbcd82"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Neqb_correct.",
                        "VernacExtend",
                        "44ce40dca1a752c4f29effe8c09acf1cbe16e2b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "internal_node_not_constant_1",
            "line_nb": 597,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "intro n.",
                        "VernacExtend",
                        "7b184e6f13215b0f6a04b4277e277a724a645d52"
                    ]
                },
                {
                    "command": [
                        "apply lt_wf_ind with (P := fun n : nat => forall node : ad, is_internal_node (bs, (share, counter)) node -> n = nat_of_N (var (bs, (share, counter)) node) -> ~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node) bool_fun_zero /\\ ~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node) bool_fun_one).",
                        "VernacExtend",
                        "cd338197ada6ebe377cba3336221b6af1a2db064"
                    ]
                },
                {
                    "command": [
                        "intros n0 H0 node H1 H2.",
                        "VernacExtend",
                        "cd07bc2b66791d48f2d117718ef9ab39a2c003c6"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "inversion H3.",
                        "VernacExtend",
                        "129aa425681b58d2ed0d3637122128b1b28fd63b"
                    ]
                },
                {
                    "command": [
                        "inversion H4.",
                        "VernacExtend",
                        "184e412874313f14014d688ef3b69568302d00ff"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "b814f80db45bffc5d1eb82f58679c238c6f54d48"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "372e75dc28bba5c8c7cfe221d9ab83fa6e9a8a94"
                    ]
                },
                {
                    "command": [
                        "intros H6 H7.",
                        "VernacExtend",
                        "e2e2ada7386798291fb8162c6cb3c2ab2b722a88"
                    ]
                },
                {
                    "command": [
                        "elim H6.",
                        "VernacExtend",
                        "37df90b4b62522e9f9376bbd0ca7d8f3c914a4a2"
                    ]
                },
                {
                    "command": [
                        "intro H8.",
                        "VernacExtend",
                        "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
                    ]
                },
                {
                    "command": [
                        "elim H7.",
                        "VernacExtend",
                        "d11e601778a3e545ccfe02aa465a49d69e77f350"
                    ]
                },
                {
                    "command": [
                        "intro H9.",
                        "VernacExtend",
                        "3a5cee2c4602853379bc498c20515b4b8bb64031"
                    ]
                },
                {
                    "command": [
                        "cut (Neqb (low (bs, (share, counter)) node) (high (bs, (share, counter)) node) = true).",
                        "VernacExtend",
                        "f78a1010aa0c59a16ce853877a323eedbbe0cde1"
                    ]
                },
                {
                    "command": [
                        "rewrite (low_high_neq (bs, (share, counter)) node H H1).",
                        "VernacExtend",
                        "8200f4db32af643916a5f0b2e7e1aa0c0674427f"
                    ]
                },
                {
                    "command": [
                        "intro H10.",
                        "VernacExtend",
                        "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
                    ]
                },
                {
                    "command": [
                        "discriminate H10.",
                        "VernacExtend",
                        "228e79a0dcb8e779bfb8b45f980dc0f6fe321d89"
                    ]
                },
                {
                    "command": [
                        "rewrite H8.",
                        "VernacExtend",
                        "ef335154f8a1120928ddce71bc7a2456078d36bc"
                    ]
                },
                {
                    "command": [
                        "rewrite H9.",
                        "VernacExtend",
                        "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
                    ]
                },
                {
                    "command": [
                        "apply Neqb_correct.",
                        "VernacExtend",
                        "44ce40dca1a752c4f29effe8c09acf1cbe16e2b0"
                    ]
                },
                {
                    "command": [
                        "intro H9.",
                        "VernacExtend",
                        "3a5cee2c4602853379bc498c20515b4b8bb64031"
                    ]
                },
                {
                    "command": [
                        "elim H9; clear H9; intro.",
                        "VernacExtend",
                        "2618dfbd4dc69087075ba00fb0091dd309ae01c5"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node) = bool_fun_one).",
                        "VernacExtend",
                        "e69f2c5ea85fdf732f86279abc0e756e6d42217b"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node) = bool_fun_zero).",
                        "VernacExtend",
                        "4161a4492e11240723ef94b07db976c1d6d4ebc1"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true)).",
                        "VernacExtend",
                        "b43ba004b5405d8d98bddaf70ad2bae3d0b30f9c"
                    ]
                },
                {
                    "command": [
                        "intros H10 H11 H12.",
                        "VernacExtend",
                        "3cc92cbeb753b1a94476b8cbdeb47754f8af0298"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)) (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false)).",
                        "VernacExtend",
                        "d1c25776f111d0e9cae598caa35df0c8f7e4e6b4"
                    ]
                },
                {
                    "command": [
                        "intros H13.",
                        "VernacExtend",
                        "961853039ce94dda169b244d95771a66979b4911"
                    ]
                },
                {
                    "command": [
                        "rewrite H12 in H10.",
                        "VernacExtend",
                        "32011b0bcd65037713d6bb3a5c7ec7b15cc3b4be"
                    ]
                },
                {
                    "command": [
                        "rewrite H11 in H13.",
                        "VernacExtend",
                        "ad19a1aa3ee7bff3c6138fcca12e5278e7881488"
                    ]
                },
                {
                    "command": [
                        "split; unfold not in |- *; intro.",
                        "VernacExtend",
                        "7d277322ca38dab7968e203ade51288dfebdf0fa"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true) (bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) true)).",
                        "VernacExtend",
                        "40da75104b04a24546c9ae33ad18355203154161"
                    ]
                },
                {
                    "command": [
                        "intro H15.",
                        "VernacExtend",
                        "a496e7944923dd251836a55eac0efac7fac32b63"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq bool_fun_one (bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) true)).",
                        "VernacExtend",
                        "d3b63ba46b3882f720e1a347c2d8cb0bf89b391f"
                    ]
                },
                {
                    "command": [
                        "intro H16.",
                        "VernacExtend",
                        "c16d9f76387f574dd166fbfa7eb1ba04610dff17"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq bool_fun_one bool_fun_zero).",
                        "VernacExtend",
                        "ca29df00f46b17cf10d2f42e25ea3005f804e1dc"
                    ]
                },
                {
                    "command": [
                        "intro H17.",
                        "VernacExtend",
                        "f61e811a0b2585f5af44b7f35f6a2ee6b4f75091"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq bool_fun_one bool_fun_zero).",
                        "VernacExtend",
                        "22925f182d7855d2ece234c4f734fbd65f35356f"
                    ]
                },
                {
                    "command": [
                        "exact bool_fun_one_zero_eq.",
                        "VernacExtend",
                        "809326944663650fc4b03900e818cbe023c0f6a1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) true).",
                        "VernacExtend",
                        "ebddd8ac867fd4bcdc8d69d4318a89d42e3c78ac"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_zero.",
                        "VernacExtend",
                        "627017d7b907a1dfbffdc090c2b1141f9db08208"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true).",
                        "VernacExtend",
                        "97fba0e5b46a42431f0dcdcd0f013ff1d25d8124"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false) (bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) false)).",
                        "VernacExtend",
                        "028bb5abdd5602aa527c2b71640ebf903c37b213"
                    ]
                },
                {
                    "command": [
                        "intro H15.",
                        "VernacExtend",
                        "a496e7944923dd251836a55eac0efac7fac32b63"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq bool_fun_zero (bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) false)).",
                        "VernacExtend",
                        "a14b60644b21560dc2f6fd6e4dfbbdcaebb9405f"
                    ]
                },
                {
                    "command": [
                        "intro H16.",
                        "VernacExtend",
                        "c16d9f76387f574dd166fbfa7eb1ba04610dff17"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq bool_fun_zero bool_fun_one).",
                        "VernacExtend",
                        "cf53715ce00b1af5bfd965b92ea73ef06486546e"
                    ]
                },
                {
                    "command": [
                        "intro H17.",
                        "VernacExtend",
                        "f61e811a0b2585f5af44b7f35f6a2ee6b4f75091"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq bool_fun_zero bool_fun_one).",
                        "VernacExtend",
                        "768ea100fa4ddda3b44bd148ed97540b50cf235f"
                    ]
                },
                {
                    "command": [
                        "exact bool_fun_zero_one_eq.",
                        "VernacExtend",
                        "32355414da3ed6423089cb30b21c9b0fa62cdced"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) false).",
                        "VernacExtend",
                        "891c1b9efd5356c507e9efba64fb1acf603d7c86"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_one.",
                        "VernacExtend",
                        "23747cff9727bba66a0eff66ad0a9616034ed4b3"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false).",
                        "VernacExtend",
                        "e087509fdf8349c1f93134ac4ada38e2cd338f61"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDlow.",
                        "VernacExtend",
                        "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite H8.",
                        "VernacExtend",
                        "ef335154f8a1120928ddce71bc7a2456078d36bc"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
                        "VernacExtend",
                        "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite H9.",
                        "VernacExtend",
                        "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) .",
                        "VernacExtend",
                        "3f6607f94cebcd36beb279442c0b7fce4d5720f5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "cut (~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) bool_fun_zero /\\ ~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) bool_fun_one).",
                        "VernacExtend",
                        "6fd8ebcdd24748470635e3479fac20f2133db650"
                    ]
                },
                {
                    "command": [
                        "intro H10.",
                        "VernacExtend",
                        "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
                    ]
                },
                {
                    "command": [
                        "split; unfold not in |- *; intro.",
                        "VernacExtend",
                        "7d277322ca38dab7968e203ade51288dfebdf0fa"
                    ]
                },
                {
                    "command": [
                        "apply (proj1 H10).",
                        "VernacExtend",
                        "627593781422aa5c64a4c0ce7b2eda4277715cf2"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true).",
                        "VernacExtend",
                        "97fba0e5b46a42431f0dcdcd0f013ff1d25d8124"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) true).",
                        "VernacExtend",
                        "ebddd8ac867fd4bcdc8d69d4318a89d42e3c78ac"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_zero.",
                        "VernacExtend",
                        "627017d7b907a1dfbffdc090c2b1141f9db08208"
                    ]
                },
                {
                    "command": [
                        "apply (proj2 H10).",
                        "VernacExtend",
                        "2af96001715b571521097b7bf6cd9fd501b59a00"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true).",
                        "VernacExtend",
                        "97fba0e5b46a42431f0dcdcd0f013ff1d25d8124"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) true).",
                        "VernacExtend",
                        "5357903d2fab9c14f37f4cf9218e341256837700"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_one.",
                        "VernacExtend",
                        "23747cff9727bba66a0eff66ad0a9616034ed4b3"
                    ]
                },
                {
                    "command": [
                        "apply H0 with (m := nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "1ef336aeddd36b1ceb580615af5604d511c6bedb"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high.",
                        "VernacExtend",
                        "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro H8.",
                        "VernacExtend",
                        "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
                    ]
                },
                {
                    "command": [
                        "elim H8; intro.",
                        "VernacExtend",
                        "06790f5549123bdba8b20144c04fa5771b456c13"
                    ]
                },
                {
                    "command": [
                        "elim H7; intro.",
                        "VernacExtend",
                        "070405caa108b888f9b7cdae90f17b6f92d6f351"
                    ]
                },
                {
                    "command": [
                        "split; unfold not in |- *; intro.",
                        "VernacExtend",
                        "7d277322ca38dab7968e203ade51288dfebdf0fa"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_zero_one_eq.",
                        "VernacExtend",
                        "6c4c02ec119344314fcc5ca407d8b00c14b77253"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false).",
                        "VernacExtend",
                        "e3287300acf9610169e96e9b400bd1a03d57cc6a"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) false).",
                        "VernacExtend",
                        "7bcab4292dc81b6b8aad3fb6e3ece772bab37b7e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_zero.",
                        "VernacExtend",
                        "627017d7b907a1dfbffdc090c2b1141f9db08208"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "592b7570edfa996bb1a70260fa8fc71cdb654094"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDlow.",
                        "VernacExtend",
                        "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite H9.",
                        "VernacExtend",
                        "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) .",
                        "VernacExtend",
                        "3f6607f94cebcd36beb279442c0b7fce4d5720f5"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq, bool_fun_one in |- *.",
                        "VernacExtend",
                        "b7b91eb304665263b8bcdb8296234a253ef6b00a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_zero_one_eq.",
                        "VernacExtend",
                        "6c4c02ec119344314fcc5ca407d8b00c14b77253"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "d2645c35b42b29634291ab6cdb432ba80c8d5c3b"
                    ]
                },
                {
                    "command": [
                        "rewrite H10.",
                        "VernacExtend",
                        "cd2638bc5a7f85648c5e2c9d77046abc07e2da6a"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
                        "VernacExtend",
                        "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *; reflexivity.",
                        "VernacExtend",
                        "92c45c90f429704a67958e204600034d59b26df0"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true).",
                        "VernacExtend",
                        "97fba0e5b46a42431f0dcdcd0f013ff1d25d8124"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) true).",
                        "VernacExtend",
                        "5357903d2fab9c14f37f4cf9218e341256837700"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_one.",
                        "VernacExtend",
                        "23747cff9727bba66a0eff66ad0a9616034ed4b3"
                    ]
                },
                {
                    "command": [
                        "elim H10; intro.",
                        "VernacExtend",
                        "ab023baaf96f9d45672d63bd85c3e1e9b0c70460"
                    ]
                },
                {
                    "command": [
                        "cut (Neqb (low (bs, (share, counter)) node) (high (bs, (share, counter)) node) = false).",
                        "VernacExtend",
                        "5c4ef0c6491372b82a00b50ddc2d5d900436f621"
                    ]
                },
                {
                    "command": [
                        "rewrite H9.",
                        "VernacExtend",
                        "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
                    ]
                },
                {
                    "command": [
                        "rewrite H11.",
                        "VernacExtend",
                        "5c05c623605d2f85e82d91f881b0be37a5db37eb"
                    ]
                },
                {
                    "command": [
                        "rewrite (Neqb_correct BDDone).",
                        "VernacExtend",
                        "5ecfd724a8de57f0e297ed76ce1887feaec1e9be"
                    ]
                },
                {
                    "command": [
                        "intro; discriminate.",
                        "VernacExtend",
                        "d63764752b13c9777fe3ccb54c65ae24ab510154"
                    ]
                },
                {
                    "command": [
                        "apply low_high_neq.",
                        "VernacExtend",
                        "5bbc81050d70154e424751b43b474476254f8c37"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) bool_fun_zero /\\ ~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)) bool_fun_one).",
                        "VernacExtend",
                        "6fd8ebcdd24748470635e3479fac20f2133db650"
                    ]
                },
                {
                    "command": [
                        "intro H12.",
                        "VernacExtend",
                        "afc6629c474ec2e325da340fcb3a46ec73eead51"
                    ]
                },
                {
                    "command": [
                        "split; unfold not in |- *; intro.",
                        "VernacExtend",
                        "7d277322ca38dab7968e203ade51288dfebdf0fa"
                    ]
                },
                {
                    "command": [
                        "apply (proj1 H12).",
                        "VernacExtend",
                        "944008abed29b4c4ec6238663b055bf4887afacf"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true).",
                        "VernacExtend",
                        "97fba0e5b46a42431f0dcdcd0f013ff1d25d8124"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) true).",
                        "VernacExtend",
                        "ebddd8ac867fd4bcdc8d69d4318a89d42e3c78ac"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_zero.",
                        "VernacExtend",
                        "627017d7b907a1dfbffdc090c2b1141f9db08208"
                    ]
                },
                {
                    "command": [
                        "apply (proj2 H12).",
                        "VernacExtend",
                        "81786886856443bfd052aa49e781101951bfa484"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true).",
                        "VernacExtend",
                        "97fba0e5b46a42431f0dcdcd0f013ff1d25d8124"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) true).",
                        "VernacExtend",
                        "5357903d2fab9c14f37f4cf9218e341256837700"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_one.",
                        "VernacExtend",
                        "23747cff9727bba66a0eff66ad0a9616034ed4b3"
                    ]
                },
                {
                    "command": [
                        "apply H0 with (m := nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "1ef336aeddd36b1ceb580615af5604d511c6bedb"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high.",
                        "VernacExtend",
                        "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "cut (~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)) bool_fun_zero /\\ ~ bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)) bool_fun_one).",
                        "VernacExtend",
                        "ce040518bdfd7be70d139524d76459cda65fa0ca"
                    ]
                },
                {
                    "command": [
                        "intro H10.",
                        "VernacExtend",
                        "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
                    ]
                },
                {
                    "command": [
                        "split; unfold not in |- *; intro.",
                        "VernacExtend",
                        "7d277322ca38dab7968e203ade51288dfebdf0fa"
                    ]
                },
                {
                    "command": [
                        "apply (proj1 H10).",
                        "VernacExtend",
                        "627593781422aa5c64a4c0ce7b2eda4277715cf2"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false).",
                        "VernacExtend",
                        "e3287300acf9610169e96e9b400bd1a03d57cc6a"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDlow.",
                        "VernacExtend",
                        "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_zero (var (bs, (share, counter)) node) false).",
                        "VernacExtend",
                        "7bcab4292dc81b6b8aad3fb6e3ece772bab37b7e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_zero.",
                        "VernacExtend",
                        "627017d7b907a1dfbffdc090c2b1141f9db08208"
                    ]
                },
                {
                    "command": [
                        "apply (proj2 H10).",
                        "VernacExtend",
                        "2af96001715b571521097b7bf6cd9fd501b59a00"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false).",
                        "VernacExtend",
                        "e087509fdf8349c1f93134ac4ada38e2cd338f61"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDlow.",
                        "VernacExtend",
                        "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict bool_fun_one (var (bs, (share, counter)) node) false).",
                        "VernacExtend",
                        "891c1b9efd5356c507e9efba64fb1acf603d7c86"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_one.",
                        "VernacExtend",
                        "23747cff9727bba66a0eff66ad0a9616034ed4b3"
                    ]
                },
                {
                    "command": [
                        "apply H0 with (m := nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "33f9981be015ece195e207ba3d44a0965c163105"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low.",
                        "VernacExtend",
                        "ba66c15448aced83d225d0e66a0f593162c936e4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "internal_node_not_constant",
            "line_nb": 825,
            "steps": [
                {
                    "command": [
                        "intros cfg node H H0.",
                        "VernacExtend",
                        "6915d884c6cb81130501cdde0beadbda4013e056"
                    ]
                },
                {
                    "command": [
                        "apply internal_node_not_constant_1 with (n := nat_of_N (var cfg node)).",
                        "VernacExtend",
                        "ed570222b17b0387791eca86241af5ac1feb0973"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_neq_internal_zero",
            "line_nb": 832,
            "steps": [
                {
                    "command": [
                        "intros cfg node H H0.",
                        "VernacExtend",
                        "6915d884c6cb81130501cdde0beadbda4013e056"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics cfg H)).",
                        "VernacExtend",
                        "c832aa1105b6d72c1c7d1da16723d7bf82ffcd82"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (internal_node_not_constant cfg node H H0)).",
                        "VernacExtend",
                        "14ad187b2fb0d153b921118dea5a088b138214f2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_neq_internal_one",
            "line_nb": 837,
            "steps": [
                {
                    "command": [
                        "intros cfg node H H0.",
                        "VernacExtend",
                        "6915d884c6cb81130501cdde0beadbda4013e056"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics cfg H))).",
                        "VernacExtend",
                        "6a046cc2a966da273026f537e5b43d010721f74a"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (internal_node_not_constant cfg node H H0)).",
                        "VernacExtend",
                        "9c270db5776565839299d7a4ae6cfc62a03ae77e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_neq_zero_one",
            "line_nb": 842,
            "steps": [
                {
                    "command": [
                        "intros cfg H.",
                        "VernacExtend",
                        "ce3919e4a24071a40503b43aa3d70397760f15a0"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq, bool_fun_zero, bool_fun_one in |- *.",
                        "VernacExtend",
                        "6453fd68e64ff4f2346f993b8ff401de8f1a4505"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in |- *.",
                        "VernacExtend",
                        "e1bd32083c9d545eed865fc3000888293547add0"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics cfg H)).",
                        "VernacExtend",
                        "c832aa1105b6d72c1c7d1da16723d7bf82ffcd82"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics cfg H))).",
                        "VernacExtend",
                        "6a046cc2a966da273026f537e5b43d010721f74a"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "absurd (true = false).",
                        "VernacExtend",
                        "9eee97e974560169b3d65a974b1c1fa7328f70d0"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; discriminate.",
                        "VernacExtend",
                        "bc78230aa5a664409e6098bd702946390677ebb6"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_zero, bool_fun_one in H0.",
                        "VernacExtend",
                        "1eb9a53d6443b86bc83d3d0679a2cf21f9a21068"
                    ]
                },
                {
                    "command": [
                        "rewrite (H0 (fun x : BDDvar => true)).",
                        "VernacExtend",
                        "6ccff376b3c60a817ac86ac16bb5628ffca4d218"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_neq_one_zero",
            "line_nb": 855,
            "steps": [
                {
                    "command": [
                        "intros cfg H.",
                        "VernacExtend",
                        "ce3919e4a24071a40503b43aa3d70397760f15a0"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq, bool_fun_zero, bool_fun_one in |- *.",
                        "VernacExtend",
                        "6453fd68e64ff4f2346f993b8ff401de8f1a4505"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval in |- *.",
                        "VernacExtend",
                        "e1bd32083c9d545eed865fc3000888293547add0"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics cfg H)).",
                        "VernacExtend",
                        "c832aa1105b6d72c1c7d1da16723d7bf82ffcd82"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics cfg H))).",
                        "VernacExtend",
                        "6a046cc2a966da273026f537e5b43d010721f74a"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "absurd (false = true).",
                        "VernacExtend",
                        "14bb5dca2fd0caca5d6d61486c2ddc2eac89bfcd"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; discriminate.",
                        "VernacExtend",
                        "bc78230aa5a664409e6098bd702946390677ebb6"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_zero, bool_fun_one in H0.",
                        "VernacExtend",
                        "1eb9a53d6443b86bc83d3d0679a2cf21f9a21068"
                    ]
                },
                {
                    "command": [
                        "rewrite (H0 (fun x : BDDvar => true)).",
                        "VernacExtend",
                        "6ccff376b3c60a817ac86ac16bb5628ffca4d218"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_neq_lemma",
            "line_nb": 868,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_duplicate_node",
            "line_nb": 874,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros node1 node2 H H0 H1 H2 H3 H4.",
                        "VernacExtend",
                        "6be37180c4f0ac258fb6e1662f85e5ca437778db"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "inversion H5.",
                        "VernacExtend",
                        "c72c29a0eff26255c8a4846e1794fb6f7559049a"
                    ]
                },
                {
                    "command": [
                        "inversion H6.",
                        "VernacExtend",
                        "91475f7cc5dc394b5f8e34c38f1f3fae3256b731"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "inversion H8.",
                        "VernacExtend",
                        "bd1054a31f838f58a763ae9f4c46f33682fb2e03"
                    ]
                },
                {
                    "command": [
                        "inversion H9.",
                        "VernacExtend",
                        "ba06d75575d77a771abfe438435f8748713f713e"
                    ]
                },
                {
                    "command": [
                        "unfold var in H2; rewrite H7 in H2; rewrite H10 in H2.",
                        "VernacExtend",
                        "bc44e47f3f6676a952e8512d91478f61acb751d4"
                    ]
                },
                {
                    "command": [
                        "unfold high in H3; rewrite H7 in H3; rewrite H10 in H3.",
                        "VernacExtend",
                        "7d90e97ebb5b3941203e59050278344c358d6931"
                    ]
                },
                {
                    "command": [
                        "unfold low in H4; rewrite H7 in H4; rewrite H10 in H4.",
                        "VernacExtend",
                        "4ef7bc0e637f49c2fe61f219dfdd33bdcdbf503d"
                    ]
                },
                {
                    "command": [
                        "cut (BDDshare_lookup share x x0 x1 = Some node1).",
                        "VernacExtend",
                        "83ea6e3a7c57fe2f5582b4ee222909cfb449aebb"
                    ]
                },
                {
                    "command": [
                        "cut (BDDshare_lookup share x2 x3 x4 = Some node2).",
                        "VernacExtend",
                        "49ef2ce67a02fd0106b5cfd5b4bc13cf559a485f"
                    ]
                },
                {
                    "command": [
                        "intros H11 H12.",
                        "VernacExtend",
                        "2f30f551c324561c0b6cd0c62d157122b2777f91"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H12.",
                        "VernacExtend",
                        "e9a4f91ff7cedae0c31fbcd0d9b0e1ac62a964bf"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H12.",
                        "VernacExtend",
                        "6a8ab3bd25f56258f0fb68224ed5176c51924107"
                    ]
                },
                {
                    "command": [
                        "rewrite H4 in H12.",
                        "VernacExtend",
                        "54f17f292d29fb698804eba8f4f7c629a88efdf4"
                    ]
                },
                {
                    "command": [
                        "rewrite H11 in H12.",
                        "VernacExtend",
                        "6e80bd5d2b022bbf2b9b1b25a647a09576313f6e"
                    ]
                },
                {
                    "command": [
                        "injection H12.",
                        "VernacExtend",
                        "7f72bd6518ee63a41cbfdb9a53583c0a23dbcb2f"
                    ]
                },
                {
                    "command": [
                        "intro H13.",
                        "VernacExtend",
                        "feb8e9eb0f7422cc52051473f8890af27e8240ca"
                    ]
                },
                {
                    "command": [
                        "rewrite H13; reflexivity.",
                        "VernacExtend",
                        "d4b403382a1fd86e17d4175c5e8306bb799b1c91"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "intros H11 H12.",
                        "VernacExtend",
                        "2f30f551c324561c0b6cd0c62d157122b2777f91"
                    ]
                },
                {
                    "command": [
                        "apply (proj2 (proj1 H12 x2 x3 x4 node2)).",
                        "VernacExtend",
                        "e543484a25bf99bf8c5b7e75bad21cb95230638a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H; intros.",
                        "VernacExtend",
                        "79e1c8a1444242deed6d2876e3fe7bb2cf051f26"
                    ]
                },
                {
                    "command": [
                        "apply (proj2 (proj1 H12 x x0 x1 node1)).",
                        "VernacExtend",
                        "8eaa4900bf7fffd82721960fc5445822acf2f5b5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDunique_1",
            "line_nb": 906,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros H n.",
                        "VernacExtend",
                        "d752e09d818a9b8e578599d7f37f8a11ff877107"
                    ]
                },
                {
                    "command": [
                        "apply lt_wf_ind with (P := fun n : nat => forall node1 node2 : ad, n = max (nat_of_N (var (bs, (share, counter)) node1)) (nat_of_N (var (bs, (share, counter)) node2)) -> config_node_OK (bs, (share, counter)) node1 -> config_node_OK (bs, (share, counter)) node2 -> bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node1) (bool_fun_of_BDD (bs, (share, counter)) node2) -> node1 = node2).",
                        "VernacExtend",
                        "88c204fb65978acc3d6836f01b069c4b17b16622"
                    ]
                },
                {
                    "command": [
                        "intros n0 H00.",
                        "VernacExtend",
                        "6a63612546bd256d77a7f880d347ec81f1cfb3fa"
                    ]
                },
                {
                    "command": [
                        "intros node1 node2 H0 H1 H2 H3.",
                        "VernacExtend",
                        "5260ebde7f64285b13061c8db9c653b50c0c00ba"
                    ]
                },
                {
                    "command": [
                        "elim H1; intro.",
                        "VernacExtend",
                        "69e6dce0928c10bc8e91776963343c6dbf299832"
                    ]
                },
                {
                    "command": [
                        "elim H2; intro.",
                        "VernacExtend",
                        "939c927788b9492b13127156d1f300437fdf7754"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; rewrite H5; reflexivity.",
                        "VernacExtend",
                        "e5001b9d3bc8b60d6e3e4546161e8bf15030b9f8"
                    ]
                },
                {
                    "command": [
                        "elim H5; intro.",
                        "VernacExtend",
                        "29923dfc32add298aa4e01bbfee147f65e05faf2"
                    ]
                },
                {
                    "command": [
                        "rewrite H4 in H3.",
                        "VernacExtend",
                        "806e5e7c7d38d93d32fde28c08821b0d11eaea9a"
                    ]
                },
                {
                    "command": [
                        "rewrite H6 in H3.",
                        "VernacExtend",
                        "9287f162e5f86f92ae2e9e1ad6f4aeec5e254469"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)) in H3.",
                        "VernacExtend",
                        "5fc06fa98535c260eab9a5eaa3a6a20fb0fcaf82"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) in H3.",
                        "VernacExtend",
                        "18beca64bf2e1e3c9f557b3c4903a4cdbf3b59c1"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq bool_fun_zero bool_fun_one).",
                        "VernacExtend",
                        "768ea100fa4ddda3b44bd148ed97540b50cf235f"
                    ]
                },
                {
                    "command": [
                        "exact bool_fun_zero_one_eq.",
                        "VernacExtend",
                        "32355414da3ed6423089cb30b21c9b0fa62cdced"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node2) bool_fun_zero).",
                        "VernacExtend",
                        "2aa1579acb3150652ff58c7215c524387637dfd0"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs, (share, counter)) node2).",
                        "VernacExtend",
                        "bf596ad3a4aab959d9f7f8055812c8d8578c4a8b"
                    ]
                },
                {
                    "command": [
                        "intro H7.",
                        "VernacExtend",
                        "fdf814253dc825557adb6789b752d060ee4394be"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (internal_node_not_constant (bs, (share, counter)) node2 H H7)).",
                        "VernacExtend",
                        "cb4e51cdb502d31b23a3d912dfa1611ebe4eb4a8"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bool_fun_of_BDD (bs, (share, counter)) node1).",
                        "VernacExtend",
                        "25ebfcc65a834ca7a6cd32862f212302b177a5c6"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm; assumption.",
                        "VernacExtend",
                        "fd46031de504c74c266b17505de12795fb5a5a62"
                    ]
                },
                {
                    "command": [
                        "rewrite H4.",
                        "VernacExtend",
                        "fc5d011df68f7160e4669d129d2975825ac089bb"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
                        "VernacExtend",
                        "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *; reflexivity.",
                        "VernacExtend",
                        "92c45c90f429704a67958e204600034d59b26df0"
                    ]
                },
                {
                    "command": [
                        "elim H4; intro.",
                        "VernacExtend",
                        "5fb7c04a4c863371b345204c3ef35e9076208d64"
                    ]
                },
                {
                    "command": [
                        "elim H2; intro.",
                        "VernacExtend",
                        "939c927788b9492b13127156d1f300437fdf7754"
                    ]
                },
                {
                    "command": [
                        "rewrite H5 in H3; rewrite H6 in H3.",
                        "VernacExtend",
                        "4d4997582a32c8bcbd1e5837c9fe6c323692ac63"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)) in H3.",
                        "VernacExtend",
                        "5fc06fa98535c260eab9a5eaa3a6a20fb0fcaf82"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) in H3.",
                        "VernacExtend",
                        "18beca64bf2e1e3c9f557b3c4903a4cdbf3b59c1"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq bool_fun_one bool_fun_zero).",
                        "VernacExtend",
                        "22925f182d7855d2ece234c4f734fbd65f35356f"
                    ]
                },
                {
                    "command": [
                        "exact bool_fun_one_zero_eq.",
                        "VernacExtend",
                        "809326944663650fc4b03900e818cbe023c0f6a1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H6; intro.",
                        "VernacExtend",
                        "e85bcbbf1e2e7245dba06fdc165dee137f165a99"
                    ]
                },
                {
                    "command": [
                        "rewrite H5; rewrite H7; reflexivity.",
                        "VernacExtend",
                        "917b4f69928a0652717b9c5d78d0ed10a9724912"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node2) bool_fun_one).",
                        "VernacExtend",
                        "48b100c1e7597b0ce98f8682f20e8bd0cd8dac5d"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs, (share, counter)) node2).",
                        "VernacExtend",
                        "bf596ad3a4aab959d9f7f8055812c8d8578c4a8b"
                    ]
                },
                {
                    "command": [
                        "intro H8.",
                        "VernacExtend",
                        "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (internal_node_not_constant (bs, (share, counter)) node2 H H8)).",
                        "VernacExtend",
                        "3028e33af4f52fbc8c0ae192bc7c933144187547"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite H5 in H3.",
                        "VernacExtend",
                        "ffc4e047ccba0c6e301223fc336ee84216cd0e9f"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) in H3.",
                        "VernacExtend",
                        "18beca64bf2e1e3c9f557b3c4903a4cdbf3b59c1"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H2; intro.",
                        "VernacExtend",
                        "939c927788b9492b13127156d1f300437fdf7754"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node1) bool_fun_zero).",
                        "VernacExtend",
                        "ad51d988d1b10ff8936356f5b2d21a90302fd5ec"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs, (share, counter)) node1).",
                        "VernacExtend",
                        "97b6edde1495b946bc3591798e5d89d32da3a093"
                    ]
                },
                {
                    "command": [
                        "intro H7.",
                        "VernacExtend",
                        "fdf814253dc825557adb6789b752d060ee4394be"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (internal_node_not_constant (bs, (share, counter)) node1 H H7)).",
                        "VernacExtend",
                        "138692b7343c629845d4531a9d47af79990aafd9"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "rewrite H6 in H3.",
                        "VernacExtend",
                        "9287f162e5f86f92ae2e9e1ad6f4aeec5e254469"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)) in H3.",
                        "VernacExtend",
                        "5fc06fa98535c260eab9a5eaa3a6a20fb0fcaf82"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H6; intro.",
                        "VernacExtend",
                        "e85bcbbf1e2e7245dba06fdc165dee137f165a99"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) node1) bool_fun_one).",
                        "VernacExtend",
                        "3e338cf7c503a4b0ae1cb3eeb56cf532b847730d"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs, (share, counter)) node1).",
                        "VernacExtend",
                        "97b6edde1495b946bc3591798e5d89d32da3a093"
                    ]
                },
                {
                    "command": [
                        "intro H8.",
                        "VernacExtend",
                        "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (internal_node_not_constant (bs, (share, counter)) node1 H H8)).",
                        "VernacExtend",
                        "6cc739347cff76146e022e90370023a328c17d53"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "rewrite H7 in H3.",
                        "VernacExtend",
                        "b232804e91bb6c2b2860d06057623ecef24e0afe"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) in H3.",
                        "VernacExtend",
                        "18beca64bf2e1e3c9f557b3c4903a4cdbf3b59c1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs, (share, counter)) node1).",
                        "VernacExtend",
                        "97b6edde1495b946bc3591798e5d89d32da3a093"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs, (share, counter)) node2).",
                        "VernacExtend",
                        "bf596ad3a4aab959d9f7f8055812c8d8578c4a8b"
                    ]
                },
                {
                    "command": [
                        "intros H8 H9.",
                        "VernacExtend",
                        "f720374270a7af876475ce0f9bf0d300f82ebc9a"
                    ]
                },
                {
                    "command": [
                        "elim (relation_sum (BDDcompare (var (bs, (share, counter)) node1) (var (bs, (share, counter)) node2))); intro y.",
                        "VernacExtend",
                        "e038e5c8737f682ce8bcf4dd5c3c7d456de5d31d"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intro y0.",
                        "VernacExtend",
                        "351ffbdca743623e5f6e6278b15a383c7179987d"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node1)).",
                        "VernacExtend",
                        "15c42b9b531174e4c3fa9032cc8aeee4b2986526"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node2)).",
                        "VernacExtend",
                        "34b79c53b9fb60c47c59d3d517258d32742fb1e3"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node1)).",
                        "VernacExtend",
                        "83c417554528e4d032cd3dabe3f8c866b94de883"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node2)).",
                        "VernacExtend",
                        "fc893617c7979026586b5f845b8e43db34373104"
                    ]
                },
                {
                    "command": [
                        "intros H10 H11 H12 H13.",
                        "VernacExtend",
                        "4cb07ca4137215a4588e3d7fb666a1b5abe2f439"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "0788612fbe7e8f559b999c349244ef610cea46ad"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "1eb340dcc5efc7fbd492067e0104655b2e4921d8"
                    ]
                },
                {
                    "command": [
                        "intros H14 H15.",
                        "VernacExtend",
                        "056499278da1e5936eb41289e1655f2551e88a4d"
                    ]
                },
                {
                    "command": [
                        "cut (high (bs, (share, counter)) node1 = high (bs, (share, counter)) node2).",
                        "VernacExtend",
                        "7fe7b5e0ce357e992e912e4f485ae36bd95e429a"
                    ]
                },
                {
                    "command": [
                        "cut (low (bs, (share, counter)) node1 = low (bs, (share, counter)) node2).",
                        "VernacExtend",
                        "7de6b9e1574819945190983a5a373e551615c4b6"
                    ]
                },
                {
                    "command": [
                        "intros H16 H17.",
                        "VernacExtend",
                        "070a46417e8e4048bf752eaf9a8d2ee7fd3510d4"
                    ]
                },
                {
                    "command": [
                        "apply no_duplicate_node with (cfg := (bs, (share, counter))).",
                        "VernacExtend",
                        "ddaa4757237d524a2e26b17f5dcf2144edc9a0d6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_eq; assumption.",
                        "VernacExtend",
                        "f1c1b6d5becd296fd511ccab7b3b67efc5187715"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H11; intro.",
                        "VernacExtend",
                        "0c29eb3ff440f3a0ec9425df045e9df7bd15a2a4"
                    ]
                },
                {
                    "command": [
                        "elim H10; intro.",
                        "VernacExtend",
                        "ab023baaf96f9d45672d63bd85c3e1e9b0c70460"
                    ]
                },
                {
                    "command": [
                        "rewrite H16; rewrite H17; reflexivity.",
                        "VernacExtend",
                        "ff46fd6d6be928c3457bee49ad655bc92a1b4536"
                    ]
                },
                {
                    "command": [
                        "elim H17; intro.",
                        "VernacExtend",
                        "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "d2454443961e5b2e76fae5f75836e1bc465809bc"
                    ]
                },
                {
                    "command": [
                        "rewrite H16; rewrite H18.",
                        "VernacExtend",
                        "c50bacc838f1a9a0b0cb85d4c1ca555a88e774c3"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_zero_one.",
                        "VernacExtend",
                        "a5d7c83d87ec3f42c2fc43ba9ad1035dad2d3219"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "d2454443961e5b2e76fae5f75836e1bc465809bc"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_lemma.",
                        "VernacExtend",
                        "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
                    ]
                },
                {
                    "command": [
                        "rewrite H16.",
                        "VernacExtend",
                        "d46611b9926d3411ed586aec14fbb4de59848bae"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_zero.",
                        "VernacExtend",
                        "58520e3fa02a5669c566057263c0e2c0ad7c7645"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H16; intro.",
                        "VernacExtend",
                        "e542942227b5497210a7bd66eac66d3136fd5d0f"
                    ]
                },
                {
                    "command": [
                        "elim H10; intro.",
                        "VernacExtend",
                        "ab023baaf96f9d45672d63bd85c3e1e9b0c70460"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "d2454443961e5b2e76fae5f75836e1bc465809bc"
                    ]
                },
                {
                    "command": [
                        "rewrite H17; rewrite H18.",
                        "VernacExtend",
                        "ae6986055ac847a8a412eb9fc025aa3ae0f2f85e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_one_zero.",
                        "VernacExtend",
                        "48431ae2f7e026aa576d09ecaa04b9ce1164250c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H18; intro.",
                        "VernacExtend",
                        "fed561d0739ad8144c28aa14b967049b8c9be1a1"
                    ]
                },
                {
                    "command": [
                        "rewrite H17; rewrite H19; reflexivity.",
                        "VernacExtend",
                        "0095f18df7b5f0c8751edaef575bf8ca3e561024"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "d2454443961e5b2e76fae5f75836e1bc465809bc"
                    ]
                },
                {
                    "command": [
                        "rewrite H17.",
                        "VernacExtend",
                        "05ed26bf77cdb384d29c02889c582eb23b3f955e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_lemma.",
                        "VernacExtend",
                        "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_one.",
                        "VernacExtend",
                        "601499f001ed4cdddbbef567dae88af1c293d310"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H10; intro.",
                        "VernacExtend",
                        "ab023baaf96f9d45672d63bd85c3e1e9b0c70460"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "d2454443961e5b2e76fae5f75836e1bc465809bc"
                    ]
                },
                {
                    "command": [
                        "rewrite H18.",
                        "VernacExtend",
                        "0f27b84408db59cbd9918e21d833066b93142bd6"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_zero.",
                        "VernacExtend",
                        "58520e3fa02a5669c566057263c0e2c0ad7c7645"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H18; intro.",
                        "VernacExtend",
                        "fed561d0739ad8144c28aa14b967049b8c9be1a1"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "d2454443961e5b2e76fae5f75836e1bc465809bc"
                    ]
                },
                {
                    "command": [
                        "rewrite H19.",
                        "VernacExtend",
                        "1680cdbaca48312bd8c17a9f25a2847458523bd0"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_one.",
                        "VernacExtend",
                        "601499f001ed4cdddbbef567dae88af1c293d310"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H00 with (m := max (nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node1))) (nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node2)))).",
                        "VernacExtend",
                        "50b7dcaadb3d29fc9a5ab1781a42a356f906483e"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "apply lt_max_1_2.",
                        "VernacExtend",
                        "4066a275d77c3d48b7ffce4074f4871887c2b678"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low.",
                        "VernacExtend",
                        "ba66c15448aced83d225d0e66a0f593162c936e4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low.",
                        "VernacExtend",
                        "ba66c15448aced83d225d0e66a0f593162c936e4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H13; intro.",
                        "VernacExtend",
                        "4239366b12ca7aa95c7092287208a6730e554f75"
                    ]
                },
                {
                    "command": [
                        "elim H12; intro.",
                        "VernacExtend",
                        "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
                    ]
                },
                {
                    "command": [
                        "rewrite H16; rewrite H17; reflexivity.",
                        "VernacExtend",
                        "ff46fd6d6be928c3457bee49ad655bc92a1b4536"
                    ]
                },
                {
                    "command": [
                        "elim H17; intro.",
                        "VernacExtend",
                        "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "b572b3b4b73f863b7d3158461bc23bd011d05d1d"
                    ]
                },
                {
                    "command": [
                        "rewrite H16; rewrite H18; apply bool_fun_neq_zero_one.",
                        "VernacExtend",
                        "60ec1210a902ddd8827dc7e473a5cf280bdafa57"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "b572b3b4b73f863b7d3158461bc23bd011d05d1d"
                    ]
                },
                {
                    "command": [
                        "rewrite H16.",
                        "VernacExtend",
                        "d46611b9926d3411ed586aec14fbb4de59848bae"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_lemma.",
                        "VernacExtend",
                        "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_zero.",
                        "VernacExtend",
                        "58520e3fa02a5669c566057263c0e2c0ad7c7645"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H16; intro.",
                        "VernacExtend",
                        "e542942227b5497210a7bd66eac66d3136fd5d0f"
                    ]
                },
                {
                    "command": [
                        "rewrite H17 in H15.",
                        "VernacExtend",
                        "b2ca3044def07e73e12d90657bf98935bf84b116"
                    ]
                },
                {
                    "command": [
                        "elim H12; intro.",
                        "VernacExtend",
                        "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
                    ]
                },
                {
                    "command": [
                        "rewrite H18 in H15.",
                        "VernacExtend",
                        "6b3769093a2cd1a5761f361a8c2a73c6481d6db7"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) BDDone) (bool_fun_of_BDD (bs, (share, counter)) BDDzero)).",
                        "VernacExtend",
                        "164bf02c0cb624002d7a9a52a0d918e85d1edc0c"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_one_zero.",
                        "VernacExtend",
                        "48431ae2f7e026aa576d09ecaa04b9ce1164250c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H18; intro.",
                        "VernacExtend",
                        "fed561d0739ad8144c28aa14b967049b8c9be1a1"
                    ]
                },
                {
                    "command": [
                        "rewrite H17; rewrite H19; reflexivity.",
                        "VernacExtend",
                        "0095f18df7b5f0c8751edaef575bf8ca3e561024"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) BDDone) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "07f20e08de5848bb3f4b56b66210cbced66dc6c6"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_lemma.",
                        "VernacExtend",
                        "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_one.",
                        "VernacExtend",
                        "601499f001ed4cdddbbef567dae88af1c293d310"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H12; intro.",
                        "VernacExtend",
                        "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "b572b3b4b73f863b7d3158461bc23bd011d05d1d"
                    ]
                },
                {
                    "command": [
                        "rewrite H18.",
                        "VernacExtend",
                        "0f27b84408db59cbd9918e21d833066b93142bd6"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_zero.",
                        "VernacExtend",
                        "58520e3fa02a5669c566057263c0e2c0ad7c7645"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H18; intro.",
                        "VernacExtend",
                        "fed561d0739ad8144c28aa14b967049b8c9be1a1"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "b572b3b4b73f863b7d3158461bc23bd011d05d1d"
                    ]
                },
                {
                    "command": [
                        "rewrite H19.",
                        "VernacExtend",
                        "1680cdbaca48312bd8c17a9f25a2847458523bd0"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_one.",
                        "VernacExtend",
                        "601499f001ed4cdddbbef567dae88af1c293d310"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H00 with (m := max (nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node1))) (nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node2)))).",
                        "VernacExtend",
                        "8c073697cdbc7301f950a6c1fae7d730cb3f6b2b"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "apply lt_max_1_2.",
                        "VernacExtend",
                        "4066a275d77c3d48b7ffce4074f4871887c2b678"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high.",
                        "VernacExtend",
                        "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high.",
                        "VernacExtend",
                        "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node1) false).",
                        "VernacExtend",
                        "98d5d89c6bd1f121ac3e13d676983e9169a48bf8"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDlow.",
                        "VernacExtend",
                        "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node2) false).",
                        "VernacExtend",
                        "aa456f32daf2e36a2ae4f7965df09e7b2251466d"
                    ]
                },
                {
                    "command": [
                        "cut (var (bs, (share, counter)) node1 = var (bs, (share, counter)) node2).",
                        "VernacExtend",
                        "7c91b7eb5f35109308a02af9a703b7485089f946"
                    ]
                },
                {
                    "command": [
                        "intro H14.",
                        "VernacExtend",
                        "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
                    ]
                },
                {
                    "command": [
                        "rewrite H14.",
                        "VernacExtend",
                        "b53d81c05d6007e728db7abfa7c98c200268f9e7"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_eq.",
                        "VernacExtend",
                        "e2f505554fbab788e736cfc15c5360e39264463b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDlow.",
                        "VernacExtend",
                        "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node1) true).",
                        "VernacExtend",
                        "0a65f9d6e4e58d710f83620a8de2fc798d6b8211"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node2) true).",
                        "VernacExtend",
                        "862378b73759f40c061c7fff90cac9625cfd98f2"
                    ]
                },
                {
                    "command": [
                        "cut (var (bs, (share, counter)) node1 = var (bs, (share, counter)) node2).",
                        "VernacExtend",
                        "7c91b7eb5f35109308a02af9a703b7485089f946"
                    ]
                },
                {
                    "command": [
                        "intro H14.",
                        "VernacExtend",
                        "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
                    ]
                },
                {
                    "command": [
                        "rewrite H14.",
                        "VernacExtend",
                        "b53d81c05d6007e728db7abfa7c98c200268f9e7"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_eq.",
                        "VernacExtend",
                        "e2f505554fbab788e736cfc15c5360e39264463b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node1)).",
                        "VernacExtend",
                        "15c42b9b531174e4c3fa9032cc8aeee4b2986526"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node2)).",
                        "VernacExtend",
                        "34b79c53b9fb60c47c59d3d517258d32742fb1e3"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node1)).",
                        "VernacExtend",
                        "83c417554528e4d032cd3dabe3f8c866b94de883"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node2)).",
                        "VernacExtend",
                        "fc893617c7979026586b5f845b8e43db34373104"
                    ]
                },
                {
                    "command": [
                        "intros H10 H11 H12 H13.",
                        "VernacExtend",
                        "4cb07ca4137215a4588e3d7fb666a1b5abe2f439"
                    ]
                },
                {
                    "command": [
                        "cut (low (bs, (share, counter)) node2 = high (bs, (share, counter)) node2).",
                        "VernacExtend",
                        "db60ae3a163029cbce5edf2202163c6a8c10cd53"
                    ]
                },
                {
                    "command": [
                        "intros H14.",
                        "VernacExtend",
                        "800ab5421b06658afd42f05423ddaa63bcd8bed7"
                    ]
                },
                {
                    "command": [
                        "cut (Neqb (low (bs, (share, counter)) node2) (high (bs, (share, counter)) node2) = false).",
                        "VernacExtend",
                        "ed49590769f233e6a67f3bc025e73e6f78df1194"
                    ]
                },
                {
                    "command": [
                        "rewrite H14.",
                        "VernacExtend",
                        "b53d81c05d6007e728db7abfa7c98c200268f9e7"
                    ]
                },
                {
                    "command": [
                        "rewrite (Neqb_correct (high (bs, (share, counter)) node2)).",
                        "VernacExtend",
                        "abaea6637f93b85debcf8cfbc6aa7f918a21e4f4"
                    ]
                },
                {
                    "command": [
                        "intro H15.",
                        "VernacExtend",
                        "a496e7944923dd251836a55eac0efac7fac32b63"
                    ]
                },
                {
                    "command": [
                        "discriminate H15.",
                        "VernacExtend",
                        "7f5f3e570df4d130cb793c0ad7d77ce0ecc91596"
                    ]
                },
                {
                    "command": [
                        "apply low_high_neq.",
                        "VernacExtend",
                        "5bbc81050d70154e424751b43b474476254f8c37"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "502ee6c9af5922ff6640339104c94e10993590b9"
                    ]
                },
                {
                    "command": [
                        "intro H14.",
                        "VernacExtend",
                        "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
                    ]
                },
                {
                    "command": [
                        "elim H10; intro.",
                        "VernacExtend",
                        "ab023baaf96f9d45672d63bd85c3e1e9b0c70460"
                    ]
                },
                {
                    "command": [
                        "elim H12; intro.",
                        "VernacExtend",
                        "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
                    ]
                },
                {
                    "command": [
                        "rewrite H15; rewrite H16; reflexivity.",
                        "VernacExtend",
                        "9bce0e1667dca643562c205e5f1dc8cb17928a07"
                    ]
                },
                {
                    "command": [
                        "elim H16; intro.",
                        "VernacExtend",
                        "e542942227b5497210a7bd66eac66d3136fd5d0f"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "00c156a158a7262f5b2c10326588c3aa2c776fb0"
                    ]
                },
                {
                    "command": [
                        "rewrite H15; rewrite H17.",
                        "VernacExtend",
                        "056a47c61c9a59d7e4b5b50331213440a9132698"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_zero_one.",
                        "VernacExtend",
                        "a5d7c83d87ec3f42c2fc43ba9ad1035dad2d3219"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "00c156a158a7262f5b2c10326588c3aa2c776fb0"
                    ]
                },
                {
                    "command": [
                        "rewrite H15.",
                        "VernacExtend",
                        "63b8b0d0c08cef2e135c7c663a2c78a6e22fdeb6"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_lemma.",
                        "VernacExtend",
                        "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_zero.",
                        "VernacExtend",
                        "58520e3fa02a5669c566057263c0e2c0ad7c7645"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H15; intro.",
                        "VernacExtend",
                        "a2b9a015f32109d3137a55d790ecf80a8ae43096"
                    ]
                },
                {
                    "command": [
                        "elim H12; intro.",
                        "VernacExtend",
                        "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "00c156a158a7262f5b2c10326588c3aa2c776fb0"
                    ]
                },
                {
                    "command": [
                        "rewrite H16; rewrite H17.",
                        "VernacExtend",
                        "71712afc55fd6dc7a7136f5996e7239dcac417c3"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_one_zero.",
                        "VernacExtend",
                        "48431ae2f7e026aa576d09ecaa04b9ce1164250c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H17; intro.",
                        "VernacExtend",
                        "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
                    ]
                },
                {
                    "command": [
                        "rewrite H16; rewrite H18; reflexivity.",
                        "VernacExtend",
                        "24d383d7fdc0a099cd3540d6bd919e0befd568d9"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "00c156a158a7262f5b2c10326588c3aa2c776fb0"
                    ]
                },
                {
                    "command": [
                        "rewrite H16.",
                        "VernacExtend",
                        "d46611b9926d3411ed586aec14fbb4de59848bae"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_lemma.",
                        "VernacExtend",
                        "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_one.",
                        "VernacExtend",
                        "601499f001ed4cdddbbef567dae88af1c293d310"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H12; intro.",
                        "VernacExtend",
                        "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "00c156a158a7262f5b2c10326588c3aa2c776fb0"
                    ]
                },
                {
                    "command": [
                        "rewrite H17.",
                        "VernacExtend",
                        "05ed26bf77cdb384d29c02889c582eb23b3f955e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_zero.",
                        "VernacExtend",
                        "58520e3fa02a5669c566057263c0e2c0ad7c7645"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H17; intro.",
                        "VernacExtend",
                        "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node2)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node2))).",
                        "VernacExtend",
                        "00c156a158a7262f5b2c10326588c3aa2c776fb0"
                    ]
                },
                {
                    "command": [
                        "rewrite H18.",
                        "VernacExtend",
                        "0f27b84408db59cbd9918e21d833066b93142bd6"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_one.",
                        "VernacExtend",
                        "601499f001ed4cdddbbef567dae88af1c293d310"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H00 with (m := max (nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node2))) (nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node2)))).",
                        "VernacExtend",
                        "1d1c363c7828144b93dd24ab21425684a13f2439"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "apply lt_max_2.",
                        "VernacExtend",
                        "9d5b614882a5926001c3c7d35a66486a92cad342"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low.",
                        "VernacExtend",
                        "ba66c15448aced83d225d0e66a0f593162c936e4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high.",
                        "VernacExtend",
                        "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node2) false) (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node2) true)).",
                        "VernacExtend",
                        "aa67d9e0450a120f3bcfdbec69803edc2003733d"
                    ]
                },
                {
                    "command": [
                        "intro H14.",
                        "VernacExtend",
                        "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node2) false).",
                        "VernacExtend",
                        "5ca44c1a0d4c2664e9134fbbcc2a99e4b7b8058d"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDlow.",
                        "VernacExtend",
                        "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node2) true).",
                        "VernacExtend",
                        "f8785c8f0f87182ba618c84428519a7b045ad323"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node2) false) (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node2) true)).",
                        "VernacExtend",
                        "75a2baee772514da822b5fce7c1b92e1cc584c71"
                    ]
                },
                {
                    "command": [
                        "intro H14.",
                        "VernacExtend",
                        "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node2) false).",
                        "VernacExtend",
                        "bd0765d9750d13888c068e4bb48e4563326da2af"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node2) true).",
                        "VernacExtend",
                        "9a03c0efff84be7a5ad25bf46b4d2a994f3e8619"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_independent (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node2)).",
                        "VernacExtend",
                        "32fa96d7035e3f0f06ceb4374e98088f5856096a"
                    ]
                },
                {
                    "command": [
                        "intro H14.",
                        "VernacExtend",
                        "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_independent in H14.",
                        "VernacExtend",
                        "0c892abdb57802d053d00a805a837695cd7aa9ac"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *.",
                        "VernacExtend",
                        "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_restrict in |- *.",
                        "VernacExtend",
                        "8f5a662d1228cd59b9d9d647a9421f5c9c13ed3a"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval at 1 3 in |- *.",
                        "VernacExtend",
                        "8e7b47d1f6cfd6cfd7e7e9cdeb9dbd71273f76ba"
                    ]
                },
                {
                    "command": [
                        "intro vb.",
                        "VernacExtend",
                        "e8b7ec7490ece50e805b33900ace150891cc88ee"
                    ]
                },
                {
                    "command": [
                        "rewrite (H14 vb); reflexivity.",
                        "VernacExtend",
                        "556c865547c18fb75e3b7f827b75e419a8a8e4dc"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_independent_1 with (n := nat_of_N (var (bs, (share, counter)) node1)).",
                        "VernacExtend",
                        "129286288113d17b0ff67b3c93ea73d49f602f2d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (BDDcompare (var (bs, (share, counter)) node2) (var (bs, (share, counter)) node1) = Datatypes.Lt).",
                        "VernacExtend",
                        "05af86dbe5da6e1cac267b506130e8b4a794910b"
                    ]
                },
                {
                    "command": [
                        "clear y; intro y.",
                        "VernacExtend",
                        "5f09b77b9f524be4c9a467af15716e8b43a98a39"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node1)).",
                        "VernacExtend",
                        "15c42b9b531174e4c3fa9032cc8aeee4b2986526"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node2)).",
                        "VernacExtend",
                        "34b79c53b9fb60c47c59d3d517258d32742fb1e3"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node1)).",
                        "VernacExtend",
                        "83c417554528e4d032cd3dabe3f8c866b94de883"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node2)).",
                        "VernacExtend",
                        "fc893617c7979026586b5f845b8e43db34373104"
                    ]
                },
                {
                    "command": [
                        "intros H10 H11 H12 H13.",
                        "VernacExtend",
                        "4cb07ca4137215a4588e3d7fb666a1b5abe2f439"
                    ]
                },
                {
                    "command": [
                        "cut (low (bs, (share, counter)) node1 = high (bs, (share, counter)) node1).",
                        "VernacExtend",
                        "f3cd3be0f942cfd4651da926d1e60c2965b627fe"
                    ]
                },
                {
                    "command": [
                        "intros H14.",
                        "VernacExtend",
                        "800ab5421b06658afd42f05423ddaa63bcd8bed7"
                    ]
                },
                {
                    "command": [
                        "cut (Neqb (low (bs, (share, counter)) node1) (high (bs, (share, counter)) node1) = false).",
                        "VernacExtend",
                        "61715972c97a0b21f0473729a8a8930fb5476327"
                    ]
                },
                {
                    "command": [
                        "rewrite H14.",
                        "VernacExtend",
                        "b53d81c05d6007e728db7abfa7c98c200268f9e7"
                    ]
                },
                {
                    "command": [
                        "rewrite (Neqb_correct (high (bs, (share, counter)) node1)).",
                        "VernacExtend",
                        "f8db5a710738b3d02b38b0ec5501c273211dc46f"
                    ]
                },
                {
                    "command": [
                        "intro H15.",
                        "VernacExtend",
                        "a496e7944923dd251836a55eac0efac7fac32b63"
                    ]
                },
                {
                    "command": [
                        "discriminate H15.",
                        "VernacExtend",
                        "7f5f3e570df4d130cb793c0ad7d77ce0ecc91596"
                    ]
                },
                {
                    "command": [
                        "apply low_high_neq.",
                        "VernacExtend",
                        "5bbc81050d70154e424751b43b474476254f8c37"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
                        "VernacExtend",
                        "b47dc096aea8f4259c6c6e62a39a69b04a8f1116"
                    ]
                },
                {
                    "command": [
                        "intro H14.",
                        "VernacExtend",
                        "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
                    ]
                },
                {
                    "command": [
                        "elim H11; intro.",
                        "VernacExtend",
                        "0c29eb3ff440f3a0ec9425df045e9df7bd15a2a4"
                    ]
                },
                {
                    "command": [
                        "elim H13; intro.",
                        "VernacExtend",
                        "4239366b12ca7aa95c7092287208a6730e554f75"
                    ]
                },
                {
                    "command": [
                        "rewrite H15; rewrite H16; reflexivity.",
                        "VernacExtend",
                        "9bce0e1667dca643562c205e5f1dc8cb17928a07"
                    ]
                },
                {
                    "command": [
                        "elim H16; intro.",
                        "VernacExtend",
                        "e542942227b5497210a7bd66eac66d3136fd5d0f"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
                        "VernacExtend",
                        "b5eee1cd2eb1850bed999d292e8925c388b21293"
                    ]
                },
                {
                    "command": [
                        "rewrite H15; rewrite H17.",
                        "VernacExtend",
                        "056a47c61c9a59d7e4b5b50331213440a9132698"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_zero_one.",
                        "VernacExtend",
                        "a5d7c83d87ec3f42c2fc43ba9ad1035dad2d3219"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
                        "VernacExtend",
                        "b5eee1cd2eb1850bed999d292e8925c388b21293"
                    ]
                },
                {
                    "command": [
                        "rewrite H15.",
                        "VernacExtend",
                        "63b8b0d0c08cef2e135c7c663a2c78a6e22fdeb6"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_lemma.",
                        "VernacExtend",
                        "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_zero.",
                        "VernacExtend",
                        "58520e3fa02a5669c566057263c0e2c0ad7c7645"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H15; intro.",
                        "VernacExtend",
                        "a2b9a015f32109d3137a55d790ecf80a8ae43096"
                    ]
                },
                {
                    "command": [
                        "elim H13; intro.",
                        "VernacExtend",
                        "4239366b12ca7aa95c7092287208a6730e554f75"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
                        "VernacExtend",
                        "b5eee1cd2eb1850bed999d292e8925c388b21293"
                    ]
                },
                {
                    "command": [
                        "rewrite H16; rewrite H17.",
                        "VernacExtend",
                        "71712afc55fd6dc7a7136f5996e7239dcac417c3"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_one_zero.",
                        "VernacExtend",
                        "48431ae2f7e026aa576d09ecaa04b9ce1164250c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H17; intro.",
                        "VernacExtend",
                        "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
                    ]
                },
                {
                    "command": [
                        "rewrite H16; rewrite H18; reflexivity.",
                        "VernacExtend",
                        "24d383d7fdc0a099cd3540d6bd919e0befd568d9"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
                        "VernacExtend",
                        "b5eee1cd2eb1850bed999d292e8925c388b21293"
                    ]
                },
                {
                    "command": [
                        "rewrite H16.",
                        "VernacExtend",
                        "d46611b9926d3411ed586aec14fbb4de59848bae"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_lemma.",
                        "VernacExtend",
                        "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_one.",
                        "VernacExtend",
                        "601499f001ed4cdddbbef567dae88af1c293d310"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H13; intro.",
                        "VernacExtend",
                        "4239366b12ca7aa95c7092287208a6730e554f75"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
                        "VernacExtend",
                        "b5eee1cd2eb1850bed999d292e8925c388b21293"
                    ]
                },
                {
                    "command": [
                        "rewrite H17.",
                        "VernacExtend",
                        "05ed26bf77cdb384d29c02889c582eb23b3f955e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_zero.",
                        "VernacExtend",
                        "58520e3fa02a5669c566057263c0e2c0ad7c7645"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H17; intro.",
                        "VernacExtend",
                        "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node1)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node1))).",
                        "VernacExtend",
                        "b5eee1cd2eb1850bed999d292e8925c388b21293"
                    ]
                },
                {
                    "command": [
                        "rewrite H18.",
                        "VernacExtend",
                        "0f27b84408db59cbd9918e21d833066b93142bd6"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_internal_one.",
                        "VernacExtend",
                        "601499f001ed4cdddbbef567dae88af1c293d310"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H00 with (m := max (nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node1))) (nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node1)))).",
                        "VernacExtend",
                        "9d9ddfb4e4fa8531e59198d4336e47243f213a4d"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "apply lt_max_12.",
                        "VernacExtend",
                        "1da1e8e1bdc14755c37e607e1aa3fc629c2502fc"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low.",
                        "VernacExtend",
                        "ba66c15448aced83d225d0e66a0f593162c936e4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high.",
                        "VernacExtend",
                        "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal; assumption.",
                        "VernacExtend",
                        "f29811d1eb17ec4abef2e731def8cb853bce0823"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node1) false) (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node1) true)).",
                        "VernacExtend",
                        "a2e3b54ee3c2ecbb2dee5424808f741a282c5df0"
                    ]
                },
                {
                    "command": [
                        "intro H14.",
                        "VernacExtend",
                        "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node1) false).",
                        "VernacExtend",
                        "7e7e39e67886057a28198cfa7bf6172b02e4ea7e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDlow.",
                        "VernacExtend",
                        "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node1) (var (bs, (share, counter)) node1) true).",
                        "VernacExtend",
                        "34f0980c46b48f3f04a6ec23699830d483c15f49"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node1) false) (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node1) true)).",
                        "VernacExtend",
                        "c2c95745b5b740cbbe8b9a9d55c510af62b8f1a8"
                    ]
                },
                {
                    "command": [
                        "intro H14.",
                        "VernacExtend",
                        "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node1) false).",
                        "VernacExtend",
                        "4c8c6a1e07ba5c311103e8b3eb8f3a3a52e5db94"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node1) true).",
                        "VernacExtend",
                        "cddddfee6ef902db622aa1918080c45655f57485"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_independent (bool_fun_of_BDD (bs, (share, counter)) node2) (var (bs, (share, counter)) node1)).",
                        "VernacExtend",
                        "5308ba2ad4011d2608221ac0a0459ad0c8695655"
                    ]
                },
                {
                    "command": [
                        "intro H14.",
                        "VernacExtend",
                        "6d0a94fd9b50dbbb059a77582dced1836ff8a132"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_independent in H14.",
                        "VernacExtend",
                        "0c892abdb57802d053d00a805a837695cd7aa9ac"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *.",
                        "VernacExtend",
                        "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_restrict in |- *.",
                        "VernacExtend",
                        "8f5a662d1228cd59b9d9d647a9421f5c9c13ed3a"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval at 1 3 in |- *.",
                        "VernacExtend",
                        "8e7b47d1f6cfd6cfd7e7e9cdeb9dbd71273f76ba"
                    ]
                },
                {
                    "command": [
                        "intro vb.",
                        "VernacExtend",
                        "e8b7ec7490ece50e805b33900ace150891cc88ee"
                    ]
                },
                {
                    "command": [
                        "rewrite (H14 vb); reflexivity.",
                        "VernacExtend",
                        "556c865547c18fb75e3b7f827b75e419a8a8e4dc"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_independent_1 with (n := nat_of_N (var (bs, (share, counter)) node2)).",
                        "VernacExtend",
                        "538639b27d943f7fd1d0bf528439c905ed8bdb2e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_sup_inf.",
                        "VernacExtend",
                        "baf8fe4959ef74624b0b125229227a79c9e1445e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDunique",
            "line_nb": 1446,
            "steps": [
                {
                    "command": [
                        "intros cfg H node1 node2 H0 H1 H2.",
                        "VernacExtend",
                        "ed2f8d4ab79471d1f94e2a156cbc5051d058a048"
                    ]
                },
                {
                    "command": [
                        "apply BDDunique_1 with (cfg := cfg) (n := max (nat_of_N (var cfg node1)) (nat_of_N (var cfg node2))).",
                        "VernacExtend",
                        "c579e36beaf906121ef0c2275dfe1bd9f66b9646"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_eq_lemma",
            "line_nb": 1455,
            "steps": [
                {
                    "command": [
                        "intros bf1 bf2 x H H0 H1 H2.",
                        "VernacExtend",
                        "51cb2a5be3d64177e16abf9f80ca36eaa0d4301d"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *.",
                        "VernacExtend",
                        "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
                    ]
                },
                {
                    "command": [
                        "intro vb.",
                        "VernacExtend",
                        "e8b7ec7490ece50e805b33900ace150891cc88ee"
                    ]
                },
                {
                    "command": [
                        "elim (sumbool_of_bool (vb x)); intro.",
                        "VernacExtend",
                        "cf40d2a111e41f7e84b2920110e254cf86889191"
                    ]
                },
                {
                    "command": [
                        "cut (var_binding_eq (augment vb x true) vb).",
                        "VernacExtend",
                        "ed395b54246b4c8b638bd005c84a1467464c59b2"
                    ]
                },
                {
                    "command": [
                        "intro H3.",
                        "VernacExtend",
                        "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eval bf2 (augment vb x true) = bool_fun_eval bf2 vb).",
                        "VernacExtend",
                        "7648ea8d6a471ed953188be042c36bf2eb8bc657"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eval bf1 (augment vb x true) = bool_fun_eval bf1 vb).",
                        "VernacExtend",
                        "ca74c17a4b232a45970cf345f65e2e59736c6b86"
                    ]
                },
                {
                    "command": [
                        "intros H4 H5.",
                        "VernacExtend",
                        "46089e7a15bf8449e308e9b67ccaeb21f87323c9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4.",
                        "VernacExtend",
                        "15801069338f53d2cf64b6951fc88c5758e631f8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H5.",
                        "VernacExtend",
                        "7e7c68e08488a5f01b85c6a7ae27738d3a8af897"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq, bool_fun_restrict in H1.",
                        "VernacExtend",
                        "4fab9293cba23852799090028b95d931caffcc08"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval at 1 3 in H1.",
                        "VernacExtend",
                        "8bd278ac019b0d9b6b977ff4a478de625ef32e08"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply augment_eq.",
                        "VernacExtend",
                        "f6cda00b2ead5e480bd1a79928ec0b102674b6c7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (var_binding_eq (augment vb x false) vb).",
                        "VernacExtend",
                        "38457ba05b1d0cc128795abd63a26d45bcb0d522"
                    ]
                },
                {
                    "command": [
                        "intro H3.",
                        "VernacExtend",
                        "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eval bf2 (augment vb x false) = bool_fun_eval bf2 vb).",
                        "VernacExtend",
                        "0c3391663685954c23162987a505d068f1fc8645"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eval bf1 (augment vb x false) = bool_fun_eval bf1 vb).",
                        "VernacExtend",
                        "bb7a2b5419290f4fdf9a21f0f102cf04da9b91cd"
                    ]
                },
                {
                    "command": [
                        "intros H4 H5.",
                        "VernacExtend",
                        "46089e7a15bf8449e308e9b67ccaeb21f87323c9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4.",
                        "VernacExtend",
                        "15801069338f53d2cf64b6951fc88c5758e631f8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H5.",
                        "VernacExtend",
                        "7e7c68e08488a5f01b85c6a7ae27738d3a8af897"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq, bool_fun_restrict in H2.",
                        "VernacExtend",
                        "ac5a6026284b438a0c29681ee9087556ddb76d7e"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval at 1 3 in H2.",
                        "VernacExtend",
                        "19454720ecbb047e98b0584fa706cfa4cb911386"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply augment_eq.",
                        "VernacExtend",
                        "f6cda00b2ead5e480bd1a79928ec0b102674b6c7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_preservation_1",
            "line_nb": 1493,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y.",
                        "VernacExtend",
                        "b520c44f60af1aab60e05d6dde068a31774f78e4"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intro cfg'.",
                        "VernacExtend",
                        "177b524e7d7ba24599e9a3f739aa46fab9d91294"
                    ]
                },
                {
                    "command": [
                        "elim cfg'; clear cfg'; intros bs' y'.",
                        "VernacExtend",
                        "7c9494587a728ec12dc9ffb81c63af474a58d3a2"
                    ]
                },
                {
                    "command": [
                        "elim y'; clear y'; intros share' counter'.",
                        "VernacExtend",
                        "93da110326bb1472a1e0bb802f306b7cd477fa0b"
                    ]
                },
                {
                    "command": [
                        "intros H H0 H1 n.",
                        "VernacExtend",
                        "7e20c91d854fbe51eed092a3bd2283183f37b621"
                    ]
                },
                {
                    "command": [
                        "apply lt_wf_ind with (P := fun n : nat => forall node : ad, n = nat_of_N (var (bs, (share, counter)) node) -> config_node_OK (bs, (share, counter)) node -> bool_fun_eq (bool_fun_of_BDD (bs', (share', counter')) node) (bool_fun_of_BDD (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "7250a09db675a8dbb80a43cf3832e99514e243de"
                    ]
                },
                {
                    "command": [
                        "intros n0 H2 node H3 H4.",
                        "VernacExtend",
                        "6ccdf16d4efa148b3c4c92d8bd9e87b7d1302036"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs', (share', counter')) node).",
                        "VernacExtend",
                        "371eccd808e43dafd75d3c5b24217d9ab6a110d8"
                    ]
                },
                {
                    "command": [
                        "intro H5.",
                        "VernacExtend",
                        "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
                    ]
                },
                {
                    "command": [
                        "elim H4; intro.",
                        "VernacExtend",
                        "5fb7c04a4c863371b345204c3ef35e9076208d64"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
                        "VernacExtend",
                        "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs', (share', counter')) H0)).",
                        "VernacExtend",
                        "31976344173e13f6e3937191951ef0a432b0621f"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *; reflexivity.",
                        "VernacExtend",
                        "92c45c90f429704a67958e204600034d59b26df0"
                    ]
                },
                {
                    "command": [
                        "elim H6; intro.",
                        "VernacExtend",
                        "e85bcbbf1e2e7245dba06fdc165dee137f165a99"
                    ]
                },
                {
                    "command": [
                        "rewrite H7.",
                        "VernacExtend",
                        "2b0de906e9dfacfe89c031c2266760d29b5450f6"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs', (share', counter')) H0))) .",
                        "VernacExtend",
                        "25d65a7d65556d1bbb13bfff4ecb1e14eed86295"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) .",
                        "VernacExtend",
                        "3f6607f94cebcd36beb279442c0b7fce4d5720f5"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *; reflexivity.",
                        "VernacExtend",
                        "92c45c90f429704a67958e204600034d59b26df0"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs, (share, counter)) node).",
                        "VernacExtend",
                        "b3132957a13adc28efb68a3d31a845c7073ba512"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs', (share', counter')) node).",
                        "VernacExtend",
                        "1f91367fae0cd8509a3f0b0f3f76e2c77eff69b6"
                    ]
                },
                {
                    "command": [
                        "intros H8 H9.",
                        "VernacExtend",
                        "f720374270a7af876475ce0f9bf0d300f82ebc9a"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_of_BDD (bs', (share', counter')) (low (bs', (share', counter')) node)) (bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "9321919a050f53d2714e10af823344a018dc559d"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_eq (bool_fun_of_BDD (bs', (share', counter')) (high (bs', (share', counter')) node)) (bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "2ddfa3e4ad88636798a855a7e7d7eb8eedc4e4ca"
                    ]
                },
                {
                    "command": [
                        "intros H10 H11.",
                        "VernacExtend",
                        "1e9e77841a1287dac47b6c4243f9f11a30b06e73"
                    ]
                },
                {
                    "command": [
                        "cut (var (bs, (share, counter)) node = var (bs', (share', counter')) node).",
                        "VernacExtend",
                        "43ebfdcee6795fb7280d7bf75b19344d267665f8"
                    ]
                },
                {
                    "command": [
                        "intro H12.",
                        "VernacExtend",
                        "afc6629c474ec2e325da340fcb3a46ec73eead51"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_lemma with (x := var (bs, (share, counter)) node).",
                        "VernacExtend",
                        "a1401d12b294af4bc501286ea87e1a7284e29316"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDD_ext.",
                        "VernacExtend",
                        "b4ca4bcdc77510aa1141d8e839805305e49722a4"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDD_ext.",
                        "VernacExtend",
                        "b4ca4bcdc77510aa1141d8e839805305e49722a4"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs', (share', counter')) (high (bs', (share', counter')) node)).",
                        "VernacExtend",
                        "02b9fa3a4381047ea740ca27823b194d7d8ad422"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "rewrite H12.",
                        "VernacExtend",
                        "808735886b50c5c4d7707b33984e66555647a2a9"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs, (share, counter)) (high (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "d2645c35b42b29634291ab6cdb432ba80c8d5c3b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs', (share', counter')) (low (bs', (share', counter')) node)).",
                        "VernacExtend",
                        "a170093bea93ff68ec84a9f1fe608d8646cb0bb7"
                    ]
                },
                {
                    "command": [
                        "rewrite H12.",
                        "VernacExtend",
                        "808735886b50c5c4d7707b33984e66555647a2a9"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm; apply bool_fun_of_BDDlow; assumption; assumption.",
                        "VernacExtend",
                        "6750c7637142d7910f886647c002a928ff5cea56"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs, (share, counter)) (low (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "592b7570edfa996bb1a70260fa8fc71cdb654094"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDlow; assumption; assumption.",
                        "VernacExtend",
                        "e7979d3a28f82e47e470c5052e347deeb3f30fcb"
                    ]
                },
                {
                    "command": [
                        "unfold var in |- *.",
                        "VernacExtend",
                        "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
                    ]
                },
                {
                    "command": [
                        "inversion H9.",
                        "VernacExtend",
                        "ba06d75575d77a771abfe438435f8748713f713e"
                    ]
                },
                {
                    "command": [
                        "inversion H12.",
                        "VernacExtend",
                        "d5ec1d67ecbf066a6575bda368738e1ad0dbbc60"
                    ]
                },
                {
                    "command": [
                        "inversion H13.",
                        "VernacExtend",
                        "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
                    ]
                },
                {
                    "command": [
                        "rewrite H14.",
                        "VernacExtend",
                        "b53d81c05d6007e728db7abfa7c98c200268f9e7"
                    ]
                },
                {
                    "command": [
                        "rewrite (H1 x x0 x1 node H14).",
                        "VernacExtend",
                        "252e55b8da65f16a9cfc2f6cd87bb9a03c953570"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "b814f80db45bffc5d1eb82f58679c238c6f54d48"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs', (share', counter')) (high (bs', (share', counter')) node)).",
                        "VernacExtend",
                        "4e4d87c74e9f9fb2a1d7397877d6f856200db254"
                    ]
                },
                {
                    "command": [
                        "intros H10 H11.",
                        "VernacExtend",
                        "1e9e77841a1287dac47b6c4243f9f11a30b06e73"
                    ]
                },
                {
                    "command": [
                        "inversion H9.",
                        "VernacExtend",
                        "ba06d75575d77a771abfe438435f8748713f713e"
                    ]
                },
                {
                    "command": [
                        "inversion H12.",
                        "VernacExtend",
                        "d5ec1d67ecbf066a6575bda368738e1ad0dbbc60"
                    ]
                },
                {
                    "command": [
                        "inversion H13.",
                        "VernacExtend",
                        "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
                    ]
                },
                {
                    "command": [
                        "cut (high (bs', (share', counter')) node = high (bs, (share, counter)) node).",
                        "VernacExtend",
                        "6c8ea60f4f22f78c0bcc5eac3c7fea5bd6361161"
                    ]
                },
                {
                    "command": [
                        "cut (low (bs', (share', counter')) node = low (bs, (share, counter)) node).",
                        "VernacExtend",
                        "d354dc89d62b22c6d58a3a4deb5aac8ddf200cec"
                    ]
                },
                {
                    "command": [
                        "intros H15 H16.",
                        "VernacExtend",
                        "011f2cbfd8cab00298b47ef7500b9c86f8300c26"
                    ]
                },
                {
                    "command": [
                        "elim H11; intro.",
                        "VernacExtend",
                        "0c29eb3ff440f3a0ec9425df045e9df7bd15a2a4"
                    ]
                },
                {
                    "command": [
                        "rewrite H16; rewrite H17.",
                        "VernacExtend",
                        "71712afc55fd6dc7a7136f5996e7239dcac417c3"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
                        "VernacExtend",
                        "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs', (share', counter')) H0)).",
                        "VernacExtend",
                        "31976344173e13f6e3937191951ef0a432b0621f"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *; reflexivity.",
                        "VernacExtend",
                        "92c45c90f429704a67958e204600034d59b26df0"
                    ]
                },
                {
                    "command": [
                        "elim H17; intro.",
                        "VernacExtend",
                        "64e8926fe60d83b6297e9f449aa0c5d11f59d999"
                    ]
                },
                {
                    "command": [
                        "rewrite H16; rewrite H18.",
                        "VernacExtend",
                        "c50bacc838f1a9a0b0cb85d4c1ca555a88e774c3"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs', (share', counter')) H0))) .",
                        "VernacExtend",
                        "25d65a7d65556d1bbb13bfff4ecb1e14eed86295"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) .",
                        "VernacExtend",
                        "3f6607f94cebcd36beb279442c0b7fce4d5720f5"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *; reflexivity.",
                        "VernacExtend",
                        "92c45c90f429704a67958e204600034d59b26df0"
                    ]
                },
                {
                    "command": [
                        "rewrite H16.",
                        "VernacExtend",
                        "d46611b9926d3411ed586aec14fbb4de59848bae"
                    ]
                },
                {
                    "command": [
                        "apply H2 with (m := nat_of_N (var (bs, (share, counter)) (high (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "cfa9ad629f86bba1ca4146c4e96bb1adeaea2667"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high.",
                        "VernacExtend",
                        "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold low in |- *.",
                        "VernacExtend",
                        "344cb2081628177ec374c362b17ddb5395ae8549"
                    ]
                },
                {
                    "command": [
                        "rewrite H14.",
                        "VernacExtend",
                        "b53d81c05d6007e728db7abfa7c98c200268f9e7"
                    ]
                },
                {
                    "command": [
                        "rewrite (H1 x x0 x1 node H14).",
                        "VernacExtend",
                        "252e55b8da65f16a9cfc2f6cd87bb9a03c953570"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold high in |- *.",
                        "VernacExtend",
                        "af6be3a481b55356ef54ee85b5fb2cba596f398f"
                    ]
                },
                {
                    "command": [
                        "rewrite H14.",
                        "VernacExtend",
                        "b53d81c05d6007e728db7abfa7c98c200268f9e7"
                    ]
                },
                {
                    "command": [
                        "rewrite (H1 x x0 x1 node H14).",
                        "VernacExtend",
                        "252e55b8da65f16a9cfc2f6cd87bb9a03c953570"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (low (bs', (share', counter')) node = low (bs, (share, counter)) node).",
                        "VernacExtend",
                        "d354dc89d62b22c6d58a3a4deb5aac8ddf200cec"
                    ]
                },
                {
                    "command": [
                        "intro H10.",
                        "VernacExtend",
                        "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
                    ]
                },
                {
                    "command": [
                        "rewrite H10.",
                        "VernacExtend",
                        "cd2638bc5a7f85648c5e2c9d77046abc07e2da6a"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (low (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "372e75dc28bba5c8c7cfe221d9ab83fa6e9a8a94"
                    ]
                },
                {
                    "command": [
                        "intro H11.",
                        "VernacExtend",
                        "94ccd5954f5b20492a368275203c835bb786888f"
                    ]
                },
                {
                    "command": [
                        "elim H11.",
                        "VernacExtend",
                        "429643c673670fec28160f8e25479dd3e854bce2"
                    ]
                },
                {
                    "command": [
                        "intro H12.",
                        "VernacExtend",
                        "afc6629c474ec2e325da340fcb3a46ec73eead51"
                    ]
                },
                {
                    "command": [
                        "rewrite H12.",
                        "VernacExtend",
                        "808735886b50c5c4d7707b33984e66555647a2a9"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H)).",
                        "VernacExtend",
                        "f98c7664e176ad611b16a9004841a40a6e0fcfc5"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs', (share', counter')) H0)).",
                        "VernacExtend",
                        "31976344173e13f6e3937191951ef0a432b0621f"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *; reflexivity.",
                        "VernacExtend",
                        "92c45c90f429704a67958e204600034d59b26df0"
                    ]
                },
                {
                    "command": [
                        "intro H12.",
                        "VernacExtend",
                        "afc6629c474ec2e325da340fcb3a46ec73eead51"
                    ]
                },
                {
                    "command": [
                        "elim H12; intro.",
                        "VernacExtend",
                        "a98f2eb7699382e1a6767c9901bfc85a25f8d2a6"
                    ]
                },
                {
                    "command": [
                        "rewrite H13.",
                        "VernacExtend",
                        "bc2d32522e887645239b994008e234c058557cd9"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H))) .",
                        "VernacExtend",
                        "3f6607f94cebcd36beb279442c0b7fce4d5720f5"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs', (share', counter')) H0))) .",
                        "VernacExtend",
                        "25d65a7d65556d1bbb13bfff4ecb1e14eed86295"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *; reflexivity.",
                        "VernacExtend",
                        "92c45c90f429704a67958e204600034d59b26df0"
                    ]
                },
                {
                    "command": [
                        "apply H2 with (m := nat_of_N (var (bs, (share, counter)) (low (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "16ea36bb20ef3e83d34497d9bff70c7cc6d1f837"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low.",
                        "VernacExtend",
                        "ba66c15448aced83d225d0e66a0f593162c936e4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold low in |- *.",
                        "VernacExtend",
                        "344cb2081628177ec374c362b17ddb5395ae8549"
                    ]
                },
                {
                    "command": [
                        "inversion H9.",
                        "VernacExtend",
                        "ba06d75575d77a771abfe438435f8748713f713e"
                    ]
                },
                {
                    "command": [
                        "inversion H10.",
                        "VernacExtend",
                        "25696e0e8d3b74f79fae251fc7be3e8779c2da96"
                    ]
                },
                {
                    "command": [
                        "inversion H11.",
                        "VernacExtend",
                        "e3dad2cd24e24300a066e006efd8d61e85377ebb"
                    ]
                },
                {
                    "command": [
                        "rewrite H12.",
                        "VernacExtend",
                        "808735886b50c5c4d7707b33984e66555647a2a9"
                    ]
                },
                {
                    "command": [
                        "rewrite (H1 x x0 x1 node H12).",
                        "VernacExtend",
                        "6722061e91dac13a7e7eba7eb556c12f88d1b801"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "elim (option_sum _ (MapGet _ (fst (bs, (share, counter))) node)).",
                        "VernacExtend",
                        "1875675a9360866c4b8da8ad781710a59c5c06bb"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "elim y; intro x.",
                        "VernacExtend",
                        "4b426362cc009f919ab6edd221d45a6f70d107e6"
                    ]
                },
                {
                    "command": [
                        "elim x; intros x0 x1.",
                        "VernacExtend",
                        "572d73b768456bc9117314c5ad4f4d3b05d0ee5a"
                    ]
                },
                {
                    "command": [
                        "elim x1; intros y0 y1 y2.",
                        "VernacExtend",
                        "71c483afd7183c03482ecd72606bc936e7c6a1dd"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in |- *.",
                        "VernacExtend",
                        "72f928df3e3c19d4381dea5e9bd4414e3b95a02f"
                    ]
                },
                {
                    "command": [
                        "rewrite (H1 x0 y0 y1 node y2).",
                        "VernacExtend",
                        "d768e77307d7ce911027973e744425ae846cf967"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in H7.",
                        "VernacExtend",
                        "0d90e6a4e6199412e2827cc7759ad425e1881453"
                    ]
                },
                {
                    "command": [
                        "rewrite y in H7; discriminate.",
                        "VernacExtend",
                        "2d34d9365432389c16c0f56507d59039994fc893"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H4; intro.",
                        "VernacExtend",
                        "5fb7c04a4c863371b345204c3ef35e9076208d64"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "left; reflexivity.",
                        "VernacExtend",
                        "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
                    ]
                },
                {
                    "command": [
                        "elim H5; intro.",
                        "VernacExtend",
                        "29923dfc32add298aa4e01bbfee147f65e05faf2"
                    ]
                },
                {
                    "command": [
                        "rewrite H6; right; left; reflexivity.",
                        "VernacExtend",
                        "86231929f5d5b441e414f84beb8564a66b96a48f"
                    ]
                },
                {
                    "command": [
                        "right; right.",
                        "VernacExtend",
                        "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
                    ]
                },
                {
                    "command": [
                        "elim (option_sum _ (MapGet _ (fst (bs, (share, counter))) node)).",
                        "VernacExtend",
                        "1875675a9360866c4b8da8ad781710a59c5c06bb"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "elim y; intro x.",
                        "VernacExtend",
                        "4b426362cc009f919ab6edd221d45a6f70d107e6"
                    ]
                },
                {
                    "command": [
                        "elim x; intro y0.",
                        "VernacExtend",
                        "7a6872f5a9f2263fa32faf7e684af3e1cb79fb82"
                    ]
                },
                {
                    "command": [
                        "intro y1.",
                        "VernacExtend",
                        "4d0ec3273193a8100c12a11465f6beb7953e5c77"
                    ]
                },
                {
                    "command": [
                        "elim y1; intros y2 y3 y4.",
                        "VernacExtend",
                        "279fa9a378c4b11f4a9e89d486064315a1749601"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in |- *; rewrite (H1 y0 y2 y3 node y4); reflexivity.",
                        "VernacExtend",
                        "00db41e826978d6cb1f64c77e23aeacb8308f2bd"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in H6; rewrite y in H6; discriminate.",
                        "VernacExtend",
                        "32c1de33836d6699f71e32776ddd8affd53b3a5c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_preservation",
            "line_nb": 1663,
            "steps": [
                {
                    "command": [
                        "intros cfg cfg' node H H0 H1 H2.",
                        "VernacExtend",
                        "7c40224afe90a42fb62970ba531f91d112671cc1"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_preservation_1 with (n := nat_of_N (var cfg node)).",
                        "VernacExtend",
                        "4c42de6f191cc726ba487ac0298afbeb6f041707"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}