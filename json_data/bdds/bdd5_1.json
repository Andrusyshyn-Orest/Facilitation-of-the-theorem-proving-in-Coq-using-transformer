{
    "filename": "bdd5_1.v",
    "coq_project": "bdds",
    "vernac_cmds": [
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Require Import Sumbool.",
            "VernacRequire",
            "555a25fa361ace801dc7927d5872def951dfbee5"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import ZArith NArith Nnat Ndec Ndigits.",
            "VernacRequire",
            "c2baea4a0fda1451ad00e307f8a2db5ff87567aa"
        ],
        [
            "From IntMap Require Import Allmaps.",
            "VernacRequire",
            "d3a19fbc306700804973888ef7ccf716277e64fb"
        ],
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Require Import BDDvar_ad_nat.",
            "VernacRequire",
            "ecfee313280da558d300523c60b3cd65e5165656"
        ],
        [
            "Require Import bdd1.",
            "VernacRequire",
            "35415fd818f4fbf6a7da419d967a777932ddb1b7"
        ],
        [
            "Require Import bdd2.",
            "VernacRequire",
            "fc7fe718a45de74f8628c84379872e19aab95145"
        ],
        [
            "Require Import bdd3.",
            "VernacRequire",
            "95f3e899c409f5147a2e5ffb6cff783e84759a38"
        ],
        [
            "Require Import bdd4.",
            "VernacRequire",
            "b5ef55533b9f5bd8b43ccb8df189a285dcb3ba46"
        ],
        [
            "Definition BDDneg_memo_OK_1 (cfg : BDDconfig) (memo : BDDneg_memo) := forall (node node' : ad) (bound : nat), config_node_OK cfg node -> BDDneg_memo_lookup memo node = Some node' -> (is_internal_node cfg node -> nat_of_N (var cfg node) < bound) -> BDDneg_2 cfg node bound = (cfg, node').",
            "VernacDefinition",
            "f71999e71f603727d2288d848ede7db69245a0ea"
        ],
        [
            "Definition BDDneg_memo_OK_2 (cfg : BDDconfig) (memo : BDDneg_memo) := forall (node node' : ad) (bound : nat), BDDneg_memo_lookup memo node = Some node' -> (is_internal_node cfg node -> nat_of_N (var cfg node) < bound) -> config_node_OK cfg node /\\ BDDneg_2 cfg node bound = (cfg, node').",
            "VernacDefinition",
            "4bae85fa056263dbfa2ca8ca680ab5ed91e66fb5"
        ],
        [
            "Fixpoint BDDneg_1 (arg : BDDconfig * ad * BDDneg_memo) (bound : nat) {struct bound} : BDDconfig * ad * BDDneg_memo := match BDDneg_memo_lookup (snd arg) (snd (fst arg)) with | Some node => (fst (fst arg), node, snd arg) | None => match MapGet _ (fst (fst (fst arg))) (snd (fst arg)) with | None => if Neqb (snd (fst arg)) BDDzero then (fst (fst arg), BDDone, BDDneg_memo_put (snd arg) BDDzero BDDone) else (fst (fst arg), BDDzero, BDDneg_memo_put (snd arg) BDDone BDDzero) | Some (x, (l, r)) => match bound with | O => (initBDDconfig, BDDzero, newMap ad) | S bound' => (BDDmake (fst (fst (BDDneg_1 (fst (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound')), r, snd (BDDneg_1 (fst (fst arg), l, snd arg) bound')) bound'))) x (snd (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound'))) (snd (fst (BDDneg_1 (fst (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound')), r, snd (BDDneg_1 (fst (fst arg), l, snd arg) bound')) bound'))), BDDneg_memo_put (snd (BDDneg_1 (fst (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound')), r, snd (BDDneg_1 (fst (fst arg), l, snd arg) bound')) bound')) (snd (fst arg)) (snd (BDDmake (fst (fst (BDDneg_1 (fst (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound')), r, snd (BDDneg_1 (fst (fst arg), l, snd arg) bound')) bound'))) x (snd (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound'))) (snd (fst (BDDneg_1 (fst (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound')), r, snd (BDDneg_1 (fst (fst arg), l, snd arg) bound')) bound')))))) end end end.",
            "VernacFixpoint",
            "d7202b61eec66202e8eec2ce777579b6b5ef6394"
        ],
        [
            "Lemma BDDneg_1_lemma_1 : forall (arg : BDDconfig * ad * BDDneg_memo) (node : ad) (bound : nat), BDDneg_memo_lookup (snd arg) (snd (fst arg)) = Some node -> BDDneg_1 arg bound = (fst (fst arg), node, snd arg).",
            "VernacStartTheoremProof",
            "1b7b12d2186d25e97953f15d62bee04685b8d5d1"
        ],
        [
            "intro arg.",
            "VernacExtend",
            "25042bdf63c32eca0c6414f4f9208b4f7c999ab1"
        ],
        [
            "elim arg.",
            "VernacExtend",
            "3cfe3c1dd76476de59d49250658316498c4abefe"
        ],
        [
            "clear arg.",
            "VernacExtend",
            "2b83ebf9336da84d00f9c6a5233941f576db499d"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "elim y; clear y.",
            "VernacExtend",
            "cbe96a70211e95b8dd0d74d130ec9269c538587a"
        ],
        [
            "intros cfg node memo node' bound.",
            "VernacExtend",
            "6db67f8ef355268c4932f74f91d67a8d6c0ba9e5"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "unfold BDDneg_1 in |- *.",
            "VernacExtend",
            "de9006d1f2bc68ac54de38cd8ff19a64aed3743c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "elim bound; rewrite H; simpl in |- *.",
            "VernacExtend",
            "53ee08ed2e1bfd19b9bb7ccfe943a226d5261733"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDneg_1_lemma_2 : forall (arg : BDDconfig * ad * BDDneg_memo) (bound : nat), BDDneg_memo_lookup (snd arg) (snd (fst arg)) = None -> MapGet _ (fst (fst (fst arg))) (snd (fst arg)) = None -> BDDneg_1 arg bound = (if Neqb (snd (fst arg)) BDDzero then (fst (fst arg), BDDone, BDDneg_memo_put (snd arg) BDDzero BDDone) else (fst (fst arg), BDDzero, BDDneg_memo_put (snd arg) BDDone BDDzero)).",
            "VernacStartTheoremProof",
            "d13c5c6a90a7e238b37d1388245b17e717736159"
        ],
        [
            "intro arg.",
            "VernacExtend",
            "25042bdf63c32eca0c6414f4f9208b4f7c999ab1"
        ],
        [
            "elim arg.",
            "VernacExtend",
            "3cfe3c1dd76476de59d49250658316498c4abefe"
        ],
        [
            "clear arg; intro y.",
            "VernacExtend",
            "db7ad6dd579a9c22fc23d5c56b1ad61a0d152be8"
        ],
        [
            "elim y; clear y.",
            "VernacExtend",
            "cbe96a70211e95b8dd0d74d130ec9269c538587a"
        ],
        [
            "intros cfg node memo bound.",
            "VernacExtend",
            "c54154be3cdda5260e6fd0f94f0123aa418a408e"
        ],
        [
            "intros H H0.",
            "VernacExtend",
            "90bdfc30bf7350754c3a8a5cfe1259219564aa47"
        ],
        [
            "unfold BDDneg_1 in |- *.",
            "VernacExtend",
            "de9006d1f2bc68ac54de38cd8ff19a64aed3743c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "elim bound; rewrite H; simpl in |- *.",
            "VernacExtend",
            "53ee08ed2e1bfd19b9bb7ccfe943a226d5261733"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "rewrite H0; reflexivity.",
            "VernacExtend",
            "cd5b756ada779c32b8ad69248fcdcefea6ce8479"
        ],
        [
            "fold BDDneg_1 in |- *.",
            "VernacExtend",
            "61429cbd2e7a786afe2e55027a833690a81e6ddb"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDneg_1_lemma_3 : forall (arg : BDDconfig * ad * BDDneg_memo) (x : BDDvar) (l r : ad), BDDneg_memo_lookup (snd arg) (snd (fst arg)) = None -> MapGet _ (fst (fst (fst arg))) (snd (fst arg)) = Some (x, (l, r)) -> BDDneg_1 arg 0 = (initBDDconfig, BDDzero, newMap ad).",
            "VernacStartTheoremProof",
            "54dccebbba305ccf47fff0dd9622bd9e66e75a1e"
        ],
        [
            "intro arg.",
            "VernacExtend",
            "25042bdf63c32eca0c6414f4f9208b4f7c999ab1"
        ],
        [
            "elim arg.",
            "VernacExtend",
            "3cfe3c1dd76476de59d49250658316498c4abefe"
        ],
        [
            "clear arg; intro y.",
            "VernacExtend",
            "db7ad6dd579a9c22fc23d5c56b1ad61a0d152be8"
        ],
        [
            "elim y; clear y.",
            "VernacExtend",
            "cbe96a70211e95b8dd0d74d130ec9269c538587a"
        ],
        [
            "intros cfg node memo x l r.",
            "VernacExtend",
            "e8e177cc21868ca25c85697b3828a644358cb614"
        ],
        [
            "intros H H0.",
            "VernacExtend",
            "90bdfc30bf7350754c3a8a5cfe1259219564aa47"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in H, H0.",
            "VernacExtend",
            "9fd9352f01eb8c0c7aebee76645558e0f75b36e6"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat_sum : forall n : nat, {m : nat | n = S m} + {n = 0}.",
            "VernacStartTheoremProof",
            "09b8e32d8b50ffde2375b2411a7a1d2fd1279768"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros n0 H.",
            "VernacExtend",
            "4150d95d7e6024508a0b3fe3b3eacfb4e9641d61"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "split with n0.",
            "VernacExtend",
            "f2b17c0ff0d73b343a3294e149f01f0c06db2ab6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDneg_1_lemma_4 : forall (arg : BDDconfig * ad * BDDneg_memo) (x : BDDvar) (l r : ad) (bound bound' : nat), bound = S bound' -> BDDneg_memo_lookup (snd arg) (snd (fst arg)) = None -> MapGet _ (fst (fst (fst arg))) (snd (fst arg)) = Some (x, (l, r)) -> BDDneg_1 arg bound = (BDDmake (fst (fst (BDDneg_1 (fst (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound')), r, snd (BDDneg_1 (fst (fst arg), l, snd arg) bound')) bound'))) x (snd (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound'))) (snd (fst (BDDneg_1 (fst (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound')), r, snd (BDDneg_1 (fst (fst arg), l, snd arg) bound')) bound'))), BDDneg_memo_put (snd (BDDneg_1 (fst (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound')), r, snd (BDDneg_1 (fst (fst arg), l, snd arg) bound')) bound')) (snd (fst arg)) (snd (BDDmake (fst (fst (BDDneg_1 (fst (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound')), r, snd (BDDneg_1 (fst (fst arg), l, snd arg) bound')) bound'))) x (snd (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound'))) (snd (fst (BDDneg_1 (fst (fst (BDDneg_1 (fst (fst arg), l, snd arg) bound')), r, snd (BDDneg_1 (fst (fst arg), l, snd arg) bound')) bound')))))).",
            "VernacStartTheoremProof",
            "316395d09d105b61d37fd45978e1b9e67cc41e02"
        ],
        [
            "intro arg.",
            "VernacExtend",
            "25042bdf63c32eca0c6414f4f9208b4f7c999ab1"
        ],
        [
            "elim arg.",
            "VernacExtend",
            "3cfe3c1dd76476de59d49250658316498c4abefe"
        ],
        [
            "clear arg; intro y.",
            "VernacExtend",
            "db7ad6dd579a9c22fc23d5c56b1ad61a0d152be8"
        ],
        [
            "elim y; clear y.",
            "VernacExtend",
            "cbe96a70211e95b8dd0d74d130ec9269c538587a"
        ],
        [
            "intros cfg node memo x l r.",
            "VernacExtend",
            "e8e177cc21868ca25c85697b3828a644358cb614"
        ],
        [
            "intros bound bound' H H0 H1.",
            "VernacExtend",
            "af554bcf5d689b55668a037aa219cef8df6bf20d"
        ],
        [
            "elim (nat_sum bound).",
            "VernacExtend",
            "50202de53d731af0e23f84cc283c3251d916adb3"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "elim y; clear y; intros x0 y.",
            "VernacExtend",
            "3f58410a066ac41ca51258e6cef8cd5df4384a75"
        ],
        [
            "rewrite H in y.",
            "VernacExtend",
            "bc06ac5d6c2eb3ca63500007f8ef8842f9b4d5cf"
        ],
        [
            "injection y; intro.",
            "VernacExtend",
            "3cb1acccb6042f45c96765f3341c4a7743c8cee3"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in H0, H1.",
            "VernacExtend",
            "ad66d190184bac82449653c9a526e7e1630d6bbd"
        ],
        [
            "rewrite H0; rewrite H1.",
            "VernacExtend",
            "85e84d2667b53456606ab747d4b84d4de959182c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "rewrite H in y; discriminate.",
            "VernacExtend",
            "697886293a9a324cfc2af315f6372bb155cd1d20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_restrict_neg_1 : forall (bf : bool_fun) (x : BDDvar) (b : bool), bool_fun_ext bf -> bool_fun_eq (bool_fun_restrict (bool_fun_neg bf) x b) (bool_fun_neg (bool_fun_restrict bf x b)).",
            "VernacStartTheoremProof",
            "c13e70088117b36d2b413c4760cf0d69e6bfb944"
        ],
        [
            "intros bf x b H.",
            "VernacExtend",
            "2295c0bef38a2e6a854317c269e7935d6f47c107"
        ],
        [
            "unfold bool_fun_eq in |- *.",
            "VernacExtend",
            "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
        ],
        [
            "unfold bool_fun_restrict in |- *.",
            "VernacExtend",
            "8f5a662d1228cd59b9d9d647a9421f5c9c13ed3a"
        ],
        [
            "unfold bool_fun_eval at 2 in |- *.",
            "VernacExtend",
            "a01d76ee143abfd8a20820a2fdf5f30af7305aaf"
        ],
        [
            "intro vb.",
            "VernacExtend",
            "e8b7ec7490ece50e805b33900ace150891cc88ee"
        ],
        [
            "unfold bool_fun_neg in |- *.",
            "VernacExtend",
            "fc81b6ba190e5bb526dd990028e9774968c42997"
        ],
        [
            "unfold bool_fun_eval at 3 in |- *.",
            "VernacExtend",
            "7d25b95f68c4d3f9f4aaf018494f44da94339855"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_fun_neg_eq_var_2 : forall (cfg : BDDconfig) (node node' : ad), BDDconfig_OK cfg -> is_internal_node cfg node -> is_internal_node cfg node' -> bool_fun_eq (bool_fun_of_BDD cfg node') (bool_fun_neg (bool_fun_of_BDD cfg node)) -> var cfg node = var cfg node'.",
            "VernacStartTheoremProof",
            "6079151f0c4bcecec70a0583228f101c7990598a"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y; elim y; clear y; intros share counter.",
            "VernacExtend",
            "24beaff02db6975e92561e9dc04313085e6e7903"
        ],
        [
            "intros node node' H H0 H1 H2.",
            "VernacExtend",
            "0f3653298d7c2e4b3940c9981025b137d8c3b932"
        ],
        [
            "cut (BDDconfig_OK (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) /\\ (forall (x : BDDvar) (l r a : ad), MapGet _ (fst (bs, (share, counter))) a = Some (x, (l, r)) -> MapGet _ (fst (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))))) a = Some (x, (l, r))) /\\ (is_internal_node (bs, (share, counter)) node -> is_internal_node (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) /\\ var (bs, (share, counter)) node = var (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))))) /\\ config_node_OK (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))))) (bool_fun_neg (bool_fun_of_BDD (bs, (share, counter)) node))).",
            "VernacExtend",
            "00601f4261a0ab70f39d6e807ece2c9b69216af7"
        ],
        [
            "intro H3.",
            "VernacExtend",
            "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
        ],
        [
            "cut (var (bs, (share, counter)) node' = var (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) node').",
            "VernacExtend",
            "21103825383c4b86a3edf73295c5a46c3684b421"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "cut (var (bs, (share, counter)) node = var (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))))).",
            "VernacExtend",
            "81258574b74a33f3e2e526b9f955ee29abd50638"
        ],
        [
            "intro H5.",
            "VernacExtend",
            "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "cut (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))) = node').",
            "VernacExtend",
            "4f56a56ef6c6b9a4fec453893d77ecbc68f04a90"
        ],
        [
            "intro H6.",
            "VernacExtend",
            "78ab87e2608ab6290c463d6d32d90c8aabbd5eaa"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply BDDunique with (cfg := fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))).",
            "VernacExtend",
            "a9ed57fe6abea1eb03cbe3a5c94688ff7c1bc05f"
        ],
        [
            "exact (proj1 H3).",
            "VernacExtend",
            "24f9df2f781dcbe0908822a0607039dfade19cc3"
        ],
        [
            "exact (proj1 (proj2 (proj2 (proj2 H3)))).",
            "VernacExtend",
            "b973f47cacbe2fa6064d0fb7e80ed4662eaece1a"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "inversion H6.",
            "VernacExtend",
            "91475f7cc5dc394b5f8e34c38f1f3fae3256b731"
        ],
        [
            "inversion H7.",
            "VernacExtend",
            "42a5ca7b50f733735ed76a249aba00e788a69623"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold in_dom in |- *.",
            "VernacExtend",
            "72f928df3e3c19d4381dea5e9bd4414e3b95a02f"
        ],
        [
            "rewrite (proj1 (proj2 H3) x x0 x1 node' H8).",
            "VernacExtend",
            "d25c9655f54be3465fc3d670574e627ff92b0172"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_neg (bool_fun_of_BDD (bs, (share, counter)) node)).",
            "VernacExtend",
            "df016e5abc0ad1fa2d5432e5ba9833e463b9a72d"
        ],
        [
            "exact (proj2 (proj2 (proj2 (proj2 H3)))).",
            "VernacExtend",
            "dce2a9b33ac3997de954f0b358a5ed192667afc0"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs, (share, counter)) node').",
            "VernacExtend",
            "cce4eaf112721ed37aa769e8b2a49023df3d09fd"
        ],
        [
            "apply bool_fun_eq_symm; assumption.",
            "VernacExtend",
            "fd46031de504c74c266b17505de12795fb5a5a62"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_preservation.",
            "VernacExtend",
            "bb935c1aeadb7f1a746773ba143efe17ba7380de"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exact (proj1 H3).",
            "VernacExtend",
            "24f9df2f781dcbe0908822a0607039dfade19cc3"
        ],
        [
            "exact (proj1 (proj2 H3)).",
            "VernacExtend",
            "e82e0a8f4c8816a94c036a1fe2e231e9ca0b38db"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold in_dom in |- *.",
            "VernacExtend",
            "72f928df3e3c19d4381dea5e9bd4414e3b95a02f"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "inversion H6.",
            "VernacExtend",
            "91475f7cc5dc394b5f8e34c38f1f3fae3256b731"
        ],
        [
            "inversion H7.",
            "VernacExtend",
            "42a5ca7b50f733735ed76a249aba00e788a69623"
        ],
        [
            "rewrite H8; reflexivity.",
            "VernacExtend",
            "a15d47186a859d43bc96f0239c852d1e1bf058d3"
        ],
        [
            "exact (proj2 (proj1 (proj2 (proj2 H3)) H0)).",
            "VernacExtend",
            "30f4c18752b48e4227b99a5e8039f488f59db77e"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "inversion H4.",
            "VernacExtend",
            "184e412874313f14014d688ef3b69568302d00ff"
        ],
        [
            "inversion H5.",
            "VernacExtend",
            "c72c29a0eff26255c8a4846e1794fb6f7559049a"
        ],
        [
            "unfold var at 1 2 in |- *.",
            "VernacExtend",
            "c8d1e50798c1bc5a01eb9d55651321ad3470cdca"
        ],
        [
            "rewrite (proj1 (proj2 H3) x x0 x1 node' H6).",
            "VernacExtend",
            "80bd48b6eef5543209454109bd9432d6c4db9396"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply BDDneg_2_lemma.",
            "VernacExtend",
            "eb0a056c21033cf4e1981eef4b1910d12d7d837a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "inversion H3.",
            "VernacExtend",
            "129aa425681b58d2ed0d3637122128b1b28fd63b"
        ],
        [
            "inversion H4.",
            "VernacExtend",
            "184e412874313f14014d688ef3b69568302d00ff"
        ],
        [
            "unfold in_dom in |- *; rewrite H5; reflexivity.",
            "VernacExtend",
            "fd38eb51e32858722023f6e668bbb52303cc995d"
        ],
        [
            "intro H3.",
            "VernacExtend",
            "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
        ],
        [
            "unfold lt in |- *.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDneg_memo_OK_1_lemma_1_1_1 : forall (bound : nat) (cfg : BDDconfig) (node node' : ad), BDDconfig_OK cfg -> config_node_OK cfg node -> config_node_OK cfg node' -> (is_internal_node cfg node -> nat_of_N (var cfg node) < bound) -> bool_fun_eq (bool_fun_of_BDD cfg node') (bool_fun_neg (bool_fun_of_BDD cfg node)) -> BDDneg_2 cfg node bound = (cfg, node').",
            "VernacStartTheoremProof",
            "decf2d55dda3b409a5a6ab559c26fb930c74a8f8"
        ],
        [
            "intro bound.",
            "VernacExtend",
            "7bd8536c2f7ab58865ac8c1c3ad84f2f2c1ed01e"
        ],
        [
            "apply lt_wf_ind with (P := fun bound : nat => forall (cfg : BDDconfig) (node node' : ad), BDDconfig_OK cfg -> config_node_OK cfg node -> config_node_OK cfg node' -> (is_internal_node cfg node -> nat_of_N (var cfg node) < bound) -> bool_fun_eq (bool_fun_of_BDD cfg node') (bool_fun_neg (bool_fun_of_BDD cfg node)) -> BDDneg_2 cfg node bound = (cfg, node')).",
            "VernacExtend",
            "b3df1262d5001cf0fda4e7d625b85975aff6705d"
        ],
        [
            "intros n H.",
            "VernacExtend",
            "348ce37d2f619b733a523bd998a06fecedcf3fc4"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y; elim y; clear y; intros share counter.",
            "VernacExtend",
            "24beaff02db6975e92561e9dc04313085e6e7903"
        ],
        [
            "intros node node' H0 H1 H2 H3 H4.",
            "VernacExtend",
            "334cef76097a618a19a22c06832e0795413aba61"
        ],
        [
            "elim H1; intro.",
            "VernacExtend",
            "69e6dce0928c10bc8e91776963343c6dbf299832"
        ],
        [
            "cut (node' = BDDone).",
            "VernacExtend",
            "c16be766bf4f0866184c6a4b3cfcfa948b209e87"
        ],
        [
            "intro H6.",
            "VernacExtend",
            "78ab87e2608ab6290c463d6d32d90c8aabbd5eaa"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "unfold BDDneg_2 in |- *.",
            "VernacExtend",
            "f0f6f78910c3cd645d864a1595bbc545a411c186"
        ],
        [
            "rewrite (config_OK_zero (bs, (share, counter)) H0).",
            "VernacExtend",
            "1ad2ea8c59fcd88a63a52dea3f9c2ff173046a0a"
        ],
        [
            "cut (Neqb BDDzero BDDzero = true).",
            "VernacExtend",
            "21d4d7fdc2ce86042497fcf2bf32b09bdc62b9e8"
        ],
        [
            "intro H7.",
            "VernacExtend",
            "fdf814253dc825557adb6789b752d060ee4394be"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply Neqb_correct.",
            "VernacExtend",
            "44ce40dca1a752c4f29effe8c09acf1cbe16e2b0"
        ],
        [
            "intros n0 H7.",
            "VernacExtend",
            "e323493c8a49f1f78eb0a9359ec62b4d71d48e53"
        ],
        [
            "unfold BDDneg_2 in |- *.",
            "VernacExtend",
            "f0f6f78910c3cd645d864a1595bbc545a411c186"
        ],
        [
            "fold BDDneg_2 in |- *.",
            "VernacExtend",
            "dbb76b54a49549110cc606dea3f5fd19127e6884"
        ],
        [
            "rewrite (config_OK_zero (bs, (share, counter)) H0).",
            "VernacExtend",
            "1ad2ea8c59fcd88a63a52dea3f9c2ff173046a0a"
        ],
        [
            "cut (Neqb BDDzero BDDzero = true).",
            "VernacExtend",
            "21d4d7fdc2ce86042497fcf2bf32b09bdc62b9e8"
        ],
        [
            "intro H8.",
            "VernacExtend",
            "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply Neqb_correct.",
            "VernacExtend",
            "44ce40dca1a752c4f29effe8c09acf1cbe16e2b0"
        ],
        [
            "rewrite H5 in H4.",
            "VernacExtend",
            "6fb256c69b1bac2a844704df965e932f551f8484"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0)) in H4.",
            "VernacExtend",
            "4a07f0f06ce402923edfe5aefe9f4479d8e70423"
        ],
        [
            "rewrite bool_fun_neg_zero in H4.",
            "VernacExtend",
            "76f2223d886872d2fb83d38a6e3d08033ab7e5d0"
        ],
        [
            "rewrite <- (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0))) in H4.",
            "VernacExtend",
            "5a7311b9cfbb9b15e30e7c0bf89ab2f99ab8c262"
        ],
        [
            "apply BDDunique with (cfg := (bs, (share, counter))).",
            "VernacExtend",
            "bcbc683f16bcc237041f4980dc3acdcddde8a3f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right; left; reflexivity.",
            "VernacExtend",
            "5a118052bb4917388678099c35ce2082d23a96c2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H5; clear H5; intro.",
            "VernacExtend",
            "55a6aaa84fde74faefd4706ae7b7019790068c7a"
        ],
        [
            "cut (node' = BDDzero).",
            "VernacExtend",
            "363a5f709243934bc6b00d5a5f30231821239f05"
        ],
        [
            "intro H6.",
            "VernacExtend",
            "78ab87e2608ab6290c463d6d32d90c8aabbd5eaa"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "unfold BDDneg_2 in |- *.",
            "VernacExtend",
            "f0f6f78910c3cd645d864a1595bbc545a411c186"
        ],
        [
            "rewrite (config_OK_one (bs, (share, counter)) H0).",
            "VernacExtend",
            "2163cda5220bcc1d7cb89b1387c8fa57f1ccf500"
        ],
        [
            "cut (Neqb BDDone BDDzero = false).",
            "VernacExtend",
            "72221279cee8347a9b807f0330cdee5095ad9123"
        ],
        [
            "intro H7.",
            "VernacExtend",
            "fdf814253dc825557adb6789b752d060ee4394be"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros n0 H7.",
            "VernacExtend",
            "e323493c8a49f1f78eb0a9359ec62b4d71d48e53"
        ],
        [
            "unfold BDDneg_2 in |- *.",
            "VernacExtend",
            "f0f6f78910c3cd645d864a1595bbc545a411c186"
        ],
        [
            "fold BDDneg_2 in |- *.",
            "VernacExtend",
            "dbb76b54a49549110cc606dea3f5fd19127e6884"
        ],
        [
            "rewrite (config_OK_one (bs, (share, counter)) H0).",
            "VernacExtend",
            "2163cda5220bcc1d7cb89b1387c8fa57f1ccf500"
        ],
        [
            "cut (Neqb BDDone BDDzero = false).",
            "VernacExtend",
            "72221279cee8347a9b807f0330cdee5095ad9123"
        ],
        [
            "intro H8.",
            "VernacExtend",
            "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite H5 in H4.",
            "VernacExtend",
            "6fb256c69b1bac2a844704df965e932f551f8484"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0))) in H4.",
            "VernacExtend",
            "ab22a726ccd452dc8a1b5b75bbfd5c452b3d1c48"
        ],
        [
            "rewrite bool_fun_neg_one in H4.",
            "VernacExtend",
            "67af31ea9cedb564f2fc6eeffedec57c7986d2b5"
        ],
        [
            "rewrite <- (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0)) in H4.",
            "VernacExtend",
            "052a1e745526e808f5b4244d38176d8e638ef686"
        ],
        [
            "apply BDDunique with (cfg := (bs, (share, counter))).",
            "VernacExtend",
            "bcbc683f16bcc237041f4980dc3acdcddde8a3f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left; reflexivity.",
            "VernacExtend",
            "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim (nat_sum n); intro y.",
            "VernacExtend",
            "b25d9f6f71355a56760c5944e228209f886737ee"
        ],
        [
            "elim y; clear y.",
            "VernacExtend",
            "cbe96a70211e95b8dd0d74d130ec9269c538587a"
        ],
        [
            "intros m H6.",
            "VernacExtend",
            "6d8f3806638ffa67648f888064cfa06e539b3668"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cut (is_internal_node (bs, (share, counter)) node).",
            "VernacExtend",
            "b3132957a13adc28efb68a3d31a845c7073ba512"
        ],
        [
            "intro H7.",
            "VernacExtend",
            "fdf814253dc825557adb6789b752d060ee4394be"
        ],
        [
            "inversion H7.",
            "VernacExtend",
            "42a5ca7b50f733735ed76a249aba00e788a69623"
        ],
        [
            "inversion H8.",
            "VernacExtend",
            "bd1054a31f838f58a763ae9f4c46f33682fb2e03"
        ],
        [
            "inversion H9.",
            "VernacExtend",
            "ba06d75575d77a771abfe438435f8748713f713e"
        ],
        [
            "simpl in H10.",
            "VernacExtend",
            "6acaa2af25fff35ccd9e9f70e896f9c83855b8e6"
        ],
        [
            "rewrite H10.",
            "VernacExtend",
            "cd2638bc5a7f85648c5e2c9d77046abc07e2da6a"
        ],
        [
            "cut (is_internal_node (bs, (share, counter)) node').",
            "VernacExtend",
            "75503d606ac7ca2181ab872dd1c3d343a192c28e"
        ],
        [
            "intro H11.",
            "VernacExtend",
            "94ccd5954f5b20492a368275203c835bb786888f"
        ],
        [
            "inversion H11.",
            "VernacExtend",
            "e3dad2cd24e24300a066e006efd8d61e85377ebb"
        ],
        [
            "inversion H12.",
            "VernacExtend",
            "d5ec1d67ecbf066a6575bda368738e1ad0dbbc60"
        ],
        [
            "inversion H13.",
            "VernacExtend",
            "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
        ],
        [
            "clear H8 H9 H12 H13.",
            "VernacExtend",
            "ad51602abbd1ae5cd6b36d1f96dc8a85afdb45d1"
        ],
        [
            "cut (BDDneg_2 (bs, (share, counter)) x0 m = (bs, (share, counter), x3)).",
            "VernacExtend",
            "65f39e9581f0c70cd76f8cdddac4eef3021e1a67"
        ],
        [
            "intro H8.",
            "VernacExtend",
            "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cut (BDDneg_2 (bs, (share, counter)) x1 m = (bs, (share, counter), x4)).",
            "VernacExtend",
            "248f8d12ec295c1c2311906045fa67dabd2e03a0"
        ],
        [
            "intro H9.",
            "VernacExtend",
            "3a5cee2c4602853379bc498c20515b4b8bb64031"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold BDDmake in |- *.",
            "VernacExtend",
            "e024e21e57cdcb68e3fdabd2e39cd91b67231b0f"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cut (Neqb x3 x4 = false).",
            "VernacExtend",
            "10ee221049523039091c75aa357c69b2e216135f"
        ],
        [
            "intro H12.",
            "VernacExtend",
            "afc6629c474ec2e325da340fcb3a46ec73eead51"
        ],
        [
            "rewrite H12.",
            "VernacExtend",
            "808735886b50c5c4d7707b33984e66555647a2a9"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "intros H13 H15.",
            "VernacExtend",
            "d4d3d2759be8f1924d0e37bc24a5fe95e7a26372"
        ],
        [
            "unfold BDDsharing_OK in H15.",
            "VernacExtend",
            "282dcb4d4f061851765f1421bac725446085a554"
        ],
        [
            "cut (x = x2).",
            "VernacExtend",
            "36460008cbc0b94e842c9fe0956cbf85189982ae"
        ],
        [
            "intro H16.",
            "VernacExtend",
            "c16d9f76387f574dd166fbfa7eb1ba04610dff17"
        ],
        [
            "rewrite H16.",
            "VernacExtend",
            "d46611b9926d3411ed586aec14fbb4de59848bae"
        ],
        [
            "rewrite (proj2 (proj1 H15 x2 x3 x4 node') H14).",
            "VernacExtend",
            "59435abdb090ac0fe5158bfc16a9b92f35d6a85e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "cut (x = var (bs, (share, counter)) node).",
            "VernacExtend",
            "c5769f6dca04999df36893e51fddcf8e76ae2e58"
        ],
        [
            "cut (x2 = var (bs, (share, counter)) node').",
            "VernacExtend",
            "358df969b770164fe9cb6bc6d1c6d3dbb4594184"
        ],
        [
            "intros H16 H17.",
            "VernacExtend",
            "070a46417e8e4048bf752eaf9a8d2ee7fd3510d4"
        ],
        [
            "rewrite H16.",
            "VernacExtend",
            "d46611b9926d3411ed586aec14fbb4de59848bae"
        ],
        [
            "rewrite H17.",
            "VernacExtend",
            "05ed26bf77cdb384d29c02889c582eb23b3f955e"
        ],
        [
            "apply bool_fun_neg_eq_var_2 with (cfg := (bs, (share, counter))).",
            "VernacExtend",
            "07e6ee5665f8f06c8f258731d7c3e72848a8f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold var in |- *.",
            "VernacExtend",
            "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
        ],
        [
            "rewrite H14.",
            "VernacExtend",
            "b53d81c05d6007e728db7abfa7c98c200268f9e7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold var in |- *.",
            "VernacExtend",
            "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
        ],
        [
            "simpl in |- *; rewrite H10; reflexivity.",
            "VernacExtend",
            "21be9a2c55e5359efebbf3e537c6aa9238b3aeb8"
        ],
        [
            "cut (x3 = low (bs, (share, counter)) node').",
            "VernacExtend",
            "0a070d502d9d2625875441616a42e0a4d4a15bd7"
        ],
        [
            "cut (x4 = high (bs, (share, counter)) node').",
            "VernacExtend",
            "e40080ef428eb26dbf89e053e1103cecc25e9f74"
        ],
        [
            "intros H12 H13.",
            "VernacExtend",
            "e0dd55c9e1248584e48afcfdb8ca96e7939013e1"
        ],
        [
            "rewrite H13.",
            "VernacExtend",
            "bc2d32522e887645239b994008e234c058557cd9"
        ],
        [
            "rewrite H12.",
            "VernacExtend",
            "808735886b50c5c4d7707b33984e66555647a2a9"
        ],
        [
            "apply low_high_neq.",
            "VernacExtend",
            "5bbc81050d70154e424751b43b474476254f8c37"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold high in |- *; rewrite H14; reflexivity.",
            "VernacExtend",
            "485b89e8fcfc8a6a27f0957b0994bbc664065bbf"
        ],
        [
            "unfold low in |- *; rewrite H14; reflexivity.",
            "VernacExtend",
            "ef4bec85740ae26c5f74505c9e2b9e1a055a622f"
        ],
        [
            "cut (x1 = high (bs, (share, counter)) node).",
            "VernacExtend",
            "152c949a8832dad6aad7fe417753fcdad491c02f"
        ],
        [
            "cut (x4 = high (bs, (share, counter)) node').",
            "VernacExtend",
            "e40080ef428eb26dbf89e053e1103cecc25e9f74"
        ],
        [
            "intros H9 H12.",
            "VernacExtend",
            "dac8c34c3de2ead9f890c6aa41366dcfe55e6480"
        ],
        [
            "rewrite H9; rewrite H12.",
            "VernacExtend",
            "e567c49dcf344fc4096545a61df8b180037e57d9"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "unfold lt in |- *.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro H13.",
            "VernacExtend",
            "feb8e9eb0f7422cc52051473f8890af27e8240ca"
        ],
        [
            "apply lt_trans_1 with (y := nat_of_N (var (bs, (share, counter)) node)).",
            "VernacExtend",
            "c97e3366eb7cfd33d3d6c89b7934bee007a6780a"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_high.",
            "VernacExtend",
            "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H6; apply H3.",
            "VernacExtend",
            "e303eef8d7c871ad67e0b4b1fb78bcb5af2d0d14"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node') (var (bs, (share, counter)) node') true).",
            "VernacExtend",
            "9e0f8b8a8dd68984d5bbc3b9c5db56cb554627cf"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_neg (bool_fun_of_BDD (bs, (share, counter)) node)) (var (bs, (share, counter)) node') true).",
            "VernacExtend",
            "f644b4baa10dc269847862140ab168161e83967c"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (var (bs, (share, counter)) node = var (bs, (share, counter)) node').",
            "VernacExtend",
            "8ce582871e80fcb9df319ebf48b21f554483c0a0"
        ],
        [
            "intro H13.",
            "VernacExtend",
            "feb8e9eb0f7422cc52051473f8890af27e8240ca"
        ],
        [
            "rewrite <- H13.",
            "VernacExtend",
            "6c85a10bc571ed18b4943b05e16b8e82ed668a71"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_neg (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true)).",
            "VernacExtend",
            "5372daee572125c119ae1c4186c5e7b83cbd50f1"
        ],
        [
            "apply bool_fun_restrict_neg_1.",
            "VernacExtend",
            "dd50a0f15997e2582463ed4e709da7f4d6037a0b"
        ],
        [
            "apply bool_fun_of_BDD_ext.",
            "VernacExtend",
            "b4ca4bcdc77510aa1141d8e839805305e49722a4"
        ],
        [
            "apply bool_fun_eq_neg_1.",
            "VernacExtend",
            "69d3915abefc36d8120b98cbdd9c97178dccb557"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_of_BDDhigh.",
            "VernacExtend",
            "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_neg_eq_var_2.",
            "VernacExtend",
            "e02dbe0b934bd3bdcf21dfe0539291d42fb355f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold high in |- *; rewrite H14; reflexivity.",
            "VernacExtend",
            "485b89e8fcfc8a6a27f0957b0994bbc664065bbf"
        ],
        [
            "unfold high in |- *; simpl in |- *; rewrite H10; reflexivity.",
            "VernacExtend",
            "48869d1baec18dd4e9aeab560d48fef5831c7960"
        ],
        [
            "cut (x0 = low (bs, (share, counter)) node).",
            "VernacExtend",
            "1b5ccb871d4aa267fd27180a2a6e54c6f61a8501"
        ],
        [
            "cut (x3 = low (bs, (share, counter)) node').",
            "VernacExtend",
            "0a070d502d9d2625875441616a42e0a4d4a15bd7"
        ],
        [
            "intros H8 H9.",
            "VernacExtend",
            "f720374270a7af876475ce0f9bf0d300f82ebc9a"
        ],
        [
            "rewrite H8; rewrite H9.",
            "VernacExtend",
            "34c5194029a4b43c0f6e311d2c8236ade96e5973"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "unfold lt in |- *.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros H12.",
            "VernacExtend",
            "38ce12dc49ef460d3f36340ad59c2d24672edb76"
        ],
        [
            "apply lt_trans_1 with (y := nat_of_N (var (bs, (share, counter)) node)).",
            "VernacExtend",
            "c97e3366eb7cfd33d3d6c89b7934bee007a6780a"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_low.",
            "VernacExtend",
            "ba66c15448aced83d225d0e66a0f593162c936e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H6; apply H3.",
            "VernacExtend",
            "e303eef8d7c871ad67e0b4b1fb78bcb5af2d0d14"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node') (var (bs, (share, counter)) node') false).",
            "VernacExtend",
            "d9e27601e61432dc30e1e8b6aa964e5125062029"
        ],
        [
            "apply bool_fun_of_BDDlow.",
            "VernacExtend",
            "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_neg (bool_fun_of_BDD (bs, (share, counter)) node)) (var (bs, (share, counter)) node') false).",
            "VernacExtend",
            "d7fe583ddb711875c140bba954b347c1bdadc2ea"
        ],
        [
            "apply bool_fun_restrict_eq.",
            "VernacExtend",
            "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (var (bs, (share, counter)) node = var (bs, (share, counter)) node').",
            "VernacExtend",
            "8ce582871e80fcb9df319ebf48b21f554483c0a0"
        ],
        [
            "intro H12.",
            "VernacExtend",
            "afc6629c474ec2e325da340fcb3a46ec73eead51"
        ],
        [
            "rewrite <- H12.",
            "VernacExtend",
            "535d97bd150861302e54cffeb5719d00d6f597bb"
        ],
        [
            "apply bool_fun_eq_trans with (bf2 := bool_fun_neg (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false)).",
            "VernacExtend",
            "921a945c3f4d869c97263452d8dcd3b7a21c5dd9"
        ],
        [
            "apply bool_fun_restrict_neg_1.",
            "VernacExtend",
            "dd50a0f15997e2582463ed4e709da7f4d6037a0b"
        ],
        [
            "apply bool_fun_of_BDD_ext.",
            "VernacExtend",
            "b4ca4bcdc77510aa1141d8e839805305e49722a4"
        ],
        [
            "apply bool_fun_eq_neg_1.",
            "VernacExtend",
            "69d3915abefc36d8120b98cbdd9c97178dccb557"
        ],
        [
            "apply bool_fun_eq_symm.",
            "VernacExtend",
            "73fa3a3a2497c0b386217306245e24d6a4156e53"
        ],
        [
            "apply bool_fun_of_BDDlow.",
            "VernacExtend",
            "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bool_fun_neg_eq_var_2.",
            "VernacExtend",
            "e02dbe0b934bd3bdcf21dfe0539291d42fb355f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold low in |- *; rewrite H14; reflexivity.",
            "VernacExtend",
            "ef4bec85740ae26c5f74505c9e2b9e1a055a622f"
        ],
        [
            "unfold low in |- *; simpl in |- *; rewrite H10; reflexivity.",
            "VernacExtend",
            "1903fad1bb827fa4bc7aa977b00ec1a3cbe7bf63"
        ],
        [
            "elim H2; intro.",
            "VernacExtend",
            "939c927788b9492b13127156d1f300437fdf7754"
        ],
        [
            "rewrite H11 in H4.",
            "VernacExtend",
            "2e728389d3597e8a81286fb837f180c571fd8cef"
        ],
        [
            "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0)) in H4.",
            "VernacExtend",
            "4a07f0f06ce402923edfe5aefe9f4479d8e70423"
        ],
        [
            "rewrite <- bool_fun_neg_one in H4.",
            "VernacExtend",
            "c559be99f12bc31b6d9ebc3821c807e2cda45f47"
        ],
        [
            "absurd (bool_fun_eq bool_fun_one (bool_fun_of_BDD (bs, (share, counter)) node)).",
            "VernacExtend",
            "96a360dd4d1335bc6021d659bdb71419584b7fe9"
        ],
        [
            "apply bool_fun_neq_lemma.",
            "VernacExtend",
            "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
        ],
        [
            "exact (proj2 (internal_node_not_constant (bs, (share, counter)) node H0 H7)).",
            "VernacExtend",
            "b656f2cd908065c9530220c1acb4f7608d42b501"
        ],
        [
            "apply bool_fun_eq_neg.",
            "VernacExtend",
            "3ff24d293fdb4c76e4925fdba5f476a24ced3f0c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H11; clear H11; intro.",
            "VernacExtend",
            "71ae67b6deaa8f93aeec1998eb0947adb39d0749"
        ],
        [
            "rewrite H11 in H4.",
            "VernacExtend",
            "2e728389d3597e8a81286fb837f180c571fd8cef"
        ],
        [
            "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0))) in H4.",
            "VernacExtend",
            "ab22a726ccd452dc8a1b5b75bbfd5c452b3d1c48"
        ],
        [
            "rewrite <- bool_fun_neg_zero in H4.",
            "VernacExtend",
            "0dd3a066a2049e6ccee0f3e0e3e858b0f634d191"
        ],
        [
            "absurd (bool_fun_eq bool_fun_zero (bool_fun_of_BDD (bs, (share, counter)) node)).",
            "VernacExtend",
            "affa7e7f91d53e7248717c1f5630d386e1c4e781"
        ],
        [
            "apply bool_fun_neq_lemma.",
            "VernacExtend",
            "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
        ],
        [
            "exact (proj1 (internal_node_not_constant (bs, (share, counter)) node H0 H7)).",
            "VernacExtend",
            "17483ab61b14f41aa91199e592e9d692b429d355"
        ],
        [
            "apply bool_fun_eq_neg.",
            "VernacExtend",
            "3ff24d293fdb4c76e4925fdba5f476a24ced3f0c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "absurd (nat_of_N (var (bs, (share, counter)) node) < n).",
            "VernacExtend",
            "5d3d1d8b5f3cab578c88198d602784abeb1ca893"
        ],
        [
            "rewrite y.",
            "VernacExtend",
            "981e1312d3ff196b34a8ce70ebd2fc1285cb160f"
        ],
        [
            "apply lt_n_O.",
            "VernacExtend",
            "913e93c160ca9fcb042f8969be299cf2131009e7"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply in_dom_is_internal.",
            "VernacExtend",
            "8e7d402fef228308cab9bd2067ca125148534513"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDneg_memo_OK_1_2 : forall (cfg : BDDconfig) (memo : BDDneg_memo), BDDneg_memo_OK_2 cfg memo -> BDDneg_memo_OK_1 cfg memo.",
            "VernacStartTheoremProof",
            "7e679574099335672a460f03f6b6d176aeac6191"
        ],
        [
            "unfold BDDneg_memo_OK_1 in |- *.",
            "VernacExtend",
            "e150dde0c3df72cb4514f5ac5e499f05cedb36ab"
        ],
        [
            "unfold BDDneg_memo_OK_2 in |- *.",
            "VernacExtend",
            "7c3ac249e556515bebc2929824e4a88573d12690"
        ],
        [
            "intros cfg memo H node node' bound H0 H1 H2.",
            "VernacExtend",
            "d78a6e8b9ff94519193ca1456b7f0a4370ba6256"
        ],
        [
            "exact (proj2 (H node node' bound H1 H2)).",
            "VernacExtend",
            "5a7c57625be2238448dd4977425956ead996691f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDneg_memo_OK_bool_fun_1 : forall (cfg : BDDconfig) (memo : BDDneg_memo) (node node' : ad), BDDconfig_OK cfg -> BDDneg_memo_OK_1 cfg memo -> config_node_OK cfg node -> BDDneg_memo_lookup memo node = Some node' -> bool_fun_eq (bool_fun_of_BDD cfg node') (bool_fun_neg (bool_fun_of_BDD cfg node)).",
            "VernacStartTheoremProof",
            "32d3f55cf1dfdc83b7598904a5c88e63259e1737"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg.",
            "VernacExtend",
            "12efe1abfde7108a67f3516136c0b2a4a5095d26"
        ],
        [
            "intros bs y.",
            "VernacExtend",
            "d45133e21e3eb2c4564ae730ba47345baa980eb9"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros memo node node' H H0 H1 H2.",
            "VernacExtend",
            "cfdc93cd2a981b162a1a6ae03c44f5b669cfdd4f"
        ],
        [
            "unfold BDDneg_memo_OK_1 in H0.",
            "VernacExtend",
            "0aef1e6a2d311a65c348c59a5455fd35ef5fa0b2"
        ],
        [
            "cut (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))) = (bs, (share, counter), node')).",
            "VernacExtend",
            "e3390aa40da13d5c568423a907b3f326003fa4dc"
        ],
        [
            "intro H3.",
            "VernacExtend",
            "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
        ],
        [
            "cut (is_internal_node (bs, (share, counter)) node -> nat_of_N (var (bs, (share, counter)) node) < S (nat_of_N (var (bs, (share, counter)) node))).",
            "VernacExtend",
            "e0b009a61990ba503dbf247c2f149cf28f62d50d"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "cut (bool_fun_of_BDD (bs, (share, counter)) node' = bool_fun_of_BDD (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))))).",
            "VernacExtend",
            "19a1bbbf7eb96ac5b0f55b2b8a642e766bd84b49"
        ],
        [
            "intro H5.",
            "VernacExtend",
            "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "exact (proj2 (proj2 (proj2 (proj2 (BDDneg_2_lemma (S (nat_of_N (var (bs, (share, counter)) node))) (bs, (share, counter)) node H H1 H4))))).",
            "VernacExtend",
            "165bd63de70b6bc19c28ba2498b789ae59b8a4b3"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "unfold lt in |- *; apply le_n.",
            "VernacExtend",
            "04ef85d2c098e9743304bae0c697d1373efb56af"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro H3.",
            "VernacExtend",
            "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
        ],
        [
            "unfold lt in |- *; apply le_n.",
            "VernacExtend",
            "04ef85d2c098e9743304bae0c697d1373efb56af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDneg_memo_OK_bool_fun_1' : forall (cfg : BDDconfig) (memo : BDDneg_memo) (node node' : ad), BDDconfig_OK cfg -> BDDneg_memo_OK_2 cfg memo -> config_node_OK cfg node -> BDDneg_memo_lookup memo node = Some node' -> bool_fun_eq (bool_fun_of_BDD cfg node') (bool_fun_neg (bool_fun_of_BDD cfg node)).",
            "VernacStartTheoremProof",
            "aedbf66f45ebd57e02adb2f45fe028f447307a61"
        ],
        [
            "intros cfg memo node node' H H0 H1 H2.",
            "VernacExtend",
            "cc7de6e3c53a80d7e87849685591e44a519dd827"
        ],
        [
            "apply BDDneg_memo_OK_bool_fun_1 with (memo := memo).",
            "VernacExtend",
            "5b06ccac5d1af7b049c235c6affab4a940f0cd21"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply BDDneg_memo_OK_1_2.",
            "VernacExtend",
            "8c6c8c16bf399bb342a2b4b166a1c5e89311a772"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition nodes_preserved (cfg cfg' : BDDconfig) := forall (x : BDDvar) (l r node : ad), MapGet _ (fst cfg) node = Some (x, (l, r)) -> MapGet _ (fst cfg') node = Some (x, (l, r)).",
            "VernacDefinition",
            "01726240c96cfb75a3f735564610f83695f75d34"
        ],
        [
            "Lemma BDDmake_preserves_nodes : forall (cfg : BDDconfig) (x : BDDvar) (l r : ad), BDDconfig_OK cfg -> nodes_preserved cfg (fst (BDDmake cfg x l r)).",
            "VernacStartTheoremProof",
            "7b80205248946761e0c80c06b2a266c7144bded1"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg.",
            "VernacExtend",
            "12efe1abfde7108a67f3516136c0b2a4a5095d26"
        ],
        [
            "intros bs y.",
            "VernacExtend",
            "d45133e21e3eb2c4564ae730ba47345baa980eb9"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros x l r H00.",
            "VernacExtend",
            "d29c7d3e80e053b9b92aaa593165806929809980"
        ],
        [
            "unfold nodes_preserved in |- *.",
            "VernacExtend",
            "388597c7ddc531964af1977fca156ac00fb776b9"
        ],
        [
            "unfold BDDmake in |- *.",
            "VernacExtend",
            "e024e21e57cdcb68e3fdabd2e39cd91b67231b0f"
        ],
        [
            "elim (sumbool_of_bool (Neqb l r)).",
            "VernacExtend",
            "696ce56d5959f04d54e04596f8dfe1e950b9a573"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "rewrite y.",
            "VernacExtend",
            "981e1312d3ff196b34a8ce70ebd2fc1285cb160f"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros; assumption.",
            "VernacExtend",
            "5cc15d3651e27d2e3e1e2b44ec8880d58345a162"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "rewrite y.",
            "VernacExtend",
            "981e1312d3ff196b34a8ce70ebd2fc1285cb160f"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "elim (option_sum _ (BDDshare_lookup share x l r)).",
            "VernacExtend",
            "4960a10699736a6083b59777d9784cc0e1e2d3e5"
        ],
        [
            "intro y0.",
            "VernacExtend",
            "d1834bf95553ce1485d1c19693bbdd1e392d677e"
        ],
        [
            "inversion y0.",
            "VernacExtend",
            "cd324674cd5c5d041ae8ef2309523a290e2593c2"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x1 l0 r0 node H0.",
            "VernacExtend",
            "f51ee02d0cac090efb171a4ea2eb74ebdfedcb17"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro y0.",
            "VernacExtend",
            "d1834bf95553ce1485d1c19693bbdd1e392d677e"
        ],
        [
            "rewrite y0.",
            "VernacExtend",
            "7c49b02e6ca9f37932239a392b49cbff57144730"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "elim H00.",
            "VernacExtend",
            "5a48bfa70e9b9bfe1f57eec692c3f3c15578d304"
        ],
        [
            "intros H H0 x0 l0 r0 node H1.",
            "VernacExtend",
            "8ecc963c7be42da06776798918f4706780cdfb82"
        ],
        [
            "rewrite (MapPut_semantics (BDDvar * (ad * ad)) bs counter (x, (l, r)) node).",
            "VernacExtend",
            "157ca72475d462bfc36f137c3ac7f81be92bd101"
        ],
        [
            "elim (sumbool_of_bool (Neqb counter node)).",
            "VernacExtend",
            "a72f39ac4bc2c806aae4da4284ca6979dc59aa7a"
        ],
        [
            "intro y1.",
            "VernacExtend",
            "4d0ec3273193a8100c12a11465f6beb7953e5c77"
        ],
        [
            "absurd (counter = node).",
            "VernacExtend",
            "b2f6ba543508a0bd406b1adca77b1c3ff8610703"
        ],
        [
            "unfold not in |- *; intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "cut (MapGet (BDDvar * (ad * ad)) bs node = None).",
            "VernacExtend",
            "fe9518625bb999ba7c974d8ca99ce692d25f86d9"
        ],
        [
            "intro H3.",
            "VernacExtend",
            "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
        ],
        [
            "rewrite H1 in H3; discriminate.",
            "VernacExtend",
            "c3f8ccb68cf43a77aebb2151045e071183973f30"
        ],
        [
            "apply (proj1 (proj2 H0)).",
            "VernacExtend",
            "6005d65fa91b6a1f9a7491fdf9d5100043322912"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "unfold Nleb in |- *.",
            "VernacExtend",
            "77c7288581ce54fc1b81e30fe44a972703b89e5f"
        ],
        [
            "apply leb_correct.",
            "VernacExtend",
            "eb18b8d78b95b593c0a583583acbfebffb50773d"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "apply Neqb_complete.",
            "VernacExtend",
            "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro y1.",
            "VernacExtend",
            "4d0ec3273193a8100c12a11465f6beb7953e5c77"
        ],
        [
            "rewrite y1.",
            "VernacExtend",
            "19695c3e9f9cec64b8f33bcea2e813183cdade7b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nodes_preserved_2 : forall (cfg cfg' : BDDconfig) (node : ad), config_node_OK cfg node -> nodes_preserved cfg cfg' -> config_node_OK cfg' node.",
            "VernacStartTheoremProof",
            "fb628e898f9a517b8c3ae48e9a62285153df351c"
        ],
        [
            "intros cfg cfg' node H H0.",
            "VernacExtend",
            "bceae5f6293e7c0c839224a483bd0abf25384e75"
        ],
        [
            "elim H; intro.",
            "VernacExtend",
            "f72f8bb994653bc377ef4f37626cba5f2cab4c8b"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "left; reflexivity.",
            "VernacExtend",
            "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
        ],
        [
            "elim H1; intro.",
            "VernacExtend",
            "69e6dce0928c10bc8e91776963343c6dbf299832"
        ],
        [
            "rewrite H2; right; left; reflexivity.",
            "VernacExtend",
            "31c039752efa153ce0aea3ea79268de52ee3e86e"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "unfold in_dom in H2.",
            "VernacExtend",
            "7a6f36deccf9d5229e3cf7ecedb2eb4920e94e37"
        ],
        [
            "elim (option_sum _ (MapGet (BDDvar * (ad * ad)) (fst cfg) node)).",
            "VernacExtend",
            "73c9c1b2a8a5b9f6e045e4000fb20bcdd7675849"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "elim y.",
            "VernacExtend",
            "2e1340b20b979eff9f29f6f7a068bc217b31672c"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "elim x.",
            "VernacExtend",
            "4dae947360dc7d88bee6f5459fc6c026a56c9298"
        ],
        [
            "intro y0.",
            "VernacExtend",
            "d1834bf95553ce1485d1c19693bbdd1e392d677e"
        ],
        [
            "intro y1.",
            "VernacExtend",
            "4d0ec3273193a8100c12a11465f6beb7953e5c77"
        ],
        [
            "elim y1.",
            "VernacExtend",
            "7deb42a0d69f05166c553edfbfcc7a66614866f4"
        ],
        [
            "intros y2 y3 y4.",
            "VernacExtend",
            "a37ec199aae417c062da0aa32fbb80092375c854"
        ],
        [
            "unfold nodes_preserved in H0.",
            "VernacExtend",
            "9addf30ad0a69b9d7c8c363b3163c4c9d53a13a8"
        ],
        [
            "unfold in_dom in |- *.",
            "VernacExtend",
            "72f928df3e3c19d4381dea5e9bd4414e3b95a02f"
        ],
        [
            "rewrite (H0 y0 y2 y3 node y4).",
            "VernacExtend",
            "7d9ba9db06ce6e2c63d89b0f0df741fb5d8e6637"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "rewrite y in H2.",
            "VernacExtend",
            "50861354ba30a184a953418f757632de0ee8027b"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDneg_2_config_OK_lemma_2 : forall (cfg : BDDconfig) (node : ad) (x : BDDvar) (l r : ad) (n m : nat), BDDconfig_OK cfg -> MapGet _ (fst cfg) node = Some (x, (l, r)) -> nat_of_N (var cfg node) < n -> n = S m -> BDDconfig_OK (fst (BDDneg_2 (fst (BDDneg_2 cfg l m)) r m)).",
            "VernacStartTheoremProof",
            "7ba1fabe3c555329a02a8abdd858212ca0075ccb"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg.",
            "VernacExtend",
            "12efe1abfde7108a67f3516136c0b2a4a5095d26"
        ],
        [
            "intros bs y.",
            "VernacExtend",
            "d45133e21e3eb2c4564ae730ba47345baa980eb9"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros node x l r n m H H0 H1 H2.",
            "VernacExtend",
            "31cd1623c679041bd3504f6540bf4fb92bb8358a"
        ],
        [
            "cut (is_internal_node (bs, (share, counter)) node -> nat_of_N (var (bs, (share, counter)) node) < n).",
            "VernacExtend",
            "ca67705c03be2426fda78f4b97068a73af8c4f41"
        ],
        [
            "intro H3.",
            "VernacExtend",
            "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
        ],
        [
            "cut (BDDconfig_OK (fst (BDDneg_2 (bs, (share, counter)) l m)) /\\ (forall (x0 : BDDvar) (l0 r0 a : ad), MapGet _ (fst (bs, (share, counter))) a = Some (x0, (l0, r0)) -> MapGet _ (fst (fst (BDDneg_2 (bs, (share, counter)) l m))) a = Some (x0, (l0, r0))) /\\ (is_internal_node (bs, (share, counter)) l -> is_internal_node (fst (BDDneg_2 (bs, (share, counter)) l m)) (snd (BDDneg_2 (bs, (share, counter)) l m)) /\\ var (bs, (share, counter)) l = var (fst (BDDneg_2 (bs, (share, counter)) l m)) (snd (BDDneg_2 (bs, (share, counter)) l m))) /\\ config_node_OK (fst (BDDneg_2 (bs, (share, counter)) l m)) (snd (BDDneg_2 (bs, (share, counter)) l m)) /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDneg_2 (bs, (share, counter)) l m)) (snd (BDDneg_2 (bs, (share, counter)) l m))) (bool_fun_neg (bool_fun_of_BDD (bs, (share, counter)) l))).",
            "VernacExtend",
            "456ee5669b2282d5aa5ed0d0ed3e5318d1b966b7"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "elim H4; clear H4; intros.",
            "VernacExtend",
            "ba7107ab40756d56d61fb52c3146c83ee1df4e63"
        ],
        [
            "elim H5; clear H5; intros.",
            "VernacExtend",
            "2de304691da3b3e83752d813bd56f658cb9de5b2"
        ],
        [
            "elim H6; clear H6; intros.",
            "VernacExtend",
            "7637aee25da9957cdbe2a4589908bb8c3eb5b0d5"
        ],
        [
            "elim H7; clear H7; intros.",
            "VernacExtend",
            "b6fee61903bee2af2cb86911f238bb8253a0f3dd"
        ],
        [
            "cut (is_internal_node (fst (BDDneg_2 (bs, (share, counter)) l m)) r -> nat_of_N (var (fst (BDDneg_2 (bs, (share, counter)) l m)) r) < m).",
            "VernacExtend",
            "043c27734b4fa2251df5c410426db81bb68ef75f"
        ],
        [
            "intro H9.",
            "VernacExtend",
            "3a5cee2c4602853379bc498c20515b4b8bb64031"
        ],
        [
            "cut (config_node_OK (fst (BDDneg_2 (bs, (share, counter)) l m)) r).",
            "VernacExtend",
            "72efe6e9662dcc60c0f626261f7ee82f0e37165f"
        ],
        [
            "intro H10.",
            "VernacExtend",
            "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
        ],
        [
            "exact (proj1 (BDDneg_2_lemma m (fst (BDDneg_2 (bs, (share, counter)) l m)) r H4 H10 H9)).",
            "VernacExtend",
            "165f28a3205ac42d8d41b2c5f38fca25680ae4fd"
        ],
        [
            "apply nodes_preserved_2 with (cfg := (bs, (share, counter))).",
            "VernacExtend",
            "1b43c60ab9895aefb60d244f579154331263f4fe"
        ],
        [
            "cut (r = high (bs, (share, counter)) node).",
            "VernacExtend",
            "7829c4f25ed393cec9ec9a7cff413e87d3f0dc1a"
        ],
        [
            "intro H10.",
            "VernacExtend",
            "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
        ],
        [
            "rewrite H10.",
            "VernacExtend",
            "cd2638bc5a7f85648c5e2c9d77046abc07e2da6a"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split with x; split with l; split with r; assumption.",
            "VernacExtend",
            "155fbd215be0756ebfebd242e49d32d93517f52e"
        ],
        [
            "unfold high in |- *.",
            "VernacExtend",
            "af6be3a481b55356ef54ee85b5fb2cba596f398f"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold nodes_preserved in |- *.",
            "VernacExtend",
            "388597c7ddc531964af1977fca156ac00fb776b9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro H9.",
            "VernacExtend",
            "3a5cee2c4602853379bc498c20515b4b8bb64031"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node)).",
            "VernacExtend",
            "b814f80db45bffc5d1eb82f58679c238c6f54d48"
        ],
        [
            "intro H10.",
            "VernacExtend",
            "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
        ],
        [
            "unfold high in H10.",
            "VernacExtend",
            "449af4bb1ecc2a6d0612ad3029acbe403d7408a1"
        ],
        [
            "rewrite H0 in H10.",
            "VernacExtend",
            "07f0916778e8d6888913c95d2b156ad45ab6aea1"
        ],
        [
            "elim H10.",
            "VernacExtend",
            "3aaff7ab72e35409d807ecb34fcae6826e33ee60"
        ],
        [
            "intro H11.",
            "VernacExtend",
            "94ccd5954f5b20492a368275203c835bb786888f"
        ],
        [
            "inversion H9.",
            "VernacExtend",
            "ba06d75575d77a771abfe438435f8748713f713e"
        ],
        [
            "inversion H12.",
            "VernacExtend",
            "d5ec1d67ecbf066a6575bda368738e1ad0dbbc60"
        ],
        [
            "inversion H13.",
            "VernacExtend",
            "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
        ],
        [
            "rewrite H11 in H14.",
            "VernacExtend",
            "1bc1ff06798cf818fdf2ecbdb55f398c1c035c7e"
        ],
        [
            "rewrite (config_OK_zero (fst (BDDneg_2 (bs, (share, counter)) l m)) H4) in H14; discriminate.",
            "VernacExtend",
            "8a384994d3f50cf99b672fdaf5abdb471a4e73d6"
        ],
        [
            "intro H11.",
            "VernacExtend",
            "94ccd5954f5b20492a368275203c835bb786888f"
        ],
        [
            "elim H11; intro.",
            "VernacExtend",
            "0c29eb3ff440f3a0ec9425df045e9df7bd15a2a4"
        ],
        [
            "inversion H9.",
            "VernacExtend",
            "ba06d75575d77a771abfe438435f8748713f713e"
        ],
        [
            "inversion H13.",
            "VernacExtend",
            "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
        ],
        [
            "inversion H14.",
            "VernacExtend",
            "158c311bb69c3e5a75670dfcbe8f342a533b833e"
        ],
        [
            "rewrite H12 in H15.",
            "VernacExtend",
            "78e7c4066566b8e3a5d52511fd8c430cde3a7a50"
        ],
        [
            "rewrite (config_OK_one (fst (BDDneg_2 (bs, (share, counter)) l m)) H4) in H15; discriminate.",
            "VernacExtend",
            "8f11f4359df760eacce7e51b9c063ca51ae654c9"
        ],
        [
            "elim (option_sum _ (MapGet _ (fst (bs, (share, counter))) r)).",
            "VernacExtend",
            "9848fa864377c52e7dcab878a84a8163d41bde83"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "elim y.",
            "VernacExtend",
            "2e1340b20b979eff9f29f6f7a068bc217b31672c"
        ],
        [
            "intro x0.",
            "VernacExtend",
            "e74c874e61a3691df9987468fe1f6ab72f4039f2"
        ],
        [
            "elim x0.",
            "VernacExtend",
            "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
        ],
        [
            "intro y0.",
            "VernacExtend",
            "d1834bf95553ce1485d1c19693bbdd1e392d677e"
        ],
        [
            "intro y1.",
            "VernacExtend",
            "4d0ec3273193a8100c12a11465f6beb7953e5c77"
        ],
        [
            "elim y1.",
            "VernacExtend",
            "7deb42a0d69f05166c553edfbfcc7a66614866f4"
        ],
        [
            "intros y2 y3 y4.",
            "VernacExtend",
            "a37ec199aae417c062da0aa32fbb80092375c854"
        ],
        [
            "cut (var (fst (BDDneg_2 (bs, (share, counter)) l m)) r = var (bs, (share, counter)) r).",
            "VernacExtend",
            "20fa3e715f8cc3487fdb8cb3d1a236314f033db4"
        ],
        [
            "intro H13.",
            "VernacExtend",
            "feb8e9eb0f7422cc52051473f8890af27e8240ca"
        ],
        [
            "rewrite H13.",
            "VernacExtend",
            "bc2d32522e887645239b994008e234c058557cd9"
        ],
        [
            "apply lt_trans_1 with (y := nat_of_N (var (bs, (share, counter)) node)).",
            "VernacExtend",
            "c97e3366eb7cfd33d3d6c89b7934bee007a6780a"
        ],
        [
            "replace r with (high (bs, (share, counter)) node).",
            "VernacExtend",
            "c6f0e2437bc5e8d165f732ab4b800e83a8d0236e"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "apply BDDvar_ordered_high.",
            "VernacExtend",
            "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split with x; split with l; split with r; assumption.",
            "VernacExtend",
            "155fbd215be0756ebfebd242e49d32d93517f52e"
        ],
        [
            "unfold high in |- *.",
            "VernacExtend",
            "af6be3a481b55356ef54ee85b5fb2cba596f398f"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "split with y0; split with y2; split with y3; assumption.",
            "VernacExtend",
            "e262d7409e0e1d8d5a1085a98879c939df506f59"
        ],
        [
            "unfold high in |- *; rewrite H0; reflexivity.",
            "VernacExtend",
            "52c09e9edbc70bbea86198ed24d314f414df7c87"
        ],
        [
            "rewrite <- H2; assumption.",
            "VernacExtend",
            "a178803b3bf8532fa1c595c341b91695aa2e9417"
        ],
        [
            "unfold var in |- *.",
            "VernacExtend",
            "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
        ],
        [
            "rewrite y4.",
            "VernacExtend",
            "50ad2e96a8966c058276df33348aa69f2a6fc1cb"
        ],
        [
            "rewrite (H5 y0 y2 y3 r y4).",
            "VernacExtend",
            "60c6ad8a89ff078be34b64649b17adb33cec52db"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "unfold in_dom in H12.",
            "VernacExtend",
            "7821fd42acf740da840a0c88267c18fe01d39dad"
        ],
        [
            "rewrite y in H12; discriminate.",
            "VernacExtend",
            "4dce1ebad604f4ea763c13da34f1ba38be279c54"
        ],
        [
            "apply high_OK.",
            "VernacExtend",
            "65824a85d04353d3b2c9e768c4400fc7913b6399"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split with x; split with l; split with r; assumption.",
            "VernacExtend",
            "155fbd215be0756ebfebd242e49d32d93517f52e"
        ],
        [
            "apply BDDneg_2_lemma.",
            "VernacExtend",
            "eb0a056c21033cf4e1981eef4b1910d12d7d837a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "replace l with (low (bs, (share, counter)) node).",
            "VernacExtend",
            "f08fa06e88c7507e0dffbb886c5cfd65cc751bf0"
        ],
        [
            "apply low_OK.",
            "VernacExtend",
            "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split with x; split with l; split with r; assumption.",
            "VernacExtend",
            "155fbd215be0756ebfebd242e49d32d93517f52e"
        ],
        [
            "unfold low in |- *; rewrite H0; reflexivity.",
            "VernacExtend",
            "1b1f74db7da8cd9953177ad8d48052bcf93c51aa"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "apply lt_trans_1 with (y := nat_of_N (var (bs, (share, counter)) node)).",
            "VernacExtend",
            "c97e3366eb7cfd33d3d6c89b7934bee007a6780a"
        ],
        [
            "apply BDDcompare_lt.",
            "VernacExtend",
            "806e35cb45472b6c64abdbcf49956e2296576205"
        ],
        [
            "replace l with (low (bs, (share, counter)) node).",
            "VernacExtend",
            "f08fa06e88c7507e0dffbb886c5cfd65cc751bf0"
        ],
        [
            "apply BDDvar_ordered_low.",
            "VernacExtend",
            "ba66c15448aced83d225d0e66a0f593162c936e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split with x.",
            "VernacExtend",
            "3e50c224aa12119964b8f71175385058dd7c95e5"
        ],
        [
            "split with l.",
            "VernacExtend",
            "1f011da1a8525a6d344d0081af56ed45f93d1ab8"
        ],
        [
            "split with r.",
            "VernacExtend",
            "311aeb450423e4c2f7a03fcf8454122ece45c4f8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold low in |- *.",
            "VernacExtend",
            "344cb2081628177ec374c362b17ddb5395ae8549"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold low in |- *; rewrite H0; reflexivity.",
            "VernacExtend",
            "1b1f74db7da8cd9953177ad8d48052bcf93c51aa"
        ],
        [
            "rewrite <- H2; assumption.",
            "VernacExtend",
            "a178803b3bf8532fa1c595c341b91695aa2e9417"
        ],
        [
            "intro; assumption.",
            "VernacExtend",
            "551ec2015f4dd20223b70c4f4cd79f05302e6cf6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nodes_preserved_1 : forall (cfg : BDDconfig) (node : ad) (n m : nat) (x : BDDvar) (l r : ad), BDDconfig_OK cfg -> MapGet _ (fst cfg) node = Some (x, (l, r)) -> n = S m -> nat_of_N (var cfg node) < n -> nodes_preserved (fst (BDDneg_2 (fst (BDDneg_2 cfg l m)) r m)) (fst (BDDneg_2 cfg node n)).",
            "VernacStartTheoremProof",
            "b9ce40fa0ca1b379a7b845cac8d1608f975b4550"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg.",
            "VernacExtend",
            "12efe1abfde7108a67f3516136c0b2a4a5095d26"
        ],
        [
            "intros bs y.",
            "VernacExtend",
            "d45133e21e3eb2c4564ae730ba47345baa980eb9"
        ],
        [
            "elim y; clear y; intros share counter.",
            "VernacExtend",
            "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
        ],
        [
            "intros node n m x l r H H0 H1 H2.",
            "VernacExtend",
            "cfb93ab08a8255fc52a21bd828e24b0c605a438e"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply BDDmake_preserves_nodes.",
            "VernacExtend",
            "883b22aa582b05a50b9f3012e72089e52ad7cf10"
        ],
        [
            "apply BDDneg_2_config_OK_lemma_2 with (node := node) (x := x) (n := n).",
            "VernacExtend",
            "186d6d962305c9e7b672d9088034ab88b74efad1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BDDneg_memo_OK_lemma_1_4' : forall (cfg : BDDconfig) (memo : BDDneg_memo) (node node' : ad), BDDconfig_OK cfg -> BDDneg_memo_OK_2 cfg memo -> config_node_OK cfg node -> BDDneg_memo_lookup memo node = Some node' -> config_node_OK cfg node'.",
            "VernacStartTheoremProof",
            "4ebe49c015c31a3f7926453fcb65502e7a1dd7a4"
        ],
        [
            "intro cfg.",
            "VernacExtend",
            "bf69e032e607ad08450a39ea80ec430934b829d3"
        ],
        [
            "elim cfg; clear cfg; intros bs y; elim y; clear y; intros share counter.",
            "VernacExtend",
            "24beaff02db6975e92561e9dc04313085e6e7903"
        ],
        [
            "intros memo node node' H H0 H1 H2.",
            "VernacExtend",
            "cfdc93cd2a981b162a1a6ae03c44f5b669cfdd4f"
        ],
        [
            "unfold BDDneg_memo_OK_2 in H0.",
            "VernacExtend",
            "d6c5bf541af472831a687eaacd6b300ccc181438"
        ],
        [
            "cut (config_node_OK (bs, (share, counter)) node /\\ BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))) = (bs, (share, counter), node')).",
            "VernacExtend",
            "d3b0edf2c54322d56911ff932fc1dc7756aec45a"
        ],
        [
            "intro H3.",
            "VernacExtend",
            "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
        ],
        [
            "cut (config_node_OK (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))))).",
            "VernacExtend",
            "c68896bcf1a9445178eb9e6a99044c1089ac9d5e"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "rewrite (proj2 H3) in H4.",
            "VernacExtend",
            "1491cf7c76933f8612ad55794bb93f3f3ff4bb54"
        ],
        [
            "exact H4.",
            "VernacExtend",
            "861b0a8cbc78b24a3c2c92390110f650f7a9aa8d"
        ],
        [
            "cut (is_internal_node (bs, (share, counter)) node -> nat_of_N (var (bs, (share, counter)) node) < S (nat_of_N (var (bs, (share, counter)) node))).",
            "VernacExtend",
            "e0b009a61990ba503dbf247c2f149cf28f62d50d"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "exact (proj1 (proj2 (proj2 (proj2 (BDDneg_2_lemma (S (nat_of_N (var (bs, (share, counter)) node))) (bs, (share, counter)) node H H1 H4))))).",
            "VernacExtend",
            "e9ebeecbb6591dcbbf27ff5f866cc1b7404eb801"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "unfold lt in |- *.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold lt in |- *.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "intro H3.",
            "VernacExtend",
            "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "BDDneg_1_lemma_1",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intro arg.",
                        "VernacExtend",
                        "25042bdf63c32eca0c6414f4f9208b4f7c999ab1"
                    ]
                },
                {
                    "command": [
                        "elim arg.",
                        "VernacExtend",
                        "3cfe3c1dd76476de59d49250658316498c4abefe"
                    ]
                },
                {
                    "command": [
                        "clear arg.",
                        "VernacExtend",
                        "2b83ebf9336da84d00f9c6a5233941f576db499d"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y.",
                        "VernacExtend",
                        "cbe96a70211e95b8dd0d74d130ec9269c538587a"
                    ]
                },
                {
                    "command": [
                        "intros cfg node memo node' bound.",
                        "VernacExtend",
                        "6db67f8ef355268c4932f74f91d67a8d6c0ba9e5"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "unfold BDDneg_1 in |- *.",
                        "VernacExtend",
                        "de9006d1f2bc68ac54de38cd8ff19a64aed3743c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "elim bound; rewrite H; simpl in |- *.",
                        "VernacExtend",
                        "53ee08ed2e1bfd19b9bb7ccfe943a226d5261733"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDneg_1_lemma_2",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intro arg.",
                        "VernacExtend",
                        "25042bdf63c32eca0c6414f4f9208b4f7c999ab1"
                    ]
                },
                {
                    "command": [
                        "elim arg.",
                        "VernacExtend",
                        "3cfe3c1dd76476de59d49250658316498c4abefe"
                    ]
                },
                {
                    "command": [
                        "clear arg; intro y.",
                        "VernacExtend",
                        "db7ad6dd579a9c22fc23d5c56b1ad61a0d152be8"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y.",
                        "VernacExtend",
                        "cbe96a70211e95b8dd0d74d130ec9269c538587a"
                    ]
                },
                {
                    "command": [
                        "intros cfg node memo bound.",
                        "VernacExtend",
                        "c54154be3cdda5260e6fd0f94f0123aa418a408e"
                    ]
                },
                {
                    "command": [
                        "intros H H0.",
                        "VernacExtend",
                        "90bdfc30bf7350754c3a8a5cfe1259219564aa47"
                    ]
                },
                {
                    "command": [
                        "unfold BDDneg_1 in |- *.",
                        "VernacExtend",
                        "de9006d1f2bc68ac54de38cd8ff19a64aed3743c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "elim bound; rewrite H; simpl in |- *.",
                        "VernacExtend",
                        "53ee08ed2e1bfd19b9bb7ccfe943a226d5261733"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; reflexivity.",
                        "VernacExtend",
                        "cd5b756ada779c32b8ad69248fcdcefea6ce8479"
                    ]
                },
                {
                    "command": [
                        "fold BDDneg_1 in |- *.",
                        "VernacExtend",
                        "61429cbd2e7a786afe2e55027a833690a81e6ddb"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDneg_1_lemma_3",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intro arg.",
                        "VernacExtend",
                        "25042bdf63c32eca0c6414f4f9208b4f7c999ab1"
                    ]
                },
                {
                    "command": [
                        "elim arg.",
                        "VernacExtend",
                        "3cfe3c1dd76476de59d49250658316498c4abefe"
                    ]
                },
                {
                    "command": [
                        "clear arg; intro y.",
                        "VernacExtend",
                        "db7ad6dd579a9c22fc23d5c56b1ad61a0d152be8"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y.",
                        "VernacExtend",
                        "cbe96a70211e95b8dd0d74d130ec9269c538587a"
                    ]
                },
                {
                    "command": [
                        "intros cfg node memo x l r.",
                        "VernacExtend",
                        "e8e177cc21868ca25c85697b3828a644358cb614"
                    ]
                },
                {
                    "command": [
                        "intros H H0.",
                        "VernacExtend",
                        "90bdfc30bf7350754c3a8a5cfe1259219564aa47"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl in H, H0.",
                        "VernacExtend",
                        "9fd9352f01eb8c0c7aebee76645558e0f75b36e6"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_sum",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intro n.",
                        "VernacExtend",
                        "7b184e6f13215b0f6a04b4277e277a724a645d52"
                    ]
                },
                {
                    "command": [
                        "elim n.",
                        "VernacExtend",
                        "c68f766a88bb5402d72ee6adaca953661a5d18b2"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros n0 H.",
                        "VernacExtend",
                        "4150d95d7e6024508a0b3fe3b3eacfb4e9641d61"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "split with n0.",
                        "VernacExtend",
                        "f2b17c0ff0d73b343a3294e149f01f0c06db2ab6"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDneg_1_lemma_4",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intro arg.",
                        "VernacExtend",
                        "25042bdf63c32eca0c6414f4f9208b4f7c999ab1"
                    ]
                },
                {
                    "command": [
                        "elim arg.",
                        "VernacExtend",
                        "3cfe3c1dd76476de59d49250658316498c4abefe"
                    ]
                },
                {
                    "command": [
                        "clear arg; intro y.",
                        "VernacExtend",
                        "db7ad6dd579a9c22fc23d5c56b1ad61a0d152be8"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y.",
                        "VernacExtend",
                        "cbe96a70211e95b8dd0d74d130ec9269c538587a"
                    ]
                },
                {
                    "command": [
                        "intros cfg node memo x l r.",
                        "VernacExtend",
                        "e8e177cc21868ca25c85697b3828a644358cb614"
                    ]
                },
                {
                    "command": [
                        "intros bound bound' H H0 H1.",
                        "VernacExtend",
                        "af554bcf5d689b55668a037aa219cef8df6bf20d"
                    ]
                },
                {
                    "command": [
                        "elim (nat_sum bound).",
                        "VernacExtend",
                        "50202de53d731af0e23f84cc283c3251d916adb3"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros x0 y.",
                        "VernacExtend",
                        "3f58410a066ac41ca51258e6cef8cd5df4384a75"
                    ]
                },
                {
                    "command": [
                        "rewrite H in y.",
                        "VernacExtend",
                        "bc06ac5d6c2eb3ca63500007f8ef8842f9b4d5cf"
                    ]
                },
                {
                    "command": [
                        "injection y; intro.",
                        "VernacExtend",
                        "3cb1acccb6042f45c96765f3341c4a7743c8cee3"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl in H0, H1.",
                        "VernacExtend",
                        "ad66d190184bac82449653c9a526e7e1630d6bbd"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; rewrite H1.",
                        "VernacExtend",
                        "85e84d2667b53456606ab747d4b84d4de959182c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "rewrite H in y; discriminate.",
                        "VernacExtend",
                        "697886293a9a324cfc2af315f6372bb155cd1d20"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_restrict_neg_1",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros bf x b H.",
                        "VernacExtend",
                        "2295c0bef38a2e6a854317c269e7935d6f47c107"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eq in |- *.",
                        "VernacExtend",
                        "471f86567c2f15e28ea8da234e3f79e1a6f48d8d"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_restrict in |- *.",
                        "VernacExtend",
                        "8f5a662d1228cd59b9d9d647a9421f5c9c13ed3a"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval at 2 in |- *.",
                        "VernacExtend",
                        "a01d76ee143abfd8a20820a2fdf5f30af7305aaf"
                    ]
                },
                {
                    "command": [
                        "intro vb.",
                        "VernacExtend",
                        "e8b7ec7490ece50e805b33900ace150891cc88ee"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_neg in |- *.",
                        "VernacExtend",
                        "fc81b6ba190e5bb526dd990028e9774968c42997"
                    ]
                },
                {
                    "command": [
                        "unfold bool_fun_eval at 3 in |- *.",
                        "VernacExtend",
                        "7d25b95f68c4d3f9f4aaf018494f44da94339855"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_fun_neg_eq_var_2",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y; elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "24beaff02db6975e92561e9dc04313085e6e7903"
                    ]
                },
                {
                    "command": [
                        "intros node node' H H0 H1 H2.",
                        "VernacExtend",
                        "0f3653298d7c2e4b3940c9981025b137d8c3b932"
                    ]
                },
                {
                    "command": [
                        "cut (BDDconfig_OK (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) /\\ (forall (x : BDDvar) (l r a : ad), MapGet _ (fst (bs, (share, counter))) a = Some (x, (l, r)) -> MapGet _ (fst (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))))) a = Some (x, (l, r))) /\\ (is_internal_node (bs, (share, counter)) node -> is_internal_node (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) /\\ var (bs, (share, counter)) node = var (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))))) /\\ config_node_OK (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))))) (bool_fun_neg (bool_fun_of_BDD (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "00601f4261a0ab70f39d6e807ece2c9b69216af7"
                    ]
                },
                {
                    "command": [
                        "intro H3.",
                        "VernacExtend",
                        "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
                    ]
                },
                {
                    "command": [
                        "cut (var (bs, (share, counter)) node' = var (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) node').",
                        "VernacExtend",
                        "21103825383c4b86a3edf73295c5a46c3684b421"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "cut (var (bs, (share, counter)) node = var (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))))).",
                        "VernacExtend",
                        "81258574b74a33f3e2e526b9f955ee29abd50638"
                    ]
                },
                {
                    "command": [
                        "intro H5.",
                        "VernacExtend",
                        "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "rewrite H4.",
                        "VernacExtend",
                        "fc5d011df68f7160e4669d129d2975825ac089bb"
                    ]
                },
                {
                    "command": [
                        "cut (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))) = node').",
                        "VernacExtend",
                        "4f56a56ef6c6b9a4fec453893d77ecbc68f04a90"
                    ]
                },
                {
                    "command": [
                        "intro H6.",
                        "VernacExtend",
                        "78ab87e2608ab6290c463d6d32d90c8aabbd5eaa"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply BDDunique with (cfg := fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))).",
                        "VernacExtend",
                        "a9ed57fe6abea1eb03cbe3a5c94688ff7c1bc05f"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 H3).",
                        "VernacExtend",
                        "24f9df2f781dcbe0908822a0607039dfade19cc3"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (proj2 (proj2 H3)))).",
                        "VernacExtend",
                        "b973f47cacbe2fa6064d0fb7e80ed4662eaece1a"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "inversion H6.",
                        "VernacExtend",
                        "91475f7cc5dc394b5f8e34c38f1f3fae3256b731"
                    ]
                },
                {
                    "command": [
                        "inversion H7.",
                        "VernacExtend",
                        "42a5ca7b50f733735ed76a249aba00e788a69623"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in |- *.",
                        "VernacExtend",
                        "72f928df3e3c19d4381dea5e9bd4414e3b95a02f"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 H3) x x0 x1 node' H8).",
                        "VernacExtend",
                        "d25c9655f54be3465fc3d670574e627ff92b0172"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_neg (bool_fun_of_BDD (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "df016e5abc0ad1fa2d5432e5ba9833e463b9a72d"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (proj2 (proj2 (proj2 H3)))).",
                        "VernacExtend",
                        "dce2a9b33ac3997de954f0b358a5ed192667afc0"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_of_BDD (bs, (share, counter)) node').",
                        "VernacExtend",
                        "cce4eaf112721ed37aa769e8b2a49023df3d09fd"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm; assumption.",
                        "VernacExtend",
                        "fd46031de504c74c266b17505de12795fb5a5a62"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_preservation.",
                        "VernacExtend",
                        "bb935c1aeadb7f1a746773ba143efe17ba7380de"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 H3).",
                        "VernacExtend",
                        "24f9df2f781dcbe0908822a0607039dfade19cc3"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 H3)).",
                        "VernacExtend",
                        "e82e0a8f4c8816a94c036a1fe2e231e9ca0b38db"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in |- *.",
                        "VernacExtend",
                        "72f928df3e3c19d4381dea5e9bd4414e3b95a02f"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "inversion H6.",
                        "VernacExtend",
                        "91475f7cc5dc394b5f8e34c38f1f3fae3256b731"
                    ]
                },
                {
                    "command": [
                        "inversion H7.",
                        "VernacExtend",
                        "42a5ca7b50f733735ed76a249aba00e788a69623"
                    ]
                },
                {
                    "command": [
                        "rewrite H8; reflexivity.",
                        "VernacExtend",
                        "a15d47186a859d43bc96f0239c852d1e1bf058d3"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (proj1 (proj2 (proj2 H3)) H0)).",
                        "VernacExtend",
                        "30f4c18752b48e4227b99a5e8039f488f59db77e"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "inversion H4.",
                        "VernacExtend",
                        "184e412874313f14014d688ef3b69568302d00ff"
                    ]
                },
                {
                    "command": [
                        "inversion H5.",
                        "VernacExtend",
                        "c72c29a0eff26255c8a4846e1794fb6f7559049a"
                    ]
                },
                {
                    "command": [
                        "unfold var at 1 2 in |- *.",
                        "VernacExtend",
                        "c8d1e50798c1bc5a01eb9d55651321ad3470cdca"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 H3) x x0 x1 node' H6).",
                        "VernacExtend",
                        "80bd48b6eef5543209454109bd9432d6c4db9396"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply BDDneg_2_lemma.",
                        "VernacExtend",
                        "eb0a056c21033cf4e1981eef4b1910d12d7d837a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "inversion H3.",
                        "VernacExtend",
                        "129aa425681b58d2ed0d3637122128b1b28fd63b"
                    ]
                },
                {
                    "command": [
                        "inversion H4.",
                        "VernacExtend",
                        "184e412874313f14014d688ef3b69568302d00ff"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in |- *; rewrite H5; reflexivity.",
                        "VernacExtend",
                        "fd38eb51e32858722023f6e668bbb52303cc995d"
                    ]
                },
                {
                    "command": [
                        "intro H3.",
                        "VernacExtend",
                        "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
                    ]
                },
                {
                    "command": [
                        "unfold lt in |- *.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDneg_memo_OK_1_lemma_1_1_1",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intro bound.",
                        "VernacExtend",
                        "7bd8536c2f7ab58865ac8c1c3ad84f2f2c1ed01e"
                    ]
                },
                {
                    "command": [
                        "apply lt_wf_ind with (P := fun bound : nat => forall (cfg : BDDconfig) (node node' : ad), BDDconfig_OK cfg -> config_node_OK cfg node -> config_node_OK cfg node' -> (is_internal_node cfg node -> nat_of_N (var cfg node) < bound) -> bool_fun_eq (bool_fun_of_BDD cfg node') (bool_fun_neg (bool_fun_of_BDD cfg node)) -> BDDneg_2 cfg node bound = (cfg, node')).",
                        "VernacExtend",
                        "b3df1262d5001cf0fda4e7d625b85975aff6705d"
                    ]
                },
                {
                    "command": [
                        "intros n H.",
                        "VernacExtend",
                        "348ce37d2f619b733a523bd998a06fecedcf3fc4"
                    ]
                },
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y; elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "24beaff02db6975e92561e9dc04313085e6e7903"
                    ]
                },
                {
                    "command": [
                        "intros node node' H0 H1 H2 H3 H4.",
                        "VernacExtend",
                        "334cef76097a618a19a22c06832e0795413aba61"
                    ]
                },
                {
                    "command": [
                        "elim H1; intro.",
                        "VernacExtend",
                        "69e6dce0928c10bc8e91776963343c6dbf299832"
                    ]
                },
                {
                    "command": [
                        "cut (node' = BDDone).",
                        "VernacExtend",
                        "c16be766bf4f0866184c6a4b3cfcfa948b209e87"
                    ]
                },
                {
                    "command": [
                        "intro H6.",
                        "VernacExtend",
                        "78ab87e2608ab6290c463d6d32d90c8aabbd5eaa"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "elim n.",
                        "VernacExtend",
                        "c68f766a88bb5402d72ee6adaca953661a5d18b2"
                    ]
                },
                {
                    "command": [
                        "unfold BDDneg_2 in |- *.",
                        "VernacExtend",
                        "f0f6f78910c3cd645d864a1595bbc545a411c186"
                    ]
                },
                {
                    "command": [
                        "rewrite (config_OK_zero (bs, (share, counter)) H0).",
                        "VernacExtend",
                        "1ad2ea8c59fcd88a63a52dea3f9c2ff173046a0a"
                    ]
                },
                {
                    "command": [
                        "cut (Neqb BDDzero BDDzero = true).",
                        "VernacExtend",
                        "21d4d7fdc2ce86042497fcf2bf32b09bdc62b9e8"
                    ]
                },
                {
                    "command": [
                        "intro H7.",
                        "VernacExtend",
                        "fdf814253dc825557adb6789b752d060ee4394be"
                    ]
                },
                {
                    "command": [
                        "rewrite H7.",
                        "VernacExtend",
                        "2b0de906e9dfacfe89c031c2266760d29b5450f6"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply Neqb_correct.",
                        "VernacExtend",
                        "44ce40dca1a752c4f29effe8c09acf1cbe16e2b0"
                    ]
                },
                {
                    "command": [
                        "intros n0 H7.",
                        "VernacExtend",
                        "e323493c8a49f1f78eb0a9359ec62b4d71d48e53"
                    ]
                },
                {
                    "command": [
                        "unfold BDDneg_2 in |- *.",
                        "VernacExtend",
                        "f0f6f78910c3cd645d864a1595bbc545a411c186"
                    ]
                },
                {
                    "command": [
                        "fold BDDneg_2 in |- *.",
                        "VernacExtend",
                        "dbb76b54a49549110cc606dea3f5fd19127e6884"
                    ]
                },
                {
                    "command": [
                        "rewrite (config_OK_zero (bs, (share, counter)) H0).",
                        "VernacExtend",
                        "1ad2ea8c59fcd88a63a52dea3f9c2ff173046a0a"
                    ]
                },
                {
                    "command": [
                        "cut (Neqb BDDzero BDDzero = true).",
                        "VernacExtend",
                        "21d4d7fdc2ce86042497fcf2bf32b09bdc62b9e8"
                    ]
                },
                {
                    "command": [
                        "intro H8.",
                        "VernacExtend",
                        "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
                    ]
                },
                {
                    "command": [
                        "rewrite H8.",
                        "VernacExtend",
                        "ef335154f8a1120928ddce71bc7a2456078d36bc"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply Neqb_correct.",
                        "VernacExtend",
                        "44ce40dca1a752c4f29effe8c09acf1cbe16e2b0"
                    ]
                },
                {
                    "command": [
                        "rewrite H5 in H4.",
                        "VernacExtend",
                        "6fb256c69b1bac2a844704df965e932f551f8484"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0)) in H4.",
                        "VernacExtend",
                        "4a07f0f06ce402923edfe5aefe9f4479d8e70423"
                    ]
                },
                {
                    "command": [
                        "rewrite bool_fun_neg_zero in H4.",
                        "VernacExtend",
                        "76f2223d886872d2fb83d38a6e3d08033ab7e5d0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0))) in H4.",
                        "VernacExtend",
                        "5a7311b9cfbb9b15e30e7c0bf89ab2f99ab8c262"
                    ]
                },
                {
                    "command": [
                        "apply BDDunique with (cfg := (bs, (share, counter))).",
                        "VernacExtend",
                        "bcbc683f16bcc237041f4980dc3acdcddde8a3f6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right; left; reflexivity.",
                        "VernacExtend",
                        "5a118052bb4917388678099c35ce2082d23a96c2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H5; clear H5; intro.",
                        "VernacExtend",
                        "55a6aaa84fde74faefd4706ae7b7019790068c7a"
                    ]
                },
                {
                    "command": [
                        "cut (node' = BDDzero).",
                        "VernacExtend",
                        "363a5f709243934bc6b00d5a5f30231821239f05"
                    ]
                },
                {
                    "command": [
                        "intro H6.",
                        "VernacExtend",
                        "78ab87e2608ab6290c463d6d32d90c8aabbd5eaa"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "elim n.",
                        "VernacExtend",
                        "c68f766a88bb5402d72ee6adaca953661a5d18b2"
                    ]
                },
                {
                    "command": [
                        "unfold BDDneg_2 in |- *.",
                        "VernacExtend",
                        "f0f6f78910c3cd645d864a1595bbc545a411c186"
                    ]
                },
                {
                    "command": [
                        "rewrite (config_OK_one (bs, (share, counter)) H0).",
                        "VernacExtend",
                        "2163cda5220bcc1d7cb89b1387c8fa57f1ccf500"
                    ]
                },
                {
                    "command": [
                        "cut (Neqb BDDone BDDzero = false).",
                        "VernacExtend",
                        "72221279cee8347a9b807f0330cdee5095ad9123"
                    ]
                },
                {
                    "command": [
                        "intro H7.",
                        "VernacExtend",
                        "fdf814253dc825557adb6789b752d060ee4394be"
                    ]
                },
                {
                    "command": [
                        "rewrite H7.",
                        "VernacExtend",
                        "2b0de906e9dfacfe89c031c2266760d29b5450f6"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros n0 H7.",
                        "VernacExtend",
                        "e323493c8a49f1f78eb0a9359ec62b4d71d48e53"
                    ]
                },
                {
                    "command": [
                        "unfold BDDneg_2 in |- *.",
                        "VernacExtend",
                        "f0f6f78910c3cd645d864a1595bbc545a411c186"
                    ]
                },
                {
                    "command": [
                        "fold BDDneg_2 in |- *.",
                        "VernacExtend",
                        "dbb76b54a49549110cc606dea3f5fd19127e6884"
                    ]
                },
                {
                    "command": [
                        "rewrite (config_OK_one (bs, (share, counter)) H0).",
                        "VernacExtend",
                        "2163cda5220bcc1d7cb89b1387c8fa57f1ccf500"
                    ]
                },
                {
                    "command": [
                        "cut (Neqb BDDone BDDzero = false).",
                        "VernacExtend",
                        "72221279cee8347a9b807f0330cdee5095ad9123"
                    ]
                },
                {
                    "command": [
                        "intro H8.",
                        "VernacExtend",
                        "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
                    ]
                },
                {
                    "command": [
                        "rewrite H8.",
                        "VernacExtend",
                        "ef335154f8a1120928ddce71bc7a2456078d36bc"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite H5 in H4.",
                        "VernacExtend",
                        "6fb256c69b1bac2a844704df965e932f551f8484"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0))) in H4.",
                        "VernacExtend",
                        "ab22a726ccd452dc8a1b5b75bbfd5c452b3d1c48"
                    ]
                },
                {
                    "command": [
                        "rewrite bool_fun_neg_one in H4.",
                        "VernacExtend",
                        "67af31ea9cedb564f2fc6eeffedec57c7986d2b5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0)) in H4.",
                        "VernacExtend",
                        "052a1e745526e808f5b4244d38176d8e638ef686"
                    ]
                },
                {
                    "command": [
                        "apply BDDunique with (cfg := (bs, (share, counter))).",
                        "VernacExtend",
                        "bcbc683f16bcc237041f4980dc3acdcddde8a3f6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "left; reflexivity.",
                        "VernacExtend",
                        "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim (nat_sum n); intro y.",
                        "VernacExtend",
                        "b25d9f6f71355a56760c5944e228209f886737ee"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y.",
                        "VernacExtend",
                        "cbe96a70211e95b8dd0d74d130ec9269c538587a"
                    ]
                },
                {
                    "command": [
                        "intros m H6.",
                        "VernacExtend",
                        "6d8f3806638ffa67648f888064cfa06e539b3668"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs, (share, counter)) node).",
                        "VernacExtend",
                        "b3132957a13adc28efb68a3d31a845c7073ba512"
                    ]
                },
                {
                    "command": [
                        "intro H7.",
                        "VernacExtend",
                        "fdf814253dc825557adb6789b752d060ee4394be"
                    ]
                },
                {
                    "command": [
                        "inversion H7.",
                        "VernacExtend",
                        "42a5ca7b50f733735ed76a249aba00e788a69623"
                    ]
                },
                {
                    "command": [
                        "inversion H8.",
                        "VernacExtend",
                        "bd1054a31f838f58a763ae9f4c46f33682fb2e03"
                    ]
                },
                {
                    "command": [
                        "inversion H9.",
                        "VernacExtend",
                        "ba06d75575d77a771abfe438435f8748713f713e"
                    ]
                },
                {
                    "command": [
                        "simpl in H10.",
                        "VernacExtend",
                        "6acaa2af25fff35ccd9e9f70e896f9c83855b8e6"
                    ]
                },
                {
                    "command": [
                        "rewrite H10.",
                        "VernacExtend",
                        "cd2638bc5a7f85648c5e2c9d77046abc07e2da6a"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs, (share, counter)) node').",
                        "VernacExtend",
                        "75503d606ac7ca2181ab872dd1c3d343a192c28e"
                    ]
                },
                {
                    "command": [
                        "intro H11.",
                        "VernacExtend",
                        "94ccd5954f5b20492a368275203c835bb786888f"
                    ]
                },
                {
                    "command": [
                        "inversion H11.",
                        "VernacExtend",
                        "e3dad2cd24e24300a066e006efd8d61e85377ebb"
                    ]
                },
                {
                    "command": [
                        "inversion H12.",
                        "VernacExtend",
                        "d5ec1d67ecbf066a6575bda368738e1ad0dbbc60"
                    ]
                },
                {
                    "command": [
                        "inversion H13.",
                        "VernacExtend",
                        "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
                    ]
                },
                {
                    "command": [
                        "clear H8 H9 H12 H13.",
                        "VernacExtend",
                        "ad51602abbd1ae5cd6b36d1f96dc8a85afdb45d1"
                    ]
                },
                {
                    "command": [
                        "cut (BDDneg_2 (bs, (share, counter)) x0 m = (bs, (share, counter), x3)).",
                        "VernacExtend",
                        "65f39e9581f0c70cd76f8cdddac4eef3021e1a67"
                    ]
                },
                {
                    "command": [
                        "intro H8.",
                        "VernacExtend",
                        "be036f7c8b2c44ba07866b8ca6160d85c16a0335"
                    ]
                },
                {
                    "command": [
                        "rewrite H8.",
                        "VernacExtend",
                        "ef335154f8a1120928ddce71bc7a2456078d36bc"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "cut (BDDneg_2 (bs, (share, counter)) x1 m = (bs, (share, counter), x4)).",
                        "VernacExtend",
                        "248f8d12ec295c1c2311906045fa67dabd2e03a0"
                    ]
                },
                {
                    "command": [
                        "intro H9.",
                        "VernacExtend",
                        "3a5cee2c4602853379bc498c20515b4b8bb64031"
                    ]
                },
                {
                    "command": [
                        "rewrite H9.",
                        "VernacExtend",
                        "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold BDDmake in |- *.",
                        "VernacExtend",
                        "e024e21e57cdcb68e3fdabd2e39cd91b67231b0f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "cut (Neqb x3 x4 = false).",
                        "VernacExtend",
                        "10ee221049523039091c75aa357c69b2e216135f"
                    ]
                },
                {
                    "command": [
                        "intro H12.",
                        "VernacExtend",
                        "afc6629c474ec2e325da340fcb3a46ec73eead51"
                    ]
                },
                {
                    "command": [
                        "rewrite H12.",
                        "VernacExtend",
                        "808735886b50c5c4d7707b33984e66555647a2a9"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "intros H13 H15.",
                        "VernacExtend",
                        "d4d3d2759be8f1924d0e37bc24a5fe95e7a26372"
                    ]
                },
                {
                    "command": [
                        "unfold BDDsharing_OK in H15.",
                        "VernacExtend",
                        "282dcb4d4f061851765f1421bac725446085a554"
                    ]
                },
                {
                    "command": [
                        "cut (x = x2).",
                        "VernacExtend",
                        "36460008cbc0b94e842c9fe0956cbf85189982ae"
                    ]
                },
                {
                    "command": [
                        "intro H16.",
                        "VernacExtend",
                        "c16d9f76387f574dd166fbfa7eb1ba04610dff17"
                    ]
                },
                {
                    "command": [
                        "rewrite H16.",
                        "VernacExtend",
                        "d46611b9926d3411ed586aec14fbb4de59848bae"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj2 (proj1 H15 x2 x3 x4 node') H14).",
                        "VernacExtend",
                        "59435abdb090ac0fe5158bfc16a9b92f35d6a85e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "cut (x = var (bs, (share, counter)) node).",
                        "VernacExtend",
                        "c5769f6dca04999df36893e51fddcf8e76ae2e58"
                    ]
                },
                {
                    "command": [
                        "cut (x2 = var (bs, (share, counter)) node').",
                        "VernacExtend",
                        "358df969b770164fe9cb6bc6d1c6d3dbb4594184"
                    ]
                },
                {
                    "command": [
                        "intros H16 H17.",
                        "VernacExtend",
                        "070a46417e8e4048bf752eaf9a8d2ee7fd3510d4"
                    ]
                },
                {
                    "command": [
                        "rewrite H16.",
                        "VernacExtend",
                        "d46611b9926d3411ed586aec14fbb4de59848bae"
                    ]
                },
                {
                    "command": [
                        "rewrite H17.",
                        "VernacExtend",
                        "05ed26bf77cdb384d29c02889c582eb23b3f955e"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neg_eq_var_2 with (cfg := (bs, (share, counter))).",
                        "VernacExtend",
                        "07e6ee5665f8f06c8f258731d7c3e72848a8f1a6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold var in |- *.",
                        "VernacExtend",
                        "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
                    ]
                },
                {
                    "command": [
                        "rewrite H14.",
                        "VernacExtend",
                        "b53d81c05d6007e728db7abfa7c98c200268f9e7"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold var in |- *.",
                        "VernacExtend",
                        "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite H10; reflexivity.",
                        "VernacExtend",
                        "21be9a2c55e5359efebbf3e537c6aa9238b3aeb8"
                    ]
                },
                {
                    "command": [
                        "cut (x3 = low (bs, (share, counter)) node').",
                        "VernacExtend",
                        "0a070d502d9d2625875441616a42e0a4d4a15bd7"
                    ]
                },
                {
                    "command": [
                        "cut (x4 = high (bs, (share, counter)) node').",
                        "VernacExtend",
                        "e40080ef428eb26dbf89e053e1103cecc25e9f74"
                    ]
                },
                {
                    "command": [
                        "intros H12 H13.",
                        "VernacExtend",
                        "e0dd55c9e1248584e48afcfdb8ca96e7939013e1"
                    ]
                },
                {
                    "command": [
                        "rewrite H13.",
                        "VernacExtend",
                        "bc2d32522e887645239b994008e234c058557cd9"
                    ]
                },
                {
                    "command": [
                        "rewrite H12.",
                        "VernacExtend",
                        "808735886b50c5c4d7707b33984e66555647a2a9"
                    ]
                },
                {
                    "command": [
                        "apply low_high_neq.",
                        "VernacExtend",
                        "5bbc81050d70154e424751b43b474476254f8c37"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold high in |- *; rewrite H14; reflexivity.",
                        "VernacExtend",
                        "485b89e8fcfc8a6a27f0957b0994bbc664065bbf"
                    ]
                },
                {
                    "command": [
                        "unfold low in |- *; rewrite H14; reflexivity.",
                        "VernacExtend",
                        "ef4bec85740ae26c5f74505c9e2b9e1a055a622f"
                    ]
                },
                {
                    "command": [
                        "cut (x1 = high (bs, (share, counter)) node).",
                        "VernacExtend",
                        "152c949a8832dad6aad7fe417753fcdad491c02f"
                    ]
                },
                {
                    "command": [
                        "cut (x4 = high (bs, (share, counter)) node').",
                        "VernacExtend",
                        "e40080ef428eb26dbf89e053e1103cecc25e9f74"
                    ]
                },
                {
                    "command": [
                        "intros H9 H12.",
                        "VernacExtend",
                        "dac8c34c3de2ead9f890c6aa41366dcfe55e6480"
                    ]
                },
                {
                    "command": [
                        "rewrite H9; rewrite H12.",
                        "VernacExtend",
                        "e567c49dcf344fc4096545a61df8b180037e57d9"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "unfold lt in |- *.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro H13.",
                        "VernacExtend",
                        "feb8e9eb0f7422cc52051473f8890af27e8240ca"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans_1 with (y := nat_of_N (var (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "c97e3366eb7cfd33d3d6c89b7934bee007a6780a"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high.",
                        "VernacExtend",
                        "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H6; apply H3.",
                        "VernacExtend",
                        "e303eef8d7c871ad67e0b4b1fb78bcb5af2d0d14"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node') (var (bs, (share, counter)) node') true).",
                        "VernacExtend",
                        "9e0f8b8a8dd68984d5bbc3b9c5db56cb554627cf"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_neg (bool_fun_of_BDD (bs, (share, counter)) node)) (var (bs, (share, counter)) node') true).",
                        "VernacExtend",
                        "f644b4baa10dc269847862140ab168161e83967c"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (var (bs, (share, counter)) node = var (bs, (share, counter)) node').",
                        "VernacExtend",
                        "8ce582871e80fcb9df319ebf48b21f554483c0a0"
                    ]
                },
                {
                    "command": [
                        "intro H13.",
                        "VernacExtend",
                        "feb8e9eb0f7422cc52051473f8890af27e8240ca"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H13.",
                        "VernacExtend",
                        "6c85a10bc571ed18b4943b05e16b8e82ed668a71"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_neg (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) true)).",
                        "VernacExtend",
                        "5372daee572125c119ae1c4186c5e7b83cbd50f1"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_neg_1.",
                        "VernacExtend",
                        "dd50a0f15997e2582463ed4e709da7f4d6037a0b"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDD_ext.",
                        "VernacExtend",
                        "b4ca4bcdc77510aa1141d8e839805305e49722a4"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_neg_1.",
                        "VernacExtend",
                        "69d3915abefc36d8120b98cbdd9c97178dccb557"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDhigh.",
                        "VernacExtend",
                        "e1229a3a1a451cc3849555f2441feefb4b90e1ea"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neg_eq_var_2.",
                        "VernacExtend",
                        "e02dbe0b934bd3bdcf21dfe0539291d42fb355f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold high in |- *; rewrite H14; reflexivity.",
                        "VernacExtend",
                        "485b89e8fcfc8a6a27f0957b0994bbc664065bbf"
                    ]
                },
                {
                    "command": [
                        "unfold high in |- *; simpl in |- *; rewrite H10; reflexivity.",
                        "VernacExtend",
                        "48869d1baec18dd4e9aeab560d48fef5831c7960"
                    ]
                },
                {
                    "command": [
                        "cut (x0 = low (bs, (share, counter)) node).",
                        "VernacExtend",
                        "1b5ccb871d4aa267fd27180a2a6e54c6f61a8501"
                    ]
                },
                {
                    "command": [
                        "cut (x3 = low (bs, (share, counter)) node').",
                        "VernacExtend",
                        "0a070d502d9d2625875441616a42e0a4d4a15bd7"
                    ]
                },
                {
                    "command": [
                        "intros H8 H9.",
                        "VernacExtend",
                        "f720374270a7af876475ce0f9bf0d300f82ebc9a"
                    ]
                },
                {
                    "command": [
                        "rewrite H8; rewrite H9.",
                        "VernacExtend",
                        "34c5194029a4b43c0f6e311d2c8236ade96e5973"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "unfold lt in |- *.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros H12.",
                        "VernacExtend",
                        "38ce12dc49ef460d3f36340ad59c2d24672edb76"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans_1 with (y := nat_of_N (var (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "c97e3366eb7cfd33d3d6c89b7934bee007a6780a"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low.",
                        "VernacExtend",
                        "ba66c15448aced83d225d0e66a0f593162c936e4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H6; apply H3.",
                        "VernacExtend",
                        "e303eef8d7c871ad67e0b4b1fb78bcb5af2d0d14"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node') (var (bs, (share, counter)) node') false).",
                        "VernacExtend",
                        "d9e27601e61432dc30e1e8b6aa964e5125062029"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDlow.",
                        "VernacExtend",
                        "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bool_fun_restrict (bool_fun_neg (bool_fun_of_BDD (bs, (share, counter)) node)) (var (bs, (share, counter)) node') false).",
                        "VernacExtend",
                        "d7fe583ddb711875c140bba954b347c1bdadc2ea"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_eq.",
                        "VernacExtend",
                        "11f9a6ae6ae767372a33f3f78fb49ad3c8d06066"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (var (bs, (share, counter)) node = var (bs, (share, counter)) node').",
                        "VernacExtend",
                        "8ce582871e80fcb9df319ebf48b21f554483c0a0"
                    ]
                },
                {
                    "command": [
                        "intro H12.",
                        "VernacExtend",
                        "afc6629c474ec2e325da340fcb3a46ec73eead51"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H12.",
                        "VernacExtend",
                        "535d97bd150861302e54cffeb5719d00d6f597bb"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_trans with (bf2 := bool_fun_neg (bool_fun_restrict (bool_fun_of_BDD (bs, (share, counter)) node) (var (bs, (share, counter)) node) false)).",
                        "VernacExtend",
                        "921a945c3f4d869c97263452d8dcd3b7a21c5dd9"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_restrict_neg_1.",
                        "VernacExtend",
                        "dd50a0f15997e2582463ed4e709da7f4d6037a0b"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDD_ext.",
                        "VernacExtend",
                        "b4ca4bcdc77510aa1141d8e839805305e49722a4"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_neg_1.",
                        "VernacExtend",
                        "69d3915abefc36d8120b98cbdd9c97178dccb557"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_symm.",
                        "VernacExtend",
                        "73fa3a3a2497c0b386217306245e24d6a4156e53"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_of_BDDlow.",
                        "VernacExtend",
                        "5c32aa08fa29ebff14c073e1f46062ba31fc1b93"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neg_eq_var_2.",
                        "VernacExtend",
                        "e02dbe0b934bd3bdcf21dfe0539291d42fb355f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold low in |- *; rewrite H14; reflexivity.",
                        "VernacExtend",
                        "ef4bec85740ae26c5f74505c9e2b9e1a055a622f"
                    ]
                },
                {
                    "command": [
                        "unfold low in |- *; simpl in |- *; rewrite H10; reflexivity.",
                        "VernacExtend",
                        "1903fad1bb827fa4bc7aa977b00ec1a3cbe7bf63"
                    ]
                },
                {
                    "command": [
                        "elim H2; intro.",
                        "VernacExtend",
                        "939c927788b9492b13127156d1f300437fdf7754"
                    ]
                },
                {
                    "command": [
                        "rewrite H11 in H4.",
                        "VernacExtend",
                        "2e728389d3597e8a81286fb837f180c571fd8cef"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0)) in H4.",
                        "VernacExtend",
                        "4a07f0f06ce402923edfe5aefe9f4479d8e70423"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bool_fun_neg_one in H4.",
                        "VernacExtend",
                        "c559be99f12bc31b6d9ebc3821c807e2cda45f47"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq bool_fun_one (bool_fun_of_BDD (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "96a360dd4d1335bc6021d659bdb71419584b7fe9"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_lemma.",
                        "VernacExtend",
                        "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (internal_node_not_constant (bs, (share, counter)) node H0 H7)).",
                        "VernacExtend",
                        "b656f2cd908065c9530220c1acb4f7608d42b501"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_neg.",
                        "VernacExtend",
                        "3ff24d293fdb4c76e4925fdba5f476a24ced3f0c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H11; clear H11; intro.",
                        "VernacExtend",
                        "71ae67b6deaa8f93aeec1998eb0947adb39d0749"
                    ]
                },
                {
                    "command": [
                        "rewrite H11 in H4.",
                        "VernacExtend",
                        "2e728389d3597e8a81286fb837f180c571fd8cef"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (proj2 (bool_fun_of_BDD_semantics (bs, (share, counter)) H0))) in H4.",
                        "VernacExtend",
                        "ab22a726ccd452dc8a1b5b75bbfd5c452b3d1c48"
                    ]
                },
                {
                    "command": [
                        "rewrite <- bool_fun_neg_zero in H4.",
                        "VernacExtend",
                        "0dd3a066a2049e6ccee0f3e0e3e858b0f634d191"
                    ]
                },
                {
                    "command": [
                        "absurd (bool_fun_eq bool_fun_zero (bool_fun_of_BDD (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "affa7e7f91d53e7248717c1f5630d386e1c4e781"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_neq_lemma.",
                        "VernacExtend",
                        "482cfb94a9fa2c4b150bafd4cadcf5f9be436cc7"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (internal_node_not_constant (bs, (share, counter)) node H0 H7)).",
                        "VernacExtend",
                        "17483ab61b14f41aa91199e592e9d692b429d355"
                    ]
                },
                {
                    "command": [
                        "apply bool_fun_eq_neg.",
                        "VernacExtend",
                        "3ff24d293fdb4c76e4925fdba5f476a24ced3f0c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "absurd (nat_of_N (var (bs, (share, counter)) node) < n).",
                        "VernacExtend",
                        "5d3d1d8b5f3cab578c88198d602784abeb1ca893"
                    ]
                },
                {
                    "command": [
                        "rewrite y.",
                        "VernacExtend",
                        "981e1312d3ff196b34a8ce70ebd2fc1285cb160f"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_O.",
                        "VernacExtend",
                        "913e93c160ca9fcb042f8969be299cf2131009e7"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "apply in_dom_is_internal.",
                        "VernacExtend",
                        "8e7d402fef228308cab9bd2067ca125148534513"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDneg_memo_OK_1_2",
            "line_nb": 422,
            "steps": [
                {
                    "command": [
                        "unfold BDDneg_memo_OK_1 in |- *.",
                        "VernacExtend",
                        "e150dde0c3df72cb4514f5ac5e499f05cedb36ab"
                    ]
                },
                {
                    "command": [
                        "unfold BDDneg_memo_OK_2 in |- *.",
                        "VernacExtend",
                        "7c3ac249e556515bebc2929824e4a88573d12690"
                    ]
                },
                {
                    "command": [
                        "intros cfg memo H node node' bound H0 H1 H2.",
                        "VernacExtend",
                        "d78a6e8b9ff94519193ca1456b7f0a4370ba6256"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (H node node' bound H1 H2)).",
                        "VernacExtend",
                        "5a7c57625be2238448dd4977425956ead996691f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDneg_memo_OK_bool_fun_1",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg.",
                        "VernacExtend",
                        "12efe1abfde7108a67f3516136c0b2a4a5095d26"
                    ]
                },
                {
                    "command": [
                        "intros bs y.",
                        "VernacExtend",
                        "d45133e21e3eb2c4564ae730ba47345baa980eb9"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros memo node node' H H0 H1 H2.",
                        "VernacExtend",
                        "cfdc93cd2a981b162a1a6ae03c44f5b669cfdd4f"
                    ]
                },
                {
                    "command": [
                        "unfold BDDneg_memo_OK_1 in H0.",
                        "VernacExtend",
                        "0aef1e6a2d311a65c348c59a5455fd35ef5fa0b2"
                    ]
                },
                {
                    "command": [
                        "cut (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))) = (bs, (share, counter), node')).",
                        "VernacExtend",
                        "e3390aa40da13d5c568423a907b3f326003fa4dc"
                    ]
                },
                {
                    "command": [
                        "intro H3.",
                        "VernacExtend",
                        "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs, (share, counter)) node -> nat_of_N (var (bs, (share, counter)) node) < S (nat_of_N (var (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "e0b009a61990ba503dbf247c2f149cf28f62d50d"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "cut (bool_fun_of_BDD (bs, (share, counter)) node' = bool_fun_of_BDD (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))))).",
                        "VernacExtend",
                        "19a1bbbf7eb96ac5b0f55b2b8a642e766bd84b49"
                    ]
                },
                {
                    "command": [
                        "intro H5.",
                        "VernacExtend",
                        "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (proj2 (proj2 (proj2 (BDDneg_2_lemma (S (nat_of_N (var (bs, (share, counter)) node))) (bs, (share, counter)) node H H1 H4))))).",
                        "VernacExtend",
                        "165bd63de70b6bc19c28ba2498b789ae59b8a4b3"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "unfold lt in |- *; apply le_n.",
                        "VernacExtend",
                        "04ef85d2c098e9743304bae0c697d1373efb56af"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro H3.",
                        "VernacExtend",
                        "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
                    ]
                },
                {
                    "command": [
                        "unfold lt in |- *; apply le_n.",
                        "VernacExtend",
                        "04ef85d2c098e9743304bae0c697d1373efb56af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDneg_memo_OK_bool_fun_1'",
            "line_nb": 454,
            "steps": [
                {
                    "command": [
                        "intros cfg memo node node' H H0 H1 H2.",
                        "VernacExtend",
                        "cc7de6e3c53a80d7e87849685591e44a519dd827"
                    ]
                },
                {
                    "command": [
                        "apply BDDneg_memo_OK_bool_fun_1 with (memo := memo).",
                        "VernacExtend",
                        "5b06ccac5d1af7b049c235c6affab4a940f0cd21"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply BDDneg_memo_OK_1_2.",
                        "VernacExtend",
                        "8c6c8c16bf399bb342a2b4b166a1c5e89311a772"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDmake_preserves_nodes",
            "line_nb": 464,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg.",
                        "VernacExtend",
                        "12efe1abfde7108a67f3516136c0b2a4a5095d26"
                    ]
                },
                {
                    "command": [
                        "intros bs y.",
                        "VernacExtend",
                        "d45133e21e3eb2c4564ae730ba47345baa980eb9"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros x l r H00.",
                        "VernacExtend",
                        "d29c7d3e80e053b9b92aaa593165806929809980"
                    ]
                },
                {
                    "command": [
                        "unfold nodes_preserved in |- *.",
                        "VernacExtend",
                        "388597c7ddc531964af1977fca156ac00fb776b9"
                    ]
                },
                {
                    "command": [
                        "unfold BDDmake in |- *.",
                        "VernacExtend",
                        "e024e21e57cdcb68e3fdabd2e39cd91b67231b0f"
                    ]
                },
                {
                    "command": [
                        "elim (sumbool_of_bool (Neqb l r)).",
                        "VernacExtend",
                        "696ce56d5959f04d54e04596f8dfe1e950b9a573"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "rewrite y.",
                        "VernacExtend",
                        "981e1312d3ff196b34a8ce70ebd2fc1285cb160f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros; assumption.",
                        "VernacExtend",
                        "5cc15d3651e27d2e3e1e2b44ec8880d58345a162"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "rewrite y.",
                        "VernacExtend",
                        "981e1312d3ff196b34a8ce70ebd2fc1285cb160f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "elim (option_sum _ (BDDshare_lookup share x l r)).",
                        "VernacExtend",
                        "4960a10699736a6083b59777d9784cc0e1e2d3e5"
                    ]
                },
                {
                    "command": [
                        "intro y0.",
                        "VernacExtend",
                        "d1834bf95553ce1485d1c19693bbdd1e392d677e"
                    ]
                },
                {
                    "command": [
                        "inversion y0.",
                        "VernacExtend",
                        "cd324674cd5c5d041ae8ef2309523a290e2593c2"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x1 l0 r0 node H0.",
                        "VernacExtend",
                        "f51ee02d0cac090efb171a4ea2eb74ebdfedcb17"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro y0.",
                        "VernacExtend",
                        "d1834bf95553ce1485d1c19693bbdd1e392d677e"
                    ]
                },
                {
                    "command": [
                        "rewrite y0.",
                        "VernacExtend",
                        "7c49b02e6ca9f37932239a392b49cbff57144730"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "elim H00.",
                        "VernacExtend",
                        "5a48bfa70e9b9bfe1f57eec692c3f3c15578d304"
                    ]
                },
                {
                    "command": [
                        "intros H H0 x0 l0 r0 node H1.",
                        "VernacExtend",
                        "8ecc963c7be42da06776798918f4706780cdfb82"
                    ]
                },
                {
                    "command": [
                        "rewrite (MapPut_semantics (BDDvar * (ad * ad)) bs counter (x, (l, r)) node).",
                        "VernacExtend",
                        "157ca72475d462bfc36f137c3ac7f81be92bd101"
                    ]
                },
                {
                    "command": [
                        "elim (sumbool_of_bool (Neqb counter node)).",
                        "VernacExtend",
                        "a72f39ac4bc2c806aae4da4284ca6979dc59aa7a"
                    ]
                },
                {
                    "command": [
                        "intro y1.",
                        "VernacExtend",
                        "4d0ec3273193a8100c12a11465f6beb7953e5c77"
                    ]
                },
                {
                    "command": [
                        "absurd (counter = node).",
                        "VernacExtend",
                        "b2f6ba543508a0bd406b1adca77b1c3ff8610703"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "cut (MapGet (BDDvar * (ad * ad)) bs node = None).",
                        "VernacExtend",
                        "fe9518625bb999ba7c974d8ca99ce692d25f86d9"
                    ]
                },
                {
                    "command": [
                        "intro H3.",
                        "VernacExtend",
                        "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H3; discriminate.",
                        "VernacExtend",
                        "c3f8ccb68cf43a77aebb2151045e071183973f30"
                    ]
                },
                {
                    "command": [
                        "apply (proj1 (proj2 H0)).",
                        "VernacExtend",
                        "6005d65fa91b6a1f9a7491fdf9d5100043322912"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "unfold Nleb in |- *.",
                        "VernacExtend",
                        "77c7288581ce54fc1b81e30fe44a972703b89e5f"
                    ]
                },
                {
                    "command": [
                        "apply leb_correct.",
                        "VernacExtend",
                        "eb18b8d78b95b593c0a583583acbfebffb50773d"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "apply Neqb_complete.",
                        "VernacExtend",
                        "bf79bb5adbc05dd6ee42d6a9e4ee32ba7078e29e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro y1.",
                        "VernacExtend",
                        "4d0ec3273193a8100c12a11465f6beb7953e5c77"
                    ]
                },
                {
                    "command": [
                        "rewrite y1.",
                        "VernacExtend",
                        "19695c3e9f9cec64b8f33bcea2e813183cdade7b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nodes_preserved_2",
            "line_nb": 511,
            "steps": [
                {
                    "command": [
                        "intros cfg cfg' node H H0.",
                        "VernacExtend",
                        "bceae5f6293e7c0c839224a483bd0abf25384e75"
                    ]
                },
                {
                    "command": [
                        "elim H; intro.",
                        "VernacExtend",
                        "f72f8bb994653bc377ef4f37626cba5f2cab4c8b"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "left; reflexivity.",
                        "VernacExtend",
                        "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
                    ]
                },
                {
                    "command": [
                        "elim H1; intro.",
                        "VernacExtend",
                        "69e6dce0928c10bc8e91776963343c6dbf299832"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; right; left; reflexivity.",
                        "VernacExtend",
                        "31c039752efa153ce0aea3ea79268de52ee3e86e"
                    ]
                },
                {
                    "command": [
                        "right; right.",
                        "VernacExtend",
                        "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in H2.",
                        "VernacExtend",
                        "7a6f36deccf9d5229e3cf7ecedb2eb4920e94e37"
                    ]
                },
                {
                    "command": [
                        "elim (option_sum _ (MapGet (BDDvar * (ad * ad)) (fst cfg) node)).",
                        "VernacExtend",
                        "73c9c1b2a8a5b9f6e045e4000fb20bcdd7675849"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "elim y.",
                        "VernacExtend",
                        "2e1340b20b979eff9f29f6f7a068bc217b31672c"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "elim x.",
                        "VernacExtend",
                        "4dae947360dc7d88bee6f5459fc6c026a56c9298"
                    ]
                },
                {
                    "command": [
                        "intro y0.",
                        "VernacExtend",
                        "d1834bf95553ce1485d1c19693bbdd1e392d677e"
                    ]
                },
                {
                    "command": [
                        "intro y1.",
                        "VernacExtend",
                        "4d0ec3273193a8100c12a11465f6beb7953e5c77"
                    ]
                },
                {
                    "command": [
                        "elim y1.",
                        "VernacExtend",
                        "7deb42a0d69f05166c553edfbfcc7a66614866f4"
                    ]
                },
                {
                    "command": [
                        "intros y2 y3 y4.",
                        "VernacExtend",
                        "a37ec199aae417c062da0aa32fbb80092375c854"
                    ]
                },
                {
                    "command": [
                        "unfold nodes_preserved in H0.",
                        "VernacExtend",
                        "9addf30ad0a69b9d7c8c363b3163c4c9d53a13a8"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in |- *.",
                        "VernacExtend",
                        "72f928df3e3c19d4381dea5e9bd4414e3b95a02f"
                    ]
                },
                {
                    "command": [
                        "rewrite (H0 y0 y2 y3 node y4).",
                        "VernacExtend",
                        "7d9ba9db06ce6e2c63d89b0f0df741fb5d8e6637"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "rewrite y in H2.",
                        "VernacExtend",
                        "50861354ba30a184a953418f757632de0ee8027b"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDneg_2_config_OK_lemma_2",
            "line_nb": 537,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg.",
                        "VernacExtend",
                        "12efe1abfde7108a67f3516136c0b2a4a5095d26"
                    ]
                },
                {
                    "command": [
                        "intros bs y.",
                        "VernacExtend",
                        "d45133e21e3eb2c4564ae730ba47345baa980eb9"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros node x l r n m H H0 H1 H2.",
                        "VernacExtend",
                        "31cd1623c679041bd3504f6540bf4fb92bb8358a"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs, (share, counter)) node -> nat_of_N (var (bs, (share, counter)) node) < n).",
                        "VernacExtend",
                        "ca67705c03be2426fda78f4b97068a73af8c4f41"
                    ]
                },
                {
                    "command": [
                        "intro H3.",
                        "VernacExtend",
                        "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
                    ]
                },
                {
                    "command": [
                        "cut (BDDconfig_OK (fst (BDDneg_2 (bs, (share, counter)) l m)) /\\ (forall (x0 : BDDvar) (l0 r0 a : ad), MapGet _ (fst (bs, (share, counter))) a = Some (x0, (l0, r0)) -> MapGet _ (fst (fst (BDDneg_2 (bs, (share, counter)) l m))) a = Some (x0, (l0, r0))) /\\ (is_internal_node (bs, (share, counter)) l -> is_internal_node (fst (BDDneg_2 (bs, (share, counter)) l m)) (snd (BDDneg_2 (bs, (share, counter)) l m)) /\\ var (bs, (share, counter)) l = var (fst (BDDneg_2 (bs, (share, counter)) l m)) (snd (BDDneg_2 (bs, (share, counter)) l m))) /\\ config_node_OK (fst (BDDneg_2 (bs, (share, counter)) l m)) (snd (BDDneg_2 (bs, (share, counter)) l m)) /\\ bool_fun_eq (bool_fun_of_BDD (fst (BDDneg_2 (bs, (share, counter)) l m)) (snd (BDDneg_2 (bs, (share, counter)) l m))) (bool_fun_neg (bool_fun_of_BDD (bs, (share, counter)) l))).",
                        "VernacExtend",
                        "456ee5669b2282d5aa5ed0d0ed3e5318d1b966b7"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "elim H4; clear H4; intros.",
                        "VernacExtend",
                        "ba7107ab40756d56d61fb52c3146c83ee1df4e63"
                    ]
                },
                {
                    "command": [
                        "elim H5; clear H5; intros.",
                        "VernacExtend",
                        "2de304691da3b3e83752d813bd56f658cb9de5b2"
                    ]
                },
                {
                    "command": [
                        "elim H6; clear H6; intros.",
                        "VernacExtend",
                        "7637aee25da9957cdbe2a4589908bb8c3eb5b0d5"
                    ]
                },
                {
                    "command": [
                        "elim H7; clear H7; intros.",
                        "VernacExtend",
                        "b6fee61903bee2af2cb86911f238bb8253a0f3dd"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (fst (BDDneg_2 (bs, (share, counter)) l m)) r -> nat_of_N (var (fst (BDDneg_2 (bs, (share, counter)) l m)) r) < m).",
                        "VernacExtend",
                        "043c27734b4fa2251df5c410426db81bb68ef75f"
                    ]
                },
                {
                    "command": [
                        "intro H9.",
                        "VernacExtend",
                        "3a5cee2c4602853379bc498c20515b4b8bb64031"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDneg_2 (bs, (share, counter)) l m)) r).",
                        "VernacExtend",
                        "72efe6e9662dcc60c0f626261f7ee82f0e37165f"
                    ]
                },
                {
                    "command": [
                        "intro H10.",
                        "VernacExtend",
                        "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (BDDneg_2_lemma m (fst (BDDneg_2 (bs, (share, counter)) l m)) r H4 H10 H9)).",
                        "VernacExtend",
                        "165f28a3205ac42d8d41b2c5f38fca25680ae4fd"
                    ]
                },
                {
                    "command": [
                        "apply nodes_preserved_2 with (cfg := (bs, (share, counter))).",
                        "VernacExtend",
                        "1b43c60ab9895aefb60d244f579154331263f4fe"
                    ]
                },
                {
                    "command": [
                        "cut (r = high (bs, (share, counter)) node).",
                        "VernacExtend",
                        "7829c4f25ed393cec9ec9a7cff413e87d3f0dc1a"
                    ]
                },
                {
                    "command": [
                        "intro H10.",
                        "VernacExtend",
                        "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
                    ]
                },
                {
                    "command": [
                        "rewrite H10.",
                        "VernacExtend",
                        "cd2638bc5a7f85648c5e2c9d77046abc07e2da6a"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split with x; split with l; split with r; assumption.",
                        "VernacExtend",
                        "155fbd215be0756ebfebd242e49d32d93517f52e"
                    ]
                },
                {
                    "command": [
                        "unfold high in |- *.",
                        "VernacExtend",
                        "af6be3a481b55356ef54ee85b5fb2cba596f398f"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold nodes_preserved in |- *.",
                        "VernacExtend",
                        "388597c7ddc531964af1977fca156ac00fb776b9"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro H9.",
                        "VernacExtend",
                        "3a5cee2c4602853379bc498c20515b4b8bb64031"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) (high (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "b814f80db45bffc5d1eb82f58679c238c6f54d48"
                    ]
                },
                {
                    "command": [
                        "intro H10.",
                        "VernacExtend",
                        "67fffa6ecd4784c1569cfec5753d9395bd452cc8"
                    ]
                },
                {
                    "command": [
                        "unfold high in H10.",
                        "VernacExtend",
                        "449af4bb1ecc2a6d0612ad3029acbe403d7408a1"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H10.",
                        "VernacExtend",
                        "07f0916778e8d6888913c95d2b156ad45ab6aea1"
                    ]
                },
                {
                    "command": [
                        "elim H10.",
                        "VernacExtend",
                        "3aaff7ab72e35409d807ecb34fcae6826e33ee60"
                    ]
                },
                {
                    "command": [
                        "intro H11.",
                        "VernacExtend",
                        "94ccd5954f5b20492a368275203c835bb786888f"
                    ]
                },
                {
                    "command": [
                        "inversion H9.",
                        "VernacExtend",
                        "ba06d75575d77a771abfe438435f8748713f713e"
                    ]
                },
                {
                    "command": [
                        "inversion H12.",
                        "VernacExtend",
                        "d5ec1d67ecbf066a6575bda368738e1ad0dbbc60"
                    ]
                },
                {
                    "command": [
                        "inversion H13.",
                        "VernacExtend",
                        "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
                    ]
                },
                {
                    "command": [
                        "rewrite H11 in H14.",
                        "VernacExtend",
                        "1bc1ff06798cf818fdf2ecbdb55f398c1c035c7e"
                    ]
                },
                {
                    "command": [
                        "rewrite (config_OK_zero (fst (BDDneg_2 (bs, (share, counter)) l m)) H4) in H14; discriminate.",
                        "VernacExtend",
                        "8a384994d3f50cf99b672fdaf5abdb471a4e73d6"
                    ]
                },
                {
                    "command": [
                        "intro H11.",
                        "VernacExtend",
                        "94ccd5954f5b20492a368275203c835bb786888f"
                    ]
                },
                {
                    "command": [
                        "elim H11; intro.",
                        "VernacExtend",
                        "0c29eb3ff440f3a0ec9425df045e9df7bd15a2a4"
                    ]
                },
                {
                    "command": [
                        "inversion H9.",
                        "VernacExtend",
                        "ba06d75575d77a771abfe438435f8748713f713e"
                    ]
                },
                {
                    "command": [
                        "inversion H13.",
                        "VernacExtend",
                        "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
                    ]
                },
                {
                    "command": [
                        "inversion H14.",
                        "VernacExtend",
                        "158c311bb69c3e5a75670dfcbe8f342a533b833e"
                    ]
                },
                {
                    "command": [
                        "rewrite H12 in H15.",
                        "VernacExtend",
                        "78e7c4066566b8e3a5d52511fd8c430cde3a7a50"
                    ]
                },
                {
                    "command": [
                        "rewrite (config_OK_one (fst (BDDneg_2 (bs, (share, counter)) l m)) H4) in H15; discriminate.",
                        "VernacExtend",
                        "8f11f4359df760eacce7e51b9c063ca51ae654c9"
                    ]
                },
                {
                    "command": [
                        "elim (option_sum _ (MapGet _ (fst (bs, (share, counter))) r)).",
                        "VernacExtend",
                        "9848fa864377c52e7dcab878a84a8163d41bde83"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "elim y.",
                        "VernacExtend",
                        "2e1340b20b979eff9f29f6f7a068bc217b31672c"
                    ]
                },
                {
                    "command": [
                        "intro x0.",
                        "VernacExtend",
                        "e74c874e61a3691df9987468fe1f6ab72f4039f2"
                    ]
                },
                {
                    "command": [
                        "elim x0.",
                        "VernacExtend",
                        "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
                    ]
                },
                {
                    "command": [
                        "intro y0.",
                        "VernacExtend",
                        "d1834bf95553ce1485d1c19693bbdd1e392d677e"
                    ]
                },
                {
                    "command": [
                        "intro y1.",
                        "VernacExtend",
                        "4d0ec3273193a8100c12a11465f6beb7953e5c77"
                    ]
                },
                {
                    "command": [
                        "elim y1.",
                        "VernacExtend",
                        "7deb42a0d69f05166c553edfbfcc7a66614866f4"
                    ]
                },
                {
                    "command": [
                        "intros y2 y3 y4.",
                        "VernacExtend",
                        "a37ec199aae417c062da0aa32fbb80092375c854"
                    ]
                },
                {
                    "command": [
                        "cut (var (fst (BDDneg_2 (bs, (share, counter)) l m)) r = var (bs, (share, counter)) r).",
                        "VernacExtend",
                        "20fa3e715f8cc3487fdb8cb3d1a236314f033db4"
                    ]
                },
                {
                    "command": [
                        "intro H13.",
                        "VernacExtend",
                        "feb8e9eb0f7422cc52051473f8890af27e8240ca"
                    ]
                },
                {
                    "command": [
                        "rewrite H13.",
                        "VernacExtend",
                        "bc2d32522e887645239b994008e234c058557cd9"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans_1 with (y := nat_of_N (var (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "c97e3366eb7cfd33d3d6c89b7934bee007a6780a"
                    ]
                },
                {
                    "command": [
                        "replace r with (high (bs, (share, counter)) node).",
                        "VernacExtend",
                        "c6f0e2437bc5e8d165f732ab4b800e83a8d0236e"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_high.",
                        "VernacExtend",
                        "36c04d2071ea8951d4ddd9ed68c102503f4be0ad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split with x; split with l; split with r; assumption.",
                        "VernacExtend",
                        "155fbd215be0756ebfebd242e49d32d93517f52e"
                    ]
                },
                {
                    "command": [
                        "unfold high in |- *.",
                        "VernacExtend",
                        "af6be3a481b55356ef54ee85b5fb2cba596f398f"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "split with y0; split with y2; split with y3; assumption.",
                        "VernacExtend",
                        "e262d7409e0e1d8d5a1085a98879c939df506f59"
                    ]
                },
                {
                    "command": [
                        "unfold high in |- *; rewrite H0; reflexivity.",
                        "VernacExtend",
                        "52c09e9edbc70bbea86198ed24d314f414df7c87"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2; assumption.",
                        "VernacExtend",
                        "a178803b3bf8532fa1c595c341b91695aa2e9417"
                    ]
                },
                {
                    "command": [
                        "unfold var in |- *.",
                        "VernacExtend",
                        "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
                    ]
                },
                {
                    "command": [
                        "rewrite y4.",
                        "VernacExtend",
                        "50ad2e96a8966c058276df33348aa69f2a6fc1cb"
                    ]
                },
                {
                    "command": [
                        "rewrite (H5 y0 y2 y3 r y4).",
                        "VernacExtend",
                        "60c6ad8a89ff078be34b64649b17adb33cec52db"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "unfold in_dom in H12.",
                        "VernacExtend",
                        "7821fd42acf740da840a0c88267c18fe01d39dad"
                    ]
                },
                {
                    "command": [
                        "rewrite y in H12; discriminate.",
                        "VernacExtend",
                        "4dce1ebad604f4ea763c13da34f1ba38be279c54"
                    ]
                },
                {
                    "command": [
                        "apply high_OK.",
                        "VernacExtend",
                        "65824a85d04353d3b2c9e768c4400fc7913b6399"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split with x; split with l; split with r; assumption.",
                        "VernacExtend",
                        "155fbd215be0756ebfebd242e49d32d93517f52e"
                    ]
                },
                {
                    "command": [
                        "apply BDDneg_2_lemma.",
                        "VernacExtend",
                        "eb0a056c21033cf4e1981eef4b1910d12d7d837a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "replace l with (low (bs, (share, counter)) node).",
                        "VernacExtend",
                        "f08fa06e88c7507e0dffbb886c5cfd65cc751bf0"
                    ]
                },
                {
                    "command": [
                        "apply low_OK.",
                        "VernacExtend",
                        "5ed56720b3cf2ad1db98fcc143f5241d0f2adfb7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split with x; split with l; split with r; assumption.",
                        "VernacExtend",
                        "155fbd215be0756ebfebd242e49d32d93517f52e"
                    ]
                },
                {
                    "command": [
                        "unfold low in |- *; rewrite H0; reflexivity.",
                        "VernacExtend",
                        "1b1f74db7da8cd9953177ad8d48052bcf93c51aa"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans_1 with (y := nat_of_N (var (bs, (share, counter)) node)).",
                        "VernacExtend",
                        "c97e3366eb7cfd33d3d6c89b7934bee007a6780a"
                    ]
                },
                {
                    "command": [
                        "apply BDDcompare_lt.",
                        "VernacExtend",
                        "806e35cb45472b6c64abdbcf49956e2296576205"
                    ]
                },
                {
                    "command": [
                        "replace l with (low (bs, (share, counter)) node).",
                        "VernacExtend",
                        "f08fa06e88c7507e0dffbb886c5cfd65cc751bf0"
                    ]
                },
                {
                    "command": [
                        "apply BDDvar_ordered_low.",
                        "VernacExtend",
                        "ba66c15448aced83d225d0e66a0f593162c936e4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split with x.",
                        "VernacExtend",
                        "3e50c224aa12119964b8f71175385058dd7c95e5"
                    ]
                },
                {
                    "command": [
                        "split with l.",
                        "VernacExtend",
                        "1f011da1a8525a6d344d0081af56ed45f93d1ab8"
                    ]
                },
                {
                    "command": [
                        "split with r.",
                        "VernacExtend",
                        "311aeb450423e4c2f7a03fcf8454122ece45c4f8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold low in |- *.",
                        "VernacExtend",
                        "344cb2081628177ec374c362b17ddb5395ae8549"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold low in |- *; rewrite H0; reflexivity.",
                        "VernacExtend",
                        "1b1f74db7da8cd9953177ad8d48052bcf93c51aa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2; assumption.",
                        "VernacExtend",
                        "a178803b3bf8532fa1c595c341b91695aa2e9417"
                    ]
                },
                {
                    "command": [
                        "intro; assumption.",
                        "VernacExtend",
                        "551ec2015f4dd20223b70c4f4cd79f05302e6cf6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nodes_preserved_1",
            "line_nb": 644,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg.",
                        "VernacExtend",
                        "12efe1abfde7108a67f3516136c0b2a4a5095d26"
                    ]
                },
                {
                    "command": [
                        "intros bs y.",
                        "VernacExtend",
                        "d45133e21e3eb2c4564ae730ba47345baa980eb9"
                    ]
                },
                {
                    "command": [
                        "elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "c25209c4360ea5a5a1e3f8105d83e52f06e3e39a"
                    ]
                },
                {
                    "command": [
                        "intros node n m x l r H H0 H1 H2.",
                        "VernacExtend",
                        "cfb93ab08a8255fc52a21bd828e24b0c605a438e"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "apply BDDmake_preserves_nodes.",
                        "VernacExtend",
                        "883b22aa582b05a50b9f3012e72089e52ad7cf10"
                    ]
                },
                {
                    "command": [
                        "apply BDDneg_2_config_OK_lemma_2 with (node := node) (x := x) (n := n).",
                        "VernacExtend",
                        "186d6d962305c9e7b672d9088034ab88b74efad1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BDDneg_memo_OK_lemma_1_4'",
            "line_nb": 661,
            "steps": [
                {
                    "command": [
                        "intro cfg.",
                        "VernacExtend",
                        "bf69e032e607ad08450a39ea80ec430934b829d3"
                    ]
                },
                {
                    "command": [
                        "elim cfg; clear cfg; intros bs y; elim y; clear y; intros share counter.",
                        "VernacExtend",
                        "24beaff02db6975e92561e9dc04313085e6e7903"
                    ]
                },
                {
                    "command": [
                        "intros memo node node' H H0 H1 H2.",
                        "VernacExtend",
                        "cfdc93cd2a981b162a1a6ae03c44f5b669cfdd4f"
                    ]
                },
                {
                    "command": [
                        "unfold BDDneg_memo_OK_2 in H0.",
                        "VernacExtend",
                        "d6c5bf541af472831a687eaacd6b300ccc181438"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (bs, (share, counter)) node /\\ BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))) = (bs, (share, counter), node')).",
                        "VernacExtend",
                        "d3b0edf2c54322d56911ff932fc1dc7756aec45a"
                    ]
                },
                {
                    "command": [
                        "intro H3.",
                        "VernacExtend",
                        "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
                    ]
                },
                {
                    "command": [
                        "cut (config_node_OK (fst (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node))))) (snd (BDDneg_2 (bs, (share, counter)) node (S (nat_of_N (var (bs, (share, counter)) node)))))).",
                        "VernacExtend",
                        "c68896bcf1a9445178eb9e6a99044c1089ac9d5e"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj2 H3) in H4.",
                        "VernacExtend",
                        "1491cf7c76933f8612ad55794bb93f3f3ff4bb54"
                    ]
                },
                {
                    "command": [
                        "exact H4.",
                        "VernacExtend",
                        "861b0a8cbc78b24a3c2c92390110f650f7a9aa8d"
                    ]
                },
                {
                    "command": [
                        "cut (is_internal_node (bs, (share, counter)) node -> nat_of_N (var (bs, (share, counter)) node) < S (nat_of_N (var (bs, (share, counter)) node))).",
                        "VernacExtend",
                        "e0b009a61990ba503dbf247c2f149cf28f62d50d"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (proj2 (proj2 (proj2 (BDDneg_2_lemma (S (nat_of_N (var (bs, (share, counter)) node))) (bs, (share, counter)) node H H1 H4))))).",
                        "VernacExtend",
                        "e9ebeecbb6591dcbbf27ff5f866cc1b7404eb801"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "unfold lt in |- *.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold lt in |- *.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "intro H3.",
                        "VernacExtend",
                        "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}