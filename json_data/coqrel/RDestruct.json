{
    "filename": "RDestruct.v",
    "coq_project": "coqrel",
    "vernac_cmds": [
        [
            "Require Export RelDefinitions.",
            "VernacRequire",
            "036c68d68a856450b36b1b4547347d362f79906e"
        ],
        [
            "Ltac rdestruct H := lazymatch type of H with | ?R ?m ?n => not_evar R; pattern m, n; apply (rdestruct (R:=R) m n H); clear H; Delay.split_conjunction end.",
            "VernacExtend",
            "5caaf2d9e2fb512cfd2f6378202a3f3df481ec10"
        ],
        [
            "Ltac rinversion_tac H Hm Hn := lazymatch type of H with | ?R ?m ?n => not_evar R; pattern m, n; lazymatch goal with | |- ?Q _ _ => generalize (eq_refl m), (eq_refl n); change ((fun x y => Delay.delayed_goal (x = m -> y = n -> Q x y)) m n); apply (rdestruct (R:=R) m n H); Delay.split_conjunction; intros Hm Hn end end.",
            "VernacExtend",
            "231b3d2c926c08063f200fc128f41f2b5e5ecb91"
        ],
        [
            "Tactic Notation \"rinversion\" constr(H) \"as\" ident(Hl) \",\" ident(Hr) := rinversion_tac H Hl Hr.",
            "VernacExtend",
            "f53b1e3c0c3cfd2a71d954c58f490646f7507eb6"
        ],
        [
            "Tactic Notation \"rinversion\" hyp(H) := let Hl := fresh H \"l\" in let Hr := fresh H \"r\" in rinversion_tac H Hl Hr.",
            "VernacExtend",
            "9c25a5ceb4cc4de8bfc3bbfc7d8b05b98be63f9c"
        ],
        [
            "Tactic Notation \"rinversion\" constr(H) := let Hl := fresh \"Hl\" in let Hr := fresh \"Hr\" in rinversion_tac H Hl Hr.",
            "VernacExtend",
            "9f36a90c5c2ed7bf7301085f73414ec9957df954"
        ],
        [
            "Ltac rdestruct_assert := lazymatch goal with | |- _ (match ?m with _ => _ end) (match ?n with _ => _ end) => let Tm := type of m in let Tn := type of n in let R := fresh \"R\" in evar (R: rel Tm Tn); assert (R m n); subst R end.",
            "VernacExtend",
            "a22b15eddd25edc1d2a345819503570135c411b4"
        ],
        [
            "Definition rdestruct_result {A B} m n (Q: rel A B): rel A B := fun x y => m = x /\\ n = y -> Q x y.",
            "VernacDefinition",
            "d598e9af595b9c875a50e3740467c4c71ada27c3"
        ],
        [
            "Lemma rdestruct_rstep {A B} m n (R: rel A B) P (Q: rel _ _): RAuto (R m n) -> RDestruct R P -> P (rdestruct_result m n Q) -> Q m n.",
            "VernacStartTheoremProof",
            "07084a124b34e7dd71145a771cf5db1ba2c6860e"
        ],
        [
            "intros Hmn HR H.",
            "VernacExtend",
            "512e027c1c245c7a1196b5f89ea1f9030603be23"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac use_rdestruct_rstep m n := let H := fresh in intro H; pattern m, n; eapply (rdestruct_rstep m n); [ .. | eexact H].",
            "VernacExtend",
            "5d74fd707aa474a6edb2086937afa67b1b68dd84"
        ],
        [
            "Hint Extern 40 (RStep _ (_ (match ?m with _=>_ end) (match ?n with _=>_ end))) => use_rdestruct_rstep m n : typeclass_instances.",
            "VernacHints",
            "6d5ff46d8f7278693de828daa541393359f8246c"
        ],
        [
            "CoInductive rdestruct_remember := rdestruct_remember_intro.",
            "VernacInductive",
            "1ecd08af016ef17e17ca65c35c6cf00306d0c7fd"
        ],
        [
            "Ltac rdestruct_remember := lazymatch goal with | _ : rdestruct_remember |- _ => idtac | _ => let H := fresh \"Hrdestruct\" in pose proof rdestruct_remember_intro as H end.",
            "VernacExtend",
            "9c6831064bb65a944563d4a15796f3a035a84fef"
        ],
        [
            "Ltac rdestruct_forget := lazymatch goal with | H : rdestruct_remember |- _ => clear H | _ => idtac end.",
            "VernacExtend",
            "4ef759c2f69de6aabd69dc87e195d007997198c5"
        ],
        [
            "Lemma rdestruct_forget_rintro {A B} m n (Q: rel A B) x y: RIntro (Q x y) (rdestruct_result m n Q) x y.",
            "VernacStartTheoremProof",
            "af0bf879be66c71ca727902f2254aa49f31fd664"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rdestruct_remember_rintro {A B} m n (Q: rel A B) x y: RIntro (m = x -> n = y -> Q x y) (rdestruct_result m n Q) x y.",
            "VernacStartTheoremProof",
            "c57636c886128342dc02a381211ff12657c2da39"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac rdestruct_result_rintro := lazymatch goal with | _ : rdestruct_remember |- _ => eapply rdestruct_remember_rintro | _ => eapply rdestruct_forget_rintro end.",
            "VernacExtend",
            "de139ff3b07e11a235d2c383c3285c51ce68336a"
        ],
        [
            "Hint Extern 100 (RIntro _ (rdestruct_result _ _ _) _ _) => rdestruct_result_rintro : typeclass_instances.",
            "VernacHints",
            "095d085cf76a1a14a883fa67f033ff3386b8e550"
        ],
        [
            "Ltac default_rdestruct := let m := fresh \"m\" in let n := fresh \"n\" in let Hmn := fresh \"H\" m n in let P := fresh \"P\" in let H := fresh in intros m n Hmn P H; revert m n Hmn; delayed_conjunction (intros m n Hmn; destruct Hmn; delay); pattern P; eexact H.",
            "VernacExtend",
            "48dfac09e5ef7145956071cb2ff3c0f094972c05"
        ],
        [
            "Hint Extern 100 (RDestruct _ _) => default_rdestruct : typeclass_instances.",
            "VernacHints",
            "5eb640cbb26b95bb62aee2f20fbbe3638fad8260"
        ],
        [
            "Ltac eq_rdestruct := let m := fresh \"m\" in let n := fresh \"n\" in let Hmn := fresh \"H\" m n in let P := fresh \"P\" in let H := fresh in intros m n Hmn P H; revert m n Hmn; delayed_conjunction (intros m n Hmn; destruct Hmn; destruct m; delay); pattern P; eexact H.",
            "VernacExtend",
            "25dcb8d7979a62330bd61e8ce1feaeb005716929"
        ],
        [
            "Hint Extern 99 (RDestruct eq _) => eq_rdestruct : typeclass_instances.",
            "VernacHints",
            "463428110072d4e1f74f513757e90dadfece4936"
        ]
    ],
    "proofs": [
        {
            "name": "rdestruct_rstep",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros Hmn HR H.",
                        "VernacExtend",
                        "512e027c1c245c7a1196b5f89ea1f9030603be23"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdestruct_forget_rintro",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rdestruct_remember_rintro",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}