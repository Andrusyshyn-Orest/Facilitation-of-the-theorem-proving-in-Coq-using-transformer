{
    "filename": "generation.v",
    "coq_project": "additions",
    "vernac_cmds": [
        [
            "Require Import monoid.",
            "VernacRequire",
            "5175badd18113e8306f870657ff8501572699af4"
        ],
        [
            "Require Import spec.",
            "VernacRequire",
            "32cc48fe5efb2161567672bac6e06946f389f273"
        ],
        [
            "Require Import Constants.",
            "VernacRequire",
            "14418e3e4e499aa89eb4e9ac8e2c3218989f5a1f"
        ],
        [
            "Require Import machine.",
            "VernacRequire",
            "2d6e7ef731334fdf987f3e86c0d3800f2a963121"
        ],
        [
            "Require Import Euclid.",
            "VernacRequire",
            "b092bcfb28b4a9fb5c86c223c964f93b3d993e91"
        ],
        [
            "Require Import Le_lt_compl.",
            "VernacRequire",
            "f183c51d0c6d6360a134c6a11db00c5081abf4d0"
        ],
        [
            "Require Import euclid.",
            "VernacRequire",
            "2c4bf8f3e4058d398953e55885bbfdf41a4113cd"
        ],
        [
            "Require Import shift.",
            "VernacRequire",
            "d22f2d835a5ff0b78532a2bfc619efeb185d78eb"
        ],
        [
            "Require Import two_power.",
            "VernacRequire",
            "7d5ca9a1af3de98b54e6baa9cbe6dbfd1c444d9a"
        ],
        [
            "Require Import log2_spec.",
            "VernacRequire",
            "9091821f504835494d7d76d70a10479db920159a"
        ],
        [
            "Require Import develop.",
            "VernacRequire",
            "82e8bdb9ff19705d1088f72f57c4a618675aa069"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Peano_dec.",
            "VernacRequire",
            "5f49ca778918c88f400242f11d696ec23079b44f"
        ],
        [
            "Require Import Compare_dec.",
            "VernacRequire",
            "96b495dc82d6bd54e62353acae7d6e61222564e6"
        ],
        [
            "Require Import strategies.",
            "VernacRequire",
            "30e3d02a76650e1017d538e1587d111505ee7fad"
        ],
        [
            "Require Import Mult_compl.",
            "VernacRequire",
            "5c9c42ad0e826e562e958bc20d98dcce07a439cf"
        ],
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Require Import Wf_compl.",
            "VernacRequire",
            "d2691859fd35245c22d23a8a86f5171092620e60"
        ],
        [
            "Inductive Call_lt : Call -> Call -> Prop := | M_M_lt : forall p q : nat, p < q -> Call_lt (Call_M p) (Call_M q) | C_M_lt : forall p q : nat, p < q -> Call_lt (Call_C q p) (Call_M q) | M_C_lt : forall p q r : nat, p < r -> Call_lt (Call_M p) (Call_C r q) | M_K_lt : forall p q r : nat, p <= r -> Call_lt (Call_M p) (Call_K r q) | K_C_lt : forall p q r s : nat, q < s -> Call_lt (Call_K q p) (Call_C s r) | K_K_lt : forall p q r s : nat, q < s -> Call_lt (Call_K q p) (Call_K s r).",
            "VernacInductive",
            "04eaeb309b484a4aead90ae22341dccc32e1c56e"
        ],
        [
            "Definition Call_measure (c : Call) := match c return nat with | Call_M n => S (three * n) | Call_C n p => three * n | Call_K n p => S (S (three * n)) end.",
            "VernacDefinition",
            "ca9ab2e9d5867dc975666cd5e4b51f7a5a52d2cc"
        ],
        [
            "Lemma measure_compat : coarser Call Call_lt (ltof Call Call_measure).",
            "VernacStartTheoremProof",
            "f427b613342423fb36562d6955537f1db59bbb84"
        ],
        [
            "unfold coarser, ltof in |- *.",
            "VernacExtend",
            "5fe642f2361fe622d0f86d1b6b5b57846fb9fdbf"
        ],
        [
            "simple induction 1; unfold Call_measure in |- *.",
            "VernacExtend",
            "002ec47d2f7d2303c38f102fb662835d2193276b"
        ],
        [
            "intros; apply lt_n_S; apply mult_lt_l; auto with arith.",
            "VernacExtend",
            "c7c49c8334613a532e5d7a22dc26672aca7d1d1f"
        ],
        [
            "unfold three in |- *; auto with arith.",
            "VernacExtend",
            "bf72caba6a73fb8c075fa9b994cc62fcb4d2a000"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lt_le_trans with (three * S p).",
            "VernacExtend",
            "6051d1e004cc6451c42b9da5114a358877291125"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply lt_n_S.",
            "VernacExtend",
            "3c5e09f79b5d536a7a60dd2965c3f0ec6c1930e5"
        ],
        [
            "rewrite <- plus_n_O.",
            "VernacExtend",
            "82e76fe4a7447040940c37f8f7935de7fb153db6"
        ],
        [
            "apply plus_lt_compat_l.",
            "VernacExtend",
            "e6081f5e9aaa580599a0fc8519575c090df5395d"
        ],
        [
            "rewrite <- plus_Snm_nSm.",
            "VernacExtend",
            "33ab975bc4dc1dc2949d4cb39c07476ca9e70c65"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lt_le_trans with (three * S q).",
            "VernacExtend",
            "2505be5c6aa5ce9960a8536744072cc482861879"
        ],
        [
            "replace (three * S q) with (S (S (S (three * q)))).",
            "VernacExtend",
            "4961bbe460034d6ba960721a7a608f96cc8ecad6"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "rewrite <- mult_n_Sm.",
            "VernacExtend",
            "91735263987da0af733038b963dd5d1f039440a6"
        ],
        [
            "rewrite plus_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "a04f67a71deb6dceb647b6d5b4c634af69e3c150"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "intros; do 2 apply lt_n_S; apply mult_lt_l; auto with arith.",
            "VernacExtend",
            "85f833e1cd8a28e6140e37f20ef6faa9d169c812"
        ],
        [
            "unfold three in |- *; auto with arith.",
            "VernacExtend",
            "bf72caba6a73fb8c075fa9b994cc62fcb4d2a000"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wf_Call_lt : well_founded Call_lt.",
            "VernacStartTheoremProof",
            "1d897995d7a9e3d98e8b8bc38b146f764411fd08"
        ],
        [
            "apply wf_coarser with (ltof Call Call_measure).",
            "VernacExtend",
            "218bb66dee6c9dcc20d81d89214c7429cc157609"
        ],
        [
            "exact measure_compat.",
            "VernacExtend",
            "30045bc4dc1f819e4f4e372f9910bc687b980d01"
        ],
        [
            "apply well_founded_ltof.",
            "VernacExtend",
            "66ec88bf1fecd3c093e36b21853af520241ffceb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section generation.",
            "VernacBeginSection",
            "a7e0c943de72d86f40b68037269319de1a013f32"
        ],
        [
            "Variable gamma : strategy.",
            "VernacAssumption",
            "364fa3d882937825788061b900695419005d5aae"
        ],
        [
            "Variable log2_r : forall n : nat, 0 < n -> log2_spec n.",
            "VernacAssumption",
            "352f9dba228ea74774f2463fd056a06bda028115"
        ],
        [
            "Lemma chain_cases : forall p : nat, 0 < p -> {q : nat | q < p /\\ two <= q} + {l : nat | p = two_power l} + {p = three}.",
            "VernacStartTheoremProof",
            "9f4e5aee7290310876eff5d209c33df525c05855"
        ],
        [
            "refine (fun p _H => match eq_nat_dec p three with | left h => inright _ h | right n => match log2_r p _ with | existS l b => match b with | left _ => inleft _ (inr _ (exist _ l _)) | right a => match gamma with | mkstrat s => match s p _ with | exist q _ => inleft _ (inl _ (exist _ q _)) end end end end end); auto.",
            "VernacExtend",
            "47ed11e5b313e1a0aac8ff3626c2fa0444c32425"
        ],
        [
            "case (le_or_lt (S four) p); [ auto with arith | intro H2 ].",
            "VernacExtend",
            "abfe347d87f32db4a49fe187c45aaa13aa761d62"
        ],
        [
            "case (enum4 p H2); intro.",
            "VernacExtend",
            "196dd29cc95a700df548c95eed85137c22eb44ed"
        ],
        [
            "absurd (0 < p); [ rewrite H; auto with arith | auto with arith ].",
            "VernacExtend",
            "80cfac78eef2e1020d4855188bb5e0a1874bc127"
        ],
        [
            "elim H; intro H3.",
            "VernacExtend",
            "22df0f7a67e2faa3d14ae7e1467543b489c11c55"
        ],
        [
            "absurd (p = one); [ replace one with (two_power 0) | auto with arith ].",
            "VernacExtend",
            "306e42c38ade911c9ac4fedb22d0b9e1942a6638"
        ],
        [
            "apply holes_in_powers with l; elim a; auto with arith.",
            "VernacExtend",
            "a82d1420d6b117a0164cead3e4e979c2bf42632f"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "elim H3; intro H4.",
            "VernacExtend",
            "74d08ba99a719f1b93a6d36abd05b90053a7cf1c"
        ],
        [
            "absurd (p = two); [ replace two with (two_power one) | auto with arith ].",
            "VernacExtend",
            "91ba2b315a0ce9a45938537a3f9b5b76eb080466"
        ],
        [
            "apply holes_in_powers with l; elim a; auto with arith.",
            "VernacExtend",
            "a82d1420d6b117a0164cead3e4e979c2bf42632f"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "elim H4; intro H5.",
            "VernacExtend",
            "0bb33404e6ecd690d30066360d68211cbf08970b"
        ],
        [
            "elim (n H5).",
            "VernacExtend",
            "3e78dfb94db803c26979e441a7de4e2337cdb308"
        ],
        [
            "absurd (p = four); [ replace four with (two_power two) | auto with arith ].",
            "VernacExtend",
            "d0623a8b0ec7bea5dbc4fe74469fc63ae0f891bf"
        ],
        [
            "apply holes_in_powers with l; elim a; auto with arith.",
            "VernacExtend",
            "a82d1420d6b117a0164cead3e4e979c2bf42632f"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma COND3 : forall (A : nat -> Set) (p : nat), (p = three -> A p) -> (forall q : nat, p = two_power q -> A p) -> (forall q : nat, q < p -> two <= q -> A p) -> 0 < p -> A p.",
            "VernacStartTheoremProof",
            "e1659d937b38d80ab230a3384dd0cb4505156f09"
        ],
        [
            "refine (fun A p case3 case_2n case_gamma h => match chain_cases p _ with | inleft b => match b with | inl b1 => match b1 with | exist q hq => case_gamma q _ _ end | inr b2 => match b2 with | exist q hq => case_2n q hq end end | inright h => case3 h end); auto; elim hq; auto.",
            "VernacExtend",
            "d4fccd15f9e0c086ca5f733537af2bf203fc0f8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma chain_algo : forall c : Call, conform c -> gencode c.",
            "VernacStartTheoremProof",
            "f9775f067254ca05a453d7665ef47270fc80f83e"
        ],
        [
            "refine (well_founded_induction Wf_Call_lt (fun c => conform c -> gencode c) _).",
            "VernacExtend",
            "29fc7cb83472d0de798762395bee5577009c66e8"
        ],
        [
            "intros c; case c; [ intro p | intros p n0 | intros p n0 ]; intros hr hc; simpl in hc.",
            "VernacExtend",
            "bc3c75633b96b4b99585575ab8a67bba3fec2491"
        ],
        [
            "apply (COND3 (fun n => gencode (Call_M n)) p); auto with arith.",
            "VernacExtend",
            "2dce8061e60eb64ca0ac0e1256fa47f146002ce3"
        ],
        [
            "intros h; rewrite h; apply M3.",
            "VernacExtend",
            "384eefa0eef5437f89bae4920d9040cea8f41ad7"
        ],
        [
            "intros q h; rewrite h; apply M2q.",
            "VernacExtend",
            "9d3c354c18065647c79110db6973beb7081b5d82"
        ],
        [
            "refine (fun q _ _ => C2M p q (hr (Call_C p q) _ _)); auto with arith.",
            "VernacExtend",
            "b5acd294a1e062a3fee71b52267bd949153c6f85"
        ],
        [
            "constructor 2; auto with arith.",
            "VernacExtend",
            "bc5b9b30d952c65c20e9296088da29a29f6f8907"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "elim hc; intros hc1 hc2.",
            "VernacExtend",
            "5031895a7332d3f6559ff67a6328e7702ea3eb72"
        ],
        [
            "cut (n0 > 0); [ intro Hn0 | unfold gt in |- *; apply lt_trans with 1; auto with arith ].",
            "VernacExtend",
            "e4f9f5bd2ae70a8cb1dd0592e58bfeb16ba58739"
        ],
        [
            "elim (eucl_dev n0 Hn0 p); intros q r E1 E2.",
            "VernacExtend",
            "03fee527c9d20a048e1afc49c25044e71e84d7e1"
        ],
        [
            "elim (zerop r); intro Z.",
            "VernacExtend",
            "0033a014526f9fa4f48ddcaba7dae20b83a27f15"
        ],
        [
            "rewrite Z in E2; rewrite <- plus_n_O in E2; rewrite E2.",
            "VernacExtend",
            "e922522c8be461510a7f9e8a78809fefb36bb86e"
        ],
        [
            "cut (0 < q).",
            "VernacExtend",
            "1d0bd36f4c60faff24bf252e881bc2e0a350852a"
        ],
        [
            "intro Hq.",
            "VernacExtend",
            "c1b512c0d49765c87e6ee66f06bc2c4b9c1feec5"
        ],
        [
            "refine (MMC n0 q (hr (Call_M n0) _ _) (hr (Call_M q) _ _)).",
            "VernacExtend",
            "6491e2925c5d55f49259e8251d6ab25f760d1450"
        ],
        [
            "constructor 3; auto with arith.",
            "VernacExtend",
            "ed550cb9dd0fab063631b0fed01e01479f0d3235"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "constructor 3.",
            "VernacExtend",
            "fc203c31040684912422f2b19644a4136ee46779"
        ],
        [
            "rewrite E2; rewrite <- mult_comm; apply mult_p_lt_qp; auto with arith.",
            "VernacExtend",
            "d25039124d624da1013eed362b20a57666810eaa"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "apply quotient_positive with p n0; auto with arith.",
            "VernacExtend",
            "6025335878d51a069db2c303c86df28b6d42a30b"
        ],
        [
            "apply le_lt_trans with n0; auto with arith.",
            "VernacExtend",
            "6087eaf69b458c9160532a3a3fa529a4c15b874b"
        ],
        [
            "cut (0 < q).",
            "VernacExtend",
            "1d0bd36f4c60faff24bf252e881bc2e0a350852a"
        ],
        [
            "intro Hq; rewrite E2.",
            "VernacExtend",
            "37da5f77f8e5e931ead96c472919a38bd29661a2"
        ],
        [
            "refine (KMC n0 q r (hr (Call_K n0 r) _ _) (hr (Call_M q) _ _)).",
            "VernacExtend",
            "225734b7ebd63775fd39e2958841cccdf964e2cc"
        ],
        [
            "constructor 5; auto with arith.",
            "VernacExtend",
            "d416c0d5a4b339bed42a034944be3ed4f66df582"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "constructor 3; auto with arith.",
            "VernacExtend",
            "ed550cb9dd0fab063631b0fed01e01479f0d3235"
        ],
        [
            "rewrite E2; auto with arith.",
            "VernacExtend",
            "5ef8f9fb5663c3b9d769badc6381c21539b120ef"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "apply lt_O_q with n0 r; auto; rewrite <- E2; auto.",
            "VernacExtend",
            "e158dbe075a74f7cf1c02eafe5d04e2a62e10617"
        ],
        [
            "elim hc; intros hc1 hc2.",
            "VernacExtend",
            "5031895a7332d3f6559ff67a6328e7702ea3eb72"
        ],
        [
            "cut (n0 > 0); [ intro Hn0 | unfold gt in |- *; auto with arith ].",
            "VernacExtend",
            "8134019dac29fcdcf4b59f8d62495add5e6bfa45"
        ],
        [
            "elim (eucl_dev n0 Hn0 p); intros q r E1 E2.",
            "VernacExtend",
            "03fee527c9d20a048e1afc49c25044e71e84d7e1"
        ],
        [
            "elim (zerop r); intro Z.",
            "VernacExtend",
            "0033a014526f9fa4f48ddcaba7dae20b83a27f15"
        ],
        [
            "rewrite Z in E2; rewrite <- plus_n_O in E2; rewrite E2.",
            "VernacExtend",
            "e922522c8be461510a7f9e8a78809fefb36bb86e"
        ],
        [
            "cut (0 < q).",
            "VernacExtend",
            "1d0bd36f4c60faff24bf252e881bc2e0a350852a"
        ],
        [
            "intro Hq.",
            "VernacExtend",
            "c1b512c0d49765c87e6ee66f06bc2c4b9c1feec5"
        ],
        [
            "refine (MMK n0 q (hr (Call_M n0) _ _) (hr (Call_M q) _ _)).",
            "VernacExtend",
            "35d708a8e3da9ab6d55fcae5cef6220614ee00bf"
        ],
        [
            "constructor 4; auto with arith.",
            "VernacExtend",
            "98873742383f2a948ecfcc9c3623d875aa71089a"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "constructor 4.",
            "VernacExtend",
            "59e07a74f7e9b127a3e38699008ef6910ad47a3f"
        ],
        [
            "rewrite E2; apply mult_p_le_pq; auto with arith.",
            "VernacExtend",
            "26cedc6f43d97988d461a64804712268483eb50b"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "apply quotient_positive with p n0; auto with arith.",
            "VernacExtend",
            "6025335878d51a069db2c303c86df28b6d42a30b"
        ],
        [
            "apply le_lt_trans with n0; auto with arith.",
            "VernacExtend",
            "6087eaf69b458c9160532a3a3fa529a4c15b874b"
        ],
        [
            "cut (0 < q).",
            "VernacExtend",
            "1d0bd36f4c60faff24bf252e881bc2e0a350852a"
        ],
        [
            "intro Hq; rewrite E2.",
            "VernacExtend",
            "37da5f77f8e5e931ead96c472919a38bd29661a2"
        ],
        [
            "refine (KMK n0 q r (hr (Call_K n0 r) _ _) (hr (Call_M q) _ _)).",
            "VernacExtend",
            "1110321226facfefe634ab47443e8dbf7a8aaa6a"
        ],
        [
            "constructor 6; auto with arith.",
            "VernacExtend",
            "cdf929fa83fc8ed02c285e0b963ef3fa0137b202"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "constructor 4; auto with arith.",
            "VernacExtend",
            "98873742383f2a948ecfcc9c3623d875aa71089a"
        ],
        [
            "rewrite E2; auto with arith.",
            "VernacExtend",
            "5ef8f9fb5663c3b9d769badc6381c21539b120ef"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "apply lt_O_q with n0 r; auto; rewrite <- E2; auto.",
            "VernacExtend",
            "e158dbe075a74f7cf1c02eafe5d04e2a62e10617"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma power_algo : forall n : nat, 0 < n -> addchain_spec n.",
            "VernacStartTheoremProof",
            "2d012fdc433511962182ef96d0b861fd9908ec7e"
        ],
        [
            "intros; split.",
            "VernacExtend",
            "786909835bea92a2bb1ac0d0634a6eb379d5f275"
        ],
        [
            "apply chain_algo.",
            "VernacExtend",
            "146c1bb0fd24714cc75e811b9d2dabafe0e822ac"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End generation.",
            "VernacEndSegment",
            "b0af30780a4956b7086285880ea5cd1399787362"
        ]
    ],
    "proofs": [
        {
            "name": "measure_compat",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "unfold coarser, ltof in |- *.",
                        "VernacExtend",
                        "5fe642f2361fe622d0f86d1b6b5b57846fb9fdbf"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; unfold Call_measure in |- *.",
                        "VernacExtend",
                        "002ec47d2f7d2303c38f102fb662835d2193276b"
                    ]
                },
                {
                    "command": [
                        "intros; apply lt_n_S; apply mult_lt_l; auto with arith.",
                        "VernacExtend",
                        "c7c49c8334613a532e5d7a22dc26672aca7d1d1f"
                    ]
                },
                {
                    "command": [
                        "unfold three in |- *; auto with arith.",
                        "VernacExtend",
                        "bf72caba6a73fb8c075fa9b994cc62fcb4d2a000"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (three * S p).",
                        "VernacExtend",
                        "6051d1e004cc6451c42b9da5114a358877291125"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_S.",
                        "VernacExtend",
                        "3c5e09f79b5d536a7a60dd2965c3f0ec6c1930e5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_O.",
                        "VernacExtend",
                        "82e76fe4a7447040940c37f8f7935de7fb153db6"
                    ]
                },
                {
                    "command": [
                        "apply plus_lt_compat_l.",
                        "VernacExtend",
                        "e6081f5e9aaa580599a0fc8519575c090df5395d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_Snm_nSm.",
                        "VernacExtend",
                        "33ab975bc4dc1dc2949d4cb39c07476ca9e70c65"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (three * S q).",
                        "VernacExtend",
                        "2505be5c6aa5ce9960a8536744072cc482861879"
                    ]
                },
                {
                    "command": [
                        "replace (three * S q) with (S (S (S (three * q)))).",
                        "VernacExtend",
                        "4961bbe460034d6ba960721a7a608f96cc8ecad6"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_n_Sm.",
                        "VernacExtend",
                        "91735263987da0af733038b963dd5d1f039440a6"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "a04f67a71deb6dceb647b6d5b4c634af69e3c150"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "intros; do 2 apply lt_n_S; apply mult_lt_l; auto with arith.",
                        "VernacExtend",
                        "85f833e1cd8a28e6140e37f20ef6faa9d169c812"
                    ]
                },
                {
                    "command": [
                        "unfold three in |- *; auto with arith.",
                        "VernacExtend",
                        "bf72caba6a73fb8c075fa9b994cc62fcb4d2a000"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Wf_Call_lt",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "apply wf_coarser with (ltof Call Call_measure).",
                        "VernacExtend",
                        "218bb66dee6c9dcc20d81d89214c7429cc157609"
                    ]
                },
                {
                    "command": [
                        "exact measure_compat.",
                        "VernacExtend",
                        "30045bc4dc1f819e4f4e372f9910bc687b980d01"
                    ]
                },
                {
                    "command": [
                        "apply well_founded_ltof.",
                        "VernacExtend",
                        "66ec88bf1fecd3c093e36b21853af520241ffceb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "chain_cases",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "refine (fun p _H => match eq_nat_dec p three with | left h => inright _ h | right n => match log2_r p _ with | existS l b => match b with | left _ => inleft _ (inr _ (exist _ l _)) | right a => match gamma with | mkstrat s => match s p _ with | exist q _ => inleft _ (inl _ (exist _ q _)) end end end end end); auto.",
                        "VernacExtend",
                        "47ed11e5b313e1a0aac8ff3626c2fa0444c32425"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt (S four) p); [ auto with arith | intro H2 ].",
                        "VernacExtend",
                        "abfe347d87f32db4a49fe187c45aaa13aa761d62"
                    ]
                },
                {
                    "command": [
                        "case (enum4 p H2); intro.",
                        "VernacExtend",
                        "196dd29cc95a700df548c95eed85137c22eb44ed"
                    ]
                },
                {
                    "command": [
                        "absurd (0 < p); [ rewrite H; auto with arith | auto with arith ].",
                        "VernacExtend",
                        "80cfac78eef2e1020d4855188bb5e0a1874bc127"
                    ]
                },
                {
                    "command": [
                        "elim H; intro H3.",
                        "VernacExtend",
                        "22df0f7a67e2faa3d14ae7e1467543b489c11c55"
                    ]
                },
                {
                    "command": [
                        "absurd (p = one); [ replace one with (two_power 0) | auto with arith ].",
                        "VernacExtend",
                        "306e42c38ade911c9ac4fedb22d0b9e1942a6638"
                    ]
                },
                {
                    "command": [
                        "apply holes_in_powers with l; elim a; auto with arith.",
                        "VernacExtend",
                        "a82d1420d6b117a0164cead3e4e979c2bf42632f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "elim H3; intro H4.",
                        "VernacExtend",
                        "74d08ba99a719f1b93a6d36abd05b90053a7cf1c"
                    ]
                },
                {
                    "command": [
                        "absurd (p = two); [ replace two with (two_power one) | auto with arith ].",
                        "VernacExtend",
                        "91ba2b315a0ce9a45938537a3f9b5b76eb080466"
                    ]
                },
                {
                    "command": [
                        "apply holes_in_powers with l; elim a; auto with arith.",
                        "VernacExtend",
                        "a82d1420d6b117a0164cead3e4e979c2bf42632f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "elim H4; intro H5.",
                        "VernacExtend",
                        "0bb33404e6ecd690d30066360d68211cbf08970b"
                    ]
                },
                {
                    "command": [
                        "elim (n H5).",
                        "VernacExtend",
                        "3e78dfb94db803c26979e441a7de4e2337cdb308"
                    ]
                },
                {
                    "command": [
                        "absurd (p = four); [ replace four with (two_power two) | auto with arith ].",
                        "VernacExtend",
                        "d0623a8b0ec7bea5dbc4fe74469fc63ae0f891bf"
                    ]
                },
                {
                    "command": [
                        "apply holes_in_powers with l; elim a; auto with arith.",
                        "VernacExtend",
                        "a82d1420d6b117a0164cead3e4e979c2bf42632f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "COND3",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "refine (fun A p case3 case_2n case_gamma h => match chain_cases p _ with | inleft b => match b with | inl b1 => match b1 with | exist q hq => case_gamma q _ _ end | inr b2 => match b2 with | exist q hq => case_2n q hq end end | inright h => case3 h end); auto; elim hq; auto.",
                        "VernacExtend",
                        "d4fccd15f9e0c086ca5f733537af2bf203fc0f8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "chain_algo",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "refine (well_founded_induction Wf_Call_lt (fun c => conform c -> gencode c) _).",
                        "VernacExtend",
                        "29fc7cb83472d0de798762395bee5577009c66e8"
                    ]
                },
                {
                    "command": [
                        "intros c; case c; [ intro p | intros p n0 | intros p n0 ]; intros hr hc; simpl in hc.",
                        "VernacExtend",
                        "bc3c75633b96b4b99585575ab8a67bba3fec2491"
                    ]
                },
                {
                    "command": [
                        "apply (COND3 (fun n => gencode (Call_M n)) p); auto with arith.",
                        "VernacExtend",
                        "2dce8061e60eb64ca0ac0e1256fa47f146002ce3"
                    ]
                },
                {
                    "command": [
                        "intros h; rewrite h; apply M3.",
                        "VernacExtend",
                        "384eefa0eef5437f89bae4920d9040cea8f41ad7"
                    ]
                },
                {
                    "command": [
                        "intros q h; rewrite h; apply M2q.",
                        "VernacExtend",
                        "9d3c354c18065647c79110db6973beb7081b5d82"
                    ]
                },
                {
                    "command": [
                        "refine (fun q _ _ => C2M p q (hr (Call_C p q) _ _)); auto with arith.",
                        "VernacExtend",
                        "b5acd294a1e062a3fee71b52267bd949153c6f85"
                    ]
                },
                {
                    "command": [
                        "constructor 2; auto with arith.",
                        "VernacExtend",
                        "bc5b9b30d952c65c20e9296088da29a29f6f8907"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "elim hc; intros hc1 hc2.",
                        "VernacExtend",
                        "5031895a7332d3f6559ff67a6328e7702ea3eb72"
                    ]
                },
                {
                    "command": [
                        "cut (n0 > 0); [ intro Hn0 | unfold gt in |- *; apply lt_trans with 1; auto with arith ].",
                        "VernacExtend",
                        "e4f9f5bd2ae70a8cb1dd0592e58bfeb16ba58739"
                    ]
                },
                {
                    "command": [
                        "elim (eucl_dev n0 Hn0 p); intros q r E1 E2.",
                        "VernacExtend",
                        "03fee527c9d20a048e1afc49c25044e71e84d7e1"
                    ]
                },
                {
                    "command": [
                        "elim (zerop r); intro Z.",
                        "VernacExtend",
                        "0033a014526f9fa4f48ddcaba7dae20b83a27f15"
                    ]
                },
                {
                    "command": [
                        "rewrite Z in E2; rewrite <- plus_n_O in E2; rewrite E2.",
                        "VernacExtend",
                        "e922522c8be461510a7f9e8a78809fefb36bb86e"
                    ]
                },
                {
                    "command": [
                        "cut (0 < q).",
                        "VernacExtend",
                        "1d0bd36f4c60faff24bf252e881bc2e0a350852a"
                    ]
                },
                {
                    "command": [
                        "intro Hq.",
                        "VernacExtend",
                        "c1b512c0d49765c87e6ee66f06bc2c4b9c1feec5"
                    ]
                },
                {
                    "command": [
                        "refine (MMC n0 q (hr (Call_M n0) _ _) (hr (Call_M q) _ _)).",
                        "VernacExtend",
                        "6491e2925c5d55f49259e8251d6ab25f760d1450"
                    ]
                },
                {
                    "command": [
                        "constructor 3; auto with arith.",
                        "VernacExtend",
                        "ed550cb9dd0fab063631b0fed01e01479f0d3235"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "constructor 3.",
                        "VernacExtend",
                        "fc203c31040684912422f2b19644a4136ee46779"
                    ]
                },
                {
                    "command": [
                        "rewrite E2; rewrite <- mult_comm; apply mult_p_lt_qp; auto with arith.",
                        "VernacExtend",
                        "d25039124d624da1013eed362b20a57666810eaa"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "apply quotient_positive with p n0; auto with arith.",
                        "VernacExtend",
                        "6025335878d51a069db2c303c86df28b6d42a30b"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with n0; auto with arith.",
                        "VernacExtend",
                        "6087eaf69b458c9160532a3a3fa529a4c15b874b"
                    ]
                },
                {
                    "command": [
                        "cut (0 < q).",
                        "VernacExtend",
                        "1d0bd36f4c60faff24bf252e881bc2e0a350852a"
                    ]
                },
                {
                    "command": [
                        "intro Hq; rewrite E2.",
                        "VernacExtend",
                        "37da5f77f8e5e931ead96c472919a38bd29661a2"
                    ]
                },
                {
                    "command": [
                        "refine (KMC n0 q r (hr (Call_K n0 r) _ _) (hr (Call_M q) _ _)).",
                        "VernacExtend",
                        "225734b7ebd63775fd39e2958841cccdf964e2cc"
                    ]
                },
                {
                    "command": [
                        "constructor 5; auto with arith.",
                        "VernacExtend",
                        "d416c0d5a4b339bed42a034944be3ed4f66df582"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "constructor 3; auto with arith.",
                        "VernacExtend",
                        "ed550cb9dd0fab063631b0fed01e01479f0d3235"
                    ]
                },
                {
                    "command": [
                        "rewrite E2; auto with arith.",
                        "VernacExtend",
                        "5ef8f9fb5663c3b9d769badc6381c21539b120ef"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_q with n0 r; auto; rewrite <- E2; auto.",
                        "VernacExtend",
                        "e158dbe075a74f7cf1c02eafe5d04e2a62e10617"
                    ]
                },
                {
                    "command": [
                        "elim hc; intros hc1 hc2.",
                        "VernacExtend",
                        "5031895a7332d3f6559ff67a6328e7702ea3eb72"
                    ]
                },
                {
                    "command": [
                        "cut (n0 > 0); [ intro Hn0 | unfold gt in |- *; auto with arith ].",
                        "VernacExtend",
                        "8134019dac29fcdcf4b59f8d62495add5e6bfa45"
                    ]
                },
                {
                    "command": [
                        "elim (eucl_dev n0 Hn0 p); intros q r E1 E2.",
                        "VernacExtend",
                        "03fee527c9d20a048e1afc49c25044e71e84d7e1"
                    ]
                },
                {
                    "command": [
                        "elim (zerop r); intro Z.",
                        "VernacExtend",
                        "0033a014526f9fa4f48ddcaba7dae20b83a27f15"
                    ]
                },
                {
                    "command": [
                        "rewrite Z in E2; rewrite <- plus_n_O in E2; rewrite E2.",
                        "VernacExtend",
                        "e922522c8be461510a7f9e8a78809fefb36bb86e"
                    ]
                },
                {
                    "command": [
                        "cut (0 < q).",
                        "VernacExtend",
                        "1d0bd36f4c60faff24bf252e881bc2e0a350852a"
                    ]
                },
                {
                    "command": [
                        "intro Hq.",
                        "VernacExtend",
                        "c1b512c0d49765c87e6ee66f06bc2c4b9c1feec5"
                    ]
                },
                {
                    "command": [
                        "refine (MMK n0 q (hr (Call_M n0) _ _) (hr (Call_M q) _ _)).",
                        "VernacExtend",
                        "35d708a8e3da9ab6d55fcae5cef6220614ee00bf"
                    ]
                },
                {
                    "command": [
                        "constructor 4; auto with arith.",
                        "VernacExtend",
                        "98873742383f2a948ecfcc9c3623d875aa71089a"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "constructor 4.",
                        "VernacExtend",
                        "59e07a74f7e9b127a3e38699008ef6910ad47a3f"
                    ]
                },
                {
                    "command": [
                        "rewrite E2; apply mult_p_le_pq; auto with arith.",
                        "VernacExtend",
                        "26cedc6f43d97988d461a64804712268483eb50b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "apply quotient_positive with p n0; auto with arith.",
                        "VernacExtend",
                        "6025335878d51a069db2c303c86df28b6d42a30b"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with n0; auto with arith.",
                        "VernacExtend",
                        "6087eaf69b458c9160532a3a3fa529a4c15b874b"
                    ]
                },
                {
                    "command": [
                        "cut (0 < q).",
                        "VernacExtend",
                        "1d0bd36f4c60faff24bf252e881bc2e0a350852a"
                    ]
                },
                {
                    "command": [
                        "intro Hq; rewrite E2.",
                        "VernacExtend",
                        "37da5f77f8e5e931ead96c472919a38bd29661a2"
                    ]
                },
                {
                    "command": [
                        "refine (KMK n0 q r (hr (Call_K n0 r) _ _) (hr (Call_M q) _ _)).",
                        "VernacExtend",
                        "1110321226facfefe634ab47443e8dbf7a8aaa6a"
                    ]
                },
                {
                    "command": [
                        "constructor 6; auto with arith.",
                        "VernacExtend",
                        "cdf929fa83fc8ed02c285e0b963ef3fa0137b202"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "constructor 4; auto with arith.",
                        "VernacExtend",
                        "98873742383f2a948ecfcc9c3623d875aa71089a"
                    ]
                },
                {
                    "command": [
                        "rewrite E2; auto with arith.",
                        "VernacExtend",
                        "5ef8f9fb5663c3b9d769badc6381c21539b120ef"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_q with n0 r; auto; rewrite <- E2; auto.",
                        "VernacExtend",
                        "e158dbe075a74f7cf1c02eafe5d04e2a62e10617"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "power_algo",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "intros; split.",
                        "VernacExtend",
                        "786909835bea92a2bb1ac0d0634a6eb379d5f275"
                    ]
                },
                {
                    "command": [
                        "apply chain_algo.",
                        "VernacExtend",
                        "146c1bb0fd24714cc75e811b9d2dabafe0e822ac"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}