{
    "filename": "log2_implementation.v",
    "coq_project": "additions",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Peano_dec.",
            "VernacRequire",
            "5f49ca778918c88f400242f11d696ec23079b44f"
        ],
        [
            "Require Import Constants.",
            "VernacRequire",
            "14418e3e4e499aa89eb4e9ac8e2c3218989f5a1f"
        ],
        [
            "Require Import Mult_compl.",
            "VernacRequire",
            "5c9c42ad0e826e562e958bc20d98dcce07a439cf"
        ],
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Require Import euclid.",
            "VernacRequire",
            "2c4bf8f3e4058d398953e55885bbfdf41a4113cd"
        ],
        [
            "Require Import Le_lt_compl.",
            "VernacRequire",
            "f183c51d0c6d6360a134c6a11db00c5081abf4d0"
        ],
        [
            "Require Import Euclid.",
            "VernacRequire",
            "b092bcfb28b4a9fb5c86c223c964f93b3d993e91"
        ],
        [
            "Require Import shift.",
            "VernacRequire",
            "d22f2d835a5ff0b78532a2bfc619efeb185d78eb"
        ],
        [
            "Require Import Compare_dec.",
            "VernacRequire",
            "96b495dc82d6bd54e62353acae7d6e61222564e6"
        ],
        [
            "Require Import imperative.",
            "VernacRequire",
            "15b446292759177285b0e8ebc9e6bfa322ebbe8e"
        ],
        [
            "Require Import while.",
            "VernacRequire",
            "22f0c13dc45d9c3168bc0fcc4fda47f2d4728c58"
        ],
        [
            "Require Import two_power.",
            "VernacRequire",
            "7d5ca9a1af3de98b54e6baa9cbe6dbfd1c444d9a"
        ],
        [
            "Require Import log2_spec.",
            "VernacRequire",
            "9091821f504835494d7d76d70a10479db920159a"
        ],
        [
            "Section log2_computation.",
            "VernacBeginSection",
            "354a3ab35395294214a1b3abe314c8bed2cfa534"
        ],
        [
            "Variable n0 : nat.",
            "VernacAssumption",
            "6be9361751c81d82bfe0038c636c0146a25090c8"
        ],
        [
            "Hypothesis pos_n0 : 0 < n0.",
            "VernacAssumption",
            "38df27f10205f404a9bfabd09f77533e6ef90b03"
        ],
        [
            "Hint Resolve pos_n0: arith.",
            "VernacHints",
            "c3541abb8677f889d149f066000722dd7dc8326a"
        ],
        [
            "Record state : Set := mkstate {state_n : nat; state_p : nat; state_b : bool}.",
            "VernacInductive",
            "da942a99490ada20bb2cd4faab6b6657937e3d4a"
        ],
        [
            "Inductive ok : state -> Prop := | oktrue : forall p : nat, n0 = two_power p -> ok (mkstate one p true) | okfalse : forall p : nat, two_power p < n0 -> n0 < two_power (S p) -> ok (mkstate one p false).",
            "VernacInductive",
            "b705f9308e4a8c686ddaf3d3f092e132d3cd53bd"
        ],
        [
            "Let init (s : state) := state_n s = n0 /\\ state_p s = 0 /\\ state_b s = true.",
            "VernacDefinition",
            "2e2c205acd112239c3e693721b8e5258b21ffe44"
        ],
        [
            "Inductive final : state -> Prop := mkfinal : forall (p : nat) (b : bool), final (mkstate one p b).",
            "VernacInductive",
            "3d2aedc93ebc97e545b9759a46e5b7b404abf57f"
        ],
        [
            "Inductive invar : state -> Prop := | exact : forall n p : nat, n0 = two_power p * n -> 0 < n -> invar (mkstate n p true) | inexact : forall n p : nat, two_power p * n < n0 -> n0 < two_power p * S n -> 0 < n -> invar (mkstate n p false).",
            "VernacInductive",
            "42bf4ad532e90e9254b409c5540c613efc7290e7"
        ],
        [
            "Definition stat_order := ltof state state_n.",
            "VernacDefinition",
            "994cb3edf3a606dbb7f8f07c3cff772fe712d9bd"
        ],
        [
            "Lemma decomp : forall s : state, s = mkstate (state_n s) (state_p s) (state_b s).",
            "VernacStartTheoremProof",
            "b9fdb48e05c860d19a1be5f83f8db61c8e0e502d"
        ],
        [
            "simple induction s; simpl in |- *; auto with arith.",
            "VernacExtend",
            "43fcfc1af52bce706572d129e31e790a75418020"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invar_inv1 : forall n p : nat, invar (mkstate n p true) -> n0 = two_power p * n.",
            "VernacStartTheoremProof",
            "dd339f518458af641b3a0c749518586251769aeb"
        ],
        [
            "intros; inversion_clear H; auto with arith.",
            "VernacExtend",
            "4586d035f04b6a6fde50fbc4df5710ac46c9b9b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invar_inv2 : forall n p : nat, invar (mkstate n p false) -> two_power p * n < n0 /\\ n0 < two_power p * S n.",
            "VernacStartTheoremProof",
            "19a8bbd751719dbe211661948be545ce49a49809"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H; split; auto with arith.",
            "VernacExtend",
            "3ab7fdb168f9ad8d83f3717cc12f1897d65dcdb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invar_inv3 : forall (n p : nat) (b : bool), invar (mkstate n p b) -> 0 < n.",
            "VernacStartTheoremProof",
            "11986991318f101c1c3ba7da1d8bf5d75d9c11c9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H; auto with arith.",
            "VernacExtend",
            "1de71ab4d814714f73d315ab0b455ab23137714e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma final_inv : forall (n p : nat) (b : bool), final (mkstate n p b) -> n = one.",
            "VernacStartTheoremProof",
            "743a073beaf9a7223774abd73d939d6262411727"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H; auto with arith.",
            "VernacExtend",
            "1de71ab4d814714f73d315ab0b455ab23137714e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_final : forall (n p : nat) (b : bool), invar (mkstate n p b) -> ~ final (mkstate n p b) -> one < n.",
            "VernacStartTheoremProof",
            "52135b31ea5365e6188af182c7d6abd454d5739c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (le_or_lt n one); [ intro | auto with arith ].",
            "VernacExtend",
            "67b82efaa30279c1b40aa0a642f32c21a9411423"
        ],
        [
            "cut (0 < n); [ intro | apply invar_inv3 with p b; auto with arith ].",
            "VernacExtend",
            "cc904abfa97de36924843e367153e6616081c919"
        ],
        [
            "case (enum1 n).",
            "VernacExtend",
            "291cc184e68cfd6d5b1ff11a7973f1298f22c89e"
        ],
        [
            "unfold two in |- *; auto with arith.",
            "VernacExtend",
            "bfaa8fcf855588945fc7d1e01e6aace824bc122f"
        ],
        [
            "intro; absurd (0 < n); auto with arith.",
            "VernacExtend",
            "2ac6f5f0d9d7f53ae3e16542d0991889d18ae60d"
        ],
        [
            "rewrite H3; auto with arith.",
            "VernacExtend",
            "e97eafd0ebfaa54306a3067aa111c939649ea5e0"
        ],
        [
            "intro; absurd (final (mkstate n p b)); [ auto with arith | idtac ].",
            "VernacExtend",
            "e5602dd881031091769b22d31dd3d88a2d4e718f"
        ],
        [
            "rewrite H3; split; auto with arith.",
            "VernacExtend",
            "7fe617e0dd1523348ad60a7705c3c260aca6adbb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wf_stat_order : well_founded stat_order.",
            "VernacStartTheoremProof",
            "e9f2ea44b5fde0dc83cc9c0d72692340161f049e"
        ],
        [
            "unfold stat_order in |- *; apply well_founded_ltof.",
            "VernacExtend",
            "a717d647d2798ea86ca980c6702d8c2fcd4f188d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve wf_stat_order: arith.",
            "VernacHints",
            "a974b7e2d8f27578ad64c34a4e56b2c1e5278128"
        ],
        [
            "Lemma log2_impl : log2_spec n0.",
            "VernacStartTheoremProof",
            "c075efb438271756b456d47632faaf2f038d27f5"
        ],
        [
            "apply Imperative with state init ok; [ exists (mkstate n0 0 true) | intros a pre; apply while_not with init invar stat_order final a; [ simple induction s; intros state_n0 state_p0 state_b0 i; elim (le_lt_eq_dec 1 state_n0); [ right | left | idtac ] | simple induction s; intros state_n0 state_p0 state_b0; elim state_b0; intros h i; elim (Unshift state_n0); intros m b'; [ elim b'; [ exists (mkstate m (S state_p0) true) | exists (mkstate m (S state_p0) false) ] | exists (mkstate m (S state_p0) false) ] | idtac | idtac | idtac | idtac ] | simple induction a; intros state_n0 state_p0 state_b0; elim state_b0; intro h; exists state_p0 ].",
            "VernacExtend",
            "b69c1f6c66b2b9f26e71fcba40e14da15da6085e"
        ],
        [
            "Hint Unfold init: arith.",
            "VernacHints",
            "5f1659700e9f4a8955926debb7da64d0a406b255"
        ],
        [
            "split; auto; split; auto.",
            "VernacExtend",
            "218effc4f5ae502cbfc34127d31c2e905de106cc"
        ],
        [
            "red in |- *; intros f; inversion f; auto.",
            "VernacExtend",
            "5c7bbfdcde6734520e2101222ce9217533078826"
        ],
        [
            "rewrite <- H0 in a0; simpl in a0.",
            "VernacExtend",
            "b242f39a654b82edfc6023e102b852fbe46e2f65"
        ],
        [
            "absurd (1 < 1); auto with arith.",
            "VernacExtend",
            "866c35c2a4dcf71d9409b5cd64bb8d761689bca3"
        ],
        [
            "rewrite <- b; constructor 1.",
            "VernacExtend",
            "9534187350b21b1ed1b78e43d08ef384c1072ac6"
        ],
        [
            "inversion i; auto.",
            "VernacExtend",
            "55ddd9f05bd8dd1160aa141a8786a6be8495d115"
        ],
        [
            "cut (one < state_n0).",
            "VernacExtend",
            "638297ac847fafc136f26d61d51d3e774ab6d510"
        ],
        [
            "intro n_ge_1.",
            "VernacExtend",
            "c40cca4e7eba1393f8e8da7466d09857f9ed6c6d"
        ],
        [
            "2: apply not_final with state_p0 true; auto with arith.",
            "VernacExtend",
            "bbd0b9a7ca794321f1c1c9fead1ab8119d7c1d39"
        ],
        [
            "inversion i.",
            "VernacExtend",
            "a3f584c98e30d334d7b2a213b0bc86256be4e275"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite two_power_S.",
            "VernacExtend",
            "a81efb5b1b6d12bf781b677a11ae5841112eb5aa"
        ],
        [
            "rewrite <- mult_assoc; auto with arith.",
            "VernacExtend",
            "250172d81cc4f524c7176804e840ea58c47333fa"
        ],
        [
            "unfold shift in a0.",
            "VernacExtend",
            "6e031c0321c65df9adc16131edfcb8bf5d9eaa44"
        ],
        [
            "rewrite <- a0; auto.",
            "VernacExtend",
            "2d1a9d1d2670ab56abc2d02b36c95b6a664eda8b"
        ],
        [
            "unfold shift in a0.",
            "VernacExtend",
            "6e031c0321c65df9adc16131edfcb8bf5d9eaa44"
        ],
        [
            "apply quotient_positive with state_n0 two; auto.",
            "VernacExtend",
            "1427330fc8296f9ebb8fa2ce1614469880bdce0d"
        ],
        [
            "rewrite mult_comm; exact a0.",
            "VernacExtend",
            "7d1c98b8b26e8eda6a91608769cc7a16ecf19e94"
        ],
        [
            "unfold stat_order, ltof in |- *.",
            "VernacExtend",
            "6a190bf81cf5d83a999d2c13a06072562c1d08d0"
        ],
        [
            "apply half_lt.",
            "VernacExtend",
            "2498c0d77aa25594055db306c9dad3110f715655"
        ],
        [
            "apply lt_trans with one; auto with arith.",
            "VernacExtend",
            "4aaf2d29d56c3eec50c3704f0815ef79ffde025d"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "cut (one < state_n0).",
            "VernacExtend",
            "638297ac847fafc136f26d61d51d3e774ab6d510"
        ],
        [
            "intro n_ge_1.",
            "VernacExtend",
            "c40cca4e7eba1393f8e8da7466d09857f9ed6c6d"
        ],
        [
            "2: apply not_final with state_p0 true; auto with arith.",
            "VernacExtend",
            "bbd0b9a7ca794321f1c1c9fead1ab8119d7c1d39"
        ],
        [
            "inversion i.",
            "VernacExtend",
            "a3f584c98e30d334d7b2a213b0bc86256be4e275"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite two_power_S.",
            "VernacExtend",
            "a81efb5b1b6d12bf781b677a11ae5841112eb5aa"
        ],
        [
            "rewrite <- mult_assoc; auto with arith.",
            "VernacExtend",
            "250172d81cc4f524c7176804e840ea58c47333fa"
        ],
        [
            "rewrite (invar_inv1 state_n0 state_p0); auto.",
            "VernacExtend",
            "c223d334d82852e1ddb71e5299ec4814f08b1426"
        ],
        [
            "rewrite b.",
            "VernacExtend",
            "4a16c9df7f34c75683a8b1d48ce75fa351b6407b"
        ],
        [
            "unfold shift in |- *.",
            "VernacExtend",
            "0b55d27b5842407f5d00b1aeb3c3826688986a4c"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "rewrite two_power_S.",
            "VernacExtend",
            "a81efb5b1b6d12bf781b677a11ae5841112eb5aa"
        ],
        [
            "rewrite <- mult_assoc.",
            "VernacExtend",
            "49b103377d085e1bf8c6d549842521c605529f0c"
        ],
        [
            "rewrite (invar_inv1 state_n0 state_p0); auto.",
            "VernacExtend",
            "c223d334d82852e1ddb71e5299ec4814f08b1426"
        ],
        [
            "rewrite b.",
            "VernacExtend",
            "4a16c9df7f34c75683a8b1d48ce75fa351b6407b"
        ],
        [
            "unfold shift in |- *.",
            "VernacExtend",
            "0b55d27b5842407f5d00b1aeb3c3826688986a4c"
        ],
        [
            "apply mult_lt_l.",
            "VernacExtend",
            "07d4c8abd00f2f8791c382a3fba65136a062c010"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "case (lt_or_Zero m); auto with arith.",
            "VernacExtend",
            "d7032b24568085e672e54fdebe4e49c7b785b468"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "absurd (one < state_n0); auto with arith.",
            "VernacExtend",
            "74de8523af91363190441cf8ebf229778a3b570e"
        ],
        [
            "rewrite b.",
            "VernacExtend",
            "4a16c9df7f34c75683a8b1d48ce75fa351b6407b"
        ],
        [
            "rewrite H3; simpl in |- *; auto with arith.",
            "VernacExtend",
            "28e828a8de3fa002811554be3c4cdff3bc9a74ab"
        ],
        [
            "unfold stat_order, ltof in |- *; apply half_lt.",
            "VernacExtend",
            "90e2d40bcd2f908d356e84fb68ce6ec89194a3ee"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply lt_trans with one; auto with arith.",
            "VernacExtend",
            "4aaf2d29d56c3eec50c3704f0815ef79ffde025d"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "cut (one < state_n0).",
            "VernacExtend",
            "638297ac847fafc136f26d61d51d3e774ab6d510"
        ],
        [
            "intro n_ge_1.",
            "VernacExtend",
            "c40cca4e7eba1393f8e8da7466d09857f9ed6c6d"
        ],
        [
            "2: apply not_final with state_p0 false; auto with arith.",
            "VernacExtend",
            "f2e05ca8476b0628bd7e6cb5b94b6565fb534ab8"
        ],
        [
            "inversion i.",
            "VernacExtend",
            "a3f584c98e30d334d7b2a213b0bc86256be4e275"
        ],
        [
            "cut (two_power (S state_p0) * m < n0).",
            "VernacExtend",
            "625c7d8f757fd96972eff80f43ecc7d0227c6c36"
        ],
        [
            "intro n0_left'.",
            "VernacExtend",
            "030388a20874973f5cfad11715e5b33152e64ddf"
        ],
        [
            "cut (n0 < two_power (S state_p0) * S m).",
            "VernacExtend",
            "bcfd50fa9145beaaa17919c3b2129d47c3abe009"
        ],
        [
            "intro n0_right'.",
            "VernacExtend",
            "4f337ea436e649762ce186e59539126d7825de0a"
        ],
        [
            "cut (m < state_n0).",
            "VernacExtend",
            "1d0e3fc52a4bbf3d162da5371d628fe231ff6515"
        ],
        [
            "intro m_little.",
            "VernacExtend",
            "84b15c290c69481c396adf719d6787e2df6a255a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "right; auto with arith.",
            "VernacExtend",
            "068a5d4e06b6c29ce065ca013ac8922e38a132f4"
        ],
        [
            "case (lt_or_Zero m); auto with arith.",
            "VernacExtend",
            "d7032b24568085e672e54fdebe4e49c7b785b468"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "absurd (one < state_n0); auto with arith.",
            "VernacExtend",
            "74de8523af91363190441cf8ebf229778a3b570e"
        ],
        [
            "simpl in b'; elim b'; intros eg; rewrite eg.",
            "VernacExtend",
            "c5b48fe6f9bd8d2e60b5ef3c4764e94d592f870c"
        ],
        [
            "rewrite H4; simpl in |- *; auto with arith.",
            "VernacExtend",
            "e065827cff86931eba12fa03b6a014e2518c4c71"
        ],
        [
            "rewrite H4; simpl in |- *; auto with arith.",
            "VernacExtend",
            "e065827cff86931eba12fa03b6a014e2518c4c71"
        ],
        [
            "unfold stat_order, ltof in |- *.",
            "VernacExtend",
            "6a190bf81cf5d83a999d2c13a06072562c1d08d0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exact m_little.",
            "VernacExtend",
            "3b65a1a6158a531641d8b3fd4e88425d82a5e600"
        ],
        [
            "apply half_lt.",
            "VernacExtend",
            "2498c0d77aa25594055db306c9dad3110f715655"
        ],
        [
            "apply lt_trans with one; auto with arith.",
            "VernacExtend",
            "4aaf2d29d56c3eec50c3704f0815ef79ffde025d"
        ],
        [
            "simpl in b'; elim b'; auto with arith.",
            "VernacExtend",
            "9035f84a88b8c7062ea4be687b02f7f7da94e01c"
        ],
        [
            "simpl in b'; elim b'; intros eg.",
            "VernacExtend",
            "3eb2c829d10ca9482e157554c5d6554ea9da8a87"
        ],
        [
            "apply lt_trans with (two_power state_p0 * S state_n0); auto with arith.",
            "VernacExtend",
            "7af3c3a4c5ff0f018aae51d0325c538c8b4061d3"
        ],
        [
            "rewrite two_power_S.",
            "VernacExtend",
            "a81efb5b1b6d12bf781b677a11ae5841112eb5aa"
        ],
        [
            "rewrite <- mult_assoc; auto with arith.",
            "VernacExtend",
            "250172d81cc4f524c7176804e840ea58c47333fa"
        ],
        [
            "apply mult_lt_l.",
            "VernacExtend",
            "07d4c8abd00f2f8791c382a3fba65136a062c010"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "rewrite eg.",
            "VernacExtend",
            "6910619735f726b35705bae911bd8fc884b59dad"
        ],
        [
            "unfold shift in |- *; simpl in |- *; auto with arith.",
            "VernacExtend",
            "72531956acff76c11352bbaa668f7493c8bd00e7"
        ],
        [
            "replace (two_power (S state_p0) * S m) with (two_power state_p0 * S state_n0).",
            "VernacExtend",
            "4dca311f7d5954f0dd9e54ab997c67aea9116bdd"
        ],
        [
            "elim (invar_inv2 state_n0 state_p0); auto with arith.",
            "VernacExtend",
            "25843021d6cbc2dfbab699d90f3fcca9d5d3734e"
        ],
        [
            "elim H0; auto with arith.",
            "VernacExtend",
            "ab49973a08625c1f419e9099f65a664125c0a614"
        ],
        [
            "rewrite two_power_S.",
            "VernacExtend",
            "a81efb5b1b6d12bf781b677a11ae5841112eb5aa"
        ],
        [
            "rewrite <- mult_assoc.",
            "VernacExtend",
            "49b103377d085e1bf8c6d549842521c605529f0c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold shift in |- *; simpl in |- *.",
            "VernacExtend",
            "b7cf65ea1cfba15142e1008a57e19e5818789e9a"
        ],
        [
            "rewrite <- plus_n_Sm.",
            "VernacExtend",
            "10308ef961b07f08e71cba91e06650cc774994fe"
        ],
        [
            "rewrite eg; auto with arith.",
            "VernacExtend",
            "d05c6ffb08e2586fcd884e9b032ceb0cb27ce9a1"
        ],
        [
            "apply le_lt_trans with (two_power state_p0 * state_n0); auto with arith.",
            "VernacExtend",
            "21235bddaa123dce428086e87309776b01d2ed79"
        ],
        [
            "simpl in b'; elim b'; intro eg.",
            "VernacExtend",
            "195599b33cf64bda4d17719d45e0585b18a23981"
        ],
        [
            "rewrite eg.",
            "VernacExtend",
            "6910619735f726b35705bae911bd8fc884b59dad"
        ],
        [
            "rewrite two_power_S.",
            "VernacExtend",
            "a81efb5b1b6d12bf781b677a11ae5841112eb5aa"
        ],
        [
            "rewrite <- mult_assoc; auto with arith.",
            "VernacExtend",
            "250172d81cc4f524c7176804e840ea58c47333fa"
        ],
        [
            "rewrite eg.",
            "VernacExtend",
            "6910619735f726b35705bae911bd8fc884b59dad"
        ],
        [
            "rewrite two_power_S.",
            "VernacExtend",
            "a81efb5b1b6d12bf781b677a11ae5841112eb5aa"
        ],
        [
            "rewrite <- mult_assoc; auto with arith.",
            "VernacExtend",
            "250172d81cc4f524c7176804e840ea58c47333fa"
        ],
        [
            "simple induction s.",
            "VernacExtend",
            "15315e9486524eeadf6f490cd6a6309641d2d7e2"
        ],
        [
            "simple induction state_b0.",
            "VernacExtend",
            "e74394b6605367e1c657505b79b369a67480844f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (final_inv state_n0 state_p0 true).",
            "VernacExtend",
            "c39a792b852c7616f657c018621d473281448f2c"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite (invar_inv1 _ _ H0).",
            "VernacExtend",
            "5ea9104411668a525d87924b044bf9c4b38384f4"
        ],
        [
            "rewrite (final_inv _ _ _ H).",
            "VernacExtend",
            "ed55c0c9da7f48def595cf4d5cc91af122d5988d"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (final_inv state_n0 state_p0 false).",
            "VernacExtend",
            "816b22ac06140d16e8d4be08db6ebde787b50809"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "elim (invar_inv2 _ _ H0).",
            "VernacExtend",
            "ba9cc7ddf799d3c93d08d62c1b9a69fab40d101b"
        ],
        [
            "rewrite (final_inv _ _ _ H).",
            "VernacExtend",
            "ed55c0c9da7f48def595cf4d5cc91af122d5988d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (mult_1_r (two_power state_p0)); auto with arith.",
            "VernacExtend",
            "2375f735fa7517c3b80bcae7d33aa8333fd84dea"
        ],
        [
            "elim (invar_inv2 _ _ H0).",
            "VernacExtend",
            "ba9cc7ddf799d3c93d08d62c1b9a69fab40d101b"
        ],
        [
            "rewrite (final_inv _ _ _ H).",
            "VernacExtend",
            "ed55c0c9da7f48def595cf4d5cc91af122d5988d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite two_power_S.",
            "VernacExtend",
            "a81efb5b1b6d12bf781b677a11ae5841112eb5aa"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "simple induction s.",
            "VernacExtend",
            "15315e9486524eeadf6f490cd6a6309641d2d7e2"
        ],
        [
            "simple induction state_b0.",
            "VernacExtend",
            "e74394b6605367e1c657505b79b369a67480844f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "elim H1.",
            "VernacExtend",
            "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
        ],
        [
            "simpl in |- *; intros.",
            "VernacExtend",
            "429a59199da524088af55673600740ccc58db31e"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite H; simpl in |- *.",
            "VernacExtend",
            "9d8fceb2956840b5cbf41ba3844c2d68196d141c"
        ],
        [
            "rewrite <- H0; auto with arith.",
            "VernacExtend",
            "8ae66250452e02b9ae0e2e80ebc77cde9170ceee"
        ],
        [
            "simpl in H0; rewrite H0; auto with arith.",
            "VernacExtend",
            "50ee747eb2b9dba283afd3d1d3819bf19dd575b9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "elim H1.",
            "VernacExtend",
            "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H2.",
            "VernacExtend",
            "b1e247c43b6623097ab13813b4de664287dd4249"
        ],
        [
            "discriminate H2.",
            "VernacExtend",
            "a34eb414a5dd143442dc6d481a442c7afbcf7604"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "inversion h; auto.",
            "VernacExtend",
            "9bd8768a039e5d6e117544ecd9db631827d0a593"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "inversion h; split; auto.",
            "VernacExtend",
            "720af2326d28476d7d027204a8caeb74898bf5e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End log2_computation.",
            "VernacEndSegment",
            "8b4c65e3841fc5bc7c1ba752b52d6f0f497a07a7"
        ]
    ],
    "proofs": [
        {
            "name": "decomp",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "simple induction s; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "43fcfc1af52bce706572d129e31e790a75418020"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invar_inv1",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros; inversion_clear H; auto with arith.",
                        "VernacExtend",
                        "4586d035f04b6a6fde50fbc4df5710ac46c9b9b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invar_inv2",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H; split; auto with arith.",
                        "VernacExtend",
                        "3ab7fdb168f9ad8d83f3717cc12f1897d65dcdb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invar_inv3",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H; auto with arith.",
                        "VernacExtend",
                        "1de71ab4d814714f73d315ab0b455ab23137714e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "final_inv",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H; auto with arith.",
                        "VernacExtend",
                        "1de71ab4d814714f73d315ab0b455ab23137714e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_final",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt n one); [ intro | auto with arith ].",
                        "VernacExtend",
                        "67b82efaa30279c1b40aa0a642f32c21a9411423"
                    ]
                },
                {
                    "command": [
                        "cut (0 < n); [ intro | apply invar_inv3 with p b; auto with arith ].",
                        "VernacExtend",
                        "cc904abfa97de36924843e367153e6616081c919"
                    ]
                },
                {
                    "command": [
                        "case (enum1 n).",
                        "VernacExtend",
                        "291cc184e68cfd6d5b1ff11a7973f1298f22c89e"
                    ]
                },
                {
                    "command": [
                        "unfold two in |- *; auto with arith.",
                        "VernacExtend",
                        "bfaa8fcf855588945fc7d1e01e6aace824bc122f"
                    ]
                },
                {
                    "command": [
                        "intro; absurd (0 < n); auto with arith.",
                        "VernacExtend",
                        "2ac6f5f0d9d7f53ae3e16542d0991889d18ae60d"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; auto with arith.",
                        "VernacExtend",
                        "e97eafd0ebfaa54306a3067aa111c939649ea5e0"
                    ]
                },
                {
                    "command": [
                        "intro; absurd (final (mkstate n p b)); [ auto with arith | idtac ].",
                        "VernacExtend",
                        "e5602dd881031091769b22d31dd3d88a2d4e718f"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; split; auto with arith.",
                        "VernacExtend",
                        "7fe617e0dd1523348ad60a7705c3c260aca6adbb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wf_stat_order",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "unfold stat_order in |- *; apply well_founded_ltof.",
                        "VernacExtend",
                        "a717d647d2798ea86ca980c6702d8c2fcd4f188d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}