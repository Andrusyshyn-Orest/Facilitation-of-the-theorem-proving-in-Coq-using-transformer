{
    "filename": "binary_strat.v",
    "coq_project": "additions",
    "vernac_cmds": [
        [
            "Require Import strategies.",
            "VernacRequire",
            "30e3d02a76650e1017d538e1587d111505ee7fad"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import euclid.",
            "VernacRequire",
            "2c4bf8f3e4058d398953e55885bbfdf41a4113cd"
        ],
        [
            "Require Import shift.",
            "VernacRequire",
            "d22f2d835a5ff0b78532a2bfc619efeb185d78eb"
        ],
        [
            "Require Import Euclid.",
            "VernacRequire",
            "b092bcfb28b4a9fb5c86c223c964f93b3d993e91"
        ],
        [
            "Require Import Le_lt_compl.",
            "VernacRequire",
            "f183c51d0c6d6360a134c6a11db00c5081abf4d0"
        ],
        [
            "Require Import Mult_compl.",
            "VernacRequire",
            "5c9c42ad0e826e562e958bc20d98dcce07a439cf"
        ],
        [
            "Require Import Constants.",
            "VernacRequire",
            "14418e3e4e499aa89eb4e9ac8e2c3218989f5a1f"
        ],
        [
            "Lemma binary : strategy.",
            "VernacStartTheoremProof",
            "9022420426f8eb88dfaef1ac5aea9440fc17e2b5"
        ],
        [
            "refine (mkstrat (fun n h => match quotient two _ n with | exist n0 e => exist _ n0 _ end)).",
            "VernacExtend",
            "703ac94c675e0e20f15e7c28ce7794df1b77b7c4"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "elim e; simple induction 1; intros H1 H2.",
            "VernacExtend",
            "54cd30002d81248f8a60d5cd010976d8dad397d9"
        ],
        [
            "case (enum1 x H2); intro H3.",
            "VernacExtend",
            "c5686dd74684510b1017d9b6c690a5e650663835"
        ],
        [
            "cut (n = n0 * two); [ intro eg | idtac ].",
            "VernacExtend",
            "bd7ac729521ba3a21d354ee1620e5e6eed89287a"
        ],
        [
            "cut (two <= n0); [ intro H'1 | idtac ].",
            "VernacExtend",
            "2ed626b0c1e9d6bf86457963561013390ff28cc8"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite eg; apply mult_p_lt_pq.",
            "VernacExtend",
            "224c528d9ea4ac187e007e580a88d2943063c1fd"
        ],
        [
            "apply lt_le_trans with 2; auto with arith.",
            "VernacExtend",
            "98c7d74b4155cd7953b19082ec0e7028fdd11e35"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "apply not_lt_le; unfold not in |- *; intro.",
            "VernacExtend",
            "b011b7cef70891d02eda3ae09c98e842d507b715"
        ],
        [
            "absurd (n < four); [ apply lt_asym; auto with arith | idtac ].",
            "VernacExtend",
            "3e370fcd76af1ed4e4bacd97f8893852e2de15c7"
        ],
        [
            "rewrite eg; replace four with (two * two).",
            "VernacExtend",
            "d0d1e7c044ee5c5ee4e7154f3d53e9dd049c4dd7"
        ],
        [
            "apply mult_lt_r.",
            "VernacExtend",
            "e3d3154f6f14cd7053400674adecc9ef20601e87"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "rewrite (plus_n_O (n0 * two)); elim H3; auto with arith.",
            "VernacExtend",
            "af97f51ae309f2b97b1c2b3be24ecd3e79d0718d"
        ],
        [
            "cut (two <= n0); [ intro H'1 | idtac ].",
            "VernacExtend",
            "2ed626b0c1e9d6bf86457963561013390ff28cc8"
        ],
        [
            "split; [ idtac | auto with arith ].",
            "VernacExtend",
            "306c6db68ca5a945cf5458490fab0246dee20ca8"
        ],
        [
            "rewrite H1; rewrite mult_comm; apply lt_b_qbr.",
            "VernacExtend",
            "065422590f854c9416b448b9865829794c64b769"
        ],
        [
            "rewrite H3; auto with arith.",
            "VernacExtend",
            "e97eafd0ebfaa54306a3067aa111c939649ea5e0"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "apply lt_le_trans with two; [ idtac | auto with arith ].",
            "VernacExtend",
            "08e6e22d7b85fc4e65651d2a4e11d0a79de1cdfb"
        ],
        [
            "rewrite H3; auto with arith.",
            "VernacExtend",
            "e97eafd0ebfaa54306a3067aa111c939649ea5e0"
        ],
        [
            "apply not_lt_le; unfold not in |- *; intro.",
            "VernacExtend",
            "b011b7cef70891d02eda3ae09c98e842d507b715"
        ],
        [
            "cut (n <= three).",
            "VernacExtend",
            "424f992a888e8a2337f967a763caf9f192773861"
        ],
        [
            "intro; absurd (four < three); [ unfold four, three in |- *; auto with arith | idtac ].",
            "VernacExtend",
            "86af837e92e7681116d52749051994b202441a1b"
        ],
        [
            "apply lt_le_trans with n; auto with arith.",
            "VernacExtend",
            "291be3ec3568f713797f1af10e013555e878e864"
        ],
        [
            "replace three with (one * two + x).",
            "VernacExtend",
            "0354cab3f68cfb9e534e60ce6637a6e45dbcc702"
        ],
        [
            "rewrite H1; auto with arith.",
            "VernacExtend",
            "f44aafaaaf2fde9554fec757928cccbddbfedddc"
        ],
        [
            "rewrite H3; simpl in |- *; auto with arith.",
            "VernacExtend",
            "28e828a8de3fa002811554be3c4cdff3bc9a74ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "binary",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "refine (mkstrat (fun n h => match quotient two _ n with | exist n0 e => exist _ n0 _ end)).",
                        "VernacExtend",
                        "703ac94c675e0e20f15e7c28ce7794df1b77b7c4"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "elim e; simple induction 1; intros H1 H2.",
                        "VernacExtend",
                        "54cd30002d81248f8a60d5cd010976d8dad397d9"
                    ]
                },
                {
                    "command": [
                        "case (enum1 x H2); intro H3.",
                        "VernacExtend",
                        "c5686dd74684510b1017d9b6c690a5e650663835"
                    ]
                },
                {
                    "command": [
                        "cut (n = n0 * two); [ intro eg | idtac ].",
                        "VernacExtend",
                        "bd7ac729521ba3a21d354ee1620e5e6eed89287a"
                    ]
                },
                {
                    "command": [
                        "cut (two <= n0); [ intro H'1 | idtac ].",
                        "VernacExtend",
                        "2ed626b0c1e9d6bf86457963561013390ff28cc8"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite eg; apply mult_p_lt_pq.",
                        "VernacExtend",
                        "224c528d9ea4ac187e007e580a88d2943063c1fd"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with 2; auto with arith.",
                        "VernacExtend",
                        "98c7d74b4155cd7953b19082ec0e7028fdd11e35"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "apply not_lt_le; unfold not in |- *; intro.",
                        "VernacExtend",
                        "b011b7cef70891d02eda3ae09c98e842d507b715"
                    ]
                },
                {
                    "command": [
                        "absurd (n < four); [ apply lt_asym; auto with arith | idtac ].",
                        "VernacExtend",
                        "3e370fcd76af1ed4e4bacd97f8893852e2de15c7"
                    ]
                },
                {
                    "command": [
                        "rewrite eg; replace four with (two * two).",
                        "VernacExtend",
                        "d0d1e7c044ee5c5ee4e7154f3d53e9dd049c4dd7"
                    ]
                },
                {
                    "command": [
                        "apply mult_lt_r.",
                        "VernacExtend",
                        "e3d3154f6f14cd7053400674adecc9ef20601e87"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_n_O (n0 * two)); elim H3; auto with arith.",
                        "VernacExtend",
                        "af97f51ae309f2b97b1c2b3be24ecd3e79d0718d"
                    ]
                },
                {
                    "command": [
                        "cut (two <= n0); [ intro H'1 | idtac ].",
                        "VernacExtend",
                        "2ed626b0c1e9d6bf86457963561013390ff28cc8"
                    ]
                },
                {
                    "command": [
                        "split; [ idtac | auto with arith ].",
                        "VernacExtend",
                        "306c6db68ca5a945cf5458490fab0246dee20ca8"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; rewrite mult_comm; apply lt_b_qbr.",
                        "VernacExtend",
                        "065422590f854c9416b448b9865829794c64b769"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; auto with arith.",
                        "VernacExtend",
                        "e97eafd0ebfaa54306a3067aa111c939649ea5e0"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with two; [ idtac | auto with arith ].",
                        "VernacExtend",
                        "08e6e22d7b85fc4e65651d2a4e11d0a79de1cdfb"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; auto with arith.",
                        "VernacExtend",
                        "e97eafd0ebfaa54306a3067aa111c939649ea5e0"
                    ]
                },
                {
                    "command": [
                        "apply not_lt_le; unfold not in |- *; intro.",
                        "VernacExtend",
                        "b011b7cef70891d02eda3ae09c98e842d507b715"
                    ]
                },
                {
                    "command": [
                        "cut (n <= three).",
                        "VernacExtend",
                        "424f992a888e8a2337f967a763caf9f192773861"
                    ]
                },
                {
                    "command": [
                        "intro; absurd (four < three); [ unfold four, three in |- *; auto with arith | idtac ].",
                        "VernacExtend",
                        "86af837e92e7681116d52749051994b202441a1b"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with n; auto with arith.",
                        "VernacExtend",
                        "291be3ec3568f713797f1af10e013555e878e864"
                    ]
                },
                {
                    "command": [
                        "replace three with (one * two + x).",
                        "VernacExtend",
                        "0354cab3f68cfb9e534e60ce6637a6e45dbcc702"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; auto with arith.",
                        "VernacExtend",
                        "f44aafaaaf2fde9554fec757928cccbddbfedddc"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "28e828a8de3fa002811554be3c4cdff3bc9a74ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}