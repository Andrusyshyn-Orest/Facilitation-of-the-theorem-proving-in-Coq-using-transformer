{
    "filename": "src/Events.v",
    "coq_project": "system",
    "vernac_cmds": [
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Require Import Coq.NArith.NArith.",
            "VernacRequire",
            "a173128ff04ac2dc4506c66a56f70327ae014e9a"
        ],
        [
            "Require Import Coq.PArith.PArith.",
            "VernacRequire",
            "0a2a524ac56182e4ac39f3dd7fdaee12fc76d7e4"
        ],
        [
            "Require Import ListString.All.",
            "VernacRequire",
            "b5bf825703b16db3d853e99a99aa6ae331be06de"
        ],
        [
            "Import ListNotations.",
            "VernacImport",
            "52647db2a3b752153a8cbd37039246f200bccdee"
        ],
        [
            "Local Open Scope type.",
            "VernacOpenCloseScope",
            "04f76e7a1bee177aa5494f87ecfe70be352b47fe"
        ],
        [
            "Module ClientSocketId.",
            "VernacDefineModule",
            "f55859be2d6b40a7ea7f0b960606d162d910dd2a"
        ],
        [
            "Inductive t : Set := | New : N -> t.",
            "VernacInductive",
            "66cf2b4f56c888b0b2a3c2e1a550fb1bb8ae95c0"
        ],
        [
            "End ClientSocketId.",
            "VernacEndSegment",
            "30a24e2c83d5ed59fd4f1295343d84212644c573"
        ],
        [
            "Module Command.",
            "VernacDefineModule",
            "6e7c4c24fd2337e2ab49dd32872fdd88102a9c73"
        ],
        [
            "Inductive t : Set := | Log | FileRead | ServerSocketBind | ClientSocketRead | ClientSocketWrite | ClientSocketClose | Time.",
            "VernacInductive",
            "a2873ab16ee3c10555e25e5ccd3193234ffe0046"
        ],
        [
            "Definition request (command : t) : Set := match command with | Log => LString.t | FileRead => LString.t | ServerSocketBind => N | ClientSocketRead => ClientSocketId.t | ClientSocketWrite => ClientSocketId.t * LString.t | ClientSocketClose => ClientSocketId.t | Time => unit end.",
            "VernacDefinition",
            "814e7427e9edbe1898c0ab23fddc13d773f1803a"
        ],
        [
            "Definition answer (command : t) : Set := match command with | Log => bool | FileRead => option LString.t | ServerSocketBind => option ClientSocketId.t | ClientSocketRead => option LString.t | ClientSocketWrite => bool | ClientSocketClose => bool | Time => N end.",
            "VernacDefinition",
            "f5411e1641543098f6026afcd5ba5758f4484ac0"
        ],
        [
            "Definition eq_dec (command1 command2 : t) : {command1 = command2} + {command1 <> command2}.",
            "VernacDefinition",
            "c3aa83eb1d2c2b23ab383a4af2a749f71cef2f61"
        ],
        [
            "destruct command1; destruct command2; try (left; congruence); try (right; congruence).",
            "VernacExtend",
            "277c326c621070d10df845c6f3b242847bd52b1e"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Command.",
            "VernacEndSegment",
            "83a0db4ac2601c968232557d5f34ca812b2b1d0a"
        ],
        [
            "Module Output.",
            "VernacDefineModule",
            "d1727ea5e938f5d543317c359b3ce42df16aa09c"
        ],
        [
            "Record t : Set := New { command : Command.t; id : positive; argument : Command.request command }.",
            "VernacInductive",
            "60d3e0bb31e8834c996c6cc40efa79c6427435be"
        ],
        [
            "End Output.",
            "VernacEndSegment",
            "95d5090fd429ef5f0b7a18d512124ba18a8106e7"
        ],
        [
            "Module Input.",
            "VernacDefineModule",
            "bb0471ebc42950ce7dc0e667dce5f8d6d08a9e88"
        ],
        [
            "Record t : Set := New { command : Command.t; id : positive; argument : Command.answer command }.",
            "VernacInductive",
            "2e1ca4207b6a2ae864702a4326a50b5334baf1c9"
        ],
        [
            "End Input.",
            "VernacEndSegment",
            "312a224d7f12a45a9a4cd1bada3545f2a0579189"
        ]
    ],
    "proofs": [
        {
            "name": "eq_dec",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "destruct command1; destruct command2; try (left; congruence); try (right; congruence).",
                        "VernacExtend",
                        "277c326c621070d10df845c6f3b242847bd52b1e"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}