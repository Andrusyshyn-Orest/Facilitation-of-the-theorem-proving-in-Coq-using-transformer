{
    "filename": "theories/heaps.v",
    "coq_project": "lemma-overloading",
    "vernac_cmds": [
        [
            "From mathcomp Require Import ssreflect ssrfun ssrnat div ssrbool seq.",
            "VernacRequire",
            "d36fb1bab8a6443f780bf929b6d0731ed0712e09"
        ],
        [
            "From LemmaOverloading Require Import prelude finmap ordtype.",
            "VernacRequire",
            "a3407d4d0895b88a28920b18678b160ef3943fe1"
        ],
        [
            "From mathcomp Require Import path eqtype.",
            "VernacRequire",
            "eacc3101f3b1d5440b827133650b92bf228b1045"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Notation eqn_addl := eqn_add2l.",
            "VernacSyntacticDefinition",
            "23878e58f5b4066073e9d1c0bb7ad7719ed9a160"
        ],
        [
            "Notation modn_addl := modnDl.",
            "VernacSyntacticDefinition",
            "e76211b91902981ecbd5d7a10481032dd8a74b97"
        ],
        [
            "Notation modn_mulr := modnMr.",
            "VernacSyntacticDefinition",
            "55f219c7e0c7e9155ac32b5bac45437c60468dd3"
        ],
        [
            "Notation modn_add2m := modnDm.",
            "VernacSyntacticDefinition",
            "225f1a120e1e8a5127f72e2f1ae36253548d85f6"
        ],
        [
            "Notation modn_addr := modnDr.",
            "VernacSyntacticDefinition",
            "c5fcdf8f1663646dce640f6c224ea4e0d4a42864"
        ],
        [
            "Inductive ptr := ptr_nat of nat.",
            "VernacInductive",
            "e6979d5e5262990c191299b673a2e22b951b8930"
        ],
        [
            "Definition null := ptr_nat 0.",
            "VernacDefinition",
            "6d189d98e412237c08c177132266d3a00cf58bef"
        ],
        [
            "Definition nat_ptr (x : ptr) := let: ptr_nat y := x in y.",
            "VernacDefinition",
            "d063c9e31abd772d242f1973b6975196ce618c2f"
        ],
        [
            "Definition eq_ptr (x y : ptr) := match x, y with ptr_nat m, ptr_nat n => m == n end.",
            "VernacDefinition",
            "1f9f1a75afa4caa7ecb5b03f200c3f6372bada62"
        ],
        [
            "Lemma eq_ptrP : Equality.axiom eq_ptr.",
            "VernacStartTheoremProof",
            "8ef779893567f012c1ab953ee1205866eb499c51"
        ],
        [
            "by case=>x [y] /=; case: eqP=>[->|*]; constructor=>//; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ptr_eqMixin := EqMixin eq_ptrP.",
            "VernacDefinition",
            "830cc4d400022eb4e4a2881c5c95ebbd1e095af2"
        ],
        [
            "Canonical Structure ptr_eqType := EqType ptr ptr_eqMixin.",
            "VernacDefinition",
            "b557362e0114fc35c6969c49433dc73ca88904aa"
        ],
        [
            "Definition ptr_offset x i := ptr_nat (nat_ptr x + i).",
            "VernacDefinition",
            "02bf9d5ca6a311444d64564995cc2ea06b1d1dfa"
        ],
        [
            "Notation \"x .+ i\" := (ptr_offset x i) (at level 3, format \"x .+ i\").",
            "VernacNotation",
            "94d91850ec5b581c5313daf7e7eb49bb0e6fa6e0"
        ],
        [
            "Lemma ptrE x y : (x == y) = (nat_ptr x == nat_ptr y).",
            "VernacStartTheoremProof",
            "3ef27bcceed3869dc89555980d6470caa28b0e73"
        ],
        [
            "by move: x y=>[x][y].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ptr0 x : x.+0 = x.",
            "VernacStartTheoremProof",
            "5a334d85d885606795575ce12cc19e5ff11e23ee"
        ],
        [
            "by case: x=>x; rewrite /ptr_offset addn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ptrA x i j : x.+i.+j = x.+(i+j).",
            "VernacStartTheoremProof",
            "3ed06ede6690d6c0103d57e0cc6d786c1ae75504"
        ],
        [
            "by case: x=>x; rewrite /ptr_offset addnA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ptrK x i j : (x.+i == x.+j) = (i == j).",
            "VernacStartTheoremProof",
            "6a18d0dbf81714c6abf3a98dc39ad83fd70b50c9"
        ],
        [
            "by case: x=>x; rewrite ptrE eqn_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ptr_null x m : (x.+m == null) = (x == null) && (m == 0).",
            "VernacStartTheoremProof",
            "adbec27d4921169acdf9f6236eec519c7afd32e1"
        ],
        [
            "by case: x=>x; rewrite !ptrE addn_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ptrT x y : {m : nat | (x == y.+m) || (y == x.+m)}.",
            "VernacStartTheoremProof",
            "4b69e15fcab8bdda4e4439a902a8dee8243a393d"
        ],
        [
            "case: x y=>x [y]; exists (if x <= y then (y - x) else (x - y)).",
            "VernacExtend",
            "4010f6b94c266a9db1b7c477e89c9af93615707b"
        ],
        [
            "rewrite !ptrE leq_eqVlt /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (ltngtP x y)=>/= E; rewrite subnKC ?(ltnW E) ?eq_refl ?orbT // E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ltn_ptr (x y : ptr) := match x, y with ptr_nat m, ptr_nat n => m < n end.",
            "VernacDefinition",
            "e89eb12690530c9a6b8aa8faac044a5b5b914673"
        ],
        [
            "Lemma ltn_ptr_irr : irreflexive ltn_ptr.",
            "VernacStartTheoremProof",
            "a916fcea852d72cd318fff7b86a0648be0ab92b3"
        ],
        [
            "by case=>x /=; rewrite ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_ptr_trans : transitive ltn_ptr.",
            "VernacStartTheoremProof",
            "444d7e7147d0d450fb0618c4854a9a4ef9df9fbf"
        ],
        [
            "by case=>x [y][z]; apply: ltn_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_ptr_total : forall x y : ptr, [|| ltn_ptr x y, x == y | ltn_ptr y x].",
            "VernacStartTheoremProof",
            "8322d80ca9f22f2648bb52e4ee7f2674bb827cf7"
        ],
        [
            "by case=>x [y]; rewrite ptrE /=; case: ltngtP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ptr_ordMixin := OrdMixin ltn_ptr_irr ltn_ptr_trans ltn_ptr_total.",
            "VernacDefinition",
            "d14addf33699a9fa77671591d1d0e446c826afb6"
        ],
        [
            "Canonical Structure ptr_ordType := OrdType ptr ptr_ordMixin.",
            "VernacDefinition",
            "f4b3685ba65f1246a64058cc18a026ecb3416a7e"
        ],
        [
            "Inductive heap := Undef | Def (finmap : {finMap ptr -> dynamic}) of null \\notin supp finmap.",
            "VernacInductive",
            "8a78c1b6302a78db9c331b3437e98e7c2fd4dee4"
        ],
        [
            "Section NullLemmas.",
            "VernacBeginSection",
            "e67447fd2c191c1591cbf542886ad91a4348f47e"
        ],
        [
            "Variables (f g : {finMap ptr -> dynamic}) (x : ptr) (d : dynamic).",
            "VernacAssumption",
            "0d7a4132663b090c38049907ffebc5ab8441c2d5"
        ],
        [
            "Lemma upd_nullP : x != null -> null \\notin supp f -> null \\notin supp (ins x d f).",
            "VernacStartTheoremProof",
            "bff5e8996f4d246865005968e8e3d5ffb8e6a470"
        ],
        [
            "by move=>H1 H2; rewrite supp_ins negb_or /= eq_sym H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free_nullP : null \\notin supp f -> null \\notin supp (rem x f).",
            "VernacStartTheoremProof",
            "78ca99837e3ef799fd1398f29746d7f180f96264"
        ],
        [
            "by move=>H; rewrite supp_rem negb_and /= H orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma un_nullP : null \\notin supp f -> null \\notin supp g -> null \\notin supp (fcat f g).",
            "VernacStartTheoremProof",
            "0dcbd74c2a3feaf33f84858d9c7710a897d00e76"
        ],
        [
            "by move=>H1 H2; rewrite supp_fcat negb_or H1 H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma heapE pf pg : f = g <-> @Def f pf = @Def g pg.",
            "VernacStartTheoremProof",
            "1d216d235893959318675017c9c8cbc0d2dff96d"
        ],
        [
            "split=>[E|[//]]; move: pf pg.",
            "VernacExtend",
            "d382ad451ae594d67a86f477726931c094e27e38"
        ],
        [
            "by rewrite E=>pf pg; congr Def; apply: bool_irrelevance.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NullLemmas.",
            "VernacEndSegment",
            "9ae365d10d0278aed31a287bb8e4bc1cd29d8652"
        ],
        [
            "Definition def h := if h is Def _ _ then true else false.",
            "VernacDefinition",
            "f072853e3567dffcf7725b23986c25c853d1da9b"
        ],
        [
            "Definition empty := @Def (finmap.nil _ _) is_true_true.",
            "VernacDefinition",
            "f134a4ac8821b7f957771de445c2cc44558cc204"
        ],
        [
            "Definition upd h x d := nosimpl (if h is Def hs ns then if decP (@idP (x != null)) is left pf then Def (@upd_nullP _ _ d pf ns) else Undef else Undef).",
            "VernacDefinition",
            "c77fde75f03c0a7090ccd9d56867a4af15b6503b"
        ],
        [
            "Definition dom h : pred ptr := nosimpl (if h is Def f _ then mem (supp f) else pred0).",
            "VernacDefinition",
            "07bc9f11df492dee44d6660ce26e58f66d564fd0"
        ],
        [
            "Definition free x h : heap := (if h is Def hs ns then Def (free_nullP x ns) else Undef).",
            "VernacDefinition",
            "4a8911a2dad9fe67d484a30d4dc8640326dc7319"
        ],
        [
            "Definition look (x : ptr) h := (if h is Def hs _ then if fnd x hs is Some d then d else dyn tt else dyn tt).",
            "VernacDefinition",
            "23f4c7a986a26a6f2e22619fa2a300f0388e1bcf"
        ],
        [
            "Definition union2 h1 h2 := nosimpl (if (h1, h2) is (Def hs1 ns1, Def hs2 ns2) then if disj hs1 hs2 then Def (@un_nullP _ _ ns1 ns2) else Undef else Undef).",
            "VernacDefinition",
            "3fc6790395ce3e1c38dde23f91e0365ec5bc4651"
        ],
        [
            "Definition empb h := if h is Def hs _ then supp hs == [::] else false.",
            "VernacDefinition",
            "994c1c4b2a759dcac43f1bbfb427680edc0d1bda"
        ],
        [
            "Definition fresh h := (if h is Def hs _ then last null (supp hs) else null) .+ 1.",
            "VernacDefinition",
            "283ed2e2a833c0914cc3191896cc110b66df55d3"
        ],
        [
            "Definition subdom h1 h2 := if (h1, h2) is (Def hs1 _, Def hs2 _) then all (fun x => x \\in supp hs2) (supp hs1) else false.",
            "VernacDefinition",
            "ed8d382f23388d492e336fd6dd06ec5f1ac837e7"
        ],
        [
            "Definition subheap h1 h2 := subdom h1 h2 /\\ forall x, x \\in dom h1 -> look x h1 = look x h2.",
            "VernacDefinition",
            "a0e9771ea60dc99e47704209ea859c95197c3ec8"
        ],
        [
            "Definition subtract h1 h2 := if h1 is (Def hs1 _) then foldl (fun h x => free x h) h2 (supp hs1) else Undef.",
            "VernacDefinition",
            "e7361768934a0a74b82e7d9171f3ecb137cfe8e7"
        ],
        [
            "Definition pick h := if h is Def hs _ then head null (supp hs) else null.",
            "VernacDefinition",
            "9e127e5c2efca7b8bea803f3117aba0c46fec16e"
        ],
        [
            "Definition pts A (x : ptr) (v : A) := upd empty x (dyn v).",
            "VernacDefinition",
            "17034a188f567d1d7feb62c7856a5a062ccb8518"
        ],
        [
            "Notation \"h1 :+ h2\" := (union2 h1 h2) (at level 43, left associativity).",
            "VernacNotation",
            "48fca73e53e8c5ca6887ffb9c96a17323b4d37ec"
        ],
        [
            "Notation \"h2 :- h1\" := (subtract h1 h2) (at level 43, left associativity).",
            "VernacNotation",
            "52899198a2e7704e5bd5b4a43c9919af1c55dc0e"
        ],
        [
            "Notation \"x :-> v\" := (pts x v) (at level 30).",
            "VernacNotation",
            "06d4984d1963c027929d363ed6ac6b253e173c8f"
        ],
        [
            "Lemma unC : forall h1 h2, h1 :+ h2 = h2 :+ h1.",
            "VernacStartTheoremProof",
            "047c5bd360f53a29e7a2debacffbecc669886116"
        ],
        [
            "case=>[|h1 H1]; case=>[|h2 H2] //; rewrite /union2.",
            "VernacExtend",
            "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
        ],
        [
            "by case: ifP=>E; rewrite disjC E // -heapE fcatC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unA : forall h1 h2 h3, h1 :+ (h2 :+ h3) = h1 :+ h2 :+ h3.",
            "VernacStartTheoremProof",
            "bcb2ac36c3047d1545238a6599bc03506d5458f5"
        ],
        [
            "case=>[|h1 H1]; case=>[|h2 H2]; case=>[|h3 H3] //; rewrite /union2; case: ifP=>//; case: ifP=>//; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>E1 E2; rewrite disjC disj_fcat andbC disjC E2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: ifP=>E1 //; rewrite disj_fcat E1 /= -!(disjC h3) disj_fcat=>->->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite disj_fcat; case/andP=>->.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite -!(disjC h3) disj_fcat=>E2 E3.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite E2 E3 -heapE fcatA // disjC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unCA h1 h2 h3 : h1 :+ (h2 :+ h3) = h2 :+ (h1 :+ h3).",
            "VernacStartTheoremProof",
            "cbb505cb7b09cab16d789ef72034cc192f30e500"
        ],
        [
            "by rewrite unC (unC h1) unA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unAC h1 h2 h3 : h1 :+ h2 :+ h3 = h1 :+ h3 :+ h2.",
            "VernacStartTheoremProof",
            "28a3c2d9fb2c4f65fe750fd22c08a4010d0406f1"
        ],
        [
            "by rewrite (unC h1) -unA unC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma un0h h : empty :+ h = h.",
            "VernacStartTheoremProof",
            "3b3f93a00d6e3d306fcf51e3541a689d15ba8ce2"
        ],
        [
            "by case: h=>[|h H] //; apply/heapE; rewrite fcat0s.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unh0 h : h :+ empty = h.",
            "VernacStartTheoremProof",
            "1ff99a1c87b00774d987352f853e70beb7a7de98"
        ],
        [
            "by rewrite unC un0h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unKhl h h1 h2 : def (h1 :+ h) -> h1 :+ h = h2 :+ h -> h1 = h2.",
            "VernacStartTheoremProof",
            "2bbbf175e6e5c6b894301316c5c6f809ce733377"
        ],
        [
            "case: h h1 h2=>[|h H]; case=>[|h1 H1]; case=>[|h2 H2] //=; rewrite /union2; case: ifP=>//; case: ifP=>// D1 D2 _ [E]; apply/heapE.",
            "VernacExtend",
            "688bdb4d4629df8733d117725fb7338df5dca89d"
        ],
        [
            "by apply: fcatsK E; rewrite D1 D2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unhKl h h1 h2 : def (h :+ h1) -> h :+ h1 = h :+ h2 -> h1 = h2.",
            "VernacStartTheoremProof",
            "bbcc069051f58fd2fade3bc43276ab482eb199c0"
        ],
        [
            "by rewrite !(unC h); apply: unKhl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unKhr h h1 h2 : def (h2 :+ h) -> h1 :+ h = h2 :+ h -> h1 = h2.",
            "VernacStartTheoremProof",
            "bd22a07fea7b32d798da5df3721d904807b68ecd"
        ],
        [
            "by move=>H1 H2; symmetry in H2; rewrite (unKhl H1 H2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unhKr h h1 h2 : def (h :+ h2) -> h :+ h1 = h :+ h2 -> h1 = h2.",
            "VernacStartTheoremProof",
            "315a445b181c7fa79f495ab04cf7dff249070b03"
        ],
        [
            "by rewrite !(unC h); apply: unKhr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom0 : dom empty = pred0.",
            "VernacStartTheoremProof",
            "85561a769c13252945a65a774bffa093b04a4ab1"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domU h y d : dom (upd h y d) =i [pred x | (y != null) && if x == y then def h else x \\in dom h].",
            "VernacStartTheoremProof",
            "7aad6cfadcfaa5799709a0ce838ee3a1dd1d49dd"
        ],
        [
            "case: h=>[|h T] /= x; rewrite inE /upd /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite ?inE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ifP=>//; rewrite andbF; reflexivity.",
            "VernacExtend",
            "a41396cf40071672ab90fa2c8bf4f9e13e2ee101"
        ],
        [
            "case: ifP=>E; case: decP=>H1; rewrite /dom /=.",
            "VernacExtend",
            "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (eqP E) H1 supp_ins inE /= eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: eqP H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite supp_ins inE /= E H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: eqP H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domPt A x (v : A) : dom (x :-> v) =i [pred y | (x == y) && (x != null)].",
            "VernacStartTheoremProof",
            "fcc0fa745000cc00b079b5f7525bbf5952f9ce9f"
        ],
        [
            "move=>y; rewrite domU dom0 !inE /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: ifP=>E; rewrite -(eq_sym y) E andbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domF h x : dom (free x h) =i [pred y | if x == y then false else y \\in dom h].",
            "VernacStartTheoremProof",
            "5aeef6d1c60e658d7effdaf7e6b5f7164e78c08c"
        ],
        [
            "case: h=>[|h H] y /=; rewrite ?inE /=; case: ifP=>// E; by rewrite supp_rem inE /= eq_sym E.",
            "VernacExtend",
            "8f902edf471e04ca03931fa987bb23058542eb14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domUn h1 h2 : dom (h1 :+ h2) =i [pred x | def (h1 :+ h2) && (x \\in [predU dom h1 & dom h2])].",
            "VernacStartTheoremProof",
            "6660158b7a463b7a9919496f4189c889d5af6215"
        ],
        [
            "case: h1 h2 =>[|h1 H1] // [|h2 H2] // x; rewrite /dom /union2.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case: ifP=>// E; rewrite supp_fcat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_null h x : x \\in dom h -> x != null.",
            "VernacStartTheoremProof",
            "07521769b761b10fcd9271bb90305f45d42a3539"
        ],
        [
            "by case: h=>[|h H1] //; case: eqP=>// ->; rewrite (negbTE H1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_def h x : x \\in dom h -> def h.",
            "VernacStartTheoremProof",
            "876e6b99d127280e8c69f92c332d2c7dfd9710bb"
        ],
        [
            "by case: h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_free h x : x \\notin dom h -> free x h = h.",
            "VernacStartTheoremProof",
            "0cd21949ce6e7984e0cf4a49217f962694c911c0"
        ],
        [
            "by case: h=>[|h H] // E; apply/heapE; apply: rem_supp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_look h x : x \\notin dom h -> look x h = dyn tt.",
            "VernacStartTheoremProof",
            "6fe9aee3adc4dccbb98db44c0994d3aeb45a8e28"
        ],
        [
            "by case: h=>[|h H] //; rewrite /look /dom -topredE /=; case: (suppP x)=>// ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma def0 : def empty.",
            "VernacStartTheoremProof",
            "f7f5d8fc6cf66aba94c1749ff5b4650b5aa0df2d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve def0 : core.",
            "VernacHints",
            "43adabb9b1577e67dc3bd346ad6b2185e33cdb56"
        ],
        [
            "Lemma defU h x d : def (upd h x d) = (x != null) && (def h).",
            "VernacStartTheoremProof",
            "fc84197b4718cfb105c440e5937d364fbc917d02"
        ],
        [
            "case: h=>[|h H] /=; first by rewrite andbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /upd; case: decP=>/= [->//|]; case: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defPt A x (v : A) : def (x :-> v) = (x != null).",
            "VernacStartTheoremProof",
            "1135dbaba654270b4b8dfac0c4b3758bb7bde23a"
        ],
        [
            "by rewrite defU andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defF h x : def (free x h) = def h.",
            "VernacStartTheoremProof",
            "ec21fa7ca351866bb4216d2060d37d9cd8392342"
        ],
        [
            "by case: h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "CoInductive defUn_spec h1 h2 : bool -> Type := | def_false1 of ~~ def h1 : defUn_spec h1 h2 false | def_false2 of ~~ def h2 : defUn_spec h1 h2 false | def_false3 x of x \\in dom h1 & x \\in dom h2 : defUn_spec h1 h2 false | def_true of def h1 & def h2 & (forall x, x \\in dom h1 -> x \\notin dom h2) : defUn_spec h1 h2 true.",
            "VernacInductive",
            "fff8ce4c5c2dfa94fb0576860d9cb26c4b5c0ff7"
        ],
        [
            "Lemma defUn : forall h1 h2, defUn_spec h1 h2 (def (h1 :+ h2)).",
            "VernacStartTheoremProof",
            "440161fa177637319706acf6804c2751200afafd"
        ],
        [
            "case=>[|h1 H1][|h2 H2] /=; try by [apply: def_false1 | apply: def_false2].",
            "VernacExtend",
            "700e4ba7c43aef376de752aa78d70ea0bf66a54e"
        ],
        [
            "rewrite /union2; case: ifP=>E.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: def_true=>// x H; case: disjP E=>//; move/( _ _ H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: disjP E=>// x T1 T2 _; apply: (def_false3 (x:=x)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defUnl h1 h2 : def (h1 :+ h2) -> def h1.",
            "VernacStartTheoremProof",
            "722f39b4952f8b314ddd8e16abfcf49a128fd362"
        ],
        [
            "by case: h1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defUnr h1 h2 : def (h1 :+ h2) -> def h2.",
            "VernacStartTheoremProof",
            "f45b7f0021cb54b34ea99e0161413d4ac4401c18"
        ],
        [
            "by case: h1=>h1 // H; case: h2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defFUn h1 h2 x : def (h1 :+ h2) -> def (free x h1 :+ h2).",
            "VernacStartTheoremProof",
            "95feae09e4d8b6f130cf90b836adf29ad0d27a5a"
        ],
        [
            "case: defUn=>// H1 H2 H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: defUn=>//; [by rewrite defF H1|by rewrite H2|].",
            "VernacExtend",
            "6148700c32a2b1286f1639cfa47160fa5d1d79ea"
        ],
        [
            "move=>k; rewrite domF inE /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: ifP=>_ //; move/H; move/negbTE=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defUnF h1 h2 x : def (h1 :+ h2) -> def (h1 :+ free x h2).",
            "VernacStartTheoremProof",
            "1846be0f68f98ec837db21efc67e97fb08f18237"
        ],
        [
            "by rewrite unC; move/(defFUn x); rewrite unC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undefE x : ~~ def x <-> x = Undef.",
            "VernacStartTheoremProof",
            "704605825544fdf84268e4b8589d3debead3100e"
        ],
        [
            "by case: x; split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upd_inj h x d1 d2 : def h -> x != null -> upd h x d1 = upd h x d2 -> d1 = d2.",
            "VernacStartTheoremProof",
            "49b283eb26a170d8012138bc9bc911148152421a"
        ],
        [
            "case: h=>[|h H] // _ H1; rewrite /upd; case: decP=>// H2 [E].",
            "VernacExtend",
            "1dd33488047dbf70f12e12a749f59bfa780f9e04"
        ],
        [
            "have: fnd x (ins x d1 h) = fnd x (ins x d2 h) by rewrite E.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !fnd_ins eq_refl; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma heap_eta h x : x \\in dom h -> h = upd (free x h) x (look x h).",
            "VernacStartTheoremProof",
            "11850844c19ce7a3feafa6909b30310b1e30eafd"
        ],
        [
            "case: h=>[|h H] //; rewrite /upd /look /dom /free.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: decP; rewrite -topredE => /= H1 H2; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: eqP H1 H H2=>// -> _ H; rewrite (negbTE H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/heapE; apply: fmapP=>k; rewrite fnd_ins.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "case: ifP=>[|E]; last by rewrite fnd_rem E.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP=>->; case E1: (fnd x h)=>//.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by case: (suppP _ h) H2 E1=>// v ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updU h x y d1 d2 : upd (upd h x d1) y d2 = if x == y then upd h x d2 else upd (upd h y d2) x d1.",
            "VernacStartTheoremProof",
            "1eea4388d16e61897c721a3a4a7cbefcee7fefc1"
        ],
        [
            "case: h =>[|h T]; rewrite /upd; case: ifP=>// H; case: decP=>H1 //; case: decP=>// H2; last 2 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -(eqP H) H1 in H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply/heapE; rewrite ins_ins eq_sym H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/heapE; rewrite ins_ins (eqP H) eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updF h x y d : upd (free x h) y d = if x == y then upd h x d else free x (upd h y d).",
            "VernacStartTheoremProof",
            "5b04ab5841ff5ff88d8d5e27f452521d87b3a39e"
        ],
        [
            "case: h=>[|h H] /=; case: ifP=>E //; rewrite /upd; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: decP=>// H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply/heapE; rewrite ins_rem eq_sym E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: decP=>// H1; case: decP=>// H2.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply/heapE; rewrite ins_rem (eqP E) eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (eqP E) H1 in H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -(eqP E) H2 in H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updUnl h1 h2 x d : upd (h1 :+ h2) x d = if x \\in dom h1 then upd h1 x d :+ h2 else h1 :+ upd h2 x d.",
            "VernacStartTheoremProof",
            "25ad82d73d65495cc407a0f73afbcabaf051b9b4"
        ],
        [
            "case: h1 h2=>[|h1 H1][|h2 H2] //; case: ifP=>H //; rewrite /upd /union2; case: decP=>// H3; case: ifP=>D //.",
            "VernacExtend",
            "745f89411ed3987bf8b3cfb7ad3fac62ab7182f2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite disjC disj_ins disjC D.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: disjP D=>//; move/(_ _ H)=>H4 _; rewrite H4.",
            "VernacExtend",
            "dfdf77d8d0d45996a42afec59fe3d2256fc04454"
        ],
        [
            "by apply/heapE; rewrite fcat_inss.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite disjC disj_ins disjC D andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite disj_ins D H /=; apply/heapE.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite (@fcatC _ _ h1) // (@fcatC _ _ h1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite fcat_inss // H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite disj_ins H D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite disj_ins D andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updUnr h1 h2 x d : upd (h1 :+ h2) x d = if x \\in dom h2 then h1 :+ upd h2 x d else upd h1 x d :+ h2.",
            "VernacStartTheoremProof",
            "a1a510125c608aaae9f388bb4493fea59290d9a9"
        ],
        [
            "by rewrite unC updUnl (unC h1) (unC h2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pts_injP A1 A2 x1 x2 (v1 : A1) (v2 : A2) : def (x1 :-> v1) -> x1 :-> v1 = x2 :-> v2 -> x1 = x2 /\\ A1 = A2.",
            "VernacStartTheoremProof",
            "e1fda2a785e738cba8ea335f105e6be5cb573196"
        ],
        [
            "rewrite /pts /upd /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: decP=>H1; case: decP=>H2 // _; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pts_injT A1 A2 x (v1 : A1) (v2 : A2) : def (x :-> v1) -> x :-> v1 = x :-> v2 -> A1 = A2.",
            "VernacStartTheoremProof",
            "56681c26462f0c411fa911d17394010ee48bd901"
        ],
        [
            "by move=>D; case/(pts_injP D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pts_inj A x (v1 v2 : A) : def (x :-> v1) -> x :-> v1 = x :-> v2 -> v1 = v2.",
            "VernacStartTheoremProof",
            "0ea378cc94edfe7deb9f4fc95718cf97f7a3e22d"
        ],
        [
            "move=>D; rewrite /pts /upd.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: decP; last by rewrite -(defPt _ v1) D.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>H []; apply: inj_pairT2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free0 x : free x empty = empty.",
            "VernacStartTheoremProof",
            "99c9bdee2a4db7bcab9a986516ea42a366f47b10"
        ],
        [
            "by apply/heapE; rewrite rem_empty.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeU h x y d : free x (upd h y d) = if x == y then if y == null then Undef else free x h else upd (free x h) y d.",
            "VernacStartTheoremProof",
            "6bfae096e10ff2bbd1493b426aee64a2f857f8d3"
        ],
        [
            "case: h=>[|h H] /=; first by case: ifP=>// E; case: ifP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /upd; case: ifP=>E1; case: decP=>H1 //.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (negbTE H1); apply/heapE; rewrite rem_ins E1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: ifP H1=>// ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/heapE; rewrite rem_ins E1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeF h x y : free x (free y h) = if x == y then free x h else free y (free x h).",
            "VernacStartTheoremProof",
            "5ed102d8929853fba3ba6b133018d09463419a36"
        ],
        [
            "by case: h=>*; case: ifP=>E //; apply/heapE; rewrite rem_rem E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeUn h1 h2 x : free x (h1 :+ h2) = if x \\in dom (h1 :+ h2) then free x h1 :+ free x h2 else h1 :+ h2.",
            "VernacStartTheoremProof",
            "db6c5bc52985204bce24d75b64b15b257f86791e"
        ],
        [
            "case: h1 h2=>[|h1 H1] [|h2 H2] //; rewrite /union2 /free /dom /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: ifP=>E1 //; rewrite supp_fcat inE /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: ifP=>E2; last by apply/heapE; rewrite rem_supp // supp_fcat inE /= E2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite disj_rem; last by rewrite disjC disj_rem // disjC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/heapE; case/orP: E2=>E2.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "suff E3: x \\notin supp h2 by rewrite -fcat_rems // (rem_supp E3).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by case: disjP E1 E2=>// H _; move/H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff E3: x \\notin supp h1 by rewrite -fcat_srem // (rem_supp E3).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by case: disjP E1 E2=>// H _; move/contra: (H x); rewrite negbK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeUnD h1 h2 x : def (h1 :+ h2) -> free x (h1 :+ h2) = free x h1 :+ free x h2.",
            "VernacStartTheoremProof",
            "5703c9137b892c61f9a458ac8c43e0a9a800e9a3"
        ],
        [
            "move=>D; rewrite freeUn domUn D !inE /=; case: ifP=>//.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "by move/negbT; rewrite negb_or; case/andP=>H1 H2; rewrite !dom_free.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeUnl h1 h2 x : x \\notin dom h1 -> free x (h1 :+ h2) = h1 :+ free x h2.",
            "VernacStartTheoremProof",
            "879cc1b127041729b7e8cc75db13388c41b7baf2"
        ],
        [
            "move=>D1; rewrite freeUn domUn !inE (negbTE D1) /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: ifP; first by case/andP; rewrite dom_free.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/negbT; rewrite negb_and; case/orP=>D2; last by rewrite dom_free.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "suff: ~~ def (h1 :+ free x h2).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: (h1 :+ free x h2)=>// _; case: (h1 :+ h2) D2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: contra D2; case: defUn=>// H1 H2 H _.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "case: defUn=>//; first by [rewrite H1]; first by move: H2; rewrite defF=>->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>k H3; move: (H _ H3); rewrite domF inE /=.",
            "VernacExtend",
            "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
        ],
        [
            "by case: ifP H3 D1=>[|_ _ _]; [move/eqP=><- -> | move/negbTE=>->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeUnr h1 h2 x : x \\notin dom h2 -> free x (h1 :+ h2) = free x h1 :+ h2.",
            "VernacStartTheoremProof",
            "598a3eba4f03fbfa1a606012bf659410d5d7d68a"
        ],
        [
            "by move=>H; rewrite unC freeUnl // unC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookU h x y d : look x (upd h y d) = if x == y then if def h && (y != null) then d else dyn tt else if y != null then look x h else dyn tt.",
            "VernacStartTheoremProof",
            "65dc8175b22ab15f7adb4596527e11565db57e57"
        ],
        [
            "case: h=>[|h H] /=; case: ifP=>E //; case: ifP=>H1 //; rewrite /upd; by case: decP=>// H2; rewrite /look fnd_ins E //; rewrite H1 in H2.",
            "VernacExtend",
            "204d98e7c8612e36cfa3591df9fc23c5976cbb80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookF h x y : look x (free y h) = if x == y then dyn tt else look x h.",
            "VernacStartTheoremProof",
            "f17aaab8547677f70815e00d383adb5c10cb54f4"
        ],
        [
            "by case: h=>[|h H]; case: ifP=>E //; rewrite /look /free fnd_rem E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookUnl h1 h2 x : def (h1 :+ h2) -> look x (h1 :+ h2) = if x \\in dom h1 then look x h1 else look x h2.",
            "VernacStartTheoremProof",
            "ba52668e7ee834d3194c4ceaf6e0b52fefbc93c2"
        ],
        [
            "case: h1 h2=>[|h1 H1] // [|h2 H2] //; rewrite /look /dom /union2.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: ifP=>D //= _; case: ifP=>E1; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite fnd_fcat; case: ifP=>// E2; rewrite fnd_supp ?E1 // fnd_supp ?E2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff E2: x \\notin supp h2 by rewrite fnd_fcat (negbTE E2).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by case: disjP D E1=>// H _; apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookUnr h1 h2 x : def (h1 :+ h2) -> look x (h1 :+ h2) = if x \\in dom h2 then look x h2 else look x h1.",
            "VernacStartTheoremProof",
            "5c17e7e55ba978b2245883fbd9e9afcdf366670b"
        ],
        [
            "by rewrite unC=>D; rewrite lookUnl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empP h : reflect (h = empty) (empb h).",
            "VernacStartTheoremProof",
            "9da9b5cd5a84653f834abfce628c20fd5187cafc"
        ],
        [
            "case: h=>[|h] /=; first by right.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: eqP=>E H; first by apply: ReflectT; apply/heapE; apply/supp_nilE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: ReflectF; move/heapE=>S; rewrite S supp_nil in E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empU h x d : empb (upd h x d) = false.",
            "VernacStartTheoremProof",
            "11970a8f41ad4598e6c637137c28fde1c4cc0467"
        ],
        [
            "case: h=>[|h H] //; rewrite /upd /empb; case: decP=>// H1.",
            "VernacExtend",
            "1dd33488047dbf70f12e12a749f59bfa780f9e04"
        ],
        [
            "suff: x \\in supp (ins x d h) by case: (supp _).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite supp_ins inE /= eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empPt A x (v : A) : empb (x :-> v) = false.",
            "VernacStartTheoremProof",
            "6cfeabc943a136a875624b29fd6c0cd88b56b93c"
        ],
        [
            "by rewrite empU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empUn h1 h2 : empb (h1 :+ h2) = empb h1 && empb h2.",
            "VernacStartTheoremProof",
            "7bb2fc0834d245e2332f4a76f6bac4ab100cca7d"
        ],
        [
            "case: h1 h2=>[|h1 H1] // [|h2 H2] /=; first by rewrite andbC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /empb /union2; case: ifP=>E; case: eqP=>E1; case: eqP=>E2 //=; last 2 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: E2 E1; move/supp_nilE=>->; rewrite fcat0s; case: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: E1 E2 E; do 2![move/supp_nilE=>->]; case: disjP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/supp_nilE: E2 E1=>-> <-; rewrite fcat0s eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [k H3]: exists k, k \\in supp h1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: (supp h1) {E1 H1 E} E2=>[|x s _] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists x; rewrite inE eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff: k \\in supp (fcat h1 h2) by rewrite E1.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite supp_fcat inE /= H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empbE h : h = empty <-> empb h.",
            "VernacStartTheoremProof",
            "94e7655d1ec681cb6a9b910da478b99db1076361"
        ],
        [
            "by split=>[-> //|]; case: empP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma un0E h1 h2 : h1 :+ h2 = empty <-> h1 = empty /\\ h2 = empty.",
            "VernacStartTheoremProof",
            "e4ad31c0df7151c52e0ae5384dab2dc02a41aa28"
        ],
        [
            "by rewrite !empbE empUn; case: andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defE h : reflect (def h /\\ forall x, x \\notin dom h)(empb h).",
            "VernacStartTheoremProof",
            "3a1746b97e26b2913cf38b2661c835b835d9efce"
        ],
        [
            "case: empP=>T; constructor; first by rewrite T.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>D E; case: T; case: h D E=>// f H _; rewrite /dom => E.",
            "VernacExtend",
            "4e8dbd3197964509676a5d02e50565819190a1c4"
        ],
        [
            "apply/heapE; apply/supp_nilE.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by case: (supp f) E=>// x s; move/(_ x); rewrite inE eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defUnhh h : def (h :+ h) = empb h.",
            "VernacStartTheoremProof",
            "388ee82baec9419d8e249ebd88af8ce7c0122997"
        ],
        [
            "case E: (empb h); first by move/empbE: E=>->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: defUn=>// D _ L.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: defE E=>//; case; split=>// x.",
            "VernacExtend",
            "4d134c7f11ebe0c470159cd214ff82293400228b"
        ],
        [
            "case E: (x \\in dom h)=>//.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by move: (L x E); rewrite E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma path_last n s x : path ord x s -> ord x (last x s).+(n+1).",
            "VernacStartTheoremProof",
            "9fc0d82a61deb5b30d2b8659d4329290239d61cb"
        ],
        [
            "move: n s x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suff L: forall s x, path ord x s -> ord x (last x s).+(1).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "elim=>[|n IH] // s x; move/IH=>E; apply: trans E _.",
            "VernacExtend",
            "c338010fe7d31390136af9ecc9d37d5c6f3b5eb3"
        ],
        [
            "by case: (last x s)=>m; rewrite /ord /= addSn (addnS m).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim=>[|y s IH x] /=; first by case=>x; rewrite /ord /= addn1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/andP=>H1; move/IH; apply: trans H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma path_filter (A : ordType) (s : seq A) (p : pred A) x : path ord x s -> path ord x (filter p s).",
            "VernacStartTheoremProof",
            "91a9bd17b3e18e6a38280413e9eb2ac7a9083605"
        ],
        [
            "elim: s x=>[|y s IH] x //=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "case/andP=>H1 H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: ifP=>E; first by rewrite /= H1 IH.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: IH; elim: s H2=>[|z s IH] //=.",
            "VernacExtend",
            "470117b6920bbf0ab181fc70f91f03232cdae40b"
        ],
        [
            "by case/andP=>H2 H3; rewrite (@trans _ y).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_fresh h n : (fresh h).+n \\notin dom h.",
            "VernacStartTheoremProof",
            "545ee94853d2cf13770b56c5623ae437975854a7"
        ],
        [
            "suff L2: forall h x, x \\in dom h -> ord x (fresh h).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: (contra (L2 _ _)); rewrite -leqNgt leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>[|[s H1]] //; rewrite /supp => /= H2 x.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "rewrite /dom /fresh /supp -topredE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: s H1 null H2 x=>[|[y d] s IH] //= H1 x.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite inE negb_or; case/andP=>H3 H4 z; rewrite inE.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "case/orP; first by move/eqP=>->{z}; apply: (path_last 0).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IH; [apply: path_sorted H1 | apply: notin_path H1].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fresh_null h : fresh h != null.",
            "VernacStartTheoremProof",
            "7a2af66ffa906cfa833b26f019611a2f743e415b"
        ],
        [
            "by rewrite -lt0n addn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Opaque fresh.",
            "VernacSetOpacity",
            "9d665c10ce5f9d0d28a587b223e824df55248f5f"
        ],
        [
            "Hint Resolve dom_fresh fresh_null : core.",
            "VernacHints",
            "b67734ba0a690e11a9282e594817725cbb9378be"
        ],
        [
            "Lemma emp_pick h : (pick h == null) = (~~ def h || empb h).",
            "VernacStartTheoremProof",
            "9b8972da00362eb6cd11e3cbed5279a58f82cffc"
        ],
        [
            "case: h=>[|h] //=; case: (supp h)=>[|x xs] //=.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite inE negb_or eq_sym; case/andP; move/negbTE=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pickP h : def h && ~~ empb h = (pick h \\in dom h).",
            "VernacStartTheoremProof",
            "d7b3277f2410798da53fdd35620559e0e839cef3"
        ],
        [
            "by rewrite /dom; case: h=>[|h] //=; case: (supp h)=>// *; rewrite inE eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdom_def h1 h2 : subdom h1 h2 -> def h1 && def h2.",
            "VernacStartTheoremProof",
            "97d30cd0a936b33e20e4dc2dbe45ded9a2d468f6"
        ],
        [
            "by case: h1 h2=>[|h1 H1] // [|h2 H2].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdomP h1 h2 : def h1 -> ~~ empb h1 -> reflect (forall x, x \\in dom h1 -> x \\in dom h2) (subdom h1 h2).",
            "VernacStartTheoremProof",
            "70e8634101a781e065e8077c35a5df85ec10de6a"
        ],
        [
            "case: h1 h2=>[|h1 H1] // [|h2 H2] //= _ H3; last by apply: allP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: ReflectF.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "suff H: head null (supp h1) \\in supp h1 by move/(_ _ H).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by case: (supp h1) H1 H3=>[|x xs] //=; rewrite !inE eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdomQ x h1 h2 : subdom h1 h2 -> x \\in dom h1 -> x \\in dom h2.",
            "VernacStartTheoremProof",
            "58e2392c0ee1dbbd51969a758d7adeb9c346b673"
        ],
        [
            "move=>S H; case: subdomP S=>//.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: dom_def H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: empP=>// E; rewrite E dom0 in H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>H2 _; apply: H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdom_refl h : def h -> subdom h h.",
            "VernacStartTheoremProof",
            "c68b11f3303b47752ddd15d9fd885c00853d57cc"
        ],
        [
            "by case: h=>[//|h H _]; apply/allP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdomD h1 h2 h : subdom h1 h2 -> def (h2 :+ h) -> def (h1 :+ h).",
            "VernacStartTheoremProof",
            "ea39e1239600ce34bc5a6ca7b14a2c38f442d4c7"
        ],
        [
            "case: h1 h2 h=>[|h1 H1]; case=>[|h2 H2]; case=>[|h H] //=.",
            "VernacExtend",
            "d4127243a8edd835b38ce1b186629bc51391e41f"
        ],
        [
            "rewrite /subdom /def /union2 /=; case: ifP=>E1 //; case: ifP=>E2 // E _.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "case: disjP E2=>// x H3 H4 _; case: disjP E1=>// X1 _.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by case: (allP (s := supp h1)) E=>//; move/(_ _ H3); move/X1; rewrite H4.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdomE h1 h2 h : def (h2 :+ h) -> subdom h1 h2 -> subdom (h1 :+ h) (h2 :+ h).",
            "VernacStartTheoremProof",
            "4458ccae3b32890204a65c93baaa35133211a44c"
        ],
        [
            "case: h1 h2 h=>[|h1 H1]; case=>[|h2 H2]; case=>[|h H] //=.",
            "VernacExtend",
            "d4127243a8edd835b38ce1b186629bc51391e41f"
        ],
        [
            "rewrite /union2 /subdom /def /=; case: ifP=>E1 // _; case: ifP=>E2; case: (allP (s:=supp h1))=>// E _; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: disjP E2=>// x H3 H4; move/E: H3.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "by case: disjP E1=>// X _; move/X; rewrite H4.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (allP (s:=supp (fcat h1 h)))=>//; case=>x.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "rewrite !supp_fcat !inE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/orP; rewrite ?inE; [move/E=>->| move=>->; rewrite orbT].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdomUE h1 h2 h1' h2' : def (h2 :+ h2') -> subdom h1 h2 -> subdom h1' h2' -> subdom (h1 :+ h1') (h2 :+ h2').",
            "VernacStartTheoremProof",
            "ce44ce767d928eb4a7daf6c07dd7693a34be2d0e"
        ],
        [
            "case: h1 h2 h1' h2'=>[|h1 H1]; case=>[|h2 H2]; case=>[|h1' H1']; case=>[|h2' H2'] //.",
            "VernacExtend",
            "9c855307bebe9c9fcd60ebdc397f010c9a03df54"
        ],
        [
            "rewrite /subdom /def /union2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ifP=>E1 // _; case: ifP=>E2 // T1 T2; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: disjP E2=>// x; case: allP T1=>// X _; move/X=>{X}.",
            "VernacExtend",
            "9dda2bdd158284551955535b055c222b3c4fedd1"
        ],
        [
            "case: disjP E1=>// X _; move/X=>{X}.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "by case: allP T2=>// X _ H3 H4; move/X: H4 H3=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: allP=>//; case=>x.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "rewrite !supp_fcat !inE; case/orP=>E.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: allP T1=>//; move/(_ _ E)=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: allP T2=>//; move/(_ _ E)=>->; rewrite orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdom_emp h : def h -> subdom empty h.",
            "VernacStartTheoremProof",
            "5fc6cba0bab91249260117b2e47f481f7c15d7a1"
        ],
        [
            "by case: h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdom_emp_inv h : subdom h empty -> h = empty.",
            "VernacStartTheoremProof",
            "9d571f55010c210ec57981f63fb836b64d9e1bcc"
        ],
        [
            "case: h=>[|h H] //; rewrite /subdom /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: (allP (s:=supp h))=>// E _; apply/heapE; apply: fmapP=>x.",
            "VernacExtend",
            "d0ca9c3fd2da32fc51e6c7224f197d333e09c6a3"
        ],
        [
            "case: suppP (E x)=>// v E2; move/(_ (erefl _)).",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "by rewrite supp_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdomPE A B x (v1 : A) (v2 : B) : x != null -> subdom (x :-> v1) (x :-> v2).",
            "VernacStartTheoremProof",
            "f8096c5942a00bad298fc5acf9f1a09ded07cfdd"
        ],
        [
            "move=>H; rewrite /subdom /pts /upd /=; case: decP=>//= _.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "rewrite (_ : FinMap _ = ins x (dyn v2) (finmap.nil _ _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite supp_ins inE /= eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdom_trans h2 h1 h3 : subdom h1 h2 -> subdom h2 h3 -> subdom h1 h3.",
            "VernacStartTheoremProof",
            "4d673816363aa8d421a746b912a5f9a5697d3db9"
        ],
        [
            "move=>H1 H2; move: (subdom_def H1) (subdom_def H2).",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "case/andP=>D1 _; case/andP=>_ D2.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "case E: (empb h1).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/empP: E =>->; rewrite subdom_emp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/subdomP=>[//||x in1]; first by apply negbT.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: (subdomQ H2) (subdomQ H1 in1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve subdom_emp subdomPE : core.",
            "VernacHints",
            "b1eb6eb5de8f7aae6e837652b21eba4166937256"
        ],
        [
            "Lemma subheap_refl h : def h -> subheap h h.",
            "VernacStartTheoremProof",
            "9706c3bbf8e9b5dc2d35c5687e1955a97a1d2572"
        ],
        [
            "by move=>D; split=>//; apply: subdom_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subheapE h : def h -> subheap empty h.",
            "VernacStartTheoremProof",
            "4018e5d3085dcc382ebd2f58ba0763d6b76c2a02"
        ],
        [
            "by split; [apply subdom_emp | rewrite dom0].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subheapUn h1 h2 h1' h2' : def (h2 :+ h2') -> subheap h1 h2 -> subheap h1' h2' -> subheap (h1 :+ h1') (h2 :+ h2').",
            "VernacStartTheoremProof",
            "a462a2ec91f652cd79da1f54ca6865b945f71549"
        ],
        [
            "move=>defs [Sd1 Sl1] [Sd2 Sl2].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split=>[|x]; first by apply: subdomUE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite domUn inE /= inE /=; case/andP=>D; case/orP=>H.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !lookUnl // H Sl1 // (subdomQ Sd1 H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite !lookUnr // H Sl2 // (subdomQ Sd2 H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subheapUnl h1 h2 : def (h1 :+ h2) -> subheap h1 (h1 :+ h2).",
            "VernacStartTheoremProof",
            "d3ae395d089b20c371516d29b4f1c5b17aa1305b"
        ],
        [
            "move=>D; rewrite -{1}[h1]unh0; apply: subheapUn=>//.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: subheap_refl; apply: defUnl D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: subheapE; apply: defUnr D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subheapUnr h1 h2 : def (h1 :+ h2) -> subheap h2 (h1 :+ h2).",
            "VernacStartTheoremProof",
            "47ac47f8c9371668f0d8287786e531e0e6d7e14a"
        ],
        [
            "by rewrite unC; apply: subheapUnl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subheap_def h1 h2 : subheap h1 h2 -> def h1 /\\ def h2.",
            "VernacStartTheoremProof",
            "d12b5fb8eb4ca92644d8c3b724b29996770a6394"
        ],
        [
            "by case=>[subdm _]; move/andP: (subdom_def subdm).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subheap_trans h2 h1 h3 : subheap h1 h2 -> subheap h2 h3 -> subheap h1 h3.",
            "VernacStartTheoremProof",
            "4f342941e48c95406bd29700b983da051ad83758"
        ],
        [
            "move=>[S12 E12] [S23 E23].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split=> [|x in1]; first by apply: (subdom_trans S12 S23).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (E12 x in1); apply: (E23 x (subdomQ S12 in1)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subheap_id hp1 hp2: subheap hp1 hp2 -> subheap hp2 hp1 -> hp1 = hp2.",
            "VernacStartTheoremProof",
            "c35359c8638b595446a5c0e7cfd09c94f1203d69"
        ],
        [
            "move=>S12; move: (S12) => [D12 _].",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "move/andP: (subdom_def D12) S12=>{D12} [D1 D2].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: hp1 D1=>[//=|fm1 pf1].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: hp2 D2=>[//=|fm2 pf2] _ _ [S12 L12] [S21 L21].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -heapE; apply: fmapP => k.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "move: (@subdomQ k _ _ S12) (@subdomQ k _ _ S21) => S'12 S'21.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (L12 k) (L21 k).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case H1: (k \\in dom (Def pf1)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: (S'12 H1)=> H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case F1: (fnd k fm1)=> [d1|]; case F2: (fnd k fm2)=> [d2|] //=; rewrite F1 F2.",
            "VernacExtend",
            "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>H; rewrite (H is_true_true).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: (fnd_supp_in H2); rewrite F2=> [[v]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: (fnd_supp_in H1); rewrite F1=> [[v]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case H2 : (k \\in dom (Def pf2)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (S'21 H2) in H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => _ _; rewrite /dom -topredE in H2.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (fnd_supp (negbT H1)) (fnd_supp (negbT H2)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma noalias h1 h2 x1 x2 : x1 \\in dom h1 -> x2 \\in dom h2 -> def (h1 :+ h2) -> x1 != x2.",
            "VernacStartTheoremProof",
            "b50df4b42e276c8f12a1d1676095332d1da27e16"
        ],
        [
            "by case: defUn=>// H1 H2 H; move/H; case: eqP=>// ->; move/negbTE=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defPtUn A h x (v : A) : def (x :-> v :+ h) = [&& x != null, def h & x \\notin dom h].",
            "VernacStartTheoremProof",
            "606c6fadf48751a48f1a0eb034c81158c4bf41d7"
        ],
        [
            "case: defUn; last 1 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite defPt=>H1 -> H2; rewrite H1 (H2 x) // domPt inE /= eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite defPt; move/negbTE=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/negbTE=>->; rewrite andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>y; rewrite domPt inE /=; case/andP; move/eqP=><-->->; rewrite andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defPt_null A h x (v : A) : def (x :-> v :+ h) -> x != null.",
            "VernacStartTheoremProof",
            "d3720276ab6ba4517d223be77acbb9390f88559a"
        ],
        [
            "by rewrite defPtUn; case/and3P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defPt_def A h x (v : A) : def (x :-> v :+ h) -> def h.",
            "VernacStartTheoremProof",
            "37d61245465c6c8fcfde5c6aa2722a503c95a7a5"
        ],
        [
            "by rewrite defPtUn; case/and3P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defPt_dom A h x (v : A) : def (x :-> v :+ h) -> x \\notin dom h.",
            "VernacStartTheoremProof",
            "5791770579f03dab834a58658808d72bdc1dd2c5"
        ],
        [
            "by rewrite defPtUn; case/and3P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domPtUn A h x (v : A) : dom (x :-> v :+ h) =i [pred y | def (x :-> v :+ h) && ((x == y) || (y \\in dom h))].",
            "VernacStartTheoremProof",
            "bbf95e39cdd845a3c0d7ad2b3c889320803442ee"
        ],
        [
            "move=>y; rewrite domUn !inE !defPtUn domPt inE /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: (x =P null)=>//= _; rewrite andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookPtUn A h x (v : A) : def (x :-> v :+ h) -> look x (x :-> v :+ h) = dyn v.",
            "VernacStartTheoremProof",
            "4566ed5ec867210e4c420abc2fb000e577278588"
        ],
        [
            "by move=>D; rewrite lookUnl // lookU domPt !inE eq_refl (defPt_null D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freePtUn A h x (v : A) : def (x :-> v :+ h) -> free x (x :-> v :+ h) = h.",
            "VernacStartTheoremProof",
            "fb26c775b03ac94c63214f96ca9a90f51cf41d45"
        ],
        [
            "move=>D; rewrite freeUnr; last by rewrite (defPt_dom D).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite freeU eqxx (negbTE (defPt_null D)) free0 un0h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updPtUn A1 A2 x i (v1 : A1) (v2 : A2) : upd (x :-> v1 :+ i) x (dyn v2) = x :-> v2 :+ i.",
            "VernacStartTheoremProof",
            "1c5fc1974cdbc20f0f36cb40d0b22809db9ad3cd"
        ],
        [
            "case E1: (def (x :-> v1 :+ i)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite updUnl domPt inE /= eqxx (defPt_null E1) /= updU eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have E2: def (x :-> v2 :+ i) = false by rewrite !defPtUn in E1 *.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case: (_ :+ _) E1=>// _; case: (_ :+ _) E2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma heap_etaP h x : x \\in dom h -> h = x :-> Dyn.val (look x h) :+ free x h.",
            "VernacStartTheoremProof",
            "834b69c436e2f3745dfe2a3aafbbfc5da957d695"
        ],
        [
            "move=>H; rewrite {1}(heap_eta H) /pts -dyn_eta.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -{1}[free x h]un0h updUnr domF inE /= eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancelT A1 A2 h1 h2 x (v1 : A1) (v2 : A2) : def (x :-> v1 :+ h1) -> x :-> v1 :+ h1 = x :-> v2 :+ h2 -> A1 = A2.",
            "VernacStartTheoremProof",
            "29922865fc9abf25da9bfe782cff3f5a3a500ad9"
        ],
        [
            "move=>D E.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have: look x (x :-> v1 :+ h1) = look x (x :-> v2 :+ h2) by rewrite E.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !lookPtUn -?E //; apply: dyn_injT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel A h1 h2 x (v1 v2 : A) : def (x :-> v1 :+ h1) -> x :-> v1 :+ h1 = x :-> v2 :+ h2 -> [/\\ v1 = v2, def h1 & h1 = h2].",
            "VernacStartTheoremProof",
            "bf11e2870860f76479ff62c9b007eb1c1d6468a0"
        ],
        [
            "move=>D E.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have: look x (x :-> v1 :+ h1) = look x (x :-> v2 :+ h2) by rewrite E.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !lookPtUn -?E // => X; move: (dyn_inj X)=>{X} X.",
            "VernacExtend",
            "d382ad451ae594d67a86f477726931c094e27e38"
        ],
        [
            "by rewrite -{}X in E *; rewrite -(unhKl D E) (defUnr D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domPtUnX A (v : A) x i : def (x :-> v :+ i) -> x \\in dom (x :-> v :+ i).",
            "VernacStartTheoremProof",
            "f3ea7681a548594bb4b6c74df048fee62563d0f9"
        ],
        [
            "by move=>D; rewrite domPtUn inE /= D eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domPtX A (v : A) x : def (x :-> v) -> x \\in dom (x :-> v).",
            "VernacStartTheoremProof",
            "f82b2598b8b3671ef9732f5ef2f94b85b64b44ed"
        ],
        [
            "by move=>D; rewrite -(unh0 (x :-> v)) domPtUnX // unh0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_notin_notin h1 h2 x : def (h1 :+ h2) -> x \\notin dom (h1 :+ h2) -> x \\notin dom h1.",
            "VernacStartTheoremProof",
            "cd2276293fc08ad5e482d9ffa238bba86fd6a9d3"
        ],
        [
            "by move=>D; rewrite domUn inE /= negb_and negb_or /= D; case/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_in_notin h1 h2 x : def (h1 :+ h2) -> x \\in dom h1 -> x \\notin dom h2.",
            "VernacStartTheoremProof",
            "2b06010017e6f5201c8b7fc1c87183a4ff695396"
        ],
        [
            "by case: defUn=>// D1 D2 H _; apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section BlockUpdate.",
            "VernacBeginSection",
            "bb974fafafeb5e373f372854096472db4384519e"
        ],
        [
            "Variable (A : Type).",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Fixpoint updi x (vs : seq A) {struct vs} : heap := if vs is v'::vs' then (x :-> v') :+ updi (x .+ 1) vs' else empty.",
            "VernacFixpoint",
            "f893f902d13acc108c3a435ac4642866de48afcc"
        ],
        [
            "Lemma updiS x v vs : updi x (v :: vs) = x :-> v :+ updi (x .+ 1) vs.",
            "VernacStartTheoremProof",
            "31154c3af34580f089a6aa1bed77dec62a4d9bde"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updi_last x v vs : updi x (rcons vs v) = updi x vs :+ x.+(size vs) :-> v.",
            "VernacStartTheoremProof",
            "4ba6c458e51c818fb75563023097d4ab984ccf16"
        ],
        [
            "elim: vs x v=>[|w vs IH] x v /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite ptr0 unh0 un0h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -(addn1 (size vs)) addnC -ptrA IH unA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updi_cat x vs1 vs2 : updi x (vs1 ++ vs2) = updi x vs1 :+ updi x.+(size vs1) vs2.",
            "VernacStartTheoremProof",
            "9071fec2d94ba4839ded4926f1b89720c589a6eb"
        ],
        [
            "elim: vs1 x vs2=>[|v vs1 IH] x vs2 /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite ptr0 un0h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -(addn1 (size vs1)) addnC -ptrA IH unA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updi_catI x y vs1 vs2 : y = x.+(size vs1) -> updi x vs1 :+ updi y vs2 = updi x (vs1 ++ vs2).",
            "VernacStartTheoremProof",
            "59da6b1b209b1c4ed903e1a78778ed47155a5bfb"
        ],
        [
            "by move=>->; rewrite updi_cat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updiVm' x m xs : m > 0 -> x \\notin dom (updi x.+m xs).",
            "VernacStartTheoremProof",
            "7bc008bc805219e09e8248cf2c7cd661335dbde4"
        ],
        [
            "elim: xs x m=>[|v vs IH] x m //= H.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite ptrA domPtUn inE /= negb_and negb_or -{4}(ptr0 x) ptrK -lt0n H /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite orbC IH // addn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updiD x xs : def (updi x xs) = (x != null) || (size xs == 0).",
            "VernacStartTheoremProof",
            "912fc29a0a2c0d4ae829bdeefd5a512647f8a250"
        ],
        [
            "elim: xs x=>[|v xs IH] x //=; first by rewrite orbC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite defPtUn updiVm' // orbF IH ptr_null andbF andbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updiVm x m xs : x \\in dom (updi x.+m xs) = [&& x != null, m == 0 & size xs > 0].",
            "VernacStartTheoremProof",
            "a0e41ec2f753963807ded6c55cfe223a6ad133a0"
        ],
        [
            "case: m=>[|m] /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite andbF; apply: negbTE; apply: updiVm'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: xs=>[|v xs]; rewrite ptr0 ?andbF ?andbT //=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite domPtUn inE /= eq_refl -updiS updiD orbF andbT /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updimV x m xs : x.+m \\in dom (updi x xs) = (x != null) && (m < size xs).",
            "VernacStartTheoremProof",
            "fa063789794b06bc81a8e3bdf20f7160d82636e1"
        ],
        [
            "case H: (x == null)=>/=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: xs=>// a s; rewrite (eqP H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: xs x m H=>[|v vs IH] x m H //; case: m=>[|m].",
            "VernacExtend",
            "df63f96bedbb0673aecb42521d90011325a86c94"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite ptr0 /= domPtUn inE /= eq_refl andbT -updiS updiD H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -addn1 addnC -ptrA updiS domPtUn inE /= IH; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite ptrE /= addn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -updiS updiD H /= -{1}(ptr0 x) ptrA ptrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updiP x y xs : reflect (y != null /\\ exists m, x = y.+m /\\ m < size xs) (x \\in dom (updi y xs)).",
            "VernacStartTheoremProof",
            "ff7b207cfc33363c41af5c7e0b00a9861fdd99b9"
        ],
        [
            "case H: (y == null)=>/=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (eqP H); elim: xs=>[|z xs IH] //=; constructor; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case E: (x \\in _); constructor; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>[_][m][H1] H2; rewrite H1 updimV H2 H in E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (ptrT x y) E=>m; case/orP; move/eqP=>->.",
            "VernacExtend",
            "9dda2bdd158284551955535b055c222b3c4fedd1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite updimV H /= => H1; split=>//; exists m.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite updiVm; case/and3P=>H1; move/eqP=>-> H2.",
            "VernacExtend",
            "f0b646e3773567ccd6c4a75851abf71dbc3ffe2d"
        ],
        [
            "by split=>//; exists 0; rewrite ptrA addn0 ptr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updi_inv x xs1 xs2 : def (updi x xs1) -> updi x xs1 = updi x xs2 -> xs1 = xs2.",
            "VernacStartTheoremProof",
            "7c20804ed5eab51f27fcab082275f249abbd003f"
        ],
        [
            "elim: xs1 x xs2 =>[|v1 xs1 IH] x /=; case=>[|v2 xs2] //= D; [move/esym| | ]; try by rewrite empbE empUn empPt.",
            "VernacExtend",
            "e6688da98f60936d6a0aaab5badd79c173b16e51"
        ],
        [
            "by case/(cancel D)=><- {D} D; move/(IH _ _ D)=><-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updi_iinv x xs1 xs2 h1 h2 : size xs1 = size xs2 -> def (updi x xs1 :+ h1) -> updi x xs1 :+ h1 = updi x xs2 :+ h2 -> xs1 = xs2 /\\ h1 = h2.",
            "VernacStartTheoremProof",
            "8ab89a573af1501f4bcdf7ec9d7cab474ea90a52"
        ],
        [
            "elim: xs1 x xs2 h1 h2=>[|v1 xs1 IH] x /=; case=>[|v2 xs2] //= h1 h2.",
            "VernacExtend",
            "df63f96bedbb0673aecb42521d90011325a86c94"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !un0h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>[E]; rewrite -!unA=>D; case/(cancel D)=><- {D} D.",
            "VernacExtend",
            "0141855bf989b515603527748435689146bc68ca"
        ],
        [
            "by case/(IH _ _ _ _ E D)=>->->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BlockUpdate.",
            "VernacEndSegment",
            "c8994a22fc96eb1ec4ba1d51c7b732c299c97596"
        ],
        [
            "Definition low : pred ptr := fun x => 0 == nat_ptr x %[mod 2].",
            "VernacDefinition",
            "a41742090866a6548540b8af82c24cf0757271f2"
        ],
        [
            "Definition high : pred ptr := fun x => 1 == nat_ptr x %[mod 2].",
            "VernacDefinition",
            "c6dc07d878768536ed0888b17d41911e0c334d17"
        ],
        [
            "Definition get_lows h := if h is Def hs _ then filter low (supp hs) else [::].",
            "VernacDefinition",
            "af063636d06fd538ec5ba03769b5fef095db5936"
        ],
        [
            "Definition get_highs h := if h is Def hs _ then filter high (supp hs) else [::].",
            "VernacDefinition",
            "1cca8e9aaf70060e76e0cdc80a2a8983c4ee6d30"
        ],
        [
            "Definition ldom h : pred ptr := fun x => x \\in get_lows h.",
            "VernacDefinition",
            "51b9ee69faf61e6440b698b7f9193494dd215de4"
        ],
        [
            "Definition hdom h : pred ptr := fun x => x \\in get_highs h.",
            "VernacDefinition",
            "51433fb48d3b1966e8845529e15936c09219e978"
        ],
        [
            "Lemma ldomP h x : x \\in ldom h = (x \\in dom h) && low x.",
            "VernacStartTheoremProof",
            "b2a205b6c12201c3d727467b3d8bcae747ef1db7"
        ],
        [
            "case: h=>[//|[h S]]; rewrite /ldom /= /dom /supp /= =>H.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "rewrite -!topredE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (map key h)=>[|y s IH] //=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "case: ifP=>E; rewrite !inE IH; case: eqP=>// -> //=.",
            "VernacExtend",
            "1dd33488047dbf70f12e12a749f59bfa780f9e04"
        ],
        [
            "by rewrite E andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hdomP h x : x \\in hdom h = (x \\in dom h) && high x.",
            "VernacStartTheoremProof",
            "3ab3033a974710707733474b1bbb1f65b057fc63"
        ],
        [
            "case: h=>[//|[h S]]; rewrite /hdom /= /dom /supp /= =>H.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "rewrite -!topredE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (map key h)=>[|y s IH] //=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "case: ifP=>E; rewrite !inE IH; case: eqP=>// -> //=.",
            "VernacExtend",
            "1dd33488047dbf70f12e12a749f59bfa780f9e04"
        ],
        [
            "by rewrite E andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ldomK h1 h2 t1 t2 : def (h1 :+ t1) -> def (h2 :+ t2) -> ldom h1 =i ldom h2 -> ldom (h1 :+ t1) =i ldom (h2 :+ t2) -> ldom t1 =i ldom t2.",
            "VernacStartTheoremProof",
            "2285f1efec6d9ef231377bc23981571bec6b5ac7"
        ],
        [
            "move=>D1 D2 H1 H2 x; move: {H1 H2} (H1 x) (H2 x).",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite !ldomP !domUn !inE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: defUn D1=>// H1 H2 L1 _; case: defUn D2=>// H3 H4 L2 _.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "case E1: (x \\in dom t1); case E2: (x \\in dom t2)=>//; rewrite orbF orbT /=; case E3: (x \\in dom h1); case E4: (x \\in dom h2)=>//= _ _; by [move/L1: E3; rewrite E1 | move/L2: E4; rewrite E2].",
            "VernacExtend",
            "7543bf3f43017e68265a9da6bcfd2d11707eb68f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lfresh h := (last null (get_lows h)) .+ 2.",
            "VernacDefinition",
            "89000b9123b5df703cbe3b6d3f68bb5ebc7768ba"
        ],
        [
            "Definition hfresh h := (last (null .+ 1) (get_highs h)) .+ 2.",
            "VernacDefinition",
            "dea482347a598fabf3eb7f6d550715265246a3fb"
        ],
        [
            "Lemma last_inv A B (f : A -> B) (x1 x2 : A) (h : seq A) : f x1 = f x2 -> f (last x1 h) = f (last x2 h).",
            "VernacStartTheoremProof",
            "f6a0bdc2fe9c37574fabc5784e59e64b1523738b"
        ],
        [
            "by elim: h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lfresh_low h n : low (lfresh h) .+ (2*n).",
            "VernacStartTheoremProof",
            "9c320fc3dbea3c34b641236ddca225f31a16e105"
        ],
        [
            "rewrite /lfresh /low /get_lows.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: h; first by rewrite modn_addl modn_mulr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case; rewrite /supp /low /=.",
            "VernacExtend",
            "60bc784dae903637c4df5b59663eaf40a3679a3b"
        ],
        [
            "elim=>[|[[x] v] h IH] /=; first by rewrite modn_addl modn_mulr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite inE negb_or ptrE /=; move/path_sorted=>H1; case/andP=>H2 H3.",
            "VernacExtend",
            "94b585b2dd67662a1bfccf9de340af322f43f6e9"
        ],
        [
            "case: ifP=>E /=; last by apply: IH.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set f := fun x => (nat_ptr x + 2 + 2 * n) %% 2.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have F: f (ptr_nat x) = f null.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite /f -modn_mod -addnA -modn_add2m -(eqP E) !modn_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (last_inv (f := f) (x1 := (ptr_nat x)) (x2 := null))=>L.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /f /= in L; rewrite {}L //; apply: IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hfresh_high h n : high (hfresh h) .+ (2*n).",
            "VernacStartTheoremProof",
            "d973f6979001ec30a3eeb2701285b5099b31b0af"
        ],
        [
            "rewrite /hfresh /high /get_highs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: h n=>[n|].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite /null /= add0n -addnA -modn_add2m modn_addl modn_mulr addn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case; rewrite /supp /high /=.",
            "VernacExtend",
            "60bc784dae903637c4df5b59663eaf40a3679a3b"
        ],
        [
            "elim=>[|[[x] v] h IH] /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>_ _ n; rewrite add0n -addnA -modn_add2m modn_addl modn_mulr addn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite inE negb_or ptrE /=; move/path_sorted=>H1; case/andP=>H2 H3.",
            "VernacExtend",
            "94b585b2dd67662a1bfccf9de340af322f43f6e9"
        ],
        [
            "case: ifP=>E n /=; last by apply: IH.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set f := fun x => (nat_ptr x + 2 + 2 * n) %% 2.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have F: f (ptr_nat x) = f (null .+ 1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /f -modn_mod /= add0n -addnA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -modn_add2m -(eqP E) modn_mod.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite modn_add2m addnA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (last_inv (f := f) (x1 := (ptr_nat x)) (x2 := null .+ 1))=>L.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /f /= in L; rewrite {}L //; apply: IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_lfresh h n : (lfresh h) .+ (2*n) \\notin dom h.",
            "VernacStartTheoremProof",
            "898be8276cfafd5480582e19d106a25d539cd998"
        ],
        [
            "suff L2: forall h x, low x -> x \\in dom h -> ord x (lfresh h).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: (contra (L2 _ _ (lfresh_low h n))).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -leqNgt leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>[|[s H1]] //; rewrite /supp => /= H2 x.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "rewrite /dom /lfresh /get_lows /low /supp -topredE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: s H1 null H2 x=>[|[y d] s IH] //= H1 x.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite inE negb_or; case/andP=>H3 H4 z /= E; rewrite inE.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "case/orP=>H5.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite -!{H5 y}(eqP H5) E in H1 H3 *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (path_last 1); apply: path_filter.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: ifP=>E2; apply: IH=>//; move: H1; [apply: path_sorted | apply: notin_path | apply: path_sorted].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_hfresh h n : (hfresh h) .+ (2*n) \\notin dom h.",
            "VernacStartTheoremProof",
            "ad7a207ac7aa25d2deadbdbb68dfbcd7254e9493"
        ],
        [
            "suff L2: forall h x, high x -> x \\in dom h -> ord x (hfresh h).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: (contra (L2 _ _ (hfresh_high h n))).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -leqNgt leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>[|[s H1]] //; rewrite /supp => /= H2 x.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "rewrite /dom /hfresh /get_highs /high /supp -topredE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: s H1 null H2 x=>[|[y d] s IH] //= H1 x.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite inE negb_or; case/andP=>H3 H4 z /= E; rewrite inE.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "case/orP=>H5.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite -!{H5 y}(eqP H5) E in H1 H3 *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (path_last 1); apply: path_filter.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ifP=>E2; last by apply: IH=>//; apply: path_sorted H1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move: H1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [t -> H1]: exists t, y = t .+ 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: y {H3} E2; case=>[|m] //.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by exists (ptr_nat m); rewrite /ptr_offset /= addn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: IH=>//; first by apply: path_sorted H1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: notin_path; apply: ord_path H1.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by case: t=>m; rewrite /ord /= addn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lfresh_null h : lfresh h != null.",
            "VernacStartTheoremProof",
            "43a06a39af30deafd9a0bf0dfe4babedfab00fa3"
        ],
        [
            "by case: h=>[//|[h H] F]; rewrite /lfresh ptrE -lt0n /= addnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hfresh_null h : hfresh h != null.",
            "VernacStartTheoremProof",
            "b19b2d1aa9a118800acb1cdb18f8f4e9f195ff1e"
        ],
        [
            "by case: h=>[//|[h H] F]; rewrite /lfresh ptrE -lt0n /= addnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma high_lowD : [predI low & high] =i pred0.",
            "VernacStartTheoremProof",
            "8c40c7212dc3b55bbe27fe40bbf01013efd9c020"
        ],
        [
            "case=>x; rewrite inE /low /high /= -!topredE /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case: x=>// n; case E: (0 %% 2 == _)=>//=; rewrite -(eqP E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnS x1 x2 : (x1 == x2 %[mod 2]) = (x1.+1 == x2.+1 %[mod 2]).",
            "VernacStartTheoremProof",
            "6014bc65bfdd87fcf06d5716fd4533a53505e505"
        ],
        [
            "case E: (x1 %% 2 == _).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -addn1 -modn_add2m (eqP E) modn_add2m addn1 eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff L: ((x1.+1) %% 2 == (x2.+1) %% 2) -> (x1 %% 2 == x2 %% 2).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite E in L; case: eqP L=>// _; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>{E} E; rewrite -(modn_addr x1) -(modn_addr x2).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -addSnnS -modn_add2m (eqP E) modn_add2m addSnnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hlE x : high x = ~~ low x.",
            "VernacStartTheoremProof",
            "525689dfa1baaec943e9561b1cc6073e3afababc"
        ],
        [
            "case: x=>n; rewrite /high /low /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "elim: n=>[//|m IH]; apply: negb_inj.",
            "VernacExtend",
            "3b8f03a720bb925b016fe471cb11696669670c37"
        ],
        [
            "by rewrite negbK -modnS -IH modnS modnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lhE x : low x = ~~ high x.",
            "VernacStartTheoremProof",
            "0fd310a370740f75e02c5a84a26256af52ee1bf2"
        ],
        [
            "by apply: negb_inj; rewrite negbK hlE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ldomUn h1 h2 : ldom (h1 :+ h2) =i [pred x | def (h1 :+ h2) && (x \\in [predU ldom h1 & ldom h2])].",
            "VernacStartTheoremProof",
            "3aa09597e19e68b9a62677c30cce2aace19371f3"
        ],
        [
            "by move=>x; rewrite !inE !ldomP domUn !inE /= -andbA andb_orl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition loweq h1 h2 := get_lows h1 == get_lows h2.",
            "VernacDefinition",
            "38909df25d0a7d79cac7b829788525b1b6212854"
        ],
        [
            "Notation \"h1 =~ h2\" := (loweq h1 h2) (at level 80).",
            "VernacNotation",
            "9c124699399abf9d8083b6a58c00bda9f7c947ba"
        ],
        [
            "Lemma low_refl h : h =~ h.",
            "VernacStartTheoremProof",
            "6917bde3d9f792429add95febd3ea77fa9b650c9"
        ],
        [
            "by rewrite /loweq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve low_refl : core.",
            "VernacHints",
            "2163bd0cc48c5457a5416977db8f58129c2fcd77"
        ],
        [
            "Lemma low_sym h1 h2 : (h1 =~ h2) = (h2 =~ h1).",
            "VernacStartTheoremProof",
            "89828b328bdb861b65cf770aecd32633ffcf76cc"
        ],
        [
            "by rewrite /loweq eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma low_trans h2 h1 h3 : h1 =~ h2 -> h2 =~ h3 -> h1 =~ h3.",
            "VernacStartTheoremProof",
            "dabe409eeef670de151ccd35e54b3c2a95ce1e21"
        ],
        [
            "by rewrite /loweq; move/eqP=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma loweqP h1 h2 : reflect (ldom h1 =i ldom h2) (h1 =~ h2).",
            "VernacStartTheoremProof",
            "0fa5eef39de74fc7407b5cf47bc829879d711deb"
        ],
        [
            "case E: (loweq h1 h2); constructor; rewrite /loweq in E.",
            "VernacExtend",
            "2d56c942035865c5f6f26dbcc47b477f811d515c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>x; rewrite /ldom (eqP E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suff {E} : get_lows h1 = get_lows h2 by move/eqP; rewrite E.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "apply: (eq_sorted_irr (leT := ord)); last by apply: F.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: h1 {F}=>// [[h S] H].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite sorted_filter //; apply: trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: h2 {F}=>// [[h S] H].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite sorted_filter //; apply: trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma loweqK h1 h2 t1 t2 : def (h1 :+ t1) -> def (h2 :+ t2) -> h1 =~ h2 -> h1 :+ t1 =~ h2 :+ t2 -> t1 =~ t2.",
            "VernacStartTheoremProof",
            "6e5fe55c10d5d7f09ee1b2270f75e83bec5148b1"
        ],
        [
            "move=>D1 D2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: loweqP=>// E1 _; case: loweqP=>// E2 _; apply/loweqP.",
            "VernacExtend",
            "d2380c5ddfa1ceeb28b65f11c73d20f7b7f618ea"
        ],
        [
            "by apply: ldomK E2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma loweqE h1 h2 : h1 =~ h2 -> lfresh h1 = lfresh h2.",
            "VernacStartTheoremProof",
            "6a1ab72e771d6fe65ffe85cf55e7400b03965e48"
        ],
        [
            "by rewrite /loweq /lfresh; move/eqP=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lowUn h1 h2 t1 t2 : def (h1 :+ t1) -> def (h2 :+ t2) -> h1 =~ h2 -> t1 =~ t2 -> h1 :+ t1 =~ h2 :+ t2.",
            "VernacStartTheoremProof",
            "003cfbd61b21e888dfb5afedfa52107da0854c9c"
        ],
        [
            "move=>D1 D2; do 2![case: loweqP=>//]=>H1 H2 _ _.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply/loweqP=>x; move: (H1 x) (H2 x).",
            "VernacExtend",
            "86bb0d3d5ae27b38aac15f69d532d662f1518315"
        ],
        [
            "by rewrite !ldomP !domUn !inE D1 D2 /= !andb_orl=>-> ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lowPn A1 A2 (x : ptr) (v1 : A1) (v2 : A2) : x :-> v1 =~ x :-> v2.",
            "VernacStartTheoremProof",
            "00124dfc1b6c0c395ca14e78820f7a6a83773d85"
        ],
        [
            "by apply/loweqP=>y; rewrite !ldomP !domPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lowPn : core.",
            "VernacHints",
            "5239ddc523c87f39b37eb772d3f7e2c0fc486f61"
        ],
        [
            "Lemma highPn A1 A2 (x1 x2 : ptr) (v1 : A1) (v2 : A2) : high x1 -> high x2 -> x1 :-> v1 =~ x2 :-> v2.",
            "VernacStartTheoremProof",
            "b04562497faee29f0ef3e823bb5663fc4a23c598"
        ],
        [
            "move=>H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply/loweqP=>y; rewrite !ldomP !domPt !inE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case E1: (x1 == y); first by rewrite -(eqP E1) lhE H1 !andbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case E2: (x2 == y)=>//=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite -(eqP E2) lhE H2 andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lowPtUn A1 A2 h1 h2 (x : ptr) (v1 : A1) (v2 : A2) : def (x :-> v1 :+ h1) -> def (x :-> v2 :+ h2) -> (x :-> v1 :+ h1 =~ x :-> v2 :+ h2) = (h1 =~ h2).",
            "VernacStartTheoremProof",
            "127d0f8497f3ffd0f4f4e711c38f74b6b5b691ea"
        ],
        [
            "move=>D1 D2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case E: (h1 =~ h2); first by apply: lowUn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/(elimF idP): E=>E; apply: (introF idP)=>F; case: E.",
            "VernacExtend",
            "1b05ef00a6bc4c06259b49aa79e4d38841eab3ab"
        ],
        [
            "by apply: loweqK F.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma highPtUn A h1 h2 (x : ptr) (v : A) : def (x :-> v :+ h1) -> high x -> (x :-> v :+ h1 =~ h2) = (h1 =~ h2).",
            "VernacStartTheoremProof",
            "46bd655ebcb3361bfe2e3ab2ad0245816fd933cb"
        ],
        [
            "move=>D H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case E: (h1 =~ h2); case: loweqP E=>// L1 _; apply/loweqP.",
            "VernacExtend",
            "d2380c5ddfa1ceeb28b65f11c73d20f7b7f618ea"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>y; rewrite !ldomP domPtUn !inE D.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: eqP=>[<-|]; last by rewrite -!ldomP L1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite lhE H /= andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>L2; case: L1 => y; move: {L2} (L2 y).",
            "VernacExtend",
            "76c3997c8dac6e8df224371c30bbe100c52c87c4"
        ],
        [
            "rewrite !ldomP !domPtUn !inE D /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: eqP=>//= <-; rewrite lhE H andbF -[x \\in dom h1]negbK (defPt_dom D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma highPtUn2 A1 A2 h1 h2 (x1 x2 : ptr) (v1 : A1) (v2 : A2) : def (x1 :-> v1 :+ h1) -> def (x2 :-> v2 :+ h2) -> high x1 -> high x2 -> h1 =~ h2 -> x1 :-> v1 :+ h1 =~ x2 :-> v2 :+ h2.",
            "VernacStartTheoremProof",
            "d631ef7a635427c7f0361c74255e5eef01e0b2a7"
        ],
        [
            "by move=>D1 D2 H1 H2 L; apply: lowUn=>//; apply: highPn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition plus2 (h1 h2 : heap * heap) : heap * heap := (h1.1 :+ h2.1, h1.2 :+ h2.2).",
            "VernacDefinition",
            "d93059a9c295fe969a06e69a0b186d15595fef1a"
        ],
        [
            "Definition def2 (h : heap * heap) := def h.1 && def h.2.",
            "VernacDefinition",
            "8dea7b2febd1b493f5869275e2d8d732fe3ede6d"
        ],
        [
            "Notation \"h1 :++ h2\" := (plus2 h1 h2) (at level 50).",
            "VernacNotation",
            "6f6924b320f1ef1f21253bc704b939da3636f877"
        ],
        [
            "Lemma unA2 h1 h2 h3 : h1 :++ (h2 :++ h3) = h1 :++ h2 :++ h3.",
            "VernacStartTheoremProof",
            "8d2454392bceed72b0b0bb973377a51fc5d409a1"
        ],
        [
            "by congr (_, _); rewrite /= unA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unC2 h1 h2 : h1 :++ h2 = h2 :++ h1.",
            "VernacStartTheoremProof",
            "2f0302e7466606410371d1a5e3dc04e246a501bc"
        ],
        [
            "by congr (_, _); rewrite unC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unKhl2 h h1 h2 : def2 (h1 :++ h) -> h1 :++ h = h2 :++ h -> h1 = h2.",
            "VernacStartTheoremProof",
            "cbcaa4ca6ba3ab58feb862e87cd033ea76e356e8"
        ],
        [
            "move: h h1 h2=>[h1 h2][h11 h12][h21 h22]; case/andP=>/= [D1 D2] [E1 E2].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite (unKhl D1 E1) (unKhl D2 E2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unKhr2 h h1 h2 : def2 (h2 :++ h) -> h1 :++ h = h2 :++ h -> h1 = h2.",
            "VernacStartTheoremProof",
            "1dccd6fbbdfb937ecb434302971f695daa069f86"
        ],
        [
            "move: h h1 h2=>[h1 h2][h11 h12][h21 h22]; case/andP=>/= [D1 D2] [E1 E2].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite (unKhr D1 E1) (unKhr D2 E2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unDl2 h1 h2 : def2 (h1 :++ h2) -> def2 h1.",
            "VernacStartTheoremProof",
            "fbff4b565a453e7827b219eb3a4f6aec60e66d43"
        ],
        [
            "by case/andP=>/= D1 D2; rewrite /def2 (defUnl D1) (defUnl D2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unDr2 h1 h2 : def2 (h1 :++ h2) -> def2 h2.",
            "VernacStartTheoremProof",
            "e65bf3f8c04ecc5f3ca2d765585e20bbab3f7106"
        ],
        [
            "by case/andP=>/= D1 D2; rewrite /def2 (defUnr D1) (defUnr D2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma un0h2 h : (empty, empty) :++ h = h.",
            "VernacStartTheoremProof",
            "5182758948aa11301e7b7a0261c4285715113a92"
        ],
        [
            "by case: h=>h1 h2; rewrite /plus2 /= !un0h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unh02 h : h :++ (empty, empty) = h.",
            "VernacStartTheoremProof",
            "183eee1f62fc616072a558219d57960125a08df4"
        ],
        [
            "by case: h=>h1 h2; rewrite /plus2 /= !unh0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injUh A h1 h2 x (v1 v2 : A) : def (h1 :+ (x :-> v1)) -> h1 :+ (x :-> v1) = h2 :+ (x :-> v2) -> def h1 /\\ h1 = h2 /\\ v1 = v2.",
            "VernacStartTheoremProof",
            "67818baca7cd70cc656c87c835a34a73ebfe9bec"
        ],
        [
            "by rewrite -!(unC (x :-> _))=>D; case/(cancel D)=><- -> ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqUh h1 h2 h : def (h1 :+ h) -> h1 :+ h = h2 :+ h -> def h1 /\\ h1 = h2.",
            "VernacStartTheoremProof",
            "e3d4a7a8bdee3f9a0170b34e8cea0bc6b6ce98b5"
        ],
        [
            "by move=>D E; rewrite {2}(unKhl D E) (defUnl D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exit1 h1 h2 h : def (h1 :+ h) -> h1 :+ h = h :+ h2 -> def h1 /\\ h1 = h2.",
            "VernacStartTheoremProof",
            "9e1a46993dc9575202749b9a7464158aff16a865"
        ],
        [
            "by move=>D; rewrite (unC h); apply: eqUh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exit2 h1 h : def (h1 :+ h) -> h1 :+ h = h -> def h1 /\\ h1 = empty.",
            "VernacStartTheoremProof",
            "a2426143cf5c9e5c4321fc42cb99a62a37131ab3"
        ],
        [
            "by move=>H1; rewrite -{2}(unh0 h)=>H2; apply: exit1 H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exit3 h1 h : def h -> h = h :+ h1 -> def empty /\\ empty = h1.",
            "VernacStartTheoremProof",
            "64fffda94df898442b6b9682532927170f877ccc"
        ],
        [
            "move=>H1 H2; split=>//; rewrite -{1}(unh0 h) in H2.",
            "VernacExtend",
            "6b509b6a448d912d761bbad76ff3082e795e01f6"
        ],
        [
            "by apply: unhKl H2; rewrite unh0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exit4 h : def h -> h = h -> def empty /\\ empty = empty.",
            "VernacStartTheoremProof",
            "254ca0ac81c23a6226eb37ffe535d1432ffb6fce"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac cancelator t H := match goal with | |- ?h1 :+ t = ?h2 -> _ => let j := fresh \"j\" in set j := {1}(h1 :+ t); rewrite -1?unA /j {j}; (move/(exit1 H)=>{H} [H] || move/(exit2 H)=>{H} [H]) | |- t = ?h2 -> _ => rewrite -?unA; (move/(exit3 H)=>{H} [H] || move/(exit4 H)=>{H} [H]) | |- (?h1 :+ (?x :-> ?v) = ?h2) -> _ => let j := fresh \"j\" in set j := {1}(h1 :+ (x :-> v)); rewrite 1?(unC (x :-> _)) -?(unAC _ _ (x :-> _)) /j {j}; (move/(injUh H)=>{H} [H []] || rewrite (unC h1) ?unA in H * ); cancelator t H | |- (?h1 :+ ?h = ?h2) -> _ => let j := fresh \"j\" in set j := {1}(h1 :+ h); rewrite 1?(unC h) -?(unAC _ _ h) /j {j}; (move/(eqUh H)=>{H} [H []] || rewrite (unC h1) ?unA in H * ); cancelator t H | |- _ => idtac end.",
            "VernacExtend",
            "cb18759b5925078ae3e1efe8cfb86a482ff55042"
        ],
        [
            "Ltac heap_cancel := match goal with | |- ?h1 = ?h2 -> ?GG => let t1 := fresh \"t1\" in let t2 := fresh \"t2\" in let t := fresh \"t\" in let H := fresh \"H\" in let G := fresh \"hidden_goal\" in suff : def h1; first ( set t1 := {1 2}h1; set t2 := {1}h2; set G := GG; rewrite -(un0h t1) -(un0h t2) [empty]lock; set t := locked empty; rewrite /t1 /t2 {t1 t2}; move=>H; rewrite ?unA in H *; cancelator t H; move: H {t}; rewrite /G {G}) | |- _ => idtac end.",
            "VernacExtend",
            "1804fe20a7a6edd248c232d8e0eee94d3fa9865b"
        ],
        [
            "Lemma cexit1 h1 h2 h : h1 = h2 -> h1 :+ h = h :+ h2.",
            "VernacStartTheoremProof",
            "980e41bad8a3f84c64d39cfa594ba43dc2037511"
        ],
        [
            "by move=>->; rewrite unC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cexit2 h1 h : h1 = empty -> h1 :+ h = h.",
            "VernacStartTheoremProof",
            "f71742f3f36b46824a074a1c699be223676d9847"
        ],
        [
            "by move=>->; rewrite un0h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cexit3 h1 h : empty = h1 -> h = h :+ h1.",
            "VernacStartTheoremProof",
            "06b2e2e8c7596b50f8d818912ebdb4de15e4f989"
        ],
        [
            "by move=><-; rewrite unh0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma congUh A h1 h2 x (v1 v2 : A) : h1 = h2 -> v1 = v2 -> h1 :+ (x :-> v1) = h2 :+ (x :-> v2).",
            "VernacStartTheoremProof",
            "bb3d661abdaceecf3346a410742c51a45d687110"
        ],
        [
            "by move=>-> ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma congeqUh h1 h2 h : h1 = h2 -> h1 :+ h = h2 :+ h.",
            "VernacStartTheoremProof",
            "5b712cef3127d52044e74a30006448aaf1dd1572"
        ],
        [
            "by move=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac congruencer t := match goal with | |- ?h1 :+ t = ?h2 => let j := fresh \"j\" in set j := {1}(h1 :+ t); rewrite -1?unA /j {j}; (apply: cexit1 || apply: cexit2) | |- t = ?h2 => rewrite -1?unA; (apply: cexit3 || apply: refl_equal) | |- (?h1 :+ (?x :-> ?v) = ?h2) => let j := fresh \"j\" in set j := {1}(h1 :+ (x :-> v)); rewrite 1?(unC (x :-> _)) -?(unAC _ _ (x :-> _)) /j {j}; ((apply: congUh; [congruencer t | idtac]) || (rewrite (unC h1) ?unA; congruencer t)) | |- (?h1 :+ ?h = ?h2) => let j := fresh \"j\" in set j := {1}(h1 :+ h); rewrite 1?(unC h) -?(unAC _ _ h) /j {j}; (apply: congeqUh || rewrite (unC h1) ?unA); congruencer t | |- _ => idtac end.",
            "VernacExtend",
            "6b0b14dcb1853e1460e653f65175edec0297cfa5"
        ],
        [
            "Ltac heap_congr := match goal with | |- ?h1 = ?h2 => let t1 := fresh \"t1\" in let t2 := fresh \"t2\" in let t := fresh \"t\" in set t1 := {1}h1; set t2 := {1}h2; rewrite -(un0h t1) -(un0h t2) [empty]lock; set t := locked empty; rewrite /t1 /t2 {t1 t2}; rewrite ?unA; congruencer t=>{t} | |- _ => idtac end.",
            "VernacExtend",
            "c9c2440790257021658f81dd0c834500f1fe6072"
        ],
        [
            "Lemma test h1 h2 h3 x (v1 v2 : nat) : h3 = h2 -> v1 = v2 -> h1 :+ (x :-> v1) :+ h3= h2 :+ h1 :+ (x :-> v2).",
            "VernacStartTheoremProof",
            "22db31f9bc490e2d1496116b389961044425b7a3"
        ],
        [
            "by move=>H1 H2; heap_congr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition supdom h2 h1 := subdom h1 h2.",
            "VernacDefinition",
            "85bc58312016e76580753875237ba88e6ba072a7"
        ],
        [
            "Lemma sexit1 h1 h2 h : def (h2 :+ h) -> (def h2 -> supdom h2 h1) -> supdom (h2 :+ h) (h :+ h1).",
            "VernacStartTheoremProof",
            "2b139914328936a886f51490767f21a08142400d"
        ],
        [
            "move=>H1 H2; rewrite (unC h); apply: subdomE=>//.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by apply: H2; apply: defUnl H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sexit2 h1 h : def (h1 :+ h) -> (def h1 -> supdom h1 empty) -> supdom (h1 :+ h) h.",
            "VernacStartTheoremProof",
            "37c90b1569ea1a08d0fbf38cc43a7734dd4ea5ce"
        ],
        [
            "move=>H1 H2; rewrite -{2}(un0h h); apply: subdomE=>//.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by apply: H2; apply: defUnl H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sexit3 h1 h : def h -> (def empty -> supdom empty h1) -> supdom h (h :+ h1).",
            "VernacStartTheoremProof",
            "9d18d38ab5f988a5e065bc0591ca48f11fffb7da"
        ],
        [
            "move=>H1 H2; rewrite unC -{1}(un0h h).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: subdomE; [rewrite un0h | apply: H2].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sexit4 h : def h -> (def empty -> empty = empty) -> supdom h h.",
            "VernacStartTheoremProof",
            "ab0500cb70ddc28d4bf20cdb11d20b72d5ff81ed"
        ],
        [
            "by move=>*; rewrite -(un0h h); apply: subdomE=>//; rewrite un0h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma supdomUh A B h1 h2 x (v1 : A) (v2 : B) : def (h2 :+ (x :-> v2)) -> (def h2 -> supdom h2 h1) -> supdom (h2 :+ (x :-> v2)) (h1 :+ (x :-> v1)).",
            "VernacStartTheoremProof",
            "1b7a38c8bb659b6d982b0ac4cb5b892a6670cbd9"
        ],
        [
            "move=>H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: subdomUE=>//; first by apply: H2; apply: defUnl H1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: subdomPE; apply: (@defPt_null _ h2 x v2); rewrite unC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma supdomeqUh h1 h2 h : def (h2 :+ h) -> (def h2 -> supdom h2 h1) -> supdom (h2 :+ h) (h1 :+ h).",
            "VernacStartTheoremProof",
            "3cdbc6dfb3af0c084c6f7462f58bf72ef15d652d"
        ],
        [
            "by rewrite (unC h1); apply: sexit1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sup_defdef h1 h2 : def h2 -> supdom h2 h1 -> def h1.",
            "VernacStartTheoremProof",
            "685956de6fa7a8e7709d37a191564cc7d73c5e92"
        ],
        [
            "by move=>H1; rewrite /supdom; move/subdom_def; rewrite H1 andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac supdom_checker t H := match goal with | |- is_true (supdom (?h1 :+ t) ?h2) => let j := fresh \"j\" in set j := {1}(h1 :+ t); rewrite -1?unA /j {j}; (apply: (sexit1 H)=>{H} H || apply: (sexit2 H)=>{H} H) | |- is_true (supdom t ?h1) => rewrite -1?unA; (apply: (sexit3 H)=>{H} H || apply: (sexit4 H)=>{H} H) | |- is_true (supdom (?h1 :+ (?x :-> ?v)) ?h2) => let j := fresh \"j\" in set j := {1}(h1 :+ (x :-> v)); rewrite 1?(unC (x :-> _)) -?(unAC _ _ (x :-> _)) /j {j}; (apply: (supdomUh _ H)=>{H} H || (rewrite (unC h1) ?unA in H * )); supdom_checker t H | |- is_true (supdom (?h1 :+ ?h) ?h2) => let j := fresh \"j\" in set j := {1}(h1 :+ h); rewrite 1?(unC h) -?(unAC _ _ h) /j {j}; (apply: (supdomeqUh H)=>{H} H || (rewrite (unC h1) ?unA in H * )); supdom_checker t H | |- _ => idtac end.",
            "VernacExtend",
            "d1147594841b3f19d6987f76fcb57d5846d72d88"
        ],
        [
            "Ltac defcheck := match goal with | |- is_true (def ?h2) -> is_true (def ?h1) => let t1 := fresh \"t1\" in let t2 := fresh \"t2\" in let t := fresh \"t\" in let H := fresh \"H\" in set t2 := {1}h2; set t1 := {1}h1; rewrite -(un0h t1) -(un0h t2) [empty]lock; set t := locked empty; rewrite /t1 /t2 {t1 t2}; rewrite ?unA; move=>H; apply: (sup_defdef H); supdom_checker t H; move: H {t}; rewrite /supdom | |- _ => idtac end.",
            "VernacExtend",
            "e57537cb446abeb456221d0410c91c85aebd338f"
        ],
        [
            "Ltac hhauto := (do ?econstructor=>//; try by [heap_congr])=>//.",
            "VernacExtend",
            "f32f3e7bb4ca71f64ea35291e3d4d0fa96a7dda6"
        ]
    ],
    "proofs": [
        {
            "name": "eq_ptrP",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "by case=>x [y] /=; case: eqP=>[->|*]; constructor=>//; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptrE",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "by move: x y=>[x][y].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptr0",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "by case: x=>x; rewrite /ptr_offset addn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptrA",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "by case: x=>x; rewrite /ptr_offset addnA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptrK",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "by case: x=>x; rewrite ptrE eqn_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptr_null",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "by case: x=>x; rewrite !ptrE addn_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptrT",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "case: x y=>x [y]; exists (if x <= y then (y - x) else (x - y)).",
                        "VernacExtend",
                        "4010f6b94c266a9db1b7c477e89c9af93615707b"
                    ]
                },
                {
                    "command": [
                        "rewrite !ptrE leq_eqVlt /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (ltngtP x y)=>/= E; rewrite subnKC ?(ltnW E) ?eq_refl ?orbT // E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_ptr_irr",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "by case=>x /=; rewrite ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_ptr_trans",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by case=>x [y][z]; apply: ltn_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_ptr_total",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "by case=>x [y]; rewrite ptrE /=; case: ltngtP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_nullP",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "by move=>H1 H2; rewrite supp_ins negb_or /= eq_sym H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free_nullP",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "by move=>H; rewrite supp_rem negb_and /= H orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "un_nullP",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "by move=>H1 H2; rewrite supp_fcat negb_or H1 H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "heapE",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "split=>[E|[//]]; move: pf pg.",
                        "VernacExtend",
                        "d382ad451ae594d67a86f477726931c094e27e38"
                    ]
                },
                {
                    "command": [
                        "by rewrite E=>pf pg; congr Def; apply: bool_irrelevance.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unC",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "case=>[|h1 H1]; case=>[|h2 H2] //; rewrite /union2.",
                        "VernacExtend",
                        "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>E; rewrite disjC E // -heapE fcatC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unA",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "case=>[|h1 H1]; case=>[|h2 H2]; case=>[|h3 H3] //; rewrite /union2; case: ifP=>//; case: ifP=>//; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>E1 E2; rewrite disjC disj_fcat andbC disjC E2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>E1 //; rewrite disj_fcat E1 /= -!(disjC h3) disj_fcat=>->->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite disj_fcat; case/andP=>->.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite -!(disjC h3) disj_fcat=>E2 E3.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite E2 E3 -heapE fcatA // disjC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unCA",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "by rewrite unC (unC h1) unA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unAC",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "by rewrite (unC h1) -unA unC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "un0h",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "by case: h=>[|h H] //; apply/heapE; rewrite fcat0s.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unh0",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "by rewrite unC un0h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unhKl",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "by rewrite !(unC h); apply: unKhl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unKhr",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "by move=>H1 H2; symmetry in H2; rewrite (unKhl H1 H2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unhKr",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "by rewrite !(unC h); apply: unKhr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom0",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domU",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "case: h=>[|h T] /= x; rewrite inE /upd /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite ?inE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>//; rewrite andbF; reflexivity.",
                        "VernacExtend",
                        "a41396cf40071672ab90fa2c8bf4f9e13e2ee101"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E; case: decP=>H1; rewrite /dom /=.",
                        "VernacExtend",
                        "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqP E) H1 supp_ins inE /= eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: eqP H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite supp_ins inE /= E H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: eqP H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domPt",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "move=>y; rewrite domU dom0 !inE /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>E; rewrite -(eq_sym y) E andbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domF",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "case: h=>[|h H] y /=; rewrite ?inE /=; case: ifP=>// E; by rewrite supp_rem inE /= eq_sym E.",
                        "VernacExtend",
                        "8f902edf471e04ca03931fa987bb23058542eb14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domUn",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "case: h1 h2 =>[|h1 H1] // [|h2 H2] // x; rewrite /dom /union2.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>// E; rewrite supp_fcat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_null",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "by case: h=>[|h H1] //; case: eqP=>// ->; rewrite (negbTE H1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_def",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "by case: h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_free",
            "line_nb": 162,
            "steps": [
                {
                    "command": [
                        "by case: h=>[|h H] // E; apply/heapE; apply: rem_supp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_look",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "by case: h=>[|h H] //; rewrite /look /dom -topredE /=; case: (suppP x)=>// ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def0",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defU",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "case: h=>[|h H] /=; first by rewrite andbF.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /upd; case: decP=>/= [->//|]; case: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defPt",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "by rewrite defU andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defF",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "by case: h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defUn",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "case=>[|h1 H1][|h2 H2] /=; try by [apply: def_false1 | apply: def_false2].",
                        "VernacExtend",
                        "700e4ba7c43aef376de752aa78d70ea0bf66a54e"
                    ]
                },
                {
                    "command": [
                        "rewrite /union2; case: ifP=>E.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: def_true=>// x H; case: disjP E=>//; move/( _ _ H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: disjP E=>// x T1 T2 _; apply: (def_false3 (x:=x)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defUnl",
            "line_nb": 190,
            "steps": [
                {
                    "command": [
                        "by case: h1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defUnr",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "by case: h1=>h1 // H; case: h2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defFUn",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "case: defUn=>// H1 H2 H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: defUn=>//; [by rewrite defF H1|by rewrite H2|].",
                        "VernacExtend",
                        "6148700c32a2b1286f1639cfa47160fa5d1d79ea"
                    ]
                },
                {
                    "command": [
                        "move=>k; rewrite domF inE /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>_ //; move/H; move/negbTE=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defUnF",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "by rewrite unC; move/(defFUn x); rewrite unC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undefE",
            "line_nb": 205,
            "steps": [
                {
                    "command": [
                        "by case: x; split.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_inj",
            "line_nb": 208,
            "steps": [
                {
                    "command": [
                        "case: h=>[|h H] // _ H1; rewrite /upd; case: decP=>// H2 [E].",
                        "VernacExtend",
                        "1dd33488047dbf70f12e12a749f59bfa780f9e04"
                    ]
                },
                {
                    "command": [
                        "have: fnd x (ins x d1 h) = fnd x (ins x d2 h) by rewrite E.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !fnd_ins eq_refl; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "heap_eta",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "case: h=>[|h H] //; rewrite /upd /look /dom /free.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: decP; rewrite -topredE => /= H1 H2; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: eqP H1 H H2=>// -> _ H; rewrite (negbTE H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/heapE; apply: fmapP=>k; rewrite fnd_ins.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>[|E]; last by rewrite fnd_rem E.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/eqP=>->; case E1: (fnd x h)=>//.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by case: (suppP _ h) H2 E1=>// v ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updU",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "case: h =>[|h T]; rewrite /upd; case: ifP=>// H; case: decP=>H1 //; case: decP=>// H2; last 2 first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqP H) H1 in H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply/heapE; rewrite ins_ins eq_sym H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/heapE; rewrite ins_ins (eqP H) eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updF",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "case: h=>[|h H] /=; case: ifP=>E //; rewrite /upd; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: decP=>// H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply/heapE; rewrite ins_rem eq_sym E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: decP=>// H1; case: decP=>// H2.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply/heapE; rewrite ins_rem (eqP E) eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqP E) H1 in H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqP E) H2 in H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updUnr",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "by rewrite unC updUnl (unC h1) (unC h2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pts_injP",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "rewrite /pts /upd /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: decP=>H1; case: decP=>H2 // _; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pts_injT",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "by move=>D; case/(pts_injP D).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pts_inj",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "move=>D; rewrite /pts /upd.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: decP; last by rewrite -(defPt _ v1) D.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=>H []; apply: inj_pairT2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free0",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "by apply/heapE; rewrite rem_empty.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeU",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "case: h=>[|h H] /=; first by case: ifP=>// E; case: ifP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /upd; case: ifP=>E1; case: decP=>H1 //.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (negbTE H1); apply/heapE; rewrite rem_ins E1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: ifP H1=>// ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/heapE; rewrite rem_ins E1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeF",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "by case: h=>*; case: ifP=>E //; apply/heapE; rewrite rem_rem E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeUn",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "case: h1 h2=>[|h1 H1] [|h2 H2] //; rewrite /union2 /free /dom /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E1 //; rewrite supp_fcat inE /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E2; last by apply/heapE; rewrite rem_supp // supp_fcat inE /= E2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite disj_rem; last by rewrite disjC disj_rem // disjC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/heapE; case/orP: E2=>E2.",
                        "VernacExtend",
                        "20ec428e50c31e1399aee62c5a532bc8417a4b29"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "suff E3: x \\notin supp h2 by rewrite -fcat_rems // (rem_supp E3).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by case: disjP E1 E2=>// H _; move/H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff E3: x \\notin supp h1 by rewrite -fcat_srem // (rem_supp E3).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by case: disjP E1 E2=>// H _; move/contra: (H x); rewrite negbK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeUnD",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "move=>D; rewrite freeUn domUn D !inE /=; case: ifP=>//.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "by move/negbT; rewrite negb_or; case/andP=>H1 H2; rewrite !dom_free.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeUnl",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "move=>D1; rewrite freeUn domUn !inE (negbTE D1) /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: ifP; first by case/andP; rewrite dom_free.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/negbT; rewrite negb_and; case/orP=>D2; last by rewrite dom_free.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "suff: ~~ def (h1 :+ free x h2).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: (h1 :+ free x h2)=>// _; case: (h1 :+ h2) D2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: contra D2; case: defUn=>// H1 H2 H _.",
                        "VernacExtend",
                        "20ec428e50c31e1399aee62c5a532bc8417a4b29"
                    ]
                },
                {
                    "command": [
                        "case: defUn=>//; first by [rewrite H1]; first by move: H2; rewrite defF=>->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=>k H3; move: (H _ H3); rewrite domF inE /=.",
                        "VernacExtend",
                        "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
                    ]
                },
                {
                    "command": [
                        "by case: ifP H3 D1=>[|_ _ _]; [move/eqP=><- -> | move/negbTE=>->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeUnr",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "by move=>H; rewrite unC freeUnl // unC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookU",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "case: h=>[|h H] /=; case: ifP=>E //; case: ifP=>H1 //; rewrite /upd; by case: decP=>// H2; rewrite /look fnd_ins E //; rewrite H1 in H2.",
                        "VernacExtend",
                        "204d98e7c8612e36cfa3591df9fc23c5976cbb80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookF",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "by case: h=>[|h H]; case: ifP=>E //; rewrite /look /free fnd_rem E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookUnl",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "case: h1 h2=>[|h1 H1] // [|h2 H2] //; rewrite /look /dom /union2.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>D //= _; case: ifP=>E1; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite fnd_fcat; case: ifP=>// E2; rewrite fnd_supp ?E1 // fnd_supp ?E2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff E2: x \\notin supp h2 by rewrite fnd_fcat (negbTE E2).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by case: disjP D E1=>// H _; apply: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookUnr",
            "line_nb": 334,
            "steps": [
                {
                    "command": [
                        "by rewrite unC=>D; rewrite lookUnl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empP",
            "line_nb": 337,
            "steps": [
                {
                    "command": [
                        "case: h=>[|h] /=; first by right.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: eqP=>E H; first by apply: ReflectT; apply/heapE; apply/supp_nilE.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: ReflectF; move/heapE=>S; rewrite S supp_nil in E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empU",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "case: h=>[|h H] //; rewrite /upd /empb; case: decP=>// H1.",
                        "VernacExtend",
                        "1dd33488047dbf70f12e12a749f59bfa780f9e04"
                    ]
                },
                {
                    "command": [
                        "suff: x \\in supp (ins x d h) by case: (supp _).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite supp_ins inE /= eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empPt",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "by rewrite empU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empUn",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "case: h1 h2=>[|h1 H1] // [|h2 H2] /=; first by rewrite andbC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /empb /union2; case: ifP=>E; case: eqP=>E1; case: eqP=>E2 //=; last 2 first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move: E2 E1; move/supp_nilE=>->; rewrite fcat0s; case: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move: E1 E2 E; do 2![move/supp_nilE=>->]; case: disjP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/supp_nilE: E2 E1=>-> <-; rewrite fcat0s eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [k H3]: exists k, k \\in supp h1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: (supp h1) {E1 H1 E} E2=>[|x s _] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by exists x; rewrite inE eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff: k \\in supp (fcat h1 h2) by rewrite E1.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite supp_fcat inE /= H3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empbE",
            "line_nb": 366,
            "steps": [
                {
                    "command": [
                        "by split=>[-> //|]; case: empP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "un0E",
            "line_nb": 369,
            "steps": [
                {
                    "command": [
                        "by rewrite !empbE empUn; case: andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defUnhh",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "case E: (empb h); first by move/empbE: E=>->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: defUn=>// D _ L.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: defE E=>//; case; split=>// x.",
                        "VernacExtend",
                        "4d134c7f11ebe0c470159cd214ff82293400228b"
                    ]
                },
                {
                    "command": [
                        "case E: (x \\in dom h)=>//.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by move: (L x E); rewrite E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "path_last",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "move: n s x.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "suff L: forall s x, path ord x s -> ord x (last x s).+(1).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "elim=>[|n IH] // s x; move/IH=>E; apply: trans E _.",
                        "VernacExtend",
                        "c338010fe7d31390136af9ecc9d37d5c6f3b5eb3"
                    ]
                },
                {
                    "command": [
                        "by case: (last x s)=>m; rewrite /ord /= addSn (addnS m).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim=>[|y s IH x] /=; first by case=>x; rewrite /ord /= addn1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/andP=>H1; move/IH; apply: trans H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "path_filter",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "elim: s x=>[|y s IH] x //=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "case/andP=>H1 H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E; first by rewrite /= H1 IH.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: IH; elim: s H2=>[|z s IH] //=.",
                        "VernacExtend",
                        "470117b6920bbf0ab181fc70f91f03232cdae40b"
                    ]
                },
                {
                    "command": [
                        "by case/andP=>H2 H3; rewrite (@trans _ y).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_fresh",
            "line_nb": 401,
            "steps": [
                {
                    "command": [
                        "suff L2: forall h x, x \\in dom h -> ord x (fresh h).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: (contra (L2 _ _)); rewrite -leqNgt leq_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case=>[|[s H1]] //; rewrite /supp => /= H2 x.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "rewrite /dom /fresh /supp -topredE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: s H1 null H2 x=>[|[y d] s IH] //= H1 x.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite inE negb_or; case/andP=>H3 H4 z; rewrite inE.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "case/orP; first by move/eqP=>->{z}; apply: (path_last 0).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: IH; [apply: path_sorted H1 | apply: notin_path H1].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fresh_null",
            "line_nb": 412,
            "steps": [
                {
                    "command": [
                        "by rewrite -lt0n addn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "emp_pick",
            "line_nb": 417,
            "steps": [
                {
                    "command": [
                        "case: h=>[|h] //=; case: (supp h)=>[|x xs] //=.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE negb_or eq_sym; case/andP; move/negbTE=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pickP",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "by rewrite /dom; case: h=>[|h] //=; case: (supp h)=>// *; rewrite inE eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdom_def",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "by case: h1 h2=>[|h1 H1] // [|h2 H2].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdomQ",
            "line_nb": 433,
            "steps": [
                {
                    "command": [
                        "move=>S H; case: subdomP S=>//.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: dom_def H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: empP=>// E; rewrite E dom0 in H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>H2 _; apply: H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdom_refl",
            "line_nb": 441,
            "steps": [
                {
                    "command": [
                        "by case: h=>[//|h H _]; apply/allP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdomD",
            "line_nb": 444,
            "steps": [
                {
                    "command": [
                        "case: h1 h2 h=>[|h1 H1]; case=>[|h2 H2]; case=>[|h H] //=.",
                        "VernacExtend",
                        "d4127243a8edd835b38ce1b186629bc51391e41f"
                    ]
                },
                {
                    "command": [
                        "rewrite /subdom /def /union2 /=; case: ifP=>E1 //; case: ifP=>E2 // E _.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "case: disjP E2=>// x H3 H4 _; case: disjP E1=>// X1 _.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by case: (allP (s := supp h1)) E=>//; move/(_ _ H3); move/X1; rewrite H4.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdomE",
            "line_nb": 450,
            "steps": [
                {
                    "command": [
                        "case: h1 h2 h=>[|h1 H1]; case=>[|h2 H2]; case=>[|h H] //=.",
                        "VernacExtend",
                        "d4127243a8edd835b38ce1b186629bc51391e41f"
                    ]
                },
                {
                    "command": [
                        "rewrite /union2 /subdom /def /=; case: ifP=>E1 // _; case: ifP=>E2; case: (allP (s:=supp h1))=>// E _; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: disjP E2=>// x H3 H4; move/E: H3.",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "by case: disjP E1=>// X _; move/X; rewrite H4.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (allP (s:=supp (fcat h1 h)))=>//; case=>x.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "rewrite !supp_fcat !inE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case/orP; rewrite ?inE; [move/E=>->| move=>->; rewrite orbT].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdomUE",
            "line_nb": 460,
            "steps": [
                {
                    "command": [
                        "case: h1 h2 h1' h2'=>[|h1 H1]; case=>[|h2 H2]; case=>[|h1' H1']; case=>[|h2' H2'] //.",
                        "VernacExtend",
                        "9c855307bebe9c9fcd60ebdc397f010c9a03df54"
                    ]
                },
                {
                    "command": [
                        "rewrite /subdom /def /union2.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E1 // _; case: ifP=>E2 // T1 T2; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: disjP E2=>// x; case: allP T1=>// X _; move/X=>{X}.",
                        "VernacExtend",
                        "9dda2bdd158284551955535b055c222b3c4fedd1"
                    ]
                },
                {
                    "command": [
                        "case: disjP E1=>// X _; move/X=>{X}.",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "by case: allP T2=>// X _ H3 H4; move/X: H4 H3=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: allP=>//; case=>x.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "rewrite !supp_fcat !inE; case/orP=>E.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: allP T1=>//; move/(_ _ E)=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: allP T2=>//; move/(_ _ E)=>->; rewrite orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdom_emp",
            "line_nb": 474,
            "steps": [
                {
                    "command": [
                        "by case: h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdom_emp_inv",
            "line_nb": 477,
            "steps": [
                {
                    "command": [
                        "case: h=>[|h H] //; rewrite /subdom /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: (allP (s:=supp h))=>// E _; apply/heapE; apply: fmapP=>x.",
                        "VernacExtend",
                        "d0ca9c3fd2da32fc51e6c7224f197d333e09c6a3"
                    ]
                },
                {
                    "command": [
                        "case: suppP (E x)=>// v E2; move/(_ (erefl _)).",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "by rewrite supp_nil.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdomPE",
            "line_nb": 483,
            "steps": [
                {
                    "command": [
                        "move=>H; rewrite /subdom /pts /upd /=; case: decP=>//= _.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "rewrite (_ : FinMap _ = ins x (dyn v2) (finmap.nil _ _)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite supp_ins inE /= eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdom_trans",
            "line_nb": 488,
            "steps": [
                {
                    "command": [
                        "move=>H1 H2; move: (subdom_def H1) (subdom_def H2).",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "case/andP=>D1 _; case/andP=>_ D2.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "case E: (empb h1).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/empP: E =>->; rewrite subdom_emp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/subdomP=>[//||x in1]; first by apply negbT.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: (subdomQ H2) (subdomQ H1 in1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subheap_refl",
            "line_nb": 498,
            "steps": [
                {
                    "command": [
                        "by move=>D; split=>//; apply: subdom_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subheapE",
            "line_nb": 501,
            "steps": [
                {
                    "command": [
                        "by split; [apply subdom_emp | rewrite dom0].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subheapUn",
            "line_nb": 504,
            "steps": [
                {
                    "command": [
                        "move=>defs [Sd1 Sl1] [Sd2 Sl2].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "split=>[|x]; first by apply: subdomUE.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite domUn inE /= inE /=; case/andP=>D; case/orP=>H.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite !lookUnl // H Sl1 // (subdomQ Sd1 H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite !lookUnr // H Sl2 // (subdomQ Sd2 H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subheapUnr",
            "line_nb": 518,
            "steps": [
                {
                    "command": [
                        "by rewrite unC; apply: subheapUnl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subheap_def",
            "line_nb": 521,
            "steps": [
                {
                    "command": [
                        "by case=>[subdm _]; move/andP: (subdom_def subdm).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subheap_trans",
            "line_nb": 524,
            "steps": [
                {
                    "command": [
                        "move=>[S12 E12] [S23 E23].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "split=> [|x in1]; first by apply: (subdom_trans S12 S23).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (E12 x in1); apply: (E23 x (subdomQ S12 in1)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subheap_id",
            "line_nb": 529,
            "steps": [
                {
                    "command": [
                        "move=>S12; move: (S12) => [D12 _].",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "move/andP: (subdom_def D12) S12=>{D12} [D1 D2].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: hp1 D1=>[//=|fm1 pf1].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: hp2 D2=>[//=|fm2 pf2] _ _ [S12 L12] [S21 L21].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite -heapE; apply: fmapP => k.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "move: (@subdomQ k _ _ S12) (@subdomQ k _ _ S21) => S'12 S'21.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (L12 k) (L21 k).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case H1: (k \\in dom (Def pf1)).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: (S'12 H1)=> H2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case F1: (fnd k fm1)=> [d1|]; case F2: (fnd k fm2)=> [d2|] //=; rewrite F1 F2.",
                        "VernacExtend",
                        "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>H; rewrite (H is_true_true).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move: (fnd_supp_in H2); rewrite F2=> [[v]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move: (fnd_supp_in H1); rewrite F1=> [[v]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case H2 : (k \\in dom (Def pf2)).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (S'21 H2) in H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => _ _; rewrite /dom -topredE in H2.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite (fnd_supp (negbT H1)) (fnd_supp (negbT H2)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "noalias",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "by case: defUn=>// H1 H2 H; move/H; case: eqP=>// ->; move/negbTE=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defPtUn",
            "line_nb": 556,
            "steps": [
                {
                    "command": [
                        "case: defUn; last 1 first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite defPt=>H1 -> H2; rewrite H1 (H2 x) // domPt inE /= eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite defPt; move/negbTE=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/negbTE=>->; rewrite andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>y; rewrite domPt inE /=; case/andP; move/eqP=><-->->; rewrite andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defPt_null",
            "line_nb": 566,
            "steps": [
                {
                    "command": [
                        "by rewrite defPtUn; case/and3P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defPt_def",
            "line_nb": 569,
            "steps": [
                {
                    "command": [
                        "by rewrite defPtUn; case/and3P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defPt_dom",
            "line_nb": 572,
            "steps": [
                {
                    "command": [
                        "by rewrite defPtUn; case/and3P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domPtUn",
            "line_nb": 575,
            "steps": [
                {
                    "command": [
                        "move=>y; rewrite domUn !inE !defPtUn domPt inE /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: (x =P null)=>//= _; rewrite andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookPtUn",
            "line_nb": 579,
            "steps": [
                {
                    "command": [
                        "by move=>D; rewrite lookUnl // lookU domPt !inE eq_refl (defPt_null D).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freePtUn",
            "line_nb": 582,
            "steps": [
                {
                    "command": [
                        "move=>D; rewrite freeUnr; last by rewrite (defPt_dom D).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite freeU eqxx (negbTE (defPt_null D)) free0 un0h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updPtUn",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "case E1: (def (x :-> v1 :+ i)).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite updUnl domPt inE /= eqxx (defPt_null E1) /= updU eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have E2: def (x :-> v2 :+ i) = false by rewrite !defPtUn in E1 *.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case: (_ :+ _) E1=>// _; case: (_ :+ _) E2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "heap_etaP",
            "line_nb": 593,
            "steps": [
                {
                    "command": [
                        "move=>H; rewrite {1}(heap_eta H) /pts -dyn_eta.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}[free x h]un0h updUnr domF inE /= eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancelT",
            "line_nb": 597,
            "steps": [
                {
                    "command": [
                        "move=>D E.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have: look x (x :-> v1 :+ h1) = look x (x :-> v2 :+ h2) by rewrite E.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !lookPtUn -?E //; apply: dyn_injT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel",
            "line_nb": 602,
            "steps": [
                {
                    "command": [
                        "move=>D E.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have: look x (x :-> v1 :+ h1) = look x (x :-> v2 :+ h2) by rewrite E.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite !lookPtUn -?E // => X; move: (dyn_inj X)=>{X} X.",
                        "VernacExtend",
                        "d382ad451ae594d67a86f477726931c094e27e38"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{}X in E *; rewrite -(unhKl D E) (defUnr D).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domPtUnX",
            "line_nb": 608,
            "steps": [
                {
                    "command": [
                        "by move=>D; rewrite domPtUn inE /= D eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domPtX",
            "line_nb": 611,
            "steps": [
                {
                    "command": [
                        "by move=>D; rewrite -(unh0 (x :-> v)) domPtUnX // unh0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_notin_notin",
            "line_nb": 614,
            "steps": [
                {
                    "command": [
                        "by move=>D; rewrite domUn inE /= negb_and negb_or /= D; case/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_in_notin",
            "line_nb": 617,
            "steps": [
                {
                    "command": [
                        "by case: defUn=>// D1 D2 H _; apply: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updiS",
            "line_nb": 623,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updi_last",
            "line_nb": 626,
            "steps": [
                {
                    "command": [
                        "elim: vs x v=>[|w vs IH] x v /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite ptr0 unh0 un0h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(addn1 (size vs)) addnC -ptrA IH unA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updi_cat",
            "line_nb": 632,
            "steps": [
                {
                    "command": [
                        "elim: vs1 x vs2=>[|v vs1 IH] x vs2 /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite ptr0 un0h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(addn1 (size vs1)) addnC -ptrA IH unA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updi_catI",
            "line_nb": 638,
            "steps": [
                {
                    "command": [
                        "by move=>->; rewrite updi_cat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updiVm'",
            "line_nb": 641,
            "steps": [
                {
                    "command": [
                        "elim: xs x m=>[|v vs IH] x m //= H.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite ptrA domPtUn inE /= negb_and negb_or -{4}(ptr0 x) ptrK -lt0n H /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite orbC IH // addn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updiD",
            "line_nb": 646,
            "steps": [
                {
                    "command": [
                        "elim: xs x=>[|v xs IH] x //=; first by rewrite orbC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite defPtUn updiVm' // orbF IH ptr_null andbF andbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updiVm",
            "line_nb": 650,
            "steps": [
                {
                    "command": [
                        "case: m=>[|m] /=; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite andbF; apply: negbTE; apply: updiVm'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: xs=>[|v xs]; rewrite ptr0 ?andbF ?andbT //=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite domPtUn inE /= eq_refl -updiS updiD orbF andbT /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updimV",
            "line_nb": 657,
            "steps": [
                {
                    "command": [
                        "case H: (x == null)=>/=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: xs=>// a s; rewrite (eqP H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: xs x m H=>[|v vs IH] x m H //; case: m=>[|m].",
                        "VernacExtend",
                        "df63f96bedbb0673aecb42521d90011325a86c94"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite ptr0 /= domPtUn inE /= eq_refl andbT -updiS updiD H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -addn1 addnC -ptrA updiS domPtUn inE /= IH; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite ptrE /= addn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -updiS updiD H /= -{1}(ptr0 x) ptrA ptrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updiP",
            "line_nb": 669,
            "steps": [
                {
                    "command": [
                        "case H: (y == null)=>/=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqP H); elim: xs=>[|z xs IH] //=; constructor; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case E: (x \\in _); constructor; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>[_][m][H1] H2; rewrite H1 updimV H2 H in E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (ptrT x y) E=>m; case/orP; move/eqP=>->.",
                        "VernacExtend",
                        "9dda2bdd158284551955535b055c222b3c4fedd1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite updimV H /= => H1; split=>//; exists m.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite updiVm; case/and3P=>H1; move/eqP=>-> H2.",
                        "VernacExtend",
                        "f0b646e3773567ccd6c4a75851abf71dbc3ffe2d"
                    ]
                },
                {
                    "command": [
                        "by split=>//; exists 0; rewrite ptrA addn0 ptr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updi_inv",
            "line_nb": 682,
            "steps": [
                {
                    "command": [
                        "elim: xs1 x xs2 =>[|v1 xs1 IH] x /=; case=>[|v2 xs2] //= D; [move/esym| | ]; try by rewrite empbE empUn empPt.",
                        "VernacExtend",
                        "e6688da98f60936d6a0aaab5badd79c173b16e51"
                    ]
                },
                {
                    "command": [
                        "by case/(cancel D)=><- {D} D; move/(IH _ _ D)=><-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updi_iinv",
            "line_nb": 686,
            "steps": [
                {
                    "command": [
                        "elim: xs1 x xs2 h1 h2=>[|v1 xs1 IH] x /=; case=>[|v2 xs2] //= h1 h2.",
                        "VernacExtend",
                        "df63f96bedbb0673aecb42521d90011325a86c94"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite !un0h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>[E]; rewrite -!unA=>D; case/(cancel D)=><- {D} D.",
                        "VernacExtend",
                        "0141855bf989b515603527748435689146bc68ca"
                    ]
                },
                {
                    "command": [
                        "by case/(IH _ _ _ _ E D)=>->->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ldomP",
            "line_nb": 700,
            "steps": [
                {
                    "command": [
                        "case: h=>[//|[h S]]; rewrite /ldom /= /dom /supp /= =>H.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "rewrite -!topredE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: (map key h)=>[|y s IH] //=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E; rewrite !inE IH; case: eqP=>// -> //=.",
                        "VernacExtend",
                        "1dd33488047dbf70f12e12a749f59bfa780f9e04"
                    ]
                },
                {
                    "command": [
                        "by rewrite E andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hdomP",
            "line_nb": 707,
            "steps": [
                {
                    "command": [
                        "case: h=>[//|[h S]]; rewrite /hdom /= /dom /supp /= =>H.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "rewrite -!topredE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: (map key h)=>[|y s IH] //=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E; rewrite !inE IH; case: eqP=>// -> //=.",
                        "VernacExtend",
                        "1dd33488047dbf70f12e12a749f59bfa780f9e04"
                    ]
                },
                {
                    "command": [
                        "by rewrite E andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ldomK",
            "line_nb": 714,
            "steps": [
                {
                    "command": [
                        "move=>D1 D2 H1 H2 x; move: {H1 H2} (H1 x) (H2 x).",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "rewrite !ldomP !domUn !inE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: defUn D1=>// H1 H2 L1 _; case: defUn D2=>// H3 H4 L2 _.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "case E1: (x \\in dom t1); case E2: (x \\in dom t2)=>//; rewrite orbF orbT /=; case E3: (x \\in dom h1); case E4: (x \\in dom h2)=>//= _ _; by [move/L1: E3; rewrite E1 | move/L2: E4; rewrite E2].",
                        "VernacExtend",
                        "7543bf3f43017e68265a9da6bcfd2d11707eb68f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_inv",
            "line_nb": 722,
            "steps": [
                {
                    "command": [
                        "by elim: h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfresh_low",
            "line_nb": 725,
            "steps": [
                {
                    "command": [
                        "rewrite /lfresh /low /get_lows.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: h; first by rewrite modn_addl modn_mulr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case; rewrite /supp /low /=.",
                        "VernacExtend",
                        "60bc784dae903637c4df5b59663eaf40a3679a3b"
                    ]
                },
                {
                    "command": [
                        "elim=>[|[[x] v] h IH] /=; first by rewrite modn_addl modn_mulr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite inE negb_or ptrE /=; move/path_sorted=>H1; case/andP=>H2 H3.",
                        "VernacExtend",
                        "94b585b2dd67662a1bfccf9de340af322f43f6e9"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E /=; last by apply: IH.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "set f := fun x => (nat_ptr x + 2 + 2 * n) %% 2.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "have F: f (ptr_nat x) = f null.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite /f -modn_mod -addnA -modn_add2m -(eqP E) !modn_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (last_inv (f := f) (x1 := (ptr_nat x)) (x2 := null))=>L.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite /f /= in L; rewrite {}L //; apply: IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hfresh_high",
            "line_nb": 739,
            "steps": [
                {
                    "command": [
                        "rewrite /hfresh /high /get_highs.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: h n=>[n|].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite /null /= add0n -addnA -modn_add2m modn_addl modn_mulr addn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case; rewrite /supp /high /=.",
                        "VernacExtend",
                        "60bc784dae903637c4df5b59663eaf40a3679a3b"
                    ]
                },
                {
                    "command": [
                        "elim=>[|[[x] v] h IH] /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>_ _ n; rewrite add0n -addnA -modn_add2m modn_addl modn_mulr addn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite inE negb_or ptrE /=; move/path_sorted=>H1; case/andP=>H2 H3.",
                        "VernacExtend",
                        "94b585b2dd67662a1bfccf9de340af322f43f6e9"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E n /=; last by apply: IH.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "set f := fun x => (nat_ptr x + 2 + 2 * n) %% 2.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "have F: f (ptr_nat x) = f (null .+ 1).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite /f -modn_mod /= add0n -addnA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -modn_add2m -(eqP E) modn_mod.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite modn_add2m addnA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (last_inv (f := f) (x1 := (ptr_nat x)) (x2 := null .+ 1))=>L.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite /f /= in L; rewrite {}L //; apply: IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfresh_null",
            "line_nb": 797,
            "steps": [
                {
                    "command": [
                        "by case: h=>[//|[h H] F]; rewrite /lfresh ptrE -lt0n /= addnS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hfresh_null",
            "line_nb": 800,
            "steps": [
                {
                    "command": [
                        "by case: h=>[//|[h H] F]; rewrite /lfresh ptrE -lt0n /= addnS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "high_lowD",
            "line_nb": 803,
            "steps": [
                {
                    "command": [
                        "case=>x; rewrite inE /low /high /= -!topredE /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by case: x=>// n; case E: (0 %% 2 == _)=>//=; rewrite -(eqP E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnS",
            "line_nb": 807,
            "steps": [
                {
                    "command": [
                        "case E: (x1 %% 2 == _).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -addn1 -modn_add2m (eqP E) modn_add2m addn1 eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff L: ((x1.+1) %% 2 == (x2.+1) %% 2) -> (x1 %% 2 == x2 %% 2).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite E in L; case: eqP L=>// _; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>{E} E; rewrite -(modn_addr x1) -(modn_addr x2).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -addSnnS -modn_add2m (eqP E) modn_add2m addSnnS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lhE",
            "line_nb": 822,
            "steps": [
                {
                    "command": [
                        "by apply: negb_inj; rewrite negbK hlE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ldomUn",
            "line_nb": 825,
            "steps": [
                {
                    "command": [
                        "by move=>x; rewrite !inE !ldomP domUn !inE /= -andbA andb_orl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "low_refl",
            "line_nb": 830,
            "steps": [
                {
                    "command": [
                        "by rewrite /loweq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "low_sym",
            "line_nb": 834,
            "steps": [
                {
                    "command": [
                        "by rewrite /loweq eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "low_trans",
            "line_nb": 837,
            "steps": [
                {
                    "command": [
                        "by rewrite /loweq; move/eqP=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "loweqE",
            "line_nb": 862,
            "steps": [
                {
                    "command": [
                        "by rewrite /loweq /lfresh; move/eqP=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lowUn",
            "line_nb": 865,
            "steps": [
                {
                    "command": [
                        "move=>D1 D2; do 2![case: loweqP=>//]=>H1 H2 _ _.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "apply/loweqP=>x; move: (H1 x) (H2 x).",
                        "VernacExtend",
                        "86bb0d3d5ae27b38aac15f69d532d662f1518315"
                    ]
                },
                {
                    "command": [
                        "by rewrite !ldomP !domUn !inE D1 D2 /= !andb_orl=>-> ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lowPn",
            "line_nb": 870,
            "steps": [
                {
                    "command": [
                        "by apply/loweqP=>y; rewrite !ldomP !domPt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "highPn",
            "line_nb": 874,
            "steps": [
                {
                    "command": [
                        "move=>H1 H2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply/loweqP=>y; rewrite !ldomP !domPt !inE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case E1: (x1 == y); first by rewrite -(eqP E1) lhE H1 !andbF.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case E2: (x2 == y)=>//=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqP E2) lhE H2 andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lowPtUn",
            "line_nb": 881,
            "steps": [
                {
                    "command": [
                        "move=>D1 D2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case E: (h1 =~ h2); first by apply: lowUn.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/(elimF idP): E=>E; apply: (introF idP)=>F; case: E.",
                        "VernacExtend",
                        "1b05ef00a6bc4c06259b49aa79e4d38841eab3ab"
                    ]
                },
                {
                    "command": [
                        "by apply: loweqK F.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "highPtUn2",
            "line_nb": 898,
            "steps": [
                {
                    "command": [
                        "by move=>D1 D2 H1 H2 L; apply: lowUn=>//; apply: highPn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unA2",
            "line_nb": 904,
            "steps": [
                {
                    "command": [
                        "by congr (_, _); rewrite /= unA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unC2",
            "line_nb": 907,
            "steps": [
                {
                    "command": [
                        "by congr (_, _); rewrite unC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unKhl2",
            "line_nb": 910,
            "steps": [
                {
                    "command": [
                        "move: h h1 h2=>[h1 h2][h11 h12][h21 h22]; case/andP=>/= [D1 D2] [E1 E2].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by rewrite (unKhl D1 E1) (unKhl D2 E2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unKhr2",
            "line_nb": 914,
            "steps": [
                {
                    "command": [
                        "move: h h1 h2=>[h1 h2][h11 h12][h21 h22]; case/andP=>/= [D1 D2] [E1 E2].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by rewrite (unKhr D1 E1) (unKhr D2 E2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unDl2",
            "line_nb": 918,
            "steps": [
                {
                    "command": [
                        "by case/andP=>/= D1 D2; rewrite /def2 (defUnl D1) (defUnl D2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unDr2",
            "line_nb": 921,
            "steps": [
                {
                    "command": [
                        "by case/andP=>/= D1 D2; rewrite /def2 (defUnr D1) (defUnr D2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "un0h2",
            "line_nb": 924,
            "steps": [
                {
                    "command": [
                        "by case: h=>h1 h2; rewrite /plus2 /= !un0h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unh02",
            "line_nb": 927,
            "steps": [
                {
                    "command": [
                        "by case: h=>h1 h2; rewrite /plus2 /= !unh0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injUh",
            "line_nb": 930,
            "steps": [
                {
                    "command": [
                        "by rewrite -!(unC (x :-> _))=>D; case/(cancel D)=><- -> ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqUh",
            "line_nb": 933,
            "steps": [
                {
                    "command": [
                        "by move=>D E; rewrite {2}(unKhl D E) (defUnl D).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exit1",
            "line_nb": 936,
            "steps": [
                {
                    "command": [
                        "by move=>D; rewrite (unC h); apply: eqUh.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exit2",
            "line_nb": 939,
            "steps": [
                {
                    "command": [
                        "by move=>H1; rewrite -{2}(unh0 h)=>H2; apply: exit1 H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exit3",
            "line_nb": 942,
            "steps": [
                {
                    "command": [
                        "move=>H1 H2; split=>//; rewrite -{1}(unh0 h) in H2.",
                        "VernacExtend",
                        "6b509b6a448d912d761bbad76ff3082e795e01f6"
                    ]
                },
                {
                    "command": [
                        "by apply: unhKl H2; rewrite unh0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exit4",
            "line_nb": 946,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cexit1",
            "line_nb": 951,
            "steps": [
                {
                    "command": [
                        "by move=>->; rewrite unC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cexit2",
            "line_nb": 954,
            "steps": [
                {
                    "command": [
                        "by move=>->; rewrite un0h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cexit3",
            "line_nb": 957,
            "steps": [
                {
                    "command": [
                        "by move=><-; rewrite unh0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "congUh",
            "line_nb": 960,
            "steps": [
                {
                    "command": [
                        "by move=>-> ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "congeqUh",
            "line_nb": 963,
            "steps": [
                {
                    "command": [
                        "by move=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test",
            "line_nb": 968,
            "steps": [
                {
                    "command": [
                        "by move=>H1 H2; heap_congr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sexit3",
            "line_nb": 980,
            "steps": [
                {
                    "command": [
                        "move=>H1 H2; rewrite unC -{1}(un0h h).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: subdomE; [rewrite un0h | apply: H2].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sexit4",
            "line_nb": 984,
            "steps": [
                {
                    "command": [
                        "by move=>*; rewrite -(un0h h); apply: subdomE=>//; rewrite un0h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "supdomeqUh",
            "line_nb": 992,
            "steps": [
                {
                    "command": [
                        "by rewrite (unC h1); apply: sexit1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sup_defdef",
            "line_nb": 995,
            "steps": [
                {
                    "command": [
                        "by move=>H1; rewrite /supdom; move/subdom_def; rewrite H1 andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}