{
    "filename": "theories/terms.v",
    "coq_project": "lemma-overloading",
    "vernac_cmds": [
        [
            "From mathcomp Require Import ssreflect ssrbool ssrnat ssrfun eqtype seq.",
            "VernacRequire",
            "7d969a7036bf7865f18895896d358347c9e604fc"
        ],
        [
            "From LemmaOverloading Require Import prelude prefix perms heaps.",
            "VernacRequire",
            "fc0e98958a7729694bfdacc9834ae0ab870aca7d"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Structure ctx := Context {heap_ctx : seq heap; ptr_ctx : seq ptr}.",
            "VernacInductive",
            "45ba8ab9b0e06222cc53144cd04504236962bd09"
        ],
        [
            "Definition empc := Context [::] [::].",
            "VernacDefinition",
            "c43fbaa1ba0c91fc3aa999db08d1d27b2e895ea8"
        ],
        [
            "Definition subctx i j := prefix (heap_ctx i) (heap_ctx j) /\\ prefix (ptr_ctx i) (ptr_ctx j).",
            "VernacDefinition",
            "a5a38b0da0172a5d7f330606ab2af8a335be4dae"
        ],
        [
            "Lemma subctx_refl i: subctx i i.",
            "VernacStartTheoremProof",
            "bbe41a4079e34467727fd93ebc6aa2b636b9dcf4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subctx_trans j i k : subctx i j -> subctx j k -> subctx i k.",
            "VernacStartTheoremProof",
            "e8f89cf7bd0058a0fb01708d97de97a2e533c357"
        ],
        [
            "move=>[H1 P1][H2 P2].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by split; [move: H2|move: P2]; apply: prefix_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive elem := Pts of nat & dynamic | Var of nat.",
            "VernacInductive",
            "4afedaa11a55b0cbef0d70520549fa320d76689a"
        ],
        [
            "Definition synheap := seq elem.",
            "VernacDefinition",
            "e8fa809f40e1612b260a47f24ac83d4e22bbf4c6"
        ],
        [
            "Fixpoint valid_ptrs i t := match t with Pts sx _ :: s => (sx < size (ptr_ctx i)) && valid_ptrs i s | Var _ :: s => valid_ptrs i s | _ => true end.",
            "VernacFixpoint",
            "c949fc63fdbe3e5ca820f2c8a846dc82a892d714"
        ],
        [
            "Fixpoint valid_heaps i t := match t with Pts _ _ :: s => valid_heaps i s | Var v :: s => (v < size (heap_ctx i)) && valid_heaps i s | _ => true end.",
            "VernacFixpoint",
            "2979b83558bb6c53c1bd7cbf3b2989096eae25a3"
        ],
        [
            "Definition valid i t := valid_ptrs i t && valid_heaps i t.",
            "VernacDefinition",
            "7273e3f5b12f46edc18737791362cc4ca32a7650"
        ],
        [
            "Lemma valid_cons i e t : valid i (e :: t) = valid i [:: e] && valid i t.",
            "VernacStartTheoremProof",
            "5786f269e7c13cd734c92262188a711c9999e005"
        ],
        [
            "case: e=>[x d|v] /=; rewrite /valid /=; by [rewrite !andbT andbA | rewrite andbT andbCA].",
            "VernacExtend",
            "e28621cab80b25b1d7725a7bfcb68d6908230c48"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_ptrs_cat j t1 t2 : valid_ptrs j (t1 ++ t2) = valid_ptrs j t1 && valid_ptrs j t2.",
            "VernacStartTheoremProof",
            "dbea8623e727b843b29816ba60211b7e5570363d"
        ],
        [
            "elim: t1 t2=>[//|v t1 IH /=] t2.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by case: v=>[x d | v]; rewrite IH // andbA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_heaps_cat j t1 t2 : valid_heaps j (t1 ++ t2) = valid_heaps j t1 && valid_heaps j t2.",
            "VernacStartTheoremProof",
            "a985bf40d05e25678886cd90cb5cc2f5fe9378f8"
        ],
        [
            "elim: t1 t2=>[//|v t1 IH /=] t2.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by case: v=>[x d | v]; rewrite IH // andbA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_cat j t1 t2 : valid j (t1 ++ t2) = valid j t1 && valid j t2.",
            "VernacStartTheoremProof",
            "aa919980c5d3daf268a1300941c6ffceee814beb"
        ],
        [
            "rewrite /valid valid_ptrs_cat valid_heaps_cat.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -!andbA -!(andbCA (valid_ptrs j t2)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_subctx i j t : subctx i j -> valid i t -> valid j t.",
            "VernacStartTheoremProof",
            "4e409c07bdbe686ea56878bb232ccbe56e1ad409"
        ],
        [
            "case: i j=>hs1 xs1 [hs2 xs2][/= P1 P2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "elim: t=>[//|e t IH]; rewrite -cat1s 2!valid_cat.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "case/andP=>H; move/IH=>->.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "case: e H=>[x d| v]; rewrite /valid /= !andbT => H; apply: leq_trans H _; by [apply: (prefix_size P2) | apply: (prefix_size P1)].",
            "VernacExtend",
            "b7d1edc77bd9391a5d59e3b9cd3a00c03736efb3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition hlook := [fun i => onth (heap_ctx i)].",
            "VernacDefinition",
            "b933ac1f51ae15ec7785d33114da5de7e4091edf"
        ],
        [
            "Definition plook := [fun i => onth (ptr_ctx i)].",
            "VernacDefinition",
            "7c7b74026abc486bb32985cd9287c1cd2975537b"
        ],
        [
            "Notation plook' i x := (odflt null (plook i x)).",
            "VernacSyntacticDefinition",
            "4e8913b08a0a0830b368fdc0d51d2396dcb453fa"
        ],
        [
            "Definition einterp i e := match e with Pts x d => if plook i x is Some x' then x' :-> Dyn.val d else Undef | Var h => if hlook i h is Some h' then h' else Undef end.",
            "VernacDefinition",
            "d6c4e4bcaabb1c63035e8d02caac86fa7db8e8ff"
        ],
        [
            "Fixpoint interp i t := if t is e :: t' then if t' is [::] then einterp i e else einterp i e :+ interp i t' else empty.",
            "VernacFixpoint",
            "ae844f7bc5151f170feedca4d6621aab7e6b141a"
        ],
        [
            "Lemma interp_cons i e t : interp i (e :: t) = einterp i e :+ interp i t.",
            "VernacStartTheoremProof",
            "916b26961a7580a8db06538b386ece31e1ca60a8"
        ],
        [
            "by case:t=>//; rewrite unh0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma interp_cat i t1 t2 : interp i (t1 ++ t2) = interp i t1 :+ interp i t2.",
            "VernacStartTheoremProof",
            "b1c400bc1808782ac3957208e430739355a4bd95"
        ],
        [
            "elim:t1 t2=>[/=|e t1 IH] t2; first by rewrite un0h.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite cat_cons !interp_cons IH unA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma interp_perm i : forall t1 t2, perm t1 t2 -> interp i t1 = interp i t2.",
            "VernacStartTheoremProof",
            "6d14f04564e03484e421838e35fa4efbdaeac1b2"
        ],
        [
            "apply: perm_ind=>[s1 s2 ->-> //|t1 t2 x t1' t2' ->->|x y t1' t2' t ->->|x y t].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite 2!interp_cons=>_ ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !interp_cons unCA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>_ -> _ ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma interp_subctx j k t: valid j t -> subctx j k -> interp j t = interp k t.",
            "VernacStartTheoremProof",
            "89cc869480fc49efbc2cb8d94774568f170c8484"
        ],
        [
            "move=>I [S1 S2]; elim:t I=>[//|e t IH].",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "rewrite 2!interp_cons valid_cons; case/andP=>H1.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "move/IH=>->; case: e H1=>[x d|v] /=; rewrite /valid /= !andbT; move/prefix_onth; by [move/(_ _ S2)=>-> | move/(_ _ S1)=>->].",
            "VernacExtend",
            "54b8537349fd883944258545bef7e1b57e8c7dca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive fact := eqH of synheap & synheap | eqD of dynamic & dynamic | eqX of nat & nat.",
            "VernacInductive",
            "9cd1de3a5e99136e366d54e25f66d5ab84ac55f0"
        ],
        [
            "Definition eval_fact i f := match f with | eqH h1 h2 => interp i h1 = interp i h2 | eqD d1 d2 => d1 = d2 | eqX x1 x2 => plook i x1 = plook i x2 end.",
            "VernacDefinition",
            "9d868636125f034c5b578dcfeb0ab6e653554752"
        ],
        [
            "Fixpoint eval i s := match s with | [:: f] => eval_fact i f | (f :: fs) => eval_fact i f /\\ eval i fs | [::] => True end.",
            "VernacFixpoint",
            "e15004fc76dd4d4928086eddaf8be499feef7a17"
        ],
        [
            "Fixpoint ptrs t : seq nat := if t is e :: t' then if e is Pts x _ then x :: (ptrs t') else ptrs t' else [::].",
            "VernacFixpoint",
            "08b1b0017e7d86ad5a620c32a478716be402ea2d"
        ],
        [
            "Fixpoint vars t : seq nat := if t is e :: t' then if e is Var h then h :: (vars t') else vars t' else [::].",
            "VernacFixpoint",
            "88711ef6eaf041d24170ef7ca1ce11ccc5a9daa2"
        ],
        [
            "Definition ptreq (x : nat) e := if e is Pts y _ then x == y else false.",
            "VernacDefinition",
            "13961f9383e37de110ce9f2d8745d829900abef5"
        ],
        [
            "Definition vareq (h : nat) e := if e is Var k then h == k else false.",
            "VernacDefinition",
            "9206f527c3376ae2e7efe0269b754dba8dd4f01f"
        ],
        [
            "Fixpoint pread x t := match t with Pts y d :: s => if x == y then some d else pread x s | e :: s => pread x s | _ => None end.",
            "VernacFixpoint",
            "4856d9f5854d08b2c69c165b2c810d49cfe82f17"
        ],
        [
            "Notation pread' x t := (odflt (dyn tt) (pread x t)).",
            "VernacSyntacticDefinition",
            "8636792eec493163bffcf42061b8b808ea4d3040"
        ],
        [
            "Definition pfree x t := filter (predC (ptreq x)) t.",
            "VernacDefinition",
            "8ea8f081b0ac70775cc454b41336ee1be223c238"
        ],
        [
            "Definition hfree h t := filter (predC (vareq h)) t.",
            "VernacDefinition",
            "730daa563fb26fe516716a9729314e5004c42a6d"
        ],
        [
            "Fixpoint cancel' (i : ctx) (t1 t2 r : synheap) (f : seq fact) : seq fact := match t1 with | [::] => match r, t2 with | [::], [::] => f | [:: Pts x d], [:: Pts x' d'] => [:: eqX x x', eqD d d' & f] | _ , _ => [:: eqH r t2 & f] end | Pts x d :: t1' => if x \\in ptrs t2 then cancel' i t1' (pfree x t2) r [:: eqD d (pread' x t2) & f] else cancel' i t1' t2 [:: Pts x d & r] f | Var h :: t1' => if h \\in vars t2 then cancel' i t1' (hfree h t2) r f else cancel' i t1' t2 [:: Var h & r] f end.",
            "VernacFixpoint",
            "8714c320f7713bd6fc1076cb2d98155520de8c13"
        ],
        [
            "Definition cancel i t1 t2 := cancel' i t1 t2 [::] [::].",
            "VernacDefinition",
            "ad49668f311492b111dd6e07684e6da989ae71e6"
        ],
        [
            "Lemma eval_cons i f s : eval i (f :: s) <-> eval_fact i f /\\ eval i s.",
            "VernacStartTheoremProof",
            "93ff96c69f27c944be69cb7abb7b59406b9aa981"
        ],
        [
            "by case:s=>//; split=>//; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eval_cat i s1 s2 : eval i (s1 ++ s2) <-> eval i s1 /\\ eval i s2.",
            "VernacStartTheoremProof",
            "b1324a181b74ecb54d5b40df24e9fb201fa1467a"
        ],
        [
            "elim: s1=>[/=|f s1 IH]; first tauto.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite cat_cons !eval_cons IH; tauto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eval_rcons i f s : eval i (rcons s f) <-> eval i s /\\ eval_fact i f.",
            "VernacStartTheoremProof",
            "7606b5bbf32cfeea4d8882d179df6f2dca38903a"
        ],
        [
            "by rewrite -cats1 eval_cat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pfreeE x t : pfree x t = if t is e :: t' then if e is Pts y d then if x == y then pfree x t' else e :: pfree x t' else e :: pfree x t' else [::].",
            "VernacStartTheoremProof",
            "7a58b71d4f01ee150c22571c9e1353a53dfd54a7"
        ],
        [
            "by elim:t=>[|e t IH] //; case: e=>[y d|] //=; case: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hfreeE h t : hfree h t = if t is e :: t' then if e is Var k then if h == k then hfree h t' else e :: hfree h t' else e :: hfree h t' else [::].",
            "VernacStartTheoremProof",
            "d7e29afbbf71a3abe7b0339e32c5a5fea550dfc4"
        ],
        [
            "by elim:t=>[|e t IH] //; case: e=>[| n] //=; case: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ptr_has x t : has (ptreq x) t = (x \\in ptrs t).",
            "VernacStartTheoremProof",
            "6ab0518ba51953d0112d9540cd99bd1fa3a1eba1"
        ],
        [
            "by elim:t=>[//|e t IH]; case: e=>[y d|//]; rewrite /= inE IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma var_has h t : has (vareq h) t = (h \\in vars t).",
            "VernacStartTheoremProof",
            "2d32a55d96c545fb1927d510cd3fd4e26d52351a"
        ],
        [
            "by elim:t=>[//|e t IH]; case: e=>[//|n]; rewrite /= inE IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pfreeN x t : x \\notin ptrs t -> pfree x t = t.",
            "VernacStartTheoremProof",
            "c791850c68f6bb83b5f772afb91b5a2b84589d80"
        ],
        [
            "rewrite -ptr_has; elim: t=>[|e t IH] //=; rewrite negb_or.",
            "VernacExtend",
            "c376f01ebc4f30ac37ca603296f6548f23fe4a48"
        ],
        [
            "by case/andP=>->; move/IH=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pfree_subdom i x t : def (interp i t) -> subdom (interp i (pfree x t)) (interp i t).",
            "VernacStartTheoremProof",
            "37eacbd5ce4af57cd21a1d168d5f6ba233332c9b"
        ],
        [
            "elim:t=>[//|e t IH]; rewrite interp_cons /= => D.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "case: ifP=>_; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite -(un0h (interp _ _)); apply: subdomUE=>//.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: subdom_emp; rewrite (defUnl D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: IH; rewrite (defUnr D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite interp_cons; apply: subdomUE=>//.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: subdom_refl; rewrite (defUnl D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: IH; rewrite (defUnr D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pfree_def i x t: def (interp i t) -> def (interp i (pfree x t)).",
            "VernacStartTheoremProof",
            "678bbf768cfbb592406871024037d6275fb72f23"
        ],
        [
            "by move/(pfree_subdom x); move/subdom_def; move/andP=>[-> _].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hfreeN h t : h \\notin vars t -> hfree h t = t.",
            "VernacStartTheoremProof",
            "56bd406858a7cc4e7e1298d988bcfe8bfd9e1b38"
        ],
        [
            "rewrite -var_has; elim: t=>[|e t IH] //=; rewrite negb_or.",
            "VernacExtend",
            "c376f01ebc4f30ac37ca603296f6548f23fe4a48"
        ],
        [
            "by case/andP=>->; move/IH=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vars_hfree (h1 h2 : nat) t : has (vareq h1) (hfree h2 t) = (h1 != h2) && (has (vareq h1) t).",
            "VernacStartTheoremProof",
            "f0cbac7adbcbf5e7c1e7bbdc70c8ca7ae6a76f34"
        ],
        [
            "elim:t=>[|e t IH]; first by rewrite andbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: e=>[//|n /=].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: ifP=>/= E; rewrite IH; case: (h1 =P n)=>// ->; rewrite eq_sym E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hfree_subdom i h t : def (interp i t) -> {subset dom (interp i (hfree h t)) <= dom (interp i t)}.",
            "VernacStartTheoremProof",
            "19dabbd6701838ffd00ca698885679327182b7bc"
        ],
        [
            "elim:t=>[_ x //|e t IH]; rewrite interp_cons /= => D.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "case: ifP=>_; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>x; move/(IH (defUnr D)).",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by rewrite domUn !inE D orbC => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite interp_cons => x; rewrite !domUn !inE D /=.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "case/andP=>D2; case/orP; rewrite ?inE; first by move->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/(IH (defUnr D) x)=>->; rewrite orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hfree_subdom' i h t : def (interp i t) -> subdom (interp i (hfree h t)) (interp i t).",
            "VernacStartTheoremProof",
            "b83c222c0b8671f0f8e9ac64ef38dc00b20399ec"
        ],
        [
            "elim:t=>[//|e t IH]; rewrite interp_cons /= => D.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "case: ifP=>_; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite -(un0h (interp _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: subdomUE=>//.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: subdom_emp; rewrite (defUnl D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: IH; rewrite (defUnr D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite interp_cons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: subdomUE=>//.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: subdom_refl; rewrite (defUnl D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: IH; rewrite (defUnr D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hfree_def i h t : def (interp i t) -> def (interp i (hfree h t)).",
            "VernacStartTheoremProof",
            "ba9a37fd4a2b3466d30a13d3e5501bf5d45adcdb"
        ],
        [
            "by move/(hfree_subdom' h); move/subdom_def; move/andP=>[-> _].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma count0_hfree v t: count (pred1 v) (vars t) = 0 -> hfree v t = t.",
            "VernacStartTheoremProof",
            "48a4204a3faa9ad14466e58958ef63326e7cbc20"
        ],
        [
            "by move/eqP; rewrite eqn0Ngt -has_count has_pred1; apply: hfreeN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma count1_hfree v t : count (pred1 v) (vars t) = 1 -> perm (Var v :: hfree v t) t.",
            "VernacStartTheoremProof",
            "7bd7e740bbdf3995a4944c21dd7e9ce6525bfc24"
        ],
        [
            "elim: t=>[//|w t IH]; case: w=>[x d H|v'] /=.",
            "VernacExtend",
            "df63f96bedbb0673aecb42521d90011325a86c94"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite perm_sym -(cat1s (Var v) _).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: perm_cons_cat_consL.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite perm_sym; apply: IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eq_sym; case: eqP=>[->|_] /=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite -{2}[1]addn0; move/eqP; rewrite eqn_addl; move/eqP.",
            "VernacExtend",
            "167d522d3692415b2103f7027c3ef892dc09b539"
        ],
        [
            "by move/count0_hfree=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite add0n; move/IH=>H; rewrite perm_sym -(cat1s (Var v)).",
            "VernacExtend",
            "3051a4e8bb68166b140398e2c3c2862857447428"
        ],
        [
            "by apply: perm_cons_cat_consL; rewrite perm_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma countN_varfree i v t : count (pred1 v) (vars t) > 1 -> def (interp i t) -> hlook i v = Some empty.",
            "VernacStartTheoremProof",
            "fc04a05a4e5e6c87d01521f3a592c12989ce27ad"
        ],
        [
            "elim: t v=>[//|[x d|h] s IH] v H; rewrite interp_cons=>D.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: IH=>//; apply defUnr in D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /= in H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (h =P v) H=>[<-|_]; last by move/IH; apply; apply: defUnr D.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case H2: (count _ _)=>[//|[|n]] _; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: IH; [rewrite H2 | apply: defUnr D].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/count1_hfree: H2=>H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -(interp_perm i H2) interp_cons unA in D.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (defUnl D); rewrite defUnhh /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: (onth _ _)=>// a; move/empP=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_hfree i v t : hlook i v = Some empty -> interp i (hfree v t) = interp i t.",
            "VernacStartTheoremProof",
            "1087ce4690d05970aec150eeb43d19a5f76c66fb"
        ],
        [
            "elim: t=>[//|[x d|v'] t IH] H1; rewrite [hfree _ _]/=.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite 2!interp_cons IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ifP=>H2; first by rewrite 2!interp_cons IH.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /= in H1; rewrite -(eqP (negbFE H2)) {}IH //= H1.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by case: t=>[//|e s]; rewrite un0h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domR i (x : nat) t : def (interp i t) -> has (ptreq x) t -> plook' i x \\in dom (interp i t).",
            "VernacStartTheoremProof",
            "a97edca5c80ece958f425613073de86ab8516cb6"
        ],
        [
            "elim: t x=>[//|e1 t IH] x; rewrite interp_cons /= => D.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "case/orP=>E; last by rewrite domUn !inE D (IH _ (defUnr D) E) orbT.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite domUn !inE D.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: e1 E D=>//= y d; move/eqP=><-; move/defUnl.",
            "VernacExtend",
            "ad9703cddf270cbbe68f7e9fd9d34355dc053bfe"
        ],
        [
            "case: (onth _ _)=>[a|] //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite defPt domPt !inE eqxx => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookR i t x : def (interp i t) -> has (ptreq x) t -> look (plook' i x) (interp i t) = pread' x t.",
            "VernacStartTheoremProof",
            "35c050345d0b58d51ee291bcd647a49169501da3"
        ],
        [
            "elim: t x=>[//|e1 t IH] x; rewrite interp_cons /=.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "case F: (ptreq x e1)=>/= D E; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (lookUnr _ D) (domR (defUnr D) E) (IH _ (defUnr D) E).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: e1 F {D}=>//= y d ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: e1 {E} F D=>// y d; move/eqP=><-{y} D.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "rewrite (_ : einterp i _ = interp i [:: Pts x d]) // in D *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (lookUnl _ D) (domR (defUnl D)) /= ?eqxx //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/defUnl: D=>/=; case: (onth _ x)=>[a|] //.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "rewrite defPt lookU /= eqxx => ->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -dyn_eta.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defR i t : def (interp i t) -> uniq (ptrs t).",
            "VernacStartTheoremProof",
            "7c5180a905d0a28dc329ad59b83a536723970a64"
        ],
        [
            "elim: t=>[//|e t IH]; rewrite interp_cons /=.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "case: e=>[y d|n] /=; case E: (onth _ _)=>[a|//]; last by move/defUnr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: defUn=>// D1 D2 L _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite (IH D2) andbT -ptr_has.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: contra (L a _); first by move/(domR D2); rewrite /= E.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite defPt domPt !inE eqxx in D1 *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeR i t x : def (interp i t) -> has (ptreq x) t -> free (plook' i x) (interp i t) = interp i (pfree x t).",
            "VernacStartTheoremProof",
            "49b7a25a062132278df6c1c0dce27615c24c8115"
        ],
        [
            "elim: t=>[//|e t IH]; rewrite interp_cons=>D /=.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "case E: (ptreq x e)=>/=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>H; rewrite freeUnl; first by rewrite (IH (defUnr D) H) -{1}interp_cons.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: defUn D=>// D1 D2 L _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply: (contra (L (plook' i x))); rewrite negbK.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: domR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: e E D=>//= y d; move/eqP=><-{y}.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "case F: (onth _ x)=>[a|//] D _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite freePtUn //= pfreeN // -ptr_has.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: contra (defPt_dom D); move/(domR (defPt_def D)).",
            "VernacExtend",
            "86bb0d3d5ae27b38aac15f69d532d662f1518315"
        ],
        [
            "by rewrite /= F.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel_sound' i sh1 sh2 unm fs : interp i sh2 = interp i (sh1 ++ unm) -> def (interp i sh2) -> eval i fs -> eval i (cancel' i sh1 sh2 unm fs).",
            "VernacStartTheoremProof",
            "1c02c5764296f32240dff551a051b7b18e05cf91"
        ],
        [
            "elim: sh1 sh2 unm fs=>[|[sx sd|sv] sh1 IH] sh2 unm fs.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: unm=>[|[sxu sdu|svu] [|[sxu' sud'|svu'] unm']]; case: sh2=>[|[sx2 sd2|sv2] sh2'] /=; try by case: fs.",
            "VernacExtend",
            "2906658ba5c272b473591a601bf1dd046b109346"
        ],
        [
            "case A: (onth _ sx2)=>[a|]; last by case sh2'.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case D: (onth _ sxu)=>[d|]; last by move->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: sh2'=>[/= H2 Def|e sh2']; last by rewrite /= A D =>->; case: fs.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (pts_injP Def H2)=>[H3 H4].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite A D H3; split=>//.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "case: sdu sd2 H4 H2 Def=>b1 b2 [c1 c2] /= H4; move: b2.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "rewrite -H4 H3=> b2 H2 Def.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by move/(pts_inj Def): H2=>->; case: fs H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite [eval _ (cancel' _ _ _ _ _)]/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ifP=>H1 H2 D E; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: (IH _ _ _ _ D E).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite H2 2!interp_cat 2!interp_cons unCA unA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: IH; last 2 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: pfree_def.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite -ptr_has in H1; rewrite /= -(lookR D H1).",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "rewrite H2 interp_cons /= in D *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case A: (onth _ sx)=>[a|//] in D *.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (lookPtUn D) -dyn_eta; case: fs E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -ptr_has in H1; rewrite -(freeR D H1).",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "rewrite H2 cat_cons /= in D *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case A: (onth _ sx)=>[a /=|] in D *; last by case: (sh1 ++ unm) D.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (sh1 ++ unm) D=>[|c s D]; last by rewrite (freePtUn D).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite freeU defU eq_refl; case/andP; move/negbTE=>-> _; rewrite free0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite [eval _ (cancel' _ _ _ _ _)]/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ifP=>H1 H2 D E; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: (IH _ _ _ _ D E).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite H2 2!interp_cat 2!interp_cons unCA unA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: IH=>//; last by apply: hfree_def.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -has_pred1 has_count in H1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case H1: (count _ _) H1=>[//|[|n]] _; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "have H3: count (pred1 sv) (vars sh2) > 1 by rewrite H1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (countN_varfree H3 D)=>/= H4.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite (empty_hfree sh2 H4) H2 interp_cons /= H4 un0h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/(interp_perm i): (count1_hfree H1)=>H6.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -H6 cat_cons 2!interp_cons in H2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -H6 interp_cons H2 in D.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (unhKr D H2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel_sound i t1 t2 : def (interp i t1) -> interp i t1 = interp i t2 -> eval i (cancel i t1 t2).",
            "VernacStartTheoremProof",
            "165e3242ef97ffffe25332c2c5cb5515c5fe9265"
        ],
        [
            "by move=>D H; apply: cancel_sound'=>//; rewrite -H // cats0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "subctx_refl",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subctx_trans",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "move=>[H1 P1][H2 P2].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by split; [move: H2|move: P2]; apply: prefix_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_cons",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "case: e=>[x d|v] /=; rewrite /valid /=; by [rewrite !andbT andbA | rewrite andbT andbCA].",
                        "VernacExtend",
                        "e28621cab80b25b1d7725a7bfcb68d6908230c48"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_ptrs_cat",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "elim: t1 t2=>[//|v t1 IH /=] t2.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by case: v=>[x d | v]; rewrite IH // andbA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_heaps_cat",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "elim: t1 t2=>[//|v t1 IH /=] t2.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by case: v=>[x d | v]; rewrite IH // andbA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_cat",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "rewrite /valid valid_ptrs_cat valid_heaps_cat.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!andbA -!(andbCA (valid_ptrs j t2)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_subctx",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "case: i j=>hs1 xs1 [hs2 xs2][/= P1 P2].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "elim: t=>[//|e t IH]; rewrite -cat1s 2!valid_cat.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "case/andP=>H; move/IH=>->.",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "case: e H=>[x d| v]; rewrite /valid /= !andbT => H; apply: leq_trans H _; by [apply: (prefix_size P2) | apply: (prefix_size P1)].",
                        "VernacExtend",
                        "b7d1edc77bd9391a5d59e3b9cd3a00c03736efb3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "interp_cons",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "by case:t=>//; rewrite unh0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "interp_cat",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "elim:t1 t2=>[/=|e t1 IH] t2; first by rewrite un0h.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite cat_cons !interp_cons IH unA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "interp_perm",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "apply: perm_ind=>[s1 s2 ->-> //|t1 t2 x t1' t2' ->->|x y t1' t2' t ->->|x y t].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite 2!interp_cons=>_ ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite !interp_cons unCA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>_ -> _ ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "interp_subctx",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "move=>I [S1 S2]; elim:t I=>[//|e t IH].",
                        "VernacExtend",
                        "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!interp_cons valid_cons; case/andP=>H1.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "move/IH=>->; case: e H1=>[x d|v] /=; rewrite /valid /= !andbT; move/prefix_onth; by [move/(_ _ S2)=>-> | move/(_ _ S1)=>->].",
                        "VernacExtend",
                        "54b8537349fd883944258545bef7e1b57e8c7dca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_cons",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "by case:s=>//; split=>//; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_cat",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "elim: s1=>[/=|f s1 IH]; first tauto.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite cat_cons !eval_cons IH; tauto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_rcons",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "by rewrite -cats1 eval_cat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pfreeE",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "by elim:t=>[|e t IH] //; case: e=>[y d|] //=; case: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hfreeE",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "by elim:t=>[|e t IH] //; case: e=>[| n] //=; case: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptr_has",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "by elim:t=>[//|e t IH]; case: e=>[y d|//]; rewrite /= inE IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "var_has",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "by elim:t=>[//|e t IH]; case: e=>[//|n]; rewrite /= inE IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pfreeN",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "rewrite -ptr_has; elim: t=>[|e t IH] //=; rewrite negb_or.",
                        "VernacExtend",
                        "c376f01ebc4f30ac37ca603296f6548f23fe4a48"
                    ]
                },
                {
                    "command": [
                        "by case/andP=>->; move/IH=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pfree_def",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "by move/(pfree_subdom x); move/subdom_def; move/andP=>[-> _].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hfreeN",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "rewrite -var_has; elim: t=>[|e t IH] //=; rewrite negb_or.",
                        "VernacExtend",
                        "c376f01ebc4f30ac37ca603296f6548f23fe4a48"
                    ]
                },
                {
                    "command": [
                        "by case/andP=>->; move/IH=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vars_hfree",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "elim:t=>[|e t IH]; first by rewrite andbF.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: e=>[//|n /=].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>/= E; rewrite IH; case: (h1 =P n)=>// ->; rewrite eq_sym E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hfree_subdom",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "elim:t=>[_ x //|e t IH]; rewrite interp_cons /= => D.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>_; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>x; move/(IH (defUnr D)).",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "by rewrite domUn !inE D orbC => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite interp_cons => x; rewrite !domUn !inE D /=.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "case/andP=>D2; case/orP; rewrite ?inE; first by move->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/(IH (defUnr D) x)=>->; rewrite orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hfree_def",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "by move/(hfree_subdom' h); move/subdom_def; move/andP=>[-> _].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "count0_hfree",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "by move/eqP; rewrite eqn0Ngt -has_count has_pred1; apply: hfreeN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countN_varfree",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "elim: t v=>[//|[x d|h] s IH] v H; rewrite interp_cons=>D.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: IH=>//; apply defUnr in D.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /= in H.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (h =P v) H=>[<-|_]; last by move/IH; apply; apply: defUnr D.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case H2: (count _ _)=>[//|[|n]] _; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: IH; [rewrite H2 | apply: defUnr D].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/count1_hfree: H2=>H2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -(interp_perm i H2) interp_cons unA in D.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move: (defUnl D); rewrite defUnhh /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: (onth _ _)=>// a; move/empP=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_hfree",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "elim: t=>[//|[x d|v'] t IH] H1; rewrite [hfree _ _]/=.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite 2!interp_cons IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>H2; first by rewrite 2!interp_cons IH.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /= in H1; rewrite -(eqP (negbFE H2)) {}IH //= H1.",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "by case: t=>[//|e s]; rewrite un0h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domR",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "elim: t x=>[//|e1 t IH] x; rewrite interp_cons /= => D.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "case/orP=>E; last by rewrite domUn !inE D (IH _ (defUnr D) E) orbT.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite domUn !inE D.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: e1 E D=>//= y d; move/eqP=><-; move/defUnl.",
                        "VernacExtend",
                        "ad9703cddf270cbbe68f7e9fd9d34355dc053bfe"
                    ]
                },
                {
                    "command": [
                        "case: (onth _ _)=>[a|] //=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite defPt domPt !inE eqxx => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookR",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "elim: t x=>[//|e1 t IH] x; rewrite interp_cons /=.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "case F: (ptreq x e1)=>/= D E; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (lookUnr _ D) (domR (defUnr D) E) (IH _ (defUnr D) E).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: e1 F {D}=>//= y d ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: e1 {E} F D=>// y d; move/eqP=><-{y} D.",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "rewrite (_ : einterp i _ = interp i [:: Pts x d]) // in D *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (lookUnl _ D) (domR (defUnl D)) /= ?eqxx //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move/defUnl: D=>/=; case: (onth _ x)=>[a|] //.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "rewrite defPt lookU /= eqxx => ->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -dyn_eta.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeR",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "elim: t=>[//|e t IH]; rewrite interp_cons=>D /=.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "case E: (ptreq x e)=>/=; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>H; rewrite freeUnl; first by rewrite (IH (defUnr D) H) -{1}interp_cons.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: defUn D=>// D1 D2 L _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply: (contra (L (plook' i x))); rewrite negbK.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: domR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: e E D=>//= y d; move/eqP=><-{y}.",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "case F: (onth _ x)=>[a|//] D _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite freePtUn //= pfreeN // -ptr_has.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: contra (defPt_dom D); move/(domR (defPt_def D)).",
                        "VernacExtend",
                        "86bb0d3d5ae27b38aac15f69d532d662f1518315"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= F.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel_sound",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "by move=>D H; apply: cancel_sound'=>//; rewrite -H // cats0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}