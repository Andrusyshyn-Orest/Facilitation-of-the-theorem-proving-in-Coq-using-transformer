{
    "filename": "theories/indom.v",
    "coq_project": "lemma-overloading",
    "vernac_cmds": [
        [
            "From mathcomp Require Import ssreflect ssrbool ssrnat eqtype.",
            "VernacRequire",
            "3bb9db3915e910ea9c9d17a4ba19505e27f70348"
        ],
        [
            "From LemmaOverloading Require Import heaps.",
            "VernacRequire",
            "89bc2192e60a07376f6345025938c646bb89169b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Structure tagged_heap := Tag {untag :> heap}.",
            "VernacInductive",
            "78ffb08fbf82f2f0cf05ad82201cd9898f22f4d3"
        ],
        [
            "Definition right_tag := Tag.",
            "VernacDefinition",
            "341b71e4014ecb24a028fcd300a27d73ff63f4ab"
        ],
        [
            "Definition left_tag := right_tag.",
            "VernacDefinition",
            "a0f17276bbc813bf242adf8b3b79028f514e4935"
        ],
        [
            "Canonical Structure found_tag h := left_tag h.",
            "VernacDefinition",
            "ca072cbac7371982421cb16be6a742bc167ac3e4"
        ],
        [
            "Definition invariant x (h : tagged_heap) := def (untag h) -> x \\in dom (untag h).",
            "VernacDefinition",
            "5f85217ca5aec48443d614ed14ec5fb68d9c9273"
        ],
        [
            "Structure find (x : ptr) := Form { heap_of :> tagged_heap; _ : invariant x heap_of }.",
            "VernacInductive",
            "daadac124ffa8c874a6f17405bbc9538a74317cc"
        ],
        [
            "Lemma found_pf A x (v : A) : invariant x (found_tag (x :-> v)).",
            "VernacStartTheoremProof",
            "1c267cb81bc3bbb5dc1d7d98e9415ae688ef8a23"
        ],
        [
            "by rewrite /invariant defPt domPt inE /= eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure ptr_found A x (v : A) := @Form x (found_tag (x :-> v)) (@found_pf A x v).",
            "VernacDefinition",
            "5294e5ed827a9a0cce6dabeb0dacccc57fa70692"
        ],
        [
            "Lemma left_pf x (h : heap) (f : find x) : invariant x (left_tag (untag (heap_of f) :+ h)).",
            "VernacStartTheoremProof",
            "c674f83ae3170bbe40747f772aa0903898bcf15a"
        ],
        [
            "case:f=>[[i]]; rewrite /invariant /= => H D.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by rewrite domUn !inE /= D (H (defUnl D)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure search_left x (h : heap) (f : find x) := @Form x (left_tag (untag (heap_of f) :+ h)) (@left_pf x h f).",
            "VernacDefinition",
            "6439645ae7a4aaca648054286cf2c49726ca20a7"
        ],
        [
            "Lemma right_pf x (h : heap) (f : find x) : invariant x (right_tag (h :+ untag (heap_of f))).",
            "VernacStartTheoremProof",
            "3c870b67d99aa3a9a87bf8dab696583f9efce99f"
        ],
        [
            "case: f=>[[i]]; rewrite /invariant /= => H D.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by rewrite domUn !inE /= D (H (defUnr D)) orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure search_right x (h : heap) (f : find x) := @Form x (right_tag (h :+ untag (heap_of f))) (@right_pf x h f).",
            "VernacDefinition",
            "a54b6d8a04fcee7725f5cdc7911801352594548d"
        ],
        [
            "Lemma indom (x : ptr) (f : find x) : def f -> x \\in dom f.",
            "VernacStartTheoremProof",
            "6b50b65e643d64deb68b6ee07245fa5739e35cab"
        ],
        [
            "by case: f=>[[i]]; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Example ex1 A (x1 x2 : ptr) (v1 v2 : A) (h1 h2 : heap) : def (h1 :+ x1 :-> 1 :+ (x2 :-> 3 :+ empty)) -> if x2 \\in dom (h1 :+ x1 :-> 1 :+ (x2 :-> 3 :+ empty)) then 1 == 1 else 1 == 0.",
            "VernacDefinition",
            "18a94aad486d2518b032d8ef164e488586fa9b5c"
        ],
        [
            "move=>D.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite indom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Example ex2 A (x1 x2 : ptr) (v1 v2 : A) (h1 h2 : heap) : def (h1 :+ x1 :-> 1 :+ (x2 :-> 3 :+ empty)) -> if x2 \\in dom (h1 :+ x1 :-> 1 :+ (x2 :-> 3 :+ empty)) then 1 == 1 else 1 == 0.",
            "VernacDefinition",
            "ae0e8743e9e820e7cdef9899b3e487653f0f31d2"
        ],
        [
            "set H := _ :+ _ :+ (_ :+ _).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "move=>D.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite indom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "found_pf",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "by rewrite /invariant defPt domPt inE /= eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "left_pf",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "case:f=>[[i]]; rewrite /invariant /= => H D.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by rewrite domUn !inE /= D (H (defUnl D)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "right_pf",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "case: f=>[[i]]; rewrite /invariant /= => H D.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by rewrite domUn !inE /= D (H (defUnr D)) orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "indom",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "by case: f=>[[i]]; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex1",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "move=>D.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite indom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex2",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "set H := _ :+ _ :+ (_ :+ _).",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "move=>D.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite indom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}