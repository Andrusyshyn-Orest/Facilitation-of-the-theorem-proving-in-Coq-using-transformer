{
    "filename": "theories/xfind.v",
    "coq_project": "lemma-overloading",
    "vernac_cmds": [
        [
            "From mathcomp Require Import ssreflect ssrnat seq.",
            "VernacRequire",
            "0d66574243b267203bd48537a961e87cf5c59075"
        ],
        [
            "From LemmaOverloading Require Import prefix.",
            "VernacRequire",
            "9ae1ccdd1a014a753f2ca39f66bad97377df2e3e"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Section XFind.",
            "VernacBeginSection",
            "9910d7157f5e650be0902f634a5b91cb2c67bfb2"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Definition invariant s r i (e : A) := onth r i = Some e /\\ prefix s r.",
            "VernacDefinition",
            "386e4bfbf477691bef1f54283efda2bc2db721d9"
        ],
        [
            "Structure xtagged := XTag {xuntag :> A}.",
            "VernacInductive",
            "4092df470afbec09e4414da659182c9729c8906e"
        ],
        [
            "Definition extend_tag := XTag.",
            "VernacDefinition",
            "8f9729f1f9ad4e8b3aa8265ea443194ecc2a96a3"
        ],
        [
            "Definition recurse_tag := extend_tag.",
            "VernacDefinition",
            "6ceccf3652c5e1547578e3745404eadc5b2956f9"
        ],
        [
            "Canonical Structure found_tag x := recurse_tag x.",
            "VernacDefinition",
            "4654064f9cd54bfa5f6cd96ad8a455664fe4c702"
        ],
        [
            "Structure xfind (s r : seq A) (i : nat) := XFind { elem_of :> xtagged; _ : invariant s r i elem_of}.",
            "VernacInductive",
            "5540e0c93af9e30fc9742b0ccb73e5e1800d13ba"
        ],
        [
            "Arguments XFind : clear implicits.",
            "VernacArguments",
            "7b07ae9dc382ea0c6990b309e193589f8a22b1a1"
        ],
        [
            "Lemma found_pf x t : invariant (x :: t) (x :: t) 0 x.",
            "VernacStartTheoremProof",
            "690941a8d1e3b057f733d8c26d20104dd1a78969"
        ],
        [
            "by split; [|apply: prefix_refl].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure found_struct x t := XFind (x :: t) (x :: t) 0 (found_tag x) (found_pf x t).",
            "VernacDefinition",
            "f11388455c1d04661f186520182924c28cb58292"
        ],
        [
            "Lemma recurse_pf (i : nat) (y : A) (s r : seq A) (f : xfind s r i) : invariant (y :: s) (y :: r) i.+1 f.",
            "VernacStartTheoremProof",
            "8c51d980971bffbdd45f0d4833dad1c62c7ff9c9"
        ],
        [
            "by case:f=>[q [H1 H2]]; split; [|apply/prefix_cons].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure recurse_struct i y t r (f : xfind t r i) := XFind (y :: t) (y :: r) i.+1 (recurse_tag f) (recurse_pf y f).",
            "VernacDefinition",
            "d2e779c3c5aa9163b25729b766186f12337cf13e"
        ],
        [
            "Lemma extend_pf x : invariant [::] [:: x] 0 x.",
            "VernacStartTheoremProof",
            "6523ea942805a88acf329543e76fb67eee904b7a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure extend_struct x := XFind [::] [:: x] 0 (extend_tag x) (extend_pf x).",
            "VernacDefinition",
            "97b2ee58a3d50db3185e98d42e59ccf550e27b9f"
        ],
        [
            "End XFind.",
            "VernacEndSegment",
            "0b76ec9288e79c9d27d52f708ae7e3c0726b5e57"
        ],
        [
            "Lemma findme A (r s : seq A) i (f : xfind r s i) : onth s i = Some (xuntag (elem_of f)).",
            "VernacStartTheoremProof",
            "512ecb1ebe17235d36fbca0ac06103d07bd13115"
        ],
        [
            "by case: f=>e [/= ->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Example test A (x1 x2 x3 : A) : onth [:: x1; x2; x3] 2 = Some x3.",
            "VernacDefinition",
            "c0cf9b911751fe5d95dc6f37371861aef901c1a9"
        ],
        [
            "apply: findme.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Set Printing Implicit.",
            "VernacSetOption",
            "0b3a78850e564e8af30f9f97fdeb60ece75c74f2"
        ],
        [
            "Print test.",
            "VernacPrint",
            "0d1faadbd0b0ce628305c116cb83e6ebd15ab078"
        ],
        [
            "Example unit_test : forall A (x1 x2 x3 x y : A), (forall s r i (f : xfind s r i), nth x1 r i = xuntag f -> xuntag f = x) -> x = x.",
            "VernacDefinition",
            "99c7d49ec77e4f317c1e7851fdfbbcd3c0c051a6"
        ],
        [
            "move=>A x1 x2 x3 x y test_form.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: (test_form [::]).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply: (test_form [:: x1; x]).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply: (test_form [:: x1; x2; x; x3]).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply: (test_form [:: x1; x2; x3]).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ]
    ],
    "proofs": [
        {
            "name": "found_pf",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "by split; [|apply: prefix_refl].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "recurse_pf",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "by case:f=>[q [H1 H2]]; split; [|apply/prefix_cons].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extend_pf",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findme",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "by case: f=>e [/= ->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "apply: findme.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}