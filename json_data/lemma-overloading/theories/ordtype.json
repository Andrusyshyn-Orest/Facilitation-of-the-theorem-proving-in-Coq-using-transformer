{
    "filename": "theories/ordtype.v",
    "coq_project": "lemma-overloading",
    "vernac_cmds": [
        [
            "From mathcomp Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq fintype.",
            "VernacRequire",
            "fbff5ef52fe785291e0f02f561a902f9d739ed94"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module Ordered.",
            "VernacDefineModule",
            "ccbde1cf77803edbab9837555faf9003079dfabe"
        ],
        [
            "Section RawMixin.",
            "VernacBeginSection",
            "e3754b7890ceda7a1e9fc19bf1bba72600d4f111"
        ],
        [
            "Structure mixin_of (T : eqType) := Mixin {ordering : rel T; _ : irreflexive ordering; _ : transitive ordering; _ : forall x y, [|| ordering x y, x == y | ordering y x]}.",
            "VernacInductive",
            "b4d4490b0a3a3c8803e60d57470a376f1f0cc2ed"
        ],
        [
            "End RawMixin.",
            "VernacEndSegment",
            "d11e9719290e2271d84ac02cba6392743691af2c"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Record class_of (T : Type) := Class { base : Equality.class_of T; mixin : mixin_of (EqType T base)}.",
            "VernacInductive",
            "14b5fd34c6808d4724691b2c5cefa1c8923e1c0d"
        ],
        [
            "Local Coercion base : class_of >-> Equality.class_of.",
            "VernacCoercion",
            "24a98867dac3d3769e5a2ca16e45d82fb1a2b418"
        ],
        [
            "Structure type : Type := Pack {sort : Type; _ : class_of sort; _ : Type}.",
            "VernacInductive",
            "1f7de7d7485a5278baf8b7e9bc12865bb795c3a2"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c _ as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "1f4adccf23fd0f63d29abf28d1b185f093d8cf64"
        ],
        [
            "Definition clone c of phant_id class c := @Pack T c T.",
            "VernacDefinition",
            "cf926e300c6d83e83c3c8ca39f4408240dee4a1a"
        ],
        [
            "Definition pack b (m0 : mixin_of (EqType T b)) := fun m & phant_id m0 m => Pack (@Class T b m) T.",
            "VernacDefinition",
            "c44fd806620facc33dcafe0b54aad10feaabe0ec"
        ],
        [
            "Definition eqType := Eval hnf in EqType cT class.",
            "VernacDefinition",
            "ad138960b0c0c0b51899c5048e2e397015810719"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Coercion eqType : type >-> Equality.type.",
            "VernacCoercion",
            "58308c67b5e73c9e004d57c486a5071598a25e8c"
        ],
        [
            "Canonical Structure eqType.",
            "VernacCanonical",
            "94d377a582e1a0103a5433d7a4e69a08d73c53a9"
        ],
        [
            "Notation ordType := Ordered.type.",
            "VernacSyntacticDefinition",
            "894b5efd879a36f55c1696551586081660bc97f1"
        ],
        [
            "Notation OrdMixin := Mixin.",
            "VernacSyntacticDefinition",
            "22325f197dbbf1e16e39f610b807271e64cc4820"
        ],
        [
            "Notation OrdType T m := (@pack T _ m _ id).",
            "VernacSyntacticDefinition",
            "30683e093ec5ebe38f4382ac781cb3c3083b1f5f"
        ],
        [
            "Definition ord T : rel (sort T) := (ordering (mixin (class T))).",
            "VernacDefinition",
            "e9a3388da95e597d24aa8d68beb241b3fabec6ef"
        ],
        [
            "Notation \"[ 'ordType' 'of' T 'for' cT ]\" := (@clone T cT _ id) (at level 0, format \"[ 'ordType' 'of' T 'for' cT ]\") : form_scope.",
            "VernacNotation",
            "1bc95ed5764f5e0e7f8b3545e655dcb31411ae57"
        ],
        [
            "Notation \"[ 'ordType' 'of' T ]\" := (@clone T _ _ id) (at level 0, format \"[ 'ordType' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "294424429e658dd5d4823f459d419ae6f2dd8b6e"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Ordered.",
            "VernacEndSegment",
            "d9dd3e0ddf514e59b26969693db369327218c193"
        ],
        [
            "Export Ordered.Exports.",
            "VernacImport",
            "c1df7364784ac9e7279b6296bcaecfac1e1c20e9"
        ],
        [
            "Prenex Implicits ord.",
            "VernacExtend",
            "b8a9658cc99e92e8d9399bcbac27a691e8177290"
        ],
        [
            "Section Lemmas.",
            "VernacBeginSection",
            "bc0352a323bce6cad5770f6da0c5dc706036368a"
        ],
        [
            "Variable T : ordType.",
            "VernacAssumption",
            "ec8fc8cce3b63f43b888e2419d51811ec56ba2b1"
        ],
        [
            "Lemma irr : irreflexive (@ord T).",
            "VernacStartTheoremProof",
            "d1b56ab1606d8cb27e36b360e6e4a7c2c4ac1b90"
        ],
        [
            "by case: T=>s [b [m]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans : transitive (@ord T).",
            "VernacStartTheoremProof",
            "65634f64a6d54ca34511dd22e3395f546e1163f1"
        ],
        [
            "by case: T=>s [b [m]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma total (x y : T) : [|| ord x y, x == y | ord y x].",
            "VernacStartTheoremProof",
            "d6842973bc394d203bce5247a938ad20e4ff3d09"
        ],
        [
            "by case: T x y=>s [b [m]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nsym (x y : T) : ord x y -> ord y x -> False.",
            "VernacStartTheoremProof",
            "3a053238f8eff550a2f0ab768ae0b41b90fb1628"
        ],
        [
            "by move=>E1 E2; move: (trans E1 E2); rewrite irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Lemmas.",
            "VernacEndSegment",
            "85349701c463610f6190c3d153d6c22297511d32"
        ],
        [
            "Section Totality.",
            "VernacBeginSection",
            "9c95ccc24dbd8f4c8013d5ce49e915491aff2c33"
        ],
        [
            "Variable K : ordType.",
            "VernacAssumption",
            "a4165470846ab3e47c5e2c82812c93fe01c83821"
        ],
        [
            "CoInductive total_spec (x y : K) : bool -> bool -> bool -> Type := | total_spec_lt of ord x y : total_spec x y true false false | total_spec_eq of x == y : total_spec x y false true false | total_spec_gt of ord y x : total_spec x y false false true.",
            "VernacInductive",
            "4beaee47d63e8671868a26c0da1262e131f715e6"
        ],
        [
            "Lemma totalP x y : total_spec x y (ord x y) (x == y) (ord y x).",
            "VernacStartTheoremProof",
            "767d9b5b08a494e0d571916d60026e41dac7f1da"
        ],
        [
            "case H1: (x == y).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (eqP H1) irr; apply: total_spec_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case H2: (ord x y); case H3: (ord y x).",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: (nsym H2 H3).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: total_spec_lt H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: total_spec_gt H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move: (total x y); rewrite H1 H2 H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Totality.",
            "VernacEndSegment",
            "0eca0bdf9173b6a59d3e392b7611ebe5eb9ba1af"
        ],
        [
            "Section NatOrd.",
            "VernacBeginSection",
            "f542d8dce620c490368cb1f5302330d4df23053a"
        ],
        [
            "Lemma irr_ltn_nat : irreflexive ltn.",
            "VernacStartTheoremProof",
            "fe8730b3c48c402daaaacde1f236b6609799137a"
        ],
        [
            "by move=>x; rewrite /= ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans_ltn_nat : transitive ltn.",
            "VernacStartTheoremProof",
            "fe4f7c622b877b9657dfa86d90557e62fa67590f"
        ],
        [
            "by apply: ltn_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma total_ltn_nat : forall x y, [|| x < y, x == y | y < x].",
            "VernacStartTheoremProof",
            "cf4e4e4f7443df537b05162be78417b992f749a0"
        ],
        [
            "by move=>*; case: ltngtP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition nat_ordMixin := OrdMixin irr_ltn_nat trans_ltn_nat total_ltn_nat.",
            "VernacDefinition",
            "d8c2fd9193dd75331ca5d51496f13d70136e820d"
        ],
        [
            "Canonical Structure nat_ordType := OrdType nat nat_ordMixin.",
            "VernacDefinition",
            "35d7b42d9bcadb8db3f50fd0b086f01694202f75"
        ],
        [
            "End NatOrd.",
            "VernacEndSegment",
            "32770e7527e753d07bce44e616035bf9831e7879"
        ],
        [
            "Section ProdOrd.",
            "VernacBeginSection",
            "31295360bb2ffad052969005b9bb3e655a7040a1"
        ],
        [
            "Variables K T : ordType.",
            "VernacAssumption",
            "ee00dd19250369a455e2cf37a7a1793254604f87"
        ],
        [
            "Definition lex : rel (K * T) := fun x y => if x.1 == y.1 then ord x.2 y.2 else ord x.1 y.1.",
            "VernacDefinition",
            "2f55921f754c23ac6671d2f212d273d1f8c222a6"
        ],
        [
            "Lemma irr_lex : irreflexive lex.",
            "VernacStartTheoremProof",
            "b7ffeb3c97f8a3d32a641e4c977efb0d118e6600"
        ],
        [
            "by move=>x; rewrite /lex eq_refl irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans_lex : transitive lex.",
            "VernacStartTheoremProof",
            "1cfc13c5538b09064b1aada805ff1a09f7ee15f2"
        ],
        [
            "move=>[x1 x2][y1 y2][z1 z2]; rewrite /lex /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: ifP=>H1; first by rewrite (eqP H1); case: eqP=>// _; apply: trans.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ifP=>H2; first by rewrite (eqP H2) in H1 *; rewrite H1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ifP=>H3; last by apply: trans.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (eqP H3)=>R1; move/(nsym R1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma total_lex : forall x y, [|| lex x y, x == y | lex y x].",
            "VernacStartTheoremProof",
            "c4245bb97d68f303bb5a50928a9759f3600cfac6"
        ],
        [
            "move=>[x1 x2][y1 y2]; rewrite /lex /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: ifP=>H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (eqP H1) eq_refl -pair_eqE /= eq_refl /=; exact: total.",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "rewrite (eq_sym y1) -pair_eqE /= H1 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move: (total x1 y1); rewrite H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition prod_ordMixin := OrdMixin irr_lex trans_lex total_lex.",
            "VernacDefinition",
            "c9167b0f175cc2b5a236460be614b4082e75320d"
        ],
        [
            "Canonical Structure prod_ordType := Eval hnf in OrdType (K * T) prod_ordMixin.",
            "VernacDefinition",
            "fc3a8a0e56be55e9694f89e1583e72665bfc4278"
        ],
        [
            "End ProdOrd.",
            "VernacEndSegment",
            "ef1f0cc7ed8802332be1eb834ab4be21f30c4eaa"
        ],
        [
            "Section FinTypeOrd.",
            "VernacBeginSection",
            "16019f66841ba3878b3887ba0e4594c7cf0c3414"
        ],
        [
            "Variable T : finType.",
            "VernacAssumption",
            "6349381da4d33cbc2eeaf1bade38718e15f7a2c9"
        ],
        [
            "Definition ordf : rel T := fun x y => index x (enum T) < index y (enum T).",
            "VernacDefinition",
            "e27159b80df163ce1cf33896d064b57f6d21ba1e"
        ],
        [
            "Lemma irr_ordf : irreflexive ordf.",
            "VernacStartTheoremProof",
            "49ffe94b454414754ae0fc68069a1eaa4a88d7d4"
        ],
        [
            "by move=>x; rewrite /ordf ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans_ordf : transitive ordf.",
            "VernacStartTheoremProof",
            "00ba7dc07e8f42b2bb10c6831d1d01d0844c54b7"
        ],
        [
            "by move=>x y z; rewrite /ordf; apply: ltn_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma total_ordf : forall x y, [|| ordf x y, x == y | ordf y x].",
            "VernacStartTheoremProof",
            "6f49a9f8eaee98e0a86f1fc952d343440fc632e4"
        ],
        [
            "move=>x y; rewrite /ordf; case: ltngtP=>//= H; rewrite ?orbT ?orbF //.",
            "VernacExtend",
            "7cd855b46127b5e4e6df75c3fd6587c8d54114e3"
        ],
        [
            "have [H1 H2]: x \\in enum T /\\ y \\in enum T by rewrite !mem_enum.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(nth_index x H1) -(nth_index x H2) H eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fin_ordMixin := OrdMixin irr_ordf trans_ordf total_ordf.",
            "VernacDefinition",
            "c1357f6f6a29bb2432f6d1c7e58dff5b9863ce8a"
        ],
        [
            "End FinTypeOrd.",
            "VernacEndSegment",
            "4b4973aea5aff6ec96c021d230d719d73cb53454"
        ],
        [
            "Notation \"[ 'fin_ordMixin' 'of' T ]\" := (fin_ordMixin _ : Ordered.mixin_of [eqType of T]) (at level 0).",
            "VernacNotation",
            "eaa5bef12135589c50f708473c9cd36669544bdd"
        ],
        [
            "Definition ordinal_ordMixin n := [fin_ordMixin of 'I_n].",
            "VernacDefinition",
            "32e268600596696077ed8de5a61d8b4d9e451fe4"
        ],
        [
            "Canonical Structure ordinal_ordType n := OrdType 'I_n (ordinal_ordMixin n).",
            "VernacDefinition",
            "9a3994b62d16abc085f79dc6382b6073b591a73f"
        ]
    ],
    "proofs": [
        {
            "name": "irr",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "by case: T=>s [b [m]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "by case: T=>s [b [m]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "total",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "by case: T x y=>s [b [m]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nsym",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "by move=>E1 E2; move: (trans E1 E2); rewrite irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "totalP",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "case H1: (x == y).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqP H1) irr; apply: total_spec_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case H2: (ord x y); case H3: (ord y x).",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: (nsym H2 H3).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: total_spec_lt H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: total_spec_gt H3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move: (total x y); rewrite H1 H2 H3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_ltn_nat",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "by move=>x; rewrite /= ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans_ltn_nat",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "by apply: ltn_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "total_ltn_nat",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "by move=>*; case: ltngtP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_lex",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "by move=>x; rewrite /lex eq_refl irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans_lex",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "move=>[x1 x2][y1 y2][z1 z2]; rewrite /lex /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>H1; first by rewrite (eqP H1); case: eqP=>// _; apply: trans.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>H2; first by rewrite (eqP H2) in H1 *; rewrite H1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>H3; last by apply: trans.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqP H3)=>R1; move/(nsym R1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "total_lex",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "move=>[x1 x2][y1 y2]; rewrite /lex /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqP H1) eq_refl -pair_eqE /= eq_refl /=; exact: total.",
                        "VernacExtend",
                        "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_sym y1) -pair_eqE /= H1 /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by move: (total x1 y1); rewrite H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_ordf",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "by move=>x; rewrite /ordf ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans_ordf",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "by move=>x y z; rewrite /ordf; apply: ltn_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "total_ordf",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "move=>x y; rewrite /ordf; case: ltngtP=>//= H; rewrite ?orbT ?orbF //.",
                        "VernacExtend",
                        "7cd855b46127b5e4e6df75c3fd6587c8d54114e3"
                    ]
                },
                {
                    "command": [
                        "have [H1 H2]: x \\in enum T /\\ y \\in enum T by rewrite !mem_enum.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(nth_index x H1) -(nth_index x H2) H eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}