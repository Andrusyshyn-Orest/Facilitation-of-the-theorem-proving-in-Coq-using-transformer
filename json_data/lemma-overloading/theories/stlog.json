{
    "filename": "theories/stlog.v",
    "coq_project": "lemma-overloading",
    "vernac_cmds": [
        [
            "From mathcomp Require Import ssreflect ssrbool seq ssrfun.",
            "VernacRequire",
            "8509ead655d1e957e638a1b5b36c7c84f9cee169"
        ],
        [
            "From LemmaOverloading Require Import heaps rels hprop stmod stsep.",
            "VernacRequire",
            "70a7659712d38731e42cc01c3a38d5a7d11cbf5b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Lemma bnd_is_try (A B : Type) (s1 : spec A) (s2 : A -> spec B) i r : verify (try_s s1 s2 (fun y => fr (throw_s B y))) i r -> verify (bind_s s1 s2) i r.",
            "VernacStartTheoremProof",
            "87fe7f983583f135da4cf901c5ac4d4184f9c929"
        ],
        [
            "move=>H; apply: frame0=>D.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "case: {H D} (H D) (D)=>[[i1]][i2][->][[H1 [H2 H3]]] _ T D.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split=>[|y m].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split=>[|x m]; first by apply: fr_pre H1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/(locality D H1)=>m1 [->][_]; move/H2; apply: fr_pre.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>{D} H; apply: T=>h1 h2 E.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite {i1 i2 H1 H2 H3}E in H * => D1 [H1][H2] H3.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: H=>[[x][h][]|[e][->]]; move/(locality D1 H1); case=>[m1][->][D2] T1; move: (T1); [move/H2 | move/H3]=>H4.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>T2; case/(locality D2 H4): (T2)=>m3 [->][D3].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by exists m3; do !split=>//; left; exists x; exists m1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists m1; do !split=>//; right; exists e; exists m1; split=>//.",
            "VernacExtend",
            "f0a7c674e4ea2b89f2238fae51e5debcefa07788"
        ],
        [
            "move=>j1 j2 E D _; rewrite {m1 D2}E in T1 D H4 *.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "exists j1; do !split=>//; move=>k1 k2 -> D2 ->.",
            "VernacExtend",
            "dc06057af619ae790f7e5727d7a9d15d59d3102a"
        ],
        [
            "by exists empty; rewrite un0h; do !split=>//; apply: defUnr D2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation cont A := (ans A -> heap -> Prop).",
            "VernacSyntacticDefinition",
            "e1297e483f3398c28c924aefdfff41a8f6684b84"
        ],
        [
            "Section EvalDo.",
            "VernacBeginSection",
            "ff916f8db556c03407fcaeda1b26235bd0f782ef"
        ],
        [
            "Variables (A B : Type).",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Lemma val_do (s : spec A) i j (r : cont A) : s.1 i -> (forall x m, s.2 (Val x) i m -> def (m :+ j) -> r (Val x) (m :+ j)) -> (forall e m, s.2 (Exn e) i m -> def (m :+ j) -> r (Exn e) (m :+ j)) -> verify s (i :+ j) r.",
            "VernacStartTheoremProof",
            "9e84cb60635846b878ea7242cc15569dd809a148"
        ],
        [
            "move=>H1 H2 H3; apply: frame; apply: frame0; split=>//.",
            "VernacExtend",
            "65fe07316457534d25d79c677b3acc94836dc503"
        ],
        [
            "by case=>x m H4 D1 D2; [apply: H2 | apply: H3].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma try_do (s : spec A) s1 s2 i j (r : cont B) : s.1 i -> (forall x m, s.2 (Val x) i m -> verify (s1 x) (m :+ j) r) -> (forall e m, s.2 (Exn e) i m -> verify (s2 e) (m :+ j) r) -> verify (try_s s s1 s2) (i :+ j) r.",
            "VernacStartTheoremProof",
            "cfc16a743c22c4b841da60d43bc6fde4d9bb9311"
        ],
        [
            "move=>H1 H2 H3; apply: frame0=>D; split=>[|y m].",
            "VernacExtend",
            "b7d55d5cc9e609b184db748f6780e12224901e48"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; first by apply: fr_pre; exists i; exists empty; rewrite unh0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by split=>y m; case/(_ i j (erefl _) D H1)=>m1 [->][D2]; [case/H2 | case/H3].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case=>[[x]|[e]][h][]; case/(_ i j (erefl _) D H1)=>m1 [->][D2]; [case/H2 | case/H3]=>// _; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bnd_do (s : spec A) s2 i j (r : cont B) : s.1 i -> (forall x m, s.2 (Val x) i m -> verify (s2 x) (m :+ j) r) -> (forall e m, s.2 (Exn e) i m -> def (m :+ j) -> r (Exn e) (m :+ j)) -> verify (bind_s s s2) (i :+ j) r.",
            "VernacStartTheoremProof",
            "913edec2898a4d1dd3864d7b9ee024d6bab37bdb"
        ],
        [
            "move=>H1 H2 H3; apply: bnd_is_try.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply: try_do=>// e m H4; apply: frame0; apply: frame1=>_.",
            "VernacExtend",
            "6e77d60b6fe9e5152bca0bfa572494ee57c5c96d"
        ],
        [
            "by split=>// y m1 [->] -> _; rewrite un0h; apply: H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EvalDo.",
            "VernacEndSegment",
            "a5bae7bf4d7d94c9840c428d70623659654a2237"
        ],
        [
            "Section EvalReturn.",
            "VernacBeginSection",
            "094155cab6fc4d3fd1d06afe9177300902937985"
        ],
        [
            "Variables (A B : Type).",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Lemma val_ret v i (r : cont A) : (def i -> r (Val v) i) -> verify (ret_s v) i r.",
            "VernacStartTheoremProof",
            "8d981d0a9e1a63a7d10d07e8f33239530147f6e1"
        ],
        [
            "by rewrite -[i]un0h=>H; apply: val_do=>// x m [->] // [->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma try_ret s1 s2 (v : A) i (r : cont B) : verify (s1 v) i r -> verify (try_s (ret_s v) s1 s2) i r.",
            "VernacStartTheoremProof",
            "7021fc85934cef6a52dc1cb7d0ed3a1dc083cbdd"
        ],
        [
            "by rewrite -[i]un0h=>H; apply: try_do=>// x m [->] // [->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bnd_ret s (v : A) i (r : cont B) : verify (s v) i r -> verify (bind_s (ret_s v) s) i r.",
            "VernacStartTheoremProof",
            "ab41c8e7c7b5b34b24a4429286d019095f29e645"
        ],
        [
            "by move=>H; apply: bnd_is_try; apply: try_ret.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EvalReturn.",
            "VernacEndSegment",
            "8845abb4bb689953c1658dda3b787279b85d7c2e"
        ],
        [
            "Section EvalRead.",
            "VernacBeginSection",
            "efe31e28f697f8872bf559603d83a0e130b7dd8a"
        ],
        [
            "Variables (A B : Type).",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Lemma val_read v x i (r : cont A) : (def (x :-> v :+ i) -> r (Val v) (x :-> v :+ i)) -> verify (read_s A x) (x :-> v :+ i) r.",
            "VernacStartTheoremProof",
            "696ea9c7d91186ee524ae21e1dbbb56bccb6245c"
        ],
        [
            "move=>*; apply: val_do; first by [exists v]; by move=>y m [<-]; move/(_ v (erefl _))=>// [->].",
            "VernacExtend",
            "8aff43ac65be923d9259ebe8096135d59ef417ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma try_read s1 s2 v x i (r : cont B) : verify (s1 v) (x :-> v :+ i) r -> verify (try_s (read_s A x) s1 s2) (x :-> v :+ i) r.",
            "VernacStartTheoremProof",
            "77d95589948181b46dcad1774704f2e90391a505"
        ],
        [
            "move=>*; apply: try_do; first by [exists v]; by move=>y m [<-]; move/(_ v (erefl _))=>// [->].",
            "VernacExtend",
            "8aff43ac65be923d9259ebe8096135d59ef417ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bnd_read s v x i (r : cont B) : verify (s v) (x :-> v :+ i) r -> verify (bind_s (read_s A x) s) (x :-> v :+ i) r.",
            "VernacStartTheoremProof",
            "23b1dccb40f717cb8c0376c63e5ca22405b55513"
        ],
        [
            "by move=>*; apply: bnd_is_try; apply: try_read.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EvalRead.",
            "VernacEndSegment",
            "44b68f20aebbe878c360e3ac0fd88305bf8b8c4c"
        ],
        [
            "Section EvalWrite.",
            "VernacBeginSection",
            "16d0efb02df4aba8544698172e8a1bdc150588df"
        ],
        [
            "Variables (A B C : Type).",
            "VernacAssumption",
            "b984fd511dd9c74615ca3bfe47bac591ca7927d3"
        ],
        [
            "Lemma val_write (v : A) (w : B) x i (r : cont unit) : (def (x :-> v :+ i) -> r (Val tt) (x :-> v :+ i)) -> verify (write_s x v) (x :-> w :+ i) r.",
            "VernacStartTheoremProof",
            "26519c68083210a712fe69889fd91d76bc0941d9"
        ],
        [
            "move=>*; apply: val_do; first by [exists B; exists w]; by move=>y m [// [->] ->].",
            "VernacExtend",
            "8aff43ac65be923d9259ebe8096135d59ef417ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma try_write s1 s2 (v: A) (w : C) x i (r : cont B) : verify (s1 tt) (x :-> v :+ i) r -> verify (try_s (write_s x v) s1 s2) (x :-> w :+ i) r.",
            "VernacStartTheoremProof",
            "ba1d34b304410a5082eddf2c0a97acefba245d6a"
        ],
        [
            "move=>*; apply: try_do; first by [exists C; exists w]; by move=>y m [// [->] ->].",
            "VernacExtend",
            "8aff43ac65be923d9259ebe8096135d59ef417ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bnd_write s (v : A) (w : C) x i (r : cont B) : verify (s tt) (x :-> v :+ i) r -> verify (bind_s (write_s x v) s) (x :-> w :+ i) r.",
            "VernacStartTheoremProof",
            "5e4f7d10068f1b26c2c378edbd2b0f254e115f9c"
        ],
        [
            "by move=>*; apply: bnd_is_try; apply: try_write.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EvalWrite.",
            "VernacEndSegment",
            "2e7733e35a6b90d3257100f0fc6c6c588714f907"
        ],
        [
            "Section EvalAlloc.",
            "VernacBeginSection",
            "6e336a8dbc723bb8177ee1e5fd0504348904a3ab"
        ],
        [
            "Variables (A B : Type).",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Lemma val_alloc (v : A) i (r : cont ptr) : (forall x, def (x :-> v :+ i) -> r (Val x) (x :-> v :+ i)) -> verify (alloc_s v) i r.",
            "VernacStartTheoremProof",
            "d64bdfbe8e30a6a275e569c14a5fc708110a5523"
        ],
        [
            "move=>H; rewrite -[i]un0h; apply: val_do=>//; by move=>y m [x][//][-> ->]; apply: H.",
            "VernacExtend",
            "9322552880bb8f4826974e8a26c7b8a9b9c50015"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma try_alloc s1 s2 (v : A) i (r : cont B) : (forall x, verify (s1 x) (x :-> v :+ i) r) -> verify (try_s (alloc_s v) s1 s2) i r.",
            "VernacStartTheoremProof",
            "a650032e5ea940b008e5f4d54e057c3ce40d00da"
        ],
        [
            "move=>H; rewrite -[i]un0h; apply: try_do=>//; by move=>y m [x][//][-> ->]; apply: H.",
            "VernacExtend",
            "9322552880bb8f4826974e8a26c7b8a9b9c50015"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bnd_alloc s (v : A) i (r : cont B) : (forall x, verify (s x) (x :-> v :+ i) r) -> verify (bind_s (alloc_s v) s) i r.",
            "VernacStartTheoremProof",
            "aee8e548e9eee2b4162b6b96bb524b0fbed9e0ad"
        ],
        [
            "by move=>*; apply: bnd_is_try; apply: try_alloc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EvalAlloc.",
            "VernacEndSegment",
            "ea032eb59faf41349ac858ed84c8e8540bf77b73"
        ],
        [
            "Section EvalBlockAlloc.",
            "VernacBeginSection",
            "911a82493e9d84dccda626f8c08ced16851d64f3"
        ],
        [
            "Variables (A B : Type).",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Lemma val_allocb (v : A) n i (r : cont ptr) : (forall x, def (updi x (nseq n v) :+ i) -> r (Val x) (updi x (nseq n v) :+ i)) -> verify (allocb_s v n) i r.",
            "VernacStartTheoremProof",
            "20fd695df0ab0e654b934b72c9ea1d0cd9019a15"
        ],
        [
            "move=>H; rewrite -[i]un0h; apply: val_do=>//; by move=>y m [x][//][->]->; apply: H.",
            "VernacExtend",
            "9322552880bb8f4826974e8a26c7b8a9b9c50015"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma try_allocb s1 s2 (v : A) n i (r : cont B) : (forall x, verify (s1 x) (updi x (nseq n v) :+ i) r) -> verify (try_s (allocb_s v n) s1 s2) i r.",
            "VernacStartTheoremProof",
            "d5995b73da6ad6341ac5e653d46cadc5b089ef54"
        ],
        [
            "move=>H; rewrite -[i]un0h; apply: try_do=>//; by move=>y m [x][//][->]->; apply: H.",
            "VernacExtend",
            "9322552880bb8f4826974e8a26c7b8a9b9c50015"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bnd_allocb s (v : A) n i (r : cont B) : (forall x, verify (s x) (updi x (nseq n v) :+ i) r) -> verify (bind_s (allocb_s v n) s) i r.",
            "VernacStartTheoremProof",
            "1c00ecedde4b91ef87a36d4a8eb9c6126cdb508b"
        ],
        [
            "by move=>*; apply: bnd_is_try; apply: try_allocb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EvalBlockAlloc.",
            "VernacEndSegment",
            "fe6e0adeb472c7df4dca976bfdfa57094622b021"
        ],
        [
            "Section EvalDealloc.",
            "VernacBeginSection",
            "cf4c4e9de946c18eb5adbcb72dd037f40e4acc06"
        ],
        [
            "Variables (A B : Type).",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Lemma val_dealloc (v : A) x i (r : cont unit) : (def i -> r (Val tt) i) -> verify (dealloc_s x) (x :-> v :+ i) r.",
            "VernacStartTheoremProof",
            "7198b5e57c5e81d8d66a96312a478dbfe304447d"
        ],
        [
            "move=>H; apply: val_do; first by [exists A; exists v]; by move=>y m [//][->] ->; rewrite un0h.",
            "VernacExtend",
            "8aff43ac65be923d9259ebe8096135d59ef417ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma try_dealloc s1 s2 (v : B) x i (r : cont A) : verify (s1 tt) i r -> verify (try_s (dealloc_s x) s1 s2) (x :-> v :+ i) r.",
            "VernacStartTheoremProof",
            "11a5121c2a421788499ca9b8442d690f31e2d6c0"
        ],
        [
            "move=>H; apply: try_do; first by [exists B; exists v]; by move=>y m [//][->] ->; rewrite un0h.",
            "VernacExtend",
            "8aff43ac65be923d9259ebe8096135d59ef417ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bnd_dealloc s (v : B) x i (r : cont A) : verify (s tt) i r -> verify (bind_s (dealloc_s x) s) (x :-> v :+ i) r.",
            "VernacStartTheoremProof",
            "0e0ad3861116e247b6a625c50dc0e58ad32492c4"
        ],
        [
            "by move=>*; apply: bnd_is_try; apply: try_dealloc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EvalDealloc.",
            "VernacEndSegment",
            "9cd57cbcbf46ab3c0de480389402352461a68c86"
        ],
        [
            "Section EvalThrow.",
            "VernacBeginSection",
            "d0288fc72969567c241ce1040a269c949f3e30db"
        ],
        [
            "Variables (A B : Type).",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Lemma val_throw e i (r : cont A) : (def i -> r (Exn e) i) -> verify (throw_s A e) i r.",
            "VernacStartTheoremProof",
            "d84cfb6438bc03f02b62cb3e16d99b0455c8ead3"
        ],
        [
            "move=>H; rewrite -[i]un0h; apply: val_do=>//; by move=>y m [->] // [->]; rewrite un0h.",
            "VernacExtend",
            "9322552880bb8f4826974e8a26c7b8a9b9c50015"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma try_throw s1 s2 e i (r : cont B) : verify (s2 e) i r -> verify (try_s (throw_s A e) s1 s2) i r.",
            "VernacStartTheoremProof",
            "589272c02e436ceaa95a4cadafebfb4f9b06034b"
        ],
        [
            "move=>H; rewrite -[i]un0h; apply: try_do=>//; by move=>y m [->] // [->]; rewrite un0h.",
            "VernacExtend",
            "9322552880bb8f4826974e8a26c7b8a9b9c50015"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bnd_throw s e i (r : cont B) : (def i -> r (Exn e) i) -> verify (bind_s (throw_s A e) s) i r.",
            "VernacStartTheoremProof",
            "99bd7a415dd570abb508084aa3c2b9504822b731"
        ],
        [
            "move=>H; apply: bnd_is_try; apply: try_throw; apply: frame0.",
            "VernacExtend",
            "29621d81bf85c762c569ad91eb2e12a43855954a"
        ],
        [
            "by rewrite -[i]un0h; apply: val_do=>// y m [->] // [->]; rewrite un0h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EvalThrow.",
            "VernacEndSegment",
            "8539436328d9217dd13bb6001ecffbd0e12450cd"
        ],
        [
            "Section EvalGhost.",
            "VernacBeginSection",
            "dfe759be804d0c4296351b9b99bb6cc8722e9741"
        ],
        [
            "Variables (A B C : Type) (t : C) (p : C -> Pred heap) (q : C -> post A).",
            "VernacAssumption",
            "faafdb24d75e7ea97a92892cec70ea06f7821f6e"
        ],
        [
            "Variables (s1 : A -> spec B) (s2 : exn -> spec B) (i j : heap) (P : Pred heap).",
            "VernacAssumption",
            "9094b352b838af5a87df5b14c886829980393107"
        ],
        [
            "Lemma val_gh (r : cont A) : let: s := (fun i => exists x, i \\In p x, fun y i m => forall x, i \\In p x -> q x y i m) in (forall x m, q t (Val x) i m -> def (m :+ j) -> r (Val x) (m :+ j)) -> (forall e m, q t (Exn e) i m -> def (m :+ j) -> r (Exn e) (m :+ j)) -> i \\In p t -> verify s (i :+ j) r.",
            "VernacStartTheoremProof",
            "9c96294eede5eca5e26f300680fec94d014abf30"
        ],
        [
            "by move=>*; apply: val_do=>/=; eauto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_gh1 (r : cont A) : let: Q := fun y i m => forall x, i \\In p x -> q x y i m in (i \\In p t -> P i) -> (forall x m, q t (Val x) i m -> def (m :+ j) -> r (Val x) (m :+ j)) -> (forall e m, q t (Exn e) i m -> def (m :+ j) -> r (Exn e) (m :+ j)) -> i \\In p t -> verify (P, Q) (i :+ j) r.",
            "VernacStartTheoremProof",
            "02011cc85c1725947d246d57d5cf58521fba4235"
        ],
        [
            "by move=>*; apply: val_do=>/=; eauto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma try_gh (r : cont B) : let: s := (fun i => exists x, i \\In p x, fun y i m => forall x, i \\In p x -> q x y i m) in (forall x m, q t (Val x) i m -> verify (s1 x) (m :+ j) r) -> (forall e m, q t (Exn e) i m -> verify (s2 e) (m :+ j) r) -> i \\In p t -> verify (try_s s s1 s2) (i :+ j) r.",
            "VernacStartTheoremProof",
            "71ab514ea3454ffcf0a6a82b3a41a0891a65588a"
        ],
        [
            "by move=>*; apply: try_do=>/=; eauto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma try_gh1 (r : cont B) : let: Q := fun y i m => forall x, i \\In p x -> q x y i m in (i \\In p t -> P i) -> (forall x m, q t (Val x) i m -> verify (s1 x) (m :+ j) r) -> (forall e m, q t (Exn e) i m -> verify (s2 e) (m :+ j) r) -> i \\In p t -> verify (try_s (P, Q) s1 s2) (i :+ j) r.",
            "VernacStartTheoremProof",
            "34f022714bc4c6ad57144234addf790dac2f7b67"
        ],
        [
            "by move=>*; apply: try_do=>/=; eauto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bnd_gh (r : cont B) : let: s := (fun i => exists x, i \\In p x, fun y i m => forall x, i \\In p x -> q x y i m) in (forall x m, q t (Val x) i m -> verify (s1 x) (m :+ j) r) -> (forall e m, q t (Exn e) i m -> def (m :+ j) -> r (Exn e) (m :+ j)) -> i \\In p t -> verify (bind_s s s1) (i :+ j) r.",
            "VernacStartTheoremProof",
            "8b5a3c56a4fb8385e42e4924ab322df5a60348f5"
        ],
        [
            "by move=>*; apply: bnd_do=>/=; eauto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bnd_gh1 (r : cont B) : let: Q := fun y i m => forall x, i \\In p x -> q x y i m in (i \\In p t -> P i) -> (forall x m, q t (Val x) i m -> verify (s1 x) (m :+ j) r) -> (forall e m, q t (Exn e) i m -> def (m :+ j) -> r (Exn e) (m :+ j)) -> i \\In p t -> verify (bind_s (P, Q) s1) (i :+ j) r.",
            "VernacStartTheoremProof",
            "95911eadd448ecaba3b564cede31749da2eef4d8"
        ],
        [
            "by move=>*; apply: bnd_do=>/=; eauto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EvalGhost.",
            "VernacEndSegment",
            "0b986556d63073024e92f98bd5a484aaf79a1bf4"
        ],
        [
            "Definition pull (A : Type) x (v:A) := (unC (x :-> v), unCA (x :-> v)).",
            "VernacDefinition",
            "c2df9479c869a290a312223bd757a6c86f0ca064"
        ],
        [
            "Definition push (A : Type) x (v:A) := (unCA (x :-> v), unC (x :-> v)).",
            "VernacDefinition",
            "9e0fbb105bf5539464fe8ad2749e963c08ddc5fa"
        ],
        [
            "Ltac hstep := match goal with | |- verify ?h (ret_s _) _ => apply: val_ret | |- verify ?h (try_s (ret_s _) _ _) _ => apply: try_ret | |- verify ?h (bind_s (ret_s _) _) _ => apply: bnd_ret | |- verify ?h (read_s _ ?l) _ => rewrite -?(pull l); apply: val_read | |- verify ?h (try_s (read_s _ ?l) _ _) _ => rewrite -?(pull l); apply: try_read | |- verify (?h) (bind_s (read_s _ ?l) _) _ => rewrite -?(pull l); apply: bnd_read | |- verify (?h) (write_s ?l _) _ => rewrite -?(pull l); apply: val_write | |- verify (?h) (try_s (write_s ?l _) _ _) _ => rewrite -?(pull l); apply: try_write | |- verify (?h) (bind_s (write_s ?l _) _) _ => rewrite -?(pull l); apply: bnd_write | |- verify ?h (alloc_s _) _ => apply: val_alloc | |- verify ?h (try_s (alloc_s _) _ _) _ => apply: try_alloc | |- verify ?h (bind_s (alloc_s _) _) _ => apply: bnd_alloc | |- verify ?h (allocb_s _ _) _ => apply: val_allocb | |- verify ?h (try_s (allocb_s _ _) _ _) _ => apply: try_allocb | |- verify ?h (bind_s (allocb_s _ _) _) _ => apply: bnd_allocb | |- verify ?h (dealloc_s ?l) _ => rewrite -?(pull l); apply: val_dealloc | |- verify ?h (try_s (dealloc_s ?l) _ _) _ => rewrite -?(pull l); apply: try_dealloc | |- verify ?h (bind_s (dealloc_s ?l) _) _ => rewrite -?(pull l); apply: bnd_dealloc | |- verify ?h (throw_s _ _) _ => apply: val_throw | |- verify ?h (try_s (throw_s _ _) _ _) _ => apply: try_throw | |- verify ?h (bind_s (throw_s _ _) _) _ => apply: bnd_throw end.",
            "VernacExtend",
            "e35632c918121f8c3c6fea6eb82abc0225cf094d"
        ],
        [
            "Lemma swp : forall (A : Type) (v : A) x h, h \\In x :--> v <-> h = x :-> v.",
            "VernacStartTheoremProof",
            "616904ad555adc9fc23fd0040efc1ca13e17483c"
        ],
        [
            "by move=>A v x h; split; rewrite InE /pts /=; unlock.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opn : forall (A : Type) (v : A) x h, h \\In x :--> v <-> x :-> v = h.",
            "VernacStartTheoremProof",
            "5f16ac4138136673719736a843d973e588e6ccca"
        ],
        [
            "by move=>A v x h; split=>[|H]; rewrite InE /= /pts; unlock.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Prenex Implicits swp opn.",
            "VernacExtend",
            "65e53468092a598d450f55c84d592a5dcd3c58b1"
        ],
        [
            "Lemma blah (A : Type) (p : ptr) (l : A) : def (p :-> l) -> (p :-> l) \\In p :--> l.",
            "VernacStartTheoremProof",
            "5bb1e101794ef7660512a8413dab8ef0453a9005"
        ],
        [
            "by move=>H; apply/swp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Immediate blah : core.",
            "VernacHints",
            "6cd1e3764fa615f91a427ddcf3fd133ffa4b1f92"
        ],
        [
            "Lemma blah2 (A : Type) (v1 v2 : A) q : def (q :-> v1) -> v1 = v2 -> q :-> v1 \\In q :--> v2.",
            "VernacStartTheoremProof",
            "3c2a4ec4cf62a9c97cd7e51f303b37ff8c6db6d6"
        ],
        [
            "by move=>D E; apply/swp; rewrite E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Immediate blah2 : core.",
            "VernacHints",
            "35deb7d6df7397570a65f16134e745e09e4f3b3f"
        ],
        [
            "Ltac hauto := (do ?econstructor=>//; try by [defcheck; auto | eapply blah2; defcheck; auto])=>//.",
            "VernacExtend",
            "a2311bce6e251c94ada8daff4d2bca7f8dfd891c"
        ],
        [
            "Ltac hhauto := (do ?econstructor=>//; try by [heap_congr])=>//.",
            "VernacExtend",
            "f32f3e7bb4ca71f64ea35291e3d4d0fa96a7dda6"
        ],
        [
            "Ltac hdone := repeat progress hhauto=>//=.",
            "VernacExtend",
            "f54fc38a8303c8869eb3e679415bd0693bb33644"
        ],
        [
            "Ltac heval := do ![hstep | by hhauto].",
            "VernacExtend",
            "790453df87c00deac1187a85417f6b17071874af"
        ]
    ],
    "proofs": [
        {
            "name": "bnd_is_try",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "move=>H; apply: frame0=>D.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "case: {H D} (H D) (D)=>[[i1]][i2][->][[H1 [H2 H3]]] _ T D.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "split=>[|y m].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split=>[|x m]; first by apply: fr_pre H1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/(locality D H1)=>m1 [->][_]; move/H2; apply: fr_pre.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>{D} H; apply: T=>h1 h2 E.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "rewrite {i1 i2 H1 H2 H3}E in H * => D1 [H1][H2] H3.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: H=>[[x][h][]|[e][->]]; move/(locality D1 H1); case=>[m1][->][D2] T1; move: (T1); [move/H2 | move/H3]=>H4.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>T2; case/(locality D2 H4): (T2)=>m3 [->][D3].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by exists m3; do !split=>//; left; exists x; exists m1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists m1; do !split=>//; right; exists e; exists m1; split=>//.",
                        "VernacExtend",
                        "f0a7c674e4ea2b89f2238fae51e5debcefa07788"
                    ]
                },
                {
                    "command": [
                        "move=>j1 j2 E D _; rewrite {m1 D2}E in T1 D H4 *.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "exists j1; do !split=>//; move=>k1 k2 -> D2 ->.",
                        "VernacExtend",
                        "dc06057af619ae790f7e5727d7a9d15d59d3102a"
                    ]
                },
                {
                    "command": [
                        "by exists empty; rewrite un0h; do !split=>//; apply: defUnr D2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_do",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "move=>H1 H2 H3; apply: frame; apply: frame0; split=>//.",
                        "VernacExtend",
                        "65fe07316457534d25d79c677b3acc94836dc503"
                    ]
                },
                {
                    "command": [
                        "by case=>x m H4 D1 D2; [apply: H2 | apply: H3].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "try_do",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "move=>H1 H2 H3; apply: frame0=>D; split=>[|y m].",
                        "VernacExtend",
                        "b7d55d5cc9e609b184db748f6780e12224901e48"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; first by apply: fr_pre; exists i; exists empty; rewrite unh0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by split=>y m; case/(_ i j (erefl _) D H1)=>m1 [->][D2]; [case/H2 | case/H3].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case=>[[x]|[e]][h][]; case/(_ i j (erefl _) D H1)=>m1 [->][D2]; [case/H2 | case/H3]=>// _; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_ret",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "by rewrite -[i]un0h=>H; apply: val_do=>// x m [->] // [->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "try_ret",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "by rewrite -[i]un0h=>H; apply: try_do=>// x m [->] // [->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bnd_ret",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "by move=>H; apply: bnd_is_try; apply: try_ret.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_read",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "move=>*; apply: val_do; first by [exists v]; by move=>y m [<-]; move/(_ v (erefl _))=>// [->].",
                        "VernacExtend",
                        "8aff43ac65be923d9259ebe8096135d59ef417ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "try_read",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "move=>*; apply: try_do; first by [exists v]; by move=>y m [<-]; move/(_ v (erefl _))=>// [->].",
                        "VernacExtend",
                        "8aff43ac65be923d9259ebe8096135d59ef417ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bnd_read",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "by move=>*; apply: bnd_is_try; apply: try_read.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_write",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "move=>*; apply: val_do; first by [exists B; exists w]; by move=>y m [// [->] ->].",
                        "VernacExtend",
                        "8aff43ac65be923d9259ebe8096135d59ef417ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "try_write",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "move=>*; apply: try_do; first by [exists C; exists w]; by move=>y m [// [->] ->].",
                        "VernacExtend",
                        "8aff43ac65be923d9259ebe8096135d59ef417ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bnd_write",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "by move=>*; apply: bnd_is_try; apply: try_write.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_alloc",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "move=>H; rewrite -[i]un0h; apply: val_do=>//; by move=>y m [x][//][-> ->]; apply: H.",
                        "VernacExtend",
                        "9322552880bb8f4826974e8a26c7b8a9b9c50015"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "try_alloc",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "move=>H; rewrite -[i]un0h; apply: try_do=>//; by move=>y m [x][//][-> ->]; apply: H.",
                        "VernacExtend",
                        "9322552880bb8f4826974e8a26c7b8a9b9c50015"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bnd_alloc",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "by move=>*; apply: bnd_is_try; apply: try_alloc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_allocb",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "move=>H; rewrite -[i]un0h; apply: val_do=>//; by move=>y m [x][//][->]->; apply: H.",
                        "VernacExtend",
                        "9322552880bb8f4826974e8a26c7b8a9b9c50015"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "try_allocb",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "move=>H; rewrite -[i]un0h; apply: try_do=>//; by move=>y m [x][//][->]->; apply: H.",
                        "VernacExtend",
                        "9322552880bb8f4826974e8a26c7b8a9b9c50015"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bnd_allocb",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "by move=>*; apply: bnd_is_try; apply: try_allocb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_dealloc",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "move=>H; apply: val_do; first by [exists A; exists v]; by move=>y m [//][->] ->; rewrite un0h.",
                        "VernacExtend",
                        "8aff43ac65be923d9259ebe8096135d59ef417ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "try_dealloc",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "move=>H; apply: try_do; first by [exists B; exists v]; by move=>y m [//][->] ->; rewrite un0h.",
                        "VernacExtend",
                        "8aff43ac65be923d9259ebe8096135d59ef417ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bnd_dealloc",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "by move=>*; apply: bnd_is_try; apply: try_dealloc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_throw",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "move=>H; rewrite -[i]un0h; apply: val_do=>//; by move=>y m [->] // [->]; rewrite un0h.",
                        "VernacExtend",
                        "9322552880bb8f4826974e8a26c7b8a9b9c50015"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "try_throw",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "move=>H; rewrite -[i]un0h; apply: try_do=>//; by move=>y m [->] // [->]; rewrite un0h.",
                        "VernacExtend",
                        "9322552880bb8f4826974e8a26c7b8a9b9c50015"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_gh",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "by move=>*; apply: val_do=>/=; eauto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_gh1",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "by move=>*; apply: val_do=>/=; eauto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "try_gh",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "by move=>*; apply: try_do=>/=; eauto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "try_gh1",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "by move=>*; apply: try_do=>/=; eauto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bnd_gh",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "by move=>*; apply: bnd_do=>/=; eauto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bnd_gh1",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "by move=>*; apply: bnd_do=>/=; eauto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swp",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "by move=>A v x h; split; rewrite InE /pts /=; unlock.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opn",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "by move=>A v x h; split=>[|H]; rewrite InE /= /pts; unlock.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "blah",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "by move=>H; apply/swp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "blah2",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "by move=>D E; apply/swp; rewrite E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}