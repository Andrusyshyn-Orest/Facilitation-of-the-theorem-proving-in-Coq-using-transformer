{
    "filename": "theories/prelude.v",
    "coq_project": "lemma-overloading",
    "vernac_cmds": [
        [
            "From mathcomp Require Import ssreflect ssrbool eqtype ssrfun seq.",
            "VernacRequire",
            "0057cf8b06ddd88685897faa6574172edc439353"
        ],
        [
            "Require Import Eqdep ClassicalFacts.",
            "VernacRequire",
            "d076e08c816d8f2606947cf1b90702ce2946177c"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Axiom pext : forall p1 p2 : Prop, (p1 <-> p2) -> p1 = p2.",
            "VernacAssumption",
            "e68c6a56ec2299120aa8832e8db28ba8768cc299"
        ],
        [
            "Axiom fext : forall A (B : A -> Type) (f1 f2 : forall x, B x), (forall x, f1 x = f2 x) -> f1 = f2.",
            "VernacAssumption",
            "bf206daddc30a6d0ef76463c57f18143e549fe54"
        ],
        [
            "Lemma proof_irrelevance (P : Prop) (p1 p2 : P) : p1 = p2.",
            "VernacStartTheoremProof",
            "9675635453288bb2b324a6487dacac3884e0653d"
        ],
        [
            "by apply: ext_prop_dep_proof_irrel_cic; apply: pext.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eta A (B : A -> Type) (f : forall x, B x) : f = [eta f].",
            "VernacStartTheoremProof",
            "49559e1fbdf6ab7fc556ac4937bd7a0ec44bc521"
        ],
        [
            "by apply: fext.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ext A (B : A -> Type) (f1 f2 : forall x, B x) : f1 = f2 -> forall x, f1 x = f2 x.",
            "VernacStartTheoremProof",
            "cd03e34a7d7960c9550fa0878ce6d997990fb228"
        ],
        [
            "by move=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac add_morphism_tactic := SetoidTactics.add_morphism_tactic.",
            "VernacExtend",
            "acb2a19f805267ab601d0d8d3441b27528b8dab7"
        ],
        [
            "Notation \" R ===> R' \" := (@Morphisms.respectful _ _ R R') (right associativity, at level 55) : signature_scope.",
            "VernacNotation",
            "f16df03e8b075119f809787ebcde91522e3aef02"
        ],
        [
            "Definition inj_pair2 := @inj_pair2.",
            "VernacDefinition",
            "70ec7b95110f09d11eb809367fb07cd96cfa4022"
        ],
        [
            "Arguments inj_pair2 {U P p x y}.",
            "VernacArguments",
            "80cfaeb36e97ca2c90f847013309f6fb9a1e950e"
        ],
        [
            "Lemma inj_sval A P : injective (@sval A P).",
            "VernacStartTheoremProof",
            "d9d64ace5c687eafc391204322bffaa544ff1a71"
        ],
        [
            "move=>[x Hx][y Hy] /= H; move: Hx Hy; rewrite H=>*.",
            "VernacExtend",
            "59558e378570fadf944f573c466a34c761bc9b23"
        ],
        [
            "congr exist; apply: proof_irrelevance.",
            "VernacExtend",
            "385739dd8a4f73703d3828c61e1780a276bfaa31"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma svalE A (P : A -> Prop) x H : sval (exist P x H) = x.",
            "VernacStartTheoremProof",
            "22f4149273a28ac6439784668907dd9843f581e1"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sym A (x y : A) : x = y <-> y = x.",
            "VernacStartTheoremProof",
            "1a68aad3467b51dab823da895c31657fc895e99d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section HasSelect.",
            "VernacBeginSection",
            "ea7bc7a34ebb4194ea894fe72ca40b95467e46d9"
        ],
        [
            "Variables (A : eqType) (p : pred A).",
            "VernacAssumption",
            "62a50b1f9887a620af43c6f0df8f094990ca07a0"
        ],
        [
            "CoInductive has_spec (s : seq A) : bool -> Type := | has_true x of x \\in s & p x : has_spec s true | has_false of (all (predC p) s) : has_spec s false.",
            "VernacInductive",
            "994d97d4705a753ea53742cd5f6c5e11c38f6c2e"
        ],
        [
            "Lemma hasPx : forall s, has_spec s (has p s).",
            "VernacStartTheoremProof",
            "1b9d066a08f87e21559c5b0f28cf143c397fce97"
        ],
        [
            "elim=>[|x s IH] /=; first by apply: has_false.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite orbC; case: IH=>/=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>k H1; apply: has_true; rewrite inE H1 orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case E: (p x)=>H; last by apply: has_false; rewrite /= E H.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: has_true E; rewrite inE eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End HasSelect.",
            "VernacEndSegment",
            "25f9f1df7544058000dad7984eb0a6004c586865"
        ],
        [
            "Module Dyn.",
            "VernacDefineModule",
            "e02f22e5a6c110e7e9ecc18d1910d62bad5fe0b0"
        ],
        [
            "Record dynamic : Type := dyn {typ : Type; val : typ}.",
            "VernacInductive",
            "fab5504ff46871d5d55050516ee8aa6444d9bbae"
        ],
        [
            "End Dyn.",
            "VernacEndSegment",
            "6780181c5d5a4496ad654cbd74fd89a6f606da2b"
        ],
        [
            "Notation dynamic := Dyn.dynamic.",
            "VernacSyntacticDefinition",
            "157ddff85ecd0b51be64b34c61c4f05381c09495"
        ],
        [
            "Notation dyn := Dyn.dyn.",
            "VernacSyntacticDefinition",
            "640b4205c75494268dfc212f7b54c149fde1a48b"
        ],
        [
            "Lemma dyn_inj A (x y : A) : dyn x = dyn y -> x = y.",
            "VernacStartTheoremProof",
            "9e8ac9d606b71428a15b1515f9459b72d887263f"
        ],
        [
            "move=>[H]; apply: inj_pairT2 H.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dyn_eta d : d = dyn (Dyn.val d).",
            "VernacStartTheoremProof",
            "d68976bad76fd40e3d7eef01a3b9d4f0eb6e5708"
        ],
        [
            "by case:d.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dyn_injT A1 A2 (x1 : A1) (x2 : A2) : dyn x1 = dyn x2 -> A1 = A2.",
            "VernacStartTheoremProof",
            "b45c557e6e9faad4e876f2d794a6288c119972fe"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Prenex Implicits dyn_inj dyn_injT.",
            "VernacExtend",
            "7a6dc5435677d360564452d87b93de0cee5426df"
        ],
        [
            "Section Coercions.",
            "VernacBeginSection",
            "92b7880f1a0a88c77e57575ffdc3857c4cf74707"
        ],
        [
            "Variable (T : Type -> Type).",
            "VernacAssumption",
            "4170a54d3de41a0d4bcef441fcb9b3d1861817bc"
        ],
        [
            "Definition coerce A B (x : T A) : A = B -> T B := [eta eq_rect A [eta T] x B].",
            "VernacDefinition",
            "074a5736098aede13d833304faae6e0145397c85"
        ],
        [
            "Lemma eqc A (x : T A) (pf : A = A) : coerce x pf = x.",
            "VernacStartTheoremProof",
            "6820463108b0757f28ecd21fa8c09823d3f55241"
        ],
        [
            "by move:pf; apply: Streicher_K.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition jmeq A B (x : T A) (y : T B) := forall pf, coerce x pf = y.",
            "VernacDefinition",
            "6b5ff26d3f07079c2940ba8e46a4e7f1207ccf67"
        ],
        [
            "Lemma jmE A (x y : T A) : jmeq x y <-> x = y.",
            "VernacStartTheoremProof",
            "0166bf766eec0876fb234f12c06d132373325842"
        ],
        [
            "by split=>[|-> ?]; [move/(_ (erefl _))=><-|]; rewrite eqc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma jmeq_refl A (x : T A) : jmeq x x.",
            "VernacStartTheoremProof",
            "f4bb363a5d87f263b7f741c3b42998bea7adb774"
        ],
        [
            "by move=>pf; rewrite eqc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Coercions.",
            "VernacEndSegment",
            "361058d01a81ece0a0691b2eeebca17b3a369234"
        ],
        [
            "Hint Resolve jmeq_refl : core.",
            "VernacHints",
            "b579c5fa99aaac718e887a48ec7ef320c62ccdd4"
        ],
        [
            "Arguments jmeq T [A B] x y.",
            "VernacArguments",
            "dce1b2443f34e4af6dadd31714a855f8c62d8f47"
        ],
        [
            "Notation \"a =jm b\" := (jmeq id a b) (at level 50).",
            "VernacNotation",
            "2029189a9b8f02486651246685eef7f86e11a27e"
        ],
        [
            "Lemma contV B (P : B -> B -> Prop) : (forall x x', x =jm x' -> P x x') <-> forall x, P x x.",
            "VernacStartTheoremProof",
            "4bd7d8f6d9dbcc979f1c569c2eba033c703dd6e2"
        ],
        [
            "split; first by move=>H x; exact: (H x x (jmeq_refl _)).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>H x x'; move/jmE=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contVT B (P : B -> B -> Prop) : (forall x x', B = B -> x =jm x' -> P x x') <-> forall x, P x x.",
            "VernacStartTheoremProof",
            "3dac33e67f5fa804a549428957d5e673a8d940ac"
        ],
        [
            "split; first by move=>H x; exact: (H x x (erefl _) (jmeq_refl _)).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>H x x' _; move/jmE=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Coercions2.",
            "VernacBeginSection",
            "f2ae62926d97cbefb379eb3065b882477dff9720"
        ],
        [
            "Variable (T : Type -> Type -> Type).",
            "VernacAssumption",
            "3f1f5b19317ba3c93efe480fe985099047b6eaf9"
        ],
        [
            "Program Definition coerce2 A1 A2 B1 B2 (x : T A1 A2) : (A1, A2) = (B1, B2) -> T B1 B2.",
            "VernacDefinition",
            "d98c352953fa59acfedb9e1ca39dc94b67c6c3c0"
        ],
        [
            "by move =>[<- <-]; exact: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma eqc2 A1 A2 (x : T A1 A2) (pf : (A1, A2) = (A1, A2)) : coerce2 x pf = x.",
            "VernacStartTheoremProof",
            "560df0bd9684eea6cb170c61a3183894501c189b"
        ],
        [
            "by move:pf; apply: Streicher_K.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition jmeq2 A1 A2 B1 B2 (x : T A1 B1) (y : T A2 B2) := forall pf, coerce2 x pf = y.",
            "VernacDefinition",
            "9214bcbe89eef50852b578e86caaf145e4b1daef"
        ],
        [
            "Lemma jm2E A B (x y : T A B) : jmeq2 x y <-> x = y.",
            "VernacStartTheoremProof",
            "47186c192ae0f857e80e26fe3f6f2440363fcab1"
        ],
        [
            "by move=>*; split=>[|-> ?]; [move/(_ (erefl _))=><-|]; rewrite eqc2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma refl_jmeq2 A B (x : T A B) : jmeq2 x x.",
            "VernacStartTheoremProof",
            "802bb748086ff09144b5b90d8fb6aa832e73030c"
        ],
        [
            "by move=>pf; rewrite eqc2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Coercions2.",
            "VernacEndSegment",
            "892e68faee01c0e3ca5027a156be186b57006c3a"
        ],
        [
            "Hint Resolve refl_jmeq2 : core.",
            "VernacHints",
            "7fdae7a89649fd70a6e8c85e6661b2c56e229c49"
        ],
        [
            "Arguments jmeq2 T [A1 A2 B1 B2] x y.",
            "VernacArguments",
            "8d29b5a074dcea89c9a821b41fe164153e7ebb1c"
        ],
        [
            "Lemma compA A B C D (h : A -> B) (g : B -> C) (f : C -> D) : (f \\o g) \\o h = f \\o (g \\o h).",
            "VernacStartTheoremProof",
            "050d93fbfb94952aa3c8c522f6ef060d2a60b9c4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compf1 A B (f : A -> B) : f = f \\o id.",
            "VernacStartTheoremProof",
            "6eb1283db649218f6992e204f0c2a377423092a6"
        ],
        [
            "by apply: fext.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp1f A B (f : A -> B) : f = id \\o f.",
            "VernacStartTheoremProof",
            "a37ed012b2d3ce715abc5f4f38953208ba4f686c"
        ],
        [
            "by apply: fext.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fprod A1 A2 B1 B2 (f1 : A1 -> B1) (f2 : A2 -> B2) := fun (x : A1 * A2) => (f1 x.1, f2 x.2).",
            "VernacDefinition",
            "7acb6c3d6f2ae7358ff9f5504ada5cf4ba4b1945"
        ],
        [
            "Notation \"f1 \\* f2\" := (fprod f1 f2) (at level 45).",
            "VernacNotation",
            "f78c64eb44f6b4963a0bd895497379a753ab0dd0"
        ],
        [
            "Section Reorder.",
            "VernacBeginSection",
            "89641131468b3a7364ef86bbc7498d9e584dd636"
        ],
        [
            "Variables (A B C : Type).",
            "VernacAssumption",
            "b984fd511dd9c74615ca3bfe47bac591ca7927d3"
        ],
        [
            "Definition swap (x : A * B) := let: (x1, x2) := x in (x2, x1).",
            "VernacDefinition",
            "9d09b287fa271c3dbaa51b60445f7f66aad6e887"
        ],
        [
            "Definition rCA (x : A * (B * C)) := let: (x1, (x2, x3)) := x in (x2, (x1, x3)).",
            "VernacDefinition",
            "543c2e7372ab82285d7c04222847504b50b377b1"
        ],
        [
            "Definition rAC (x : (A * B) * C) := let: ((x1, x2), x3) := x in ((x1, x3), x2).",
            "VernacDefinition",
            "936fe3911b22163035a912e72e4e0c044c56a993"
        ],
        [
            "Definition rA (x : A * (B * C)) := let: (x1, (x2, x3)) := x in ((x1, x2), x3).",
            "VernacDefinition",
            "883d87dab59f3f3a377516c3d38d1fbaead0c726"
        ],
        [
            "Definition iA (x : (A * B) * C) := let: ((x1, x2), x3) := x in (x1, (x2, x3)).",
            "VernacDefinition",
            "48f9177086e2da6c4bc19d346527562921e10a34"
        ],
        [
            "Definition pL (x : A * B) := let: (x1, x2) := x in x1.",
            "VernacDefinition",
            "972c82fc3a1f7f5c526e7fe63b291b5a5b1c2918"
        ],
        [
            "Definition pR (x : A * B) := let: (x1, x2) := x in x2.",
            "VernacDefinition",
            "d22b62e3382c04e5dc52726b4e842005654659a0"
        ],
        [
            "End Reorder.",
            "VernacEndSegment",
            "481519d37630a64011a331de1939ec4d98a5d41f"
        ],
        [
            "Prenex Implicits swap rCA rAC rA iA pL pR.",
            "VernacExtend",
            "d3e80f154109163cb05e55258cd0c47432234e5a"
        ],
        [
            "Lemma swapI A B : swap \\o swap = @id (A * B).",
            "VernacStartTheoremProof",
            "d4b3eb52c054ebfa61e42ee2ac8fdc08d007fd34"
        ],
        [
            "by apply: fext; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rCAI A B C : rCA \\o (@rCA A B C) = id.",
            "VernacStartTheoremProof",
            "f12caaff751fbef35a375af6886ebfdf1e051007"
        ],
        [
            "by apply: fext; case=>a [b c].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rACI A B C : rAC \\o (@rAC A B C) = id.",
            "VernacStartTheoremProof",
            "f4cb1a010932debe6c1ed2285f1098645c6bf206"
        ],
        [
            "by apply: fext; case=>[[a]] b c.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma riA A B C : rA \\o (@iA A B C) = id.",
            "VernacStartTheoremProof",
            "2bb275865a94dc9e53e1970fc2004153e8a89b26"
        ],
        [
            "by apply: fext; case=>[[]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irA A B C : iA \\o (@rA A B C) = id.",
            "VernacStartTheoremProof",
            "a5360e1fd4f01f0e2c59a4cce5ad641576dbf469"
        ],
        [
            "by apply: fext; case=>a [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swap_prod A1 B1 A2 B2 (f1 : A1 -> B1) (f2 : A2 -> B2) : swap \\o f1 \\* f2 = f2 \\* f1 \\o swap.",
            "VernacStartTheoremProof",
            "c2055e4760c131e3520f295976ca8bb443152636"
        ],
        [
            "by apply: fext; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swap_rCA A B C : swap \\o (@rCA A B C) = rAC \\o rA.",
            "VernacStartTheoremProof",
            "e31e72ea119df08eaebc78d0cc73a19d46c6275b"
        ],
        [
            "by apply: fext; case=>x [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swap_rAC A B C : swap \\o (@rAC A B C) = rCA \\o iA.",
            "VernacStartTheoremProof",
            "57f86dd16b77d06992208807912ec5812ac43531"
        ],
        [
            "by apply: fext; case=>[[]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac rfe1 x1 := let H := fresh \"H\" in move=>H; move:H x1=>-> x1.",
            "VernacExtend",
            "e769fffa7238a70b6da02bf91be1268959190568"
        ],
        [
            "Ltac rfe2 x1 x2 := let H := fresh \"H\" in move=>H; move:H x1 x2=>-> x1 x2.",
            "VernacExtend",
            "61250fa5f3e08caf4d151dc8e728c9b82d7cc6c6"
        ],
        [
            "Ltac rfjm := move/jmE=>->.",
            "VernacExtend",
            "794a3001515bcf85b0a8638a081512d552352488"
        ],
        [
            "Ltac rfejm1 x1 := rfe1 x1; rfjm.",
            "VernacExtend",
            "41d1e395f5e84946d06f5e4e27ee0f243b7c7aaf"
        ],
        [
            "Ltac rfejm2 x1 x2 := rfe2 x1 x2; rfjm.",
            "VernacExtend",
            "d4eed8160f3da039931e6b16a6a4b6c744816c42"
        ],
        [
            "Ltac rfp := move/inj_pair2=>->.",
            "VernacExtend",
            "61a613e1fcdd5d62059484616ca96a395ed9909c"
        ],
        [
            "Ltac rfep1 x1 := rfe1 x1; rfp.",
            "VernacExtend",
            "387d160d9a3940184385707969e5488d60c0c1f6"
        ],
        [
            "Ltac rfep2 x1 x2 := rfe1 x2; rfp.",
            "VernacExtend",
            "db84d42246386957378ac226b534f8081140575c"
        ],
        [
            "Ltac rbe1 x1 := let H := fresh \"H\" in move=>H; move:H x1=><- x1.",
            "VernacExtend",
            "1c7ed069ba6338c8ad5354c090d6f87fb1116797"
        ],
        [
            "Ltac rbe2 x1 x2 := let H := fresh \"H\" in move=>H; move:H x1 x2=><- x1 x2.",
            "VernacExtend",
            "489f8409692bbcf68fd7038b2f259cfaa1a16b44"
        ],
        [
            "Ltac rbjm := move/jmE=><-.",
            "VernacExtend",
            "204dfa5a4e864117f4927c37e98831db909ea7e1"
        ],
        [
            "Ltac rbejm1 x1 := rbe1 x1; rbjm.",
            "VernacExtend",
            "233c304f2ecde0eba6c269c6173410c16dc47afb"
        ],
        [
            "Ltac rbejm2 x1 x2 := rbe2 x1 x2; rbjm.",
            "VernacExtend",
            "e4dc810e19262854ea504b7e41798caf42339ca8"
        ],
        [
            "Ltac rbp := move/inj_pair2=><-.",
            "VernacExtend",
            "1e8036fc14fe3c2aca0ddc0180f2afd8efbf88ac"
        ],
        [
            "Ltac rbep1 x1 := rbe1 x1; rbp.",
            "VernacExtend",
            "0ca14d63c41a216f82e0a05416693d0567ec8d76"
        ],
        [
            "Ltac rbep2 x1 x2 := rbe1 x2; rbp.",
            "VernacExtend",
            "1b9e9165e5e0db880bb9b9c82f2c0b9fe4a339ca"
        ],
        [
            "Reserved Notation \"[ /\\ P1 , P2 , P3 , P4 , P5 & P6 ]\" (at level 0, format \"'[hv' [ /\\ '[' P1 , '/' P2 , '/' P3 , '/' P4 , '/' P5 ']' '/ ' & P6 ] ']'\").",
            "VernacSyntaxExtension",
            "2da16cb06ba5d084a7dd3143ac36da478eaefc94"
        ],
        [
            "Reserved Notation \"[ \\/ P1 , P2 , P3 , P4 & P5 ]\" (at level 0, format \"'[hv' [ \\/ '[' P1 , '/' P2 , '/' P3 , '/' P4 ']' '/ ' & P5 ] ']'\").",
            "VernacSyntaxExtension",
            "da56addbe6ff5d5edc69ea8362a9ac6b7d0d7d6c"
        ],
        [
            "Reserved Notation \"[ \\/ P1 , P2 , P3 , P4 , P5 & P6 ]\" (at level 0, format \"'[hv' [ \\/ '[' P1 , '/' P2 , '/' P3 , '/' P4 , '/' P5 ']' '/ ' & P6 ] ']'\").",
            "VernacSyntaxExtension",
            "a5e7d63dd8322d89277507dd9ef00c3d2e81936f"
        ],
        [
            "Inductive and6 (P1 P2 P3 P4 P5 P6 : Prop) : Prop := And6 of P1 & P2 & P3 & P4 & P5 & P6.",
            "VernacInductive",
            "620d66fe89a40f8510d6ce624dfedfa95a0ef567"
        ],
        [
            "Inductive or5 (P1 P2 P3 P4 P5 : Prop) : Prop := Or51 of P1 | Or52 of P2 | Or53 of P3 | Or54 of P4 | Or55 of P5.",
            "VernacInductive",
            "1d39ee73c4ea7b67aaadf757cc28b9c242a922bd"
        ],
        [
            "Inductive or6 (P1 P2 P3 P4 P5 P6 : Prop) : Prop := Or61 of P1 | Or62 of P2 | Or63 of P3 | Or64 of P4 | Or65 of P5 | Or66 of P6.",
            "VernacInductive",
            "fca95668b0b6d52628c914aa834a13fe6b0bd47b"
        ],
        [
            "Notation \"[ /\\ P1 , P2 , P3 , P4 , P5 & P6 ]\" := (and6 P1 P2 P3 P4 P5 P6) : type_scope.",
            "VernacNotation",
            "606eda6b8cb390777be8ddbeb44773dfecf0a73f"
        ],
        [
            "Notation \"[ \\/ P1 , P2 , P3 , P4 | P5 ]\" := (or5 P1 P2 P3 P4 P5) : type_scope.",
            "VernacNotation",
            "56f90e6b154348f1e76ea9d199469d05f08597c8"
        ],
        [
            "Notation \"[ \\/ P1 , P2 , P3 , P4 , P5 | P6 ]\" := (or6 P1 P2 P3 P4 P5 P6) : type_scope.",
            "VernacNotation",
            "5ebdd8386c9238169c3e89daad10731c9605febb"
        ],
        [
            "Section ReflectConnectives.",
            "VernacBeginSection",
            "02f0c4f6eee9257dbdbf8211bfe308231ac2ac4e"
        ],
        [
            "Variable b1 b2 b3 b4 b5 b6 : bool.",
            "VernacAssumption",
            "c3c836e2a038c2b8df6517e7660c44819dee8a46"
        ],
        [
            "Lemma and6P : reflect [/\\ b1, b2, b3, b4, b5 & b6] [&& b1, b2, b3, b4, b5 & b6].",
            "VernacStartTheoremProof",
            "a0eccfdb82e04bb824f735b00a9308babed00556"
        ],
        [
            "by case b1; case b2; case b3; case b4; case b5; case b6; constructor; try by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or5P : reflect [\\/ b1, b2, b3, b4 | b5] [|| b1, b2, b3, b4 | b5].",
            "VernacStartTheoremProof",
            "7a1dc7529393185aedd7099bc0d0a218e589d1e2"
        ],
        [
            "case b1; first by constructor; constructor 1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b2; first by constructor; constructor 2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b3; first by constructor; constructor 3.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b4; first by constructor; constructor 4.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b5; first by constructor; constructor 5.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by constructor; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or6P : reflect [\\/ b1, b2, b3, b4, b5 | b6] [|| b1, b2, b3, b4, b5 | b6].",
            "VernacStartTheoremProof",
            "b2354a6490e357c5713d2a1d9cd48457e2bf7861"
        ],
        [
            "case b1; first by constructor; constructor 1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b2; first by constructor; constructor 2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b3; first by constructor; constructor 3.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b4; first by constructor; constructor 4.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b5; first by constructor; constructor 5.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b6; first by constructor; constructor 6.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by constructor; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ReflectConnectives.",
            "VernacEndSegment",
            "6ab67952e45b808517773c4b3855540440e05eed"
        ],
        [
            "Arguments and6P {b1 b2 b3 b4 b5 b6}.",
            "VernacArguments",
            "d42ee0cb7cd8588f22a20b7ff10c6dbfc1f49332"
        ],
        [
            "Arguments or5P {b1 b2 b3 b4 b5}.",
            "VernacArguments",
            "d449996334b22ffb03cba66a6bd5c281390c00db"
        ],
        [
            "Arguments or6P {b1 b2 b3 b4 b5 b6}.",
            "VernacArguments",
            "a9cb0b93cb22cffae2f0b7a3de5b38471e7bb747"
        ]
    ],
    "proofs": [
        {
            "name": "proof_irrelevance",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "by apply: ext_prop_dep_proof_irrel_cic; apply: pext.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eta",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "by apply: fext.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "by move=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_sval",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "move=>[x Hx][y Hy] /= H; move: Hx Hy; rewrite H=>*.",
                        "VernacExtend",
                        "59558e378570fadf944f573c466a34c761bc9b23"
                    ]
                },
                {
                    "command": [
                        "congr exist; apply: proof_irrelevance.",
                        "VernacExtend",
                        "385739dd8a4f73703d3828c61e1780a276bfaa31"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "svalE",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sym",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hasPx",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "elim=>[|x s IH] /=; first by apply: has_false.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite orbC; case: IH=>/=.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>k H1; apply: has_true; rewrite inE H1 orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case E: (p x)=>H; last by apply: has_false; rewrite /= E H.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: has_true E; rewrite inE eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dyn_inj",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "move=>[H]; apply: inj_pairT2 H.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dyn_eta",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "by case:d.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dyn_injT",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqc",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "by move:pf; apply: Streicher_K.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "jmE",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "by split=>[|-> ?]; [move/(_ (erefl _))=><-|]; rewrite eqc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "jmeq_refl",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "by move=>pf; rewrite eqc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contV",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "split; first by move=>H x; exact: (H x x (jmeq_refl _)).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=>H x x'; move/jmE=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contVT",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "split; first by move=>H x; exact: (H x x (erefl _) (jmeq_refl _)).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=>H x x' _; move/jmE=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coerce2",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "by move =>[<- <-]; exact: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eqc2",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "by move:pf; apply: Streicher_K.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "jm2E",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "by move=>*; split=>[|-> ?]; [move/(_ (erefl _))=><-|]; rewrite eqc2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "refl_jmeq2",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "by move=>pf; rewrite eqc2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compA",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compf1",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "by apply: fext.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp1f",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "by apply: fext.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapI",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "by apply: fext; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rCAI",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "by apply: fext; case=>a [b c].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rACI",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "by apply: fext; case=>[[a]] b c.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "riA",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "by apply: fext; case=>[[]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irA",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "by apply: fext; case=>a [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swap_prod",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "by apply: fext; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swap_rCA",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "by apply: fext; case=>x [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swap_rAC",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "by apply: fext; case=>[[]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and6P",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "by case b1; case b2; case b3; case b4; case b5; case b6; constructor; try by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or5P",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "case b1; first by constructor; constructor 1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b2; first by constructor; constructor 2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b3; first by constructor; constructor 3.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b4; first by constructor; constructor 4.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b5; first by constructor; constructor 5.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by constructor; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}