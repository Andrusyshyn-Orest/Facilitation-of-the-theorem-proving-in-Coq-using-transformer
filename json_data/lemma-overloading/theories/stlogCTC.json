{
    "filename": "theories/stlogCTC.v",
    "coq_project": "lemma-overloading",
    "vernac_cmds": [
        [
            "From mathcomp Require Import ssreflect ssrbool ssrfun.",
            "VernacRequire",
            "f57ec9817857a63b924bb53241da8b3253ea9104"
        ],
        [
            "From LemmaOverloading Require Import heaps stmod stsep stlog.",
            "VernacRequire",
            "a34d35725c74ff2f458ec408fb34371b1faac1b8"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Class Update (h1 h2 k1 k2 : heap) := { rest : heap; update1 : h1 = k1 :+ rest; update2 : h2 = k2 :+ rest}.",
            "VernacInductive",
            "803565a1c2f73d10b48d80072a2138bb27e403eb"
        ],
        [
            "Arguments update1 [h1 h2 k1 k2].",
            "VernacArguments",
            "d1b554dad5d4bd2dad8f3e3d9edfd929cb68ea10"
        ],
        [
            "Arguments update2 [h1 h2 k1 k2].",
            "VernacArguments",
            "e4a978ecf73ed36eeab0a96f77b9e24f7f86da56"
        ],
        [
            "Arguments rest [h1 h2 k1 k2].",
            "VernacArguments",
            "6ef72118e71ecc29bfc6683f2e2067244c4ddc16"
        ],
        [
            "Program Instance found_struct k1 k2 : Update k1 k2 k1 k2 | 1 := {| rest := empty |}.",
            "VernacInstance",
            "8ace28fad0cb153970e440e9c7879e349b189147"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by rewrite unh0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by rewrite unh0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Instance left_struct l h1 h2 k1 k2 (f : Update h1 h2 k1 k2) : Update (l :+ h1) (l :+ h2) k1 k2 | 2 := {| rest := (l :+ rest f) |}.",
            "VernacInstance",
            "8b7ce1a6b9b017872eccbbd4c32dee83a087a0b3"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "have H : h1 = k1 :+ (rest f) by eapply (update1 f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -unCA -H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "have H : h2 = k2 :+ (rest f) by eapply (update2 f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -unCA -H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Instance right_struct l h1 h2 k1 k2 (f : Update h1 h2 k1 k2) : Update (h1 :+ l) (h2 :+ l) k1 k2 | 2 := {| rest := (rest f :+ l) |}.",
            "VernacInstance",
            "bda82008c056da6cc2cce761db3b92edeea19933"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "have H : h1 = k1 :+ (rest f) by eapply (update1 f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite unA -H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "have H : h2 = k2 :+ (rest f) by eapply (update2 f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite unA -H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation cont A := (ans A -> heap -> Prop).",
            "VernacSyntacticDefinition",
            "68767e533b40528b2b26143ed88f4651540d6888"
        ],
        [
            "Section EvalWriteR.",
            "VernacBeginSection",
            "eb8de5f0672d6e8650753c174f60c9a02e5c4954"
        ],
        [
            "Variables (A B C : Type).",
            "VernacAssumption",
            "b984fd511dd9c74615ca3bfe47bac591ca7927d3"
        ],
        [
            "Lemma bnd_writeR s (v : A) (w : C) x h1 h2 (f : Update h1 h2 (x:->v) (x:->w)) (r : cont B) : verify (s tt) h1 r -> verify (bind_s (write_s x v) s) h2 r.",
            "VernacStartTheoremProof",
            "cd463ef336d93dd7ded45bf04fa208221aa09023"
        ],
        [
            "set l := rest f.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have H1 : h1 = (x :-> v) :+ l by eapply (update1 f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have H2 : h2 = (x :-> w) :+ l by eapply (update2 f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite H1 H2; apply: bnd_write.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EvalWriteR.",
            "VernacEndSegment",
            "ae90780e79d41a442f58b4e28a6e897ba6eba437"
        ],
        [
            "Section EvalDeallocR.",
            "VernacBeginSection",
            "ce4fb23d402ac4bd24f6298daff7ea08210e2f18"
        ],
        [
            "Variables (A B : Type).",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Lemma bnd_deallocR s (v : A) x h1 h2 (f : Update h1 h2 empty (x:->v)) (r : cont B) : verify (s tt) h1 r -> verify (bind_s (dealloc_s x) s) h2 r.",
            "VernacStartTheoremProof",
            "2a24055265b49b25d8982d77b27ce71c74f99fe9"
        ],
        [
            "set l := rest f.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have H1 : h1 = empty :+ l by eapply (update1 f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have H2 : h2 = (x :-> v) :+ l by eapply (update2 f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite H1 H2 un0h; apply bnd_dealloc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EvalDeallocR.",
            "VernacEndSegment",
            "1b24fe35ffbcaa3062890094cd7d4c351b18cfa2"
        ],
        [
            "Class Find1 (h k : heap) := { rest1 : heap; heq1 : h = k :+ rest1}.",
            "VernacInductive",
            "2cd6cda026eb2a2c5a0be3eb0976660b1d60271a"
        ],
        [
            "Program Instance ffound_struct1 k : Find1 k k | 1 := {| rest1 := empty|}.",
            "VernacInstance",
            "889162e0b0344a3499b0b54f53e9ff7c94c2bf01"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by rewrite unh0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Instance fleft_struct1 l r k (f : Find1 l k) : Find1 (l :+ r) k | 2 := {| rest1 := rest1 :+ r |}.",
            "VernacInstance",
            "2058cf83b3d76e3a9934b86ba14e77041ed27f5b"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by rewrite unA -heq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Instance fright_struct1 l r k (f : Find1 r k) : Find1 (l :+ r) k | 2 := {| rest1 := l :+ rest1 |}.",
            "VernacInstance",
            "ded3ad70e44ceba48cd22b5c6c90e19739ce24dc"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by rewrite unCA -heq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section EvalDoR.",
            "VernacBeginSection",
            "f9b8626273b39f78fb672f8e53121c537bcc8b83"
        ],
        [
            "Variables (A B : Type).",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Lemma val_doR (s : spec A) h i (r : cont A) (f : Find1 h i) : s.1 i -> (forall x m, s.2 (Val x) i m -> def (m :+ rest1) -> r (Val x) (m :+ rest1)) -> (forall e m, s.2 (Exn e) i m -> def (m :+ rest1) -> r (Exn e) (m :+ rest1)) -> verify s h r.",
            "VernacStartTheoremProof",
            "1a816bcb0e0a8af897ad66e16446ce7d8a359015"
        ],
        [
            "move=>H1 H2 H3.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "generalize (heq1 (h:=h))=>H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (val_do (i:=i) (j:=rest1)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EvalDoR.",
            "VernacEndSegment",
            "bdd848cd46070be84daa69c3e8af5e3110a6f7c8"
        ],
        [
            "Example ex_val_do (s : spec nat) (r : cont nat) (x y : ptr) : s.1 (y:->2) -> (forall x' m, s.2 (Val x') (y:->2) m -> def (x:->1:+m) -> r (Val x') (x:->1:+m)) -> (forall e m, s.2 (Exn e) (y:->2) m -> def (x:->1:+m) -> r (Exn e) (x:->1:+m)) -> verify s (x:->1 :+ y:->2) r.",
            "VernacDefinition",
            "0552aa6d2fa078903d8a095e17452a65a9be7a8b"
        ],
        [
            "move=>H1 H2 H3.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: (val_doR _ (i:=y:->2))=>//=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>x'' m''; rewrite unh0 unC; apply: H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>x'' m''; rewrite unh0 unC; apply: H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Example ex_bwd i x1 x2 (e : unit -> spec nat) q: verify (e tt) (i :+ (x1 :-> 1 :+ x2 :-> 4)) q -> verify (bind_s (write_s x2 4) e) (i :+ (x1 :-> 1 :+ x2 :-> 2)) q.",
            "VernacDefinition",
            "a9e29cfd31afbfc974b5188725fe5018e90b1009"
        ],
        [
            "move=>H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: bnd_writeR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Example ex_fwd i x1 x2 (e : unit -> spec nat) q: verify (e tt) (i :+ (x1 :-> 1 :+ x2 :-> 4)) q -> verify (bind_s (write_s x2 4) e) (i :+ (x1 :-> 1 :+ x2 :-> 2)) q.",
            "VernacDefinition",
            "218b1149d56aa883dd4887c94eac2b5b0c0e518a"
        ],
        [
            "move=>H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: (bnd_writeR _ H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Example ex_dealloc_bwd i x1 x2 (e : unit -> spec nat) q: verify (e tt) (i :+ (x1 :-> 1)) q -> verify (bind_s (dealloc_s x2) e) (i :+ (x1 :-> 1 :+ x2 :-> 2)) q.",
            "VernacDefinition",
            "86ba4412dd6a771dcd027ed3c350626506d90f2b"
        ],
        [
            "move=>H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: bnd_deallocR; rewrite unh0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ]
    ],
    "proofs": [
        {
            "name": "found_struct_obligation_1",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "by rewrite unh0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "found_struct_obligation_2",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "by rewrite unh0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "left_struct_obligation_1",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "have H : h1 = k1 :+ (rest f) by eapply (update1 f).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -unCA -H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "left_struct_obligation_2",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "have H : h2 = k2 :+ (rest f) by eapply (update2 f).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -unCA -H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "right_struct_obligation_1",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "have H : h1 = k1 :+ (rest f) by eapply (update1 f).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite unA -H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "right_struct_obligation_2",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "have H : h2 = k2 :+ (rest f) by eapply (update2 f).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite unA -H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bnd_writeR",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "set l := rest f.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "have H1 : h1 = (x :-> v) :+ l by eapply (update1 f).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have H2 : h2 = (x :-> w) :+ l by eapply (update2 f).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite H1 H2; apply: bnd_write.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bnd_deallocR",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "set l := rest f.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "have H1 : h1 = empty :+ l by eapply (update1 f).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have H2 : h2 = (x :-> v) :+ l by eapply (update2 f).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite H1 H2 un0h; apply bnd_dealloc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ffound_struct1_obligation_1",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "by rewrite unh0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fleft_struct1_obligation_1",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "by rewrite unA -heq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fright_struct1_obligation_1",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "by rewrite unCA -heq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_doR",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "move=>H1 H2 H3.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "generalize (heq1 (h:=h))=>H.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: (val_do (i:=i) (j:=rest1)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_val_do",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "move=>H1 H2 H3.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply: (val_doR _ (i:=y:->2))=>//=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>x'' m''; rewrite unh0 unC; apply: H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>x'' m''; rewrite unh0 unC; apply: H3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}