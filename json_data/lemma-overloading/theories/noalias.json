{
    "filename": "theories/noalias.v",
    "coq_project": "lemma-overloading",
    "vernac_cmds": [
        [
            "From mathcomp Require Import ssreflect ssrbool seq eqtype.",
            "VernacRequire",
            "780f86c83776ecc0ff7dea09906f4f74acaff424"
        ],
        [
            "From LemmaOverloading Require Import heaps.",
            "VernacRequire",
            "89bc2192e60a07376f6345025938c646bb89169b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module Scan.",
            "VernacDefineModule",
            "760e09bea0c7452272162881215d605eb95c8164"
        ],
        [
            "Section ScanSection.",
            "VernacBeginSection",
            "5df46002cc9bc27bfe6468dcadd6b480c328ca79"
        ],
        [
            "Structure tagged_heap := Tag {untag : heap}.",
            "VernacInductive",
            "50114b8e322f1335d2da6f9e2fe8844baf46b365"
        ],
        [
            "Local Coercion untag : tagged_heap >-> heap.",
            "VernacCoercion",
            "24c61836bf55de670a849137430590ccf248278c"
        ],
        [
            "Definition default_tag := Tag.",
            "VernacDefinition",
            "82d4ae5cfdc5861fc3108dcb93126ad3c9905aa9"
        ],
        [
            "Definition ptr_tag := default_tag.",
            "VernacDefinition",
            "8ced0652b4306584ba0a43a3282cdb045453f329"
        ],
        [
            "Canonical Structure union_tag h := ptr_tag h.",
            "VernacDefinition",
            "0f1f4f19a374aa4b1b2e4eb8f09bd85d0fb9454e"
        ],
        [
            "Definition axiom h s := def h -> uniq s /\\ forall x, x \\in s -> x \\in dom h.",
            "VernacDefinition",
            "d3426dc7c15c9b25cd4a3367fb042fe3895ff919"
        ],
        [
            "Structure form s := Form {heap_of : tagged_heap; _ : axiom heap_of s}.",
            "VernacInductive",
            "f090d429113ee62f12b4049f831a1e180fcadb51"
        ],
        [
            "Local Coercion heap_of : form >-> tagged_heap.",
            "VernacCoercion",
            "9a26303a9d0761a838c867ee36adbd497b842514"
        ],
        [
            "Lemma union_pf s1 s2 (h1 : form s1) (h2 : form s2) : axiom (union_tag (h1 :+ h2)) (s1 ++ s2).",
            "VernacStartTheoremProof",
            "985c077d3ebe732a4fb9e064ccff6e98760de5b1"
        ],
        [
            "move:h1 h2=>[[i1]] H1 [[i2]] H2; rewrite /axiom /= in H1 H2 * => D.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "case/(_ (defUnl D)): H1=>U1 H1; case/(_ (defUnr D)): H2=>U2 H2.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "split=>[|x]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite mem_cat; case/orP; [move/H1 | move/H2]; by rewrite domUn !inE /= D => -> //=; rewrite orbT.",
            "VernacExtend",
            "8bc44252147d08e9b9233a5b3c05b02816068e46"
        ],
        [
            "rewrite cat_uniq U1 U2 andbT -all_predC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/allP=>x; move/H2=>H3; apply: (introN idP); move/H1=>H4.",
            "VernacExtend",
            "a6693558621c399efe49ed2f9bd1a3f2282d609e"
        ],
        [
            "by case: defUn D=>// _ _; move/(_ _ H4); rewrite H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure union_form s1 s2 h1 h2 := Form (@union_pf s1 s2 h1 h2).",
            "VernacDefinition",
            "db38e1fbc60f270eaf235e5234ff761a7bfddf2c"
        ],
        [
            "Lemma ptr_pf A x (v : A) : axiom (ptr_tag (x :-> v)) [:: x].",
            "VernacStartTheoremProof",
            "97ee8930dbbe943dd5fdf0a9704740cffcb5a472"
        ],
        [
            "rewrite /axiom /= defPt => D; split=>//.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "by move=>y; rewrite inE; move/eqP=>->; rewrite domPt inE /= eq_refl D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure ptr_form A x (v : A) := Form (@ptr_pf A x v).",
            "VernacDefinition",
            "b24d46dfe62389f6ec096831b05e6877937d169b"
        ],
        [
            "Lemma default_pf h : axiom (default_tag h) [::].",
            "VernacStartTheoremProof",
            "9f46009b480283233c4160ff39a3c32208e786b2"
        ],
        [
            "by move=>D; split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure default_form h := Form (@default_pf h).",
            "VernacDefinition",
            "f5682b75bc4cc8693501a568ee4772bd502d161c"
        ],
        [
            "Lemma scanE s (h : form s) x : def h -> x \\in s -> x \\in dom h.",
            "VernacStartTheoremProof",
            "82bbe3a7e6c546850efa5231a025039348c493bb"
        ],
        [
            "by case: h=>hp /= A D H; exact: ((proj2 (A D)) _ H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ScanSection.",
            "VernacEndSegment",
            "4dea6a0cbc648c135e66d5308b119e9f4758b586"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Canonical Structure union_tag.",
            "VernacCanonical",
            "8d8036e602ecc241d3b856eb3e00807590545dc9"
        ],
        [
            "Canonical Structure union_form.",
            "VernacCanonical",
            "c677f7bd4eb68bfaf1e1491c149f68b6e6c7d96e"
        ],
        [
            "Canonical Structure ptr_form.",
            "VernacCanonical",
            "96d1fc8b83daebfd1646f618c8f6fc25df46c03a"
        ],
        [
            "Canonical Structure default_form.",
            "VernacCanonical",
            "31b0eb279c6b953f72a69fedd19354621fcdca94"
        ],
        [
            "Coercion untag : tagged_heap >-> heap.",
            "VernacCoercion",
            "ac58b71aaf46b4a97bd31d95a6a33b131dace6c6"
        ],
        [
            "Coercion heap_of : form >-> tagged_heap.",
            "VernacCoercion",
            "6d1dc597bd0a7087a3d5068512439948ee0820b1"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Scan.",
            "VernacEndSegment",
            "4156cfe497e29e1488f1e41b22c7274c98b4a48d"
        ],
        [
            "Export Scan.Exports.",
            "VernacImport",
            "0fa09e309b459bd75dd1d23944b6ce0275f95326"
        ],
        [
            "Example ex_scan x y h : let: hp := (y :-> 1 :+ h :+ x :-> 2) in def hp -> x \\in dom hp.",
            "VernacDefinition",
            "f1cd835ada30eac286533f8b1422c5574ad35c41"
        ],
        [
            "move=>D; apply: Scan.scanE=>//=.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite ?in_cons ?eqxx ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Module Search.",
            "VernacDefineModule",
            "d9c024f5b17ecce806b471ae6acc3d9d28a86d78"
        ],
        [
            "Section SearchSection.",
            "VernacBeginSection",
            "9ec03694bafc914edddfcef54da0aa0d5e30c9da"
        ],
        [
            "Structure tagged_seq := Tag {untag : seq ptr}.",
            "VernacInductive",
            "a47f6bdae895ea0f92e46dead4ecd84cb759224a"
        ],
        [
            "Local Coercion untag : tagged_seq >-> seq.",
            "VernacCoercion",
            "6367a868b9086426a9b82f03b8059cbfd60e870c"
        ],
        [
            "Definition recurse_tag := Tag.",
            "VernacDefinition",
            "6e08c2ef84653846ba13c7aa7a318a53395cea1a"
        ],
        [
            "Canonical Structure found_tag s := recurse_tag s.",
            "VernacDefinition",
            "a7dacccf484d7d3060f784a48e1dd59e4fb5fbd6"
        ],
        [
            "Definition axiom x (s : tagged_seq) := x \\in untag s.",
            "VernacDefinition",
            "fa43224cf203204210c34eb8475600252c3f40e3"
        ],
        [
            "Structure form x := Form {seq_of : tagged_seq; _ : axiom x seq_of}.",
            "VernacInductive",
            "cbd2f3bfefa48f36852acdd1c1f332b8f780d2b6"
        ],
        [
            "Local Coercion seq_of : form >-> tagged_seq.",
            "VernacCoercion",
            "6b77bef4f85535666e7d993553ca90b0d4539ec5"
        ],
        [
            "Lemma found_pf x s : axiom x (found_tag (x :: s)).",
            "VernacStartTheoremProof",
            "40761e0d0683bfb1ade751137546be4b3e7f0bec"
        ],
        [
            "by rewrite /axiom inE eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure found_form x s := Form (found_pf x s).",
            "VernacDefinition",
            "e67a441d270f6c953987bac7a2795d2d2ea1d2f5"
        ],
        [
            "Lemma recurse_pf x y (f : form x) : axiom x (recurse_tag (y :: f)).",
            "VernacStartTheoremProof",
            "1d4452cd544e6001c0ab92bb8e515ab6828bd43e"
        ],
        [
            "by move:f=>[[s]]; rewrite /axiom /= inE orbC => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure recurse_form x y (f : form x) := Form (recurse_pf y f).",
            "VernacDefinition",
            "46978fd8edf951d48fc3bf9b34d9eb5b27677226"
        ],
        [
            "Lemma findE x (f : form x) : x \\in untag f.",
            "VernacStartTheoremProof",
            "b30a6b5328b926006e6ddcc11ce58be3fb7e6cc8"
        ],
        [
            "by move:f=>[s]; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SearchSection.",
            "VernacEndSegment",
            "0b0bee76e47effd2b04fd2bdd9c847d66008f374"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Canonical Structure found_tag.",
            "VernacCanonical",
            "c17854ebda6e6b8cc4c6c7f38a003b9a189c1c30"
        ],
        [
            "Canonical Structure found_form.",
            "VernacCanonical",
            "abac02c39e71d5289aa8b58f409d869f006f5eec"
        ],
        [
            "Canonical Structure recurse_form.",
            "VernacCanonical",
            "0d82838674a081e1fe5c11f86339f9458d5f939f"
        ],
        [
            "Coercion untag : tagged_seq >-> seq.",
            "VernacCoercion",
            "7f1c61463f78dde5fbb9ba15acdc7f05a857550a"
        ],
        [
            "Coercion seq_of : form >-> tagged_seq.",
            "VernacCoercion",
            "06a146c532aa01465e3d07b177ca48fdf6049fef"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Search.",
            "VernacEndSegment",
            "3b7004dca068966b854efa9df4691db6502ad1ce"
        ],
        [
            "Export Search.Exports.",
            "VernacImport",
            "729eb5a1633821311c002a83e1db15487741d739"
        ],
        [
            "Example ex_find (x y z : ptr) : x \\in [:: z; x; y].",
            "VernacDefinition",
            "a71af3fc079317016c597e11c6608ee938ba3efd"
        ],
        [
            "by apply: Search.findE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Module Search2.",
            "VernacDefineModule",
            "a4b96d3e01a8e820ea0f7972fee5b12d965f726d"
        ],
        [
            "Section Search2Section.",
            "VernacBeginSection",
            "041703b484521694c33cbb9330ff080b3041b90d"
        ],
        [
            "Structure tagged_seq := Tag {untag : seq ptr}.",
            "VernacInductive",
            "a47f6bdae895ea0f92e46dead4ecd84cb759224a"
        ],
        [
            "Local Coercion untag : tagged_seq >-> seq.",
            "VernacCoercion",
            "6367a868b9086426a9b82f03b8059cbfd60e870c"
        ],
        [
            "Definition foundz_tag := Tag.",
            "VernacDefinition",
            "d5c37cc4c1ea047bd68f939b1ad0c30343c26c35"
        ],
        [
            "Definition foundy_tag := foundz_tag.",
            "VernacDefinition",
            "62c838999131adddc4c9fbc95273cffb9357be06"
        ],
        [
            "Canonical Structure foundx_tag s := foundy_tag s.",
            "VernacDefinition",
            "fa3a0eb0b3e2947a116a087452164a2f7a8d50d6"
        ],
        [
            "Definition axiom (x y : ptr) (s : tagged_seq) := [/\\ x \\in untag s, y \\in untag s & uniq s -> x != y].",
            "VernacDefinition",
            "49c58bebf7138e8568fc6c779867a7c91a5d8046"
        ],
        [
            "Structure form x y := Form {seq_of : tagged_seq; _ : axiom x y seq_of}.",
            "VernacInductive",
            "474080e0e8d5345d6fcf2be86bab2a5c9778786a"
        ],
        [
            "Local Coercion seq_of : form >-> tagged_seq.",
            "VernacCoercion",
            "6b77bef4f85535666e7d993553ca90b0d4539ec5"
        ],
        [
            "Lemma foundx_pf x y (s : Search.form y) : axiom x y (foundx_tag (x :: s)).",
            "VernacStartTheoremProof",
            "82ab490896b6141c9f88badecdc780429f530113"
        ],
        [
            "move: s=>[[s]]; rewrite /Search.axiom /= /axiom !inE eq_refl /= => H1.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite H1 orbT; split=>//; case/andP=>H2 _; case: eqP H1 H2=>// -> ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure foundx_form x y (s : Search.form y) := Form (foundx_pf x s).",
            "VernacDefinition",
            "315f96952ec6bd66cd750b807147168eb8238fd9"
        ],
        [
            "Lemma foundy_pf x y (s : Search.form x) : axiom x y (foundy_tag (y :: s)).",
            "VernacStartTheoremProof",
            "9494ff57f2d540667a567c80c3fb40a9d3b03038"
        ],
        [
            "move: s=>[[s]]; rewrite /Search.axiom /= /axiom !inE eq_refl /= => H1.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite H1 orbT; split=>//; case/andP=>H2 _; case: eqP H1 H2=>// -> ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure foundy_form x y (s : Search.form x) := Form (foundy_pf y s).",
            "VernacDefinition",
            "772f555123f151ef80a1bb7d504c42c07771b979"
        ],
        [
            "Lemma foundz_pf x y z (s : form x y) : axiom x y (foundz_tag (z :: s)).",
            "VernacStartTheoremProof",
            "265f606531e35c589d696a8fcd61ddef88daac85"
        ],
        [
            "move: s=>[[s]]; case=>/= H1 H2 H3.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "rewrite /axiom /= !inE /= H1 H2 !orbT; split=>//.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by case/andP=>_; apply: H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure foundz_form x y z (s : form x y) := Form (foundz_pf z s).",
            "VernacDefinition",
            "1b909567835598002d066648e75645d64679f765"
        ],
        [
            "Lemma find2E x y (s : form x y) : uniq s -> x != y.",
            "VernacStartTheoremProof",
            "9ec10486ddfa631ebf9a6ef2edc8dbcfef815b11"
        ],
        [
            "by move: s=>[s /= [_ _]]; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Search2Section.",
            "VernacEndSegment",
            "3f6a4b0f9991f07d57ec3159c25335c69fcf0659"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Canonical Structure foundx_tag.",
            "VernacCanonical",
            "fd69c3f78107221f2b8e2a4d4d462351e216bd74"
        ],
        [
            "Canonical Structure foundx_form.",
            "VernacCanonical",
            "daab249f4355c1438f100051437513b23201e301"
        ],
        [
            "Canonical Structure foundy_form.",
            "VernacCanonical",
            "dbc4693c33b746bc14ec9a07723c429a888c2f0d"
        ],
        [
            "Canonical Structure foundz_form.",
            "VernacCanonical",
            "156ff1944a4fa899f153e8b06dd27fb7d5835fef"
        ],
        [
            "Coercion untag : tagged_seq >-> seq.",
            "VernacCoercion",
            "7f1c61463f78dde5fbb9ba15acdc7f05a857550a"
        ],
        [
            "Coercion seq_of : form >-> tagged_seq.",
            "VernacCoercion",
            "06a146c532aa01465e3d07b177ca48fdf6049fef"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Search2.",
            "VernacEndSegment",
            "6afd1c7d5e7aafed83c5a798bedbeea56d0c8fcd"
        ],
        [
            "Export Search2.Exports.",
            "VernacImport",
            "0814dd79d863ddd0451507718ecaabb8cf81e09f"
        ],
        [
            "Example ex_find2 (x y z : ptr) : uniq [:: z; x; y] -> x != y.",
            "VernacDefinition",
            "b8fbf39a6c9c600d003bc795b94557ccc0c6997d"
        ],
        [
            "move=>H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (Search2.find2E H).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Module NoAlias.",
            "VernacDefineModule",
            "48cf0f0a951141afd2786a2873150e8bf468c306"
        ],
        [
            "Section NoAliasSection.",
            "VernacBeginSection",
            "a2c6f60bf8dfaece141e8ce37ea47190d5b15d40"
        ],
        [
            "Structure tagged_ptr (y : ptr) := Tag {untag : ptr}.",
            "VernacInductive",
            "e109421013270a13f0434226c95377e883f9bf7b"
        ],
        [
            "Local Coercion untag : tagged_ptr >-> ptr.",
            "VernacCoercion",
            "a7a19bfbd3ab6dc92c3f7f7f9b2d6e227ce2c140"
        ],
        [
            "Definition singleton y := @Tag y y.",
            "VernacDefinition",
            "aa1c139e98462b5a5ea0e5636c5c8d6cd279e8cb"
        ],
        [
            "Structure form x y (s : seq ptr) := Form {y_of : tagged_ptr y; _ : uniq s -> x != untag y_of}.",
            "VernacInductive",
            "3bd6a701d9944bda8100f64113593230bd58a961"
        ],
        [
            "Local Coercion y_of : form >-> tagged_ptr.",
            "VernacCoercion",
            "846a7640b81bb13f6cebd6ccc00b5a24bdc1d98d"
        ],
        [
            "Arguments Form : clear implicits.",
            "VernacArguments",
            "2d34e7073ae0e80864ed4532b4b5b38d88d8817d"
        ],
        [
            "Lemma noalias_pf (x y : ptr) (f : Search2.form x y) : uniq f -> x != singleton y.",
            "VernacStartTheoremProof",
            "b7cc1b108e703b762694af7b34417ef4f177561d"
        ],
        [
            "by move: f=>[[s]][].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure start x y (f : Search2.form x y) := Form x y f (singleton y) (@noalias_pf x y f).",
            "VernacDefinition",
            "3675b4fc030a259f3bbdb7f96dd05174b9561d1f"
        ],
        [
            "End NoAliasSection.",
            "VernacEndSegment",
            "3c7635fe119395d20fd403e141e05042d146de28"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Canonical Structure singleton.",
            "VernacCanonical",
            "921ae9810176c8a453949eda2e604010522e1d95"
        ],
        [
            "Canonical Structure start.",
            "VernacCanonical",
            "1b6f3e7ad0641035d8aa51df2da1a197f2db156c"
        ],
        [
            "Coercion untag : tagged_ptr >-> ptr.",
            "VernacCoercion",
            "d079c138f3e3e7b1c90a8461bd131064dba1ce94"
        ],
        [
            "Coercion y_of : form >-> tagged_ptr.",
            "VernacCoercion",
            "b76462e8395141c38536f46d8a362ebfa469ecdf"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End NoAlias.",
            "VernacEndSegment",
            "86e0c2cf989bb35e1a3cf9286f3595cc473e46ed"
        ],
        [
            "Export NoAlias.Exports.",
            "VernacImport",
            "041ba0961fc4b067c21b37e3f7386c9dd84ba232"
        ],
        [
            "Lemma noaliasR s x y (f : Scan.form s) (g : NoAlias.form x y s) : def f -> x != NoAlias.y_of g.",
            "VernacStartTheoremProof",
            "704770c97336b7dba37cf93fc6ec6b67d5b9590a"
        ],
        [
            "by move: f g=>[[h]] H1 [[y']] /= H2; case/H1=>U _; apply: H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments noaliasR {s x y f g}.",
            "VernacArguments",
            "e5e00d6d6ebf830916d3cd32ae661b35cd57a8dc"
        ],
        [
            "Example exnc A (x1 x2 x3 x4 : ptr) (v1 v2 : A) (h1 h2 : heap) : def (h1 :+ x2 :-> 1 :+ h2 :+ x1 :-> v2 :+ (x3 :-> v1 :+ empty)) -> (x1 != x2) /\\ (x1 != x2) && (x2 != x3) && (x3 != x1) /\\ (x2 == x3) = false /\\ (x1 == x2) = false /\\ ((x1 != x2) && (x2 != x3)) = (x1 != x2) /\\ ((x1 != x2) && (x2 != x3)) = (x1 != x2) /\\ ((x1 != x2) && (x2 != x3)) = (x1 != x2) /\\ ((x1 != x2) && (x2 != x3)) = (x1 != x2) /\\ (x1 != x2) && (x2 != x3) && (x1 != x4) && (x3 != x1).",
            "VernacDefinition",
            "73f23089f144c6059bf929f53ef11da6953f37d7"
        ],
        [
            "move=>D.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: (noaliasR D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !(noaliasR D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite [x2 == x3](negbTE (noaliasR D)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (negbTE (noaliasR D)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite [x2 != x3](noaliasR D) andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (noaliasR (x := x2) D) andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (noaliasR (y := x3) D) andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (noaliasR (x := x2) (y := x3) D) andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !(negbTE (noaliasR D)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "admit.",
            "VernacExtend",
            "6f3b875177c67c86e200aa57e88acfa851c78387"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Lemma noaliasR_fwd1 s (f : Scan.form s) (D : def f) x y (g : Search2.form x y) : s = g -> x != y.",
            "VernacStartTheoremProof",
            "b73a3f7b851715687617d2aa74870ffb4fd8f029"
        ],
        [
            "case: g=>[l/=[_ _]] H U.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply: H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move: U=><-.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: f D=>[h/=].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move=>H D; by case: H.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments noaliasR_fwd1 [s f] D x y [g].",
            "VernacArguments",
            "c53c2a8c4fb764f6dc028a4d541d2e2f2bc02507"
        ],
        [
            "Notation noaliasR_fwd D x y := (noaliasR_fwd1 D x y (Logic.eq_refl _)).",
            "VernacSyntacticDefinition",
            "369f498bf66fc4a70f8e9f841705bf2787727acd"
        ],
        [
            "Notation \"()\" := (Logic.eq_refl _).",
            "VernacNotation",
            "ebde2e07220aa9a1c7ff7f07b7bd9a10c5e97f29"
        ],
        [
            "Example exnc A (x1 x2 x3 x4 : ptr) (v1 v2 : A) (h1 h2 : heap) : def (h1 :+ x2 :-> 1 :+ h2 :+ x1 :-> v2 :+ (x3 :-> v1 :+ empty)) -> (x1 != x2) /\\ (x1 != x2) && (x2 != x3) && (x3 != x1) /\\ (x2 == x3) = false /\\ (x1 == x2) = false.",
            "VernacDefinition",
            "820b9f5455f4cf30546b786f06317fac40b6af13"
        ],
        [
            "move=>D.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: (noaliasR_fwd1 D x1 x2 ()).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "set H := noaliasR_fwd1 D.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "by rewrite (H x1 x2 _ ()) (H x2 x3 _ ()) (H x3 x1 _ ()).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite [x2 == x3](negbTE (noaliasR_fwd D x2 x3)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (negbTE (noaliasR_fwd D x1 x2)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Lemma scan_it s (f : Scan.form s) : def f -> uniq s.",
            "VernacStartTheoremProof",
            "aa55c840a7163d56a1d98785c5c1c3ba896fa411"
        ],
        [
            "case: f=>/= h A D.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: A.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments scan_it [s f].",
            "VernacArguments",
            "c7410c5f79d800158547c8388b4f34293c156351"
        ],
        [
            "Definition search_them x y g := @Search2.find2E x y g.",
            "VernacDefinition",
            "af976acc5c9b107f26a7ea4376e18b3a661da9ff"
        ],
        [
            "Arguments search_them x y [g].",
            "VernacArguments",
            "3f47dabde9ff230e5077f1dd2f0c676ccacd9f0c"
        ],
        [
            "Example without_notation A (x1 x2 x3 : ptr) (v1 v2 v3 : A) (h1 h2 : heap) : def (h1 :+ (x1 :-> v1 :+ x2 :-> v2) :+ (h2 :+ x3 :-> v3)) -> (x1 != x3).",
            "VernacDefinition",
            "7a807fdeabb6eb4954370d00361efad82cb60d37"
        ],
        [
            "move=>D.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: (search_them x1 x3 (scan_it D)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Lemma noaliasR_fwd_wrong1 x y (g : Search2.form x y) (f : Scan.form g) : def f -> x != y.",
            "VernacStartTheoremProof",
            "60d75ea71d0ca98625f65fecb89a768bd9a42f4c"
        ],
        [
            "case: f=>h /= A D.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (A D)=>{A D} [U _].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: g U=>s /= [_ _].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation noaliasR_fwd' x y D := (search_them x y (scan_it D)).",
            "VernacSyntacticDefinition",
            "afc708545f4e1bb43b070bd743ef5cfc00df3d73"
        ],
        [
            "Example exnc A (x1 x2 x3 x4 : ptr) (v1 v2 : A) (h1 h2 : heap) : def (h1 :+ x2 :-> 1 :+ h2 :+ x1 :-> v2 :+ (x3 :-> v1 :+ empty)) -> (x1 != x2) /\\ (x1 != x2) && (x2 != x3) && (x3 != x1) /\\ (x2 == x3) = false /\\ (x1 == x2) = false.",
            "VernacDefinition",
            "820b9f5455f4cf30546b786f06317fac40b6af13"
        ],
        [
            "move=>D.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply: (noaliasR_fwd' x1 x2 D).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (noaliasR_fwd' x1 x2 D) (noaliasR_fwd' x2 x3 D) (noaliasR_fwd' x3 x1 D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite [x2 == x3](negbTE (noaliasR_fwd' x2 x3 D)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (negbTE (noaliasR_fwd' x1 x2 D)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Structure check (x y : ptr) (s : seq ptr) := Check {y_of :> ptr; _ : y_of = y; _ : uniq s -> x != y_of}.",
            "VernacInductive",
            "38122b8df7e815ef2b07fb416a8072e2f0f18b52"
        ],
        [
            "Program Canonical Structure start x y (f : Search2.form x y) := @Check x y f y (Logic.eq_refl _) _.",
            "VernacDefinition",
            "5bd9433556854edf77b6927267fbb5cd679366ca"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "case: f H=>[s H /= U].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: H=>_ _; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma noaliasR_fwd3 s (f : Scan.form s) (D : def f) x y (g : check x y s) : x != y_of g.",
            "VernacStartTheoremProof",
            "3c81b407ecc0f854a94b27bc465760dc06a0ce24"
        ],
        [
            "case: f D=>h A /= D.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: A g=>// U _ [y' /= ->].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments noaliasR_fwd3 [s f] D x y [g].",
            "VernacArguments",
            "9f168466c23d44c62bfc3df356a0121027a15cf9"
        ],
        [
            "Example triggered A (x1 x2 x3 : ptr) (v1 v2 v3 : A) (h1 h2 : heap) : def (h1 :+ (x1 :-> v1 :+ x2 :-> v2) :+ (h2 :+ x3 :-> v3)) -> (x1 != x3) && (x2 != x3) && (x1 != x2).",
            "VernacDefinition",
            "121bb408961a00e620c09910f7648dad67bc001f"
        ],
        [
            "move=>D.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have F := noaliasR_fwd3 D.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !(F _ x3) (F _ x2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Structure check' (x : ptr) (s : seq ptr) := Check' {y_of' :> ptr; _ : uniq s -> x != y_of'}.",
            "VernacInductive",
            "955233b04fc5651836e9c1b19cfcef303436a584"
        ],
        [
            "Program Canonical Structure start' x y (f : Search2.form x y) := @Check' x f y _.",
            "VernacDefinition",
            "bb0b2c7b5bc04f48af283f0570f68c0577fdb821"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "case: f H=>[s H /= U].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: H=>_ _; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma noaliasR_fwd3' s (f : Scan.form s) (D : def f) x (g : check' x s) : x != y_of' g.",
            "VernacStartTheoremProof",
            "5e20797aa4599d97474cc36302b30c0efd5f66d9"
        ],
        [
            "case: f D=>h A /= D.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: A g=>// U _[y' /= ->] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "union_pf",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "move:h1 h2=>[[i1]] H1 [[i2]] H2; rewrite /axiom /= in H1 H2 * => D.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "case/(_ (defUnl D)): H1=>U1 H1; case/(_ (defUnr D)): H2=>U2 H2.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "split=>[|x]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_cat; case/orP; [move/H1 | move/H2]; by rewrite domUn !inE /= D => -> //=; rewrite orbT.",
                        "VernacExtend",
                        "8bc44252147d08e9b9233a5b3c05b02816068e46"
                    ]
                },
                {
                    "command": [
                        "rewrite cat_uniq U1 U2 andbT -all_predC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/allP=>x; move/H2=>H3; apply: (introN idP); move/H1=>H4.",
                        "VernacExtend",
                        "a6693558621c399efe49ed2f9bd1a3f2282d609e"
                    ]
                },
                {
                    "command": [
                        "by case: defUn D=>// _ _; move/(_ _ H4); rewrite H3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptr_pf",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "rewrite /axiom /= defPt => D; split=>//.",
                        "VernacExtend",
                        "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
                    ]
                },
                {
                    "command": [
                        "by move=>y; rewrite inE; move/eqP=>->; rewrite domPt inE /= eq_refl D.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "default_pf",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "by move=>D; split.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scanE",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "by case: h=>hp /= A D H; exact: ((proj2 (A D)) _ H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "found_pf",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "by rewrite /axiom inE eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "recurse_pf",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "by move:f=>[[s]]; rewrite /axiom /= inE orbC => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findE",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "by move:f=>[s]; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "foundx_pf",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "move: s=>[[s]]; rewrite /Search.axiom /= /axiom !inE eq_refl /= => H1.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite H1 orbT; split=>//; case/andP=>H2 _; case: eqP H1 H2=>// -> ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "foundy_pf",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "move: s=>[[s]]; rewrite /Search.axiom /= /axiom !inE eq_refl /= => H1.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite H1 orbT; split=>//; case/andP=>H2 _; case: eqP H1 H2=>// -> ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "foundz_pf",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "move: s=>[[s]]; case=>/= H1 H2 H3.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "rewrite /axiom /= !inE /= H1 H2 !orbT; split=>//.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "by case/andP=>_; apply: H3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find2E",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "by move: s=>[s /= [_ _]]; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "noalias_pf",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "by move: f=>[[s]][].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "noaliasR",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "by move: f g=>[[h]] H1 [[y']] /= H2; case/H1=>U _; apply: H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "noaliasR_fwd1",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "case: g=>[l/=[_ _]] H U.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply: H.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "move: U=><-.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: f D=>[h/=].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move=>H D; by case: H.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scan_it",
            "line_nb": 208,
            "steps": [
                {
                    "command": [
                        "case: f=>/= h A D.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case: A.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "noaliasR_fwd_wrong1",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "case: f=>h /= A D.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (A D)=>{A D} [U _].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: g U=>s /= [_ _].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "start_obligation_1",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "case: f H=>[s H /= U].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case: H=>_ _; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "noaliasR_fwd3",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "case: f D=>h A /= D.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: A g=>// U _ [y' /= ->].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "start'_obligation_1",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "case: f H=>[s H /= U].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case: H=>_ _; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "noaliasR_fwd3'",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "case: f D=>h A /= D.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: A g=>// U _[y' /= ->] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}