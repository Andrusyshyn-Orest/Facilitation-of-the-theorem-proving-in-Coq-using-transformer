{
    "filename": "theories/indomCTC.v",
    "coq_project": "lemma-overloading",
    "vernac_cmds": [
        [
            "From mathcomp Require Import ssreflect ssrbool ssrnat eqtype.",
            "VernacRequire",
            "3bb9db3915e910ea9c9d17a4ba19505e27f70348"
        ],
        [
            "From LemmaOverloading Require Import heaps.",
            "VernacRequire",
            "89bc2192e60a07376f6345025938c646bb89169b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Class Indom (x : ptr) (h : heap) := { indom : def h -> x \\in dom h }.",
            "VernacInductive",
            "356d858a3fb465f9980d0e22153099b40b27ea17"
        ],
        [
            "Program Instance found A x (v:A) : Indom x (x:->v).",
            "VernacInstance",
            "90719cb40860384146cb655b11798f168ce80c4c"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "rewrite defPt in H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite domPt !inE eq_refl H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Instance found_left x h1 h2 (_ : Indom x h1) : Indom x (h1:+h2).",
            "VernacInstance",
            "b9825a0a15a313667994052068889bdf08c6babe"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "rewrite domUn !inE H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: H=>H; by rewrite (H (defUnl H0)).",
            "VernacExtend",
            "14b141a2d70f00681f703015bc169478d399fe62"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Instance found_right x h1 h2 (_ : Indom x h2) : Indom x (h1:+h2).",
            "VernacInstance",
            "92a1a67e8e79b323a915bcff51a4db1bb079199b"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "rewrite domUn !inE H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: H=>H; rewrite (H (defUnr H0)) orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Example ex1 A (x1 x2 : ptr) (v1 v2 : A) (h1 h2 : heap) : def (h1 :+ x1 :-> 1 :+ (x2 :-> 3 :+ empty)) -> if x2 \\in dom (h1 :+ x1 :-> 1 :+ (x2 :-> 3 :+ empty)) then 1 == 1 else 1 == 0.",
            "VernacDefinition",
            "18a94aad486d2518b032d8ef164e488586fa9b5c"
        ],
        [
            "move=>D.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite indom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Example ex2 A (x1 x2 : ptr) (v1 v2 : A) (h1 h2 : heap) : def (h1 :+ x1 :-> 1 :+ (x2 :-> 3 :+ empty)) -> if x2 \\in dom (h1 :+ x1 :-> 1 :+ (x2 :-> 3 :+ empty)) then 1 == 1 else 1 == 0.",
            "VernacDefinition",
            "ae0e8743e9e820e7cdef9899b3e487653f0f31d2"
        ],
        [
            "set H := _ :+ _ :+ (_ :+ _).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "move=>D.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite indom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "found_obligation_1",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "rewrite defPt in H.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite domPt !inE eq_refl H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "found_left_obligation_1",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "rewrite domUn !inE H0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: H=>H; by rewrite (H (defUnl H0)).",
                        "VernacExtend",
                        "14b141a2d70f00681f703015bc169478d399fe62"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "found_right_obligation_1",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "rewrite domUn !inE H0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: H=>H; rewrite (H (defUnr H0)) orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex1",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "move=>D.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite indom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex2",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "set H := _ :+ _ :+ (_ :+ _).",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "move=>D.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite indom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}