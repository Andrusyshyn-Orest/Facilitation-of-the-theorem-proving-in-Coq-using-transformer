{
    "filename": "progs/verif_min.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.floyd.proofauto.",
            "VernacRequire",
            "1b5b5bd8f6976ab2a8ffc41bb68ef58d6fb49b99"
        ],
        [
            "Require Import VST.progs.min.",
            "VernacRequire",
            "f8268e83f906d322e5881b06d70ae46d87a7d929"
        ],
        [
            "Instance CompSpecs : compspecs.",
            "VernacInstance",
            "154eee01c656800e0ca79db421bf2abcdf325f7f"
        ],
        [
            "make_compspecs prog.",
            "VernacExtend",
            "36220761a2e554d38938361d97a6a7824a7eb4eb"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Vprog : varspecs.",
            "VernacDefinition",
            "071102901c915338608cbb3742cc92eff26260b2"
        ],
        [
            "mk_varspecs prog.",
            "VernacExtend",
            "3d71166af717afdd6c2d6e7673cef893ac1c6afc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Require Import ZArith.",
            "VernacRequire",
            "12e7bb35b490128f5b015cdb4af7d2255de07134"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Import ListNotations.",
            "VernacImport",
            "52647db2a3b752153a8cbd37039246f200bccdee"
        ],
        [
            "Open Scope Z.",
            "VernacOpenCloseScope",
            "00bb9ffac6db2587918f2b251bb6649305aecb6f"
        ],
        [
            "Theorem fold_min_general: forall (al: list Z)(i: Z), In i (al) -> forall x, List.fold_right Z.min x al <= i.",
            "VernacStartTheoremProof",
            "fb6342aea1c2a51f3f42189ab54ecbb370a7908b"
        ],
        [
            "induction al; intros.",
            "VernacExtend",
            "1068feabd2738258b572f93c7133cfbbce45122b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Z.le_min_l.",
            "VernacExtend",
            "d618d63a1e6450304683dc64d488be31c1610089"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z.le_min_r.",
            "VernacExtend",
            "077bca8ed3b3a6c5148722ab7b7578fc3aaf4569"
        ],
        [
            "apply IHal.",
            "VernacExtend",
            "027b1bd7cca192f935cafa2b4d29954a182f47df"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fold_min: forall (al: list Z)(i: Z), In i (al) -> List.fold_right Z.min (hd 0 al) al <= i.",
            "VernacStartTheoremProof",
            "3336026746396ec4170aeaccd929d2ddb1dec48d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply fold_min_general.",
            "VernacExtend",
            "e1838f93b15da3c7d53bcfcfc1dcacb16a41773f"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_fold_min: forall (f: Z -> Prop) (x: Z) (al: list Z), f x -> Forall f al -> f (fold_right Z.min x al).",
            "VernacStartTheoremProof",
            "47fa0da95174a32b033ac59354c56fb7f8f513da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Z.min at 1.",
            "VernacExtend",
            "bc367e3082246a173fb5d13b94697da97e8fa6db"
        ],
        [
            "destruct (Z.compare x0 (fold_right Z.min x l)) eqn:?; auto.",
            "VernacExtend",
            "bec480d7e4a2c4c22f9a6ae7188a9691021fe9c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_min_another: forall x al y, fold_right Z.min x (al ++ [y]) = Z.min (fold_right Z.min x al) y.",
            "VernacStartTheoremProof",
            "35814f9b374cfb46d94956088cad7029b78b85c9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert x; induction al; simpl; intros.",
            "VernacExtend",
            "dd2743458affd6b72508cb98d88b7fddf5afc88e"
        ],
        [
            "apply Z.min_comm.",
            "VernacExtend",
            "42700e5cbef155942a70d54314d587465ac0694f"
        ],
        [
            "rewrite <- Z.min_assoc.",
            "VernacExtend",
            "7c7d32ce865201dc953a01377b5990f985226653"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply IHal.",
            "VernacExtend",
            "027b1bd7cca192f935cafa2b4d29954a182f47df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_int_I32_Znth_map_Vint: forall i s al, 0 <= i < Zlength al -> is_int I32 s (Znth i (map Vint al)).",
            "VernacStartTheoremProof",
            "a6f57e87b6bda3937032d07900e3c3238de5141e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Znth_map; auto.",
            "VernacExtend",
            "7a65899c557c2e7652f2335e3bbe235cd802564f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Extern 3 (is_int I32 _ (Znth _ (map Vint _))) => (apply is_int_I32_Znth_map_Vint; rewrite ?Zlength_map; omega).",
            "VernacHints",
            "26dc574a3eba242fd06ac09b54a719d18f1a893c"
        ],
        [
            "Definition minimum_spec := DECLARE _minimum WITH a: val, n: Z, al: list Z PRE [ _a OF tptr tint , _n OF tint ] PROP (1 <= n <= Int.max_signed; Forall repable_signed al) LOCAL (temp _a a; temp _n (Vint (Int.repr n))) SEP (data_at Ews (tarray tint n) (map Vint (map Int.repr al)) a) POST [ tint ] PROP () LOCAL(temp ret_temp (Vint (Int.repr (fold_right Z.min (hd 0 al) al)))) SEP (data_at Ews (tarray tint n) (map Vint (map Int.repr al)) a).",
            "VernacDefinition",
            "467ef06664be2c3ba1979279c9fccc5d8462ba1e"
        ],
        [
            "Definition Gprog : funspecs := ltac:(with_library prog [minimum_spec]).",
            "VernacDefinition",
            "11d216b326fc723bec3a35fde7717fed82a22be8"
        ],
        [
            "Lemma body_min: semax_body Vprog Gprog f_minimum minimum_spec.",
            "VernacStartTheoremProof",
            "63037d4dbd38403299fbc77dba04e1789877c41f"
        ],
        [
            "start_function.",
            "VernacExtend",
            "c9d31eecaa0cff79fee4b43862828db880600e1a"
        ],
        [
            "assert_PROP (Zlength al = n).",
            "VernacExtend",
            "e051b3616418f9beb924d30aabbdcea75a424149"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "autorewrite with sublist; auto.",
            "VernacExtend",
            "928ba352fac4c0a4d960f940cd8d2b6430082342"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward_for_simple_bound n (EX i:Z, PROP() LOCAL(temp _min (Vint (Int.repr (fold_right Z.min (Znth 0 al) (sublist 0 i al)))); temp _a a; temp _n (Vint (Int.repr n))) SEP(data_at Ews (tarray tint n) (map Vint (map Int.repr al)) a)).",
            "VernacExtend",
            "7f35995c937e2f028386ce80d5fb9715a364595e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "assert (repable_signed (Znth i al)) by (apply Forall_Znth; auto; omega).",
            "VernacExtend",
            "df3f63a6d5ae7b444b6ef9fd8794ff7e3944c043"
        ],
        [
            "assert (repable_signed (fold_right Z.min (Znth 0 al) (sublist 0 i al))) by (apply Forall_fold_min; [apply Forall_Znth; auto; omega |apply Forall_sublist; auto]).",
            "VernacExtend",
            "b83bac6e901f8c6700c05ceb06c9900313acf4ee"
        ],
        [
            "autorewrite with sublist.",
            "VernacExtend",
            "27d3b47789f36e3bd15e796d8905bf4584c44131"
        ],
        [
            "subst POSTCONDITION; unfold abbreviate.",
            "VernacExtend",
            "3ba121f63cfecae6ca638e56e618263a1cdbe944"
        ],
        [
            "rewrite (sublist_split 0 i (i+1)) by omega.",
            "VernacExtend",
            "cd48bdb17f983b85643688d8ff63f5a1938b4636"
        ],
        [
            "rewrite (sublist_one i (i+1) al) by omega.",
            "VernacExtend",
            "671ff76f06c0947ccc04dcba0bc403680603c301"
        ],
        [
            "rewrite fold_min_another.",
            "VernacExtend",
            "3153ca6a3f1c9ccb3bb483eee7815237791944d6"
        ],
        [
            "forward_if.",
            "VernacExtend",
            "c26d674c71f14838f40e15eee264b85c5a5c2b19"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "rewrite Z.min_r; auto; omega.",
            "VernacExtend",
            "b1120ca17a2eddccba5e70fbcce4ea80a93787b9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "rewrite Z.min_l; auto; omega.",
            "VernacExtend",
            "c5509d8396e03e96472ee933efe4261ba32fe81a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "autorewrite with sublist.",
            "VernacExtend",
            "27d3b47789f36e3bd15e796d8905bf4584c44131"
        ],
        [
            "destruct al; simpl; auto.",
            "VernacExtend",
            "56b550382b814fcb04abe3efc8a38f4f782cc6fc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma body_min': semax_body Vprog Gprog f_minimum minimum_spec.",
            "VernacStartTheoremProof",
            "d8c0f3d813955afcd497080a44e3d9dc4c235be4"
        ],
        [
            "start_function.",
            "VernacExtend",
            "c9d31eecaa0cff79fee4b43862828db880600e1a"
        ],
        [
            "assert_PROP (Zlength al = n).",
            "VernacExtend",
            "e051b3616418f9beb924d30aabbdcea75a424149"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "autorewrite with sublist; auto.",
            "VernacExtend",
            "928ba352fac4c0a4d960f940cd8d2b6430082342"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "revert POSTCONDITION; replace (hd 0 al) with (Znth 0 al) by (destruct al; reflexivity); intro POSTCONDITION.",
            "VernacExtend",
            "a4648dbf2cde0e5b1df8d32a616c07bce5328d74"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "pose (Inv d (f: Z->Prop) (i: Z) := PROP(0 <= i <= n; f i) LOCAL(temp _min (Vint (Int.repr (fold_right Z.min (Znth 0 al) (sublist 0 (i+d) al)))); temp _a a; temp _i (Vint (Int.repr i)); temp _n (Vint (Int.repr n))) SEP(data_at Ews (tarray tint n) (map Vint (map Int.repr al)) a)).",
            "VernacExtend",
            "c0eb2d3fffaeba466797f090f4d6b43e740fd982"
        ],
        [
            "forward_for (Inv 0 (fun _ => True)) continue: (Inv 1 (Z.gt n)).",
            "VernacExtend",
            "ff7ecb467432498ce121250ab2f752236d615cb0"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists 0.",
            "VernacExtend",
            "cde6688457913206651aac7ff6334442533f83b6"
        ],
        [
            "unfold Inv; entailer!.",
            "VernacExtend",
            "3fb217706c84cd11c0d617a09e50eab0ce3aa8dd"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "match goal with | P := @abbreviate ret_assert _ |- _ => unfold abbreviate in P; subst P end.",
            "VernacExtend",
            "6fb7d872a74400868784380b052d46fb434613a1"
        ],
        [
            "match goal with | |- semax _ _ ?c ?P => tryif (is_sequential false false c) then (apply sequential; simpl_ret_assert; match goal with |- semax _ _ _ ?Q => abbreviate Q : ret_assert as POSTCONDITION end) else abbreviate P : ret_assert as POSTCONDITION end.",
            "VernacExtend",
            "e0e8844ea3c0d0b45eb64eeb2cc1a88c8989c868"
        ],
        [
            "force_sequential.",
            "VernacExtend",
            "bb6f46edb8de4f17f4645b26020901e505bff257"
        ],
        [
            "abbreviate_semax.",
            "VernacExtend",
            "9be2efb733441191b2b253baf02d7e5749084d32"
        ],
        [
            "rename a0 into i.",
            "VernacExtend",
            "05e445fe5fa8584cbb787f4bdb631f4321abfbe6"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "assert (repable_signed (Znth i al)) by (apply Forall_Znth; auto; omega).",
            "VernacExtend",
            "df3f63a6d5ae7b444b6ef9fd8794ff7e3944c043"
        ],
        [
            "assert (repable_signed (fold_right Z.min (Znth 0 al) (sublist 0 i al))) by (apply Forall_fold_min; [apply Forall_Znth; auto; omega |apply Forall_sublist; auto]).",
            "VernacExtend",
            "b83bac6e901f8c6700c05ceb06c9900313acf4ee"
        ],
        [
            "autorewrite with sublist.",
            "VernacExtend",
            "27d3b47789f36e3bd15e796d8905bf4584c44131"
        ],
        [
            "apply semax_post_flipped' with (Inv 1 (Z.gt n) i).",
            "VernacExtend",
            "e4dd0821f88cced915a80f4cdfc3692bd588e63a"
        ],
        [
            "unfold Inv.",
            "VernacExtend",
            "e8acfda0c2dfa1a614d18a433c4e5064f24319ef"
        ],
        [
            "rewrite (sublist_split 0 i (i+1)) by omega.",
            "VernacExtend",
            "cd48bdb17f983b85643688d8ff63f5a1938b4636"
        ],
        [
            "rewrite (sublist_one i (i+1) al) by omega.",
            "VernacExtend",
            "671ff76f06c0947ccc04dcba0bc403680603c301"
        ],
        [
            "rewrite fold_min_another.",
            "VernacExtend",
            "3153ca6a3f1c9ccb3bb483eee7815237791944d6"
        ],
        [
            "forward_if.",
            "VernacExtend",
            "c26d674c71f14838f40e15eee264b85c5a5c2b19"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "rewrite Z.min_r; auto; omega.",
            "VernacExtend",
            "b1120ca17a2eddccba5e70fbcce4ea80a93787b9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "rewrite Z.min_l; auto; omega.",
            "VernacExtend",
            "c5509d8396e03e96472ee933efe4261ba32fe81a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst POSTCONDITION; unfold abbreviate.",
            "VernacExtend",
            "3ba121f63cfecae6ca638e56e618263a1cdbe944"
        ],
        [
            "simpl_ret_assert.",
            "VernacExtend",
            "ff3fb2fdac49f5d86a418a483b73de7b6f146dab"
        ],
        [
            "Exists i.",
            "VernacExtend",
            "dc31239a0b5209e6d775a7cc7548153251f3e279"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rename a0 into i.",
            "VernacExtend",
            "05e445fe5fa8584cbb787f4bdb631f4321abfbe6"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists (i+1).",
            "VernacExtend",
            "477e61c045a72453b6a62bd84be18f444ba934d0"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "autorewrite with sublist.",
            "VernacExtend",
            "27d3b47789f36e3bd15e796d8905bf4584c44131"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition minimum_spec2 := DECLARE _minimum WITH a: val, n: Z, al: list Z PRE [ _a OF tptr tint , _n OF tint ] PROP (1 <= n <= Int.max_signed; Forall repable_signed al) LOCAL (temp _a a; temp _n (Vint (Int.repr n))) SEP (data_at Ews (tarray tint n) (map Vint (map Int.repr al)) a) POST [ tint ] EX j: Z, PROP (In j al; Forall (fun x => j<=x) al) LOCAL(temp ret_temp (Vint (Int.repr j))) SEP (data_at Ews (tarray tint n) (map Vint (map Int.repr al)) a).",
            "VernacDefinition",
            "f2e542f43bc16728c0c0755beba94a3b783a4a49"
        ],
        [
            "Lemma body_min2: semax_body Vprog Gprog f_minimum minimum_spec2.",
            "VernacStartTheoremProof",
            "dd5505eae0b22ec5810860c61fb67e7967814799"
        ],
        [
            "start_function.",
            "VernacExtend",
            "c9d31eecaa0cff79fee4b43862828db880600e1a"
        ],
        [
            "assert_PROP (Zlength al = n).",
            "VernacExtend",
            "e051b3616418f9beb924d30aabbdcea75a424149"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "autorewrite with sublist; auto.",
            "VernacExtend",
            "928ba352fac4c0a4d960f940cd8d2b6430082342"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward_for_simple_bound n (EX i:Z, EX j:Z, PROP( In j (sublist 0 (Z.max 1 i) al); Forall (Z.le j) (sublist 0 i al)) LOCAL( temp _min (Vint (Int.repr j)); temp _a a; temp _n (Vint (Int.repr n))) SEP(data_at Ews (tarray tint n) (map Vint (map Int.repr al)) a)).",
            "VernacExtend",
            "0263686bc39e034db6107e2f129f455cd50d279f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "Exists (Znth 0 al).",
            "VernacExtend",
            "e70ed1837bc93df0cc9b94415601a9607daf9625"
        ],
        [
            "autorewrite with sublist.",
            "VernacExtend",
            "27d3b47789f36e3bd15e796d8905bf4584c44131"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "rewrite sublist_one by omega.",
            "VernacExtend",
            "5338e7c24e9d1d3dab40bdffd002a55f4645a6ff"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "Intros.",
            "VernacExtend",
            "58784a78af6fa36ccbd531d2a460b187e88b99db"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "assert (repable_signed (Znth i al)) by (apply Forall_Znth; auto; omega).",
            "VernacExtend",
            "df3f63a6d5ae7b444b6ef9fd8794ff7e3944c043"
        ],
        [
            "assert (repable_signed j) by (eapply Forall_forall; [ | eassumption]; apply Forall_sublist; auto).",
            "VernacExtend",
            "8face62d055ba8fb1135954380d878eaeb829d2b"
        ],
        [
            "autorewrite with sublist.",
            "VernacExtend",
            "27d3b47789f36e3bd15e796d8905bf4584c44131"
        ],
        [
            "forward_if.",
            "VernacExtend",
            "c26d674c71f14838f40e15eee264b85c5a5c2b19"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists (Znth i al).",
            "VernacExtend",
            "0ae43e5ba7dec315fa91f6eca59acc4690864df4"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "rewrite Z.max_r by omega.",
            "VernacExtend",
            "8781eace12c9cb209471cff64545a076e9d72b4f"
        ],
        [
            "rewrite (sublist_split 0 i (i+1)) by omega.",
            "VernacExtend",
            "cd48bdb17f983b85643688d8ff63f5a1938b4636"
        ],
        [
            "rewrite (sublist_one i (i+1) al) by omega.",
            "VernacExtend",
            "671ff76f06c0947ccc04dcba0bc403680603c301"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply in_app; right; constructor; auto.",
            "VernacExtend",
            "879c69325a07c555f1ed6e78a49da26c9e190afd"
        ],
        [
            "apply Forall_app; split.",
            "VernacExtend",
            "454cd012e15aed157c3474224a6724ffdc52068e"
        ],
        [
            "eapply Forall_impl; try apply H4.",
            "VernacExtend",
            "61e67a6c3ba9b664bd22e5922e81fba82673b7d4"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists j.",
            "VernacExtend",
            "c2fbf2758eb91f608d0af10a72db9d70103df106"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "rewrite Z.max_r by omega.",
            "VernacExtend",
            "8781eace12c9cb209471cff64545a076e9d72b4f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "destruct (zlt 1 i).",
            "VernacExtend",
            "5df883272832f43404a14279dbe65123d5fa1a96"
        ],
        [
            "rewrite Z.max_r in H3 by omega.",
            "VernacExtend",
            "942f18227e545037187d8aaeb09c9a3f25fb9baf"
        ],
        [
            "rewrite (sublist_split 0 i (i+1)) by omega.",
            "VernacExtend",
            "cd48bdb17f983b85643688d8ff63f5a1938b4636"
        ],
        [
            "apply in_app; left; auto.",
            "VernacExtend",
            "208f6f48fdc425644d9b9077867b943bd508a57f"
        ],
        [
            "rewrite Z.max_l in H3 by omega.",
            "VernacExtend",
            "eb97e5f107b49ea16f08fbe6f4da960ce381ff7a"
        ],
        [
            "rewrite (sublist_split 0 1 (i+1)) by omega.",
            "VernacExtend",
            "6a1c34703f2031325db06cbd049fe3b938db9bcd"
        ],
        [
            "apply in_app; left; auto.",
            "VernacExtend",
            "208f6f48fdc425644d9b9077867b943bd508a57f"
        ],
        [
            "rewrite (sublist_split 0 i (i+1)) by omega.",
            "VernacExtend",
            "cd48bdb17f983b85643688d8ff63f5a1938b4636"
        ],
        [
            "apply Forall_app.",
            "VernacExtend",
            "60b2a135e3b418aad74fc8cbd5635ef865223ba8"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite sublist_one by omega.",
            "VernacExtend",
            "5338e7c24e9d1d3dab40bdffd002a55f4645a6ff"
        ],
        [
            "repeat constructor.",
            "VernacExtend",
            "79943d98275d564d777a905b79a73e398a3a18fd"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "Intros x.",
            "VernacExtend",
            "039e6da109967059966c4853d7f841e9af50e8e9"
        ],
        [
            "autorewrite with sublist in *.",
            "VernacExtend",
            "e0f3cd9ab6ba9c8ad99e82f91e13b9308caa56c3"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists x.",
            "VernacExtend",
            "c2937e15bc7e935fe3e2463016a0b7835360c74c"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "CompSpecs",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "make_compspecs prog.",
                        "VernacExtend",
                        "36220761a2e554d38938361d97a6a7824a7eb4eb"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Vprog",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "mk_varspecs prog.",
                        "VernacExtend",
                        "3d71166af717afdd6c2d6e7673cef893ac1c6afc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "fold_min_general",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "induction al; intros.",
                        "VernacExtend",
                        "1068feabd2738258b572f93c7133cfbbce45122b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "subst a.",
                        "VernacExtend",
                        "d7670e5f9c196bd417b16b29da3532f33d34884d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_min_l.",
                        "VernacExtend",
                        "d618d63a1e6450304683dc64d488be31c1610089"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.le_min_r.",
                        "VernacExtend",
                        "077bca8ed3b3a6c5148722ab7b7578fc3aaf4569"
                    ]
                },
                {
                    "command": [
                        "apply IHal.",
                        "VernacExtend",
                        "027b1bd7cca192f935cafa2b4d29954a182f47df"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_min",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply fold_min_general.",
                        "VernacExtend",
                        "e1838f93b15da3c7d53bcfcfc1dcacb16a41773f"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_fold_min",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold Z.min at 1.",
                        "VernacExtend",
                        "bc367e3082246a173fb5d13b94697da97e8fa6db"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.compare x0 (fold_right Z.min x l)) eqn:?; auto.",
                        "VernacExtend",
                        "bec480d7e4a2c4c22f9a6ae7188a9691021fe9c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_min_another",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert x; induction al; simpl; intros.",
                        "VernacExtend",
                        "dd2743458affd6b72508cb98d88b7fddf5afc88e"
                    ]
                },
                {
                    "command": [
                        "apply Z.min_comm.",
                        "VernacExtend",
                        "42700e5cbef155942a70d54314d587465ac0694f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.min_assoc.",
                        "VernacExtend",
                        "7c7d32ce865201dc953a01377b5990f985226653"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply IHal.",
                        "VernacExtend",
                        "027b1bd7cca192f935cafa2b4d29954a182f47df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_int_I32_Znth_map_Vint",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_map; auto.",
                        "VernacExtend",
                        "7a65899c557c2e7652f2335e3bbe235cd802564f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "body_min",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "start_function.",
                        "VernacExtend",
                        "c9d31eecaa0cff79fee4b43862828db880600e1a"
                    ]
                },
                {
                    "command": [
                        "assert_PROP (Zlength al = n).",
                        "VernacExtend",
                        "e051b3616418f9beb924d30aabbdcea75a424149"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "autorewrite with sublist; auto.",
                        "VernacExtend",
                        "928ba352fac4c0a4d960f940cd8d2b6430082342"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "forward_for_simple_bound n (EX i:Z, PROP() LOCAL(temp _min (Vint (Int.repr (fold_right Z.min (Znth 0 al) (sublist 0 i al)))); temp _a a; temp _n (Vint (Int.repr n))) SEP(data_at Ews (tarray tint n) (map Vint (map Int.repr al)) a)).",
                        "VernacExtend",
                        "7f35995c937e2f028386ce80d5fb9715a364595e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "assert (repable_signed (Znth i al)) by (apply Forall_Znth; auto; omega).",
                        "VernacExtend",
                        "df3f63a6d5ae7b444b6ef9fd8794ff7e3944c043"
                    ]
                },
                {
                    "command": [
                        "assert (repable_signed (fold_right Z.min (Znth 0 al) (sublist 0 i al))) by (apply Forall_fold_min; [apply Forall_Znth; auto; omega |apply Forall_sublist; auto]).",
                        "VernacExtend",
                        "b83bac6e901f8c6700c05ceb06c9900313acf4ee"
                    ]
                },
                {
                    "command": [
                        "autorewrite with sublist.",
                        "VernacExtend",
                        "27d3b47789f36e3bd15e796d8905bf4584c44131"
                    ]
                },
                {
                    "command": [
                        "subst POSTCONDITION; unfold abbreviate.",
                        "VernacExtend",
                        "3ba121f63cfecae6ca638e56e618263a1cdbe944"
                    ]
                },
                {
                    "command": [
                        "rewrite (sublist_split 0 i (i+1)) by omega.",
                        "VernacExtend",
                        "cd48bdb17f983b85643688d8ff63f5a1938b4636"
                    ]
                },
                {
                    "command": [
                        "rewrite (sublist_one i (i+1) al) by omega.",
                        "VernacExtend",
                        "671ff76f06c0947ccc04dcba0bc403680603c301"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_min_another.",
                        "VernacExtend",
                        "3153ca6a3f1c9ccb3bb483eee7815237791944d6"
                    ]
                },
                {
                    "command": [
                        "forward_if.",
                        "VernacExtend",
                        "c26d674c71f14838f40e15eee264b85c5a5c2b19"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.min_r; auto; omega.",
                        "VernacExtend",
                        "b1120ca17a2eddccba5e70fbcce4ea80a93787b9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.min_l; auto; omega.",
                        "VernacExtend",
                        "c5509d8396e03e96472ee933efe4261ba32fe81a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "autorewrite with sublist.",
                        "VernacExtend",
                        "27d3b47789f36e3bd15e796d8905bf4584c44131"
                    ]
                },
                {
                    "command": [
                        "destruct al; simpl; auto.",
                        "VernacExtend",
                        "56b550382b814fcb04abe3efc8a38f4f782cc6fc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "body_min'",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "start_function.",
                        "VernacExtend",
                        "c9d31eecaa0cff79fee4b43862828db880600e1a"
                    ]
                },
                {
                    "command": [
                        "assert_PROP (Zlength al = n).",
                        "VernacExtend",
                        "e051b3616418f9beb924d30aabbdcea75a424149"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "autorewrite with sublist; auto.",
                        "VernacExtend",
                        "928ba352fac4c0a4d960f940cd8d2b6430082342"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "revert POSTCONDITION; replace (hd 0 al) with (Znth 0 al) by (destruct al; reflexivity); intro POSTCONDITION.",
                        "VernacExtend",
                        "a4648dbf2cde0e5b1df8d32a616c07bce5328d74"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "pose (Inv d (f: Z->Prop) (i: Z) := PROP(0 <= i <= n; f i) LOCAL(temp _min (Vint (Int.repr (fold_right Z.min (Znth 0 al) (sublist 0 (i+d) al)))); temp _a a; temp _i (Vint (Int.repr i)); temp _n (Vint (Int.repr n))) SEP(data_at Ews (tarray tint n) (map Vint (map Int.repr al)) a)).",
                        "VernacExtend",
                        "c0eb2d3fffaeba466797f090f4d6b43e740fd982"
                    ]
                },
                {
                    "command": [
                        "forward_for (Inv 0 (fun _ => True)) continue: (Inv 1 (Z.gt n)).",
                        "VernacExtend",
                        "ff7ecb467432498ce121250ab2f752236d615cb0"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "Exists 0.",
                        "VernacExtend",
                        "cde6688457913206651aac7ff6334442533f83b6"
                    ]
                },
                {
                    "command": [
                        "unfold Inv; entailer!.",
                        "VernacExtend",
                        "3fb217706c84cd11c0d617a09e50eab0ce3aa8dd"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "match goal with | P := @abbreviate ret_assert _ |- _ => unfold abbreviate in P; subst P end.",
                        "VernacExtend",
                        "6fb7d872a74400868784380b052d46fb434613a1"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- semax _ _ ?c ?P => tryif (is_sequential false false c) then (apply sequential; simpl_ret_assert; match goal with |- semax _ _ _ ?Q => abbreviate Q : ret_assert as POSTCONDITION end) else abbreviate P : ret_assert as POSTCONDITION end.",
                        "VernacExtend",
                        "e0e8844ea3c0d0b45eb64eeb2cc1a88c8989c868"
                    ]
                },
                {
                    "command": [
                        "force_sequential.",
                        "VernacExtend",
                        "bb6f46edb8de4f17f4645b26020901e505bff257"
                    ]
                },
                {
                    "command": [
                        "abbreviate_semax.",
                        "VernacExtend",
                        "9be2efb733441191b2b253baf02d7e5749084d32"
                    ]
                },
                {
                    "command": [
                        "rename a0 into i.",
                        "VernacExtend",
                        "05e445fe5fa8584cbb787f4bdb631f4321abfbe6"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "assert (repable_signed (Znth i al)) by (apply Forall_Znth; auto; omega).",
                        "VernacExtend",
                        "df3f63a6d5ae7b444b6ef9fd8794ff7e3944c043"
                    ]
                },
                {
                    "command": [
                        "assert (repable_signed (fold_right Z.min (Znth 0 al) (sublist 0 i al))) by (apply Forall_fold_min; [apply Forall_Znth; auto; omega |apply Forall_sublist; auto]).",
                        "VernacExtend",
                        "b83bac6e901f8c6700c05ceb06c9900313acf4ee"
                    ]
                },
                {
                    "command": [
                        "autorewrite with sublist.",
                        "VernacExtend",
                        "27d3b47789f36e3bd15e796d8905bf4584c44131"
                    ]
                },
                {
                    "command": [
                        "apply semax_post_flipped' with (Inv 1 (Z.gt n) i).",
                        "VernacExtend",
                        "e4dd0821f88cced915a80f4cdfc3692bd588e63a"
                    ]
                },
                {
                    "command": [
                        "unfold Inv.",
                        "VernacExtend",
                        "e8acfda0c2dfa1a614d18a433c4e5064f24319ef"
                    ]
                },
                {
                    "command": [
                        "rewrite (sublist_split 0 i (i+1)) by omega.",
                        "VernacExtend",
                        "cd48bdb17f983b85643688d8ff63f5a1938b4636"
                    ]
                },
                {
                    "command": [
                        "rewrite (sublist_one i (i+1) al) by omega.",
                        "VernacExtend",
                        "671ff76f06c0947ccc04dcba0bc403680603c301"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_min_another.",
                        "VernacExtend",
                        "3153ca6a3f1c9ccb3bb483eee7815237791944d6"
                    ]
                },
                {
                    "command": [
                        "forward_if.",
                        "VernacExtend",
                        "c26d674c71f14838f40e15eee264b85c5a5c2b19"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.min_r; auto; omega.",
                        "VernacExtend",
                        "b1120ca17a2eddccba5e70fbcce4ea80a93787b9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.min_l; auto; omega.",
                        "VernacExtend",
                        "c5509d8396e03e96472ee933efe4261ba32fe81a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst POSTCONDITION; unfold abbreviate.",
                        "VernacExtend",
                        "3ba121f63cfecae6ca638e56e618263a1cdbe944"
                    ]
                },
                {
                    "command": [
                        "simpl_ret_assert.",
                        "VernacExtend",
                        "ff3fb2fdac49f5d86a418a483b73de7b6f146dab"
                    ]
                },
                {
                    "command": [
                        "Exists i.",
                        "VernacExtend",
                        "dc31239a0b5209e6d775a7cc7548153251f3e279"
                    ]
                },
                {
                    "command": [
                        "apply andp_left2.",
                        "VernacExtend",
                        "3da478e31ab10133b2816f729b2ec71358922e85"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rename a0 into i.",
                        "VernacExtend",
                        "05e445fe5fa8584cbb787f4bdb631f4321abfbe6"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "Exists (i+1).",
                        "VernacExtend",
                        "477e61c045a72453b6a62bd84be18f444ba934d0"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "autorewrite with sublist.",
                        "VernacExtend",
                        "27d3b47789f36e3bd15e796d8905bf4584c44131"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "body_min2",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "start_function.",
                        "VernacExtend",
                        "c9d31eecaa0cff79fee4b43862828db880600e1a"
                    ]
                },
                {
                    "command": [
                        "assert_PROP (Zlength al = n).",
                        "VernacExtend",
                        "e051b3616418f9beb924d30aabbdcea75a424149"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "autorewrite with sublist; auto.",
                        "VernacExtend",
                        "928ba352fac4c0a4d960f940cd8d2b6430082342"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "forward_for_simple_bound n (EX i:Z, EX j:Z, PROP( In j (sublist 0 (Z.max 1 i) al); Forall (Z.le j) (sublist 0 i al)) LOCAL( temp _min (Vint (Int.repr j)); temp _a a; temp _n (Vint (Int.repr n))) SEP(data_at Ews (tarray tint n) (map Vint (map Int.repr al)) a)).",
                        "VernacExtend",
                        "0263686bc39e034db6107e2f129f455cd50d279f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "Exists (Znth 0 al).",
                        "VernacExtend",
                        "e70ed1837bc93df0cc9b94415601a9607daf9625"
                    ]
                },
                {
                    "command": [
                        "autorewrite with sublist.",
                        "VernacExtend",
                        "27d3b47789f36e3bd15e796d8905bf4584c44131"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_one by omega.",
                        "VernacExtend",
                        "5338e7c24e9d1d3dab40bdffd002a55f4645a6ff"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "Intros.",
                        "VernacExtend",
                        "58784a78af6fa36ccbd531d2a460b187e88b99db"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "assert (repable_signed (Znth i al)) by (apply Forall_Znth; auto; omega).",
                        "VernacExtend",
                        "df3f63a6d5ae7b444b6ef9fd8794ff7e3944c043"
                    ]
                },
                {
                    "command": [
                        "assert (repable_signed j) by (eapply Forall_forall; [ | eassumption]; apply Forall_sublist; auto).",
                        "VernacExtend",
                        "8face62d055ba8fb1135954380d878eaeb829d2b"
                    ]
                },
                {
                    "command": [
                        "autorewrite with sublist.",
                        "VernacExtend",
                        "27d3b47789f36e3bd15e796d8905bf4584c44131"
                    ]
                },
                {
                    "command": [
                        "forward_if.",
                        "VernacExtend",
                        "c26d674c71f14838f40e15eee264b85c5a5c2b19"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "Exists (Znth i al).",
                        "VernacExtend",
                        "0ae43e5ba7dec315fa91f6eca59acc4690864df4"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.max_r by omega.",
                        "VernacExtend",
                        "8781eace12c9cb209471cff64545a076e9d72b4f"
                    ]
                },
                {
                    "command": [
                        "rewrite (sublist_split 0 i (i+1)) by omega.",
                        "VernacExtend",
                        "cd48bdb17f983b85643688d8ff63f5a1938b4636"
                    ]
                },
                {
                    "command": [
                        "rewrite (sublist_one i (i+1) al) by omega.",
                        "VernacExtend",
                        "671ff76f06c0947ccc04dcba0bc403680603c301"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply in_app; right; constructor; auto.",
                        "VernacExtend",
                        "879c69325a07c555f1ed6e78a49da26c9e190afd"
                    ]
                },
                {
                    "command": [
                        "apply Forall_app; split.",
                        "VernacExtend",
                        "454cd012e15aed157c3474224a6724ffdc52068e"
                    ]
                },
                {
                    "command": [
                        "eapply Forall_impl; try apply H4.",
                        "VernacExtend",
                        "61e67a6c3ba9b664bd22e5922e81fba82673b7d4"
                    ]
                },
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "Exists j.",
                        "VernacExtend",
                        "c2fbf2758eb91f608d0af10a72db9d70103df106"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.max_r by omega.",
                        "VernacExtend",
                        "8781eace12c9cb209471cff64545a076e9d72b4f"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt 1 i).",
                        "VernacExtend",
                        "5df883272832f43404a14279dbe65123d5fa1a96"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.max_r in H3 by omega.",
                        "VernacExtend",
                        "942f18227e545037187d8aaeb09c9a3f25fb9baf"
                    ]
                },
                {
                    "command": [
                        "rewrite (sublist_split 0 i (i+1)) by omega.",
                        "VernacExtend",
                        "cd48bdb17f983b85643688d8ff63f5a1938b4636"
                    ]
                },
                {
                    "command": [
                        "apply in_app; left; auto.",
                        "VernacExtend",
                        "208f6f48fdc425644d9b9077867b943bd508a57f"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.max_l in H3 by omega.",
                        "VernacExtend",
                        "eb97e5f107b49ea16f08fbe6f4da960ce381ff7a"
                    ]
                },
                {
                    "command": [
                        "rewrite (sublist_split 0 1 (i+1)) by omega.",
                        "VernacExtend",
                        "6a1c34703f2031325db06cbd049fe3b938db9bcd"
                    ]
                },
                {
                    "command": [
                        "apply in_app; left; auto.",
                        "VernacExtend",
                        "208f6f48fdc425644d9b9077867b943bd508a57f"
                    ]
                },
                {
                    "command": [
                        "rewrite (sublist_split 0 i (i+1)) by omega.",
                        "VernacExtend",
                        "cd48bdb17f983b85643688d8ff63f5a1938b4636"
                    ]
                },
                {
                    "command": [
                        "apply Forall_app.",
                        "VernacExtend",
                        "60b2a135e3b418aad74fc8cbd5635ef865223ba8"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_one by omega.",
                        "VernacExtend",
                        "5338e7c24e9d1d3dab40bdffd002a55f4645a6ff"
                    ]
                },
                {
                    "command": [
                        "repeat constructor.",
                        "VernacExtend",
                        "79943d98275d564d777a905b79a73e398a3a18fd"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "Intros x.",
                        "VernacExtend",
                        "039e6da109967059966c4853d7f841e9af50e8e9"
                    ]
                },
                {
                    "command": [
                        "autorewrite with sublist in *.",
                        "VernacExtend",
                        "e0f3cd9ab6ba9c8ad99e82f91e13b9308caa56c3"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "Exists x.",
                        "VernacExtend",
                        "c2937e15bc7e935fe3e2463016a0b7835360c74c"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}