{
    "filename": "progs/verif_merge.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.floyd.proofauto.",
            "VernacRequire",
            "1b5b5bd8f6976ab2a8ffc41bb68ef58d6fb49b99"
        ],
        [
            "Require Import VST.progs.merge.",
            "VernacRequire",
            "486706117db015f43718218c58607e4d58aa2f88"
        ],
        [
            "Require Import VST.progs.list_dt.",
            "VernacRequire",
            "f1385bfe09a4e9f6f6bb888222c1c2cf0a943a5c"
        ],
        [
            "Import LsegSpecial.",
            "VernacImport",
            "19a27b9d1cf8be36cfc90ce03b6618533d35da6d"
        ],
        [
            "Instance CompSpecs : compspecs.",
            "VernacInstance",
            "154eee01c656800e0ca79db421bf2abcdf325f7f"
        ],
        [
            "make_compspecs prog.",
            "VernacExtend",
            "36220761a2e554d38938361d97a6a7824a7eb4eb"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Vprog : varspecs.",
            "VernacDefinition",
            "071102901c915338608cbb3742cc92eff26260b2"
        ],
        [
            "mk_varspecs prog.",
            "VernacExtend",
            "3d71166af717afdd6c2d6e7673cef893ac1c6afc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Instance LS: listspec _list _tail (fun _ _ => emp).",
            "VernacInstance",
            "0cb20b2051aea1abace925b086aa323aed536e6f"
        ],
        [
            "eapply mk_listspec; reflexivity.",
            "VernacExtend",
            "ae4b502aea9811e9c87e9187d777df59e9266480"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition t_struct_list := Tstruct _list noattr.",
            "VernacDefinition",
            "307e1bbf13763851235b57a61fd5cf6448bd2aa8"
        ],
        [
            "Fixpoint merge l1 := match l1 with | nil => (fun l2 => l2) | h1 :: t1 => let fix merge_aux l2 := match l2 with | nil => l1 | h2 :: t2 => if Int.cmp Cle h1 h2 then h1 :: merge t1 l2 else h2 :: merge_aux t2 end in merge_aux end.",
            "VernacFixpoint",
            "47696ede928fee8fcc5cac326584c64cdc6b2f02"
        ],
        [
            "Definition tlist := tptr t_struct_list.",
            "VernacDefinition",
            "5c586fd14d20270e27b5fabd8dad79a547700402"
        ],
        [
            "Definition merge_spec := DECLARE _merge WITH sh : share, a : list int, b : list int, a_ : val, b_ : val PRE [ _a OF tlist, _b OF tlist ] PROP (writable_share sh) LOCAL (temp _a a_; temp _b b_) SEP (lseg LS sh (map Vint a) a_ nullval; lseg LS sh (map Vint b) b_ nullval) POST [ tlist ] EX pt:val, PROP () LOCAL (temp ret_temp pt) SEP (lseg LS sh (map Vint (merge a b)) pt nullval).",
            "VernacDefinition",
            "15752bda9b51dda051c164fab8e312fcc63576a6"
        ],
        [
            "Definition Gprog : funspecs := ltac:(with_library prog [ merge_spec ]).",
            "VernacDefinition",
            "87fa7775d348d3222d0b9dfbca7ffaae22876fd1"
        ],
        [
            "Fixpoint last (l : list int) := match l with | [] => Int.zero | [a] => a | _::l => last l end.",
            "VernacFixpoint",
            "d969038cf2a5244ae0dafdb57ccd9e074de35ee5"
        ],
        [
            "Fixpoint butlast (l : list int) := match l with | [] => [] | [a] => [] | a::l => a :: butlast l end.",
            "VernacFixpoint",
            "6cc34ace99dd1105e54047637ed6b1830c3da900"
        ],
        [
            "Lemma last_snoc h t : last (h ++ [t]) = t.",
            "VernacStartTheoremProof",
            "3f9b5ce88f9665a668b3d39e8b28ed3910f6c40f"
        ],
        [
            "induction h; simpl; auto.",
            "VernacExtend",
            "5969cd673b3cfea4dbf7e6031b6fe09905bc4374"
        ],
        [
            "rewrite IHh.",
            "VernacExtend",
            "9b5c543baf41c293d38ec6a0c0a3c9908ecd7c4d"
        ],
        [
            "remember (h ++ [t]) as l; destruct l; auto.",
            "VernacExtend",
            "cbccc78d7d300274650146eaeb2060fff3455af3"
        ],
        [
            "destruct h; inversion Heql.",
            "VernacExtend",
            "cebbc21fe716dbd1f635d77f76450f7644049c87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma butlast_snoc h t : butlast (h ++ [t]) = h.",
            "VernacStartTheoremProof",
            "1c7d602cb5ebcab8cb4991b8d6da0ead7e255bc7"
        ],
        [
            "induction h; simpl; auto.",
            "VernacExtend",
            "5969cd673b3cfea4dbf7e6031b6fe09905bc4374"
        ],
        [
            "rewrite IHh.",
            "VernacExtend",
            "9b5c543baf41c293d38ec6a0c0a3c9908ecd7c4d"
        ],
        [
            "remember (h ++ [t]) as l; destruct l; auto.",
            "VernacExtend",
            "cbccc78d7d300274650146eaeb2060fff3455af3"
        ],
        [
            "destruct h; inversion Heql.",
            "VernacExtend",
            "cebbc21fe716dbd1f635d77f76450f7644049c87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_data_at sh t v : field_at sh t [] v = data_at sh t v.",
            "VernacStartTheoremProof",
            "d9e58c21acef67f07cef6926328e6a52ef889228"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma butlast_fold h t : match t with [] => [] | _ :: _ => h :: butlast t end = butlast (h :: t).",
            "VernacStartTheoremProof",
            "0a712c40443130d437a473fb432c266ed89a4ebe"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_fold h t : match t with [] => h | _ :: _ => last t end = last (h :: t).",
            "VernacStartTheoremProof",
            "75582664247017eb3d3265a229220ac125cbaeb2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma snoc (l : list int) : l <> [] -> l = butlast l ++ [last l].",
            "VernacStartTheoremProof",
            "bc93fe98177b1cd9e115a6ae7f4529e44c83457b"
        ],
        [
            "intros E; destruct l as [|f l]; [elim E; auto | clear E].",
            "VernacExtend",
            "6199b06b3349427b359b108321433296dc58b2fd"
        ],
        [
            "revert f; induction l as [|h l]; intros f; simpl; auto.",
            "VernacExtend",
            "5b44c1892f6ff5af6cee6240833d6f62431567e3"
        ],
        [
            "f_equal; apply IHl.",
            "VernacExtend",
            "f4378b43c015b37a7afce7c683ddd8634403e26d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition merge_invariant _cond sh init_a init_b v_ret := (EX cond: int, EX a: list int, EX b: list int, EX merged: list int, EX a_: val, EX b_: val, EX c_: val, EX begin: val, PROP (merge init_a init_b = merged ++ merge a b; cond = Int.zero <-> (a_ = nullval \\/ b_ = nullval) ) LOCAL (temp _a a_; temp _b b_; temp _x (if merged then v_ret else field_address (Tstruct _list noattr) [StructField _tail] c_); lvar _ret tlist v_ret; temp _cond (Vint cond) ) SEP (lseg LS sh (map Vint a) a_ nullval; lseg LS sh (map Vint b) b_ nullval; data_at Tsh tlist (if merged then Vundef else begin) v_ret; lseg LS sh (map Vint (butlast merged)) begin c_; if merged then emp else data_at sh t_struct_list (Vint (last merged), Vundef) c_ ))%assert.",
            "VernacDefinition",
            "c9a58602a9038670dea35931d12aec1d744186ce"
        ],
        [
            "Lemma merge_nil_r a : merge a nil = a.",
            "VernacStartTheoremProof",
            "c322d454c3efd081e64f89355a7c313e4837fbad"
        ],
        [
            "induction a; simpl; auto.",
            "VernacExtend",
            "8afdae53803ca6f5ec59c4c4cc99815c70f6ed48"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma merge_nil_l a : merge nil a = a.",
            "VernacStartTheoremProof",
            "e8289503280b8e35fb93b5de91c0a0e36269bffc"
        ],
        [
            "induction a; simpl; auto.",
            "VernacExtend",
            "8afdae53803ca6f5ec59c4c4cc99815c70f6ed48"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_cell_field_at sh (v : val) p : list_cell LS sh v p = field_at sh list_struct [StructField _head] v p.",
            "VernacStartTheoremProof",
            "cb0fed2f0da1906182d684fdc799887cb286fa62"
        ],
        [
            "unfold list_cell, withspacer, field_at; simpl.",
            "VernacExtend",
            "1bd22761750a43b5ae8816871fa719e27683034e"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply ND_prop_ext.",
            "VernacExtend",
            "ea2a3d3252ce825ad575bb2ef6d150169a12f603"
        ],
        [
            "unfold field_compatible, legal_nested_field, legal_field in *; simpl.",
            "VernacExtend",
            "bc21178465e352ccfcf83197196f5fa8a6b45def"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "repeat constructor.",
            "VernacExtend",
            "79943d98275d564d777a905b79a73e398a3a18fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma entail_rewrite A B : A |-- B -> A = A && B.",
            "VernacStartTheoremProof",
            "9a5c0dbf7d5e3ae126081773dd3e74fc2995b27f"
        ],
        [
            "intros I.",
            "VernacExtend",
            "0372951ff41450bab4cf750c11f863800adc9768"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "now apply andp_right; auto.",
            "VernacExtend",
            "37e7e90c27d3a0460eca47eff02bc872f5415d10"
        ],
        [
            "now apply andp_left1; auto.",
            "VernacExtend",
            "279facb75378dcdba3492850fc06cceedd7fdf35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_append_null (cs : compspecs) (list_structid list_link : ident) (sh : share) (ls : listspec list_structid list_link list_token) (hd mid : val) (ct1 ct2 : list (elemtype ls)) : lseg ls sh ct1 hd mid * lseg ls sh ct2 mid nullval |-- lseg ls sh (ct1 ++ ct2) hd nullval.",
            "VernacStartTheoremProof",
            "982ba01ea2fbd12f4e3369578f521156fb4b689c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (AP : forall P Q, P * emp |-- Q * emp -> P |-- Q).",
            "VernacExtend",
            "84050479cacea1fe67f89ea68882607b1b65003a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply derives_trans; [ eapply derives_trans; [ | eassumption] | ]; cancel.",
            "VernacExtend",
            "032ced6b8431768429f4f735bfdb86bfc043c453"
        ],
        [
            "apply AP; clear AP.",
            "VernacExtend",
            "4a5830299c52824faaf5d842c66db2e1268d7459"
        ],
        [
            "apply (@list_append _ _ _ _ sh ls _ _ _ _ _ (fun _ => emp)).",
            "VernacExtend",
            "fc5b1ae56d8ea09d2a8c54230690299dfa3f65de"
        ],
        [
            "intros; unfold lseg_cell.",
            "VernacExtend",
            "3206e9ed299b82c21056eafb566e962c2db3ec36"
        ],
        [
            "rewrite (entail_rewrite _ _ (field_at_ptr_neq_null _ _ _ _ _)).",
            "VernacExtend",
            "d39a89e5bedd4070a43dc72fb48cdb50d2c74b6f"
        ],
        [
            "rewrite field_at_isptr.",
            "VernacExtend",
            "52f29e00d8e8f25443981f74064c08b22426583b"
        ],
        [
            "entailer.",
            "VernacExtend",
            "b73314f9b45f246f2bc4b3330fa13724d53d10fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma body_merge: semax_body Vprog Gprog f_merge merge_spec.",
            "VernacStartTheoremProof",
            "cc03d1d76763b9d7d8059624fb572fe7fa85207e"
        ],
        [
            "start_function.",
            "VernacExtend",
            "c9d31eecaa0cff79fee4b43862828db880600e1a"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "match goal with [|-context[Sset ?tempvar _] ] => forward_if (merge_invariant tempvar sh a b v_ret) end.",
            "VernacExtend",
            "5909ea31c72c253a258113b2cf83b8ac6e1ee63d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists (if Val.eq b_ nullval then Int.zero else Int.one) a b (@nil int) a_ b_ v_ret v_ret.",
            "VernacExtend",
            "faaa4879acaf2b55523d09351a00facd84aa3ceb"
        ],
        [
            "simpl map.",
            "VernacExtend",
            "09bcd1b174cca4985ee08b62f9f955b2e346c941"
        ],
        [
            "rewrite @lseg_nil_eq.",
            "VernacExtend",
            "bc5da7bee098745898205dcec90b3515efb52eb8"
        ],
        [
            "Time entailer!.",
            "VernacExtend",
            "a6a8e06209884712620bac71b9f3916e295e84c6"
        ],
        [
            "destruct b_; inv PNb_; simpl.",
            "VernacExtend",
            "d6f36783b116c8b3452981f9684a7a3bc24dd429"
        ],
        [
            "rewrite if_true by auto; intuition discriminate.",
            "VernacExtend",
            "f94456de6be00d28589dbb88cd218acc1ceda323"
        ],
        [
            "rewrite if_false by (intro Hx; inv Hx); intuition discriminate.",
            "VernacExtend",
            "6d7a7475e2024d52e498187ba72d3efd9ce01605"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists Int.zero a b (@nil int) a_ b_ v_ret v_ret.",
            "VernacExtend",
            "57b5df08b97664b20b0fda9015daaea14ebc29cd"
        ],
        [
            "simpl map.",
            "VernacExtend",
            "09bcd1b174cca4985ee08b62f9f955b2e346c941"
        ],
        [
            "rewrite @lseg_nil_eq.",
            "VernacExtend",
            "bc5da7bee098745898205dcec90b3515efb52eb8"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rename a into init_a.",
            "VernacExtend",
            "b6352299c37c8c9f2e76b29f0b381cc125636f06"
        ],
        [
            "rename b into init_b.",
            "VernacExtend",
            "74a115679d49ebcccb1a04bbf9622fa8746b4523"
        ],
        [
            "clear a_ b_.",
            "VernacExtend",
            "86d5e5dc7304d2d50bdb212fbc5667396d775969"
        ],
        [
            "unfold merge_invariant.",
            "VernacExtend",
            "5b8ad821d93a01036b09924d7b16b16a8100d9e6"
        ],
        [
            "Intros cond a b merged a_ b_ c_ begin.",
            "VernacExtend",
            "256f2417c641240dc3938fde26659a938132a787"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward_while (merge_invariant _cond sh init_a init_b v_ret).",
            "VernacExtend",
            "2f5ad4fb5900fdde23fc0eff7af38cfc02a2642c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "Exists cond a b merged a_ b_ c_ begin; entailer!.",
            "VernacExtend",
            "9f8b453a755f08f77113d98fc72494ea862b39e4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now entailer!.",
            "VernacExtend",
            "5122a4a6c16cb03cca8fe4ac52b872347287e0a9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "clear - SH HRE H1 H2.",
            "VernacExtend",
            "48c1cba8a92ff348d917f7878dedb1b0018aca53"
        ],
        [
            "rename cond0 into cond, a0 into a, b0 into b, merged0 into merged, a_0 into a_, b_0 into b_, c_0 into c_, begin0 into begin.",
            "VernacExtend",
            "26db8559df46f587a445a6fd08623e2126774002"
        ],
        [
            "assert (a_ <> nullval) by intuition.",
            "VernacExtend",
            "b9c72ff97b0420ac4a7feb047c479ec9a2b7ee22"
        ],
        [
            "assert (b_ <> nullval) by intuition.",
            "VernacExtend",
            "2e53da7a116f5cc512f73da7da307391bfbd86e3"
        ],
        [
            "clear H2.",
            "VernacExtend",
            "d86cdda4c02f9faf6d4c6694d967beddb27ce36a"
        ],
        [
            "drop_LOCAL 4%nat; clear cond HRE.",
            "VernacExtend",
            "d67aeac7e8c56c6e4143e0f599f566c50c38105f"
        ],
        [
            "rewrite lseg_unfold.",
            "VernacExtend",
            "ba16ec0d0e6cbf87ae648a46c523096198b1fdda"
        ],
        [
            "destruct a as [|va a']; simpl.",
            "VernacExtend",
            "0d8876876c3da54d263001fedf069a956f3a52cb"
        ],
        [
            "Intros; now intuition.",
            "VernacExtend",
            "2234c37af49e9e273be6aa6912ec1e4977f012cd"
        ],
        [
            "Intros a_'.",
            "VernacExtend",
            "7d2edb66bff7b47367cecb58f3de432de7b19421"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite list_cell_field_at.",
            "VernacExtend",
            "91ef56334c5fb4ab4653b282aeca0d781bb3d059"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "rewrite lseg_unfold with (v1:=b_).",
            "VernacExtend",
            "5167a869f2ecf2a11e5b0a6962fdfe25ec7e5b73"
        ],
        [
            "destruct b as [|vb b']; simpl.",
            "VernacExtend",
            "203a9bf152f2e1826b39eea5d3b2a541a22d6e55"
        ],
        [
            "Intros; now intuition.",
            "VernacExtend",
            "2234c37af49e9e273be6aa6912ec1e4977f012cd"
        ],
        [
            "Intros b_'.",
            "VernacExtend",
            "7ebce3eca55d2a576a50b52ff788fd18d81d6962"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "clear H2 H3.",
            "VernacExtend",
            "045265c740f29182306a378a41a4ca0cfdf00cd8"
        ],
        [
            "rewrite list_cell_field_at.",
            "VernacExtend",
            "91ef56334c5fb4ab4653b282aeca0d781bb3d059"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "remember (negb (Int.lt vb va)) as B; destruct B ; forward_if ( EX a: list int, EX b: list int, EX merged: list int, EX a_: val, EX b_: val, EX c_: val, EX begin: val, PROP (merge init_a init_b = merged ++ merge a b) LOCAL (temp _a a_; temp _b b_; temp _x (if merged then v_ret else field_address (Tstruct _list noattr) [StructField _tail] c_); lvar _ret tlist v_ret ) SEP (lseg LS sh (map Vint a) a_ nullval; lseg LS sh (map Vint b) b_ nullval; data_at Tsh tlist (if merged then Vundef else begin) v_ret; lseg LS sh (map Vint (butlast merged)) begin c_; if merged then emp else data_at sh t_struct_list (Vint (last merged), Vundef) c_ ))%assert.",
            "VernacExtend",
            "ab2948c8e22bfc1d9f8083a200296a6070c2cc72"
        ],
        [
            "destruct merged as [|hmerge tmerge].",
            "VernacExtend",
            "ee5c99e41f00332409378935a03ea8d383dcd80a"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists a' (vb::b') [va] a_' b_ a_ a_.",
            "VernacExtend",
            "24b8c50dbbb98d2021995a65790bfb5a51297ad8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite !@lseg_nil_eq.",
            "VernacExtend",
            "83350c281290b7010aae2b5f33ef0ad24218030f"
        ],
        [
            "rewrite (lseg_unfold LS _ _ b_).",
            "VernacExtend",
            "833e602e1a70b321cb9f496260302d45ff3a3ba7"
        ],
        [
            "Time entailer!.",
            "VernacExtend",
            "a6a8e06209884712620bac71b9f3916e295e84c6"
        ],
        [
            "Exists b_'.",
            "VernacExtend",
            "396079bf02c1abd184be4ca4189611ee7a5c4ee9"
        ],
        [
            "rewrite list_cell_field_at.",
            "VernacExtend",
            "91ef56334c5fb4ab4653b282aeca0d781bb3d059"
        ],
        [
            "unfold_data_at (data_at _ _ _ _).",
            "VernacExtend",
            "90421338274ed69a4a7071fdea096daa6d0a5813"
        ],
        [
            "Time entailer!.",
            "VernacExtend",
            "a6a8e06209884712620bac71b9f3916e295e84c6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "remember (hmerge :: tmerge) as merged.",
            "VernacExtend",
            "cf1cac845f4d1b99df7b2cc5c45933a14b5f9f00"
        ],
        [
            "assert (Hm: merged <> []) by congruence.",
            "VernacExtend",
            "5776ac994fd1537dde86937d60072ffa3b7f958e"
        ],
        [
            "clear hmerge tmerge Heqmerged.",
            "VernacExtend",
            "14caaad7db60a4d0bdff2725dc62f388f8a12e6e"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists a' (vb::b') (merged ++ [va]) a_' b_ a_ begin.",
            "VernacExtend",
            "e36818f65adefbd812483af82de3fe6f456e7717"
        ],
        [
            "rewrite <- app_assoc.",
            "VernacExtend",
            "58419932d54cdd1541230f0515f44a2e52bfe908"
        ],
        [
            "simpl app.",
            "VernacExtend",
            "5a39ba3195c1bcf4acdefe189883db7ad912f680"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "clear H1.",
            "VernacExtend",
            "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
        ],
        [
            "destruct (merged ++ [va]) eqn:?; [ now destruct merged; inv Heql | ].",
            "VernacExtend",
            "133a7f0803cfa9d6d4a878e8f850a8afa8fd176e"
        ],
        [
            "forget (i::l) as merged''; clear i l.",
            "VernacExtend",
            "7228bdd5f76d6b87b9815e6f2c2c3f6cf0c2aa38"
        ],
        [
            "Time entailer!.",
            "VernacExtend",
            "a6a8e06209884712620bac71b9f3916e295e84c6"
        ],
        [
            "rewrite butlast_snoc.",
            "VernacExtend",
            "0343ba804388cd3a4bb56663b38c3e850a671735"
        ],
        [
            "rewrite last_snoc.",
            "VernacExtend",
            "c62ccd533a1858bd8d08f92ec67fcaa2d257ea7d"
        ],
        [
            "rewrite (snoc merged) at 3 by auto.",
            "VernacExtend",
            "ddeab396443b84e8837ad339aff7278599c4d275"
        ],
        [
            "rewrite map_app.",
            "VernacExtend",
            "89eca143edf6436bb079a40b9fedf852073d1711"
        ],
        [
            "simpl map.",
            "VernacExtend",
            "09bcd1b174cca4985ee08b62f9f955b2e346c941"
        ],
        [
            "unfold_data_at (data_at _ _ _ c_).",
            "VernacExtend",
            "559073d685f3c2598d35a5cd49aeb5011a0bdabe"
        ],
        [
            "unfold_data_at (data_at _ _ _ a_).",
            "VernacExtend",
            "1d4ac8aadca75c8c609a7365e9d9fc0d9e13624e"
        ],
        [
            "match goal with |- ?B * ?C * ?D * ?E * ?F * ?G * (?H * ?A) |-- _ => apply derives_trans with ((H * A * G * C) * (B * D * E * F)); [cancel | ] end.",
            "VernacExtend",
            "16aefe4420f06fbef266272eeb41fc599f6bbb0b"
        ],
        [
            "eapply derives_trans; [apply sepcon_derives; [ | apply derives_refl] | ].",
            "VernacExtend",
            "a8b14fe70bebf3b901a5e8156115f6ee2dba8e3a"
        ],
        [
            "assert (LCR := lseg_cons_right_neq LS sh (map Vint (butlast merged)) begin (Vint (last merged)) c_ a_' a_); simpl in LCR.",
            "VernacExtend",
            "f258ae21e4104c144148131cc812ce516b86142b"
        ],
        [
            "rewrite list_cell_field_at, emp_sepcon in LCR.",
            "VernacExtend",
            "cf0adadf03188c8868de50fd4a8fae03acf6d4bd"
        ],
        [
            "apply LCR; auto.",
            "VernacExtend",
            "7d082b94c3b6c39d6ad4041e6958d7f72c3688fa"
        ],
        [
            "rewrite @lseg_cons_eq.",
            "VernacExtend",
            "34ac125a8bf0d673c53a3d28c31d14f0a78088a0"
        ],
        [
            "Exists b_'.",
            "VernacExtend",
            "396079bf02c1abd184be4ca4189611ee7a5c4ee9"
        ],
        [
            "rewrite list_cell_field_at.",
            "VernacExtend",
            "91ef56334c5fb4ab4653b282aeca0d781bb3d059"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "rewrite H2 in HeqB; inversion HeqB.",
            "VernacExtend",
            "1374a47ebd8985242e77633af219dd89886eeda8"
        ],
        [
            "clear -SH.",
            "VernacExtend",
            "85c351c2d825a670b57e426b69e4480fbe483e4c"
        ],
        [
            "Intros a b merged a_ b_ c_ begin.",
            "VernacExtend",
            "8584daa714ffaebaa18f8f23beadb16b396c3310"
        ],
        [
            "match goal with [|-context[Sset ?tempvar _] ] => forward_if (merge_invariant tempvar sh init_a init_b v_ret) end.",
            "VernacExtend",
            "6f19bb64d6ce5ab2e7ded3cce4bd373bc005b9e7"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "assert_PROP (is_pointer_or_null b_); [ now entailer | ].",
            "VernacExtend",
            "8a32e022f93c6a3cf480b90f51d69bc9da863e9d"
        ],
        [
            "destruct b_; inversion H1; simpl force_val.",
            "VernacExtend",
            "3cc86e7552850386807a5dd41a7f801604c2a984"
        ],
        [
            "Exists Int.zero a b merged a_ nullval c_ begin.",
            "VernacExtend",
            "5c76ea2f5fb56ed73951fd6af3f82ef26101631c"
        ],
        [
            "now entailer!; intuition.",
            "VernacExtend",
            "1d713cd606099e1778e8b7a60234a4f6da555282"
        ],
        [
            "Exists Int.one a b merged a_ (Vptr b0 i) c_ begin.",
            "VernacExtend",
            "5d6b9e98c25cf22cb333acf83db6ec3822d1294a"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "intuition discriminate.",
            "VernacExtend",
            "3137e5957d23860aff1b7d147379554bf152a631"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists Int.zero a b merged a_ b_ c_ begin.",
            "VernacExtend",
            "e7018b7f004063169c2dd0b2e0b8f4812ae72855"
        ],
        [
            "entailer!; intuition.",
            "VernacExtend",
            "1e7f4d90908def93b9ccfe5b881363647546c8b4"
        ],
        [
            "clear -SH.",
            "VernacExtend",
            "85c351c2d825a670b57e426b69e4480fbe483e4c"
        ],
        [
            "unfold merge_invariant.",
            "VernacExtend",
            "5b8ad821d93a01036b09924d7b16b16a8100d9e6"
        ],
        [
            "Intros cond a b merged a_ b_ c_ begin.",
            "VernacExtend",
            "256f2417c641240dc3938fde26659a938132a787"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists (cond, a, b, merged, a_, b_, c_, begin).",
            "VernacExtend",
            "2647c0b1a1d097fc00b7d522c9407612a2a5ccb9"
        ],
        [
            "now entailer!.",
            "VernacExtend",
            "5122a4a6c16cb03cca8fe4ac52b872347287e0a9"
        ],
        [
            "rewrite H2 in HeqB; inversion HeqB.",
            "VernacExtend",
            "1374a47ebd8985242e77633af219dd89886eeda8"
        ],
        [
            "destruct merged as [|hmerge tmerge].",
            "VernacExtend",
            "ee5c99e41f00332409378935a03ea8d383dcd80a"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists (va::a') b' [vb] a_ b_' b_ b_.",
            "VernacExtend",
            "53a29f0887d4ee6a4ca4ddc222c7e43f65c988aa"
        ],
        [
            "simpl map.",
            "VernacExtend",
            "09bcd1b174cca4985ee08b62f9f955b2e346c941"
        ],
        [
            "rewrite @lseg_cons_eq.",
            "VernacExtend",
            "34ac125a8bf0d673c53a3d28c31d14f0a78088a0"
        ],
        [
            "Exists a_'.",
            "VernacExtend",
            "1b250f84e229aeb05bdfbc87f4afc95f55eac025"
        ],
        [
            "rewrite list_cell_field_at.",
            "VernacExtend",
            "91ef56334c5fb4ab4653b282aeca0d781bb3d059"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "unfold_data_at (data_at _ _ _ _).",
            "VernacExtend",
            "90421338274ed69a4a7071fdea096daa6d0a5813"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "remember (hmerge :: tmerge) as merged.",
            "VernacExtend",
            "cf1cac845f4d1b99df7b2cc5c45933a14b5f9f00"
        ],
        [
            "assert (Hm: merged <> []) by congruence.",
            "VernacExtend",
            "5776ac994fd1537dde86937d60072ffa3b7f958e"
        ],
        [
            "clear hmerge tmerge Heqmerged.",
            "VernacExtend",
            "14caaad7db60a4d0bdff2725dc62f388f8a12e6e"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists (va::a') b' (merged ++ [vb]) a_ b_' b_ begin.",
            "VernacExtend",
            "a6dda04ab28c9134125e0678a7652e22173aa198"
        ],
        [
            "destruct (merged ++ [vb]) eqn:?.",
            "VernacExtend",
            "fcc069b1e81debf41a9082ff5616c58c7c835a0b"
        ],
        [
            "destruct merged; inv Heql.",
            "VernacExtend",
            "4f2080b8c25d632de60f9a22bb81c5280a7284d9"
        ],
        [
            "forget (i::l) as merged''; clear i l; subst merged''.",
            "VernacExtend",
            "8c30adf84d2799f5231a64f7ab16aa4954418df4"
        ],
        [
            "rewrite app_ass.",
            "VernacExtend",
            "1e8737a155ba47802e4df29a56a47a094af2082d"
        ],
        [
            "Time entailer!.",
            "VernacExtend",
            "a6a8e06209884712620bac71b9f3916e295e84c6"
        ],
        [
            "rewrite butlast_snoc.",
            "VernacExtend",
            "0343ba804388cd3a4bb56663b38c3e850a671735"
        ],
        [
            "rewrite last_snoc.",
            "VernacExtend",
            "c62ccd533a1858bd8d08f92ec67fcaa2d257ea7d"
        ],
        [
            "rewrite @lseg_cons_eq.",
            "VernacExtend",
            "34ac125a8bf0d673c53a3d28c31d14f0a78088a0"
        ],
        [
            "Exists a_'.",
            "VernacExtend",
            "1b250f84e229aeb05bdfbc87f4afc95f55eac025"
        ],
        [
            "Time entailer!.",
            "VernacExtend",
            "a6a8e06209884712620bac71b9f3916e295e84c6"
        ],
        [
            "pattern merged at 3; rewrite snoc by auto.",
            "VernacExtend",
            "0a60c3a96bca1a1f7b9583b5b68639ebe96c5965"
        ],
        [
            "rewrite map_app.",
            "VernacExtend",
            "89eca143edf6436bb079a40b9fedf852073d1711"
        ],
        [
            "simpl map.",
            "VernacExtend",
            "09bcd1b174cca4985ee08b62f9f955b2e346c941"
        ],
        [
            "assert (LCR := lseg_cons_right_neq LS sh (map Vint (butlast merged)) begin (Vint (last merged)) c_ b_' b_).",
            "VernacExtend",
            "abbcd2d2e2db6a0365ccca4867a78d243833d377"
        ],
        [
            "simpl in LCR.",
            "VernacExtend",
            "2433957144709dabb6e3e13aad9d6b5139e6f8f5"
        ],
        [
            "rewrite emp_sepcon, list_cell_field_at in LCR.",
            "VernacExtend",
            "e8f1db88809029abb9e413d8fb08b4c09efea3c2"
        ],
        [
            "unfold_data_at (data_at _ _ _ c_).",
            "VernacExtend",
            "559073d685f3c2598d35a5cd49aeb5011a0bdabe"
        ],
        [
            "unfold_data_at (data_at _ _ _ b_).",
            "VernacExtend",
            "27192bdf81bb93fb79994bfdbb5a6e6a8a029ab6"
        ],
        [
            "match goal with |- ?B * ?C * ?D * ?E * (?F * ?A) |-- _ => apply derives_trans with ((F * A * E * D) * (B * C)); [cancel | ] end.",
            "VernacExtend",
            "fce7aeeb57e38ec206c17855f9bd3f0361cc9ba1"
        ],
        [
            "eapply derives_trans; [apply sepcon_derives; [ | apply derives_refl] | ].",
            "VernacExtend",
            "a8b14fe70bebf3b901a5e8156115f6ee2dba8e3a"
        ],
        [
            "apply LCR; auto.",
            "VernacExtend",
            "7d082b94c3b6c39d6ad4041e6958d7f72c3688fa"
        ],
        [
            "rewrite list_cell_field_at.",
            "VernacExtend",
            "91ef56334c5fb4ab4653b282aeca0d781bb3d059"
        ],
        [
            "cancel.",
            "VernacExtend",
            "24ea99f626ec31ff5120f99494a934737348354b"
        ],
        [
            "clear -SH.",
            "VernacExtend",
            "85c351c2d825a670b57e426b69e4480fbe483e4c"
        ],
        [
            "Intros a b merged a_ b_ c_ begin.",
            "VernacExtend",
            "8584daa714ffaebaa18f8f23beadb16b396c3310"
        ],
        [
            "match goal with [|-context[Sset ?tempvar _] ] => forward_if (merge_invariant tempvar sh init_a init_b v_ret) end.",
            "VernacExtend",
            "6f19bb64d6ce5ab2e7ded3cce4bd373bc005b9e7"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "assert_PROP (is_pointer_or_null b_); [ now entailer! | ].",
            "VernacExtend",
            "cbea7f95fbca9d56af9395f1bb75c6ef56b9dcb3"
        ],
        [
            "destruct b_; inversion H1; simpl force_val.",
            "VernacExtend",
            "3cc86e7552850386807a5dd41a7f801604c2a984"
        ],
        [
            "Exists Int.zero a b merged a_ nullval c_ begin.",
            "VernacExtend",
            "5c76ea2f5fb56ed73951fd6af3f82ef26101631c"
        ],
        [
            "now entailer!; intuition.",
            "VernacExtend",
            "1d713cd606099e1778e8b7a60234a4f6da555282"
        ],
        [
            "Exists Int.one a b merged a_ (Vptr b0 i) c_ begin.",
            "VernacExtend",
            "5d6b9e98c25cf22cb333acf83db6ec3822d1294a"
        ],
        [
            "entailer!; intuition discriminate.",
            "VernacExtend",
            "a2f5d8f1ce083c58ce846517ad334228db621bf9"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists Int.zero a b merged a_ b_ c_ begin.",
            "VernacExtend",
            "e7018b7f004063169c2dd0b2e0b8f4812ae72855"
        ],
        [
            "entailer!; intuition.",
            "VernacExtend",
            "1e7f4d90908def93b9ccfe5b881363647546c8b4"
        ],
        [
            "clear -SH.",
            "VernacExtend",
            "85c351c2d825a670b57e426b69e4480fbe483e4c"
        ],
        [
            "unfold merge_invariant.",
            "VernacExtend",
            "5b8ad821d93a01036b09924d7b16b16a8100d9e6"
        ],
        [
            "Intros cond a b merged a_ b_ c_ begin.",
            "VernacExtend",
            "256f2417c641240dc3938fde26659a938132a787"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists (cond, a, b, merged, a_, b_, c_, begin).",
            "VernacExtend",
            "2647c0b1a1d097fc00b7d522c9407612a2a5ccb9"
        ],
        [
            "now entailer!.",
            "VernacExtend",
            "5122a4a6c16cb03cca8fe4ac52b872347287e0a9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "clear a b merged a_ b_ c_ cond H H0 begin.",
            "VernacExtend",
            "452e48b963a1b06b5f5aac06059e197d664230dc"
        ],
        [
            "rename cond0 into cond, a0 into a, b0 into b, merged0 into merged, a_0 into a_, b_0 into b_, c_0 into c_, begin0 into begin.",
            "VernacExtend",
            "26db8559df46f587a445a6fd08623e2126774002"
        ],
        [
            "subst cond.",
            "VernacExtend",
            "eeb111803e0e60700f1ca34babb872cce9f09440"
        ],
        [
            "assert (a_ = nullval \\/ b_ = nullval) by (clear - H2; intuition).",
            "VernacExtend",
            "89e26c3409f42df67ab04e9848fc127662aa6501"
        ],
        [
            "clear H2.",
            "VernacExtend",
            "d86cdda4c02f9faf6d4c6694d967beddb27ce36a"
        ],
        [
            "forward_if ( EX a: list int, EX b: list int, EX merged: list int, EX ab_: val, EX c_: val, EX begin: val, PROP (merge init_a init_b = merged ++ merge a b) LOCAL (temp _a a_; temp _b b_; temp _x (if merged then v_ret else field_address (Tstruct _list noattr) [StructField _tail] c_); lvar _ret tlist v_ret ) SEP (lseg LS sh (map Vint (merge a b)) ab_ nullval; data_at Tsh tlist (if merged then ab_ else begin) v_ret; lseg LS sh (map Vint (butlast merged)) begin c_; if merged then emp else data_at sh t_struct_list (Vint (last merged), ab_) c_ ))%assert.",
            "VernacExtend",
            "12df04f00c67e6ee59f6ef607dfa6675dfb4524f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert_PROP (b_ = nullval /\\ b = []).",
            "VernacExtend",
            "db08f316ab3c58ac1ae6a50e258098744ba046e7"
        ],
        [
            "entailer!; intuition.",
            "VernacExtend",
            "1e7f4d90908def93b9ccfe5b881363647546c8b4"
        ],
        [
            "destruct b; inv H; auto.",
            "VernacExtend",
            "59f939ca25719f8c7eb60256c67ca9ec3670ac16"
        ],
        [
            "revert POSTCONDITION; destruct H2; subst b_ b; intro.",
            "VernacExtend",
            "2c8434f8732b5b8cbd992d2db7ef290b2751d0be"
        ],
        [
            "destruct merged as [|hmerge tmerge].",
            "VernacExtend",
            "ee5c99e41f00332409378935a03ea8d383dcd80a"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists a (@nil int) (@nil int) a_ c_ begin.",
            "VernacExtend",
            "17c3f31ec7d08194fa4a57f727675f5b6b60c15e"
        ],
        [
            "rewrite merge_nil_r in *.",
            "VernacExtend",
            "3b50cfd3fd37940ec472bfde5308bf28734e8b10"
        ],
        [
            "unfold data_at.",
            "VernacExtend",
            "900b8376ee8e08bfe1071b13bc9af1c7c9bafcb5"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "remember (hmerge :: tmerge) as merged.",
            "VernacExtend",
            "cf1cac845f4d1b99df7b2cc5c45933a14b5f9f00"
        ],
        [
            "assert (Hm: merged <> []) by congruence.",
            "VernacExtend",
            "5776ac994fd1537dde86937d60072ffa3b7f958e"
        ],
        [
            "clear hmerge tmerge Heqmerged.",
            "VernacExtend",
            "14caaad7db60a4d0bdff2725dc62f388f8a12e6e"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists a (@nil int) merged a_ c_ begin.",
            "VernacExtend",
            "06942851bbcf32b1f3bf2c3c6a32fb2e2271e8be"
        ],
        [
            "destruct merged; [congruence|].",
            "VernacExtend",
            "7c41f92a1b577046b388b5ce9a53708a706311df"
        ],
        [
            "match goal with [ H: ?x :: merged <> [] |- _ ] => remember (x :: merged) as merged' end.",
            "VernacExtend",
            "cc078853dbb0a2ed64d21beeac6a571c8dd37b67"
        ],
        [
            "clear Heqmerged' merged.",
            "VernacExtend",
            "ac205076f3e03f88b147e5f5aca7d818ee15799f"
        ],
        [
            "rewrite merge_nil_r in *.",
            "VernacExtend",
            "3b50cfd3fd37940ec472bfde5308bf28734e8b10"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert_PROP (a = []).",
            "VernacExtend",
            "dea5ebac065b5edceae80774b2a896d05ac7a762"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct a; [ apply prop_right; reflexivity | ].",
            "VernacExtend",
            "2f5dd71a077cd258a04b76df969f1d1c47f207a9"
        ],
        [
            "simpl map; rewrite lseg_unfold.",
            "VernacExtend",
            "e5829a70aff8f5ff0d944e0639109e30c9a127e6"
        ],
        [
            "subst a_; entailer!.",
            "VernacExtend",
            "72a07cfb916533e8b7e14eddca8ba12feef99b81"
        ],
        [
            "elim H6; clear; intuition.",
            "VernacExtend",
            "79eb36e05fc8748716301c12f36d9326b8772b4d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "destruct merged as [|hmerge tmerge].",
            "VernacExtend",
            "ee5c99e41f00332409378935a03ea8d383dcd80a"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists (@nil int) b (@nil int) b_ c_ begin.",
            "VernacExtend",
            "065b2c7ca21b73de172eb7dc0dc044558e992a07"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "remember (hmerge :: tmerge) as merged.",
            "VernacExtend",
            "cf1cac845f4d1b99df7b2cc5c45933a14b5f9f00"
        ],
        [
            "assert (Hm: merged <> []) by congruence.",
            "VernacExtend",
            "5776ac994fd1537dde86937d60072ffa3b7f958e"
        ],
        [
            "clear hmerge tmerge Heqmerged.",
            "VernacExtend",
            "14caaad7db60a4d0bdff2725dc62f388f8a12e6e"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists (@nil int) b merged b_ c_ begin.",
            "VernacExtend",
            "3b24cc183f37490ce49ed10bec329d13c8292e05"
        ],
        [
            "destruct merged; [congruence|].",
            "VernacExtend",
            "7c41f92a1b577046b388b5ce9a53708a706311df"
        ],
        [
            "match goal with [ H: ?x :: merged <> [] |- _ ] => remember (x :: merged) as merged' end.",
            "VernacExtend",
            "cc078853dbb0a2ed64d21beeac6a571c8dd37b67"
        ],
        [
            "clear Heqmerged' merged.",
            "VernacExtend",
            "ac205076f3e03f88b147e5f5aca7d818ee15799f"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "clear -SH.",
            "VernacExtend",
            "85c351c2d825a670b57e426b69e4480fbe483e4c"
        ],
        [
            "Intros a b merged ab_ c_ begin.",
            "VernacExtend",
            "1b69e1cb6cc036f74368b205ea6a04560ce7635f"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "now destruct merged; entailer!.",
            "VernacExtend",
            "4e996fdcb0bec48242fb46b9b343e424d1e3507f"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "destruct merged as [|hmerge tmerge].",
            "VernacExtend",
            "ee5c99e41f00332409378935a03ea8d383dcd80a"
        ],
        [
            "assert (begin = c_) by intuition.",
            "VernacExtend",
            "61928ed38487b796d3c717e4c88d5b7ca1c33058"
        ],
        [
            "subst c_.",
            "VernacExtend",
            "383babfd3ba37b3db767d5dffedb5d98ce2a5e75"
        ],
        [
            "Exists ab_; entailer!.",
            "VernacExtend",
            "f57ecf24c7432f7babea81deab45153b82acee43"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "remember (hmerge :: tmerge) as merged.",
            "VernacExtend",
            "cf1cac845f4d1b99df7b2cc5c45933a14b5f9f00"
        ],
        [
            "assert (Hm: merged <> []) by congruence.",
            "VernacExtend",
            "5776ac994fd1537dde86937d60072ffa3b7f958e"
        ],
        [
            "clear hmerge tmerge Heqmerged.",
            "VernacExtend",
            "14caaad7db60a4d0bdff2725dc62f388f8a12e6e"
        ],
        [
            "Exists begin; entailer.",
            "VernacExtend",
            "c19032b23f0aed4c8991f733d7d82458edfce9d4"
        ],
        [
            "assert (AP : forall M1 R1 M2 M3 M13 M R, R1 |-- R -> M1 * M3 |-- M13 -> M2 * M13 |-- M -> M1 * R1 * M2 * M3 |-- M * R).",
            "VernacExtend",
            "fa4b987ee878b86cca4d061439a212c067d397b4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear; intros.",
            "VernacExtend",
            "21f974032da1047589f908e0d18f7e7584bbb4a4"
        ],
        [
            "apply derives_trans with (M * R1); cancel; auto.",
            "VernacExtend",
            "4e1e35c575aec3e584cff37a81dfab8fb173ec20"
        ],
        [
            "now apply derives_trans with (M2 * M13); cancel; auto.",
            "VernacExtend",
            "5726bc57b83b96143735bd32ab860ba1ecfcd125"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply AP with (lseg LS sh (Vint (last merged) :: map Vint (merge a b)) c_ nullval); clear AP.",
            "VernacExtend",
            "e1b3978ba5c90b6980e73be01ff0bbf15baf756a"
        ],
        [
            "cancel.",
            "VernacExtend",
            "24ea99f626ec31ff5120f99494a934737348354b"
        ],
        [
            "idtac.",
            "VernacExtend",
            "31a9516ab7a0061b876094f40f8973273413025d"
        ],
        [
            "rewrite (lseg_unfold LS _ _ c_).",
            "VernacExtend",
            "79eea24d7a9a08c95ea048ce890e165723ce4302"
        ],
        [
            "Exists ab_; entailer!.",
            "VernacExtend",
            "f57ecf24c7432f7babea81deab45153b82acee43"
        ],
        [
            "rewrite list_cell_field_at.",
            "VernacExtend",
            "91ef56334c5fb4ab4653b282aeca0d781bb3d059"
        ],
        [
            "unfold_data_at (data_at _ _ _ _).",
            "VernacExtend",
            "90421338274ed69a4a7071fdea096daa6d0a5813"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cancel.",
            "VernacExtend",
            "24ea99f626ec31ff5120f99494a934737348354b"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "replace (merged ++ merge a b) with (butlast merged ++ (last merged :: merge a b)).",
            "VernacExtend",
            "f0efc9081787de07e8141447436cc270cbcbb7af"
        ],
        [
            "rewrite map_app.",
            "VernacExtend",
            "89eca143edf6436bb079a40b9fedf852073d1711"
        ],
        [
            "apply list_append_null.",
            "VernacExtend",
            "fa8c83a51781714d34fc34bebd4217f05acc5f37"
        ],
        [
            "clear -Hm.",
            "VernacExtend",
            "6d7757f1711f181dfaaa5e0a03527dc5ff4b3ef2"
        ],
        [
            "change (butlast merged ++ ([last merged] ++ merge a b) = merged ++ merge a b).",
            "VernacExtend",
            "98335222e33719994535eae2fa71eeafbfd5deef"
        ],
        [
            "rewrite <-app_ass.",
            "VernacExtend",
            "01fe27f1934651fa211feca2b08097e840f7a3e9"
        ],
        [
            "now rewrite <-snoc; auto.",
            "VernacExtend",
            "a187066093a9f9d67369228638db6b6cab6e2511"
        ],
        [
            "Time Qed.",
            "VernacEndProof",
            "59ba6aa4fe1286a283227671303a9756140bbe3a"
        ]
    ],
    "proofs": [
        {
            "name": "CompSpecs",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "make_compspecs prog.",
                        "VernacExtend",
                        "36220761a2e554d38938361d97a6a7824a7eb4eb"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Vprog",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "mk_varspecs prog.",
                        "VernacExtend",
                        "3d71166af717afdd6c2d6e7673cef893ac1c6afc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "LS",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "eapply mk_listspec; reflexivity.",
                        "VernacExtend",
                        "ae4b502aea9811e9c87e9187d777df59e9266480"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "last_snoc",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "induction h; simpl; auto.",
                        "VernacExtend",
                        "5969cd673b3cfea4dbf7e6031b6fe09905bc4374"
                    ]
                },
                {
                    "command": [
                        "rewrite IHh.",
                        "VernacExtend",
                        "9b5c543baf41c293d38ec6a0c0a3c9908ecd7c4d"
                    ]
                },
                {
                    "command": [
                        "remember (h ++ [t]) as l; destruct l; auto.",
                        "VernacExtend",
                        "cbccc78d7d300274650146eaeb2060fff3455af3"
                    ]
                },
                {
                    "command": [
                        "destruct h; inversion Heql.",
                        "VernacExtend",
                        "cebbc21fe716dbd1f635d77f76450f7644049c87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "butlast_snoc",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "induction h; simpl; auto.",
                        "VernacExtend",
                        "5969cd673b3cfea4dbf7e6031b6fe09905bc4374"
                    ]
                },
                {
                    "command": [
                        "rewrite IHh.",
                        "VernacExtend",
                        "9b5c543baf41c293d38ec6a0c0a3c9908ecd7c4d"
                    ]
                },
                {
                    "command": [
                        "remember (h ++ [t]) as l; destruct l; auto.",
                        "VernacExtend",
                        "cbccc78d7d300274650146eaeb2060fff3455af3"
                    ]
                },
                {
                    "command": [
                        "destruct h; inversion Heql.",
                        "VernacExtend",
                        "cebbc21fe716dbd1f635d77f76450f7644049c87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_data_at",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "butlast_fold",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_fold",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "snoc",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros E; destruct l as [|f l]; [elim E; auto | clear E].",
                        "VernacExtend",
                        "6199b06b3349427b359b108321433296dc58b2fd"
                    ]
                },
                {
                    "command": [
                        "revert f; induction l as [|h l]; intros f; simpl; auto.",
                        "VernacExtend",
                        "5b44c1892f6ff5af6cee6240833d6f62431567e3"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply IHl.",
                        "VernacExtend",
                        "f4378b43c015b37a7afce7c683ddd8634403e26d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "merge_nil_r",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "induction a; simpl; auto.",
                        "VernacExtend",
                        "8afdae53803ca6f5ec59c4c4cc99815c70f6ed48"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "merge_nil_l",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "induction a; simpl; auto.",
                        "VernacExtend",
                        "8afdae53803ca6f5ec59c4c4cc99815c70f6ed48"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_cell_field_at",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "unfold list_cell, withspacer, field_at; simpl.",
                        "VernacExtend",
                        "1bd22761750a43b5ae8816871fa719e27683034e"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply ND_prop_ext.",
                        "VernacExtend",
                        "ea2a3d3252ce825ad575bb2ef6d150169a12f603"
                    ]
                },
                {
                    "command": [
                        "unfold field_compatible, legal_nested_field, legal_field in *; simpl.",
                        "VernacExtend",
                        "bc21178465e352ccfcf83197196f5fa8a6b45def"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "repeat constructor.",
                        "VernacExtend",
                        "79943d98275d564d777a905b79a73e398a3a18fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "entail_rewrite",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros I.",
                        "VernacExtend",
                        "0372951ff41450bab4cf750c11f863800adc9768"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "now apply andp_right; auto.",
                        "VernacExtend",
                        "37e7e90c27d3a0460eca47eff02bc872f5415d10"
                    ]
                },
                {
                    "command": [
                        "now apply andp_left1; auto.",
                        "VernacExtend",
                        "279facb75378dcdba3492850fc06cceedd7fdf35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_append_null",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (AP : forall P Q, P * emp |-- Q * emp -> P |-- Q).",
                        "VernacExtend",
                        "84050479cacea1fe67f89ea68882607b1b65003a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans; [ eapply derives_trans; [ | eassumption] | ]; cancel.",
                        "VernacExtend",
                        "032ced6b8431768429f4f735bfdb86bfc043c453"
                    ]
                },
                {
                    "command": [
                        "apply AP; clear AP.",
                        "VernacExtend",
                        "4a5830299c52824faaf5d842c66db2e1268d7459"
                    ]
                },
                {
                    "command": [
                        "apply (@list_append _ _ _ _ sh ls _ _ _ _ _ (fun _ => emp)).",
                        "VernacExtend",
                        "fc5b1ae56d8ea09d2a8c54230690299dfa3f65de"
                    ]
                },
                {
                    "command": [
                        "intros; unfold lseg_cell.",
                        "VernacExtend",
                        "3206e9ed299b82c21056eafb566e962c2db3ec36"
                    ]
                },
                {
                    "command": [
                        "rewrite (entail_rewrite _ _ (field_at_ptr_neq_null _ _ _ _ _)).",
                        "VernacExtend",
                        "d39a89e5bedd4070a43dc72fb48cdb50d2c74b6f"
                    ]
                },
                {
                    "command": [
                        "rewrite field_at_isptr.",
                        "VernacExtend",
                        "52f29e00d8e8f25443981f74064c08b22426583b"
                    ]
                },
                {
                    "command": [
                        "entailer.",
                        "VernacExtend",
                        "b73314f9b45f246f2bc4b3330fa13724d53d10fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}