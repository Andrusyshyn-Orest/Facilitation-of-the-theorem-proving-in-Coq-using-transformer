{
    "filename": "progs/conclib.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.veric.ghost_PCM.",
            "VernacRequire",
            "5d7faafceb88954f1dbb2ca1c1b6f51aa750b35e"
        ],
        [
            "Require Export VST.msl.iter_sepcon.",
            "VernacRequire",
            "0bf45aaebbbf14158a42c45d16bbc55ad3c1fda9"
        ],
        [
            "Require Export VST.concurrency.semax_conc_pred.",
            "VernacRequire",
            "a9ec208256f34ff3d22e478171c5e21693a77614"
        ],
        [
            "Require Export VST.concurrency.semax_conc.",
            "VernacRequire",
            "e2e162748cbf90fb1ca6b9dad662a0597b9d791a"
        ],
        [
            "Require Export VST.floyd.proofauto.",
            "VernacRequire",
            "ba936ab55d59873550033f5dc0f323fa634d8ae0"
        ],
        [
            "Require Import VST.floyd.library.",
            "VernacRequire",
            "6a5c4a7ef069547805cde0a21bc2f88c62ea9f89"
        ],
        [
            "Require Export VST.floyd.sublist.",
            "VernacRequire",
            "ab3df40f53c720f8a095be941d23933f19e63148"
        ],
        [
            "Notation vint z := (Vint (Int.repr z)).",
            "VernacSyntacticDefinition",
            "83fc6c8bc7bf4a422ee275d5a4f0959b8b74d082"
        ],
        [
            "Notation vptrofs z := (Vptrofs (Ptrofs.repr z)).",
            "VernacSyntacticDefinition",
            "22d3aec631e3f92b13751c5ecd70493e46aa1cca"
        ],
        [
            "Lemma app_cons_assoc : forall {A} l1 (x : A) l2, l1 ++ x :: l2 = (l1 ++ [x]) ++ l2.",
            "VernacStartTheoremProof",
            "5f310aa425758f0be8d904312d4f6361767ef0ad"
        ],
        [
            "intros; rewrite <- app_assoc; auto.",
            "VernacExtend",
            "ad8541ad63ac6aada48fa9312767c0200ac581c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_forall_Znth : forall {A}{d: Inhabitant A} (P : A -> Prop) l, Forall P l <-> forall i, 0 <= i < Zlength l -> P (Znth i l).",
            "VernacStartTheoremProof",
            "6cc1c99626cc1169a60a9d8bf5ee6fab503a90a8"
        ],
        [
            "split; intros; [apply Forall_Znth; auto|].",
            "VernacExtend",
            "81225701b3ce3a2c69342330b0388b3bd7e74d3e"
        ],
        [
            "induction l; auto.",
            "VernacExtend",
            "6df74a097ee826dbbeb45167e7678377d4e52265"
        ],
        [
            "rewrite Zlength_cons in *.",
            "VernacExtend",
            "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "specialize (H 0); rewrite Znth_0_cons in H; apply H.",
            "VernacExtend",
            "82be448912342a43f5da99f5ddb08f38a6b59a04"
        ],
        [
            "pose proof (Zlength_nonneg l); omega.",
            "VernacExtend",
            "9483f1824eac12aefb9ae8350ff4f99722558f93"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHl; intros.",
            "VernacExtend",
            "17c41ee74699ffcb3889dae4c0a533d241b6287b"
        ],
        [
            "specialize (H (i + 1)).",
            "VernacExtend",
            "56b330f334caf90651a078b1e536b8a446d9af42"
        ],
        [
            "rewrite Znth_pos_cons, Z.add_simpl_r in H by omega.",
            "VernacExtend",
            "30da8cb01585e0897bf2cc0177f5cff1819f20ce"
        ],
        [
            "apply H; omega.",
            "VernacExtend",
            "25f1ceb280800c37161013440275309d43c00c5f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zmod_smallish : forall x y, y <> 0 -> 0 <= x < 2 * y -> x mod y = x \\/ x mod y = x - y.",
            "VernacStartTheoremProof",
            "c856ce2b154e6929e767be1e35fbc5751743fc01"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt x y); [left; apply Zmod_small; omega|].",
            "VernacExtend",
            "af462ee4b6f599bfb9e6d772948baa0ac5358bb1"
        ],
        [
            "rewrite <- Z.mod_add with (b := -1) by auto.",
            "VernacExtend",
            "b536aa92dd0d8768902723908cbe6581cad3385e"
        ],
        [
            "right; apply Zmod_small; omega.",
            "VernacExtend",
            "607d29928f65b37ecdb286ff5f029a7fd6ba985f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zmod_plus_inv : forall a b c d (Hc : c > 0) (Heq : (a + b) mod c = (d + b) mod c), a mod c = d mod c.",
            "VernacStartTheoremProof",
            "d5eb8b7b90e7c54ccbfdc49c8ddbe6f8d4edeac7"
        ],
        [
            "intros; rewrite Zplus_mod, (Zplus_mod d) in Heq.",
            "VernacExtend",
            "88adbedc7f2f35f633be64bab3717441170db112"
        ],
        [
            "pose proof (Z_mod_lt a c Hc).",
            "VernacExtend",
            "7a0177ff3503969f2c181abcb5503b0c065696a5"
        ],
        [
            "pose proof (Z_mod_lt b c Hc).",
            "VernacExtend",
            "7ecc7395eb816f37871f44ea5de90b657557840d"
        ],
        [
            "pose proof (Z_mod_lt d c Hc).",
            "VernacExtend",
            "f615cb8eceb59af18f6cc674be7f5e2fa2a76e2f"
        ],
        [
            "destruct (Zmod_smallish (a mod c + b mod c) c), (Zmod_smallish (d mod c + b mod c) c); omega.",
            "VernacExtend",
            "7c83701c618c3ad3b3b5f4ecb2abe127a0136ecc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_app : forall {A}{d: Inhabitant A} (l1 l2 : list A) i, Zlength l1 = i -> Znth i (l1 ++ l2) = Znth 0 l2.",
            "VernacStartTheoremProof",
            "35126bde9736774e99d4e9c50a2995b563df666a"
        ],
        [
            "intros; subst; rewrite app_Znth2, Zminus_diag; auto; omega.",
            "VernacExtend",
            "4da3d9410d0c315ca296e2185558c66f58987b5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary Znth_app1 : forall {A}{d: Inhabitant A} l1 (x : A) l2 i, Zlength l1 = i -> Znth i (l1 ++ x :: l2) = x.",
            "VernacStartTheoremProof",
            "d7794dfa62b67867ab9dd434b514b635d3fcf570"
        ],
        [
            "intros; rewrite Znth_app, Znth_0_cons; auto.",
            "VernacExtend",
            "2198db30afce9a963e20a3540ac2de59c9028b45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repable_0 : repable_signed 0.",
            "VernacStartTheoremProof",
            "9ff2b11d5b9639abd86a04f6b1a061ada95fe7e4"
        ],
        [
            "split; computable.",
            "VernacExtend",
            "ed287165128ae012305c24a89cfca7c450d080f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve repable_0.",
            "VernacHints",
            "3247dde66b24f22c5d584836de06c97042465a8e"
        ],
        [
            "Definition complete MAX l := l ++ repeat (vptrofs 0) (Z.to_nat MAX - length l).",
            "VernacDefinition",
            "9108dba50acd00bbb7618bb8802da16ffc92d8d6"
        ],
        [
            "Lemma upd_complete : forall l x MAX, Zlength l < MAX -> upd_Znth (Zlength l) (complete MAX l) x = complete MAX (l ++ [x]).",
            "VernacStartTheoremProof",
            "385585cf999d33e63fae48b70630e07977c11e43"
        ],
        [
            "intros; unfold complete.",
            "VernacExtend",
            "acbe7920a7d5e4ac6e0c341f8b6baa7b44402eb8"
        ],
        [
            "rewrite upd_Znth_app2, Zminus_diag.",
            "VernacExtend",
            "03da53755754e8f3015795bd77c4211cf77cd087"
        ],
        [
            "rewrite app_length; simpl plus.",
            "VernacExtend",
            "4abe9d364dfc42ca434320f0f7dfc453c309d24b"
        ],
        [
            "rewrite Zlength_correct, Z2Nat.inj_lt, Nat2Z.id in H; try omega.",
            "VernacExtend",
            "a10754b3e107b5e60c19d032a197092422a7257d"
        ],
        [
            "destruct (Z.to_nat MAX - length l)%nat eqn: Hminus; [omega|].",
            "VernacExtend",
            "a10addb1cc014af186a42bd4ee6413fa939d5071"
        ],
        [
            "replace (Z.to_nat MAX - (length l + 1))%nat with n by omega.",
            "VernacExtend",
            "2e60d011ccacb43d2b4d2d025dbf977913c729e7"
        ],
        [
            "unfold upd_Znth, sublist; simpl.",
            "VernacExtend",
            "50879954d698b83151bbf4718e6ab667936aab84"
        ],
        [
            "rewrite Zlength_cons.",
            "VernacExtend",
            "e06d429bdf690ef195f65a36ea0771f78b7f113c"
        ],
        [
            "unfold Z.succ; rewrite Z.add_simpl_r.",
            "VernacExtend",
            "924a424639aa50eb93a5814d086dac8d79920cca"
        ],
        [
            "rewrite Zlength_correct, Nat2Z.id, firstn_exact_length.",
            "VernacExtend",
            "5e32119c45d10b0ffa6c2793371c8adf43fd1e08"
        ],
        [
            "rewrite <- app_assoc; auto.",
            "VernacExtend",
            "911cf4e990b66d41b6ca3bf104452c15b01e76e0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "repeat rewrite Zlength_correct; omega.",
            "VernacExtend",
            "e5fd7ffb54134ecccf3f1a8fd2e5c114189cdca2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_complete : forall n l MAX, n < Zlength l -> Znth n (complete MAX l) = Znth n l.",
            "VernacStartTheoremProof",
            "eeeedd6a2f377add98d62a0bb62228ef71e6182d"
        ],
        [
            "intros; apply app_Znth1; auto.",
            "VernacExtend",
            "9b0786b925c2979eabaae45bdac0aa09f566bd35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_complete : forall l x MAX, Zlength l < MAX -> upd_Znth (Zlength l) (complete MAX (l ++ [x])) (vptrofs 0) = complete MAX l.",
            "VernacStartTheoremProof",
            "9c95252a1c5a860c873984a43eb98752e94c6400"
        ],
        [
            "intros; unfold complete.",
            "VernacExtend",
            "acbe7920a7d5e4ac6e0c341f8b6baa7b44402eb8"
        ],
        [
            "rewrite upd_Znth_app1 by (rewrite Zlength_app, ?Zlength_cons; rep_omega).",
            "VernacExtend",
            "90face948ffd2d9430821e683362f6dc0f44717c"
        ],
        [
            "rewrite app_length; simpl plus.",
            "VernacExtend",
            "4abe9d364dfc42ca434320f0f7dfc453c309d24b"
        ],
        [
            "rewrite upd_Znth_app2, Zminus_diag; [|rewrite Zlength_cons; simpl; omega].",
            "VernacExtend",
            "68d5120a78d7d76dec7689e6cbeb1c90f93de8a5"
        ],
        [
            "unfold upd_Znth, sublist.sublist.",
            "VernacExtend",
            "bd48666af66eb9763285a7ebb57fe2067af7a977"
        ],
        [
            "rewrite Zminus_diag; simpl firstn.",
            "VernacExtend",
            "15a0670ec425102130a02c6c12a9855a80b82240"
        ],
        [
            "rewrite Zlength_correct, Z2Nat.inj_lt, Nat2Z.id in H; try omega.",
            "VernacExtend",
            "a10754b3e107b5e60c19d032a197092422a7257d"
        ],
        [
            "destruct (Z.to_nat MAX - length l)%nat eqn: Hminus; [omega|].",
            "VernacExtend",
            "a10addb1cc014af186a42bd4ee6413fa939d5071"
        ],
        [
            "replace (Z.to_nat MAX - (length l + 1))%nat with n by omega.",
            "VernacExtend",
            "2e60d011ccacb43d2b4d2d025dbf977913c729e7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- app_assoc; auto.",
            "VernacExtend",
            "911cf4e990b66d41b6ca3bf104452c15b01e76e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_app : forall {A} (P : A -> Prop) l1 l2, Forall P (l1 ++ l2) <-> Forall P l1 /\\ Forall P l2.",
            "VernacStartTheoremProof",
            "8f041c100b6d804131df022aed6fb1ddacc5e75a"
        ],
        [
            "induction l1; split; auto; intros.",
            "VernacExtend",
            "88dad163924c9c3613aab2f2987fec453e23fcb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H; auto.",
            "VernacExtend",
            "95ae427bd4e09a5f31c59184b718811a23ecb36f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H as [|??? H']; subst.",
            "VernacExtend",
            "bd0dc2090366b16939686ee5cdfb2961b8292383"
        ],
        [
            "rewrite IHl1 in H'; destruct H'; split; auto.",
            "VernacExtend",
            "133a2a2d985ceb72140e754aa46c1299de84035e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H as (H & ?); inv H; constructor; auto.",
            "VernacExtend",
            "d401e4c1ac17b7ad9a10894d00c5d703cc0e3408"
        ],
        [
            "rewrite IHl1; split; auto.",
            "VernacExtend",
            "eece07430f21686f78d428f98bd03685f875d0f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_incl : forall {A} (P : A -> Prop) l1 l2 (Hall : Forall P l2) (Hincl : incl l1 l2), Forall P l1.",
            "VernacStartTheoremProof",
            "e16fb3d5f2b7e2d3b02cff5aa920c157d71a23a6"
        ],
        [
            "intros; rewrite Forall_forall in *; eauto.",
            "VernacExtend",
            "d30f19c0ba58d8aca6e53bdb9f1ef5c05e8b1f2f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repeat_plus : forall {A} (x : A) i j, repeat x (i + j) = repeat x i ++ repeat x j.",
            "VernacStartTheoremProof",
            "ca53908c78c420b2f0f08309ea0d6b24a95c0cbe"
        ],
        [
            "induction i; auto; simpl; intro.",
            "VernacExtend",
            "5022104e8c7fa7ba205a027d557fed889aff41f0"
        ],
        [
            "rewrite IHi; auto.",
            "VernacExtend",
            "6e751ab3cd193557d54cab1ad90bd00b5fe3c354"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_insert_iff : forall {A} (x y : A) l1 l2, In x (l1 ++ y :: l2) <-> x = y \\/ In x (l1 ++ l2).",
            "VernacStartTheoremProof",
            "50ff466c77510f326f3999f13d131f85756e7b1d"
        ],
        [
            "intros; rewrite !in_app; split; simpl; intros [|[|]]; auto.",
            "VernacExtend",
            "1d7a2a27c0749a441aca587bb7ec222bd6c8aedf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition remove_at {A} i (l : list A) := firstn i l ++ skipn (S i) l.",
            "VernacDefinition",
            "78c0b9a82ff03c5fd3cbd2bad324666f79ef74e7"
        ],
        [
            "Lemma Forall_firstn : forall {A} (P : A -> Prop) l i, Forall P l -> Forall P (firstn i l).",
            "VernacStartTheoremProof",
            "ef0520087dd837bb25fb5e3d9003b50692d8236b"
        ],
        [
            "intros; rewrite Forall_forall in *.",
            "VernacExtend",
            "c0c93b662e3774b3c9ed27e11937a16d4e72e91d"
        ],
        [
            "intros ? Hin; pose proof (firstn_In _ _ _ Hin); auto.",
            "VernacExtend",
            "95a2691dde534038f8b31b7fbbf25f183cc272dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_skipn : forall {A} (P : A -> Prop) l i, Forall P l -> Forall P (skipn i l).",
            "VernacStartTheoremProof",
            "0ddd99627a8b2f66661d0f0186bd76aab909561f"
        ],
        [
            "intros; rewrite Forall_forall in *.",
            "VernacExtend",
            "c0c93b662e3774b3c9ed27e11937a16d4e72e91d"
        ],
        [
            "intros ? Hin; pose proof (skipn_In _ _ _ Hin); auto.",
            "VernacExtend",
            "abd25ecd04376ed57d0b208c48c3c3a80461754a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_upd_Znth : forall {A} (P : A -> Prop) x l i, Forall P l -> P x -> Forall P (upd_Znth i l x).",
            "VernacStartTheoremProof",
            "c3a8f13eeadb53e46f237c40ddc3219212a669ce"
        ],
        [
            "intros; unfold upd_Znth.",
            "VernacExtend",
            "774945f168bf5f0ce358f4c6297717a58e345ddd"
        ],
        [
            "rewrite Forall_app; split; [|constructor; auto]; apply Forall_sublist; auto.",
            "VernacExtend",
            "b781fe914346014ea532b526a69c3996e4813bdc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_cons : forall {A} (d : A) l x, l <> [] -> last (x :: l) d = last l d.",
            "VernacStartTheoremProof",
            "eb388c88987016851772dc7788ebeddca3b37009"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "contradiction H; auto.",
            "VernacExtend",
            "86122fc31d7ce21d331e0e5c69cdfcbbcce3602c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_last : forall {A} (d : A) l, nth (length l - 1) l d = last l d.",
            "VernacStartTheoremProof",
            "8236b3f04673c739f6643aab8288b0d042d8d97b"
        ],
        [
            "induction l; auto.",
            "VernacExtend",
            "6df74a097ee826dbbeb45167e7678377d4e52265"
        ],
        [
            "simpl nth.",
            "VernacExtend",
            "638f01acf7c3f604830425db1d602e4eb9012c88"
        ],
        [
            "destruct (length l) eqn: Hlen.",
            "VernacExtend",
            "c495da53baf4b986f6e6b8d058658e28544c7b42"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct l; simpl in *; [auto | omega].",
            "VernacExtend",
            "859639c2411d909e1adee6e41258eb97e064e632"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite last_cons; simpl in *; [|intro; subst; discriminate].",
            "VernacExtend",
            "27e43480e12faa6e3753a0ce6b6e78f7f068f205"
        ],
        [
            "rewrite NPeano.Nat.sub_0_r in IHl; auto.",
            "VernacExtend",
            "43d2b8bafee2e9d5d6edb3c38a366089f18969a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_last : forall {A}{d: Inhabitant A} l, Znth (Zlength l - 1) l = last l default.",
            "VernacStartTheoremProof",
            "ff3bf292f057476cb7b9588a017799555d362974"
        ],
        [
            "intros; unfold Znth.",
            "VernacExtend",
            "7989a4df1d1c5ce54113449ebf28f5cc15752941"
        ],
        [
            "destruct (zlt (Zlength l - 1) 0).",
            "VernacExtend",
            "230f1c00726c901d24ccbe8b0945ecefde2cc265"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "rewrite Zlength_correct in *; simpl length in *.",
            "VernacExtend",
            "46f178e5d33350332a93e5ce7bc525c58e4b1cd6"
        ],
        [
            "rewrite Nat2Z.inj_succ in *; omega.",
            "VernacExtend",
            "a82525e06a85e434e4e7dc99eae40de49a9d33cd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z2Nat.inj_sub; [|omega].",
            "VernacExtend",
            "4991da783154514506cb17b2ee7a5cf5fb6bb7b6"
        ],
        [
            "rewrite Zlength_correct, Nat2Z.id; simpl.",
            "VernacExtend",
            "78eb5c70e515739865777c7d21b5699973b280aa"
        ],
        [
            "apply nth_last.",
            "VernacExtend",
            "ca7fa8df8e5b2f1f94d31ee7754c770f5a8e7a5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_app : forall {A} l1 l2 (d : A), l2 <> [] -> last (l1 ++ l2) d = last l2 d.",
            "VernacStartTheoremProof",
            "2a6176025fb078c4e0189a722a0d9bb581b58c77"
        ],
        [
            "induction l1; auto; intros.",
            "VernacExtend",
            "59089403bea5ede8ccc811e9dae304969e5291cd"
        ],
        [
            "setoid_rewrite last_cons; eauto.",
            "VernacExtend",
            "5916139fc7e604c5b16580d95f3077d1174dc126"
        ],
        [
            "intro X; apply app_eq_nil in X; tauto.",
            "VernacExtend",
            "d15e065a09ef9aa7fe7ef9e951a4b5871021c780"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat_sorted_list_eq : forall d n l (Hl : forall i, (i < n)%nat <-> In i l) (Hlen : length l = n) (Hsorted : forall i j, (i < j < n -> nth i l d < nth j l d)%nat) i (Hi : (i < n)%nat), nth i l d = i.",
            "VernacStartTheoremProof",
            "ecf697776146f62f2dcb65e2b046b061b617e236"
        ],
        [
            "induction n; intros; [omega|].",
            "VernacExtend",
            "7b6a46d1becf39908747848b90c1b8ad82680f80"
        ],
        [
            "destruct (eq_dec l []); [subst; discriminate|].",
            "VernacExtend",
            "acf651eda502c9181933c80a6799598a9c86d995"
        ],
        [
            "destruct (exists_last n0) as (l' & x & ?); subst.",
            "VernacExtend",
            "0658a5f49730803b50f5e512be4d399c084dab2b"
        ],
        [
            "rewrite app_length in Hlen; simpl in Hlen.",
            "VernacExtend",
            "cbc66c6b78a5ea1aca6f38fcb54c6c7b2887aba0"
        ],
        [
            "assert (length l' = n) by omega.",
            "VernacExtend",
            "215c185afb1da4b2483cdbf0c78ad2a2cdbbd936"
        ],
        [
            "assert (x = n).",
            "VernacExtend",
            "6971ad415d4b49ced8b14e111b43e8a542f62d20"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (x < S n)%nat.",
            "VernacExtend",
            "4182e154ca814d81b0261b6a278b03e0a9177965"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "specialize (Hl x); destruct Hl as (_ & Hl); apply Hl.",
            "VernacExtend",
            "1031ed9eec5d34b4fa4a94ca14a43f8619726125"
        ],
        [
            "rewrite in_app; simpl; auto.",
            "VernacExtend",
            "78214060553df06c9218817fa2d21d52d73cd97d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (lt_dec x n); [|omega].",
            "VernacExtend",
            "bf5e33e01d40f8a039f3fa588b272f7ade8c1da9"
        ],
        [
            "assert (n < S n)%nat as Hlt by omega; rewrite Hl in Hlt.",
            "VernacExtend",
            "d7f407d2596b005d71a84e4b4fd115bdd13995be"
        ],
        [
            "rewrite in_app in Hlt; destruct Hlt as [Hin | [? | ?]]; [| omega | contradiction].",
            "VernacExtend",
            "d380e0f17e315f88a7ec9206fca3c095a2ebf246"
        ],
        [
            "apply In_nth with (d := d) in Hin; destruct Hin as (j & ? & ?).",
            "VernacExtend",
            "c7523990a0ebb961769a03bc642239b180fa9815"
        ],
        [
            "exploit (Hsorted j (length l')); [omega|].",
            "VernacExtend",
            "080e81c9725b974a5f3c658ec95897923fb7e56e"
        ],
        [
            "rewrite app_nth1, app_nth2, minus_diag by auto; simpl; omega.",
            "VernacExtend",
            "b52d9efa73c430b90681c9ba0a49ad33e2c425b7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (eq_dec i n); subst.",
            "VernacExtend",
            "74a0b425f9a3974181d75691dddaefa6cbf8407b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite app_nth2, minus_diag by omega; auto.",
            "VernacExtend",
            "ec8bb8966f2a33bae6e98f9f8166dbe85ebee28f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite app_nth1 by omega; apply IHn; auto; try omega.",
            "VernacExtend",
            "1c279e73769b79b46952987ff3065b9300d0791f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intro j; specialize (Hl j); split; intro Hin.",
            "VernacExtend",
            "9611c39ce88202c4e27b747ad9ed6659512d68e0"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct Hl as (Hl & _); exploit Hl; [omega|].",
            "VernacExtend",
            "be3fc58c6e02532b51cda085053338fff29ef13b"
        ],
        [
            "rewrite in_app; intros [? | [? | ?]]; [auto | omega | contradiction].",
            "VernacExtend",
            "bcfe8da58d19dba09ac0b8cedda973f9a87b9f1b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct Hl as (_ & Hl); exploit Hl; [rewrite in_app; auto | intro].",
            "VernacExtend",
            "1891543e50ea86305e71e12a2e988852947c2ef0"
        ],
        [
            "apply In_nth with (d := d) in Hin; destruct Hin as (i' & ? & ?).",
            "VernacExtend",
            "f20e2d565d0ef026486dff57c61c6e269372a1a7"
        ],
        [
            "exploit (Hsorted i' (length l')); [omega|].",
            "VernacExtend",
            "ab2ed5959a97b078c326735cb69a124a701d074f"
        ],
        [
            "rewrite app_nth1, app_nth2, minus_diag by auto; simpl; omega.",
            "VernacExtend",
            "b52d9efa73c430b90681c9ba0a49ad33e2c425b7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros i' j' ?; exploit (Hsorted i' j'); [omega|].",
            "VernacExtend",
            "6bb152209f0f2bb017bbfdccba8e0f7799bc29b1"
        ],
        [
            "rewrite !app_nth1 by omega; auto.",
            "VernacExtend",
            "8c383db085b4a1f90769d689420b02187d4a61e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_In_l : forall {A B} (P : A -> B -> Prop) x l1 l2, Forall2 P l1 l2 -> In x l1 -> exists y, In y l2 /\\ P x y.",
            "VernacStartTheoremProof",
            "50442743208b4dae3ea03f30caa13b79e236c70e"
        ],
        [
            "induction 1; intro Hin; destruct Hin; simpl.",
            "VernacExtend",
            "24d3dca0ae2e9f86f97aefba013260aa8035b419"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; eauto.",
            "VernacExtend",
            "28a62bb991e5121953e2bbeb729f6608ba63a793"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct IHForall2 as (? & ? & ?); eauto.",
            "VernacExtend",
            "16d43ce2de0c6a57e7a1b63b64563ff47767f790"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_In_r : forall {A B} (P : A -> B -> Prop) x l1 l2, Forall2 P l1 l2 -> In x l2 -> exists y, In y l1 /\\ P y x.",
            "VernacStartTheoremProof",
            "ad0acfc76d0297373927f0a242d7b08cf9c978a0"
        ],
        [
            "induction 1; intro Hin; destruct Hin; simpl.",
            "VernacExtend",
            "24d3dca0ae2e9f86f97aefba013260aa8035b419"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; eauto.",
            "VernacExtend",
            "28a62bb991e5121953e2bbeb729f6608ba63a793"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct IHForall2 as (? & ? & ?); eauto.",
            "VernacExtend",
            "16d43ce2de0c6a57e7a1b63b64563ff47767f790"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_snoc : forall {A} (d : A) x l, last (l ++ [x]) d = x.",
            "VernacStartTheoremProof",
            "58bb46dbbd8e6e55eac4ae195985694ddd76db49"
        ],
        [
            "induction l; auto; simpl.",
            "VernacExtend",
            "eed68d4d83fee76794ef25f3fe5547ed00ee3133"
        ],
        [
            "destruct (l ++ [x]) eqn: Heq; auto.",
            "VernacExtend",
            "16fbace38d1b9f4e75862780caa3b28328360d71"
        ],
        [
            "contradiction (app_cons_not_nil l [] x); auto.",
            "VernacExtend",
            "0b1e02b4969de63ad00e5954a469aa61216fa0c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iter_sepcon_sepcon: forall {A} f g1 g2 l, (forall b : A, f b = g1 b * g2 b) -> iter_sepcon f l = iter_sepcon g1 l * iter_sepcon g2 l.",
            "VernacStartTheoremProof",
            "cc5831ac12f9a725f2fdeefb30512f33161f5dfe"
        ],
        [
            "intros; induction l; simpl; normalize.",
            "VernacExtend",
            "4c792232bdab40131d41fde32917f42f12a09499"
        ],
        [
            "rewrite H, IHl; apply pred_ext; cancel.",
            "VernacExtend",
            "c24a8f4df391c1e297597102d3c82c6d3c224007"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_app : forall l1 l2, fold_right sepcon emp (l1 ++ l2) = fold_right sepcon emp l1 * fold_right sepcon emp l2.",
            "VernacStartTheoremProof",
            "e7fed48f4a0801935b960c7429de243c3ec71bad"
        ],
        [
            "induction l1; simpl; intros.",
            "VernacExtend",
            "a75edf2a12acf37be08446879dcf0f8cfc9e0e1d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite emp_sepcon; auto.",
            "VernacExtend",
            "48c3c3dbe79fdbdaa99570c01577bfec18ad6c41"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHl1, sepcon_assoc; auto.",
            "VernacExtend",
            "fba8e9e623ba4220d69189d20a26507a6d49b3c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rotate {A} (l : list A) n m := sublist (m - n) (Zlength l) l ++ sublist 0 (m - n) l.",
            "VernacDefinition",
            "e71b967b5a43d27e340a38c70373761e1640fa59"
        ],
        [
            "Lemma sublist_of_nil : forall {A} i j, sublist i j (@nil A) = [].",
            "VernacStartTheoremProof",
            "32fc3e74655abcaa79033adef59f60e16672b330"
        ],
        [
            "intros; unfold sublist.",
            "VernacExtend",
            "09ec98bb9a22664aa583101a1d4faac006f3a7d0"
        ],
        [
            "rewrite skipn_nil, firstn_nil; auto.",
            "VernacExtend",
            "01184f5e1fb4f744e60b2da324a53dc1f359e0d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_0_cons : forall {A} j x (l : list A), j > 0 -> sublist 0 j (x :: l) = x :: sublist 0 (j - 1) l.",
            "VernacStartTheoremProof",
            "dfc20fecdbe336a73e9bad71b6d2c1aff4a69142"
        ],
        [
            "intros; unfold sublist; simpl.",
            "VernacExtend",
            "4144edfcf7720ac73246a1635f7a38a85b86a68d"
        ],
        [
            "destruct (Z.to_nat (j - 0)) eqn: Hminus.",
            "VernacExtend",
            "03202b86e4883ecd3867ca767271a87ce4aff318"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Z.gt_lt in H; rewrite Z2Nat.inj_lt in H; try omega.",
            "VernacExtend",
            "036dec7f6d4ad0165b3201baeeb543eeec622560"
        ],
        [
            "rewrite Z2Nat.inj_sub in Hminus; omega.",
            "VernacExtend",
            "edd2849b4dc1457afc7fa290edbdb597a6668304"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; repeat f_equal.",
            "VernacExtend",
            "f249e685efd1b3dd2dd9c89c499de8694fc307f1"
        ],
        [
            "rewrite Z.sub_0_r in *.",
            "VernacExtend",
            "44f1c1d62ad6bb9cd2d26b402351a962eee3f9a1"
        ],
        [
            "rewrite Z2Nat.inj_sub, Hminus; simpl; omega.",
            "VernacExtend",
            "5c98b9432c419bfa851e16b195e0b141d1eab821"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_S_cons : forall {A} i j x (l : list A), i > 0 -> sublist i j (x :: l) = sublist (i - 1) (j - 1) l.",
            "VernacStartTheoremProof",
            "c365237ccfcaab4967590b9a87d9f309cfd69c3f"
        ],
        [
            "intros; unfold sublist; simpl.",
            "VernacExtend",
            "4144edfcf7720ac73246a1635f7a38a85b86a68d"
        ],
        [
            "destruct (Z.to_nat i) eqn: Hi.",
            "VernacExtend",
            "ff4326c7d0a49550cb70f08c444ca50e559bd188"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Z.gt_lt in H; rewrite Z2Nat.inj_lt in H; omega.",
            "VernacExtend",
            "8bc76634bcb006d8f75e72a92e0a53ce4627b7b5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal; f_equal; try omega.",
            "VernacExtend",
            "e75ff0526a5eb18d3cc08e90b2ed45a6c6ab7e14"
        ],
        [
            "rewrite Z2Nat.inj_sub, Hi; simpl; omega.",
            "VernacExtend",
            "f99d1b5d5e960034a1ec401d715a3783a4d48266"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upd_rotate : forall {A} i (l : list A) n m x (Hl : Zlength l = m) (Hlt : 0 <= n <= m) (Hi : 0 <= i < Zlength l), upd_Znth i (rotate l n m) x = rotate (upd_Znth ((i - n) mod m) l x) n m.",
            "VernacStartTheoremProof",
            "5400c7863e11a55c168c7f6d55a96836a8764398"
        ],
        [
            "intros; unfold rotate.",
            "VernacExtend",
            "6e2230d922df0295d44fa392eb2ba64ace613799"
        ],
        [
            "rewrite upd_Znth_Zlength by (subst; apply Z_mod_lt; omega).",
            "VernacExtend",
            "9ffd84aae6104b6b5175907f9d82f731119f2e1a"
        ],
        [
            "destruct (zlt i (Zlength l - (m - n))).",
            "VernacExtend",
            "36a607a1d5af66c2de4bdd82c019762519e32921"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite upd_Znth_app1 by (rewrite Zlength_sublist; omega).",
            "VernacExtend",
            "f5a71f444d557112b7b84b253a661a7d443dc11b"
        ],
        [
            "assert ((i - n) mod m = m + i - n) as Hmod.",
            "VernacExtend",
            "f6d7521f237cb02c2f053b948a8e69279f85c514"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- Z.mod_add with (b := 1) by omega.",
            "VernacExtend",
            "a2d1aecebb45069e8a3b228f5eda0b3b9a598ff9"
        ],
        [
            "rewrite Zmod_small; omega.",
            "VernacExtend",
            "f2d071eae62de27f949578e466093157ca74438a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite Hmod, sublist_upd_Znth_lr, sublist_upd_Znth_l by (auto; omega).",
            "VernacExtend",
            "34b65536d80df8c6f290315b91ba683b1fd0ba75"
        ],
        [
            "replace (m + i - n - (m - n)) with i by omega; auto.",
            "VernacExtend",
            "a587549d24188909f7f498125734ff160811517b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite upd_Znth_app2; rewrite ?Zlength_sublist; try omega.",
            "VernacExtend",
            "25318d87040623692a2457f43974453bc6fcaea9"
        ],
        [
            "assert ((i - n) mod m = i - n) as Hmod.",
            "VernacExtend",
            "c7e2aa924180e010540c114b7d53dc75533d9b8f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite Zmod_small; omega.",
            "VernacExtend",
            "f2d071eae62de27f949578e466093157ca74438a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite Hmod, sublist_upd_Znth_r, sublist_upd_Znth_lr by omega.",
            "VernacExtend",
            "1e815418dc37b57c061f1cce4f3acf39157c1881"
        ],
        [
            "replace (i - (Zlength l - (m - n))) with (i - n - 0) by omega; auto.",
            "VernacExtend",
            "27c517b15e53c4745089c7761b5f665d408c9a1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_cons_eq : forall {A}{d : Inhabitant A} i x l, Znth i (x :: l) = if eq_dec i 0 then x else Znth (i - 1) l.",
            "VernacStartTheoremProof",
            "68d59e9b4c873629e2ae74c739408265492d9599"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec i 0); [subst; apply Znth_0_cons|].",
            "VernacExtend",
            "db058bb3b1438a40de09f76b541e671b30f7d4d6"
        ],
        [
            "destruct (zlt i 0); [rewrite !Znth_underflow; auto; omega|].",
            "VernacExtend",
            "00caf60baa253340cf0fd48b5c8c4c81a70f4828"
        ],
        [
            "apply Znth_pos_cons; omega.",
            "VernacExtend",
            "dad327b2eb7f57b9d7b68659aa404390ca9b07ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_rotate : forall {A} {d : Inhabitant A} i l n, 0 <= n <= Zlength l -> 0 <= i < Zlength l -> Znth i (rotate l n (Zlength l)) = Znth ((i - n) mod Zlength l) l.",
            "VernacStartTheoremProof",
            "e7716349b470f4abc8aed100317bc82a5bbe5d23"
        ],
        [
            "intros; unfold rotate.",
            "VernacExtend",
            "6e2230d922df0295d44fa392eb2ba64ace613799"
        ],
        [
            "destruct (zlt i n).",
            "VernacExtend",
            "e95249794f6baef3de0ea4980efbabfd979ed1b4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite app_Znth1 by (rewrite Zlength_sublist; omega).",
            "VernacExtend",
            "9fd3295c157007d9b7132145811097b055b53b7a"
        ],
        [
            "rewrite Znth_sublist by omega.",
            "VernacExtend",
            "3e43a9793b4768ce5447f1500c036151f6dfa388"
        ],
        [
            "rewrite <- Z_mod_plus with (b := 1), Zmod_small by omega.",
            "VernacExtend",
            "af6d75188db0b36949f2fd06e15eb14d4d5cb139"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite app_Znth2; (rewrite Zlength_sublist; try omega).",
            "VernacExtend",
            "cfeb40373d8e8e1155450f27ebea6e7b00db8d35"
        ],
        [
            "rewrite Znth_sublist by omega.",
            "VernacExtend",
            "3e43a9793b4768ce5447f1500c036151f6dfa388"
        ],
        [
            "rewrite Zmod_small by omega.",
            "VernacExtend",
            "b55bd313119b61355324b8f6158f311f7095d082"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rotate_nil : forall {A} n m, rotate (@nil A) n m = [].",
            "VernacStartTheoremProof",
            "ecbff08c080b37e9152804b8ecde3f00eb6bce25"
        ],
        [
            "intros; unfold rotate; rewrite !sublist_of_nil; auto.",
            "VernacExtend",
            "8a2109afff3f95b13e23352a19cc92a4d4857548"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_sublist_le : forall {A} {d : Inhabitant A} (P : A -> Prop) i j l (Hrangei : 0 <= i) (Hrangej : j <= Zlength l) (Hi : ~P (Znth i l)) (Hj : Forall P (sublist 0 j l)), j <= i.",
            "VernacStartTheoremProof",
            "15d4cc1bb775b78b3d126ce36fb103eb6c025d69"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Z_le_dec j i); auto.",
            "VernacExtend",
            "9720311216bfad2804287eb5d4886b3e8ba5e38c"
        ],
        [
            "eapply Forall_Znth with (i0 := i) in Hj; [|rewrite Zlength_sublist; omega].",
            "VernacExtend",
            "a918470020ba543500a9b6ef4e4c84acd540b8bb"
        ],
        [
            "rewrite Znth_sublist, Z.add_0_r in Hj by omega.",
            "VernacExtend",
            "8276423a838312c161be18105238ffe96220a4d4"
        ],
        [
            "contradiction Hi; eauto.",
            "VernacExtend",
            "f0f08d28730214fe473cc80947ed58289eb36614"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary Forall_sublist_first : forall {A} {d : Inhabitant A} (P : A -> Prop) i j l (Hrangei : 0 <= i <= Zlength l) (Hi : Forall P (sublist 0 i l)) (Hi' : ~P (Znth i l)) (Hrangej : 0 <= j <= Zlength l) (Hj : Forall P (sublist 0 j l)) (Hj' : ~P (Znth j l)), i = j.",
            "VernacStartTheoremProof",
            "b0e002b4f027ba48e3efdb857fe7cce23a0ec437"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Z.le_antisymm; eapply Forall_sublist_le; eauto; omega.",
            "VernacExtend",
            "af0b16907596c807f24de9970a3cd798301adf95"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_Znth_inj : forall {A} {d : Inhabitant A} l i j (HNoDup : NoDup l) (Hi : 0 <= i < Zlength l) (Hj : 0 <= j < Zlength l) (Heq : Znth i l = Znth j l ), i = j.",
            "VernacStartTheoremProof",
            "3d004808542223fa57d289ef333c18b3f82f3864"
        ],
        [
            "induction l; intros.",
            "VernacExtend",
            "f3f6b28c6822ad560a06f008ea0a5aa487d0e8e3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite Zlength_nil in *; omega.",
            "VernacExtend",
            "11e355bcc65e98c7aa282771754cdae5eb378b32"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "inv HNoDup.",
            "VernacExtend",
            "9cd0f3fd7b138590214cc9fd9127595f5e4e5ea3"
        ],
        [
            "rewrite Zlength_cons in *.",
            "VernacExtend",
            "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
        ],
        [
            "rewrite !Znth_cons_eq in Heq.",
            "VernacExtend",
            "49c5db85e80c881acb6e4e602eeceb8812e5ce25"
        ],
        [
            "destruct (eq_dec i 0), (eq_dec j 0); subst; auto.",
            "VernacExtend",
            "eef1c1739bb8fd1f22b3c8d178c0e5692a99d8ed"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "contradiction H1; apply Znth_In; omega.",
            "VernacExtend",
            "60d8d63f7a857de7e6fd9171704ccb6febbb6aad"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "contradiction H1; apply Znth_In; omega.",
            "VernacExtend",
            "60d8d63f7a857de7e6fd9171704ccb6febbb6aad"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exploit (IHl (i - 1) (j - 1)); auto; omega.",
            "VernacExtend",
            "5bccda39085f8708834fb8c572be45ce8c2f0a17"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rotate_In : forall {A} (x : A) n m l, 0 <= m - n <= Zlength l -> In x (rotate l n m) <-> In x l.",
            "VernacStartTheoremProof",
            "9e9e09b2ce6d8ec581606e833d80ec8e14a5be09"
        ],
        [
            "unfold rotate; intros.",
            "VernacExtend",
            "ed12e262d8e75f5cc381280c6c31839b56bcd5ea"
        ],
        [
            "replace l with (sublist 0 (m - n) l ++ sublist (m - n) (Zlength l) l) at 4 by (rewrite sublist_rejoin, sublist_same; auto; omega).",
            "VernacExtend",
            "ba1741b84c53c864b2314620e70b410f5cb443f0"
        ],
        [
            "rewrite !in_app; tauto.",
            "VernacExtend",
            "3a0c74163fd59cc43211b80b28a24c6c7e6d3c0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rotate_map : forall {A B} (f : A -> B) n m l, rotate (map f l) n m = map f (rotate l n m).",
            "VernacStartTheoremProof",
            "b50f7820fba414938806186698f106dbae2736a2"
        ],
        [
            "intros; unfold rotate.",
            "VernacExtend",
            "6e2230d922df0295d44fa392eb2ba64ace613799"
        ],
        [
            "rewrite !sublist_map, Zlength_map, map_app; auto.",
            "VernacExtend",
            "4dbe629552ed40d67157ceb9e23d494ccc070e8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_app : forall {A B} (l1 l2 : list A) (l1' l2' : list B), length l1 = length l1' -> combine (l1 ++ l2) (l1' ++ l2') = combine l1 l1' ++ combine l2 l2'.",
            "VernacStartTheoremProof",
            "6a329e8a7e3b12c9d2b7e015874195dd782123ae"
        ],
        [
            "induction l1; destruct l1'; intros; try discriminate; auto; simpl in *.",
            "VernacExtend",
            "7a5c654c92a9ddd71d84a2a14057977cf87a4afc"
        ],
        [
            "rewrite IHl1; auto.",
            "VernacExtend",
            "3bcd23a92f23552a758e14aa4b09c186695e77c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_app' : forall {A B} (l1 l2 : list A) (l1' l2' : list B), Zlength l1 = Zlength l1' -> combine (l1 ++ l2) (l1' ++ l2') = combine l1 l1' ++ combine l2 l2'.",
            "VernacStartTheoremProof",
            "4cda721661c3386afb43c7c9b4bc2d39dd859f04"
        ],
        [
            "intros; apply combine_app.",
            "VernacExtend",
            "5b3911da464e275456c604d660a0a330baeb6096"
        ],
        [
            "rewrite !Zlength_correct in *; omega.",
            "VernacExtend",
            "77de471b6ab50c4c1ae8800e7c07e8f04e7bb27c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_rotate : forall {A} P (l : list A) n m, Forall P l -> Forall P (rotate l m n).",
            "VernacStartTheoremProof",
            "e2e25443b8eb022e365c2d57947215b184f095a5"
        ],
        [
            "intros; unfold rotate.",
            "VernacExtend",
            "6e2230d922df0295d44fa392eb2ba64ace613799"
        ],
        [
            "rewrite Forall_app; split; apply Forall_sublist; auto.",
            "VernacExtend",
            "b6619886c6e52ed273d1337d1ec4d62dfaf0f0cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_repeat : forall {A} (P : A -> Prop) x n, P x -> Forall P (repeat x n).",
            "VernacStartTheoremProof",
            "d37b09c0d0d8d112907a98ad54997f00a5226058"
        ],
        [
            "induction n; simpl; auto.",
            "VernacExtend",
            "e97dceb16245749e91243b27d3fd5ddc89e99bdd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_complete : forall P l m, Forall P l -> P (vptrofs 0) -> Forall P (complete m l).",
            "VernacStartTheoremProof",
            "312520905e042489cbe621732e8ccf0d8630ddde"
        ],
        [
            "intros; unfold complete.",
            "VernacExtend",
            "acbe7920a7d5e4ac6e0c341f8b6baa7b44402eb8"
        ],
        [
            "rewrite Forall_app; split; [|apply Forall_repeat]; auto.",
            "VernacExtend",
            "a1ef68e8e15fb7a9e5ba371f2a774d2df9217b2d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma app_eq_inv : forall {A} (l1 l2 l3 l4 : list A) (Heq : l1 ++ l2 = l3 ++ l4) (Hlen : length l1 = length l3), l1 = l3 /\\ l2 = l4.",
            "VernacStartTheoremProof",
            "b2e805fcab34dfe7379c8b8b7724220ef42f0235"
        ],
        [
            "induction l1; simpl; intros; destruct l3; try discriminate; auto.",
            "VernacExtend",
            "c7636ae5b12ed6ecb45c3f9ed3d64d6bd12e7ea1"
        ],
        [
            "inv Heq; inv Hlen.",
            "VernacExtend",
            "92b14fa3dc45dae0d441eb39229565d3b26528ad"
        ],
        [
            "exploit IHl1; eauto; intros (? & ?); subst; auto.",
            "VernacExtend",
            "b913553effd64c08d823d917ea2fc4009be70b25"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rotate_inj : forall {A} (l1 l2 : list A) n m, rotate l1 n m = rotate l2 n m -> length l1 = length l2 -> 0 <= n <= m -> m <= Zlength l1 -> l1 = l2.",
            "VernacStartTheoremProof",
            "77cbeb57a1f135e182771069ce75b609654fd758"
        ],
        [
            "unfold rotate; intros.",
            "VernacExtend",
            "ed12e262d8e75f5cc381280c6c31839b56bcd5ea"
        ],
        [
            "destruct (app_eq_inv _ _ _ _ H) as (Hskip & Hfirst).",
            "VernacExtend",
            "8311f07a39b2c9e43445ab90a69e1b9bcba32b28"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold sublist; repeat rewrite firstn_length, skipn_length.",
            "VernacExtend",
            "08031e04b3f5f1ce6eb9e003666575134f439799"
        ],
        [
            "repeat rewrite Zlength_correct; rewrite H0; omega.",
            "VernacExtend",
            "4f6b6d50a724f7f3e1d182abbb52ceee1fd5d9e5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "erewrite <- sublist_same with (al := l1), <- sublist_rejoin with (mid := m - n); auto; try omega.",
            "VernacExtend",
            "468681f9f41c62a6b349100679092fd8c40c8724"
        ],
        [
            "rewrite Hfirst, Hskip, sublist_rejoin, sublist_same; auto; try omega.",
            "VernacExtend",
            "479a963351350e7a9cd5d50bb6eef1229a7d6291"
        ],
        [
            "repeat rewrite Zlength_correct in *; rewrite H0 in *; omega.",
            "VernacExtend",
            "61ca71f009158eb578ed5bce9cda84de665887df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma complete_inj : forall l1 l2 m, complete m l1 = complete m l2 -> length l1 = length l2 -> l1 = l2.",
            "VernacStartTheoremProof",
            "44e66d18af1eda02a858380db0fd8d1028be9912"
        ],
        [
            "unfold complete; intros.",
            "VernacExtend",
            "f33b32a236bc478478bf8749ff89a7fd7c84ac2d"
        ],
        [
            "destruct (app_eq_inv _ _ _ _ H); auto.",
            "VernacExtend",
            "e10eb5b35a63e72db3899908c320d39fcbe0ee99"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_complete : forall l m, Zlength l <= m -> length (complete m l) = Z.to_nat m.",
            "VernacStartTheoremProof",
            "8f18c32a807ac97829b2e02befc23eeca6268607"
        ],
        [
            "intros; unfold complete.",
            "VernacExtend",
            "acbe7920a7d5e4ac6e0c341f8b6baa7b44402eb8"
        ],
        [
            "rewrite app_length, repeat_length; rewrite Zlength_correct in H.",
            "VernacExtend",
            "6b2fd4e44ee224b263101379387e0d389a8541e5"
        ],
        [
            "rep_omega.",
            "VernacExtend",
            "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlength_rotate : forall {A} (l : list A) n m, 0 <= n <= m -> m <= Zlength l -> Zlength (rotate l n m) = Zlength l.",
            "VernacStartTheoremProof",
            "abf9a69d27e000551071090932694854f54d40ce"
        ],
        [
            "intros; unfold rotate.",
            "VernacExtend",
            "6e2230d922df0295d44fa392eb2ba64ace613799"
        ],
        [
            "rewrite Zlength_app; repeat rewrite Zlength_sublist; omega.",
            "VernacExtend",
            "ae488505f679619c81ac65025f1d1cc723f97f6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlength_repeat : forall {A} (x : A) n, Zlength (repeat x n) = Z.of_nat n.",
            "VernacStartTheoremProof",
            "0d14b07c16015f7b0712da03f9f590662bb8c269"
        ],
        [
            "intros; rewrite Zlength_correct, repeat_length; auto.",
            "VernacExtend",
            "f1d028c37d4077ed86dc0ed17b0c40e3891eff44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlength_complete : forall l m, Zlength l <= m -> Zlength (complete m l) = m.",
            "VernacStartTheoremProof",
            "49fff75f0832c88bbed4539d9932b96a648a1608"
        ],
        [
            "intros; unfold complete.",
            "VernacExtend",
            "acbe7920a7d5e4ac6e0c341f8b6baa7b44402eb8"
        ],
        [
            "rewrite Zlength_app, Zlength_repeat; rewrite Zlength_correct in *; rep_omega.",
            "VernacExtend",
            "7aa62dcf81811e3658c00b1068c0c4de44be2447"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_eq : forall {A B} (l : list (A * B)), combine (map fst l) (map snd l) = l.",
            "VernacStartTheoremProof",
            "9c1df6f64b8e700506a673c58e623897d48309cc"
        ],
        [
            "induction l; auto; simpl.",
            "VernacExtend",
            "eed68d4d83fee76794ef25f3fe5547ed00ee3133"
        ],
        [
            "destruct a; rewrite IHl; auto.",
            "VernacExtend",
            "3aeaa9757720627143523a4040561aa72b79dbfb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma signed_inj : forall i1 i2, Int.signed i1 = Int.signed i2 -> i1 = i2.",
            "VernacStartTheoremProof",
            "5fa3bb363003b913f1e132c89ab827f2acb61223"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply int_eq_e.",
            "VernacExtend",
            "28a1ca5a34d7c8c689fa4dabec299c073372683a"
        ],
        [
            "rewrite Int.eq_signed, H.",
            "VernacExtend",
            "724a412a150576a86a3fc52b73d7b3367c94f29b"
        ],
        [
            "apply zeq_true.",
            "VernacExtend",
            "af0121a2373c6f0f0aecd87040e8474a45a41dff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mods_repr : forall a b, 0 <= a <= Int.max_signed -> 0 < b <= Int.max_signed -> Int.mods (Int.repr a) (Int.repr b) = Int.repr (a mod b).",
            "VernacStartTheoremProof",
            "e983102f78c9b84782b4fa642f1099e7c3262d18"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Int.mods.",
            "VernacExtend",
            "28f425a3586ef66ce6801d8e4084e413df34a87f"
        ],
        [
            "pose proof Int.min_signed_neg.",
            "VernacExtend",
            "616ff89aa3c6c776101dd7ce0853fe05c17c72bc"
        ],
        [
            "rewrite Zquot.Zrem_Zmod_pos; repeat rewrite Int.signed_repr; auto; omega.",
            "VernacExtend",
            "032f0c4d5692a9bd029956fb84ac0fcae15057fc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repeat_list_repeat : forall {A} n (x : A), repeat x n = list_repeat n x.",
            "VernacStartTheoremProof",
            "4dda02f37ac8930925ea763be0b75bb884c48070"
        ],
        [
            "induction n; auto; simpl; intro.",
            "VernacExtend",
            "79bcb395e85202f2be7d7e080c55b672c53c8818"
        ],
        [
            "rewrite IHn; auto.",
            "VernacExtend",
            "317b9a54627f8cc619b6611fa844d1b3ef42be9a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_repeat : forall {A} i j k (v : A), 0 <= i -> i <= j <= k -> sublist i j (repeat v (Z.to_nat k)) = repeat v (Z.to_nat (j - i)).",
            "VernacStartTheoremProof",
            "d7cb88f3b663f235e9907156e8a4518fb09e3267"
        ],
        [
            "intros; repeat rewrite repeat_list_repeat; apply sublist_list_repeat; auto.",
            "VernacExtend",
            "ff530656a184bfcc7548ab44c202d82fe35b6086"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_head : forall reqs head m, Zlength reqs <= m -> 0 <= head < m -> Zlength reqs > 0 -> Znth head (rotate (complete m reqs) head m) = Znth 0 reqs.",
            "VernacStartTheoremProof",
            "95de717411da2d461825bde4f969e3ad3f3a18c4"
        ],
        [
            "intros; unfold rotate.",
            "VernacExtend",
            "6e2230d922df0295d44fa392eb2ba64ace613799"
        ],
        [
            "assert (Zlength (sublist (m - head) (Zlength (complete m reqs)) (complete m reqs)) = head) as Hlen.",
            "VernacExtend",
            "8abfa3ad615d5605c805a12c2d79d0936c9c6f85"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite Zlength_sublist; rewrite Zlength_complete; omega.",
            "VernacExtend",
            "3719230fce07c8c03b1d3ca26bd6f7f431c2ab8d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite app_Znth2; rewrite Hlen; [|omega].",
            "VernacExtend",
            "140e9eddadb3f1c44f09c049a018f98fda17f501"
        ],
        [
            "rewrite Zminus_diag.",
            "VernacExtend",
            "ba29aeb517289d2984aef69c718f64cdb113d2df"
        ],
        [
            "rewrite Znth_sublist; try omega.",
            "VernacExtend",
            "0ce438022d6c9d2a233f9714d6d6e92509b7234a"
        ],
        [
            "rewrite Znth_complete; auto; omega.",
            "VernacExtend",
            "29401ccfbc16e52c79532c0a0e03e9d867301b14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_repeat : forall {A} {x : Inhabitant A} n i, Znth i (repeat default n) = default.",
            "VernacStartTheoremProof",
            "4b032b46d240cca8dc497fb458a41ab1f62b990b"
        ],
        [
            "induction n; simpl; intro.",
            "VernacExtend",
            "4c60212fcbbb416a6ed72840028783179b73ece2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Znth_nil.",
            "VernacExtend",
            "3a555e9d94e18a9780bdc523a8a57bb33152450b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (Z_lt_dec i 0); [apply Znth_underflow; auto|].",
            "VernacExtend",
            "e1af3dbcef95b9c165200e3e8be4de60547a562f"
        ],
        [
            "destruct (eq_dec i 0); [subst; apply Znth_0_cons | rewrite Znth_pos_cons; eauto; omega].",
            "VernacExtend",
            "d070bf2ef2c52f9a104dc2ea605746ead7e572c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_repeat' : forall {A} {d: Inhabitant A} (x : A) n i, 0 <= i < Z.of_nat n -> Znth i (repeat x n) = x.",
            "VernacStartTheoremProof",
            "b3cc70dc436d1cba9f269a43ff47ee074322600c"
        ],
        [
            "induction n; intros; [simpl in *; omega|].",
            "VernacExtend",
            "d5d5caa9ad950312d90fdddd608ee36f898c4c7d"
        ],
        [
            "rewrite Nat2Z.inj_succ in H; simpl.",
            "VernacExtend",
            "07cda84e82a198921b107bad3c1c32b958c66154"
        ],
        [
            "destruct (eq_dec i 0).",
            "VernacExtend",
            "ed0407251a0d330a3d6d3f4b234de52e598904c6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; apply Znth_0_cons.",
            "VernacExtend",
            "dcce73ead546e5ad7c70778921c1e7607bbee9b5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Znth_pos_cons by omega; apply IHn; omega.",
            "VernacExtend",
            "34819f2b099001851341cfe508c574cf7bd872ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rotate_1 : forall v l n m, 0 <= n < m -> Zlength l < m -> rotate (upd_Znth 0 (complete m (v :: l)) (vptrofs 0)) n m = rotate (complete m l) ((n + 1) mod m) m.",
            "VernacStartTheoremProof",
            "fbc640a7452399a4981174fad13e02690d8c82e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold complete at 1; simpl.",
            "VernacExtend",
            "6a7c104fae29ddb37fb0d29682cb94c9efc0506d"
        ],
        [
            "unfold upd_Znth; simpl.",
            "VernacExtend",
            "051740e4398110c1d939e8d19bb3aee423fb0534"
        ],
        [
            "rewrite Zlength_cons; simpl.",
            "VernacExtend",
            "f95e8c2b4dab4a1accb6b828177b64438ce568ac"
        ],
        [
            "rewrite sublist_1_cons, sublist_same; auto; [|omega].",
            "VernacExtend",
            "c685fd8e833bc7de18594df4823c34e7060e985b"
        ],
        [
            "unfold rotate.",
            "VernacExtend",
            "6fa05813bebed0c3d730fa04e54d569dc11d521c"
        ],
        [
            "rewrite Zlength_cons; simpl.",
            "VernacExtend",
            "f95e8c2b4dab4a1accb6b828177b64438ce568ac"
        ],
        [
            "rewrite sublist_S_cons; [|omega].",
            "VernacExtend",
            "998d0663c907044e60337f4430c28bd5efad8819"
        ],
        [
            "rewrite sublist_0_cons; [|omega].",
            "VernacExtend",
            "a9545738f0f5959dc2b6417db74551a49feb9e80"
        ],
        [
            "destruct (eq_dec (n + 1) m).",
            "VernacExtend",
            "80c00559aeb70b5e48345eb0ef8aa15997c0785c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; rewrite Z.mod_same; [|omega].",
            "VernacExtend",
            "bd7290c4638a60f29fee96f103516e9eacb19639"
        ],
        [
            "autorewrite with sublist.",
            "VernacExtend",
            "27d3b47789f36e3bd15e796d8905bf4584c44131"
        ],
        [
            "rewrite Zlength_complete, sublist_nil; [|omega].",
            "VernacExtend",
            "c0bcb96d0c87b3e8d185c2cf2aa60ae68b5adf90"
        ],
        [
            "rewrite sublist_same; auto; [|rewrite Zlength_complete; omega].",
            "VernacExtend",
            "a8551b9a9541d4ebc2d63cb00fb8c775b887b97d"
        ],
        [
            "rewrite <- app_assoc; unfold complete.",
            "VernacExtend",
            "147d6fa35a402124c16b17383537cb8a57dfb31a"
        ],
        [
            "repeat rewrite Z2Nat.inj_add; try omega.",
            "VernacExtend",
            "5732649c8bacd99a8487247f6a79ac6e3be23594"
        ],
        [
            "rewrite NPeano.Nat.add_sub_swap with (p := length l); [|rewrite Zlength_correct in *; rep_omega].",
            "VernacExtend",
            "6fcb437bcc330d2c319857f90086e222602754de"
        ],
        [
            "rewrite repeat_plus; simpl; do 3 f_equal; omega.",
            "VernacExtend",
            "61d007cdb8e28332aaab938f5984ab5e711c619a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Zmod_small; [|omega].",
            "VernacExtend",
            "b20c20da7451c8446cef2ed2b51c56786970ce65"
        ],
        [
            "rewrite (sublist_split (m - (n + 1)) (Zlength (complete m l) - 1)); try rewrite Zlength_complete; try omega.",
            "VernacExtend",
            "d4667c3c9670f4f8dee12a12b5aae71a4eee29c6"
        ],
        [
            "rewrite <- app_assoc, (sublist_one (m - 1)); try rewrite Zlength_complete; try omega; simpl.",
            "VernacExtend",
            "1b7cc130d095e234361c5601b9c3a8327c35aa97"
        ],
        [
            "assert (length l < Z.to_nat m)%nat by (rewrite Zlength_correct in *; rep_omega).",
            "VernacExtend",
            "2d2bec40a05f77763decad15bb5df5b191b42a59"
        ],
        [
            "unfold complete.",
            "VernacExtend",
            "e12f9585ad1b199b6a97bb391eab350935a19c8c"
        ],
        [
            "replace (Z.to_nat m - length l)%nat with (Z.to_nat m - S (length l) + 1)%nat; [|omega].",
            "VernacExtend",
            "29bbb516bce25474b68d58dda5c2d1735dacf097"
        ],
        [
            "rewrite repeat_plus, app_assoc; simpl.",
            "VernacExtend",
            "66f0d1a92ae5c8389cf25427d6ee9f329e466801"
        ],
        [
            "repeat rewrite Zlength_app.",
            "VernacExtend",
            "e57483ef857ff5a82d76f4e19daec27e90727bb8"
        ],
        [
            "assert (m - 1 = Zlength l + Zlength (repeat (vptrofs 0) (Z.to_nat m - S (Datatypes.length l)))) as Heq.",
            "VernacExtend",
            "9dacc6ed4cb38f36fc2550d4b98f1b5cbb410cb1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite Zlength_repeat, Nat2Z.inj_sub, Z2Nat.id, Nat2Z.inj_succ, <- Zlength_correct; omega.",
            "VernacExtend",
            "a78ce72ba27500bb9d9bc23ec8c88a304898d5fa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite (sublist_app1 _ _ _ (_ ++ _)%list); rewrite ?Zlength_app; try omega.",
            "VernacExtend",
            "c67128d779cd394a1e28feb5f3813f98bd2d9494"
        ],
        [
            "rewrite (sublist_app1 _ _ _ (_ ++ _)%list); try rewrite Zlength_app; try omega.",
            "VernacExtend",
            "ff9fd0e57dbd03890afa761530d8b65a590685bf"
        ],
        [
            "f_equal; f_equal; try omega.",
            "VernacExtend",
            "e75ff0526a5eb18d3cc08e90b2ed45a6c6ab7e14"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite app_Znth2, Zlength_app, Heq, Zminus_diag, Znth_0_cons; auto.",
            "VernacExtend",
            "922e6c0a095a70a71638ad7e85b4e69d01173618"
        ],
        [
            "rewrite Zlength_app; omega.",
            "VernacExtend",
            "1bf0a6129914c39b3cd017d1546205870744ba14"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upd_complete_gen : forall {A} (l : list A) x n y, Zlength l < n -> upd_Znth (Zlength l) (l ++ repeat y (Z.to_nat (n - Zlength l))) x = (l ++ [x]) ++ repeat y (Z.to_nat (n - Zlength (l ++ [x]))).",
            "VernacStartTheoremProof",
            "fcf06ad99eda0fe82792c346c852ea8cf1fdfa27"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite upd_Znth_app2, Zminus_diag.",
            "VernacExtend",
            "03da53755754e8f3015795bd77c4211cf77cd087"
        ],
        [
            "destruct (Z.to_nat (n - Zlength l)) eqn: Hn.",
            "VernacExtend",
            "98ea6b08b9746a0a6dd62d2cab5530b72bffd798"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Z2Nat.inj with (m := 0) in Hn; omega.",
            "VernacExtend",
            "eeeff6634fb7420d4cd31152294bfdb5e3c3adde"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; rewrite upd_Znth0, Zlength_cons, sublist_1_cons.",
            "VernacExtend",
            "a69f5a9a0582c9bce7f6f6286122a39a6e6ff702"
        ],
        [
            "unfold Z.succ; rewrite Z.add_simpl_r, sublist_same; auto.",
            "VernacExtend",
            "88cb6e35bcdec857ea2033d93c2c2b1778e39abe"
        ],
        [
            "rewrite <- app_assoc, Zlength_app, Zlength_cons, Zlength_nil; simpl.",
            "VernacExtend",
            "0ae100fdad1da86fcb426e9571d908f6a97740d4"
        ],
        [
            "rewrite Z.sub_add_distr, Z2Nat.inj_sub, Hn by computable; simpl.",
            "VernacExtend",
            "45bd6fb28f0b679fa59517237a349c6c08aedec9"
        ],
        [
            "rewrite Nat.sub_0_r; auto.",
            "VernacExtend",
            "03bec7a7ac3f5809bb00ede6309b7bbebee919ab"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof (Zlength_nonneg (repeat y (Z.to_nat (n - Zlength l)))); omega.",
            "VernacExtend",
            "82f4dc2c3969b2525984890b12764f5bd4323d22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upd_complete' : forall l x n, (length l < n)%nat -> upd_Znth (Zlength l) (map Vint (map Int.repr l) ++ repeat Vundef (n - length l)) (Vint (Int.repr x)) = map Vint (map Int.repr (l ++ [x])) ++ repeat Vundef (n - length (l ++ [x])).",
            "VernacStartTheoremProof",
            "8305b44007bc05d5396e3674f58697d177f97583"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite upd_Znth_app2; [|repeat rewrite Zlength_map; repeat rewrite Zlength_correct; omega].",
            "VernacExtend",
            "1b2b6017e07e2fbd458af6ec60efa8b743167f70"
        ],
        [
            "repeat rewrite Zlength_map.",
            "VernacExtend",
            "14c8fdba0b938014792d534f8569d4ace72a61f4"
        ],
        [
            "rewrite Zminus_diag.",
            "VernacExtend",
            "ba29aeb517289d2984aef69c718f64cdb113d2df"
        ],
        [
            "rewrite app_length; simpl plus.",
            "VernacExtend",
            "4abe9d364dfc42ca434320f0f7dfc453c309d24b"
        ],
        [
            "destruct (n - length l)%nat eqn: Hminus; [omega|].",
            "VernacExtend",
            "58a39e3339ea8e0103ca457585e9492011ded8d1"
        ],
        [
            "replace (n - (length l + 1))%nat with n0 by omega.",
            "VernacExtend",
            "72bd145b9baa0cb42dc639a5163fbbfc9870209d"
        ],
        [
            "rewrite upd_Znth0, !map_app, <- app_assoc; simpl.",
            "VernacExtend",
            "8280eb9314811c4bf3b59f2e48c9d31df4f092a8"
        ],
        [
            "rewrite sublist_1_cons, Zlength_cons, sublist_same; auto; omega.",
            "VernacExtend",
            "940afc1dccb4d4d43b609665cce0eaf31f42e8d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint upto n := match n with | O => [] | S n' => 0 :: map Z.succ (upto n') end.",
            "VernacFixpoint",
            "8c0c5d11e52555140cffa86187b18ac3d26fca22"
        ],
        [
            "Opaque Z.of_nat.",
            "VernacSetOpacity",
            "9813f3f9864a2ddd3cf66be4c7289d56b3bea039"
        ],
        [
            "Lemma upto_app : forall n m, upto (n + m) = upto n ++ map (fun i => Z.of_nat n + i) (upto m).",
            "VernacStartTheoremProof",
            "ac8e1697887a1f9fe27ddeefe3ed408663463a5d"
        ],
        [
            "induction n; simpl; intro.",
            "VernacExtend",
            "4c60212fcbbb416a6ed72840028783179b73ece2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite map_id; auto.",
            "VernacExtend",
            "b0854c5082089bb1a3445d949b5b86f316d709ea"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHn, map_app, map_map, Nat2Z.inj_succ; f_equal; f_equal.",
            "VernacExtend",
            "083973524a869f686371c0e28ddabeab60ed5e38"
        ],
        [
            "apply map_ext; intro; omega.",
            "VernacExtend",
            "3a45948eb4c6bbc50771a9be015b4be720232ddf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upto_length : forall n, length (upto n) = n.",
            "VernacStartTheoremProof",
            "f577175773f515e294a5560962f6aa658e63b720"
        ],
        [
            "induction n; auto; simpl.",
            "VernacExtend",
            "6b6930eaad02b28c1b026e7fccaf77ebfcf43c97"
        ],
        [
            "rewrite map_length, IHn; auto.",
            "VernacExtend",
            "3563b3f00f3619c0a282ea1710f9190f070e5c51"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary Zlength_upto : forall n, Zlength (upto n) = Z.of_nat n.",
            "VernacStartTheoremProof",
            "0c726f15e4af7d8229d424c5e27e81ef11c86016"
        ],
        [
            "intro; rewrite Zlength_correct, upto_length; auto.",
            "VernacExtend",
            "aeb2c238046feda26b20834e7537958ae3a82805"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma skipn_cons : forall {A}{d: Inhabitant A} n (l : list A), (length l > n)%nat -> skipn n l = Znth (Z.of_nat n) l :: skipn (S n) l.",
            "VernacStartTheoremProof",
            "770fb9ff6e21733911fa7a4bbdd63460524d309f"
        ],
        [
            "induction n; intros; simpl; destruct l; simpl in *; try omega; auto.",
            "VernacExtend",
            "05034b9696c0f7d831e4be0bc993008feb953512"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite Nat2Z.inj_succ.",
            "VernacExtend",
            "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
        ],
        [
            "rewrite Znth_pos_cons; [|omega].",
            "VernacExtend",
            "11bb6045ea28938bc57d60390a84780c3581cf64"
        ],
        [
            "unfold Z.succ; rewrite Z.add_simpl_r.",
            "VernacExtend",
            "924a424639aa50eb93a5814d086dac8d79920cca"
        ],
        [
            "erewrite IHn; auto; omega.",
            "VernacExtend",
            "848bc26831d9bd5b431ed1f48c4a2d0091f2dbca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_upto : forall d m n, 0 <= n < Z.of_nat m -> @Znth _ d n (upto m) = n.",
            "VernacStartTheoremProof",
            "5bb0dc1a8a8c2aaf2e869d2a2976f7c3feab79b7"
        ],
        [
            "induction m; simpl; intros.",
            "VernacExtend",
            "738c751c4edf16c228e9dc66b9592aea22d1738c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Znth_nil; simpl in *; rewrite Nat2Z.inj_0 in *; omega.",
            "VernacExtend",
            "72eac88da2c5797cebf2de1ea5301a0909b2b6df"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (eq_dec n 0).",
            "VernacExtend",
            "08868513c0e5a8599babd2de2ff567aa1c2a5169"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst; apply Znth_0_cons.",
            "VernacExtend",
            "dcce73ead546e5ad7c70778921c1e7607bbee9b5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Nat2Z.inj_succ in *.",
            "VernacExtend",
            "94a1923b4c404f4516050cf56ec08d5e432b7e68"
        ],
        [
            "rewrite Znth_pos_cons by omega.",
            "VernacExtend",
            "c3b4fb155af7a4ceb6dc192beebe3056fde20a00"
        ],
        [
            "rewrite Znth_map.",
            "VernacExtend",
            "64fc67c68ae6c726df42f8e94d9029dfcbb8388e"
        ],
        [
            "rewrite IHm.",
            "VernacExtend",
            "bf73c511f9e37493a929521561a4b35798c2f374"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Zlength_upto.",
            "VernacExtend",
            "8dd8daea2f8b1a4938965c5a106ac254096e797a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Transparent Z.of_nat.",
            "VernacSetOpacity",
            "5d546afd198f850594e8a6166f241b1c148bae4f"
        ],
        [
            "Lemma In_Znth : forall {A} {d: Inhabitant A} (l : list A) x, In x l -> exists i, 0 <= i < Zlength l /\\ Znth i l = x.",
            "VernacStartTheoremProof",
            "85f5b4469298be42699ac7c11b4f3f5d6cc53cad"
        ],
        [
            "unfold Znth; intros.",
            "VernacExtend",
            "555307e685bd668cac5159bb378013165a24b125"
        ],
        [
            "apply In_nth with (d := d) in H; destruct H as (n & ? & ?).",
            "VernacExtend",
            "2b854a68223f40a0d3cb04760b97607cdd841a84"
        ],
        [
            "exists (Z.of_nat n); split.",
            "VernacExtend",
            "dd58daba00682303dd489e093cac279b26342e28"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Zlength_correct; omega.",
            "VernacExtend",
            "3c58e615b482d35ab340a89d9c58a09e6c973b4f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (zlt (Z.of_nat n) 0); [omega|].",
            "VernacExtend",
            "ebeb3c99b1b444a738f9258ef0eb3d91d4062262"
        ],
        [
            "rewrite Nat2Z.id; auto.",
            "VernacExtend",
            "fc5428accde804885c3c7ff2335ba17bd67e8aa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_upd_Znth_old : forall {A}{d: Inhabitant A} i (x y : A) l, In x l -> x <> Znth i l -> 0 <= i <= Zlength l -> In x (upd_Znth i l y).",
            "VernacStartTheoremProof",
            "811ed7badb8d6e07e11491f7edeaa12066abd35c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply In_Znth in H; destruct H as (j & ? & ?); subst.",
            "VernacExtend",
            "3e34e71185b4e44e484439d0f15cc402b710aed3"
        ],
        [
            "unfold upd_Znth.",
            "VernacExtend",
            "95ddb9495752f5ead64e15932f2edb72a19b90fb"
        ],
        [
            "destruct (eq_dec j i); [subst; contradiction|].",
            "VernacExtend",
            "9842fc11eaae50a9f05191e3ab87265ccfd0f780"
        ],
        [
            "rewrite in_app; simpl.",
            "VernacExtend",
            "5c0e0ff2077284f161ea2a8895f61b6069f3aafd"
        ],
        [
            "destruct (zlt j i); [left | right; right].",
            "VernacExtend",
            "ab8bede67cba12a48019d28a985c808ee405317c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "erewrite <- (Z.add_0_r j), <- Znth_sublist; [apply Znth_In; rewrite Zlength_sublist| |]; auto; omega.",
            "VernacExtend",
            "96f9805a3cd71ff00736240fce90da401ef84387"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "erewrite <- (Z.sub_simpl_r _ (i + 1)), <- Znth_sublist; [apply Znth_In; rewrite Zlength_sublist| |]; omega.",
            "VernacExtend",
            "686c323e65a7f9aee9c92bf2d1f55590ebbe5cb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_combine : forall {A B} {a: Inhabitant A} {b: Inhabitant B} i (l1: list A) (l2: list B), Zlength l1 = Zlength l2 -> Znth i (combine l1 l2) = (Znth i l1, Znth i l2).",
            "VernacStartTheoremProof",
            "5f51feb91459119511f3be509817fdef83315e43"
        ],
        [
            "intros; unfold Znth.",
            "VernacExtend",
            "7989a4df1d1c5ce54113449ebf28f5cc15752941"
        ],
        [
            "destruct (zlt i 0); auto.",
            "VernacExtend",
            "633c3efffa16dc09774391c84a1d9907f3b23cc6"
        ],
        [
            "apply combine_nth.",
            "VernacExtend",
            "2213c2247322137b6bd2203bb385793abfbb5313"
        ],
        [
            "rewrite !Zlength_correct in *; rep_omega.",
            "VernacExtend",
            "6d737c426bd15e6cef0a03e246b5ef228935a514"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlength_combine : forall {A B} (l : list A) (l' : list B), Zlength (combine l l') = Z.min (Zlength l) (Zlength l').",
            "VernacStartTheoremProof",
            "fd2e3816603bd228fcb6eb3e6e1945d1948aa389"
        ],
        [
            "intros; rewrite !Zlength_correct, combine_length, Nat2Z.inj_min; auto.",
            "VernacExtend",
            "98c9789cce3af9a070be29fef15af3c122ad10aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_Znth : forall {A}{d: Inhabitant A} i l, nth i l default = Znth (Z.of_nat i) l.",
            "VernacStartTheoremProof",
            "612362194f9bb752e9a341e2039ce3af4152afe0"
        ],
        [
            "intros; unfold Znth.",
            "VernacExtend",
            "7989a4df1d1c5ce54113449ebf28f5cc15752941"
        ],
        [
            "destruct (zlt (Z.of_nat i) 0); [omega|].",
            "VernacExtend",
            "c079dcc769bab9f6804a58a0b5f4e7603f9d2a41"
        ],
        [
            "rewrite Nat2Z.id; auto.",
            "VernacExtend",
            "fc5428accde804885c3c7ff2335ba17bd67e8aa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upd_Znth_cons : forall {A} i a l (x : A), i > 0 -> upd_Znth i (a :: l) x = a :: upd_Znth (i - 1) l x.",
            "VernacStartTheoremProof",
            "f13fae4cbd534a55ba54499bafd09037c0d382da"
        ],
        [
            "intros; unfold upd_Znth, sublist.sublist; simpl.",
            "VernacExtend",
            "dba382f065a4b40f0d5ff633279dba141347c40a"
        ],
        [
            "repeat rewrite Z.sub_0_r.",
            "VernacExtend",
            "e9cfeebc7e9e16aa607ed0b5fdd4ffce7aba206f"
        ],
        [
            "destruct (Z.to_nat i) eqn: Hi.",
            "VernacExtend",
            "ff4326c7d0a49550cb70f08c444ca50e559bd188"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exploit Z2Nat_inj_0; eauto; omega.",
            "VernacExtend",
            "57e306b56886b616dabd0a4f315eed4ed45c1285"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite Zlength_cons; repeat rewrite Z2Nat.inj_add; try omega.",
            "VernacExtend",
            "79fcbcc11626a12a863d6eb0104c6d9d2d05742d"
        ],
        [
            "repeat rewrite Z2Nat.inj_sub; try omega.",
            "VernacExtend",
            "aa1db43485b80cb23dcd492f502f82a83bf5b8b5"
        ],
        [
            "rewrite Hi; simpl.",
            "VernacExtend",
            "08260432355bdc5347ed2f7d82577f2e30afa4b9"
        ],
        [
            "rewrite Nat.sub_0_r.",
            "VernacExtend",
            "5b98063e5ed2e2470f00a8793f5a5d7ccafde326"
        ],
        [
            "do 4 f_equal.",
            "VernacExtend",
            "e99e2b1ab7ca81fb12ceee784455978dc516e26e"
        ],
        [
            "rewrite Z2Nat.inj_succ; [|rewrite Zlength_correct; omega].",
            "VernacExtend",
            "3dd22b332ec4d42cea9f380a0206b9d79306afe7"
        ],
        [
            "repeat rewrite Z2Nat.inj_add; try omega.",
            "VernacExtend",
            "5732649c8bacd99a8487247f6a79ac6e3be23594"
        ],
        [
            "rewrite Z2Nat.inj_sub; try omega.",
            "VernacExtend",
            "075c6786cd26b1ee3ebf64e41f1ebee6806aa3c2"
        ],
        [
            "simpl plus; omega.",
            "VernacExtend",
            "09c070dc6fb62dfbac7dcc5deffdde37553443f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upd_Znth_triv : forall {A}{d: Inhabitant A} i (l : list A) x (Hi : 0 <= i < Zlength l), Znth i l = x -> upd_Znth i l x = l.",
            "VernacStartTheoremProof",
            "4e8e31bada764ddeaa0e0abbe6b31ebf7bd47e1d"
        ],
        [
            "intros; unfold upd_Znth.",
            "VernacExtend",
            "774945f168bf5f0ce358f4c6297717a58e345ddd"
        ],
        [
            "setoid_rewrite <- (firstn_skipn (Z.to_nat i) l) at 4.",
            "VernacExtend",
            "c6597e744d321d8d2e9ead75751fd763e58391c6"
        ],
        [
            "erewrite skipn_cons, Z2Nat.id, H; try omega; [|rewrite Zlength_correct in *; rep_omega].",
            "VernacExtend",
            "77bcfdb7e9441975f744c9cb5d0f9ead0567d261"
        ],
        [
            "unfold sublist.",
            "VernacExtend",
            "8210ab75a1a2dc3ddfadfb3aed3bee9dc75be488"
        ],
        [
            "rewrite Z.sub_0_r, Z2Nat.inj_add, NPeano.Nat.add_1_r; try omega.",
            "VernacExtend",
            "8337bbf52d413090305d9deecfa4ea0c0e519f5f"
        ],
        [
            "setoid_rewrite firstn_same at 2; auto.",
            "VernacExtend",
            "198db24ba18a38a775fb27838172785b5f1be5c0"
        ],
        [
            "rewrite Z2Nat.inj_sub, Zlength_correct, Nat2Z.id, Z2Nat.inj_add, skipn_length; simpl; omega.",
            "VernacExtend",
            "6fe87be39e7c723ffd527373df593d404e47c9e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_upd_Znth : forall {A B} (l1 : list A) (l2 : list B) i x1 x2, 0 <= i < Zlength l1 -> Zlength l1 = Zlength l2 -> combine (upd_Znth i l1 x1) (upd_Znth i l2 x2) = upd_Znth i (combine l1 l2) (x1, x2).",
            "VernacStartTheoremProof",
            "87eb7462a42a16a1520c7d11b7ee68fa57d59455"
        ],
        [
            "induction l1; simpl; intros; [rewrite Zlength_nil in *; omega|].",
            "VernacExtend",
            "e36c4ec80ce6727459f2f54b3e5fbf9234062b9e"
        ],
        [
            "destruct l2; [rewrite Zlength_nil in *; omega|].",
            "VernacExtend",
            "95d538bd6e00ad8c04f164166782142340e709f0"
        ],
        [
            "rewrite !Zlength_cons in *.",
            "VernacExtend",
            "6fee36b4937891c3c10fb27886f1cd8a5e353dd8"
        ],
        [
            "destruct (eq_dec i 0).",
            "VernacExtend",
            "ed0407251a0d330a3d6d3f4b234de52e598904c6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; rewrite !upd_Znth0, !Zlength_cons, !sublist_1_cons, !sublist_same; auto; omega.",
            "VernacExtend",
            "fe132790403fe6bc1d56f0a79ecf3d2c44bcf587"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !upd_Znth_cons; try omega; simpl.",
            "VernacExtend",
            "748c60f5882142187beedf636628852568e9702f"
        ],
        [
            "rewrite IHl1; auto; omega.",
            "VernacExtend",
            "b7d8bdaa4b2f9908e59dca49572bfc3a69e6dda9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary combine_upd_Znth1 : forall {A B}{d: Inhabitant B} (l1 : list A) (l2 : list B) i x, 0 <= i < Zlength l1 -> Zlength l1 = Zlength l2 -> combine (upd_Znth i l1 x) l2 = upd_Znth i (combine l1 l2) (x, Znth i l2).",
            "VernacStartTheoremProof",
            "ec80297b81b83974a77aa5cb6071740388d7ce2b"
        ],
        [
            "intros; rewrite <- combine_upd_Znth by auto.",
            "VernacExtend",
            "5581e1220c1c54cff4f7e8e7b7ae8a2f9b9c16e9"
        ],
        [
            "erewrite upd_Znth_triv with (l := l2); eauto; omega.",
            "VernacExtend",
            "0afa06f65011e9effb68fcfde9775d9596a4fe21"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary combine_upd_Znth2 : forall {A B}{d: Inhabitant A} (l1 : list A) (l2 : list B) i x, 0 <= i < Zlength l1 -> Zlength l1 = Zlength l2 -> combine l1 (upd_Znth i l2 x) = upd_Znth i (combine l1 l2) (Znth i l1, x).",
            "VernacStartTheoremProof",
            "784739a662ab8e1c7bf50045a307af64d9a4dbd4"
        ],
        [
            "intros; rewrite <- combine_upd_Znth by auto.",
            "VernacExtend",
            "5581e1220c1c54cff4f7e8e7b7ae8a2f9b9c16e9"
        ],
        [
            "erewrite upd_Znth_triv with (l := l1); eauto; omega.",
            "VernacExtend",
            "9b7f403690a22983709dad9d64a8ad329378c320"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_concat : forall {A} (l : list (list A)) x, In x (concat l) <-> exists l1, In x l1 /\\ In l1 l.",
            "VernacStartTheoremProof",
            "d88ec7977772f6b3eda2bb30c480af61ff6ef026"
        ],
        [
            "induction l; simpl; intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; [|intros (? & ? & ?)]; contradiction.",
            "VernacExtend",
            "77d81a14d72c97904b1edacff6d35b647b05cf0f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite in_app, IHl; split.",
            "VernacExtend",
            "23da18467f20ab79676d7639e6b31238dcae9374"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros [? | (? & ? & ?)]; eauto.",
            "VernacExtend",
            "746e727652588ff906111737459804ceba66a784"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros (? & ? & [? | ?]); subst; eauto.",
            "VernacExtend",
            "78cacf79d735b30c56f6a1906c4df1881d05e59b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_concat : forall {A} (l : list (list A)), length (concat l) = fold_right plus O (map (@length A) l).",
            "VernacStartTheoremProof",
            "56eb50b61aa1fff7c68e388df88002c6263e1871"
        ],
        [
            "induction l; auto; simpl.",
            "VernacExtend",
            "eed68d4d83fee76794ef25f3fe5547ed00ee3133"
        ],
        [
            "rewrite app_length, IHl; auto.",
            "VernacExtend",
            "9a23ee221b022e16e6356dec9aa18bbdf1466ade"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_concat_min : forall {A}{d: Inhabitant A} (l : list (list A)) i (Hi : 0 <= i < Zlength l), (length (Znth i l) <= length (concat l))%nat.",
            "VernacStartTheoremProof",
            "a79f402dc3d5b3f04ce2a1736e7be9161ee72963"
        ],
        [
            "induction l; simpl; intros; [rewrite Zlength_nil in *; omega|].",
            "VernacExtend",
            "15da5691769a42c08a9f59f8b50c632e53d25dfc"
        ],
        [
            "rewrite app_length; destruct (eq_dec i 0).",
            "VernacExtend",
            "ae2568afea38629413e57d168bfe3c8da5dd03f3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; rewrite Znth_0_cons; omega.",
            "VernacExtend",
            "3a965584522fc4fd7749a78c433936ee93b88f56"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Znth_pos_cons by omega.",
            "VernacExtend",
            "c3b4fb155af7a4ceb6dc192beebe3056fde20a00"
        ],
        [
            "rewrite Zlength_cons in *; etransitivity; [apply IHl|]; omega.",
            "VernacExtend",
            "7d87567f5cd13443ddaf9179cb15f56fcda34a25"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_concat_upd : forall {A} {d: Inhabitant A} l i (l' : list A) (Hi : 0 <= i < Zlength l), length (concat (upd_Znth i l l')) = (length (concat l) + length l' - length (Znth i l))%nat.",
            "VernacStartTheoremProof",
            "318b2c0922e9710f1ff3d77e9e61d12de037db9b"
        ],
        [
            "induction l; intros; [rewrite Zlength_nil in *; omega|].",
            "VernacExtend",
            "e79a02e81a33fbe78fdefb5361664701ec22c272"
        ],
        [
            "destruct (eq_dec i 0).",
            "VernacExtend",
            "ed0407251a0d330a3d6d3f4b234de52e598904c6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; rewrite upd_Znth0, Znth_0_cons, sublist_1_cons.",
            "VernacExtend",
            "dff0bbe7a39070a498e0b52cd3d7d391e054f37b"
        ],
        [
            "rewrite Zlength_cons in *; rewrite sublist_same by (auto; omega); simpl.",
            "VernacExtend",
            "73bf8d26d4092ced6788671a3c40e2ba9b0f7f13"
        ],
        [
            "rewrite !app_length; omega.",
            "VernacExtend",
            "1bb9c592c13dda35a503730cd6eeb28cec15a65c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite upd_Znth_cons, Znth_pos_cons by omega; simpl.",
            "VernacExtend",
            "371e0a29c6743c0839471904e2c81b7e9cf91495"
        ],
        [
            "rewrite Zlength_cons in *.",
            "VernacExtend",
            "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
        ],
        [
            "rewrite !app_length, IHl by omega.",
            "VernacExtend",
            "bbea2ac02f563acfa5672a5e7769f2da8e4e09ef"
        ],
        [
            "exploit (length_concat_min l (i - 1)); omega.",
            "VernacExtend",
            "b67255ac2c79a7baa43f700ce9a725b70efce9c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_rev : forall l, fold_right sepcon emp (rev l) = fold_right sepcon emp l.",
            "VernacStartTheoremProof",
            "7e68d9da33072a928cfd68db3ef00bb337206343"
        ],
        [
            "induction l; simpl; auto.",
            "VernacExtend",
            "2300dcaca2cea0b38a7d9c3b8a28bfa9feaddecf"
        ],
        [
            "rewrite sepcon_app; simpl.",
            "VernacExtend",
            "d92b4cf38245eb828307049758a3e3317aaee465"
        ],
        [
            "rewrite sepcon_emp, sepcon_comm, IHl; auto.",
            "VernacExtend",
            "1b3052b8dfef2fd4b6e5d97ad941f00907994107"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incl_nil : forall {A} (l : list A), incl [] l.",
            "VernacStartTheoremProof",
            "bbd3993d8260fb4c8ad1af746ab9275293d3dd2f"
        ],
        [
            "repeat intro; contradiction.",
            "VernacExtend",
            "92190827c920a98f09efff62b69312aeb0b883cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve incl_nil.",
            "VernacHints",
            "c58a5e1b9a044046a8adaae7c31229fe44db4c79"
        ],
        [
            "Lemma incl_cons_out : forall {A} (a : A) l1 l2, incl l1 (a :: l2) -> ~In a l1 -> incl l1 l2.",
            "VernacStartTheoremProof",
            "0ec29c9928e96ad4f57302fc2fd5f006e32bc99d"
        ],
        [
            "intros; intros ? Hin; specialize (H _ Hin); destruct H; auto; subst; contradiction.",
            "VernacExtend",
            "2a4a9bd3cc0b2ca0404051787ac228516d7e8f60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_upto : forall n i, In i (upto n) <-> 0 <= i < Z.of_nat n.",
            "VernacStartTheoremProof",
            "eb1039bdd8993161825b4de57e91b4bb21447b6e"
        ],
        [
            "induction n; intro.",
            "VernacExtend",
            "33d42529595f9b7eaeb8f47ee97518a5b8868c37"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; split; try contradiction; omega.",
            "VernacExtend",
            "c342d87fd88a28e0267f3a10818db4bc82ce86eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Nat2Z.inj_succ; simpl.",
            "VernacExtend",
            "05ba99a30849c0f67027c59580240456103cef5f"
        ],
        [
            "rewrite in_map_iff; split.",
            "VernacExtend",
            "99b1e2ae005ba747fabdb4cc33214089518c59c9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros [? | ?]; [omega|].",
            "VernacExtend",
            "1b8d50661af636aac8975e5623a22d1fb349ba2b"
        ],
        [
            "destruct H as (? & ? & ?); subst; rewrite IHn in *; omega.",
            "VernacExtend",
            "879299527f2366f946da5190169993355854834e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intro; destruct (eq_dec i 0); [auto | right].",
            "VernacExtend",
            "6d2895b3e405fcd230e780411ff39ea2b4e76f70"
        ],
        [
            "exists (i - 1); rewrite IHn; omega.",
            "VernacExtend",
            "79711c7b8be051fe4ccf8303e49d89658a069ef1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_fst : forall {A B} (l : list A) (l' : list B), length l = length l' -> map fst (combine l l') = l.",
            "VernacStartTheoremProof",
            "61fe1ec4e5bc76d923a99dc26e2f84c84ad0f49c"
        ],
        [
            "induction l; destruct l'; try discriminate; auto; intros.",
            "VernacExtend",
            "f0426880bb01ca9b2eb7a32a03313d8e4dd65027"
        ],
        [
            "inv H; simpl; rewrite IHl; auto.",
            "VernacExtend",
            "cf3102125d267bc99df81a6cdecf4e7a4ba94951"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_snd : forall {A B} (l : list A) (l' : list B), length l = length l' -> map snd (combine l l') = l'.",
            "VernacStartTheoremProof",
            "07e06ebce41215e478a8956723656965d8635777"
        ],
        [
            "induction l; destruct l'; try discriminate; auto; intros.",
            "VernacExtend",
            "f0426880bb01ca9b2eb7a32a03313d8e4dd65027"
        ],
        [
            "inv H; simpl; rewrite IHl; auto.",
            "VernacExtend",
            "cf3102125d267bc99df81a6cdecf4e7a4ba94951"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rev_combine : forall {A B} (l1 : list A) (l2 : list B), length l1 = length l2 -> rev (combine l1 l2) = combine (rev l1) (rev l2).",
            "VernacStartTheoremProof",
            "d4d1caf306359e8bcfe2cf6a95f6189882add396"
        ],
        [
            "induction l1; destruct l2; try discriminate; auto; simpl; intros.",
            "VernacExtend",
            "246b79867777220b787f2154c5c4630dcfff04aa"
        ],
        [
            "inv H; rewrite combine_app; [|rewrite !rev_length; auto].",
            "VernacExtend",
            "3f08f1eb28f974de902a622a2cc7c91db4f53b15"
        ],
        [
            "rewrite IHl1; auto.",
            "VernacExtend",
            "3bcd23a92f23552a758e14aa4b09c186695e77c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_map_snd : forall {A B C} (l1 : list A) (l2 : list B) (f : B -> C), combine l1 (map f l2) = map (fun x => let '(a, b) := x in (a, f b)) (combine l1 l2).",
            "VernacStartTheoremProof",
            "67be06333219e8c6c80896eeea310c98140f2c1e"
        ],
        [
            "induction l1; auto; simpl; intros.",
            "VernacExtend",
            "e114186f9d1e491afcc5a60102019e032a22df12"
        ],
        [
            "destruct l2; auto; simpl.",
            "VernacExtend",
            "b297159d1c27184777c3e1945bc636cafb392193"
        ],
        [
            "rewrite IHl1; auto.",
            "VernacExtend",
            "3bcd23a92f23552a758e14aa4b09c186695e77c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_const1 : forall {A B} (l1 : list A) (x : B) n, Z.of_nat n >= Zlength l1 -> combine l1 (repeat x n) = map (fun a => (a, x)) l1.",
            "VernacStartTheoremProof",
            "b8b72120b82a32f3a4d12d461be93683dab3aca0"
        ],
        [
            "induction l1; auto; simpl; intros.",
            "VernacExtend",
            "e114186f9d1e491afcc5a60102019e032a22df12"
        ],
        [
            "rewrite Zlength_cons in *; destruct n; [rewrite Zlength_correct in *; simpl in *; omega | simpl].",
            "VernacExtend",
            "5deb4b46b4a91b760ee2773c605fed2d42014fdf"
        ],
        [
            "rewrite IHl1; auto.",
            "VernacExtend",
            "3bcd23a92f23552a758e14aa4b09c186695e77c7"
        ],
        [
            "rewrite Nat2Z.inj_succ in *; omega.",
            "VernacExtend",
            "a82525e06a85e434e4e7dc99eae40de49a9d33cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_const2 : forall {A B} (x : A) n (l2 : list B), Z.of_nat n >= Zlength l2 -> combine (repeat x n) l2 = map (fun b => (x, b)) l2.",
            "VernacStartTheoremProof",
            "a16edfbbe826c5eb249ec4abbe2f422bffc1120a"
        ],
        [
            "induction n; destruct l2; auto; intros; rewrite ?Nat2Z.inj_succ, ?Zlength_nil, ?Zlength_cons in *; simpl in *; try (rewrite Zlength_correct in *; omega).",
            "VernacExtend",
            "e521e9ad63fd55e7a9b5cee7443296a7e0c9d015"
        ],
        [
            "rewrite IHn; auto; omega.",
            "VernacExtend",
            "b5b7a40a49236191286f8a285ca4ec721f217724"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_const: forall {A B} (c : A) (l : list B), map (fun _ => c) l = repeat c (length l).",
            "VernacStartTheoremProof",
            "184c9f8f241a8ede12d0e2448118726f2f30e8b1"
        ],
        [
            "induction l; auto; simpl.",
            "VernacExtend",
            "eed68d4d83fee76794ef25f3fe5547ed00ee3133"
        ],
        [
            "rewrite IHl; auto.",
            "VernacExtend",
            "393525b1bdb1a369fcb5ee1df369f0a6bb2ffdb4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_upd_Znth : forall {A} i l (x y : A), In x (upd_Znth i l y) -> x = y \\/ In x l.",
            "VernacStartTheoremProof",
            "1566be2b27e170a800400220e3ad3fb6a6c6de53"
        ],
        [
            "unfold upd_Znth; intros.",
            "VernacExtend",
            "d426523d5f937785301dfd6dd365f6cc4fdf5cfd"
        ],
        [
            "rewrite in_app in H; destruct H as [? | [? | ?]]; auto; right; eapply sublist_In; eauto.",
            "VernacExtend",
            "d206e1fe5e005e588685c8048b3ca21aae4b6b03"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upd_Znth_In : forall {A} i l (x : A), In x (upd_Znth i l x).",
            "VernacStartTheoremProof",
            "8458c760c3106305497db506609a3e076a626ccb"
        ],
        [
            "intros; unfold upd_Znth.",
            "VernacExtend",
            "774945f168bf5f0ce358f4c6297717a58e345ddd"
        ],
        [
            "rewrite in_app; simpl; auto.",
            "VernacExtend",
            "78214060553df06c9218817fa2d21d52d73cd97d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_Znth_iff : forall {A}{d: Inhabitant A} (l : list A), NoDup l <-> forall i j (Hi : 0 <= i < Zlength l) (Hj : 0 <= j < Zlength l), Znth i l = Znth j l -> i = j.",
            "VernacStartTheoremProof",
            "83f38287f5802d18b84e8e05c3ee126445847b9c"
        ],
        [
            "split; intros; [eapply NoDup_Znth_inj; eauto|].",
            "VernacExtend",
            "93cc2d02c6bdd71e45fcf6924567fde74bdb25e9"
        ],
        [
            "induction l; rewrite ?Zlength_cons in *; constructor.",
            "VernacExtend",
            "9bc510650ac5b8ac4871578b8b9416d4e021ac50"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro Hin; eapply In_Znth in Hin; destruct Hin as (j & ? & Hj).",
            "VernacExtend",
            "5d48739f0f88ffb64df65f7088c206305e3b1d6f"
        ],
        [
            "exploit (H 0 (j + 1)); try omega.",
            "VernacExtend",
            "a68e1aeebfa0396a9845a507e168b01a457f3751"
        ],
        [
            "rewrite !Znth_cons_eq; simpl.",
            "VernacExtend",
            "6afbd1208cfc29feed9eee027f52392cf5465fbd"
        ],
        [
            "if_tac; [omega|].",
            "VernacExtend",
            "acaa292b3247b1295626605e01dd4b9892994f8b"
        ],
        [
            "rewrite Z.add_simpl_r; eauto.",
            "VernacExtend",
            "02b0464bfca40ab00059e314424c7d68309c51da"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHl; intros.",
            "VernacExtend",
            "17c41ee74699ffcb3889dae4c0a533d241b6287b"
        ],
        [
            "exploit (H (i + 1) (j + 1)); try omega.",
            "VernacExtend",
            "2ed19772357dcd0d42350da8db33d9552c592c82"
        ],
        [
            "rewrite !Znth_cons_eq, !Z.add_simpl_r.",
            "VernacExtend",
            "2f12c2664c3b9c6c3b8cf5cd6ad0810bf6f1e448"
        ],
        [
            "if_tac; [omega|].",
            "VernacExtend",
            "acaa292b3247b1295626605e01dd4b9892994f8b"
        ],
        [
            "if_tac; [omega | auto].",
            "VernacExtend",
            "7ab7aa2c05dd16354f56659d62c4c7b39d62abd5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma concat_less_incl : forall {A} l i (l1 l2 : list A) (Hi : 0 <= i < Zlength l) (Hless : Znth i l = l1 ++ l2), incl (concat (upd_Znth i l l1)) (concat l).",
            "VernacStartTheoremProof",
            "3c3c4ec967011b5263b7b75b78583d4e7407bb3c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intros ? Hin.",
            "VernacExtend",
            "45a0f16e56a18c7506642e9c81c2883cef1d82f0"
        ],
        [
            "rewrite in_concat in Hin; rewrite in_concat.",
            "VernacExtend",
            "0cbcba66debe0e87ca2c9fa6046a3a1a6a8f4156"
        ],
        [
            "destruct Hin as (? & ? & Hin).",
            "VernacExtend",
            "95559aa5229518a9a3dffaf01712e3d1106beb36"
        ],
        [
            "apply In_upd_Znth in Hin; destruct Hin; eauto; subst.",
            "VernacExtend",
            "5528e04626c57ba98dffbbbd438dd443944aa55e"
        ],
        [
            "do 2 eexists; [rewrite in_app; left; eauto|].",
            "VernacExtend",
            "225f7587d0c9c18d01b79e79abe789a1bff57d85"
        ],
        [
            "rewrite <- Hless; apply Znth_In; auto.",
            "VernacExtend",
            "6d07f59f906a0d65fb523aa028b6c0aa9678daf5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_app : forall {A} (l1 l2 : list A), NoDup (l1 ++ l2) -> NoDup l1 /\\ NoDup l2 /\\ forall x, In x l1 -> ~In x l2.",
            "VernacStartTheoremProof",
            "5bcf79e5aa2c592c07b05f016c41f73c3df7927a"
        ],
        [
            "induction l1; intros.",
            "VernacExtend",
            "fb1b27cb856c7812b6af97a650698a744c9f86bc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "repeat split; auto; constructor.",
            "VernacExtend",
            "d9db79991e875f0476e164618d6007a4b1f4b9c1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "exploit IHl1; eauto; intros (? & ? & ?).",
            "VernacExtend",
            "08fb16f7d6c39726adfd45836220468d38cb7f25"
        ],
        [
            "rewrite in_app in *.",
            "VernacExtend",
            "1ac5244ab3bafd210b0f5168b624318a19a88d8d"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros ? [? | ?]; auto; subst; auto.",
            "VernacExtend",
            "12ea82523022d165db107befd39beb47250c54d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_app_iff : forall {A} (l1 l2 : list A), NoDup (l1 ++ l2) <-> NoDup l1 /\\ NoDup l2 /\\ forall x, In x l1 -> ~In x l2.",
            "VernacStartTheoremProof",
            "23301e8ede14d3577596b18da9f2a3f67234c6dd"
        ],
        [
            "intros; split; [apply NoDup_app|].",
            "VernacExtend",
            "4df1eea94503cadbb566e682f22e55a7d37e7e9d"
        ],
        [
            "intros (? & ? & Hsep); induction l1; auto.",
            "VernacExtend",
            "dd7302fc11cf6ceb344d8dbb4ab2f31e8d98edc8"
        ],
        [
            "inv H; simpl; constructor.",
            "VernacExtend",
            "34ff79cfb19f864fb529120cf00eeb8cfd101061"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite in_app_iff; intros [? | ?]; [contradiction|].",
            "VernacExtend",
            "278900cf66a2998c22abaa176f8a3d5bee699be8"
        ],
        [
            "eapply Hsep; simpl; eauto.",
            "VernacExtend",
            "4fd96115f3bcbb15da87049544f9d33726ba1ad0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHl1; auto.",
            "VernacExtend",
            "faf3c6a21d6bc708325ef9cfcef005f1721c606d"
        ],
        [
            "intros; apply Hsep; simpl; auto.",
            "VernacExtend",
            "d61060ba9bb3d355342fa31bc7258cd7fba3876e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary NoDup_app_swap : forall {A} (l1 l2 : list A), NoDup (l1 ++ l2) <-> NoDup (l2 ++ l1).",
            "VernacStartTheoremProof",
            "96a86acad1738d80180718c71e5582f7e8786655"
        ],
        [
            "intros; rewrite !NoDup_app_iff; split; intros (? & ? & Hsep); repeat split; auto; repeat intro; eapply Hsep; eauto.",
            "VernacExtend",
            "5701d625b21f6fbf08de6840ed4da91343219d05"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_concat_less : forall {A} l i (l1 l2 : list A) (Hl : NoDup (concat l)) (Hi : 0 <= i < Zlength l) (Hless : Znth i l = l1 ++ l2), NoDup (concat (upd_Znth i l l1)).",
            "VernacStartTheoremProof",
            "4a5f812ca19bcf328013b59c6f775c3836bc8557"
        ],
        [
            "induction l; simpl; intros; [rewrite Zlength_nil in *; omega|].",
            "VernacExtend",
            "15da5691769a42c08a9f59f8b50c632e53d25dfc"
        ],
        [
            "rewrite Zlength_cons in *.",
            "VernacExtend",
            "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
        ],
        [
            "destruct (eq_dec i 0).",
            "VernacExtend",
            "ed0407251a0d330a3d6d3f4b234de52e598904c6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; rewrite upd_Znth0, Zlength_cons, sublist_1_cons, sublist_same by (auto; omega); simpl.",
            "VernacExtend",
            "1ad6c83e89f0780824293d7b2164f1834b12cf9d"
        ],
        [
            "rewrite Znth_0_cons in Hless; subst.",
            "VernacExtend",
            "c7304611730172c7d4e6a3f9909d6df551f425ea"
        ],
        [
            "rewrite <- app_assoc, NoDup_app_swap, <- app_assoc, NoDup_app_iff, NoDup_app_swap in Hl; tauto.",
            "VernacExtend",
            "39959ca5209b5ac2cfb7f91f4f4ded394ae5e09f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite upd_Znth_cons by omega; simpl.",
            "VernacExtend",
            "9a1007d2f613e95d93a7059df6f7b30c7c59bf14"
        ],
        [
            "rewrite Znth_pos_cons in Hless by omega.",
            "VernacExtend",
            "184fbb630c073e70959e2f17c120a0a40d0691e0"
        ],
        [
            "rewrite NoDup_app_iff in Hl; rewrite NoDup_app_iff.",
            "VernacExtend",
            "2c20ade19d524f71769e1d8ebdae578397fcea46"
        ],
        [
            "destruct Hl as (? & ? & Hsep).",
            "VernacExtend",
            "7fa1488d4638845a45b535cdbed929c5658c4094"
        ],
        [
            "split; [auto|]; split.",
            "VernacExtend",
            "0f049d928c10b8ac9b4c4fc47108d2c7d3dfb7db"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply IHl; eauto; omega.",
            "VernacExtend",
            "9eeadaa015c42b4887c0d42d55f2aecf818e5194"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros ?? Hin; eapply Hsep; eauto.",
            "VernacExtend",
            "d8d86307c976f8fd05683e89e43741c871d0b2a2"
        ],
        [
            "eapply concat_less_incl; eauto; omega.",
            "VernacExtend",
            "0be7fcd6e888a8b6c17dba0be8de38b917352dc6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_Znth : forall {A B}{d1: Inhabitant A}{d2: Inhabitant B} (P : A -> B -> Prop) l1 l2 (Hall : Forall2 P l1 l2) i (Hi : 0 <= i < Zlength l1), P (Znth i l1) (Znth i l2).",
            "VernacStartTheoremProof",
            "17eaa6a2e35826ffa42a9fc2da28fdf0fb3fa8dd"
        ],
        [
            "induction 1; intros.",
            "VernacExtend",
            "176684f910d62ec20fbc75549575bf1cd34fa8ec"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite Zlength_nil in *; omega.",
            "VernacExtend",
            "11e355bcc65e98c7aa282771754cdae5eb378b32"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite Zlength_cons in *.",
            "VernacExtend",
            "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
        ],
        [
            "destruct (eq_dec i 0).",
            "VernacExtend",
            "ed0407251a0d330a3d6d3f4b234de52e598904c6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; rewrite !Znth_0_cons; auto.",
            "VernacExtend",
            "fa8ed8ddbc149e20b69b1794caa216d87cfb87fe"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !Znth_pos_cons; try omega.",
            "VernacExtend",
            "1d858eb7b1bb38a3318d58bddd4a343cffe6e44d"
        ],
        [
            "apply IHHall; omega.",
            "VernacExtend",
            "395ef7e16a1665821ddf62a5ad469af78c759e12"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_app_inv : forall {A B} (P : A -> B -> Prop) l1 l2 l3 l4 (Hlen : length l1 = length l3), Forall2 P (l1 ++ l2) (l3 ++ l4) -> Forall2 P l1 l3 /\\ Forall2 P l2 l4.",
            "VernacStartTheoremProof",
            "3333803a98fe0797aff25f51dcde85920d61e176"
        ],
        [
            "induction l1; destruct l3; try discriminate; auto; intros.",
            "VernacExtend",
            "ffe87cb1050d9dacda9a961c83d84c4199154d32"
        ],
        [
            "inv H; inv Hlen.",
            "VernacExtend",
            "949afdc595aa1aa0cb212f0042c5656dc10b555b"
        ],
        [
            "exploit IHl1; eauto; intros (? & ?); split; [constructor|]; auto.",
            "VernacExtend",
            "73eb34dddaa7f07d3024c5a32efdc4608c4ed383"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_firstn : forall {A B} (P : A -> B -> Prop) l1 l2 n, Forall2 P l1 l2 -> Forall2 P (firstn n l1) (firstn n l2).",
            "VernacStartTheoremProof",
            "d8363e57f42a4c100c69ceed0bd851fda7548bc0"
        ],
        [
            "intros; revert n; induction H; intro.",
            "VernacExtend",
            "4b634abc0c2b185a4f1baa87dc74e37420f35075"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !firstn_nil; auto.",
            "VernacExtend",
            "a7f6ba32eebf72064b828e97989489e49a4209f7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct n; simpl; auto.",
            "VernacExtend",
            "1e3544c1db38cf9d3b82500db7d90f24bce9aeea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_upd_Znth : forall {A B} (P : A -> B -> Prop) l1 l2 i x1 x2, Forall2 P l1 l2 -> P x1 x2 -> 0 <= i <= Zlength l1 -> Forall2 P (upd_Znth i l1 x1) (upd_Znth i l2 x2).",
            "VernacStartTheoremProof",
            "01aa30db188b1a4946ded134b03e50e84e7be026"
        ],
        [
            "intros; unfold upd_Znth.",
            "VernacExtend",
            "774945f168bf5f0ce358f4c6297717a58e345ddd"
        ],
        [
            "pose proof (mem_lemmas.Forall2_Zlength H) as Hlen.",
            "VernacExtend",
            "8af2464d50ac8dbfad8134408efb9653bfbec8bf"
        ],
        [
            "erewrite <- sublist_same with (al := l1), sublist_split with (mid := i) in H; auto; try omega.",
            "VernacExtend",
            "ecacada28a6ba9d14a346720e48bdf6e5825b4c2"
        ],
        [
            "erewrite <- sublist_same with (al := l2), sublist_split with (al := l2)(mid := i) in H; auto; try omega.",
            "VernacExtend",
            "ad4fb419f19b1913bb6bf38555a5b31972493c43"
        ],
        [
            "apply Forall2_app_inv in H.",
            "VernacExtend",
            "c59a77dbf0f1a315f84eb69e87023effa55c93b2"
        ],
        [
            "destruct H as (? & Hall); apply Forall2_app; auto.",
            "VernacExtend",
            "ab57b4e93e07c8319f8a547c3902128f79cbab0b"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "destruct (eq_dec i (Zlength l1)).",
            "VernacExtend",
            "61079bdbad4cf1589db3da5aa08469625478c869"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !sublist_nil_gen; auto; omega.",
            "VernacExtend",
            "e5dc0f21441490877d763f2cafc24163815c90c0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z.add_comm.",
            "VernacExtend",
            "cb1af9408ed4e4ab13bf29109365368cad89a879"
        ],
        [
            "replace (Zlength l1) with (Zlength l1 - i + i) by omega.",
            "VernacExtend",
            "23cda587f8c014d142955ff5409932db40af93f5"
        ],
        [
            "replace (Zlength l2) with (Zlength l2 - i + i) by omega.",
            "VernacExtend",
            "ff7837dc1017ac8d53483a57789f5519aa49d60a"
        ],
        [
            "erewrite <- !sublist_sublist with (j := Zlength l1); try omega.",
            "VernacExtend",
            "c1cb7fae97fb1d1ffe82dd424decdac4f7631915"
        ],
        [
            "inversion Hall as [Hl1 Hl2 | ?????? Hl1 Hl2].",
            "VernacExtend",
            "667ea943132c4bf087a0f99bcd6f51dcd9d7b1a8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite !Hlen, <- Hl2.",
            "VernacExtend",
            "4d427d0c51a2277890b61f209e2ebb4ec897dbf1"
        ],
        [
            "unfold sublist; rewrite !skipn_nil, !firstn_nil; auto.",
            "VernacExtend",
            "1520ea0132b8857cf94df6c661f2666406148b26"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite sublist_1_cons, !Hlen, <- Hl2, sublist_1_cons.",
            "VernacExtend",
            "58bb5a4d93afa38ab46f555c86eba7543871bed2"
        ],
        [
            "unfold sublist; simpl; apply Forall2_firstn; auto.",
            "VernacExtend",
            "47dba0c6b1f931b566dc2d6d962b75bdfe70f019"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Nat2Z.inj; rewrite <- !Zlength_correct.",
            "VernacExtend",
            "926951c9fa66975abfc582c94989376308c66505"
        ],
        [
            "autorewrite with sublist; auto.",
            "VernacExtend",
            "928ba352fac4c0a4d960f940cd8d2b6430082342"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_impl' : forall {A B} (P Q : A -> B -> Prop) l1 l2, (forall a b, In a l1 -> In b l2 -> P a b -> Q a b) -> Forall2 P l1 l2 -> Forall2 Q l1 l2.",
            "VernacStartTheoremProof",
            "8a4a126593345ace670ea5c9d5db11044b849d2d"
        ],
        [
            "induction 2; simpl in *; auto.",
            "VernacExtend",
            "712c50d95c2fb012dd4091f842b67f8298602767"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_impl : forall {A B} (P Q : A -> B -> Prop), (forall a b, P a b -> Q a b) -> forall l1 l2, Forall2 P l1 l2 -> Forall2 Q l1 l2.",
            "VernacStartTheoremProof",
            "eb4244aa0da203c656b4b7eaf78ff91945c92f38"
        ],
        [
            "induction 2; auto.",
            "VernacExtend",
            "dcfc52477da5ede37c9d912847b566de0e271512"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_id_eq : forall {A} (l : list A), map (@id A) l = l.",
            "VernacStartTheoremProof",
            "7bb74021e8c0feb7c72f47c04020e8f209cf3de4"
        ],
        [
            "induction l; auto.",
            "VernacExtend",
            "6df74a097ee826dbbeb45167e7678377d4e52265"
        ],
        [
            "simpl; apply f_equal; auto.",
            "VernacExtend",
            "0497396dcc248d7bfaffc8fb30d2349ae7e68aa7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_map : forall {A B C D} (P : A -> B -> Prop) (f1 : C -> A) (f2 : D -> B) l1 l2, Forall2 P (map f1 l1) (map f2 l2) <-> Forall2 (fun a b => P (f1 a) (f2 b)) l1 l2.",
            "VernacStartTheoremProof",
            "7a5a1e3543af80667c87b48bd497313b51017b44"
        ],
        [
            "induction l1.",
            "VernacExtend",
            "dfeb7bb70eb7390d22f3eada025c33a176cd1338"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; intro H.",
            "VernacExtend",
            "496dd5fc77c723ff896bbd9bc6dee3ccc3aa9bde"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct l2; auto; inv H.",
            "VernacExtend",
            "40d9a9c21c04b00142e87bd96dcabe0843f6578b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H; simpl; auto.",
            "VernacExtend",
            "119811780f92497484b832c8ec003364cb5904e0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; intro H.",
            "VernacExtend",
            "496dd5fc77c723ff896bbd9bc6dee3ccc3aa9bde"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct l2; inv H.",
            "VernacExtend",
            "eacc0437bfb6c744d1e2e89999de77b06b882fb5"
        ],
        [
            "rewrite IHl1 in *; constructor; auto.",
            "VernacExtend",
            "628999d138c3e6b10ac298e8589d35f98db054dc"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H; simpl; constructor; auto.",
            "VernacExtend",
            "4ea5da2fc97c370884862d3f4845539cad0e2d52"
        ],
        [
            "rewrite IHl1; auto.",
            "VernacExtend",
            "3bcd23a92f23552a758e14aa4b09c186695e77c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary Forall2_map1 : forall {A B C} (P : A -> B -> Prop) (f : C -> A) l1 l2, Forall2 P (map f l1) l2 <-> Forall2 (fun a b => P (f a) b) l1 l2.",
            "VernacStartTheoremProof",
            "ba44521c0b747577616ed5eff2fff2971024abbc"
        ],
        [
            "intros; rewrite <- (map_id_eq l2) at 1; apply Forall2_map.",
            "VernacExtend",
            "1d5ffb877bd36020cac76432a338c18625eef798"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary Forall2_map2 : forall {A B C} (P : A -> B -> Prop) (f : C -> B) l1 l2, Forall2 P l1 (map f l2) <-> Forall2 (fun a b => P a (f b)) l1 l2.",
            "VernacStartTheoremProof",
            "31455555526962b9b53b697c62db4d26bda26662"
        ],
        [
            "intros; rewrite <- (map_id_eq l1) at 1; apply Forall2_map.",
            "VernacExtend",
            "2dbc4411e781d74f691e1d5aceb022526f281cc1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_max_length : forall {A} i j (al : list A), Zlength (sublist i j al) <= Zlength al.",
            "VernacStartTheoremProof",
            "f72d042637dc74dabc63e4a9f7a83495f7d74862"
        ],
        [
            "intros; unfold sublist.",
            "VernacExtend",
            "09ec98bb9a22664aa583101a1d4faac006f3a7d0"
        ],
        [
            "rewrite Zlength_firstn, Zlength_skipn.",
            "VernacExtend",
            "d722e53460fbca54ef774d9825b7a3323a309565"
        ],
        [
            "rewrite Z.min_le_iff; right.",
            "VernacExtend",
            "e7b826ceab4e911302e67ba266f716602e22331d"
        ],
        [
            "pose proof (Zlength_nonneg al).",
            "VernacExtend",
            "1b09827e8af8e30091d01484742a507228bb13a2"
        ],
        [
            "apply Z.max_lub; try omega.",
            "VernacExtend",
            "6a383c3145cad6fee7c8026083f5c002d321a921"
        ],
        [
            "rewrite <- Z.le_sub_nonneg; apply Z.le_max_l.",
            "VernacExtend",
            "fa7214704bcb17108b256906c1aa26a3387c84cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_sublist : forall {A B} (P : A -> B -> Prop) l1 l2 i j, Forall2 P l1 l2 -> 0 <= i -> Forall2 P (sublist i j l1) (sublist i j l2).",
            "VernacStartTheoremProof",
            "6dca8972f12e8ee36343d431a9e7f0c42eb3dc39"
        ],
        [
            "intros; revert j; revert dependent i; induction H; intros.",
            "VernacExtend",
            "0d30973e7dc6ecb7e62cdfed74342f9cdfae097c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !sublist_of_nil; constructor.",
            "VernacExtend",
            "ae2c862a57aab4c103a4a4adf9aab79ec1f17dbb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (Z_le_dec j i); [rewrite !sublist_nil_gen; auto; constructor|].",
            "VernacExtend",
            "500cb9392b4b9dae5da392d848242db579cbedef"
        ],
        [
            "destruct (eq_dec i 0).",
            "VernacExtend",
            "ed0407251a0d330a3d6d3f4b234de52e598904c6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst; rewrite !sublist_0_cons by omega.",
            "VernacExtend",
            "70083fbfd85589bdfd63abaf19a2107c1183037d"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite !sublist_S_cons by omega.",
            "VernacExtend",
            "a57bab3cc096cce12c826994d2ff2e9e1e8fa394"
        ],
        [
            "apply IHForall2; omega.",
            "VernacExtend",
            "abb0c93f0d20b8b8ae4c5b4e6363246d44de5d1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_last : forall {A} (P : A -> Prop) d l, Forall P l -> P d -> P (last l d).",
            "VernacStartTheoremProof",
            "ffa04ad64e91b4ecf317c2c9c9b60c5d57915f25"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "exploit (@app_removelast_last _ (a :: l) d); [discriminate | intro Hlast].",
            "VernacExtend",
            "31c9f1233333a4ead799a40c4db1926c1cec4ba7"
        ],
        [
            "intros; rewrite Forall_forall in H; apply H.",
            "VernacExtend",
            "974f3499e1e22d6b8e71168206e1bcf28a79eb01"
        ],
        [
            "rewrite Hlast at 2; rewrite in_app; simpl; auto.",
            "VernacExtend",
            "86bc303eba354b5b15d01d7668165947d80bf28a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_map : forall {A B} (f : A -> B) d l, f (last l d) = last (map f l) (f d).",
            "VernacStartTheoremProof",
            "e11e10a976d39ae82027f619dd23ac8c1e7a6415"
        ],
        [
            "induction l; auto; simpl.",
            "VernacExtend",
            "eed68d4d83fee76794ef25f3fe5547ed00ee3133"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_removelast : forall {A} (l : list A) x, In x (removelast l) -> In x l.",
            "VernacStartTheoremProof",
            "9d70a9a410b65d196405c01640e178a1ceacf4bc"
        ],
        [
            "induction l; auto; simpl; intros.",
            "VernacExtend",
            "279ca8eb5e74b40505c14e4c71486078bc450c1c"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "destruct H; auto.",
            "VernacExtend",
            "95ae427bd4e09a5f31c59184b718811a23ecb36f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition nil_dec {A} (l : list A) : {l = []} + {l <> []}.",
            "VernacDefinition",
            "f4cd987475d3d15a45eaaefbd9d5adb0f1027eb9"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_upd_Znth_l : forall {A B}{d: Inhabitant B} (P : A -> B -> Prop) l1 l2 i x, Forall2 P l1 l2 -> P x (Znth i l2) -> 0 <= i < Zlength l1 -> Forall2 P (upd_Znth i l1 x) l2.",
            "VernacStartTheoremProof",
            "145c7c428a9c007da40121928e3de8300c64d97d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "erewrite <- upd_Znth_triv with (l := l2)(i0 := i); eauto.",
            "VernacExtend",
            "59e8851d651d3b5217d38ecc7bf8402fbba9ab35"
        ],
        [
            "apply Forall2_upd_Znth; eauto; omega.",
            "VernacExtend",
            "d7c1af6209aa4e71f717adf8167f11f74579cb15"
        ],
        [
            "apply mem_lemmas.Forall2_Zlength in H; omega.",
            "VernacExtend",
            "a7211d7ce66b76dd76ab74921a54870a0604618d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_upd_Znth_r : forall {A B}{d: Inhabitant A} (P : A -> B -> Prop) l1 l2 i x, Forall2 P l1 l2 -> P (Znth i l1) x -> 0 <= i < Zlength l1 -> Forall2 P l1 (upd_Znth i l2 x).",
            "VernacStartTheoremProof",
            "9240f419c7e4dc8e3842306b4cb725141613ef27"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "erewrite <- upd_Znth_triv with (l := l1)(i0 := i) by (eauto; omega).",
            "VernacExtend",
            "97a33ac8e35de6c1d5422835b5dea10785090a0c"
        ],
        [
            "apply Forall2_upd_Znth; eauto.",
            "VernacExtend",
            "63ea9a880e968876a9e63075c54d01509f83db9d"
        ],
        [
            "apply mem_lemmas.Forall2_Zlength in H; omega.",
            "VernacExtend",
            "a7211d7ce66b76dd76ab74921a54870a0604618d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_eq_upto : forall {A B}{d1: Inhabitant A}{d2: Inhabitant B} (P : A -> B -> Prop) l1 l2, Forall2 P l1 l2 <-> Zlength l1 = Zlength l2 /\\ Forall (fun i => P (Znth i l1) (Znth i l2)) (upto (Z.to_nat (Zlength l1))).",
            "VernacStartTheoremProof",
            "c43b3cd2eab5be3376c2c205f94622e6739c68eb"
        ],
        [
            "induction l1; destruct l2; rewrite ?Zlength_cons, ?Zlength_nil; try solve [split; intro H; inv H; try (rewrite Zlength_correct in *; omega)]; simpl.",
            "VernacExtend",
            "b9e438597d365dfcb375de9ac82677f5ea680d45"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (upto 0) with (@nil Z); split; auto.",
            "VernacExtend",
            "63cab705c84aa8609396fda1865d3702b19e62be"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z2Nat.inj_succ by (apply Zlength_nonneg).",
            "VernacExtend",
            "dc88c8522268d3d75dec63a8d298ee0a2a399f72"
        ],
        [
            "rewrite <- Nat.add_1_l, upto_app, Forall_app, Forall_map.",
            "VernacExtend",
            "d6333a13695db0a289b11ab0c985d1d01e9adacd"
        ],
        [
            "change (upto 1) with [0]; split; intro H.",
            "VernacExtend",
            "5c176b5e49caa8b27cad45a55bb665a932679cb4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H as [|????? Hall]; subst.",
            "VernacExtend",
            "07683db4bd60b165ed5dfd375b50b4b26f91a568"
        ],
        [
            "rewrite IHl1 in Hall; destruct Hall as (? & Hall).",
            "VernacExtend",
            "093c465930555f405a012d33d35b1cd7e1cfe426"
        ],
        [
            "split; [congruence|].",
            "VernacExtend",
            "61d8fae76bb7ad3b85b0c7d1b4f4c3cd449cdcc7"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite Forall_forall in *; intros ? Hin.",
            "VernacExtend",
            "c9b4b81a48526e205b9cb81a436f3c9233152b6f"
        ],
        [
            "specialize (Hall _ Hin); simpl.",
            "VernacExtend",
            "1abaa05241d684569e31a92454a2d30448fa6b44"
        ],
        [
            "rewrite In_upto in Hin.",
            "VernacExtend",
            "f019208e40161583f587304768c468402017fa0f"
        ],
        [
            "rewrite !Znth_pos_cons, Z.add_simpl_l by omega; auto.",
            "VernacExtend",
            "30cac4790f3b62193740124be4f52ebb3bc5592c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H as (? & Ha & Hall); inversion Ha as [|?? HP]; subst.",
            "VernacExtend",
            "ceb2d2dd36fe601119d9dbc0813dfebd8abdb5cf"
        ],
        [
            "rewrite !Znth_0_cons in HP.",
            "VernacExtend",
            "6de289012533137ae442c42bb2ef76696bfd597b"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "rewrite IHl1; split; [omega|].",
            "VernacExtend",
            "009fa0bc2b06a94c39af6ba5717fbbcaa7fd9bb1"
        ],
        [
            "rewrite Forall_forall in *; intros ? Hin.",
            "VernacExtend",
            "c9b4b81a48526e205b9cb81a436f3c9233152b6f"
        ],
        [
            "specialize (Hall _ Hin); simpl in *.",
            "VernacExtend",
            "f512c1c6d6eb6b29dd9baf0342cce778d4e72a26"
        ],
        [
            "rewrite In_upto in Hin.",
            "VernacExtend",
            "f019208e40161583f587304768c468402017fa0f"
        ],
        [
            "rewrite !Znth_pos_cons, Z.add_simpl_l in Hall by omega; auto.",
            "VernacExtend",
            "93eccb5c4e9a8f62e9fdb600a8eee6e64ec94e14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall2_forall_Znth : forall {A B}{d1: Inhabitant A}{d2: Inhabitant B} (P : A -> B -> Prop) l1 l2, Forall2 P l1 l2 <-> Zlength l1 = Zlength l2 /\\ (forall i, 0 <= i < Zlength l1 -> P (Znth i l1) (Znth i l2)).",
            "VernacStartTheoremProof",
            "20f3004a3141a67fa76a09332c4943e7d9b69af6"
        ],
        [
            "intros; rewrite Forall2_eq_upto, Forall_forall.",
            "VernacExtend",
            "3da3dc4b8e20fd9a1ef300f95533420a7ca1477b"
        ],
        [
            "setoid_rewrite In_upto.",
            "VernacExtend",
            "0156ec1f72eec951f7c2e437586718faf4da45f5"
        ],
        [
            "rewrite Z2Nat.id by (apply Zlength_nonneg).",
            "VernacExtend",
            "a638481ad5a8e244b47d02142a69cf2b4439de67"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_inbounds : forall {A}{d: Inhabitant A} i (l : list A), Znth i l <> default -> 0 <= i < Zlength l.",
            "VernacStartTheoremProof",
            "da50c3df1bf9672e42f0ddd4ed741fc0ef1ae647"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt i 0); [contradiction H; apply Znth_underflow; auto|].",
            "VernacExtend",
            "7303503cefac48ad0a6cf2a73af4f33e3ee7308a"
        ],
        [
            "destruct (Z_lt_dec i (Zlength l)); [omega|].",
            "VernacExtend",
            "f4bc0e261e33d632d9bfd1cef2324b61548d642f"
        ],
        [
            "rewrite Znth_overflow in H; [contradiction H; auto | omega].",
            "VernacExtend",
            "9ac238e5894f90f8a4ca9af735037f4623337518"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_next : forall {A}{d: Inhabitant A} i j l, 0 <= i < j -> j <= Zlength l -> sublist i j l = Znth i l :: sublist (i + 1) j l.",
            "VernacStartTheoremProof",
            "84d5fde76fc56858bd0dd50ae6c4094ae99bcb6a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Znth_cons_sublist; [|omega].",
            "VernacExtend",
            "a98a05bf937adba318b165f5f09583f84e30ed05"
        ],
        [
            "apply sublist_split; omega.",
            "VernacExtend",
            "44d61b9e6e17c673849d7314038719da1d94504f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upd_init : forall {A} (l : list A) i b v v', i < b -> Zlength l = i -> upd_Znth i (l ++ repeat v (Z.to_nat (b - i))) v' = l ++ v' :: repeat v (Z.to_nat (b - (i + 1))).",
            "VernacStartTheoremProof",
            "4a171fb8de204fd6ba789300d5d6b5053d9c999f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite upd_Znth_app2; rewrite ?Zlength_repeat, ?Z2Nat.id; try omega.",
            "VernacExtend",
            "c513a8d1fd6c2333c579a04dd4aaaa7fe8b96d71"
        ],
        [
            "subst; rewrite Zminus_diag, upd_Znth0.",
            "VernacExtend",
            "56afb64ef6fe33d7b2aff21ee7f52268cf506a42"
        ],
        [
            "destruct (Z.to_nat (b - Zlength l)) eqn: Hi.",
            "VernacExtend",
            "75bc4eca019efc2de38a882cac3ba8395284a5e7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "change O with (Z.to_nat 0) in Hi; apply Z2Nat.inj in Hi; omega.",
            "VernacExtend",
            "20af4067e162dd3d6f85eb74c5b99791e92acf30"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "simpl; rewrite sublist_1_cons, sublist_same; try rewrite Zlength_cons, !Zlength_repeat; try omega.",
            "VernacExtend",
            "5b6ede46c4c8a0dd38acdf251591c69dd2a5807a"
        ],
        [
            "replace (Z.to_nat (b - (Zlength l + 1))) with n; auto.",
            "VernacExtend",
            "a618e6c74694394bc39caaaa8179b5500ba79a1f"
        ],
        [
            "rewrite Z.sub_add_distr, Z2Nat.inj_sub; try omega.",
            "VernacExtend",
            "5ba55fa17c0f6ddfe1de80b5b570c2de0e6dcf5f"
        ],
        [
            "setoid_rewrite Hi; simpl; omega.",
            "VernacExtend",
            "be970aa6e6d02f3372d4fdc6ad1865e7aa26fa70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary upd_init_const : forall {A} i b (v v' : A), 0 <= i < b -> upd_Znth i (repeat v' (Z.to_nat i) ++ repeat v (Z.to_nat (b - i))) v' = repeat v' (Z.to_nat (i + 1)) ++ repeat v (Z.to_nat (b - (i + 1))).",
            "VernacStartTheoremProof",
            "2ad4991f6664cd29f109278df6219e182b99a5aa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite upd_init; try rewrite Zlength_repeat, Z2Nat.id; auto; try omega.",
            "VernacExtend",
            "0ed2cfffe863653c02bfd26b4708485a2e981f10"
        ],
        [
            "rewrite Z2Nat.inj_add, repeat_plus, <- app_assoc; auto; omega.",
            "VernacExtend",
            "db08b4b40cb459f9901a683c8c44c4280725c54a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_Znth_eq : forall {A}{d: Inhabitant A} (l : list A), l = map (fun j => Znth j l) (upto (length l)).",
            "VernacStartTheoremProof",
            "21e6be83928114e9ad46dc77030d1ce82cfe7ccf"
        ],
        [
            "induction l; simpl; intros; auto.",
            "VernacExtend",
            "8220944a1558558e20036605293047bd287cfc25"
        ],
        [
            "rewrite Znth_0_cons, IHl, map_map, map_length, upto_length.",
            "VernacExtend",
            "5545df5ec09323d189c4529e9a579b12a402a07d"
        ],
        [
            "f_equal; apply map_ext_in; intros.",
            "VernacExtend",
            "ea24ad029557ad488332a88f8642625afbf19cb2"
        ],
        [
            "rewrite Znth_pos_cons, <- IHl.",
            "VernacExtend",
            "5c1692fb6feb3146fbf503e4338c0c8bcc9c5fd2"
        ],
        [
            "unfold Z.succ; rewrite Z.add_simpl_r; auto.",
            "VernacExtend",
            "9484f6a21e5af92e30f1263a3a44806d5dd8bc71"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite In_upto in *; omega.",
            "VernacExtend",
            "f796101bc1d727768e5ae536c3fce288a4439b7a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments eq_dec _ _ _ _ : simpl never.",
            "VernacArguments",
            "f184ea6f130deef97b3a73d7287f2d449e970da0"
        ],
        [
            "Lemma upd_Znth_eq : forall {A} {EqDec : EqDec A} {d: Inhabitant A} (x : A) (l : list A) i, 0 <= i < Zlength l -> upd_Znth i l x = map (fun j => if eq_dec j i then x else Znth j l) (upto (length l)).",
            "VernacStartTheoremProof",
            "9ed1588442009a9ac700fd844189da4ef729883f"
        ],
        [
            "induction l; simpl; intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite Zlength_nil in *; omega.",
            "VernacExtend",
            "11e355bcc65e98c7aa282771754cdae5eb378b32"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (eq_dec 0 i).",
            "VernacExtend",
            "87256eea8ca2b219b9e1f9e66367f88a340940b7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; rewrite upd_Znth0, Zlength_cons, sublist_1_cons, sublist_same; auto; try omega.",
            "VernacExtend",
            "a6454017e1693286aef3761f914550fdd01644a4"
        ],
        [
            "rewrite list_Znth_eq with (l0 := l) at 1.",
            "VernacExtend",
            "4589a4a710a951891ea6c20b5ddf70f2b8c3043a"
        ],
        [
            "rewrite map_map.",
            "VernacExtend",
            "ae8e13105f5289f0c1e44cbfa83eff3c6f47acee"
        ],
        [
            "f_equal; apply map_ext_in; intros.",
            "VernacExtend",
            "ea24ad029557ad488332a88f8642625afbf19cb2"
        ],
        [
            "rewrite In_upto in *.",
            "VernacExtend",
            "49e8fea5c2ec57244ee4cbf331c87093203550ab"
        ],
        [
            "destruct (eq_dec (Z.succ a0) 0); [omega|].",
            "VernacExtend",
            "8fb320538e0834f91e31737ab0e50b6d7d77a42f"
        ],
        [
            "rewrite Znth_pos_cons; [|omega].",
            "VernacExtend",
            "11bb6045ea28938bc57d60390a84780c3581cf64"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Znth_0_cons, upd_Znth_cons; [|omega].",
            "VernacExtend",
            "d03ec677c4c42c37890f7212817e9659bf45750d"
        ],
        [
            "rewrite Zlength_cons in *.",
            "VernacExtend",
            "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
        ],
        [
            "rewrite IHl, map_map; [|omega].",
            "VernacExtend",
            "ba437c165331f73f79c2cf4ee602fbfea9a82a94"
        ],
        [
            "f_equal; apply map_ext_in; intros.",
            "VernacExtend",
            "ea24ad029557ad488332a88f8642625afbf19cb2"
        ],
        [
            "rewrite In_upto in *.",
            "VernacExtend",
            "49e8fea5c2ec57244ee4cbf331c87093203550ab"
        ],
        [
            "destruct (eq_dec a0 (i - 1)), (eq_dec (Z.succ a0) i); try omega; auto.",
            "VernacExtend",
            "8d738cc5f6f6b76cb1f46089a2f5357faa46eb25"
        ],
        [
            "rewrite Znth_pos_cons; [|omega].",
            "VernacExtend",
            "11bb6045ea28938bc57d60390a84780c3581cf64"
        ],
        [
            "f_equal; omega.",
            "VernacExtend",
            "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upd_Znth_diff' : forall {A}{d: Inhabitant A} i j l (u : A), 0 <= j < Zlength l -> i <> j -> Znth i (upd_Znth j l u) = Znth i l.",
            "VernacStartTheoremProof",
            "fde7e7d2c06b5cac18c21741a3bfd011b46b6fe5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zlt i 0).",
            "VernacExtend",
            "1d4e6d4d62fc8e4e151b9c8c7f9624235a238e27"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite !Znth_underflow; auto.",
            "VernacExtend",
            "f762d1e7351f500b9415b1027e54d354afa49225"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (zlt i (Zlength l)).",
            "VernacExtend",
            "ebe5236ea19d46635cf3f43cb7dddff4614ea547"
        ],
        [
            "apply upd_Znth_diff; auto; omega.",
            "VernacExtend",
            "4f073901009931f4a31d7d540f44322937576a46"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite !Znth_overflow; auto.",
            "VernacExtend",
            "26976e3d826bea830d7e8a99523acc7db37a49c9"
        ],
        [
            "rewrite upd_Znth_Zlength; auto.",
            "VernacExtend",
            "20b3d09d7e267b772183b321af9bf077b762b301"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_nth_error_eq : forall {A} (l1 l2 : list A) (Heq : forall j, nth_error l1 j = nth_error l2 j), l1 = l2.",
            "VernacStartTheoremProof",
            "14b78649c46fd3ee1924a5712ef0d3fd92e97d2e"
        ],
        [
            "induction l1; destruct l2; auto; intros; try (specialize (Heq O); simpl in Heq; discriminate).",
            "VernacExtend",
            "21bce81f1208e3a2f679cab5be6e957e7037cc4f"
        ],
        [
            "erewrite IHl1.",
            "VernacExtend",
            "3a3deefecf6bca38affecbc44e90d132b96fcd78"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "specialize (Heq O); inv Heq; eauto.",
            "VernacExtend",
            "83ab30e0ff7985f1b5ab1bf6d21c9c7f8c27cd32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro j; specialize (Heq (S j)); auto.",
            "VernacExtend",
            "bc147a4c29ee5f30eeaf0366b4773264ecab1146"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_Znth_eq' : forall {A} {d: Inhabitant A} (l1 l2 : list A) (Hlen : Zlength l1 = Zlength l2) (Heq : forall j, 0 <= j < Zlength l1 -> Znth j l1 = Znth j l2), l1 = l2.",
            "VernacStartTheoremProof",
            "3b6364dcd0eb80db778f9a13aa821cfa14eb7fdc"
        ],
        [
            "induction l1; destruct l2; intros; rewrite ?Zlength_cons in *; rewrite ?Zlength_nil in *; auto; try (rewrite Zlength_correct in *; omega).",
            "VernacExtend",
            "57a03a0487c9099bea78e33768b3f93d992a4992"
        ],
        [
            "exploit (Heq 0); [rewrite Zlength_correct; omega|].",
            "VernacExtend",
            "e01b58af967b08ebf4d38bacb6182f00f4df742c"
        ],
        [
            "rewrite !Znth_0_cons; intro; subst.",
            "VernacExtend",
            "229dc924a10b18b4e64cdcd2524f92acd9ab206d"
        ],
        [
            "f_equal; apply IHl1; [omega|].",
            "VernacExtend",
            "70c7d8f16635f71d31e477f2ed2bb3659a041f33"
        ],
        [
            "intros; specialize (Heq (j + 1)); rewrite !Znth_pos_cons in Heq; try omega.",
            "VernacExtend",
            "3a4034095df662006c1ee4f3e640c073e0701417"
        ],
        [
            "rewrite !Z.add_simpl_r in *; apply Heq; omega.",
            "VernacExtend",
            "f5c9a83f0d0a9068d4b97d0d64304d9a2665e071"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary upd_Znth_eq' : forall {A}{d: Inhabitant A} x (l1 l2 : list A) i (Hi : 0 <= i < Zlength l1) (Hlen : Zlength l1 = Zlength l2) (Heq : forall j, 0 <= j < Zlength l1 -> j <> i -> Znth j l1 = Znth j l2), upd_Znth i l1 x = upd_Znth i l2 x.",
            "VernacStartTheoremProof",
            "9b91723bccfedb7f1fdafd43342260c501b53b16"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Zlength (upd_Znth i l1 x) = Zlength (upd_Znth i l2 x)).",
            "VernacExtend",
            "14adaffbc2f20ea525f34678da71d7ccaf670973"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite !upd_Znth_Zlength; auto; omega.",
            "VernacExtend",
            "cb18e1f501d41747adc077ec47184cc5abb008a9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply list_Znth_eq'; auto.",
            "VernacExtend",
            "dbe962864d724780da76cd92152d08b6ec9d354e"
        ],
        [
            "intros ? Hj; destruct (eq_dec j i).",
            "VernacExtend",
            "09b656d8ebcf03101780fb6656fbd30bad30aa29"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; rewrite !upd_Znth_same; auto; omega.",
            "VernacExtend",
            "b49431fad37a993314c46140b2ebabd5d5b10eb1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !upd_Znth_diff'; rewrite upd_Znth_Zlength in Hj; auto; omega.",
            "VernacExtend",
            "303fbf657b96791b7109fa11169cddccc99f4a1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upd_Znth_twice : forall {A} i l (x y : A), 0 <= i < Zlength l -> upd_Znth i (upd_Znth i l x) y = upd_Znth i l y.",
            "VernacStartTheoremProof",
            "c1d230cd7a68cc19940d50835d15bec1511599bb"
        ],
        [
            "intros; unfold upd_Znth.",
            "VernacExtend",
            "774945f168bf5f0ce358f4c6297717a58e345ddd"
        ],
        [
            "rewrite !sublist_app; rewrite ?Zlength_app, ?Zlength_cons, ?Zlength_sublist; try omega.",
            "VernacExtend",
            "050d374eb7a967be7a6a4ebdba8433274b435e81"
        ],
        [
            "rewrite 2Z.min_l, 2Z.min_r, 2Z.max_r, 2Z.max_l; try omega.",
            "VernacExtend",
            "1b015dd4e785d4b97d72459c1d7165513d96c274"
        ],
        [
            "rewrite !sublist_nil, app_nil_r; simpl.",
            "VernacExtend",
            "96bf4db5c3c4522459f91ff5ba7589036e9bd58b"
        ],
        [
            "rewrite sublist_S_cons, !sublist_sublist; try omega.",
            "VernacExtend",
            "080e79b0a8227efa78730b8d74d7acbbaa81c91c"
        ],
        [
            "f_equal; f_equal; [|f_equal]; omega.",
            "VernacExtend",
            "18cae6b3c8820c6469669dd7fbfbdf2b88675031"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hd_Znth : forall {A}{d: Inhabitant A} (l : list A), hd default l = Znth 0 l.",
            "VernacStartTheoremProof",
            "2ee0e52fe477fd8dd100900e9ccbb77eea661c46"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_filter : forall {A} (f : A -> bool) l, NoDup l -> NoDup (filter f l).",
            "VernacStartTheoremProof",
            "2b9fc7b383c6c179c1a99f8dcab131b1dad6315b"
        ],
        [
            "induction l; simpl; intros; auto.",
            "VernacExtend",
            "8220944a1558558e20036605293047bd287cfc25"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "destruct (f a); auto.",
            "VernacExtend",
            "2cd489f57b47c929cf3dad2bf3030d45333517f3"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "rewrite filter_In; intros (? & ?); contradiction.",
            "VernacExtend",
            "e119a73a97ea0c91a8217d240ac23fee7b6f34fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_Zlength : forall {A} (l1 l2 : list A), Permutation.Permutation l1 l2 -> Zlength l1 = Zlength l2.",
            "VernacStartTheoremProof",
            "f1b8301a037e20708736351a05b6ab19c7f211d8"
        ],
        [
            "intros; apply Z2Nat.inj; try apply Zlength_nonneg.",
            "VernacExtend",
            "e9331ec565e559f3391915aed1612075b382d8bf"
        ],
        [
            "rewrite !ZtoNat_Zlength; apply Permutation.Permutation_length; auto.",
            "VernacExtend",
            "c9d4203c3613f87cb35ea0e121630464556d3280"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_filter : forall {A} (f : A -> bool) l1 l2, Permutation.Permutation l1 l2 -> Permutation.Permutation (filter f l1) (filter f l2).",
            "VernacStartTheoremProof",
            "822319c21b688d8421c18890c0fad3c60e2f5fa9"
        ],
        [
            "induction 1; simpl; auto.",
            "VernacExtend",
            "c744c0db2f17ed7745b4893bfd3017058a6e4828"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (f x); auto.",
            "VernacExtend",
            "b164fdfe47b9391d455e087160294c3f20cdecd8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (f x); auto.",
            "VernacExtend",
            "b164fdfe47b9391d455e087160294c3f20cdecd8"
        ],
        [
            "destruct (f y); auto.",
            "VernacExtend",
            "f7f58642338433df46e6541e6c7c44e1c497d7d1"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "etransitivity; eauto.",
            "VernacExtend",
            "9a7a03ac784b775f6203b3104ab84c89b908a8ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_add : forall {A} l1 l2 (x : A), NoDup (l1 ++ l2) -> ~In x (l1 ++ l2) -> NoDup (l1 ++ x :: l2).",
            "VernacStartTheoremProof",
            "86a0a44f57a7b41cbb2e96eafee0992e89461f20"
        ],
        [
            "induction l1; simpl; intros.",
            "VernacExtend",
            "a75edf2a12acf37be08446879dcf0f8cfc9e0e1d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H; constructor; auto.",
            "VernacExtend",
            "94c2a63227e9a0494888b6417590039e3b09dc19"
        ],
        [
            "rewrite in_app in *; simpl; intros [? | [? | ?]]; subst; tauto.",
            "VernacExtend",
            "ccb3eeafff679e2ec7042a2d3ac18810bf3240ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_in_count : forall {A} {A_eq : EqDec A} (l l' : list A), NoDup l' -> (length (filter (fun x => if in_dec eq_dec x l then true else false) l') <= length l)%nat.",
            "VernacStartTheoremProof",
            "aabf4dff9588b578dd12a142e18b17b62fe681ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply NoDup_incl_length; [apply NoDup_filter; auto|].",
            "VernacExtend",
            "e933393ac6fbcbe3e88a572793871b8734733d1d"
        ],
        [
            "intros ? Hin.",
            "VernacExtend",
            "45a0f16e56a18c7506642e9c81c2883cef1d82f0"
        ],
        [
            "rewrite filter_In in Hin; destruct Hin.",
            "VernacExtend",
            "ec939e4bc3891176d8ba02eace1fca4b7491fad5"
        ],
        [
            "destruct (in_dec eq_dec a l); [auto | discriminate].",
            "VernacExtend",
            "132638718b000e50f0ffe49db5286589bf389a19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_length : forall {A} (f : A -> bool) l, length l = (length (filter f l) + length (filter (fun x => negb (f x)) l))%nat.",
            "VernacStartTheoremProof",
            "d3057fe6214ddfd1ea5459eb112b85e598c22514"
        ],
        [
            "induction l; simpl; intros; auto.",
            "VernacExtend",
            "8220944a1558558e20036605293047bd287cfc25"
        ],
        [
            "rewrite IHl.",
            "VernacExtend",
            "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
        ],
        [
            "destruct (f a); simpl; omega.",
            "VernacExtend",
            "035b7157f55e6db2b85d47f7aa1c027d4973b2cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlength_filter : forall {A} f (l : list A), Zlength (filter f l) <= Zlength l.",
            "VernacStartTheoremProof",
            "3f2d1005620f6c25a61815b770b47d8fe89ff46f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "setoid_rewrite Zlength_correct at 2.",
            "VernacExtend",
            "ba4dbf198b4db7cba57c81586b9c46f9511e5a81"
        ],
        [
            "rewrite filter_length with (f0 := f).",
            "VernacExtend",
            "94450ed89893be8580f59d1063aec95004c4192a"
        ],
        [
            "rewrite Nat2Z.inj_add.",
            "VernacExtend",
            "f4283898b8ff4130b4a42d50e196c192acf71146"
        ],
        [
            "rewrite <- Zlength_correct; omega.",
            "VernacExtend",
            "2a44ff575501bf506c50b03ea115a0a3d22f38e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlength_concat : forall {A} (l : list (list A)), Zlength (concat l) = fold_right Z.add 0 (map (@Zlength A) l).",
            "VernacStartTheoremProof",
            "2d3cdfea50916cc4c0b349f439c6fb24e0f8debe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Zlength_correct, length_concat.",
            "VernacExtend",
            "37c9d2e9733f633d2339e968e743b10bf007b753"
        ],
        [
            "change 0 with (Z.of_nat O).",
            "VernacExtend",
            "2df72b6fda32553bbf98cf45ad75fbb17ace0c3d"
        ],
        [
            "forget O as n.",
            "VernacExtend",
            "00a0ae2bfe34a936f5c65a935e7f931228fd201d"
        ],
        [
            "revert n; induction l; auto; simpl; intros.",
            "VernacExtend",
            "da289bd275848f39ebd255f31ced53978e53551a"
        ],
        [
            "rewrite Nat2Z.inj_add, IHl, Zlength_correct; auto.",
            "VernacExtend",
            "754589649118810350622f7adabab8eac48412d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlength_concat_le : forall {A} (l : list (list A)) n, Forall (fun l => Zlength l <= n) l -> Zlength (concat l) <= n * Zlength l.",
            "VernacStartTheoremProof",
            "11565d0b42c98809bafb1326ed25714e162fb69c"
        ],
        [
            "intros; rewrite Zlength_concat.",
            "VernacExtend",
            "d409c08f207f94f989492611f0a259446dfb122f"
        ],
        [
            "rewrite <- (Z.add_0_l (n * Zlength l)).",
            "VernacExtend",
            "8de65980b6b5e7711d780e1cff05f37656ec888d"
        ],
        [
            "forget 0 as m; revert m.",
            "VernacExtend",
            "89c0b4216328e811cb1ceaa62346543ceb3df54b"
        ],
        [
            "induction H; simpl; intro.",
            "VernacExtend",
            "42dbf6152e18c7a0f13560a5a1eb00acbd5b6f12"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Zlength_nil; omega.",
            "VernacExtend",
            "98170f83cbde0983d8f1ea7d95c89780d6263ebc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Zlength_cons, Z.mul_succ_r.",
            "VernacExtend",
            "0dcf39d938f1ec758a18ba469af35b443d0d3d17"
        ],
        [
            "specialize (IHForall m); omega.",
            "VernacExtend",
            "29cbd6ce8852eda0db5d1b5a468c357a3a55a98d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_app : forall {A} (f : A -> bool) l1 l2, filter f (l1 ++ l2) = filter f l1 ++ filter f l2.",
            "VernacStartTheoremProof",
            "e133ef66bc637dbca855c03ce49a79e364eb477a"
        ],
        [
            "induction l1; auto; intros; simpl.",
            "VernacExtend",
            "c3bb42a4e9fd23932550e1dee1117eab11bcd441"
        ],
        [
            "rewrite IHl1.",
            "VernacExtend",
            "ff982e15bacd402f06c6809dc374790cc3fb6db2"
        ],
        [
            "destruct (f a); auto.",
            "VernacExtend",
            "2cd489f57b47c929cf3dad2bf3030d45333517f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_concat : forall {A} f (l : list (list A)), filter f (concat l) = concat (map (filter f) l).",
            "VernacStartTheoremProof",
            "15db8f5267e939ce7a5ecdb94927ec7feb7a9c51"
        ],
        [
            "induction l; auto; simpl.",
            "VernacExtend",
            "eed68d4d83fee76794ef25f3fe5547ed00ee3133"
        ],
        [
            "rewrite filter_app, IHl; auto.",
            "VernacExtend",
            "62b0ca124ce75063020b9e58807e4983e4ba9161"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_upto : forall n, NoDup (upto n).",
            "VernacStartTheoremProof",
            "e20c11e986ba7b2736a5c148fbdd0f3424df26e2"
        ],
        [
            "induction n; simpl; constructor.",
            "VernacExtend",
            "d216ab6af7f56c25bead3149b6da2b4957c6b024"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite in_map_iff.",
            "VernacExtend",
            "a55211f52b1485764a1a9aeded8063ea6d2e66ea"
        ],
        [
            "intros (? & ? & ?); rewrite In_upto in *; omega.",
            "VernacExtend",
            "daf05eafd8f9130104ff44b7fce53f57ea7bbb67"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply FinFun.Injective_map_NoDup; auto.",
            "VernacExtend",
            "e820c2ce3c7d9e44b9fb7203ab5f99ef540ae7bc"
        ],
        [
            "intros ???; omega.",
            "VernacExtend",
            "c868bcd3640daa114af76c620a3df6875b18e7b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_remove : forall {A} {A_eq : EqDec A} (x y : A) l, In x (remove A_eq y l) <-> In x l /\\ x <> y.",
            "VernacStartTheoremProof",
            "a493bb728f18dd5b900039a29f6324d044e4952b"
        ],
        [
            "induction l; simpl; intros; [tauto|].",
            "VernacExtend",
            "399b120711dd98654e538ecf817b0f430bfe2507"
        ],
        [
            "destruct (A_eq y a); simpl; rewrite IHl; repeat split; try tauto.",
            "VernacExtend",
            "885a71090de00cb4ef1d043e1c3cabd7b01e6d8b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H as [[|]]; auto; subst; contradiction.",
            "VernacExtend",
            "425e5a77b4f79ef484b072f76c5e8f6d64d65309"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H as [|[]]; subst; auto.",
            "VernacExtend",
            "5b200fa98633ce5ead61102589a23d14124cd5f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_NoDup : forall {A} {A_eq : EqDec A} (x : A) l, NoDup l -> NoDup (remove A_eq x l).",
            "VernacStartTheoremProof",
            "1730e8cb2479200131b257249b545e14287eab35"
        ],
        [
            "induction 1; simpl.",
            "VernacExtend",
            "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "intro X; apply In_remove in X; destruct X; contradiction.",
            "VernacExtend",
            "512a78e0f5b712fa06d4b2220c548a60722f103f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_out : forall {A} {A_eq : EqDec A} (x : A) l, ~In x l -> remove A_eq x l = l.",
            "VernacStartTheoremProof",
            "3ef2918ff1f57e6b7f7dc767f7ed09e0aaf60d05"
        ],
        [
            "induction l; auto; simpl; intros.",
            "VernacExtend",
            "279ca8eb5e74b40505c14e4c71486078bc450c1c"
        ],
        [
            "rewrite IHl by auto.",
            "VernacExtend",
            "2bab85b8670ec384ba7b1357be0cd4c9a53d7459"
        ],
        [
            "if_tac; auto; subst; tauto.",
            "VernacExtend",
            "833f1701b047df23c1c61fb20cbb5a6c236c9ca6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_from_NoDup : forall {A} {A_eq : EqDec A} (x : A) l1 l2, NoDup (l1 ++ x :: l2) -> remove A_eq x (l1 ++ x :: l2) = l1 ++ l2.",
            "VernacStartTheoremProof",
            "6063bf03cbc71666b4a4bcc3896608065b13bfc6"
        ],
        [
            "induction l1; simpl; intros.",
            "VernacExtend",
            "a75edf2a12acf37be08446879dcf0f8cfc9e0e1d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "if_tac; [|contradiction].",
            "VernacExtend",
            "44746bcd474a595cfe296304edc75f7218b2abfa"
        ],
        [
            "inv H; apply remove_out; auto.",
            "VernacExtend",
            "83aed69f410d7b1e7896b46cceb502b5ad6d0865"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H as [|?? Hx]; subst.",
            "VernacExtend",
            "05b74441dc329ff7ea8d96b8ebdfb811b927cb0e"
        ],
        [
            "rewrite IHl1 by auto.",
            "VernacExtend",
            "d02fa9d28acfc555d4417cadc42a1c800b4db324"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "subst; contradiction Hx; rewrite in_app; simpl; auto.",
            "VernacExtend",
            "8f2fc6459a48c08ad935da6ddb21616ebca88f90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incl_remove_add : forall {A} {A_eq : EqDec A} (x : A) l1 l2, incl l1 l2 -> incl l1 (x :: remove A_eq x l2).",
            "VernacStartTheoremProof",
            "de0d5bf73797fee512e0e929d4f069132421705c"
        ],
        [
            "intros; intros ? Hin; specialize (H _ Hin).",
            "VernacExtend",
            "ffb5737e53472b96ecf06ca58b0e89b531c2dfae"
        ],
        [
            "simpl; rewrite In_remove.",
            "VernacExtend",
            "1beff9d39d6f06546c2b0b146db7a3723e0d8207"
        ],
        [
            "destruct (eq_dec a x); auto.",
            "VernacExtend",
            "0eea5485b29f804284dfafef3ad91676afa8b9c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_pigeonhole : forall l n, Zlength l < n -> exists a, 0 <= a < n /\\ ~In a l.",
            "VernacStartTheoremProof",
            "3151b4eef7273c35b0713fe70f4975be69230295"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (filter_length (fun x => if in_dec eq_dec x l then true else false) (upto (Z.to_nat n))) as Hlen.",
            "VernacExtend",
            "37a77504924765ceae10d26b8167860302a64c66"
        ],
        [
            "rewrite upto_length in Hlen.",
            "VernacExtend",
            "0236e554f823b25a98dffb94f1685b4c6046e8d9"
        ],
        [
            "assert (length (filter (fun x => negb (if in_dec eq_dec x l then true else false)) (upto (Z.to_nat n))) > 0)%nat.",
            "VernacExtend",
            "af603b305397e5970945e5fe175264a750e9aded"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exploit (list_in_count l (upto (Z.to_nat n))).",
            "VernacExtend",
            "c8c499b7186e3796654747f3b1239d24aa7abc6b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply NoDup_upto.",
            "VernacExtend",
            "f7ac5dd9daddc9794f16f0d1c29f7cb28a9236f2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite Zlength_correct in H.",
            "VernacExtend",
            "24191ff0bf5bb198fd214a771d44264ff9d873e1"
        ],
        [
            "apply Z2Nat.inj_lt in H; try omega.",
            "VernacExtend",
            "3c079668b0643bfe2138171c8149a746e21c11ec"
        ],
        [
            "rewrite Nat2Z.id in H; omega.",
            "VernacExtend",
            "571595ee272cf1ce337c0710e85062c3ea8ca92a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (filter (fun x => negb (if in_dec eq_dec x l then true else false)) (upto (Z.to_nat n))) eqn: Hfilter; [simpl in *; omega|].",
            "VernacExtend",
            "770447a4b28ff5bca99fa4c6bccbfcd6c58e3dd3"
        ],
        [
            "assert (In z (filter (fun x => negb (if in_dec eq_dec x l then true else false)) (upto (Z.to_nat n)))) as Hin by (rewrite Hfilter; simpl; auto).",
            "VernacExtend",
            "d570850182046e778c9ae719c113580b3fab88c2"
        ],
        [
            "rewrite filter_In, In_upto, Z2Nat.id in Hin; [|rewrite Zlength_correct in *; omega].",
            "VernacExtend",
            "9a1c1b54e8e550dcdf272d67dc55f02fcb418570"
        ],
        [
            "destruct Hin; destruct (in_dec eq_dec z l); try discriminate; eauto.",
            "VernacExtend",
            "32d44ae9b453df7863feb8059acc79ae2a86cdd2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_sublist_upto : forall n x i j, In x (sublist i j (upto n)) -> 0 <= i -> i <= x < j /\\ x < Z.of_nat n.",
            "VernacStartTheoremProof",
            "e5a8264375e68f0eb0ea5499d62a373027aa11ff"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold sublist in H; rewrite skipn_nil, firstn_nil in H; contradiction.",
            "VernacExtend",
            "b2634249c43d16afc91de02b360f460b2d9748ba"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Nat2Z.inj_succ; simpl in *.",
            "VernacExtend",
            "32b310eaa8e759c832a289b34ecae159261fb04e"
        ],
        [
            "destruct (zlt 0 j).",
            "VernacExtend",
            "40a256f3397f440d13222396cd3ef3c43b425d72"
        ],
        [
            "destruct (eq_dec i 0).",
            "VernacExtend",
            "ed0407251a0d330a3d6d3f4b234de52e598904c6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst; rewrite sublist_0_cons in H; try omega; destruct H; [omega|].",
            "VernacExtend",
            "f65f02087cae84c0d4d7bfca00aa1d53ef15afff"
        ],
        [
            "rewrite sublist_map, in_map_iff in H; destruct H as (? & ? & H); subst.",
            "VernacExtend",
            "d9e76231fa57bacdb310b51b7fe1b34f542e928f"
        ],
        [
            "destruct (zlt 0 (j - 1)).",
            "VernacExtend",
            "328013e845007b1bad3abfef9456b12db26b4a86"
        ],
        [
            "exploit IHn; eauto; omega.",
            "VernacExtend",
            "196f36d3308619e66b7638da1e69beead9a1999d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite sublist_nil_gen in H; [contradiction | omega].",
            "VernacExtend",
            "e5ab163d329ff7324a85f02204ab1256e1217762"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite sublist_S_cons in H; [|omega].",
            "VernacExtend",
            "08795edf21a5147e3d37a9c53312f410ff1e1927"
        ],
        [
            "rewrite sublist_map, in_map_iff in H; destruct H as (? & ? & H); subst.",
            "VernacExtend",
            "d9e76231fa57bacdb310b51b7fe1b34f542e928f"
        ],
        [
            "destruct (zlt 0 (j - 1)).",
            "VernacExtend",
            "328013e845007b1bad3abfef9456b12db26b4a86"
        ],
        [
            "exploit IHn; eauto; omega.",
            "VernacExtend",
            "196f36d3308619e66b7638da1e69beead9a1999d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite sublist_nil_gen in H; [contradiction | omega].",
            "VernacExtend",
            "e5ab163d329ff7324a85f02204ab1256e1217762"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite sublist_nil_gen in H; [contradiction | omega].",
            "VernacExtend",
            "e5ab163d329ff7324a85f02204ab1256e1217762"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incl_cons_iff : forall {A} (a : A) b c, incl (a :: b) c <-> In a c /\\ incl b c.",
            "VernacStartTheoremProof",
            "0420118e359d434817ac01913eb0467e2ee77429"
        ],
        [
            "split; intro.",
            "VernacExtend",
            "966a6edea9c2088caf0e546be884ea531f6207b3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; [|eapply incl_cons_inv; eauto].",
            "VernacExtend",
            "9ba04b35207534b11310c115e3de27e6818b1f35"
        ],
        [
            "specialize (H a); apply H; simpl; auto.",
            "VernacExtend",
            "553781051bcff0b1bd06b0eb19bd4d1c402b0675"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H; intros ? [? | ?]; subst; auto.",
            "VernacExtend",
            "e715eaa829908e6f55a77292bae0ab6189c0fe93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_le_1 : forall i j, i < j <-> i + 1 <= j.",
            "VernacStartTheoremProof",
            "fafc6c5ecb1a3bb298459a34d4f7e3b7f9d56847"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma firstn_all : forall {A} n (l : list A), (length l <= n)%nat -> firstn n l = l.",
            "VernacStartTheoremProof",
            "3d3b52fd80c6916dcc5b4acc63380ddf50dc3ac1"
        ],
        [
            "induction n; destruct l; auto; simpl; intros; try omega.",
            "VernacExtend",
            "b99a990c6a0f59e23bbc6455803a4d8296228f17"
        ],
        [
            "rewrite IHn; auto; omega.",
            "VernacExtend",
            "b5b7a40a49236191286f8a285ca4ec721f217724"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_all : forall {A} i (l : list A), Zlength l <= i -> sublist 0 i l = l.",
            "VernacStartTheoremProof",
            "0f656c60a2d72d7494bb158f8ceca66bfa6a918d"
        ],
        [
            "intros; unfold sublist; simpl.",
            "VernacExtend",
            "4144edfcf7720ac73246a1635f7a38a85b86a68d"
        ],
        [
            "apply firstn_all.",
            "VernacExtend",
            "f80c434b0925cacab67591d49e41673bbae466b8"
        ],
        [
            "rewrite Zlength_correct in *; rep_omega.",
            "VernacExtend",
            "d318025ddb002eafc40bdda71cb82442e9841e17"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_prefix : forall {A} i j (l : list A), sublist 0 i (sublist 0 j l) = sublist 0 (Z.min i j) l.",
            "VernacStartTheoremProof",
            "37235880874da6077c2046762cc157ab8e843936"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Z_le_dec i 0).",
            "VernacExtend",
            "8c6d33a4a2b27757bffec9e473f31866ac77c0c1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite !sublist_nil_gen; auto.",
            "VernacExtend",
            "f537bd489793c9d80a9283a9e0fd8c3ca93f1d67"
        ],
        [
            "rewrite Z.min_le_iff; auto.",
            "VernacExtend",
            "d238503cbb22aa9dc39130258479e4355d5c93a7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (Z.min_spec i j) as [(? & ->) | (? & ->)].",
            "VernacExtend",
            "6ad39116f9a076548f25a9040ee25d7f04f12475"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite sublist_sublist, !Z.add_0_r by omega; auto.",
            "VernacExtend",
            "b141f263f6ad1e5a499d92e663e7da12922d134c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply sublist_all.",
            "VernacExtend",
            "b95d08728288a896389e136637e3ee03d74bc4b6"
        ],
        [
            "destruct (Z_le_dec j 0); [rewrite sublist_nil_gen; auto; rewrite Zlength_nil; omega|].",
            "VernacExtend",
            "9932848dec9d5c458eba8e91a3ef2a16d097c459"
        ],
        [
            "destruct (Z_le_dec j (Zlength l)).",
            "VernacExtend",
            "ea4b5608a643fbf562231c8a53f4d0a6519c3219"
        ],
        [
            "rewrite Zlength_sublist; try omega.",
            "VernacExtend",
            "b55ecb9f7e1c84f864c95a3dcc89491c7a57d1a1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "pose proof (sublist_max_length 0 j l); omega.",
            "VernacExtend",
            "20f2a3944fb0f7bbe1b266d8ee9dfc53937d198c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_suffix : forall {A} i j (l : list A), 0 <= i -> 0 <= j -> sublist i (Zlength l - j) (sublist j (Zlength l) l) = sublist (i + j) (Zlength l) l.",
            "VernacStartTheoremProof",
            "124ed49078b2a747ce27112d0e6349b851d24d1e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Z_le_dec (Zlength l - j) i).",
            "VernacExtend",
            "89c03eb642f469cd3a5e47d1fc363516cb959120"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite !sublist_nil_gen; auto; omega.",
            "VernacExtend",
            "e5dc0f21441490877d763f2cafc24163815c90c0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite sublist_sublist by omega.",
            "VernacExtend",
            "552c6305a1396636ff6dfbb941efff3217bc7e2d"
        ],
        [
            "rewrite Z.sub_simpl_r; auto.",
            "VernacExtend",
            "c14b9cbccd6889d8ea01db14c22a9c75268ff3a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_parts1 : forall {A} i j (l : list A), 0 <= i -> sublist i j l = sublist i j (sublist 0 j l).",
            "VernacStartTheoremProof",
            "ea9896c0ae22390439e4b6f5a76a93b17744ffd8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Z_le_dec j i).",
            "VernacExtend",
            "b5b95d48423ca56b16c903c072d28d68726b473c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite !sublist_nil_gen; auto.",
            "VernacExtend",
            "f537bd489793c9d80a9283a9e0fd8c3ca93f1d67"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite sublist_sublist by omega.",
            "VernacExtend",
            "552c6305a1396636ff6dfbb941efff3217bc7e2d"
        ],
        [
            "rewrite !Z.add_0_r; auto.",
            "VernacExtend",
            "6e4fd550fd77af2165af08f57911deebf4031ead"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_parts2 : forall {A} i j (l : list A), 0 <= i -> j <= Zlength l -> sublist i j l = sublist 0 (j - i) (sublist i (Zlength l) l).",
            "VernacStartTheoremProof",
            "cedb4da1d8da1c47b399a7d9be30be3ab956984e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Z_le_dec j i).",
            "VernacExtend",
            "b5b95d48423ca56b16c903c072d28d68726b473c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite !sublist_nil_gen; auto; omega.",
            "VernacExtend",
            "e5dc0f21441490877d763f2cafc24163815c90c0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite sublist_sublist; try omega.",
            "VernacExtend",
            "7e15ffac324aedddb639fae18a2c20415b05e1f3"
        ],
        [
            "rewrite Z.add_0_l, Z.sub_simpl_r; auto.",
            "VernacExtend",
            "7d5661eecce6036610981c120848e604da7ba94d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_Forall2 : forall {A} (P : A -> Prop) Q l1 l2 (HP : Forall P l1) (HQ : Forall2 Q l1 l2) (Htransfer : forall x y, P x -> Q x y -> P y), Forall P l2.",
            "VernacStartTheoremProof",
            "1cb115159accc2406660a0fd4f2bb75f3070e711"
        ],
        [
            "induction 2; auto; intros.",
            "VernacExtend",
            "762a1f6c97af7fe6d47d5199bd516a0bbd8266e9"
        ],
        [
            "inv HP.",
            "VernacExtend",
            "b61e9eaad2b57332631a0ce1009dab1fdaabc83e"
        ],
        [
            "constructor; eauto.",
            "VernacExtend",
            "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_suffix_max : forall {A} (P : A -> Prop) l1 l2 i j (Hi : 0 <= i <= Zlength l1) (Hj : 0 <= j <= Zlength l1) (Hl1 : Forall P (sublist j (Zlength l1) l1)) (Hl2 : sublist i (Zlength l1) l1 = sublist i (Zlength l2) l2), Forall P (sublist (Z.max i j) (Zlength l2) l2).",
            "VernacStartTheoremProof",
            "af1217b51486aa124c7f6a4a3092fb8d735f7721"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec i (Zlength l1)).",
            "VernacExtend",
            "61079bdbad4cf1589db3da5aa08469625478c869"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "subst; rewrite sublist_nil in Hl2.",
            "VernacExtend",
            "575510f3988095f63ef205082cf39d02ffb206b6"
        ],
        [
            "rewrite Z.max_l by omega.",
            "VernacExtend",
            "33008bfe4a3b1ffcaa54873a74678ce072eb8059"
        ],
        [
            "rewrite <- Hl2; auto.",
            "VernacExtend",
            "e3be24f88cf312cba62f235f9b991fd54de66c22"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Zlength l1 = Zlength l2) as Heq.",
            "VernacExtend",
            "f52315e95971a860cb93ac3a986514ee132ebf19"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Zlength (sublist i (Zlength l1) l1) = Zlength (sublist i (Zlength l2) l2)) as Heq by congruence.",
            "VernacExtend",
            "f5c6ed9526bbcdd360bc6b253f92f58c811a0107"
        ],
        [
            "destruct (Z_le_dec (Zlength l2) i).",
            "VernacExtend",
            "b8dcf55e8e8f47100568dc559d46a3e0f89f1e76"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite sublist_nil_gen with (l0 := l2), Zlength_nil in Heq; auto.",
            "VernacExtend",
            "b3308cb5717ba8df91e25f67a6a59f55b26f226e"
        ],
        [
            "rewrite !Zlength_sublist in Heq; omega.",
            "VernacExtend",
            "88ae98836a596fcc3dc3bc9e6efa5f558bb821d1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite !Zlength_sublist in Heq; omega.",
            "VernacExtend",
            "88ae98836a596fcc3dc3bc9e6efa5f558bb821d1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros; destruct (Z.max_spec i j) as [(? & ->) | (? & ->)].",
            "VernacExtend",
            "f8f888e4f708b1f77d7bc9aaf8450d2a42af1483"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "replace (sublist _ _ _) with (sublist (j - i) (Zlength l2 - i) (sublist i (Zlength l2) l2)).",
            "VernacExtend",
            "5ee9387a620f3a6e059f1110e03ac19446fb2f9a"
        ],
        [
            "rewrite <- Hl2, sublist_sublist, !Z.sub_simpl_r by omega.",
            "VernacExtend",
            "488e21bcc3eaee7fa774dab911b5ef133ef1f3e2"
        ],
        [
            "rewrite <- Heq; auto.",
            "VernacExtend",
            "74966dfb8fc3cc839b843661dc848bb5e697e143"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite sublist_sublist, !Z.sub_simpl_r by omega; auto.",
            "VernacExtend",
            "906eeb8f2893f88d1e2a8bd7e86b7ef9b7d0c24f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- Hl2.",
            "VernacExtend",
            "38bee75271aa59d6de5332b519e727bc7453344a"
        ],
        [
            "replace (sublist _ _ _) with (sublist (i - j) (Zlength l1 - j) (sublist j (Zlength l1) l1)).",
            "VernacExtend",
            "c6eb7ddcb89dfba8a474e85271586828d8a72033"
        ],
        [
            "apply Forall_sublist; auto.",
            "VernacExtend",
            "2d7b6cd6da690e1a2020b756a3ab70d0f84950b5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite sublist_sublist, !Z.sub_simpl_r; auto; omega.",
            "VernacExtend",
            "6fa4859398912c8755f5560de4e2ea7d6c43610d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint extend {A} (l : list A) ls := match l, ls with | x :: xs, y :: ys => (x :: y) :: extend xs ys | _, _ => ls end.",
            "VernacFixpoint",
            "bf163d4993dc4670e14318de31198a8cc3d7a7f6"
        ],
        [
            "Lemma Zlength_extend : forall {A} (l : list A) ls, Zlength (extend l ls) = Zlength ls.",
            "VernacStartTheoremProof",
            "db5f13e62ec06919d1bb47465fcb666dc726259c"
        ],
        [
            "induction l; destruct ls; auto; simpl.",
            "VernacExtend",
            "917c06b0aab145e0e599b1504d342962c148f346"
        ],
        [
            "rewrite !Zlength_cons, IHl; auto.",
            "VernacExtend",
            "815ef552bd04e50c783ca1b3f1c30d988f9bbbd9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_extend_in : forall {A}{d: Inhabitant A} (l : list A) ls i, 0 <= i < Zlength l -> Zlength l <= Zlength ls -> Znth i (extend l ls) = Znth i l :: Znth i ls.",
            "VernacStartTheoremProof",
            "48dd949a9f8664265096e42c430551a593c182bb"
        ],
        [
            "induction l; destruct ls; simpl; intros; try rewrite Zlength_nil in *; try omega.",
            "VernacExtend",
            "a337c3d241b6b9c25d7ca8989986030f19e44b61"
        ],
        [
            "rewrite !Zlength_cons in *.",
            "VernacExtend",
            "6fee36b4937891c3c10fb27886f1cd8a5e353dd8"
        ],
        [
            "destruct (eq_dec i 0); subst; auto.",
            "VernacExtend",
            "b66622fde515e6b6bfe077ecf6b4b801b2c672b1"
        ],
        [
            "rewrite !Znth_pos_cons; try omega.",
            "VernacExtend",
            "1d858eb7b1bb38a3318d58bddd4a343cffe6e44d"
        ],
        [
            "apply IHl; omega.",
            "VernacExtend",
            "78d3603f491f27957a421a68aedf114b0cadef65"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_extend_ge : forall {A}{d: Inhabitant A} (l : list A) ls i, Zlength l <= i -> Znth i (extend l ls) = Znth i ls.",
            "VernacStartTheoremProof",
            "32fd2ab8737738880a0ae7afbf575bcbd9d1d1ac"
        ],
        [
            "induction l; destruct ls; auto; simpl; intros.",
            "VernacExtend",
            "7e20262599d2c7223535e4f64c1c110f85fc637f"
        ],
        [
            "destruct (zlt i 0); [rewrite !Znth_underflow; auto|].",
            "VernacExtend",
            "0f22fff03bb46f007b50b276102a667f1d1f3550"
        ],
        [
            "rewrite Zlength_cons in *.",
            "VernacExtend",
            "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
        ],
        [
            "destruct (eq_dec i 0); [rewrite Zlength_correct in *; omega|].",
            "VernacExtend",
            "4d06746d844bc487d9c867e101a4caea4993629d"
        ],
        [
            "rewrite !Znth_pos_cons; try omega.",
            "VernacExtend",
            "1d858eb7b1bb38a3318d58bddd4a343cffe6e44d"
        ],
        [
            "apply IHl; omega.",
            "VernacExtend",
            "78d3603f491f27957a421a68aedf114b0cadef65"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint extendr {A} (l : list A) ls := match l, ls with | x :: xs, y :: ys => (y ++ [x]) :: extendr xs ys | _, _ => ls end.",
            "VernacFixpoint",
            "067153a2a4d920fb617b83520a6d776a2cd0ed0d"
        ],
        [
            "Lemma Zlength_extendr : forall {A} (l : list A) ls, Zlength (extendr l ls) = Zlength ls.",
            "VernacStartTheoremProof",
            "97831a0f660fa2531ab54f338c3ac34e7c8f0d88"
        ],
        [
            "induction l; destruct ls; auto; simpl.",
            "VernacExtend",
            "917c06b0aab145e0e599b1504d342962c148f346"
        ],
        [
            "rewrite !Zlength_cons, IHl; auto.",
            "VernacExtend",
            "815ef552bd04e50c783ca1b3f1c30d988f9bbbd9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_extendr_in : forall {A}{d: Inhabitant A} (l : list A) ls i, 0 <= i < Zlength l -> Zlength l <= Zlength ls -> Znth i (extendr l ls) = Znth i ls ++ [Znth i l].",
            "VernacStartTheoremProof",
            "34a5c5462ee151e1d7db71084fd797055d4cb314"
        ],
        [
            "induction l; destruct ls; simpl; intros; try rewrite Zlength_nil in *; try omega.",
            "VernacExtend",
            "a337c3d241b6b9c25d7ca8989986030f19e44b61"
        ],
        [
            "rewrite !Zlength_cons in *.",
            "VernacExtend",
            "6fee36b4937891c3c10fb27886f1cd8a5e353dd8"
        ],
        [
            "destruct (eq_dec i 0); subst; auto.",
            "VernacExtend",
            "b66622fde515e6b6bfe077ecf6b4b801b2c672b1"
        ],
        [
            "rewrite !Znth_pos_cons; try omega.",
            "VernacExtend",
            "1d858eb7b1bb38a3318d58bddd4a343cffe6e44d"
        ],
        [
            "apply IHl; omega.",
            "VernacExtend",
            "78d3603f491f27957a421a68aedf114b0cadef65"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Znth_extendr_ge : forall {A}{d: Inhabitant A} (l : list A) ls i, Zlength l <= i -> Znth i (extendr l ls) = Znth i ls.",
            "VernacStartTheoremProof",
            "86dcfdc513bbe89452eb3d6924b59ea838fb8855"
        ],
        [
            "induction l; destruct ls; auto; simpl; intros.",
            "VernacExtend",
            "7e20262599d2c7223535e4f64c1c110f85fc637f"
        ],
        [
            "destruct (zlt i 0); [rewrite !Znth_underflow; auto|].",
            "VernacExtend",
            "0f22fff03bb46f007b50b276102a667f1d1f3550"
        ],
        [
            "rewrite Zlength_cons in *.",
            "VernacExtend",
            "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
        ],
        [
            "destruct (eq_dec i 0); [rewrite Zlength_correct in *; omega|].",
            "VernacExtend",
            "4d06746d844bc487d9c867e101a4caea4993629d"
        ],
        [
            "rewrite !Znth_pos_cons; try omega.",
            "VernacExtend",
            "1d858eb7b1bb38a3318d58bddd4a343cffe6e44d"
        ],
        [
            "apply IHl; omega.",
            "VernacExtend",
            "78d3603f491f27957a421a68aedf114b0cadef65"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_join_eq : forall (b : list share) a c c' (Hc : sepalg_list.list_join a b c) (Hc' : sepalg_list.list_join a b c'), c = c'.",
            "VernacStartTheoremProof",
            "28881a12e1939b83936ae3e360e01d38e5994e7e"
        ],
        [
            "induction b; intros; inv Hc; inv Hc'; auto.",
            "VernacExtend",
            "82f0e0ad76539737ea4da3dadcc30451663f9917"
        ],
        [
            "assert (w0 = w1) by (eapply sepalg.join_eq; eauto).",
            "VernacExtend",
            "c0f090c381e4958d6f9e9708c2a002316044e57c"
        ],
        [
            "subst; eapply IHb; eauto.",
            "VernacExtend",
            "225c2ce3088407f562b5e2612463a6852fb1ea0b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma readable_share_list_join : forall sh shs sh', sepalg_list.list_join sh shs sh' -> readable_share sh \\/ Exists readable_share shs -> readable_share sh'.",
            "VernacStartTheoremProof",
            "340af5f6d2bcd7c793bd6177388c4251a286ae9c"
        ],
        [
            "induction 1; intros [? | Hexists]; try inv Hexists; auto.",
            "VernacExtend",
            "196e761ed21b9ffca6d0a319273f0c07d7d280b8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHfold_rel; left; eapply readable_share_join; eauto.",
            "VernacExtend",
            "1aaea80f3ee0e7ee5d29d2e28406c2867a39a441"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHfold_rel; left; eapply readable_share_join; eauto.",
            "VernacExtend",
            "1aaea80f3ee0e7ee5d29d2e28406c2867a39a441"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_0_cons' : forall {A} i j (x : A) l, i <= 0 -> j > i -> sublist i j (x :: l) = x :: sublist i (j - 1) l.",
            "VernacStartTheoremProof",
            "3815d19b7eab09e683d9ae06a9f4e47a53d54309"
        ],
        [
            "intros; unfold sublist.",
            "VernacExtend",
            "09ec98bb9a22664aa583101a1d4faac006f3a7d0"
        ],
        [
            "replace (Z.to_nat i) with O; simpl.",
            "VernacExtend",
            "6d63517c4823751484f2283d8a6d7495c1fb7b6e"
        ],
        [
            "assert (0 < j - i) as Hgt by omega.",
            "VernacExtend",
            "a205628e2c83576fd403ee76c941fd76fa04cdf0"
        ],
        [
            "rewrite Z2Nat.inj_lt in Hgt; try omega.",
            "VernacExtend",
            "bfa3553273e01c4ecef51279a698679e6c40e06d"
        ],
        [
            "destruct (Z.to_nat (j - i)) eqn: Hj; [omega|].",
            "VernacExtend",
            "93841cac0cafec738c2b924ad7daecd552b97093"
        ],
        [
            "simpl; f_equal; f_equal.",
            "VernacExtend",
            "99a2e47926a201d502a54b5d3db4dd4c08757f70"
        ],
        [
            "replace (j - 1 - i) with (j - i - 1) by omega.",
            "VernacExtend",
            "9449f52859e6213bc73abbc78c44155272f0ab2d"
        ],
        [
            "rewrite Z2Nat.inj_sub; simpl; omega.",
            "VernacExtend",
            "df6ca424d5765ce5e146c599f942d8ab001f0e68"
        ],
        [
            "destruct (eq_dec i 0); subst; auto.",
            "VernacExtend",
            "b66622fde515e6b6bfe077ecf6b4b801b2c672b1"
        ],
        [
            "rewrite Z2Nat_neg; auto; omega.",
            "VernacExtend",
            "17f964eafbb2ee53fc3b4bb0d5cc0ffeb2f7ea33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_combine : forall {A B} (l1 : list A) (l2 : list B) i j, sublist i j (combine l1 l2) = combine (sublist i j l1) (sublist i j l2).",
            "VernacStartTheoremProof",
            "31d4d6c779af628998a8852c8ced513c3e1c4b21"
        ],
        [
            "induction l1; simpl; intros.",
            "VernacExtend",
            "a75edf2a12acf37be08446879dcf0f8cfc9e0e1d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold sublist; rewrite !skipn_nil, !firstn_nil; auto.",
            "VernacExtend",
            "1520ea0132b8857cf94df6c661f2666406148b26"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct l2.",
            "VernacExtend",
            "0d8334f1e323ab8f2f037af4de7aa29b31aa5fb2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold sublist at 1 3; rewrite !skipn_nil, !firstn_nil.",
            "VernacExtend",
            "ee40d23c186a0ca9662f55a56b879a9defbaea6d"
        ],
        [
            "destruct (sublist i j (a :: l1)); auto.",
            "VernacExtend",
            "6ad201597bfd36d1a0d55ae289a35ed2a365b8c4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (Z_le_dec j i); [rewrite !sublist_nil_gen; auto|].",
            "VernacExtend",
            "383724d81061e5a36aadc8c78def21f4d61f4b4c"
        ],
        [
            "destruct (Z_le_dec i 0).",
            "VernacExtend",
            "8c6d33a4a2b27757bffec9e473f31866ac77c0c1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst; rewrite !sublist_0_cons'; try omega.",
            "VernacExtend",
            "cc6856ced68bf6556686fbad2a69d68eeea9abe8"
        ],
        [
            "simpl; rewrite IHl1; auto.",
            "VernacExtend",
            "3250fdd6ed04ce55b0917d219e17a35e2ffc67fb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite !sublist_S_cons; try omega.",
            "VernacExtend",
            "515d852e84db54fdabc92fa29ee82e59331c6ec9"
        ],
        [
            "apply IHl1; omega.",
            "VernacExtend",
            "a051c3d42ac41a25380660c7f778e385e68510cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extend_nil : forall {A} (l : list A), extend l [] = [].",
            "VernacStartTheoremProof",
            "382816c9a86bcc3144e10bcdf1f4dd3457f27166"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extend_cons : forall {A} (l : list A) l1 ls, extend l (l1 :: ls) = match l with [] => l1 :: ls | a :: l' => (a :: l1) :: extend l' ls end.",
            "VernacStartTheoremProof",
            "36878350180256ae0580776b8ae3f5355162e893"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_extend : forall {A} (l : list A) ls i j, sublist i j (extend l ls) = extend (sublist i j l) (sublist i j ls).",
            "VernacStartTheoremProof",
            "f7dd86e78b08054b72e58d4e4e44ccf156d002ce"
        ],
        [
            "induction l; simpl; intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold sublist; rewrite skipn_nil, firstn_nil; auto.",
            "VernacExtend",
            "dd650618e29e4878f26152447a501022d2635156"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct ls.",
            "VernacExtend",
            "4acd3e1f2c45e2d50b3a43010af8b1bb5fce525e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold sublist; rewrite skipn_nil, firstn_nil, extend_nil; auto.",
            "VernacExtend",
            "b6d97b408dcd8afe8a30824acbc9e56ffdba6e00"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (Z_le_dec j i); [rewrite !sublist_nil_gen; auto|].",
            "VernacExtend",
            "383724d81061e5a36aadc8c78def21f4d61f4b4c"
        ],
        [
            "destruct (Z_le_dec i 0).",
            "VernacExtend",
            "8c6d33a4a2b27757bffec9e473f31866ac77c0c1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst; rewrite !sublist_0_cons'; try omega.",
            "VernacExtend",
            "cc6856ced68bf6556686fbad2a69d68eeea9abe8"
        ],
        [
            "rewrite IHl; auto.",
            "VernacExtend",
            "393525b1bdb1a369fcb5ee1df369f0a6bb2ffdb4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite !sublist_S_cons; auto; omega.",
            "VernacExtend",
            "51a62a4bce59cf1fd933a519e9dad7b293b4190f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extendr_nil : forall {A} (l : list A), extendr l [] = [].",
            "VernacStartTheoremProof",
            "d07527a8dd4f4eb5eca7b0ebd735049409ac7a8e"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extendr_cons : forall {A} (l : list A) l1 ls, extendr l (l1 :: ls) = match l with [] => l1 :: ls | a :: l' => (l1 ++ [a]) :: extendr l' ls end.",
            "VernacStartTheoremProof",
            "d7ddebbaac4001a83f90a0a642542f11aa8dcc15"
        ],
        [
            "destruct l; auto.",
            "VernacExtend",
            "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_extendr : forall {A} (l : list A) ls i j, sublist i j (extendr l ls) = extendr (sublist i j l) (sublist i j ls).",
            "VernacStartTheoremProof",
            "2986d57a10a9e89e96f3a004d033d21fb2b8efab"
        ],
        [
            "induction l; simpl; intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold sublist; rewrite skipn_nil, firstn_nil; auto.",
            "VernacExtend",
            "dd650618e29e4878f26152447a501022d2635156"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct ls.",
            "VernacExtend",
            "4acd3e1f2c45e2d50b3a43010af8b1bb5fce525e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold sublist; rewrite skipn_nil, firstn_nil, extendr_nil; auto.",
            "VernacExtend",
            "51c94678fb5b80c8decc0d56010a28b2fa40f4ee"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (Z_le_dec j i); [rewrite !sublist_nil_gen; auto|].",
            "VernacExtend",
            "383724d81061e5a36aadc8c78def21f4d61f4b4c"
        ],
        [
            "destruct (Z_le_dec i 0).",
            "VernacExtend",
            "8c6d33a4a2b27757bffec9e473f31866ac77c0c1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst; rewrite !sublist_0_cons'; try omega.",
            "VernacExtend",
            "cc6856ced68bf6556686fbad2a69d68eeea9abe8"
        ],
        [
            "rewrite IHl; auto.",
            "VernacExtend",
            "393525b1bdb1a369fcb5ee1df369f0a6bb2ffdb4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite !sublist_S_cons; auto; omega.",
            "VernacExtend",
            "51a62a4bce59cf1fd933a519e9dad7b293b4190f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sublist_over : forall {A} (l : list A) i j, Zlength l <= i -> sublist i j l = [].",
            "VernacStartTheoremProof",
            "0cfda23eca643c9d4d7f81c923abecf5dd0b3689"
        ],
        [
            "intros; unfold sublist.",
            "VernacExtend",
            "09ec98bb9a22664aa583101a1d4faac006f3a7d0"
        ],
        [
            "rewrite skipn_short, firstn_nil; auto.",
            "VernacExtend",
            "cd72831fb8a08185bddede3be769f7992c9b3582"
        ],
        [
            "rewrite Zlength_correct in *; rep_omega.",
            "VernacExtend",
            "d318025ddb002eafc40bdda71cb82442e9841e17"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma make_tycontext_s_distinct : forall a l (Ha : In a l) (Hdistinct : NoDup (map fst l)), (make_tycontext_s l) ! (fst a) = Some (snd a).",
            "VernacStartTheoremProof",
            "d73a56ee7a1c32bd0966bd8bc660d314fa0e5bf1"
        ],
        [
            "intros a l.",
            "VernacExtend",
            "c6e1e3cc6e0e03269c9c78383c22e173bc25ab2e"
        ],
        [
            "unfold make_tycontext_s.",
            "VernacExtend",
            "61b57e0c5bc29349a03eedaad8ab6b1795b13a44"
        ],
        [
            "change (@ptree_set) with (@PTree.set).",
            "VernacExtend",
            "b6f41e1268837082cbb70425e2ae547cb0a272d5"
        ],
        [
            "induction l; simpl; intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "inv Hdistinct.",
            "VernacExtend",
            "5eadea3d90c3290f243e335e79032e214ad4f4fd"
        ],
        [
            "destruct a0.",
            "VernacExtend",
            "a0487b579f70f8f2c661f4b75c8b4e6474630618"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct Ha.",
            "VernacExtend",
            "b9d209998016b53acbed24a2ce5e398de114be70"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PTree.gss.",
            "VernacExtend",
            "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite PTree.gso.",
            "VernacExtend",
            "6aa89209a57c294bcf8a2206f8ecdff703d6861a"
        ],
        [
            "apply IHl; auto.",
            "VernacExtend",
            "e138dde1a62d902d35fbbfcb71bf2b52acaced18"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "apply H1; apply in_map.",
            "VernacExtend",
            "596d4720031026447c2df99b96801ba2f20f8f3f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_distinct : forall {A B} (f : A -> B) a l t (Ha : In a l) (Hdistinct : NoDup (map fst l)), (fold_right (fun v : ident * A => PTree.set (fst v) (f (snd v))) t l) ! (fst a) = Some (f (snd a)).",
            "VernacStartTheoremProof",
            "bd72ec08ec4a58c6c9a4a43aecf469e178cab412"
        ],
        [
            "induction l; simpl; intros; [contradiction|].",
            "VernacExtend",
            "0b721e99bd03e5e042567578631bad9645f387a2"
        ],
        [
            "inv Hdistinct.",
            "VernacExtend",
            "5eadea3d90c3290f243e335e79032e214ad4f4fd"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq (fst a) (fst a0)) eqn: Heq; setoid_rewrite Heq.",
            "VernacExtend",
            "5350b4e00454244c948e5c659cb59cbcb90338ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Ha; [subst; auto|].",
            "VernacExtend",
            "31f10b0ff23fd5659390b399e3b07b88b25b66ea"
        ],
        [
            "contradiction H1; rewrite in_map_iff; eauto.",
            "VernacExtend",
            "697261d9f00f5febf2f9678aee8b9f4f6f7b2733"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHl; auto.",
            "VernacExtend",
            "e138dde1a62d902d35fbbfcb71bf2b52acaced18"
        ],
        [
            "destruct Ha; auto; subst.",
            "VernacExtend",
            "cc7a15a64a61a70e5509a808ab38d3e14be8d47a"
        ],
        [
            "contradiction n; auto.",
            "VernacExtend",
            "1a770b2052c016c79de046b85faff2507205b8bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_out : forall {A B} (f : A -> B) a l t (Ha : ~In a (map fst l)), (fold_right (fun v : ident * A => PTree.set (fst v) (f (snd v))) t l) ! a = t ! a.",
            "VernacStartTheoremProof",
            "b064657fb880e4f3b237e22f47c92116b67b29d2"
        ],
        [
            "induction l; simpl; intros; auto.",
            "VernacExtend",
            "8220944a1558558e20036605293047bd287cfc25"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq a (fst a0)) eqn: Heq; setoid_rewrite Heq.",
            "VernacExtend",
            "a6afcd45ea2fb5618bb16dc02abddb27621c2b9b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "contradiction Ha; auto.",
            "VernacExtend",
            "06c9a42a58ef96517aa521f2721b302c5fbca89f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHl.",
            "VernacExtend",
            "af412c6009bba78f939aa53ab07dcd1baaf5888b"
        ],
        [
            "intro; contradiction Ha; auto.",
            "VernacExtend",
            "3fa949945984a3b04c20ca81766a3e9de2df185b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma data_at__eq : forall {cs : compspecs} sh t p, data_at_ sh t p = data_at sh t (default_val t) p.",
            "VernacStartTheoremProof",
            "5faf0e11a59150cea91c577d33c86110b9023e98"
        ],
        [
            "intros; unfold data_at_, data_at, field_at_; auto.",
            "VernacExtend",
            "623762e2c3cfb551629dcdfef9148d15c1d1d749"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma func_tycontext_sub : forall f V G A V2 G2 (HV : incl V V2) (HG : incl G G2) (Hdistinct : NoDup (map fst V2 ++ map fst G2)), tycontext_sub (func_tycontext f V G A) (func_tycontext f V2 G2 A).",
            "VernacStartTheoremProof",
            "b83bf936ef422ed9b680cda95f38b5e49e417bf7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold func_tycontext, make_tycontext, tycontext_sub; simpl.",
            "VernacExtend",
            "2ce2903aa91e308d17a53b75bdc0f730bfd7fa99"
        ],
        [
            "apply NoDup_app in Hdistinct; destruct Hdistinct as (? & ? & Hdistinct); auto.",
            "VernacExtend",
            "01af982a7facc193160fc594bf00dc2e0cdb3e09"
        ],
        [
            "repeat split; auto; intro.",
            "VernacExtend",
            "08e0f27d181c8f3f48d94f8b66c88955a5107ea0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (PTree.get _ _); auto.",
            "VernacExtend",
            "bdf995d0cfa6364fb05fbc66b057a2383e58caf1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold make_tycontext_g.",
            "VernacExtend",
            "c511998b535921312eb34fec461f910ec58239b2"
        ],
        [
            "revert dependent G2; revert dependent V2; revert V; induction G; simpl.",
            "VernacExtend",
            "5ca24b4cd8a5b705d0a7251319b93ba81254c57a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "induction V; simpl; intros.",
            "VernacExtend",
            "2d5d441d2a764a26b8f2d19017a33605524424a2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite PTree.gempty; simpl; auto.",
            "VernacExtend",
            "2c4592f141d35fa00d6ee002f0edc55be70d3d80"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite incl_cons_iff in HV; destruct HV.",
            "VernacExtend",
            "05efdaf0ee882fdd5ea6b888f885571350c30a64"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq id (fst a)); eauto; subst; simpl.",
            "VernacExtend",
            "2f2df172eeef509a27e08c78396fa646896eef0b"
        ],
        [
            "rewrite lookup_out.",
            "VernacExtend",
            "be686c25eca64262125080d7a1451163f0d1e371"
        ],
        [
            "apply lookup_distinct with (f0:=@id type); auto.",
            "VernacExtend",
            "9aabcc5a0c4511b1863230080dc7c87217b040a5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Hdistinct.",
            "VernacExtend",
            "ff830101e7db89690996570f6c4b509925f5713c"
        ],
        [
            "rewrite in_map_iff; eexists; split; eauto.",
            "VernacExtend",
            "51290fa9102242b9c6d7b098e40c67d697ac6baf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite incl_cons_iff in HG; destruct HG.",
            "VernacExtend",
            "c62429b67395f7385bcf03b603c1d1b0348af23e"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "destruct (peq id (fst a)); eauto; subst; simpl.",
            "VernacExtend",
            "2f2df172eeef509a27e08c78396fa646896eef0b"
        ],
        [
            "apply lookup_distinct; auto.",
            "VernacExtend",
            "731798457425def8e8201f66ae9dcadfc17b1692"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold make_tycontext_s.",
            "VernacExtend",
            "61b57e0c5bc29349a03eedaad8ab6b1795b13a44"
        ],
        [
            "revert dependent G2; induction G; simpl; intros.",
            "VernacExtend",
            "d209caf6cbb7539d8b2dd3b17c8882cff2e5f307"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PTree.gempty; simpl; auto.",
            "VernacExtend",
            "2c4592f141d35fa00d6ee002f0edc55be70d3d80"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct a; simpl.",
            "VernacExtend",
            "f5ca625e5e379c6dfd31b7a41c31e2ffeb9af906"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "change @ptree_set with @PTree.set in * at 1.",
            "VernacExtend",
            "10fa6cae9fc0c6313bbdce59a48cb4cf626e5501"
        ],
        [
            "rewrite incl_cons_iff in HG; destruct HG.",
            "VernacExtend",
            "c62429b67395f7385bcf03b603c1d1b0348af23e"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "change (@PTree.set) with @ptree_set in IHG.",
            "VernacExtend",
            "e9edb275d0c7bf3845c22b7cfd6298ab6bb64cd7"
        ],
        [
            "fold make_tycontext_s in *.",
            "VernacExtend",
            "945acd0ded7a0664a35bda2b495f390ad611cee4"
        ],
        [
            "destruct (peq id i); eauto; subst; simpl.",
            "VernacExtend",
            "ba16a7293008dccc22960f1286f59bcd53454b74"
        ],
        [
            "apply make_tycontext_s_distinct with (a:=(i,f0)); auto.",
            "VernacExtend",
            "90347dde03ea08b6d66a1e1809801d46f305b395"
        ],
        [
            "destruct ((make_tycontext_s G) ! id); auto.",
            "VernacExtend",
            "64a157b79cbbe969f26a048bd551d7ccf2871364"
        ],
        [
            "apply IHG; auto.",
            "VernacExtend",
            "c9a121f73afa99c140b966bd2a26313e64ad017d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Annotation_sub_refl.",
            "VernacExtend",
            "28d0172e888bc14418a561683f00d89374565e06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_body_mono : forall V G {cs : compspecs} f s V2 G2 (HV : incl V V2) (HG : incl G G2) (Hdistinct : NoDup (map fst V2 ++ map fst G2)), semax_body V G f s -> semax_body V2 G2 f s.",
            "VernacStartTheoremProof",
            "a993d63464ce327ce05d73ad9ace0f97370909d9"
        ],
        [
            "unfold semax_body; intros.",
            "VernacExtend",
            "230fd56786c6b062d62b5b359f568a70d5500970"
        ],
        [
            "destruct s, f0.",
            "VernacExtend",
            "901c89c27c80a0da556ca2661103bb4adede6d33"
        ],
        [
            "intros; eapply semax_extensionality_Delta, H.",
            "VernacExtend",
            "27d7d08ae9ce3979b037801089918d9f58a52199"
        ],
        [
            "apply func_tycontext_sub; auto.",
            "VernacExtend",
            "6f14f49a7a1e84d6a9e4737ec9328afb32e75f97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_exclusive_conflict : forall P, predicates_hered.derives ((weak_exclusive_mpred P && emp) * P * P) FF.",
            "VernacStartTheoremProof",
            "ccaefa29fbe46f836401eec9924d140f8246fe41"
        ],
        [
            "intros ?? (r1 & r2 & ? & (? & ? & Hj & [Hexclusive Hemp] & ?) & ?).",
            "VernacExtend",
            "a653ef5e3c6edc2f3aa4d9576e1b878fa1c1ae5b"
        ],
        [
            "destruct (age_sepalg.join_level _ _ _ H), (age_sepalg.join_level _ _ _ Hj).",
            "VernacExtend",
            "2b8cc2c811a67b02791e6183785b63466b46b747"
        ],
        [
            "apply Hemp in Hj; subst.",
            "VernacExtend",
            "684ca179bc80f06d820ef555c523a8b266762eed"
        ],
        [
            "simpl in Hexclusive.",
            "VernacExtend",
            "922182592680d2f43aa4997d8b65a806809d1400"
        ],
        [
            "match goal with H : exclusive_mpred ?P |- _ => change (predicates_hered.derives (P * P) FF) in H end.",
            "VernacExtend",
            "8fe5cca793c346d46ac341bd21b7273f4ff61d7a"
        ],
        [
            "apply Hexclusive.",
            "VernacExtend",
            "bd4eee3cd7a4fea587408a48193a53212bb107e9"
        ],
        [
            "do 3 eexists; eauto; repeat split; auto; omega.",
            "VernacExtend",
            "fb8bb668fbd1f600d9c7d251cff1c8465c1d4d62"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exclusive_sepcon1 : forall (P Q : mpred) (HP : exclusive_mpred P), exclusive_mpred (P * Q).",
            "VernacStartTheoremProof",
            "6179ac0e611fe573684197de22527b5f76e9b895"
        ],
        [
            "unfold exclusive_mpred; intros.",
            "VernacExtend",
            "6428fd5c3f9bdeb9dff8c696fe60c0f4190a63e4"
        ],
        [
            "eapply derives_trans, sepcon_FF_derives' with (P := Q * Q), HP; cancel.",
            "VernacExtend",
            "2cb68cbc6452a35d72d75d75c2cf56ea5a22df8b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exclusive_sepcon2 : forall (P Q : mpred) (HP : exclusive_mpred Q), exclusive_mpred (P * Q).",
            "VernacStartTheoremProof",
            "7b86d1d3e14262d2d6e866c489795f03a5f79479"
        ],
        [
            "intros; rewrite sepcon_comm; apply exclusive_sepcon1; auto.",
            "VernacExtend",
            "efc83300fb75e84b73d60c944b5802e88120936d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exclusive_andp1 : forall P Q (HP : exclusive_mpred P), exclusive_mpred (P && Q).",
            "VernacStartTheoremProof",
            "85a7e2331d2245d12a1bff18f19a74dccbddc8c3"
        ],
        [
            "unfold exclusive_mpred; intros.",
            "VernacExtend",
            "6428fd5c3f9bdeb9dff8c696fe60c0f4190a63e4"
        ],
        [
            "eapply derives_trans, HP.",
            "VernacExtend",
            "6db9dae1d0826a8dac3c5d035dc986f569738594"
        ],
        [
            "apply sepcon_derives; apply andp_left1; auto.",
            "VernacExtend",
            "451c12134798251718e36e31d5d78fe343fed745"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exclusive_andp2 : forall P Q (HQ : exclusive_mpred Q), exclusive_mpred (P && Q).",
            "VernacStartTheoremProof",
            "3aad3e223ee5919794b6c52e4422fee5e104f808"
        ],
        [
            "intros; rewrite andp_comm; apply exclusive_andp1; auto.",
            "VernacExtend",
            "9322627c006627f8486b54a29a7c3257e661993b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lock_inv_exclusive : forall v sh R, exclusive_mpred (lock_inv sh v R).",
            "VernacStartTheoremProof",
            "6ff5018f8ebb19b7ca753d302932e05331c693ea"
        ],
        [
            "intros; unfold exclusive_mpred, lock_inv.",
            "VernacExtend",
            "9ecff1fdc9376eb6c92faf3c11efbe1ef56fe483"
        ],
        [
            "Transparent mpred.",
            "VernacSetOpacity",
            "800edb172b7725601075f40b2d5475aaf0d3a833"
        ],
        [
            "Intros b1 ofs1 b2 ofs2.",
            "VernacExtend",
            "906a6222b3d0e7bb22e8e15d855b3dbb4026615a"
        ],
        [
            "Opaque mpred.",
            "VernacSetOpacity",
            "9cce740895cfce4acce0136ff18059cd4ac971e4"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "2721274aada33cbec3c1f62204a14a93dcf297fd"
        ],
        [
            "match goal with |- ?P |-- ?Q => change (predicates_hered.derives P Q) end.",
            "VernacExtend",
            "0ed8e0588deb35044c5a19d34ebb7dc23b3dd496"
        ],
        [
            "intros ? (? & ? & ? & Hlock1 & Hlock2).",
            "VernacExtend",
            "6ae69cea379f39108787bee696cfb3a61f4c7e0b"
        ],
        [
            "exploit (res_predicates.LKspec_precise _ _ _ _ a _ _ Hlock1 Hlock2); try (eexists; eauto).",
            "VernacExtend",
            "dcddc07dac85aa5b2565a062f268e55585057941"
        ],
        [
            "intros; subst.",
            "VernacExtend",
            "49b62e7b0b09b594bdd02547566afd646d616645"
        ],
        [
            "destruct Hlock1 as [Hlock1 _]; simpl in Hlock1.",
            "VernacExtend",
            "81d044f7da234a199e97562c4866354e3d8fddae"
        ],
        [
            "specialize (Hlock1 (b2, Ptrofs.unsigned ofs2)).",
            "VernacExtend",
            "b931ce24243f694c592a185fe714048ea48f0e35"
        ],
        [
            "rewrite if_true in Hlock1 by (split; auto; pose proof lksize.LKSIZE_pos; omega).",
            "VernacExtend",
            "0ee3dafb9ba07b7289395391035fd02934569e8d"
        ],
        [
            "destruct Hlock1 as [? Hl1].",
            "VernacExtend",
            "e84be481cb56210d67b4f2a4360f25b0491fce06"
        ],
        [
            "apply compcert_rmaps.RML.resource_at_join with (loc := (b2, Ptrofs.unsigned ofs2)) in H.",
            "VernacExtend",
            "aa178f213f7d445b74173ddfb964a48004baa340"
        ],
        [
            "rewrite Hl1 in H; inv H.",
            "VernacExtend",
            "43fe86d3801a11d1fbe322cf88024d04b1fa4450"
        ],
        [
            "apply sepalg.join_self in RJ.",
            "VernacExtend",
            "cda8a75a0520a9f2a6102143634c242b5e053300"
        ],
        [
            "eapply readable_not_identity; eauto.",
            "VernacExtend",
            "6106574be8d2e9d87e4b1f6ddb633669deddf211"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma selflock_exclusive : forall R sh v, exclusive_mpred R -> exclusive_mpred (selflock R v sh).",
            "VernacStartTheoremProof",
            "3541b28d2207d0798826863bf5a88b2ed19feae7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite selflock_eq.",
            "VernacExtend",
            "d7e90abe08cc883824d979e8731983c59ce5d6e3"
        ],
        [
            "apply exclusive_sepcon1; auto.",
            "VernacExtend",
            "0e9799f4471bee50d623e30263d10d34bee3e5fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exclusive_FF : exclusive_mpred FF.",
            "VernacStartTheoremProof",
            "6b416979b59f55cd242078b703be292d09add175"
        ],
        [
            "unfold exclusive_mpred.",
            "VernacExtend",
            "4eed3424d44a74d431e8b9b1f9e6adbfe7c4d1a6"
        ],
        [
            "rewrite FF_sepcon; auto.",
            "VernacExtend",
            "bd194f425ac0cda2c515ca68b60e5e5153235e93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derives_exclusive : forall P Q (Hderives : P |-- Q) (HQ : exclusive_mpred Q), exclusive_mpred P.",
            "VernacStartTheoremProof",
            "9b34cca1fad2eb3bfa3143b5ae281db43c5d6ae8"
        ],
        [
            "unfold exclusive_mpred; intros.",
            "VernacExtend",
            "6428fd5c3f9bdeb9dff8c696fe60c0f4190a63e4"
        ],
        [
            "eapply derives_trans, HQ.",
            "VernacExtend",
            "455f8aeeb4a798de6d63a11ef73ac6c1d3b6d109"
        ],
        [
            "apply sepcon_derives; auto.",
            "VernacExtend",
            "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapsto_exclusive : forall (sh : Share.t) (t : type) (v : val), sepalg.nonunit sh -> exclusive_mpred (EX v2 : _, mapsto sh t v v2).",
            "VernacStartTheoremProof",
            "4f8b745b9ae0f1d511d77762f7d6284fe2f56118"
        ],
        [
            "intros; unfold exclusive_mpred.",
            "VernacExtend",
            "4a0b005fee04b85123bbdc5335710546a69ae67a"
        ],
        [
            "Intros v1 v2; apply mapsto_conflict; auto.",
            "VernacExtend",
            "2ee3564525b0388bcd69f18c866858224b696212"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma field_at__exclusive : forall (cs : compspecs) (sh : Share.t) (t : type) (fld : list gfield) (p : val), sepalg.nonidentity sh -> 0 < sizeof (nested_field_type t fld) -> exclusive_mpred (field_at_ sh t fld p).",
            "VernacStartTheoremProof",
            "34d1092efb358668b0495ee50434ed94cff94dbb"
        ],
        [
            "intros; apply field_at__conflict; auto.",
            "VernacExtend",
            "553bf1a0a749d0bdbf7b4f9ba98748e7c93ab697"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_field_at_exclusive : forall (cs : compspecs) (sh : Share.t) (t : type) (fld : list gfield) (p : val), sepalg.nonidentity sh -> 0 < sizeof (nested_field_type t fld) -> exclusive_mpred (EX v : _, field_at sh t fld v p).",
            "VernacStartTheoremProof",
            "0c2ce82a1c07b6e0fa74de96a96f08e69200f7de"
        ],
        [
            "intros; unfold exclusive_mpred.",
            "VernacExtend",
            "4a0b005fee04b85123bbdc5335710546a69ae67a"
        ],
        [
            "Intros v v'; apply field_at_conflict; auto.",
            "VernacExtend",
            "4e3218314566c553f3cc4411ca3fd5a57bf8c211"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary field_at_exclusive : forall (cs : compspecs) (sh : Share.t) (t : type) (fld : list gfield) v (p : val), sepalg.nonidentity sh -> 0 < sizeof (nested_field_type t fld) -> exclusive_mpred (field_at sh t fld v p).",
            "VernacStartTheoremProof",
            "9189a4a6150f1576b82a6983c73cb37940538f50"
        ],
        [
            "intros; eapply derives_exclusive, ex_field_at_exclusive; eauto.",
            "VernacExtend",
            "8378749eb259d2759438c44f56a6c674c123fc7c"
        ],
        [
            "Exists v; apply derives_refl.",
            "VernacExtend",
            "079f346deb484cb52c7d05527c2c8e9a021af420"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_data_at_exclusive : forall (cs : compspecs) (sh : Share.t) (t : type) (p : val), sepalg.nonidentity sh -> 0 < sizeof t -> exclusive_mpred (EX v : _, data_at sh t v p).",
            "VernacStartTheoremProof",
            "8ae2eb7ecbf8e78a879be18c9443fa8458888aac"
        ],
        [
            "intros; unfold exclusive_mpred.",
            "VernacExtend",
            "4a0b005fee04b85123bbdc5335710546a69ae67a"
        ],
        [
            "Intros v v'; apply data_at_conflict; auto.",
            "VernacExtend",
            "aaeea5d1d4fced0940b8b81236d9379aa98fae15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary data_at_exclusive : forall (cs : compspecs) (sh : Share.t) (t : type) v (p : val), sepalg.nonidentity sh -> 0 < sizeof t -> exclusive_mpred (data_at sh t v p).",
            "VernacStartTheoremProof",
            "3ffdfccf8ed14c9e21e7e74fc18526e52a283245"
        ],
        [
            "intros; eapply derives_exclusive, ex_data_at_exclusive; eauto.",
            "VernacExtend",
            "bf79f6bc99244f8c80a24f580341a5999a85c051"
        ],
        [
            "Exists v; apply derives_refl.",
            "VernacExtend",
            "079f346deb484cb52c7d05527c2c8e9a021af420"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary data_at__exclusive : forall (cs : compspecs) (sh : Share.t) (t : type) (p : val), sepalg.nonidentity sh -> 0 < sizeof t -> exclusive_mpred (data_at_ sh t p).",
            "VernacStartTheoremProof",
            "7f136a7afa0d101aeea2a7026f06aab402ebeaf7"
        ],
        [
            "intros; eapply derives_exclusive, data_at_exclusive; eauto.",
            "VernacExtend",
            "05f574f5e2a5a2d6425bcc57b2107cdc77cbb56f"
        ],
        [
            "apply data_at__data_at; eauto.",
            "VernacExtend",
            "5e66317f03ca49da8aa25e698f7cb9884d5eebfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cond_var_exclusive : forall {cs} sh p, sepalg.nonidentity sh -> exclusive_mpred (@cond_var cs sh p).",
            "VernacStartTheoremProof",
            "46681a0068d1111e79f8eb0cca316c093f5f6e20"
        ],
        [
            "intros; apply data_at__exclusive; auto.",
            "VernacExtend",
            "e3d4da77393ef90719e21d3bdc7c18af57461899"
        ],
        [
            "unfold tcond; simpl; omega.",
            "VernacExtend",
            "816be64366cb3c97cedf533c22ba57349d1b4963"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lock_inv_isptr : forall sh v R, lock_inv sh v R = !!isptr v && lock_inv sh v R.",
            "VernacStartTheoremProof",
            "4c186316926a678fb77188ddd275440566b149b6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply local_facts_isptr with (P := fun v => lock_inv sh v R); eauto.",
            "VernacExtend",
            "34c3bb8b73e9377b515c83adc690fa3a9e379dda"
        ],
        [
            "Transparent mpred.",
            "VernacSetOpacity",
            "800edb172b7725601075f40b2d5475aaf0d3a833"
        ],
        [
            "unfold lock_inv; Intros b o.",
            "VernacExtend",
            "d3ff765f349f63f64fe8e3385229150f8bf29902"
        ],
        [
            "subst; simpl; entailer.",
            "VernacExtend",
            "5649d5fdbfae20bcebacb959f5520d66dc02fb3b"
        ],
        [
            "Opaque mpred.",
            "VernacSetOpacity",
            "9cce740895cfce4acce0136ff18059cd4ac971e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cond_var_isptr : forall {cs} sh v, @cond_var cs sh v = !! isptr v && cond_var sh v.",
            "VernacStartTheoremProof",
            "f52076521e3179b3ceaa6822c6112ac4ec468e6e"
        ],
        [
            "intros; apply data_at__isptr.",
            "VernacExtend",
            "419b81c18a76d38950db5c66c98368b1d41de1b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lock_inv_isptr cond_var_isptr : saturate_local.",
            "VernacHints",
            "46e962fe24e9f0f88688482632257d56de06b324"
        ],
        [
            "Lemma cond_var_share_join : forall {cs} sh1 sh2 sh v (Hjoin : sepalg.join sh1 sh2 sh), @cond_var cs sh1 v * cond_var sh2 v = cond_var sh v.",
            "VernacStartTheoremProof",
            "639bd55531fd8ba79f08dc598533af804966624d"
        ],
        [
            "intros; unfold cond_var; apply data_at__share_join; auto.",
            "VernacExtend",
            "c91f3ffca250cb54116e73045fc9dce2f9af9ad8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lock_inv_exclusive selflock_exclusive cond_var_exclusive data_at_exclusive data_at__exclusive field_at_exclusive field_at__exclusive selflock_rec.",
            "VernacHints",
            "b71a27cfe747c0f8887f320202a8c355578d34b2"
        ],
        [
            "Lemma eq_dec_refl : forall {A B} {A_eq : EqDec A} (a : A) (b c : B), (if eq_dec a a then b else c) = b.",
            "VernacStartTheoremProof",
            "504ac4dc9179bd47066a8e6022b161c92c11b4a9"
        ],
        [
            "intros; destruct (eq_dec a a); [|contradiction n]; auto.",
            "VernacExtend",
            "21f591c8d3b8023338b6231fd878e6dc2c11890c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LKspec_readable lock_size : 0 < lock_size -> forall R sh p, predicates_hered.derives (res_predicates.LKspec lock_size R sh p) (!!(readable_share sh)).",
            "VernacStartTheoremProof",
            "3d17f85fb3b4eb7f7fd0cbe9e6449f2a0bdebc6b"
        ],
        [
            "intros pos R sh p a [H _].",
            "VernacExtend",
            "09f9a6b864c9e65d5fb8314bbe28342f8ea233cd"
        ],
        [
            "specialize (H p); simpl in H.",
            "VernacExtend",
            "94a58db6404fd4570f0add0fdc42a69e81fb27b0"
        ],
        [
            "destruct (adr_range_dec p lock_size p).",
            "VernacExtend",
            "c65b78a7312c8394ba6c491be742afff8f0a02c3"
        ],
        [
            "destruct (eq_dec p p); [|contradiction n; auto].",
            "VernacExtend",
            "14ac23ff78407a47248517cda30d0fa7b35710c9"
        ],
        [
            "destruct H; auto.",
            "VernacExtend",
            "95ae427bd4e09a5f31c59184b718811a23ecb36f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "contradiction n; unfold adr_range.",
            "VernacExtend",
            "dc7f0f061855cfa47d784ff4bb02569f902f0495"
        ],
        [
            "destruct p; split; auto.",
            "VernacExtend",
            "6845b62af80e873e49aa1fbd1d95380c9f5c18e2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lock_inv_share_join : forall sh1 sh2 sh v R (Hsh1 : readable_share sh1) (Hsh2 : readable_share sh2) (Hjoin : sepalg.join sh1 sh2 sh), lock_inv sh1 v R * lock_inv sh2 v R = lock_inv sh v R.",
            "VernacStartTheoremProof",
            "227db959ce74d67e907b57fed87817f73ef59ec1"
        ],
        [
            "intros; unfold lock_inv.",
            "VernacExtend",
            "9907c8290344bd0580242fcd7381aa58740e9ecb"
        ],
        [
            "rewrite exp_sepcon1; f_equal; extensionality b.",
            "VernacExtend",
            "48e58cc34bf1f10620b0c104d9d0d9385a526156"
        ],
        [
            "rewrite exp_sepcon1; f_equal; extensionality o.",
            "VernacExtend",
            "5d79b33d68efb914497ce742a2b766a10cc324ee"
        ],
        [
            "destruct v; try solve [repeat rewrite prop_false_andp; try discriminate; rewrite FF_sepcon; auto].",
            "VernacExtend",
            "3421ad45a77ef296bb16ccaa4a1cdb52fd37da4b"
        ],
        [
            "destruct (eq_dec b0 b); [|repeat rewrite prop_false_andp; try (intro X; inv X; contradiction n; auto); rewrite FF_sepcon; auto].",
            "VernacExtend",
            "4717109a6b0ef95786ae0de48204975ef346c84a"
        ],
        [
            "destruct (eq_dec i o); [subst | repeat rewrite prop_false_andp; try (intro X; inv X; contradiction n; auto); rewrite FF_sepcon; auto].",
            "VernacExtend",
            "0cd2f886abf65d2c5804c31ba093bce2a1052acf"
        ],
        [
            "repeat rewrite prop_true_andp; auto.",
            "VernacExtend",
            "d826c9e6a34ba258b6e6ba658984c5ff915548f8"
        ],
        [
            "evar (P : mpred); replace (exp _) with P.",
            "VernacExtend",
            "f723085b0bb576c9bc90f7251b769c816b8e2927"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst P; apply slice.LKspec_share_join; eauto.",
            "VernacExtend",
            "dbedf24c9ba80da23c0572f5fcbfdbc453aeff3f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "erewrite exp_uncurry, exp_congr, <- exp_andp1, exp_prop, prop_true_andp; eauto.",
            "VernacExtend",
            "948f0a3325a64bd6753789c3de0208a93cea708d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "instantiate (1 := fun x => Vptr b o = Vptr (fst x) (snd x)); exists (b, o); auto.",
            "VernacExtend",
            "19d544fc29ba887bac00d6279980f43465f63ff6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros (?, ?); simpl.",
            "VernacExtend",
            "85113a3d7a4b89e246416a83824b6382de410069"
        ],
        [
            "destruct (eq_dec b0 b); [subst | repeat rewrite prop_false_andp; try (intro X; inv X; contradiction n); auto].",
            "VernacExtend",
            "3079f6175ba7ef09fb66eed1d483adb3f5aca561"
        ],
        [
            "destruct (eq_dec i o); [|repeat rewrite prop_false_andp; try (intro X; inv X; contradiction n); auto].",
            "VernacExtend",
            "3495581df1b9236f1d59fff0a0182042f696ecde"
        ],
        [
            "subst; repeat rewrite prop_true_andp; auto.",
            "VernacExtend",
            "d08c942afdce216ca48e749ce571eecee252fcd1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_join_top : forall sh, sepalg.join sh (Share.comp sh) Tsh.",
            "VernacStartTheoremProof",
            "12c09b952dc3d2cd59bec981f75d30faafd4410a"
        ],
        [
            "intro; pose proof (Share.comp1 sh).",
            "VernacExtend",
            "782155b0222ec652929121e0fdc122f3de4a2d15"
        ],
        [
            "apply comp_parts_join with (L := sh)(R := Share.comp sh); auto; rewrite Share.glb_idem, Share.glb_top.",
            "VernacExtend",
            "67a622181c50df675006ef50763aff075b451a0d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Share.comp2; auto.",
            "VernacExtend",
            "59464b708ed5859fbde214bec0c9bfe806b3d75f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Share.glb_commute, Share.comp2; auto.",
            "VernacExtend",
            "aa7c2d02f62bcdc6372a410fdf93182a265eef1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unreadable_bot : ~readable_share Share.bot.",
            "VernacStartTheoremProof",
            "6f6e1859467120bb5d84db0744d6633c75ab2c45"
        ],
        [
            "unfold readable_share, nonempty_share, sepalg.nonidentity.",
            "VernacExtend",
            "0f7deb2e0db81f9629bc5a033e62368ecdad8492"
        ],
        [
            "rewrite Share.glb_bot; auto.",
            "VernacExtend",
            "603648591fd9b63abae032b9950a00763b576051"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve unreadable_bot.",
            "VernacHints",
            "48fc5bf7e9a57be031835dcde6188cacef29a3eb"
        ],
        [
            "Definition join_Bot := join_Bot.",
            "VernacDefinition",
            "6d4ae420e4c8130ae1d8745af791247691cbf871"
        ],
        [
            "Lemma join_Tsh : forall a b, sepalg.join Tsh a b -> b = Tsh /\\ a = Share.bot.",
            "VernacStartTheoremProof",
            "253632b67d7cf4cc572d67a61402635a14f1385a"
        ],
        [
            "intros ?? (? & ?).",
            "VernacExtend",
            "ccbaf96c6ce99cd26b558e11bcf68846d0f9d0b6"
        ],
        [
            "rewrite Share.glb_commute, Share.glb_top in H; subst; split; auto.",
            "VernacExtend",
            "193a2baf3bf00b65809be2c5326b7c345d1e0b97"
        ],
        [
            "apply Share.lub_bot.",
            "VernacExtend",
            "cb129a2be64860945f09da69c1a921429a51f91d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gsh1 := fst (slice.cleave Tsh).",
            "VernacDefinition",
            "6294a45713435cee37d22ea77fd7a887fae28b61"
        ],
        [
            "Definition gsh2 := snd (slice.cleave Tsh).",
            "VernacDefinition",
            "93e8a4ea1515c4da7fbe6d562dfa5d8860a8add2"
        ],
        [
            "Lemma readable_gsh1 : readable_share gsh1.",
            "VernacStartTheoremProof",
            "6694a02b0bcfbf609635d6a977f491dd9088cf50"
        ],
        [
            "apply slice.cleave_readable1; auto.",
            "VernacExtend",
            "34f01f65c6aa3e9f6965bc52ae9ece2150b05fbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma readable_gsh2 : readable_share gsh2.",
            "VernacStartTheoremProof",
            "5018b6b79c2ea873603ecc5740cbd728d141d266"
        ],
        [
            "apply slice.cleave_readable2; auto.",
            "VernacExtend",
            "ad0db287268a3b69fb4f3541b905f596687be5f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gsh1_gsh2_join : sepalg.join gsh1 gsh2 Tsh.",
            "VernacStartTheoremProof",
            "21e008155cedd0c6c0e8dbdef86a3fbc32472b56"
        ],
        [
            "apply slice.cleave_join; unfold gsh1, gsh2; destruct (slice.cleave Tsh); auto.",
            "VernacExtend",
            "f6653159f6195ea5a080729c1592b7be3999f781"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve readable_gsh1 readable_gsh2 gsh1_gsh2_join.",
            "VernacHints",
            "984c0c0647099dd13dc628658df665c56475f35f"
        ],
        [
            "Lemma gsh1_not_bot : gsh1 <> Share.bot.",
            "VernacStartTheoremProof",
            "9ebb8558a553be93b09bfeb30de07625148d2f50"
        ],
        [
            "intro X; contradiction unreadable_bot; rewrite <- X; auto.",
            "VernacExtend",
            "814730b81c6dc7ed0caec62675650351d725fe29"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gsh2_not_bot : gsh2 <> Share.bot.",
            "VernacStartTheoremProof",
            "85cbe97558af2bbc69aab9d3e781a344ffb974a7"
        ],
        [
            "intro X; contradiction unreadable_bot; rewrite <- X; auto.",
            "VernacExtend",
            "814730b81c6dc7ed0caec62675650351d725fe29"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve gsh1_not_bot gsh2_not_bot.",
            "VernacHints",
            "6b49da06195846509e1bbbe361c7b421d1c0c046"
        ],
        [
            "Lemma split_readable_share sh : readable_share sh -> exists sh1, exists sh2, readable_share sh1 /\\ readable_share sh2 /\\ sepalg.join sh1 sh2 sh.",
            "VernacStartTheoremProof",
            "7faba69dd7c5109a9b35db80b1ba51a8a80a511e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (slice.cleave_readable1 _ H); pose proof (slice.cleave_readable2 _ H).",
            "VernacExtend",
            "618a00f5b0b29ec118446807241cc1774501fede"
        ],
        [
            "destruct (slice.cleave sh) as (sh1, sh2) eqn: Hsplit.",
            "VernacExtend",
            "ccfc725c2c73de8516ada29eeacf97b390317549"
        ],
        [
            "exists sh1, sh2; split; [|split]; auto.",
            "VernacExtend",
            "d10d90e2999b3ce41e7d2c4c4458081472521822"
        ],
        [
            "replace sh1 with (fst (slice.cleave sh)) by (rewrite Hsplit; auto).",
            "VernacExtend",
            "a410992a16850645b2557c8d4107f9ac8c56c44a"
        ],
        [
            "replace sh2 with (snd (slice.cleave sh)) by (rewrite Hsplit; auto).",
            "VernacExtend",
            "c324fe8688306c6faaf5df4f9523cdb7daac6198"
        ],
        [
            "apply slice.cleave_join; auto.",
            "VernacExtend",
            "2c32b4025acbbcd238d57325b859f597408271cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split_Ews : exists sh1, exists sh2, readable_share sh1 /\\ readable_share sh2 /\\ sepalg.join sh1 sh2 Ews.",
            "VernacStartTheoremProof",
            "dc0acec42b7d981818b2014acfb3497e4882a56f"
        ],
        [
            "apply split_readable_share; auto.",
            "VernacExtend",
            "11f96e382cf16049990781e0c93a20b4669f2a6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition remove_Znth {A} i (al : list A) := sublist 0 i al ++ sublist (i + 1) (Zlength al) al.",
            "VernacDefinition",
            "2fd7caf1cc3fa01987a8bed4a3bff2f60039c29f"
        ],
        [
            "Lemma remove_Znth0 : forall {A} (l : list A), remove_Znth 0 l = sublist 1 (Zlength l) l.",
            "VernacStartTheoremProof",
            "64299e8467dac9e7d284875ddbef9a4fe72d13a4"
        ],
        [
            "intros; unfold remove_Znth.",
            "VernacExtend",
            "1091b454c75ade08912d935a48cd5c729abf394f"
        ],
        [
            "rewrite sublist_nil; auto.",
            "VernacExtend",
            "8a20fcf67ae9740519e3a7d57bc1bb8306d141a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_Znth_cons : forall {A} i a (l : list A), i > 0 -> remove_Znth i (a :: l) = a :: remove_Znth (i - 1) l.",
            "VernacStartTheoremProof",
            "c38cd7af9e758c2987fa18d7fa4f5f0bea522e3e"
        ],
        [
            "intros; unfold remove_Znth.",
            "VernacExtend",
            "1091b454c75ade08912d935a48cd5c729abf394f"
        ],
        [
            "rewrite sublist_0_cons, sublist_S_cons, Zlength_cons; auto; try omega.",
            "VernacExtend",
            "5eda326c975b231e1b8dcdaa065e83fa4807d51f"
        ],
        [
            "simpl; f_equal; f_equal; f_equal; omega.",
            "VernacExtend",
            "8e95c5c0c70ea62e222bae185abc98d9101c6518"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlength_remove_Znth : forall {A} i (l : list A), 0 <= i < Zlength l -> Zlength (remove_Znth i l) = Zlength l - 1.",
            "VernacStartTheoremProof",
            "29a3a364c206b44d97478575a78ca12fd1ace94d"
        ],
        [
            "intros; unfold remove_Znth.",
            "VernacExtend",
            "1091b454c75ade08912d935a48cd5c729abf394f"
        ],
        [
            "rewrite Zlength_app, !Zlength_sublist; omega.",
            "VernacExtend",
            "3a41fd1e8b09f97152c9a1d45f87edb5bc3e8535"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_upd_Znth: forall {A} i l (a : A), 0 <= i < Zlength l -> remove_Znth i (upd_Znth i l a) = remove_Znth i l.",
            "VernacStartTheoremProof",
            "413f5e13046da77c39d77b2c68113e06dd2152dc"
        ],
        [
            "intros; unfold remove_Znth.",
            "VernacExtend",
            "1091b454c75ade08912d935a48cd5c729abf394f"
        ],
        [
            "rewrite upd_Znth_Zlength, sublist_upd_Znth_l, sublist_upd_Znth_r; auto; omega.",
            "VernacExtend",
            "ffd7466b9bcc3940e79b3c5167a124db0b61845a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_Znth_map: forall {A B} (f : A -> B) i l, remove_Znth i (map f l) = map f (remove_Znth i l).",
            "VernacStartTheoremProof",
            "c7875651b744837c06016678f26f117baa6be75b"
        ],
        [
            "intros; unfold remove_Znth.",
            "VernacExtend",
            "1091b454c75ade08912d935a48cd5c729abf394f"
        ],
        [
            "rewrite map_app, Zlength_map, !sublist_map; auto.",
            "VernacExtend",
            "0ccbe72a88911db96fe973185e14a7c2ebc54315"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_Znth_combine: forall {A B} i (l1 : list A) (l2 : list B), 0 <= i < Zlength l1 -> Zlength l1 = Zlength l2 -> remove_Znth i (combine l1 l2) = combine (remove_Znth i l1) (remove_Znth i l2).",
            "VernacStartTheoremProof",
            "45d860634c7eed60118c92772999e768ecc6815b"
        ],
        [
            "intros; unfold remove_Znth.",
            "VernacExtend",
            "1091b454c75ade08912d935a48cd5c729abf394f"
        ],
        [
            "rewrite !sublist_combine, combine_app' by (rewrite !Zlength_sublist; omega).",
            "VernacExtend",
            "f2e2a7e32ebde5866f7bacd7a80267a898e0ac39"
        ],
        [
            "rewrite Zlength_combine, Z.min_l by omega.",
            "VernacExtend",
            "bb2d833a35d2d615b24970ffb4f2ba6cb841112e"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iter_sepcon_Znth: forall {A} {d : Inhabitant A} f (l : list A) i, 0 <= i < Zlength l -> iter_sepcon f l = f (Znth i l) * iter_sepcon f (remove_Znth i l).",
            "VernacStartTheoremProof",
            "47cad310df97f361ee7b72e3ba770086ecd8a488"
        ],
        [
            "intros; unfold remove_Znth.",
            "VernacExtend",
            "1091b454c75ade08912d935a48cd5c729abf394f"
        ],
        [
            "rewrite <- sublist_same at 1 by auto.",
            "VernacExtend",
            "8a110e51ccf5bbbe9996c250b5903587d2e48e39"
        ],
        [
            "rewrite sublist_split with (mid := i) by omega.",
            "VernacExtend",
            "eaca3388f6cfa7e7c883ea01f4ae13bfd292fac6"
        ],
        [
            "rewrite sublist_next with (i0 := i) by omega.",
            "VernacExtend",
            "1eda913b51af090016fefb11261464711ace1f23"
        ],
        [
            "rewrite !iter_sepcon_app; simpl; apply pred_ext; cancel.",
            "VernacExtend",
            "17028f3f6b3d94d7436e06623a4a45fd2b0f2dad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iter_sepcon2_Znth: forall {A B} {d1 : Inhabitant A} {d2 : Inhabitant B} f (l1 : list A) (l2 : list B) i, 0 <= i < Zlength l1 -> Zlength l1 = Zlength l2 -> iter_sepcon2 f l1 l2 = f (Znth i l1) (Znth i l2) * iter_sepcon2 f (remove_Znth i l1) (remove_Znth i l2).",
            "VernacStartTheoremProof",
            "483847a7642743d3d2f275628acacf5a79c1268f"
        ],
        [
            "intros; rewrite !iter_sepcon2_spec.",
            "VernacExtend",
            "c411f4c0c2d44df263a721716bb66eedf013ee23"
        ],
        [
            "apply pred_ext; Intros l; subst.",
            "VernacExtend",
            "59d9a093ea4e2070c317eec446636802d6df2878"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Zlength_map in *.",
            "VernacExtend",
            "703549b9837b85e6a0bf22f1b87c5ea6f6277434"
        ],
        [
            "rewrite !remove_Znth_map, !Znth_map, iter_sepcon_Znth with (i0 := i) by auto.",
            "VernacExtend",
            "2bbfdd2c3894549cab58d99f4d4dca7a57a471fa"
        ],
        [
            "unfold uncurry at 1.",
            "VernacExtend",
            "df2db443d8593eb7c03b7d50bb37f12aa0b1a615"
        ],
        [
            "Exists (remove_Znth i l); entailer!.",
            "VernacExtend",
            "6cd0a8c2df67753901f0c62b7e96961b2ffed4b8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "Exists (combine l1 l2).",
            "VernacExtend",
            "8064f4f43f559b69d36763ab8949cf20cf8c176e"
        ],
        [
            "rewrite combine_fst, combine_snd by (rewrite <- !ZtoNat_Zlength; apply Nat2Z.inj; rewrite !Z2Nat.id; omega).",
            "VernacExtend",
            "6743bbd8690c0f1de3e06f86cd50b2acf7474754"
        ],
        [
            "rewrite iter_sepcon_Znth with (i0 := i)(l0 := combine _ _) by (rewrite Zlength_combine, Z.min_l; omega).",
            "VernacExtend",
            "89f733d6d5b2827477276e97ad381e008248a914"
        ],
        [
            "rewrite Znth_combine, remove_Znth_combine by auto.",
            "VernacExtend",
            "f57ae8f50b7ef5fda0534a3013920e0c52315d30"
        ],
        [
            "rewrite H1, H2, combine_eq; unfold uncurry; entailer!.",
            "VernacExtend",
            "969bf945ddb0570639634b345edb4443cad2219b"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Inhabitant_share : Inhabitant share := Share.bot.",
            "VernacInstance",
            "b2fdb63c51e656e3412d325d079830eb1c2512a5"
        ],
        [
            "Instance Inhabitant_mpred : Inhabitant mpred := @FF mpred Nveric.",
            "VernacInstance",
            "e19d6551e1115e0efbdceb706767c3dff50476e4"
        ],
        [
            "Lemma join_shares_nth : forall shs sh1 sh i, sepalg_list.list_join sh1 shs sh -> 0 <= i < Zlength shs -> exists sh', sepalg_list.list_join (Znth i shs) (remove_Znth i shs) sh' /\\ sepalg.join sh1 sh' sh.",
            "VernacStartTheoremProof",
            "893c89302eb3704b41759f5687c6e3dfcdb48d3a"
        ],
        [
            "induction shs; simpl; intros.",
            "VernacExtend",
            "4287d77e24f23f3acd705e3a9c2c0da2f43ac221"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite Zlength_nil in *; omega.",
            "VernacExtend",
            "11e355bcc65e98c7aa282771754cdae5eb378b32"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "destruct (eq_dec i 0).",
            "VernacExtend",
            "ed0407251a0d330a3d6d3f4b234de52e598904c6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; rewrite remove_Znth0, sublist_1_cons, Zlength_cons, sublist_same, Znth_0_cons; auto; try omega.",
            "VernacExtend",
            "3904f152fa391f361276c0e7d174670c48c959c6"
        ],
        [
            "eapply sepalg_list.list_join_assoc1; eauto.",
            "VernacExtend",
            "ace92f318eeba4a2ecfe73c20b76037f0e5bb37f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Zlength_cons in *; exploit (IHshs w1 sh (i - 1)); auto; try omega.",
            "VernacExtend",
            "35ad40512ba05318e3903629f026b4e85c02a85e"
        ],
        [
            "intros (sh2 & ? & ?).",
            "VernacExtend",
            "9bf85504216017183a7df6de8d60630d77717a25"
        ],
        [
            "rewrite Znth_pos_cons, remove_Znth_cons; try omega.",
            "VernacExtend",
            "815dbe15dda1ac63bc65ef07109eb4ffa09e516a"
        ],
        [
            "exploit (sepalg.join_sub_joins_trans(a := a)(b := sh2)(c := w1)); eauto.",
            "VernacExtend",
            "eb8f0d4a8267d03c3cd50c772883004365c2dab3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eexists; eapply sepalg.join_comm; eauto.",
            "VernacExtend",
            "37bb93c7be53fe9b45b4b8674d7c20b2749a6861"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros (sh' & ?); exists sh'; split.",
            "VernacExtend",
            "e17dc45d2c1ab726668bfc20cffeefa71c0061cf"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exploit (sepalg_list.list_join_assoc2(a := a)(b := Znth (i - 1) shs) (cl := remove_Znth (i - 1) shs)(e := sh')(f := sh2)); auto.",
            "VernacExtend",
            "98bac2145529fa9441b8c2344b627106c606ced9"
        ],
        [
            "intros (d & ? & ?).",
            "VernacExtend",
            "9977eedca47f17638f1fb8239258f8615299c837"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (sepalg.join_assoc(a := sh1)(b := a)(c := sh2)(d := w1)(e := sh)) as X.",
            "VernacExtend",
            "0cceb0cee8c60671ea94d66974424c7a33f392ed"
        ],
        [
            "repeat match goal with X : ?a -> _, H : ?a |- _ => specialize (X H) end.",
            "VernacExtend",
            "9283e52bd468526bb7740143bc5cbae57aee17a8"
        ],
        [
            "destruct X as (f & Ha' & ?).",
            "VernacExtend",
            "fb0f18f4e6221934934ff4746433554d5afbb3ff"
        ],
        [
            "assert (f = sh') by (eapply sepalg.join_eq; eauto).",
            "VernacExtend",
            "6542ded9e448e95ec7b70cec7462fcf77961b4fa"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_join_comm : forall (l1 l2 : list share) a b, sepalg_list.list_join a (l1 ++ l2) b -> sepalg_list.list_join a (l2 ++ l1) b.",
            "VernacStartTheoremProof",
            "e374e24d6dde307e9f4360c57feb6b3a8a38b3ad"
        ],
        [
            "induction l1; intros; [rewrite app_nil_r; auto|].",
            "VernacExtend",
            "86e87769b974e3ebbd72e12254a1f7f8a564eac2"
        ],
        [
            "inversion H as [|????? H1 H2]; subst.",
            "VernacExtend",
            "426e7f01059e9e81f8961c8f8eaf545b4eaacba2"
        ],
        [
            "apply IHl1, sepalg_list.list_join_unapp in H2.",
            "VernacExtend",
            "0ebe25ffc84fde4ca2a4e0ce9fb84c98279e43d5"
        ],
        [
            "destruct H2 as (c & Hl2 & Hl1).",
            "VernacExtend",
            "8f24eff5e38740168b3a275a127cdab570053b0d"
        ],
        [
            "apply sepalg.join_comm in H1.",
            "VernacExtend",
            "822a52d1ef51c67e5dd0ff4ff5fc4c722f3ba2a3"
        ],
        [
            "destruct (sepalg_list.list_join_assoc1 H1 Hl2) as (? & ? & ?).",
            "VernacExtend",
            "f4388d3a14df196d7110f9dbaedbf1ee6d225037"
        ],
        [
            "eapply sepalg_list.list_join_app; eauto.",
            "VernacExtend",
            "ef12458b339ca313fd9d1a7300d522b8b0d40853"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split_shares : forall n sh, readable_share sh -> exists sh1 shs, Zlength shs = Z.of_nat n /\\ readable_share sh1 /\\ Forall readable_share shs /\\ sepalg_list.list_join sh1 shs sh.",
            "VernacStartTheoremProof",
            "9bc422fc5243e03797dac5bc31f8e9c72df99a54"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists sh, []; repeat split; auto.",
            "VernacExtend",
            "3fe02548f86f82bda93001093cde0b21ffe605de"
        ],
        [
            "apply sepalg_list.fold_rel_nil.",
            "VernacExtend",
            "6fe329f859fa6e251cc70f64655f64cbb450a3bd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (split_readable_share _ H) as (sh1 & sh2 & H1 & ? & ?).",
            "VernacExtend",
            "6361351e0d563a3e66b09b3ace87ada68e4a90f1"
        ],
        [
            "destruct (IHn _ H1) as (sh1' & shs & ? & ? & ? & ?).",
            "VernacExtend",
            "e32118201deda7c298fc02b44aab4e1f2511bfbd"
        ],
        [
            "exists sh1', (shs ++ [sh2]).",
            "VernacExtend",
            "03da584d111e3704f45927e965bceec2c077f11c"
        ],
        [
            "rewrite Nat2Z.inj_succ, Zlength_app, Zlength_cons, Zlength_nil; split; [omega|].",
            "VernacExtend",
            "4469dc4195ff861d648823b2b444320fdade115e"
        ],
        [
            "rewrite Forall_app; repeat split; auto.",
            "VernacExtend",
            "bedf7f53748f4d06e839edf3b10ec1a483d33d2e"
        ],
        [
            "eapply sepalg_list.list_join_app; eauto.",
            "VernacExtend",
            "ef12458b339ca313fd9d1a7300d522b8b0d40853"
        ],
        [
            "rewrite <- sepalg_list.list_join_1; auto.",
            "VernacExtend",
            "095e9df31a1d8debe3c93113afea0b3962b711ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma data_at_shares_join : forall {cs} sh t v p shs sh1 (Hsplit : sepalg_list.list_join sh1 shs sh), @data_at cs sh1 t v p * fold_right sepcon emp (map (fun sh => data_at sh t v p) shs) = data_at sh t v p.",
            "VernacStartTheoremProof",
            "5a709f79d50c20f0e10330c687a3517b29b13ef1"
        ],
        [
            "induction shs; intros; simpl.",
            "VernacExtend",
            "e490dc1c34020e4c2e5938f7fdeaed5958279c39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv Hsplit.",
            "VernacExtend",
            "28c1a2fd8bc549dd1b9460ba6177eca370bf96e5"
        ],
        [
            "rewrite sepcon_emp; auto.",
            "VernacExtend",
            "547f574af52ed1ecf6eeb00679f096581655b054"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv Hsplit.",
            "VernacExtend",
            "28c1a2fd8bc549dd1b9460ba6177eca370bf96e5"
        ],
        [
            "erewrite <- sepcon_assoc, data_at_share_join; eauto.",
            "VernacExtend",
            "fa80dd8b4a9e7f61e2c0220fd469063f0c16ad07"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exp_comm : forall {A B} P, (EX x : A, EX y : B, P x y) = EX y : B, EX x : A, P x y.",
            "VernacStartTheoremProof",
            "f683758db53a8c42f74e61c6622a5b511ec91f54"
        ],
        [
            "intros; apply seplog.pred_ext; Intros x y; Exists y x; auto.",
            "VernacExtend",
            "f9d4c7726422c2b0747fe073a6bab1a5e793171c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapsto_value_eq: forall sh1 sh2 t p v1 v2, readable_share sh1 -> readable_share sh2 -> v1 <> Vundef -> v2 <> Vundef -> mapsto sh1 t p v1 * mapsto sh2 t p v2 |-- !!(v1 = v2).",
            "VernacStartTheoremProof",
            "37a5fe8c5b0a2836bcc55e1303b2d2dc2bc520d3"
        ],
        [
            "intros; unfold mapsto.",
            "VernacExtend",
            "34718a0fe8315b5a0702cc5ccd67b4c78ad39305"
        ],
        [
            "destruct (access_mode t); try solve [entailer!].",
            "VernacExtend",
            "9ee62baea269f86d620023d07792b0c1b8bc7f7e"
        ],
        [
            "destruct (type_is_volatile t); try solve [entailer!].",
            "VernacExtend",
            "48c9f40621273a3c9b7fad8c911d2f29de88c46d"
        ],
        [
            "destruct p; try solve [entailer!].",
            "VernacExtend",
            "c8c106bd04878baae708c0ab894a6a2fc8b3af1f"
        ],
        [
            "destruct (readable_share_dec sh1); [|contradiction n; auto].",
            "VernacExtend",
            "cc55a2888cab9c96900d73eb5d91b8affcaae344"
        ],
        [
            "destruct (readable_share_dec sh2); [|contradiction n; auto].",
            "VernacExtend",
            "2a696aaea6911eca1d988844e691e76066eabaf8"
        ],
        [
            "Transparent mpred.",
            "VernacSetOpacity",
            "800edb172b7725601075f40b2d5475aaf0d3a833"
        ],
        [
            "rewrite !prop_false_andp with (P := v1 = Vundef), !orp_FF; auto; Intros.",
            "VernacExtend",
            "b52e1d3c422b1032591f8c99be38a614a2fe4633"
        ],
        [
            "rewrite !prop_false_andp with (P := v2 = Vundef), !orp_FF; auto; Intros.",
            "VernacExtend",
            "4c0c62c89239f628204c32089a7ef63e9797510f"
        ],
        [
            "Opaque mpred.",
            "VernacSetOpacity",
            "9cce740895cfce4acce0136ff18059cd4ac971e4"
        ],
        [
            "apply res_predicates.address_mapsto_value_cohere.",
            "VernacExtend",
            "825af63ad4133077ae89839051b56b87fdd6269d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapsto_value_cohere: forall sh1 sh2 t p v1 v2, readable_share sh1 -> mapsto sh1 t p v1 * mapsto sh2 t p v2 |-- mapsto sh1 t p v1 * mapsto sh2 t p v1.",
            "VernacStartTheoremProof",
            "63f4d953d95a406b49bbcee84e21ea93e7b4e521"
        ],
        [
            "intros; unfold mapsto.",
            "VernacExtend",
            "34718a0fe8315b5a0702cc5ccd67b4c78ad39305"
        ],
        [
            "destruct (access_mode t); try simple apply derives_refl.",
            "VernacExtend",
            "1b55c4e4ae2b0daf251fff771c2c09d07dc761df"
        ],
        [
            "destruct (type_is_volatile t); try simple apply derives_refl.",
            "VernacExtend",
            "9d56f41e002fe54df4fb503a7bbff6fa7fda756c"
        ],
        [
            "destruct p; try simple apply derives_refl.",
            "VernacExtend",
            "1311779155983ceed87e79e9ac65dda9921a93c6"
        ],
        [
            "destruct (readable_share_dec sh1); [|contradiction n; auto].",
            "VernacExtend",
            "cc55a2888cab9c96900d73eb5d91b8affcaae344"
        ],
        [
            "destruct (eq_dec v1 Vundef).",
            "VernacExtend",
            "7d6e4bb2e5c867f821266ea7c9b318b4c448bb72"
        ],
        [
            "Transparent mpred.",
            "VernacSetOpacity",
            "800edb172b7725601075f40b2d5475aaf0d3a833"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; rewrite !prop_false_andp with (P := tc_val t Vundef), !FF_orp, prop_true_andp; auto; try apply tc_val_Vundef.",
            "VernacExtend",
            "0090a5d656fdd86b879c5820e76d753093746e57"
        ],
        [
            "cancel.",
            "VernacExtend",
            "24ea99f626ec31ff5120f99494a934737348354b"
        ],
        [
            "rewrite prop_true_andp with (P := Vundef = Vundef); auto.",
            "VernacExtend",
            "8c15aa94a1757205da1b5e373d33d16b39a42ee3"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply orp_left; Intros; auto.",
            "VernacExtend",
            "8b09426e7485b354e83d568f50079af4b5c278e2"
        ],
        [
            "Exists v2; auto.",
            "VernacExtend",
            "764d2b705d824c00afcdb9ad76846b77a35e271d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "intro X; contradiction X; auto.",
            "VernacExtend",
            "8036b93acfcdee59cfe3e9c0008f3e43d961039b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !prop_false_andp with (P := v1 = Vundef), !orp_FF; auto; Intros.",
            "VernacExtend",
            "b52e1d3c422b1032591f8c99be38a614a2fe4633"
        ],
        [
            "apply andp_right; [apply prop_right; auto|].",
            "VernacExtend",
            "8cbfe2f178cdf84bb221a3416eacf09e39a80a16"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "eapply derives_trans with (Q := _ * EX v2' : val, res_predicates.address_mapsto m v2' _ _); [apply sepcon_derives; [apply derives_refl|]|].",
            "VernacExtend",
            "898ce860beca0b65e49620efa9eb45ff3cc63efd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (eq_dec v2 Vundef).",
            "VernacExtend",
            "484fa99b11e5c5d84eb5a53f8b578606d5cb6624"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst; rewrite prop_false_andp with (P := tc_val t Vundef), FF_orp; try apply tc_val_Vundef.",
            "VernacExtend",
            "2f02a3111f028f02f0328529558ee632dc190aec"
        ],
        [
            "rewrite prop_true_andp with (P := Vundef = Vundef); auto.",
            "VernacExtend",
            "8c15aa94a1757205da1b5e373d33d16b39a42ee3"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite prop_false_andp with (P := v2 = Vundef), orp_FF; auto; Intros.",
            "VernacExtend",
            "5a74a76ce17f3e5888b2923ba81fb45c2af94178"
        ],
        [
            "Exists v2; auto.",
            "VernacExtend",
            "764d2b705d824c00afcdb9ad76846b77a35e271d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "Intro v2'.",
            "VernacExtend",
            "335f6a570c3fe866ded8da4bd1760067d6652a3f"
        ],
        [
            "assert_PROP (v1 = v2') by (apply res_predicates.address_mapsto_value_cohere).",
            "VernacExtend",
            "abf71ad1bb3e88a0699ea6b5f045635a325108b4"
        ],
        [
            "subst; entailer!.",
            "VernacExtend",
            "a86a20a4f5072cc5965ec8ff3b9ca01b8878eaa5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "intro; auto.",
            "VernacExtend",
            "c01170981862e9d8608d651ab75e833f7953118c"
        ],
        [
            "Opaque mpred.",
            "VernacSetOpacity",
            "9cce740895cfce4acce0136ff18059cd4ac971e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma struct_pred_value_cohere : forall {cs : compspecs} m sh1 sh2 p t f off v1 v2 (Hsh1 : readable_share sh1) (Hsh2 : readable_share sh2) (IH : Forall (fun it : ident * type => forall v1 v2 (p : val), readable_share sh1 -> readable_share sh2 -> data_at_rec sh1 (t it) v1 p * data_at_rec sh2 (t it) v2 p |-- data_at_rec sh1 (t it) v1 p * data_at_rec sh2 (t it) v1 p) m), struct_pred m (fun (it : ident * type) v => withspacer sh1 (f it + sizeof (t it)) (off it) (at_offset (data_at_rec sh1 (t it) v) (f it))) v1 p * struct_pred m (fun (it : ident * type) v => withspacer sh2 (f it + sizeof (t it)) (off it) (at_offset (data_at_rec sh2 (t it) v) (f it))) v2 p |-- struct_pred m (fun (it : ident * type) v => withspacer sh1 (f it + sizeof (t it)) (off it) (at_offset (data_at_rec sh1 (t it) v) (f it))) v1 p * struct_pred m (fun (it : ident * type) v => withspacer sh2 (f it + sizeof (t it)) (off it) (at_offset (data_at_rec sh2 (t it) v) (f it))) v1 p.",
            "VernacStartTheoremProof",
            "a2dcdb1422997564de8d1dfec45b1128f682eb2c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert v1 v2; induction m; auto; intros.",
            "VernacExtend",
            "5f70dbbdbfc8bec481f68e24a2f15c61cfb1e44d"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "destruct a; inv IH.",
            "VernacExtend",
            "bd44caabe979d5b0be1ba2b19655a873f2a6add6"
        ],
        [
            "destruct m.",
            "VernacExtend",
            "8d29a39ed817a734f6646f7b42c80e41363356d4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold withspacer, at_offset; simpl.",
            "VernacExtend",
            "2686077725a353a778b121c7e7397461300169c6"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "match goal with |- (?P1 * ?Q1) * (?P2 * ?Q2) |-- _ => apply derives_trans with (Q := (P1 * P2) * (Q1 * Q2)); [cancel|] end.",
            "VernacExtend",
            "58765a0d70d52165779aeee40a5972885fafd58e"
        ],
        [
            "eapply derives_trans; [apply sepcon_derives, derives_refl|].",
            "VernacExtend",
            "cf7931dc7d11743c8f128bd8a0b14cc9fbd32cf2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "cancel.",
            "VernacExtend",
            "24ea99f626ec31ff5120f99494a934737348354b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !struct_pred_cons2.",
            "VernacExtend",
            "fa274aae24ce18bbfd9aafa0caa878e99c95c067"
        ],
        [
            "match goal with |- (?P1 * ?Q1) * (?P2 * ?Q2) |-- _ => apply derives_trans with (Q := (P1 * P2) * (Q1 * Q2)); [cancel|] end.",
            "VernacExtend",
            "58765a0d70d52165779aeee40a5972885fafd58e"
        ],
        [
            "match goal with |- _ |-- (?P1 * ?Q1) * (?P2 * ?Q2) => apply derives_trans with (Q := (P1 * P2) * (Q1 * Q2)); [|cancel] end.",
            "VernacExtend",
            "81c6b7f821f6713eca32349db695717e3375e043"
        ],
        [
            "apply sepcon_derives; [|auto].",
            "VernacExtend",
            "784b8ea8204c35758c7e10394c5229c0bdf330e4"
        ],
        [
            "unfold withspacer, at_offset; simpl.",
            "VernacExtend",
            "2686077725a353a778b121c7e7397461300169c6"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "match goal with |- (?P1 * ?Q1) * (?P2 * ?Q2) |-- _ => apply derives_trans with (Q := (P1 * P2) * (Q1 * Q2)); [cancel|] end.",
            "VernacExtend",
            "58765a0d70d52165779aeee40a5972885fafd58e"
        ],
        [
            "eapply derives_trans; [apply sepcon_derives, derives_refl|].",
            "VernacExtend",
            "cf7931dc7d11743c8f128bd8a0b14cc9fbd32cf2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "cancel.",
            "VernacExtend",
            "24ea99f626ec31ff5120f99494a934737348354b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma data_at_value_cohere : forall {cs : compspecs} sh1 sh2 t v1 v2 p, readable_share sh1 -> type_is_by_value t = true -> type_is_volatile t = false -> data_at sh1 t v1 p * data_at sh2 t v2 p |-- data_at sh1 t v1 p * data_at sh2 t v1 p.",
            "VernacStartTheoremProof",
            "587d0bf0c7bd081156a270558bb21e30b56a615c"
        ],
        [
            "intros; unfold data_at, field_at, at_offset; Intros.",
            "VernacExtend",
            "bb991df06227b214697697b0832b0e872722c610"
        ],
        [
            "apply andp_right; [apply prop_right; auto|].",
            "VernacExtend",
            "8cbfe2f178cdf84bb221a3416eacf09e39a80a16"
        ],
        [
            "rewrite !by_value_data_at_rec_nonvolatile by auto.",
            "VernacExtend",
            "d4bc9fb7731e76bc0a49c9428d36c414a7b09bb1"
        ],
        [
            "apply mapsto_value_cohere; auto.",
            "VernacExtend",
            "e4fa9cead5b824e272de1e16a8d1c459854ce844"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma data_at_array_value_cohere : forall {cs : compspecs} sh1 sh2 t z a v1 v2 p, readable_share sh1 -> type_is_by_value t = true -> type_is_volatile t = false -> data_at sh1 (Tarray t z a) v1 p * data_at sh2 (Tarray t z a) v2 p |-- data_at sh1 (Tarray t z a) v1 p * data_at sh2 (Tarray t z a) v1 p.",
            "VernacStartTheoremProof",
            "5a63863728f61d7a4c7aaaaee7545eab30700fc4"
        ],
        [
            "intros; unfold data_at, field_at, at_offset; Intros.",
            "VernacExtend",
            "bb991df06227b214697697b0832b0e872722c610"
        ],
        [
            "apply andp_right; [apply prop_right; auto|].",
            "VernacExtend",
            "8cbfe2f178cdf84bb221a3416eacf09e39a80a16"
        ],
        [
            "rewrite !data_at_rec_eq; simpl.",
            "VernacExtend",
            "2660a50b6a2a103b37b2d0cb603209802556eebc"
        ],
        [
            "unfold array_pred, aggregate_pred.array_pred; Intros.",
            "VernacExtend",
            "8ed583d7f7b1b21344bfb812b2974b00052fc941"
        ],
        [
            "apply andp_right; [apply prop_right; auto|].",
            "VernacExtend",
            "8cbfe2f178cdf84bb221a3416eacf09e39a80a16"
        ],
        [
            "rewrite Z.sub_0_r in *.",
            "VernacExtend",
            "44f1c1d62ad6bb9cd2d26b402351a962eee3f9a1"
        ],
        [
            "erewrite aggregate_pred.rangespec_ext by (intros; rewrite Z.sub_0_r; apply f_equal; auto).",
            "VernacExtend",
            "d0930d7304d8aac2ae29c957270143501ec8feff"
        ],
        [
            "setoid_rewrite aggregate_pred.rangespec_ext at 2; [|intros; rewrite Z.sub_0_r; apply f_equal; auto].",
            "VernacExtend",
            "3fc0c306fc151d5c4e88a9907db82a76473e90e0"
        ],
        [
            "setoid_rewrite aggregate_pred.rangespec_ext at 4; [|intros; rewrite Z.sub_0_r; apply f_equal; auto].",
            "VernacExtend",
            "b85794b8837644efc797c2f7b0847582d5d705d8"
        ],
        [
            "clear H3 H4.",
            "VernacExtend",
            "c594212e6ab0214cf3574b9ccddf238f49d58c36"
        ],
        [
            "rewrite Z2Nat_max0 in *.",
            "VernacExtend",
            "7bcd43a214c97bc6e7ee86bc15dce40bf3941d09"
        ],
        [
            "forget (offset_val 0 p) as p'; forget (Z.to_nat z) as n; forget 0 as lo; revert dependent lo; induction n; auto; simpl; intros.",
            "VernacExtend",
            "0683c4646ee4a297a2c40235333ef632a531ba2e"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "match goal with |- (?P1 * ?Q1) * (?P2 * ?Q2) |-- _ => eapply derives_trans with (Q := (P1 * P2) * (Q1 * Q2)); [cancel|] end.",
            "VernacExtend",
            "e0d2ab3ca39b0efd862f865ff85f56d9113a038b"
        ],
        [
            "eapply derives_trans; [apply sepcon_derives|].",
            "VernacExtend",
            "45fa787fa980406cb4e38a4fd0e1ebcfdde9ba6f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold at_offset.",
            "VernacExtend",
            "bc0dfeaf7229d20cca61bfdf8ab31d4a18e8a567"
        ],
        [
            "rewrite 2by_value_data_at_rec_nonvolatile by auto.",
            "VernacExtend",
            "0493bbeaab29b5cc563df1471bf8258529f4f092"
        ],
        [
            "apply mapsto_value_cohere; auto.",
            "VernacExtend",
            "e4fa9cead5b824e272de1e16a8d1c459854ce844"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold at_offset; rewrite 2by_value_data_at_rec_nonvolatile by auto; cancel.",
            "VernacExtend",
            "1f2bf189bb381c3c9b4543d6f8e33611bb2db65f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extract_nth_sepcon : forall l i, 0 <= i < Zlength l -> fold_right sepcon emp l = Znth i l * fold_right sepcon emp (upd_Znth i l emp).",
            "VernacStartTheoremProof",
            "191ee958bd751a7db5ac2abbf070169a9afa8474"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "erewrite <- sublist_same with (al := l) at 1; auto.",
            "VernacExtend",
            "c06f7e823f74b5f6e649999c4be053c89bf156f8"
        ],
        [
            "rewrite sublist_split with (mid := i); try omega.",
            "VernacExtend",
            "c42301dc84eb8a6b144ad33e7a5783d14d770fe8"
        ],
        [
            "rewrite sublist_next with (i0 := i); try omega.",
            "VernacExtend",
            "23a85993a7093fce366977312d948ff445bdceba"
        ],
        [
            "rewrite sepcon_app; simpl.",
            "VernacExtend",
            "d92b4cf38245eb828307049758a3e3317aaee465"
        ],
        [
            "rewrite <- sepcon_assoc, (sepcon_comm _ (Znth i l)).",
            "VernacExtend",
            "55e93906fc41a523d9a01280807cdd9f168f570f"
        ],
        [
            "unfold upd_Znth; rewrite sepcon_app, sepcon_assoc; simpl.",
            "VernacExtend",
            "559a775a7aae8054b3d0b60210b4dd3e5ea16a6d"
        ],
        [
            "rewrite emp_sepcon; auto.",
            "VernacExtend",
            "48c3c3dbe79fdbdaa99570c01577bfec18ad6c41"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma replace_nth_sepcon : forall P l i, P * fold_right sepcon emp (upd_Znth i l emp) = fold_right sepcon emp (upd_Znth i l P).",
            "VernacStartTheoremProof",
            "da09f32a50981fee950f096d93de48edf4e26d6f"
        ],
        [
            "intros; unfold upd_Znth.",
            "VernacExtend",
            "774945f168bf5f0ce358f4c6297717a58e345ddd"
        ],
        [
            "rewrite !sepcon_app; simpl.",
            "VernacExtend",
            "7f91a2579a114141145e5b7163aca6b3e2a49f7e"
        ],
        [
            "rewrite emp_sepcon, <- !sepcon_assoc, (sepcon_comm P); auto.",
            "VernacExtend",
            "70187bb85951b7f4025936caba70ce4284ddb5e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_derives_prop : forall P Q R, P |-- !!R -> P * Q |-- !!R.",
            "VernacStartTheoremProof",
            "d4c44d6d5b79bd2894e66c934596417bed9d64fd"
        ],
        [
            "intros; eapply derives_trans; [apply saturate_aux20 with (Q' := True); eauto|].",
            "VernacExtend",
            "5f46c462e7ef83c323a2d9a7b6c3e97b3a5d22e9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply prop_left; intros (? & ?); apply prop_right; auto.",
            "VernacExtend",
            "e8544057c5fa424e78b7d1e2ba05b754db7529c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_map : forall {A} P Q (l : list A), fold_right sepcon emp (map (fun x => P x * Q x) l) = fold_right sepcon emp (map P l) * fold_right sepcon emp (map Q l).",
            "VernacStartTheoremProof",
            "d6f1807e7a5bcc8f2c7364bcd2a6281b0f322514"
        ],
        [
            "induction l; simpl.",
            "VernacExtend",
            "4ae00a4cb6decae1eaa2f9b701c4f4e7bd0ec6f4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite sepcon_emp; auto.",
            "VernacExtend",
            "547f574af52ed1ecf6eeb00679f096581655b054"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !sepcon_assoc, <- (sepcon_assoc (fold_right _ _ _) (Q a)), (sepcon_comm (fold_right _ _ _) (Q _)).",
            "VernacExtend",
            "e56fca8c95fdff6dfdb791128161b36daef4d960"
        ],
        [
            "rewrite IHl; rewrite sepcon_assoc; auto.",
            "VernacExtend",
            "ef8e57efd0f07c6e9fd5e027df52adc9799fdba7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_list_derives : forall l1 l2 (Hlen : Zlength l1 = Zlength l2) (Heq : forall i, 0 <= i < Zlength l1 -> Znth i l1 |-- Znth i l2), fold_right sepcon emp l1 |-- fold_right sepcon emp l2.",
            "VernacStartTheoremProof",
            "b25a30f9dcd5cc599c58d6902f46fec3483e1f54"
        ],
        [
            "induction l1; destruct l2; auto; simpl; intros; rewrite ?Zlength_nil, ?Zlength_cons in *; try (rewrite Zlength_correct in *; omega).",
            "VernacExtend",
            "77683744bf4b29453b19c38b8f52c84fa1185871"
        ],
        [
            "apply sepcon_derives.",
            "VernacExtend",
            "5279c4b0e23192edb2904c60cb96eb25409229af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "specialize (Heq 0); rewrite !Znth_0_cons in Heq; apply Heq.",
            "VernacExtend",
            "cfe8d8e582b9ef4e5a9fb6a4dd9c25b6ba28d247"
        ],
        [
            "rewrite Zlength_correct; omega.",
            "VernacExtend",
            "3c58e615b482d35ab340a89d9c58a09e6c973b4f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHl1; [omega|].",
            "VernacExtend",
            "f3fda59334c2b897b5a28ae8fcd2d196c8aad12c"
        ],
        [
            "intros; specialize (Heq (i + 1)); rewrite !Znth_pos_cons, !Z.add_simpl_r in Heq; try omega.",
            "VernacExtend",
            "070fab0c8fb1f95ed40ee7d4272189f141dc96d1"
        ],
        [
            "apply Heq; omega.",
            "VernacExtend",
            "cc146a492ca41788edf755f44ab4ea755aa03ac4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_rotate : forall lP m n, 0 <= n - m < Zlength lP -> fold_right sepcon emp lP = fold_right sepcon emp (rotate lP m n).",
            "VernacStartTheoremProof",
            "2d6e090a02ab9227465945bf35c133e6217fc599"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold rotate.",
            "VernacExtend",
            "6fa05813bebed0c3d730fa04e54d569dc11d521c"
        ],
        [
            "rewrite sepcon_app, sepcon_comm, <- sepcon_app, sublist_rejoin, sublist_same by omega; auto.",
            "VernacExtend",
            "b62d871081753e8a88e855128074d968c4d25bd7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wand_eq : forall P Q R, P = Q * R -> P = Q * (Q -* P).",
            "VernacStartTheoremProof",
            "ee9f7dbe2ee4adb052f562a27580148ab5674788"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply seplog.pred_ext, modus_ponens_wand.",
            "VernacExtend",
            "fe8a69ce7a53aac9777487e112dbba715e0e0c0b"
        ],
        [
            "subst; cancel.",
            "VernacExtend",
            "9ca1bb45a241f568b3327bcce02ae05ba2fb2c0c"
        ],
        [
            "rewrite <- wand_sepcon_adjoint; auto.",
            "VernacExtend",
            "58be0b0b2ca60df2f753b84856bcda366e333bac"
        ],
        [
            "rewrite sepcon_comm; auto.",
            "VernacExtend",
            "d2c29cb76cae8b6b80971554ec9314b6f193e751"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wand_twice : forall P Q R, P -* Q -* R = P * Q -* R.",
            "VernacStartTheoremProof",
            "744388ac84b9b981999763242bf1d74e2266f9e0"
        ],
        [
            "intros; apply seplog.pred_ext.",
            "VernacExtend",
            "7f9ab1444862a924df9c871514ec6b50e701e9ad"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- wand_sepcon_adjoint.",
            "VernacExtend",
            "4dfb536b033f51b4ab3daf3908d9495321a9d882"
        ],
        [
            "rewrite <- sepcon_assoc, wand_sepcon_adjoint.",
            "VernacExtend",
            "a72ba3c0d6d29bdfcb207ec6852be4bc3917a7b2"
        ],
        [
            "rewrite sepcon_comm; apply modus_ponens_wand.",
            "VernacExtend",
            "543fd9b2e45f1910e611c0b7e0db1e17d054cbf4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- !wand_sepcon_adjoint.",
            "VernacExtend",
            "14da36f0df753c99d7c2d94727606f17db6c3f3d"
        ],
        [
            "rewrite sepcon_assoc, sepcon_comm; apply modus_ponens_wand.",
            "VernacExtend",
            "c46c47099ec3da48e8f62906907d41d706bf68c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sepcon_In : forall l P, In P l -> exists Q, fold_right sepcon emp l = P * Q.",
            "VernacStartTheoremProof",
            "d82acb8b00fe8125b84e06e825cbcd54a594397d"
        ],
        [
            "induction l; [contradiction|].",
            "VernacExtend",
            "af2e8405b5d756dc0b4c28ea12ecad65447f5c9f"
        ],
        [
            "intros ? [|]; simpl; subst; eauto.",
            "VernacExtend",
            "6da89a48805e8e2d835bbba5709225e311615d50"
        ],
        [
            "destruct (IHl _ H) as [? ->].",
            "VernacExtend",
            "b67c6ae07971f462dda7efc904d497e0f9f487fc"
        ],
        [
            "rewrite sepcon_comm, sepcon_assoc; eauto.",
            "VernacExtend",
            "3cf37d19409e5cf407160ccb2cf5f6d18360bbb1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extract_wand_sepcon : forall l P, In P l -> fold_right sepcon emp l = P * (P -* fold_right sepcon emp l).",
            "VernacStartTheoremProof",
            "77701ff52c44133bb08c8b9339183f618830479e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (sepcon_In _ _ H).",
            "VernacExtend",
            "78893a38169df0df5bf3aabe0e5f51048fe87bc7"
        ],
        [
            "eapply wand_eq; eauto.",
            "VernacExtend",
            "1d20eb915e809472568dc738525799491bb0fa3f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wand_sepcon_map : forall {A} (R : A -> mpred) l P Q (HR : forall i, In i l -> R i = P i * Q i), fold_right sepcon emp (map R l) = fold_right sepcon emp (map P l) * (fold_right sepcon emp (map P l) -* fold_right sepcon emp (map R l)).",
            "VernacStartTheoremProof",
            "0278aa330a99fa257cfece393d2feceefc245be6"
        ],
        [
            "intros; eapply wand_eq.",
            "VernacExtend",
            "af017ceeefa3890e4ee478df7a717c3a70c393fd"
        ],
        [
            "erewrite map_ext_in, sepcon_map; eauto.",
            "VernacExtend",
            "6d1eea0c1b0f76eb4d82e92700ff802dfa1b566d"
        ],
        [
            "apply HR.",
            "VernacExtend",
            "76cddd7cde3a030631f96ff7d4c39ea62c792bea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wand_frame : forall P Q R, P -* Q |-- P * R -* Q * R.",
            "VernacStartTheoremProof",
            "99e5b36d1c4d6c779e815d9845503a50544f3a1c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- wand_sepcon_adjoint; cancel.",
            "VernacExtend",
            "260c082cd26a7168da3b2c8b1e81a3008b63747d"
        ],
        [
            "rewrite sepcon_comm; apply modus_ponens_wand.",
            "VernacExtend",
            "543fd9b2e45f1910e611c0b7e0db1e17d054cbf4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_extract_later_prop'': forall {CS : compspecs} {Espec: OracleKind}, forall (Delta : tycontext) (PP : Prop) P Q R c post P1 P2, P2 |-- !!PP -> (PP -> semax Delta (PROPx P (LOCALx Q (SEPx (P1 && |>P2 :: R)))) c post) -> semax Delta (PROPx P (LOCALx Q (SEPx (P1 && |>P2 :: R)))) c post.",
            "VernacStartTheoremProof",
            "785be29460c2ce95c4273212e9bacf8678dfff23"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "erewrite (add_andp P2) by eauto.",
            "VernacExtend",
            "254a850d3dc4a3c4e6a7a33d99b918e43978fba7"
        ],
        [
            "apply semax_pre0 with (P' := |>!!PP && PROPx P (LOCALx Q (SEPx (P1 && |>P2 :: R)))).",
            "VernacExtend",
            "f6fbbb46ff48994b379d6088e2df16124ed741b6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "rewrite later_andp, <- andp_assoc, andp_comm, corable_andp_sepcon1; auto.",
            "VernacExtend",
            "55d171a0c07dd129d85092e66c41000fd81217ad"
        ],
        [
            "apply corable_later; auto.",
            "VernacExtend",
            "d7061cb5d6cfd7b5a5988421dfe291728cc11d46"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply semax_extract_later_prop; auto.",
            "VernacExtend",
            "d448484146ca324ece753a323fc59a52054f07c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma field_at_array_inbounds : forall {cs : compspecs} sh t z a i v p, field_at sh (Tarray t z a) [ArraySubsc i] v p |-- !!(0 <= i < z).",
            "VernacStartTheoremProof",
            "0681f1fd9d720e966df7f8aa3e671615e958841d"
        ],
        [
            "intros; entailer!.",
            "VernacExtend",
            "8519bd6609d7efed40508e18bc8e71aedaa78d96"
        ],
        [
            "destruct H as (_ & _ & _ & _ & _ & ?); auto.",
            "VernacExtend",
            "8f6e835d820fec404285e7fb11206437868ca6f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_pointer_isptr : forall v, valid_pointer v |-- !!(is_pointer_or_null v).",
            "VernacStartTheoremProof",
            "f364ef24ddcdbbce02db94e4d4bb6dda8740493f"
        ],
        [
            "Transparent mpred.",
            "VernacSetOpacity",
            "800edb172b7725601075f40b2d5475aaf0d3a833"
        ],
        [
            "Transparent predicates_hered.pred.",
            "VernacSetOpacity",
            "a5b56f4110e527573eb6b68bd971791b9fd720f6"
        ],
        [
            "destruct v; simpl; auto; try apply derives_refl.",
            "VernacExtend",
            "cae643b426d66c19a10b63f562e115949bb56d56"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "Opaque mpred.",
            "VernacSetOpacity",
            "9cce740895cfce4acce0136ff18059cd4ac971e4"
        ],
        [
            "Opaque predicates_hered.pred.",
            "VernacSetOpacity",
            "d00f4e49e8b3dcbc3b4904f831860707e1821dcf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve valid_pointer_isptr : saturate_local.",
            "VernacHints",
            "bed617c190c603fced18ccc19de05b6660c7d3ff"
        ],
        [
            "Lemma approx_imp : forall n P Q, compcert_rmaps.RML.R.approx n (predicates_hered.imp P Q) = compcert_rmaps.RML.R.approx n (predicates_hered.imp (compcert_rmaps.RML.R.approx n P) (compcert_rmaps.RML.R.approx n Q)).",
            "VernacStartTheoremProof",
            "7b52baf7e1721744dd404de68ae50bf0ef34e896"
        ],
        [
            "intros; apply predicates_hered.pred_ext; intros ? (? & Himp); split; auto; intros ? Ha' HP.",
            "VernacExtend",
            "d6e11d8965ff02fc8cd7ba89668d2c97fcd46710"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct HP; split; auto.",
            "VernacExtend",
            "909bf8cf6e3eb47012f86cc7684093a354d99609"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Himp; auto; split; auto.",
            "VernacExtend",
            "7ec75fb97348cea376db595d212f010dbb7c10da"
        ],
        [
            "pose proof (ageable.necR_level _ _ Ha'); omega.",
            "VernacExtend",
            "f9107ace8ed38819d0a22d542f15edba4cdaa0e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition super_non_expansive' {A} P := forall n ts x, compcert_rmaps.RML.R.approx n (P ts x) = compcert_rmaps.RML.R.approx n (P ts (functors.MixVariantFunctor.fmap (rmaps.dependent_type_functor_rec ts A) (compcert_rmaps.RML.R.approx n) (compcert_rmaps.RML.R.approx n) x)).",
            "VernacDefinition",
            "7ce117d674862abe9169a50c40f498326e60c565"
        ],
        [
            "Lemma approx_sepcon_list: forall n lP, lP <> [] -> compcert_rmaps.RML.R.approx n (fold_right sepcon emp lP) = fold_right sepcon emp (map (compcert_rmaps.RML.R.approx n) lP).",
            "VernacStartTheoremProof",
            "a0fa3a2c604c7612f3a16f2859e014caa865d727"
        ],
        [
            "induction lP; [contradiction | intros].",
            "VernacExtend",
            "e612df5ed848bbe13a980d0f7f09489de6a46511"
        ],
        [
            "destruct lP; simpl in *.",
            "VernacExtend",
            "dd0b8ffddb02c068b93bc53b4dce968b9c4cf2da"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; rewrite !sepcon_emp; auto.",
            "VernacExtend",
            "b1dd4912b6dae2d67331b07a5d27799229ddcb7d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite approx_sepcon, IHlP; auto; discriminate.",
            "VernacExtend",
            "64ebe46837c49cffbe12496162bb0e659b5da458"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary approx_sepcon_list' : forall n lP P, compcert_rmaps.RML.R.approx n (fold_right sepcon emp lP) * compcert_rmaps.RML.R.approx n P = fold_right sepcon emp (map (compcert_rmaps.RML.R.approx n) lP) * compcert_rmaps.RML.R.approx n P.",
            "VernacStartTheoremProof",
            "c1ea8cd79448b93c8422639359a1990b0603a69a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- !approx_sepcon, !(sepcon_comm (fold_right _ _ _)).",
            "VernacExtend",
            "37f9932940dc81de50bf0642a55d7764eaa3d4c3"
        ],
        [
            "setoid_rewrite approx_sepcon_list with (lP := _ :: _); auto; discriminate.",
            "VernacExtend",
            "9788909fd66b63cf5e69790690ff069dd72572fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma approx_FF : forall n, compcert_rmaps.RML.R.approx n FF = FF.",
            "VernacStartTheoremProof",
            "184aa6b663d093aed3618c301364513a58dabbd3"
        ],
        [
            "intro; apply predicates_hered.pred_ext; intros ??; try contradiction.",
            "VernacExtend",
            "20743c63b2a98fdeec44c1b1bb67966b7bfaeb1e"
        ],
        [
            "destruct H; contradiction.",
            "VernacExtend",
            "13d9512bba557f3bb20e804c4e8b41596f0b9bac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma later_nonexpansive : nonexpansive (@later mpred _ _).",
            "VernacStartTheoremProof",
            "43326f062ca6937f9c32a390bd51d1a4df4ba69b"
        ],
        [
            "apply contractive_nonexpansive, later_contractive.",
            "VernacExtend",
            "af15de60eee98a239edc507cbf788467f5e48d42"
        ],
        [
            "intros ??; auto.",
            "VernacExtend",
            "048b6811c3c587f9030595346efd336715086631"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_refl : forall (G : Triv) P, G |-- P <=> P.",
            "VernacStartTheoremProof",
            "5737d11b2cd7747691e1be3ef84c8d0fa79d67b8"
        ],
        [
            "intros; rewrite andp_dup; apply subp_refl.",
            "VernacExtend",
            "409320dad1a2bd66cf64f8cd4c3864cbe81fb480"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_sepcon : forall (G : Triv) (P P' Q Q' : mpred) (HP : G |-- P <=> P') (HQ : G |-- Q <=> Q'), G |-- P * Q <=> P' * Q'.",
            "VernacStartTheoremProof",
            "54bd58b6c509fb493e76cf90d8f61c37c3bca9c0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite fash_andp in HP, HQ |- *.",
            "VernacExtend",
            "e1707fc93919c0654e6433ab4af78aee023a472c"
        ],
        [
            "apply andp_right; apply subp_sepcon; auto; intros ? Ha; destruct (HP _ Ha), (HQ _ Ha); auto.",
            "VernacExtend",
            "79372a390cde961245957b5ff4893af541ac8f24"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_andp : forall (G : Triv) (P P' Q Q' : mpred) (HP : G |-- P <=> P') (HQ : G |-- Q <=> Q'), G |-- P && Q <=> P' && Q'.",
            "VernacStartTheoremProof",
            "8cad11e6e4385175ef1bd21412d6b1c5e631d3ee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite fash_andp in HP, HQ |- *.",
            "VernacExtend",
            "e1707fc93919c0654e6433ab4af78aee023a472c"
        ],
        [
            "apply andp_right; apply subp_andp; auto; intros ? Ha; destruct (HP _ Ha), (HQ _ Ha); auto.",
            "VernacExtend",
            "384b086bb63a74848d0906a10b72a74d12f03824"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_exp : forall (A : Type) (NA : NatDed A) (IA : Indir A) (RecIndir : RecIndir A) (G : Triv) (B : Type) (X Y : B -> A), (forall x : B, G |-- X x <=> Y x) -> G |-- (EX x : _, X x) <=> (EX x : _, Y x).",
            "VernacStartTheoremProof",
            "4906781d305829e7a5efbb8fcb337a77736d88c0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite fash_andp; apply andp_right; apply subp_exp; intro x; specialize (H x); rewrite fash_andp in H; intros ? Ha; destruct (H _ Ha); auto.",
            "VernacExtend",
            "a08b451e5a5d0fc5f145bc799ae703e116a9a574"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_right_sepcon_nonexpansive : forall lP1 lP2, Zlength lP1 = Zlength lP2 -> (ALL i : Z, Znth i lP1 <=> Znth i lP2) |-- fold_right sepcon emp lP1 <=> fold_right sepcon emp lP2.",
            "VernacStartTheoremProof",
            "3076db9b7c68778c0e06e6a714e3620e22b802a0"
        ],
        [
            "induction lP1; intros.",
            "VernacExtend",
            "5f5e4943f7d7ac379a3da91a555317b267192858"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "symmetry in H; apply Zlength_nil_inv in H; subst.",
            "VernacExtend",
            "cf2ef27791c4ef27344212b5a1250e6f58f3d203"
        ],
        [
            "apply eqp_refl.",
            "VernacExtend",
            "ec609a9d644fee75dbc561b43143d163741b383c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct lP2; [apply Zlength_nil_inv in H; discriminate|].",
            "VernacExtend",
            "90e47cd7c32cdd754c27773ac0861b7aec6860d8"
        ],
        [
            "rewrite !Zlength_cons in H.",
            "VernacExtend",
            "87f8bb10de7fe3dd07ae63bc65289dd351171eb0"
        ],
        [
            "simpl fold_right; apply eqp_sepcon.",
            "VernacExtend",
            "002a171bb176326cb687214af5aa2f704a319cdf"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply allp_left with 0.",
            "VernacExtend",
            "f5465192820eb8003346c5232e25a24a83d43936"
        ],
        [
            "rewrite !Znth_0_cons; auto.",
            "VernacExtend",
            "10dd1992e3a9e483a882c38a3db2b120026d46a5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply derives_trans, IHlP1; [|omega].",
            "VernacExtend",
            "f2fac9509dd3d26e67b52c1c414415741d3bab46"
        ],
        [
            "apply allp_right; intro i.",
            "VernacExtend",
            "b4748b1966377bb8e95bff97930df9806ccd2b30"
        ],
        [
            "apply allp_left with (i + 1).",
            "VernacExtend",
            "fbc227de8c2a3ea7e72cac78ed737470fb0e3dee"
        ],
        [
            "destruct (zlt i 0).",
            "VernacExtend",
            "1d4e6d4d62fc8e4e151b9c8c7f9624235a238e27"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite !(Znth_underflow _ _ l); apply eqp_refl.",
            "VernacExtend",
            "0f69e58a7bbc51effe23bc512ba314abfff2cda7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite !Znth_pos_cons, Z.add_simpl_r by omega; auto.",
            "VernacExtend",
            "32d648eaa7caec7c6c0fc1d4f8c57366696ff5b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma void_ret : ifvoid tvoid (` (PROP ( ) LOCAL () SEP ()) (make_args [] [])) (EX v : val, ` (PROP ( ) LOCAL () SEP ()) (make_args [ret_temp] [v])) = emp.",
            "VernacStartTheoremProof",
            "743f8bf17fdf3a17a26c270c34d78ecc57f7f10b"
        ],
        [
            "extensionality; simpl.",
            "VernacExtend",
            "74c61dc816cc54a93e4c71f0471b10c14275783a"
        ],
        [
            "unfold liftx, lift, PROPx, LOCALx, SEPx; simpl; normalize.",
            "VernacExtend",
            "6d9628407ebcb8d773bb791f4fc8f815bf2b0e38"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac lock_props := rewrite ?sepcon_assoc; rewrite <- sepcon_emp at 1; rewrite sepcon_comm; apply sepcon_derives; [repeat apply andp_right; auto; eapply derives_trans; try (apply exclusive_weak_exclusive || (apply rec_inv_weak_rec_inv; try apply selflock_rec)); auto | try timeout 20 cancel].",
            "VernacExtend",
            "7d9ad1972f2e96f3799f6f5da48b3b551d94d5fa"
        ],
        [
            "Ltac join_sub := repeat (eapply sepalg.join_sub_trans; [eexists; first [eassumption | simple eapply sepalg.join_comm; eassumption]|]); eassumption.",
            "VernacExtend",
            "e4abb622285d707639dee13f39f947d3e6b94d71"
        ],
        [
            "Ltac join_inj := repeat match goal with H1 : sepalg.join ?a ?b ?c, H2 : sepalg.join ?a ?b ?d |- _ => pose proof (sepalg.join_eq H1 H2); clear H1 H2; subst; auto end.",
            "VernacExtend",
            "8203cbf0ceca7962aaa3ee97e3a4de8a5cfdc927"
        ],
        [
            "Ltac fast_cancel := rewrite ?sepcon_emp, ?emp_sepcon; rewrite ?sepcon_assoc; repeat match goal with | |- ?P |-- ?P => apply derives_refl | |- ?P * _ |-- ?P * _ => apply sepcon_derives; [apply derives_refl|] | |- _ |-- ?P * _ => rewrite <- !sepcon_assoc, (sepcon_comm _ P), !sepcon_assoc end; try cancel_frame.",
            "VernacExtend",
            "ae4bd8f701e91a62edbefd7fc02990139f9977b3"
        ],
        [
            "Lemma semax_fun_id'' id f gv Espec {cs} Delta P Q R Post c : (var_types Delta) ! id = None -> (glob_specs Delta) ! id = Some f -> (glob_types Delta) ! id = Some (type_of_funspec f) -> snd (local2ptree Q) = Some gv -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx ((func_ptr' f (gv id)) :: R)))) c Post -> @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R))) c Post.",
            "VernacStartTheoremProof",
            "1997dbe42b4d625f2297528a6065aed0d6e56258"
        ],
        [
            "intros V G GS HGV SA.",
            "VernacExtend",
            "5490d5dba91fbc95dfed3570695f46d88a9af07f"
        ],
        [
            "apply (semax_fun_id id f Delta); auto.",
            "VernacExtend",
            "3d33a8cc07bf9c4834d2e02429d9caa154caf344"
        ],
        [
            "eapply semax_pre_post; try apply SA; clear SA; intros; try apply ENTAIL_refl.",
            "VernacExtend",
            "9181321887e376611a591ac81afdf2778e13f867"
        ],
        [
            "destruct (local2ptree Q) as [[[T1 T2] Res] GV] eqn:?H.",
            "VernacExtend",
            "f0d0f3e82e148e79db27451ed868b95aabd3ad1b"
        ],
        [
            "simpl in HGV; subst GV.",
            "VernacExtend",
            "61e5542209cbd43ae78740295e349859369d646d"
        ],
        [
            "erewrite (local2ptree_soundness P) by eauto.",
            "VernacExtend",
            "bf07aa864925e75863f236b4759e53512d989806"
        ],
        [
            "erewrite (local2ptree_soundness P) by eauto.",
            "VernacExtend",
            "bf07aa864925e75863f236b4759e53512d989806"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "entailer.",
            "VernacExtend",
            "b73314f9b45f246f2bc4b3330fa13724d53d10fa"
        ],
        [
            "unfold func_ptr'.",
            "VernacExtend",
            "bc1a54bbaa7b27155f3ac9160a06293f287e664c"
        ],
        [
            "rewrite <- andp_left_corable by (apply corable_func_ptr).",
            "VernacExtend",
            "316da0c7daafdac2e8369f98184ef568541ab92b"
        ],
        [
            "rewrite andp_comm; apply andp_derives; auto.",
            "VernacExtend",
            "5ecffe56f8e7f74b999a13fce934c3a307f19235"
        ],
        [
            "erewrite <- gvars_eval_var; [apply derives_refl | eauto ..].",
            "VernacExtend",
            "885bdda88563de0606e74397756310d221e2551a"
        ],
        [
            "pose proof LocalD_sound_gvars gv T1 T2 _ eq_refl.",
            "VernacExtend",
            "56dc58cb2986455c21d4887b912c81dc05f3878a"
        ],
        [
            "clear - H2 H3.",
            "VernacExtend",
            "4e8f4ded31fadc8965664652d1eb78a93c7ac505"
        ],
        [
            "revert H3.",
            "VernacExtend",
            "955508da3ffe781e1988ee35dd19fc48de81cfbd"
        ],
        [
            "generalize (gvars gv).",
            "VernacExtend",
            "0ad550399caf3b90c4c644ded2099dc7b9277d8a"
        ],
        [
            "rewrite <- Forall_forall.",
            "VernacExtend",
            "151597223201968137dd10870b1ad83061c567ce"
        ],
        [
            "induction (LocalD T1 T2 (Some gv)); [constructor |].",
            "VernacExtend",
            "4a74ec052619edca8c074b8917d005367f39fc23"
        ],
        [
            "simpl in H2.",
            "VernacExtend",
            "b1e247c43b6623097ab13813b4de664287dd4249"
        ],
        [
            "destruct H2; constructor; auto.",
            "VernacExtend",
            "2440c9b6b58ea4f45c7e18c1ee4913e781823833"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac get_global_function'' _f := eapply (semax_fun_id'' _f); try reflexivity.",
            "VernacExtend",
            "3534b41124e162a3f6f13178ae44ec7b9a368af2"
        ],
        [
            "Ltac start_dep_function := match goal with |- semax_body ?V ?G ?F ?spec => let s := fresh \"spec\" in pose (s:=spec); hnf in s; match goal with | s := (DECLARE _ WITH _ : globals PRE [] main_pre _ nil _ POST [ tint ] main_post _ nil _) |- _ => idtac | s := ?spec' |- _ => check_canonical_funspec spec' end; change (semax_body V G F s); subst s end; let DependedTypeList := fresh \"DependedTypeList\" in match goal with |- semax_body _ _ _ (pair _ (mk_funspec _ _ _ ?Pre _ _ _)) => match Pre with | (fun x => match _ with (a,b) => _ end) => intros Espec DependedTypeList [a b] | (fun i => _) => intros Espec DependedTypeList i end; simpl fn_body; simpl fn_params; simpl fn_return end; simpl functors.MixVariantFunctor._functor in *; simpl rmaps.dependent_type_functor_rec; repeat match goal with |- @semax _ _ _ (match ?p with (a,b) => _ end * _) _ _ => destruct p as [a b] end; simplify_func_tycontext; repeat match goal with | |- context [Sloop (Ssequence (Sifthenelse ?e Sskip Sbreak) ?s) Sskip] => fold (Swhile e s) | |- context [Ssequence ?s1 (Sloop (Ssequence (Sifthenelse ?e Sskip Sbreak) ?s2) ?s3) ] => match s3 with | Sset ?i _ => match s1 with Sset ?i' _ => unify i i' | Sskip => idtac end end; fold (Sfor s1 e s2 s3) end; try expand_main_pre; process_stackframe_of; repeat change_mapsto_gvar_to_data_at; repeat rewrite <- data_at__offset_zero; try apply start_function_aux1; repeat (apply semax_extract_PROP; match goal with | |- _ ?sh -> _ => match type of sh with | share => intros ?SH | Share.t => intros ?SH | _ => intro end | |- _ => intro end); first [ eapply eliminate_extra_return'; [ reflexivity | reflexivity | ] | eapply eliminate_extra_return; [ reflexivity | reflexivity | ] | idtac]; abbreviate_semax.",
            "VernacExtend",
            "f757e34b30157bb6dd9e21b66642d00df37994ee"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2) => match x with (x1,x2) => P%assert end) (fun (ts: list Type) (x: t1*t2) => match x with (x1,x2) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "031d5f7703dba3b64e2fa4471c97d6ea91f5383a"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3) => match x with (x1,x2,x3) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3) => match x with (x1,x2,x3) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "b5439f5f04d6601581f0d7d4bfacda4952c2e875"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 , x4 : t4 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3*t4) => match x with (x1,x2,x3,x4) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3*t4) => match x with (x1,x2,x3,x4) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, x4 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "547e7d9170f34f4fe01613d9b98f26ed8ca9bdd9"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 , x4 : t4 , x5 : t5 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3*t4*t5) => match x with (x1,x2,x3,x4,x5) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3*t4*t5) => match x with (x1,x2,x3,x4,x5) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, x4 at level 0, x5 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "4e91cdece4fb1d919fa919aae1c9358f68935bed"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 , x4 : t4 , x5 : t5 , x6 : t6 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6) => match x with (x1,x2,x3,x4,x5,x6) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6) => match x with (x1,x2,x3,x4,x5,x6) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, x4 at level 0, x5 at level 0, x6 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "3aa8644522f065f1acaf49a8374d204bbf3ba069"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 , x4 : t4 , x5 : t5 , x6 : t6 , x7 : t7 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7) => match x with (x1,x2,x3,x4,x5,x6,x7) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7) => match x with (x1,x2,x3,x4,x5,x6,x7) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, x4 at level 0, x5 at level 0, x6 at level 0, x7 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "64d7410123646ac025aa39331b7db408c6ebacdd"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 , x4 : t4 , x5 : t5 , x6 : t6 , x7 : t7 , x8 : t8 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8) => match x with (x1,x2,x3,x4,x5,x6,x7,x8) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8) => match x with (x1,x2,x3,x4,x5,x6,x7,x8) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, x4 at level 0, x5 at level 0, x6 at level 0, x7 at level 0, x8 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "add6107dbe2c3e7d8b0550c20293a97f503042bd"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 , x4 : t4 , x5 : t5 , x6 : t6 , x7 : t7 , x8 : t8 , x9 : t9 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, x4 at level 0, x5 at level 0, x6 at level 0, x7 at level 0, x8 at level 0, x9 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "27829a78d6df1426f87af2b241a9b445c1cef33f"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 , x4 : t4 , x5 : t5 , x6 : t6 , x7 : t7 , x8 : t8 , x9 : t9 , x10 : t10 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9*t10) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9,x10) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9*t10) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9,x10) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, x4 at level 0, x5 at level 0, x6 at level 0, x7 at level 0, x8 at level 0, x9 at level 0, x10 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "0f484b0fe345219b548a06d9bddb67a039632311"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 , x4 : t4 , x5 : t5 , x6 : t6 , x7 : t7 , x8 : t8 , x9 : t9 , x10 : t10 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9*t10) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9,x10) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9*t10) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9,x10) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, x4 at level 0, x5 at level 0, x6 at level 0, x7 at level 0, x8 at level 0, x9 at level 0, x10 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "0f484b0fe345219b548a06d9bddb67a039632311"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 , x4 : t4 , x5 : t5 , x6 : t6 , x7 : t7 , x8 : t8 , x9 : t9 , x10 : t10 , x11 : t11 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9*t10*t11) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9*t10*t11) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, x4 at level 0, x5 at level 0, x6 at level 0, x7 at level 0, x8 at level 0, x9 at level 0, x10 at level 0, x11 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "33be0cd1152c61d160b1dc4df69240280489408b"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 , x4 : t4 , x5 : t5 , x6 : t6 , x7 : t7 , x8 : t8 , x9 : t9 , x10 : t10 , x11 : t11 , x12 : t12 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9*t10*t11*t12) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9*t10*t11*t12) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, x4 at level 0, x5 at level 0, x6 at level 0, x7 at level 0, x8 at level 0, x9 at level 0, x10 at level 0, x11 at level 0, x12 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "1906c4144a4cb8c80588c5eb4708ddfcc762cfdc"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 , x4 : t4 , x5 : t5 , x6 : t6 , x7 : t7 , x8 : t8 , x9 : t9 , x10 : t10 , x11 : t11 , x12 : t12 , x13 : t13 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9*t10*t11*t12*t13) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9*t10*t11*t12*t13) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, x4 at level 0, x5 at level 0, x6 at level 0, x7 at level 0, x8 at level 0, x9 at level 0, x10 at level 0, x11 at level 0, x12 at level 0, x13 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "110d470d79ba6113b4537988046c6f563673bd0c"
        ],
        [
            "Notation \"'TYPE' A 'WITH' x1 : t1 , x2 : t2 , x3 : t3 , x4 : t4 , x5 : t5 , x6 : t6 , x7 : t7 , x8 : t8 , x9 : t9 , x10 : t10 , x11 : t11 , x12 : t12 , x13 : t13 , x14 : t14 'PRE' [ u , .. , v ] P 'POST' [ tz ] Q\" := (mk_funspec ((cons u%formals .. (cons v%formals nil) ..), tz) cc_default A (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9*t10*t11*t12*t13*t14) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14) => P%assert end) (fun (ts: list Type) (x: t1*t2*t3*t4*t5*t6*t7*t8*t9*t10*t11*t12*t13*t14) => match x with (x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14) => Q%assert end) _ _) (at level 200, x1 at level 0, x2 at level 0, x3 at level 0, x4 at level 0, x5 at level 0, x6 at level 0, x7 at level 0, x8 at level 0, x9 at level 0, x10 at level 0, x11 at level 0, x12 at level 0, x13 at level 0, x14 at level 0, P at level 100, Q at level 100).",
            "VernacNotation",
            "2a4eca29a8aeb149da3a64b7b35f12a935a61bb6"
        ],
        [
            "Definition call_setup2' (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc ts (A: rmaps.TypeTree) Pre Post NEPre NEPost (bl: list expr) (vl : list val) (Qactuals : PTree.t _) (witness: functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec ts A) mpred) (Frame: list mpred) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qpre_temp : PTree.t _) GV' := call_setup1 cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc A Pre Post NEPre NEPost bl vl Qactuals /\\ Pre ts witness = PROPx Ppre (LOCALx Qpre (SEPx Rpre)) /\\ local2ptree Qpre = (Qpre_temp, PTree.empty _, nil, GV') /\\ ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- !! Forall (check_one_temp_spec Qactuals) (PTree.elements Qpre_temp) /\\ check_gvars_spec GV GV' /\\ fold_right_sepcon R |-- fold_right_sepcon Rpre * fold_right_sepcon Frame.",
            "VernacDefinition",
            "ddda44dc42f6f341a7a8ba9ba2833107524abc70"
        ],
        [
            "Lemma call_setup2'_i: forall (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc ts (A: rmaps.TypeTree) Pre Post NEPre NEPost (bl: list expr) (vl : list val) (Qactuals : PTree.t _) (SETUP1: call_setup1 cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc A Pre Post NEPre NEPost bl vl Qactuals) (witness': functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec ts A) mpred) (Frame: list mpred) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qpre_temp : PTree.t _) GV', Pre ts witness' = PROPx Ppre (LOCALx Qpre (SEPx Rpre)) -> local2ptree Qpre = (Qpre_temp, PTree.empty _, nil, GV') -> ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- !! Forall (check_one_temp_spec Qactuals) (PTree.elements Qpre_temp) -> check_gvars_spec GV GV' -> fold_right_sepcon R |-- fold_right_sepcon Rpre * fold_right_sepcon Frame -> call_setup2' cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc ts A Pre Post NEPre NEPost bl vl Qactuals witness' Frame Ppre Qpre Rpre Qpre_temp GV'.",
            "VernacStartTheoremProof",
            "3d62b101d1a7db34501e1f357b404e63e3d6b846"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac check_witness_type' ts A witness := (unify A (rmaps.ConstType Ridiculous); elimtype False) || let TA := constr:(functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec ts A) mpred) in let TA' := eval cbv [functors.MixVariantFunctor._functor functors.MixVariantFunctorGenerator.fpair functors.MixVariantFunctorGenerator.fconst functors.MixVariantFunctorGenerator.fidentity rmaps.dependent_type_functor_rec functors.GeneralFunctorGenerator.CovariantBiFunctor_MixVariantFunctor_compose functors.CovariantFunctorGenerator.fconst functors.CovariantFunctorGenerator.fidentity functors.CovariantBiFunctor._functor functors.CovariantBiFunctorGenerator.Fpair functors.GeneralFunctorGenerator.CovariantFunctor_MixVariantFunctor functors.CovariantFunctor._functor functors.MixVariantFunctor.fmap ] in TA in let TA'' := eval simpl in TA' in match type of witness with ?T => unify T TA'' + (fail \"Type of witness does not match type required by funspec WITH clause. Witness value: \" witness \" Witness type: \" T \" Funspec type: \" TA'') end.",
            "VernacExtend",
            "81d95d70575e4c8fd7f4ec6408ca49c5855dd010"
        ],
        [
            "Ltac prove_call_setup' ts witness := prove_call_setup1 subsume_funspec_refl; [ .. | match goal with |- call_setup1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ ?A _ _ _ _ _ _ _ -> _ => check_witness_type' ts A witness end; let H := fresh in intro H; match goal with | |- @semax ?CS _ _ _ _ _ => let Frame := fresh \"Frame\" in evar (Frame: list mpred); exploit (call_setup2'_i _ _ _ _ _ _ _ _ _ _ _ _ _ _ ts _ _ _ _ _ _ _ _ H witness Frame); clear H; simpl functors.MixVariantFunctor._functor; [ reflexivity | check_prove_local2ptree | Forall_pTree_from_elements | unfold check_gvars_spec; solve [exact I | reflexivity] | try change_compspecs CS; cancel_for_forward_call | ] end].",
            "VernacExtend",
            "ac0e9753b285f0402e278e65a970d926975fae23"
        ],
        [
            "Lemma semax_call_aux55: forall (cs: compspecs) (Qtemp: PTree.t val) (Qvar: PTree.t (type * val)) GV (a: expr) Delta P Q R fs argsig retty ts (A : rmaps.TypeTree) (Pre Post : forall ts : list Type, functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec ts (AssertTT A)) mpred) witness Frame bl Ppre Qpre Rpre Qactuals Qpre_temp GV' vl (PTREE : local2ptree Q = (Qtemp, Qvar, nil, GV)) (TC0 : ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- tc_expr Delta a) (TC1 : ENTAIL Delta, PROPx P (LOCALx Q (SEPx R)) |-- tc_exprlist Delta (argtypes argsig) bl) (MSUBST : force_list (map (msubst_eval_expr Delta Qtemp Qvar GV) (explicit_cast_exprlist (argtypes argsig) bl)) = Some vl) (PTREE'' : pTree_from_elements (combine (var_names argsig) vl) = Qactuals) (PRE1 : Pre ts witness = PROPx Ppre (LOCALx Qpre (SEPx Rpre))) (PTREE' : local2ptree Qpre = (Qpre_temp, PTree.empty _, nil, GV')) (CHECKTEMP : Forall (check_one_temp_spec Qactuals) (PTree.elements Qpre_temp)) (CHECKG: check_gvars_spec GV GV' ) (FRAME : fold_right_sepcon R |-- fold_right_sepcon Rpre * fold_right_sepcon Frame) (PPRE : fold_right_and True Ppre) (LEN : length (argtypes argsig) = length bl), ENTAIL Delta, (EX v : val, lift0 (func_ptr fs v) && local (` (eq v) (eval_expr a))) && |>PROPx P (LOCALx Q (SEPx R)) |-- |> (tc_expr Delta a && tc_exprlist Delta (argtypes argsig) bl) && (|> @liftx (Tarrow environ (LiftEnviron mpred)) (Pre ts witness) (make_args' (argsig, retty) (eval_exprlist (argtypes argsig) bl)) * ` (func_ptr' fs) (eval_expr a) * |>PROPx P (LOCALx Q (SEPx Frame))).",
            "VernacStartTheoremProof",
            "954d0a6490439b24cc2868a54dfbfa396dc9d2d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof actual_value_not_Vundef _ _ _ _ _ _ _ _ _ _ _ PTREE TC1 MSUBST as VUNDEF.",
            "VernacExtend",
            "0553f39013ff8de3366b3d6b6a0abe5cf115af9d"
        ],
        [
            "rewrite !exp_andp1.",
            "VernacExtend",
            "d03e3df9c95acbd42f9b87e292865dc6e7e40981"
        ],
        [
            "Intros v.",
            "VernacExtend",
            "0d254d7f816fb16dbeb49b3b581219516c5596e2"
        ],
        [
            "rewrite later_andp; repeat apply andp_right; auto.",
            "VernacExtend",
            "1eb2d52581f76d7e5f6555a901138401e089b378"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply derives_trans, later_derives, TC0.",
            "VernacExtend",
            "9e2171535438cec4b158a5aba193779f5b72364c"
        ],
        [
            "rewrite later_andp; apply andp_derives; [apply now_later|].",
            "VernacExtend",
            "b50b98feb84cb02850c29d972c12a66c23f02364"
        ],
        [
            "apply andp_left2, derives_refl.",
            "VernacExtend",
            "2349ae062255efd10f8e8db812463cc72bf617c1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply derives_trans, later_derives, TC1.",
            "VernacExtend",
            "97f4f74939cc14bad2b32d1c51577ef2128f253f"
        ],
        [
            "rewrite later_andp; apply andp_derives; [apply now_later|].",
            "VernacExtend",
            "b50b98feb84cb02850c29d972c12a66c23f02364"
        ],
        [
            "apply andp_left2, derives_refl.",
            "VernacExtend",
            "2349ae062255efd10f8e8db812463cc72bf617c1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite PRE1.",
            "VernacExtend",
            "a14acbf024f5e3e2cfe30b54ed312d2c53fcc668"
        ],
        [
            "match goal with |- _ |-- ?A * ?B * ?C => pull_right B end.",
            "VernacExtend",
            "eec76ad2712c16239345ab064084d228b49930f5"
        ],
        [
            "rewrite sepcon_comm.",
            "VernacExtend",
            "fd2af6f842f71517e95b56c21ef3f6449c4ad38d"
        ],
        [
            "rewrite func_ptr'_func_ptr_lifted.",
            "VernacExtend",
            "7ff3fe46b46929bf1d3a1ed6631d91f9fdfe7368"
        ],
        [
            "apply ENTAIL_trans with (`(func_ptr fs) (eval_expr a) && |>PROPx P (LOCALx Q (SEPx R))).",
            "VernacExtend",
            "ffc109456ba7abcc554c95db6aeac93ccce0d74b"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_right; [ | apply andp_left2; auto].",
            "VernacExtend",
            "e154794edee5d249def0ac1f7a38fe82486acef4"
        ],
        [
            "apply andp_left1.",
            "VernacExtend",
            "527caf3623c2439da127093a10760d6fffcc2032"
        ],
        [
            "intro rho; unfold_lift; unfold local, lift0, lift1; simpl.",
            "VernacExtend",
            "72f2f69d431369d49a19088de64e17e5f7013fcd"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "apply andp_left2; apply andp_left1; auto.",
            "VernacExtend",
            "72350d488d3ae4acb1e691fc4dfad896db03ed15"
        ],
        [
            "eapply derives_trans;[ apply andp_derives; [apply derives_refl | apply andp_left2; apply derives_refl] |].",
            "VernacExtend",
            "abfa1a3bee3216b826b87399ecbdc9d894c5e04a"
        ],
        [
            "subst Qactuals.",
            "VernacExtend",
            "95521ed49432263514cec18b6f3bbec9dee2e6be"
        ],
        [
            "clear - PTREE LEN PTREE' MSUBST FRAME PPRE CHECKTEMP CHECKG VUNDEF.",
            "VernacExtend",
            "0484c49526d975d09245d822e5c9b3604cf5b042"
        ],
        [
            "rewrite <- later_sepcon.",
            "VernacExtend",
            "112652d645af63cfb37aa1d85099e4aae8b26b99"
        ],
        [
            "progress (autorewrite with norm1 norm2).",
            "VernacExtend",
            "9dbd92b59bea4bafdccb70003e283769cf490a58"
        ],
        [
            "rewrite PROP_combine.",
            "VernacExtend",
            "aa0f3ed0dee61aca77173aa90f507435cecef784"
        ],
        [
            "rewrite (andp_comm (local (fold_right _ _ _))).",
            "VernacExtend",
            "5ce03f04ad1ad8af7749feab19b69bb5ffafc431"
        ],
        [
            "rewrite later_andp; apply andp_right.",
            "VernacExtend",
            "328d44d805b6907ac9e4f18e3773c67f6d4b8aad"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply later_derives.",
            "VernacExtend",
            "6d853a38a245ffdce956dbff7c40cd6f927fd9f9"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "apply andp_left1.",
            "VernacExtend",
            "527caf3623c2439da127093a10760d6fffcc2032"
        ],
        [
            "rewrite fold_right_and_app_low.",
            "VernacExtend",
            "a0e88f97aba8590a1334a63dbd0f983c7c8b86f2"
        ],
        [
            "apply prop_derives; intros; split; auto.",
            "VernacExtend",
            "57b03267f959a73502717abdc1339f5247fa533c"
        ],
        [
            "clear - PPRE.",
            "VernacExtend",
            "823a4a8d38ca7ebf98129996078c3166c3315db6"
        ],
        [
            "revert PPRE; induction Ppre; simpl; intuition.",
            "VernacExtend",
            "58d814ac60d2fd7db3dcffbd29c0799663b71faf"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_derives.",
            "VernacExtend",
            "f55d870b9ebb41eed6ed89dee16b7250b7cf8e31"
        ],
        [
            "apply derives_refl.",
            "VernacExtend",
            "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
        ],
        [
            "intro rho; unfold SEPx.",
            "VernacExtend",
            "89c63c25ad70505b23fb9b8cf87de6f8a8116102"
        ],
        [
            "rewrite fold_right_sepcon_app.",
            "VernacExtend",
            "ccdab8789b72da2f2964f4902618bed2be7467f8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite VUNDEF.",
            "VernacExtend",
            "89be286d2d2ef0771459b032c71b1901478d5437"
        ],
        [
            "apply (local2ptree_soundness P _ R) in PTREE.",
            "VernacExtend",
            "09f69fe9095e1612d75c7ef6bb10552f487d2e79"
        ],
        [
            "simpl app in PTREE.",
            "VernacExtend",
            "4eaaa743b8b92899733fe10313dada058bc5df02"
        ],
        [
            "apply msubst_eval_exprlist_eq with (P0:=P)(R0:=R)(GV0:=GV) in MSUBST.",
            "VernacExtend",
            "a9d24ee4d65b56808cf7e22ebd6e14438a5dd169"
        ],
        [
            "rewrite PTREE.",
            "VernacExtend",
            "c140137d3aaa0723a596ea912d41ccb4fb90e95d"
        ],
        [
            "apply later_left2.",
            "VernacExtend",
            "3f79fb8fbd966599fa5429b21f60bcd06fb14386"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "clear VUNDEF; rename H into VUNDEF.",
            "VernacExtend",
            "4ce2c54906d9487191128b9a3c59b1721a3c2995"
        ],
        [
            "apply derives_trans with (local ((` (eq vl)) (eval_exprlist (argtypes argsig) bl)) && PROPx P (LOCALx (LocalD Qtemp Qvar GV) (SEPx R))); [rewrite (add_andp _ _ MSUBST); solve_andp |].",
            "VernacExtend",
            "280c915989c200f322e7930e1c24f2cba20ac7e2"
        ],
        [
            "clear MSUBST.",
            "VernacExtend",
            "c98f53ba045a2d0d51f7f008de4c21c0574614e3"
        ],
        [
            "intro rho.",
            "VernacExtend",
            "340a6646b01296f706bfd718a4f2fa78cb01cc3b"
        ],
        [
            "apply (local2ptree_soundness nil _ (TT::nil)) in PTREE'.",
            "VernacExtend",
            "06241341847c4d19f34022ad195a2a791339908f"
        ],
        [
            "simpl app in PTREE'.",
            "VernacExtend",
            "d2c05e6d61e5e3821488afda9853384cfa38f354"
        ],
        [
            "rewrite !isolate_LOCAL_lem1 in PTREE'.",
            "VernacExtend",
            "53354df3cb5d063f68c67e936b8d65d010b80623"
        ],
        [
            "unfold local at 1, lift1.",
            "VernacExtend",
            "03e91c11912be2983feab843937473931863fbf7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply derives_extract_prop; intro.",
            "VernacExtend",
            "0148500cd04ca858045dfd7add74b2ac11ee7e67"
        ],
        [
            "unfold_lift in H.",
            "VernacExtend",
            "0a1066f59459f9c869906996c139bea7b2fb2401"
        ],
        [
            "subst vl.",
            "VernacExtend",
            "0cd9eeba032a30b2a2f8bb7ba7e3093696818aae"
        ],
        [
            "unfold PROPx, LOCALx, SEPx.",
            "VernacExtend",
            "1b5fb887355377e7dc0a92cc79eab1326b53b147"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_left1.",
            "VernacExtend",
            "527caf3623c2439da127093a10760d6fffcc2032"
        ],
        [
            "assert (LEN': length (var_names argsig) = length (eval_exprlist (argtypes argsig) bl rho)).",
            "VernacExtend",
            "f6cc832dced1f0cd79debca20ce824a37cb347ea"
        ],
        [
            "clear - LEN.",
            "VernacExtend",
            "59d81ec2f4d44153b3661e79da360d8437a1f6ac"
        ],
        [
            "revert bl LEN; induction argsig as [ | [? ?]]; destruct bl; simpl; intros; auto.",
            "VernacExtend",
            "da76c8f93f2aed87680efe38a40406f4c9f51af6"
        ],
        [
            "inv LEN.",
            "VernacExtend",
            "9759c6c06106ea93f28e0f7ee668e6730538146e"
        ],
        [
            "forget (argtypes argsig) as tys.",
            "VernacExtend",
            "d002558c4b8f46a5a92ceed53cff8b298140b95f"
        ],
        [
            "cut (local (fold_right `(and) `(True) (map locald_denote (LocalD Qtemp Qvar GV))) rho |-- `(local (fold_right `(and) `(True) (map locald_denote Qpre))) (fun rho => (make_args (var_names argsig) (eval_exprlist tys bl rho) rho)) rho).",
            "VernacExtend",
            "9b19281f9035e14dc7c94745ab4a385f4381dc59"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "eapply derives_trans; [apply H |].",
            "VernacExtend",
            "3347c43ca1169b3753f425fe9168d7ada84b8462"
        ],
        [
            "unfold make_args'.",
            "VernacExtend",
            "671fc5b2fbcecc49267953eda683854f8e57ffe8"
        ],
        [
            "simpl @fst.",
            "VernacExtend",
            "78ac36cecc4798cc1bec15bd5d4b5623d1e3c6da"
        ],
        [
            "change (map fst argsig) with (var_names argsig).",
            "VernacExtend",
            "8b58fe6bd6ef4d5fd1c33e13474eda0362ec329f"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "unfold local, lift1.",
            "VernacExtend",
            "9293e8229d66da65c139a7c415e04062e8f4c83d"
        ],
        [
            "apply prop_derives.",
            "VernacExtend",
            "3ff0669364275651d7ffd02bff091ff41292645e"
        ],
        [
            "induction Qpre; simpl; auto.",
            "VernacExtend",
            "3ee0a86344d7e82da9fa2e4fac6589c3951e1be9"
        ],
        [
            "intros [? ?].",
            "VernacExtend",
            "103d05a036b9ac75a805207998e1c61f7a0137bb"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite PTREE'.",
            "VernacExtend",
            "e7e583a636054985a72579ffda5a4bebce6e66e1"
        ],
        [
            "clear PTREE' Qpre.",
            "VernacExtend",
            "c25b0fd2ec2f0a0f8ce6dc973925d60c11f909af"
        ],
        [
            "apply prop_derives; intro.",
            "VernacExtend",
            "a99602a91578e54a6d4421cc45f724c701b37eec"
        ],
        [
            "forget (var_names argsig) as fl.",
            "VernacExtend",
            "25caa19a7ef63f616bed786551066411321cba26"
        ],
        [
            "forget (eval_exprlist tys bl rho) as vl.",
            "VernacExtend",
            "7f69de30fbd433d39deb51f7cf6640e7e270a90e"
        ],
        [
            "eapply check_specs_lemma; try eassumption.",
            "VernacExtend",
            "01434df3811e08d0734af0950e4d4fa5c004cef3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_id00_wow: forall (cs: compspecs) Qtemp Qvar a GV Delta P Q R R' fs argsig retty cc ts (A: rmaps.TypeTree) Pre Post NEPre NEPost (witness: functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec ts A) mpred) (Frame: list mpred) (bl: list expr) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qactuals Qpre_temp : PTree.t _) GV' (vl : list val) (SETUP: call_setup2' cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc ts A Pre Post NEPre NEPost bl vl Qactuals witness Frame Ppre Qpre Rpre Qpre_temp GV') Espec (Post2: environ -> mpred) (B: Type) (Ppost: B -> list Prop) (Rpost: B -> list mpred) (RETTY: retty = Tvoid) (POST1: Post ts witness = (EX vret:B, PROPx (Ppost vret) (LOCALx nil (SEPx (Rpost vret))))) (POST2: Post2 = EX vret:B, PROPx (P++ Ppost vret ) (LOCALx Q (SEPx (Rpost vret ++ Frame)))) (PPRE: fold_right_and True Ppre), @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R'))) (Scall None a bl) (normal_ret_assert Post2).",
            "VernacStartTheoremProof",
            "7877bc976f91193001b44c1cf460150d4f2ac8fe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct SETUP as [[PTREE [Hsub [SPEC [HR' [ATY [TC0 [TC1 [MSUBST PTREE'']]]]]]]] [PRE1 [PTREE' [CHECKTEMP [CHECKG FRAME]]]]].",
            "VernacExtend",
            "5752ed7c6bfb0257ed80c33f83f025496376c9de"
        ],
        [
            "apply SPEC.",
            "VernacExtend",
            "b1cf91919c67ef6efb51c215e230bb5f955d2dfe"
        ],
        [
            "clear SPEC.",
            "VernacExtend",
            "2ec2c5864a0a5c68ce44d75bff7001971e17e04a"
        ],
        [
            "eapply semax_pre; [apply andp_right; [apply andp_left2, andp_left1, derives_refl|]|].",
            "VernacExtend",
            "51d920b53d3fb8c8c8a86e686861b13f3b22b19c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- andp_assoc, andp_comm.",
            "VernacExtend",
            "9263610a933a683f718818c1fe62794c635252bd"
        ],
        [
            "rewrite <- andp_assoc; apply andp_left1.",
            "VernacExtend",
            "7faa6f707be80867354643930fe6e3e4328d495f"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply derives_trans; [apply andp_derives, HR'; apply derives_refl|].",
            "VernacExtend",
            "91ec0e1723199a4bf7c085db5ed8c4a172aa45ab"
        ],
        [
            "apply later_left2.",
            "VernacExtend",
            "3f79fb8fbd966599fa5429b21f60bcd06fb14386"
        ],
        [
            "apply andp_right, andp_left2, derives_refl.",
            "VernacExtend",
            "2af217862abedb5829a83d437e40de609926a2eb"
        ],
        [
            "apply andp_right, CHECKTEMP.",
            "VernacExtend",
            "741174c017efd0885513f5ad61f7aae88fa8975e"
        ],
        [
            "eapply derives_trans, tc_exprlist_len; apply TC1.",
            "VernacExtend",
            "6bc7c81580e14f4ccf160b29305aeafb35f3334c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite later_andp, andp_comm, andp_assoc.",
            "VernacExtend",
            "a5f970ec32c2422ae7407158387968a2f6e63677"
        ],
        [
            "rewrite <- !prop_and.",
            "VernacExtend",
            "feb9bd4db9ee0d2520b40366558461b9ebfc903d"
        ],
        [
            "apply semax_extract_later_prop; intros [].",
            "VernacExtend",
            "cb2d5893c463edeed7b0aa175d2c6b9de2fa43e5"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply semax_pre_post' ; [ | | apply (@semax_call0 Espec cs Delta fs A Pre Post NEPre NEPost ts witness argsig retty cc a bl P Q Frame); auto].",
            "VernacExtend",
            "1c391b72b94a6cd87fd86b59611be84afaa33557"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply semax_call_aux55; eauto.",
            "VernacExtend",
            "1f31f8c514dc776fc8ef3be06c9c4cab628f7d4b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "clear CHECKTEMP TC1 PRE1 PPRE.",
            "VernacExtend",
            "fe77b4a26de2072ce1464e7ac84fb34c50571c7d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite POST1; clear POST1.",
            "VernacExtend",
            "c873e32800bb97ee49bf0feaf18b27646016bbd4"
        ],
        [
            "unfold ifvoid.",
            "VernacExtend",
            "e04e60b223cef5675b5ce8707253d6d25eff356d"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply exp_right with x.",
            "VernacExtend",
            "4cdb0700a335441429b2901b4a236f41d452acab"
        ],
        [
            "rewrite fold_right_and_app_low.",
            "VernacExtend",
            "a0e88f97aba8590a1334a63dbd0f983c7c8b86f2"
        ],
        [
            "rewrite fold_right_sepcon_app.",
            "VernacExtend",
            "ccdab8789b72da2f2964f4902618bed2be7467f8"
        ],
        [
            "apply andp_right.",
            "VernacExtend",
            "614688b80ee6a44f752e79383d4234d6d5dfcee8"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_id1_wow: forall (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc ts (A: rmaps.TypeTree) Pre Post NEPre NEPost (witness: functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec ts A) mpred) (Frame: list mpred) (bl: list expr) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qactuals Qpre_temp : PTree.t _) GV' (vl : list val) (SETUP: call_setup2' cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc ts A Pre Post NEPre NEPost bl vl Qactuals witness Frame Ppre Qpre Rpre Qpre_temp GV') ret (Post2: environ -> mpred) (Qnew: list localdef) (B: Type) (Ppost: B -> list Prop) (F: B -> val) (Rpost: B -> list mpred) Espec (TYret: typeof_temp Delta ret = Some retty) (OKretty: check_retty retty) (POST1: Post ts witness = EX vret:B, PROPx (Ppost vret) (LOCALx (temp ret_temp (F vret) :: nil) (SEPx (Rpost vret)))) (DELETE: remove_localdef_temp ret Q = Qnew) (H0: Post2 = EX vret:B, PROPx (P++ Ppost vret) (LOCALx (temp ret (F vret) :: Qnew) (SEPx (Rpost vret ++ Frame)))) (PPRE: fold_right_and True Ppre), @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R'))) (Scall (Some ret) a bl) (normal_ret_assert Post2).",
            "VernacStartTheoremProof",
            "d25e3ebe98f3735592329ef878fc4f9f41477c4d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct SETUP as [[PTREE [Hsub [SPEC [HR' [ATY [TC0 [TC1 [MSUBST PTREE'']]]]]]]] [PRE1 [PTREE' [CHECKTEMP [CHECKG FRAME]]]]].",
            "VernacExtend",
            "5752ed7c6bfb0257ed80c33f83f025496376c9de"
        ],
        [
            "apply SPEC.",
            "VernacExtend",
            "b1cf91919c67ef6efb51c215e230bb5f955d2dfe"
        ],
        [
            "clear SPEC.",
            "VernacExtend",
            "2ec2c5864a0a5c68ce44d75bff7001971e17e04a"
        ],
        [
            "eapply semax_pre; [apply andp_right; [apply andp_left2, andp_left1, derives_refl|]|].",
            "VernacExtend",
            "51d920b53d3fb8c8c8a86e686861b13f3b22b19c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- andp_assoc, andp_comm.",
            "VernacExtend",
            "9263610a933a683f718818c1fe62794c635252bd"
        ],
        [
            "rewrite <- andp_assoc; apply andp_left1.",
            "VernacExtend",
            "7faa6f707be80867354643930fe6e3e4328d495f"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply derives_trans; [apply andp_derives, HR'; apply derives_refl|].",
            "VernacExtend",
            "91ec0e1723199a4bf7c085db5ed8c4a172aa45ab"
        ],
        [
            "apply later_left2.",
            "VernacExtend",
            "3f79fb8fbd966599fa5429b21f60bcd06fb14386"
        ],
        [
            "apply andp_right, andp_left2, derives_refl.",
            "VernacExtend",
            "2af217862abedb5829a83d437e40de609926a2eb"
        ],
        [
            "apply andp_right, CHECKTEMP.",
            "VernacExtend",
            "741174c017efd0885513f5ad61f7aae88fa8975e"
        ],
        [
            "eapply derives_trans, tc_exprlist_len; apply TC1.",
            "VernacExtend",
            "6bc7c81580e14f4ccf160b29305aeafb35f3334c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite later_andp, andp_comm, andp_assoc.",
            "VernacExtend",
            "a5f970ec32c2422ae7407158387968a2f6e63677"
        ],
        [
            "rewrite <- !prop_and.",
            "VernacExtend",
            "feb9bd4db9ee0d2520b40366558461b9ebfc903d"
        ],
        [
            "apply semax_extract_later_prop; intros [].",
            "VernacExtend",
            "cb2d5893c463edeed7b0aa175d2c6b9de2fa43e5"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply semax_pre_post'; [ | | apply (@semax_call1 Espec cs Delta fs A Pre Post NEPre NEPost ts witness ret argsig retty cc a bl P Q Frame); auto]; [ | | clear - OKretty; destruct retty; inv OKretty; apply I | hnf; clear - TYret; unfold typeof_temp in TYret; destruct ((temp_types Delta) ! ret); inv TYret; auto ].",
            "VernacExtend",
            "0e20b26dd467f26cac00241ef9a761f495cab8b8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply semax_call_aux55; eauto.",
            "VernacExtend",
            "1f31f8c514dc776fc8ef3be06c9c4cab628f7d4b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "clear CHECKTEMP TC1 PRE1 PPRE.",
            "VernacExtend",
            "fe77b4a26de2072ce1464e7ac84fb34c50571c7d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite POST1; clear POST1.",
            "VernacExtend",
            "c873e32800bb97ee49bf0feaf18b27646016bbd4"
        ],
        [
            "apply derives_trans with (EX vret : B, `(PROPx (Ppost vret) (LOCAL (temp ret_temp (F vret)) (SEPx (Rpost vret))))%assert (get_result1 ret) * (local (tc_environ Delta) && PROPx P (LOCALx (remove_localdef_temp ret Q) (SEPx Frame)))).",
            "VernacExtend",
            "5e1ca5d6bfdc33a776132cdc07e8a0a02329c4c1"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply exp_right with x; normalize.",
            "VernacExtend",
            "68c7f075a25c0037bd56f4bd1b633b68ff47204b"
        ],
        [
            "apply exp_left; intro vret.",
            "VernacExtend",
            "004e2582f179c1406cdb8011122ebd70f5daacff"
        ],
        [
            "apply exp_right with vret.",
            "VernacExtend",
            "89ed0a6fd33b57c3b158be84317a86454a991650"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "progress (autorewrite with norm1 norm2); normalize.",
            "VernacExtend",
            "dbcb729f7a8a98e3a403282bb09a94f0acc25898"
        ],
        [
            "rewrite PROP_combine.",
            "VernacExtend",
            "aa0f3ed0dee61aca77173aa90f507435cecef784"
        ],
        [
            "unfold fold_right.",
            "VernacExtend",
            "ab40f2cde00ad2f478c43d09492235dd57337224"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "repeat apply andp_right; try apply prop_right; auto.",
            "VernacExtend",
            "11c38b7b31f629cf63627d5040459243367675b7"
        ],
        [
            "rewrite !fold_right_and_app_low.",
            "VernacExtend",
            "5bc8332078cba85c65bb3093fb4a60e014558177"
        ],
        [
            "rewrite !fold_right_and_app_low in H4.",
            "VernacExtend",
            "666f8fd97fc0e7e734e09c764073d2ac40e7ab06"
        ],
        [
            "destruct H4; split; auto.",
            "VernacExtend",
            "a0a01892cba558914f21ac4adffcc11ce29d0338"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_id1_x_wow: forall (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty' cc ts (A: rmaps.TypeTree) Pre Post NEPre NEPost (witness: functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec ts A) mpred) (Frame: list mpred) (bl: list expr) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qactuals Qpre_temp : PTree.t _) GV' (vl : list val) (SETUP: call_setup2' cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty' cc ts A Pre Post NEPre NEPost bl vl Qactuals witness Frame Ppre Qpre Rpre Qpre_temp GV') retty Espec ret ret' (Post2: environ -> mpred) (Qnew: list localdef) (B: Type) (Ppost: B -> list Prop) (F: B -> val) (Rpost: B -> list mpred) (TYret: typeof_temp Delta ret = Some retty) (RETinit: (temp_types Delta) ! ret' = Some retty') (OKretty: check_retty retty) (OKretty': check_retty retty') (NEUTRAL: is_neutral_cast retty' retty = true) (NEret: ret <> ret') (POST1: Post ts witness = EX vret:B, PROPx (Ppost vret) (LOCALx (temp ret_temp (F vret) :: nil) (SEPx (Rpost vret)))) (DELETE: remove_localdef_temp ret Q = Qnew) (DELETE' : remove_localdef_temp ret' Q = Q) (H0: Post2 = EX vret:B, PROPx (P++ Ppost vret) (LOCALx (temp ret (F vret) :: Qnew) (SEPx (Rpost vret ++ Frame)))) (PPRE: fold_right_and True Ppre), @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R'))) (Ssequence (Scall (Some ret') a bl) (Sset ret (Ecast (Etempvar ret' retty') retty))) (normal_ret_assert Post2).",
            "VernacStartTheoremProof",
            "3957518b05e02b92ae12f69272b6db988b198f9a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_seq'.",
            "VernacExtend",
            "52d1505f64ada039b29687938bff954565c3eb15"
        ],
        [
            "eapply semax_call_id1_wow; try eassumption; auto.",
            "VernacExtend",
            "b1b3796d145bfe928b0e65033776034dd9e36854"
        ],
        [
            "unfold typeof_temp; rewrite RETinit; reflexivity.",
            "VernacExtend",
            "fd8dca89b9e8a2892244f9e3b549b42e2e364716"
        ],
        [
            "apply extract_exists_pre; intro vret.",
            "VernacExtend",
            "b3f3f38ea0beb5597e853b793fa0c903fc4fdf6b"
        ],
        [
            "eapply semax_pre_post'; [ | | apply semax_set_forward].",
            "VernacExtend",
            "b709f0b7b7307b5564f4508a5539d00d54b5048c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply derives_trans; [ | apply now_later ].",
            "VernacExtend",
            "9a71d4b56ef0714bd682ee6d36e7f41baba3bd6c"
        ],
        [
            "instantiate (1:= (PROPx (P ++ Ppost vret) (LOCALx (temp ret' (F vret) :: Qnew) (SEPx (Rpost vret ++ Frame))))).",
            "VernacExtend",
            "dbc991d2994598699e53e810131e85a4cebefccd"
        ],
        [
            "apply andp_right; [apply andp_right |].",
            "VernacExtend",
            "050c204782076224de217d7cc77f390addb9b2b3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold tc_expr.",
            "VernacExtend",
            "12dc66c97196b373cb3844e16b07a3663bdc69a9"
        ],
        [
            "simpl typecheck_expr.",
            "VernacExtend",
            "bf3111365b3bfb5d46d055333ecd013a2357132a"
        ],
        [
            "rewrite RETinit.",
            "VernacExtend",
            "4494d1a8fb97a643bf42f5656bf48f91b3f4e46b"
        ],
        [
            "simpl @fst.",
            "VernacExtend",
            "78ac36cecc4798cc1bec15bd5d4b5623d1e3c6da"
        ],
        [
            "replace ((is_neutral_cast retty' retty' || same_base_type retty' retty')%bool) with true by (clear- OKretty'; destruct retty' as [ | [ | | |] [| ]| [|] | [ | ] | | | | | ]; try contradiction; unfold is_neutral_cast; rewrite ?eqb_type_refl; reflexivity).",
            "VernacExtend",
            "85fdf6f87ef3e9fbeedc769a4d69bf32c1f5b3b5"
        ],
        [
            "rewrite denote_tc_assert_andp.",
            "VernacExtend",
            "691fd8a4c0b5ae56aebbf46da7865699ac3983c3"
        ],
        [
            "apply andp_right; [| intros rho; apply neutral_isCastResultType; auto].",
            "VernacExtend",
            "3dd1fb06ef5de3cb4df4bf6e7decb629e572ee61"
        ],
        [
            "apply PQR_denote_tc_initialized; auto.",
            "VernacExtend",
            "8764fb634bf3266a2389030bd3ad2d2e0864e4d3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold tc_temp_id, typecheck_temp_id.",
            "VernacExtend",
            "9a1c9b4aeb189870f8d31090621220c4c8048304"
        ],
        [
            "unfold typeof_temp in TYret.",
            "VernacExtend",
            "7ba4ad41d8d1bce9443d1b24ae9eb84962f62414"
        ],
        [
            "destruct ((temp_types Delta) ! ret); inversion TYret; clear TYret; try subst t.",
            "VernacExtend",
            "d1e5c75fd3b6cfce04ccb01ac38cf8a5256eada5"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "repeat rewrite denote_tc_assert_andp; simpl.",
            "VernacExtend",
            "0e5a0a44fdd2d6382ff3eefe80b537f0c91b6597"
        ],
        [
            "rewrite denote_tc_assert_bool.",
            "VernacExtend",
            "6be39b0ac0c853286729729b2f982511bc46e369"
        ],
        [
            "assert (is_neutral_cast (implicit_deref retty) retty = true).",
            "VernacExtend",
            "db67c75bf9d78d77c23f3c3fedc8b2c6f01c0ecb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct retty as [ | [ | | |] [| ]| [|] | [ | ] | | | | | ]; try contradiction; try reflexivity; destruct retty' as [ | [ | | |] [| ]| [|] | [ | ] | | | | | ]; try contradiction; try solve [inv NEUTRAL].",
            "VernacExtend",
            "1cc6b373efac2a3d6bd3604e2f71d9b7ba28a9ae"
        ],
        [
            "unfold implicit_deref, is_neutral_cast.",
            "VernacExtend",
            "458703a5dbc3f91ed093b9f843519c78d9dc9408"
        ],
        [
            "rewrite eqb_type_refl; reflexivity.",
            "VernacExtend",
            "2dde83d8fbf671b78e7dcf2e9438cc843597fe6a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "simpl; apply andp_right.",
            "VernacExtend",
            "e388254c440fab1e950a2add4e5665476b884c89"
        ],
        [
            "apply prop_right; auto.",
            "VernacExtend",
            "95e18efadb5767545f0255f518eaa92b08876b58"
        ],
        [
            "apply neutral_isCastResultType; auto.",
            "VernacExtend",
            "c8ff5767aa4e6d5ceaa3f42a7ce4a6db335134ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- !insert_local.",
            "VernacExtend",
            "33e6c00aa000bf0144e5b0b89f5ab2cc9e39ccd0"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "subst Qnew; apply derives_remove_localdef_PQR.",
            "VernacExtend",
            "dfc29c19f7b31f29ddea10953a5ba7f1c548dac0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst Post2.",
            "VernacExtend",
            "15eee87dbe464e1a34c903005e80ce470786a3af"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply exp_right with vret; normalize.",
            "VernacExtend",
            "759ade066020457dd8e1951af4c3148313d86fc0"
        ],
        [
            "rewrite <- !insert_local.",
            "VernacExtend",
            "33e6c00aa000bf0144e5b0b89f5ab2cc9e39ccd0"
        ],
        [
            "autorewrite with subst.",
            "VernacExtend",
            "a0a7cc51d36fa0a311954515c238f15599d651bc"
        ],
        [
            "rewrite <- !andp_assoc.",
            "VernacExtend",
            "c5054dc7db48721dcca908810895940ad495a85d"
        ],
        [
            "apply andp_derives; [| subst Qnew; apply subst_remove_localdef_PQR].",
            "VernacExtend",
            "47c0b7142eb85dadf33c1aa2bd49682b3c92e532"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "assert (eqb_ident ret ret' = false) by (clear - NEret; pose proof (eqb_ident_spec ret ret'); destruct (eqb_ident ret ret'); auto; contradiction NEret; intuition).",
            "VernacExtend",
            "faee5d35ae37ce7ed114b629b1409224ec69d333"
        ],
        [
            "rewrite H3 in *.",
            "VernacExtend",
            "05c6ecd2c6487293634aa6b851ba93e6eebc5724"
        ],
        [
            "apply Pos.eqb_neq in H3.",
            "VernacExtend",
            "fd63dc03f903d643c7b4d917f067345e96807024"
        ],
        [
            "unfold_lift in H0.",
            "VernacExtend",
            "abcdd845830d2228c19fdd81165fc3be5217cf0a"
        ],
        [
            "assert (tc_val retty' (eval_id ret' rho)) by (eapply tc_eval'_id_i; try eassumption; congruence).",
            "VernacExtend",
            "c67fd5a8c7bab7337beba27a130e1cd206cacbfc"
        ],
        [
            "assert (H7 := expr2.neutral_cast_lemma); unfold eval_cast in H7.",
            "VernacExtend",
            "06704313fbbbd1e07bce412e29309d08f0c92c22"
        ],
        [
            "rewrite H7 in H0 by auto; clear H7.",
            "VernacExtend",
            "aa7fe454677732eeab5e4a8ed5552954763292d7"
        ],
        [
            "split; congruence.",
            "VernacExtend",
            "7f007b5ce3732856c1deed66b0edcc61cdb7f2d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_id1_y_wow: forall (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty' cc ts (A: rmaps.TypeTree) Pre Post NEPre NEPost (witness: functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec ts A) mpred) (Frame: list mpred) (bl: list expr) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qactuals Qpre_temp : PTree.t _) GV' (vl : list val) (SETUP: call_setup2' cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty' cc ts A Pre Post NEPre NEPost bl vl Qactuals witness Frame Ppre Qpre Rpre Qpre_temp GV') Espec ret ret' (retty: type) (Post2: environ -> mpred) (Qnew: list localdef) (B: Type) (Ppost: B -> list Prop) (F: B -> val) (Rpost: B -> list mpred) (TYret: typeof_temp Delta ret = Some retty) (RETinit: (temp_types Delta) ! ret' = Some retty') (OKretty: check_retty retty) (OKretty': check_retty retty') (NEUTRAL: is_neutral_cast retty' retty = true) (NEret: ret <> ret') (POST1: Post ts witness = EX vret:B, PROPx (Ppost vret) (LOCALx (temp ret_temp (F vret) :: nil) (SEPx (Rpost vret)))) (DELETE: remove_localdef_temp ret Q = Qnew) (DELETE' : remove_localdef_temp ret' Q = Q) (H0: Post2 = EX vret:B, PROPx (P++ Ppost vret) (LOCALx (temp ret (F vret) :: Qnew) (SEPx (Rpost vret ++ Frame)))) (PPRE: fold_right_and True Ppre), @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R'))) (Ssequence (Scall (Some ret') a bl) (Sset ret (Etempvar ret' retty'))) (normal_ret_assert Post2).",
            "VernacStartTheoremProof",
            "9eefe4e5e1460b675f1ebd1ac2f6d4cf0830ee70"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply semax_seq'.",
            "VernacExtend",
            "52d1505f64ada039b29687938bff954565c3eb15"
        ],
        [
            "eapply semax_call_id1_wow; try eassumption; auto; unfold typeof_temp; rewrite RETinit; reflexivity.",
            "VernacExtend",
            "d1b1d58c653a4944d968bba6f6ac397aed4ac6fc"
        ],
        [
            "apply extract_exists_pre; intro vret.",
            "VernacExtend",
            "b3f3f38ea0beb5597e853b793fa0c903fc4fdf6b"
        ],
        [
            "eapply semax_pre_post'; [ | | apply semax_set_forward].",
            "VernacExtend",
            "b709f0b7b7307b5564f4508a5539d00d54b5048c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply derives_trans; [ | apply now_later ].",
            "VernacExtend",
            "9a71d4b56ef0714bd682ee6d36e7f41baba3bd6c"
        ],
        [
            "instantiate (1:= (PROPx (P ++ Ppost vret) (LOCALx (temp ret' (F vret) :: Qnew) (SEPx (Rpost vret ++ Frame))))).",
            "VernacExtend",
            "dbc991d2994598699e53e810131e85a4cebefccd"
        ],
        [
            "apply andp_right; [apply andp_right |].",
            "VernacExtend",
            "050c204782076224de217d7cc77f390addb9b2b3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold tc_expr.",
            "VernacExtend",
            "12dc66c97196b373cb3844e16b07a3663bdc69a9"
        ],
        [
            "match goal with |- _ |-- ?A => set (aa:=A); unfold denote_tc_assert in aa; simpl in aa; subst aa end.",
            "VernacExtend",
            "9a85407dcfcd6b64844b90087f77f8dc22c135b4"
        ],
        [
            "rewrite RETinit.",
            "VernacExtend",
            "4494d1a8fb97a643bf42f5656bf48f91b3f4e46b"
        ],
        [
            "simpl @fst.",
            "VernacExtend",
            "78ac36cecc4798cc1bec15bd5d4b5623d1e3c6da"
        ],
        [
            "replace ((is_neutral_cast retty' retty' || same_base_type retty' retty')%bool) with true by (clear- OKretty'; destruct retty' as [ | [ | | |] [| ]| [|] | [ | ] | | | | | ]; try contradiction; unfold is_neutral_cast; rewrite ?eqb_type_refl; reflexivity).",
            "VernacExtend",
            "85fdf6f87ef3e9fbeedc769a4d69bf32c1f5b3b5"
        ],
        [
            "simpl @snd.",
            "VernacExtend",
            "d887e1ab056d16793c772721e2bfe3c034fb79f2"
        ],
        [
            "cbv iota.",
            "VernacExtend",
            "0b4f348f85826bd21feb3586a4bec6babf00a5cd"
        ],
        [
            "apply PQR_denote_tc_initialized; auto.",
            "VernacExtend",
            "8764fb634bf3266a2389030bd3ad2d2e0864e4d3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold tc_temp_id, typecheck_temp_id.",
            "VernacExtend",
            "9a1c9b4aeb189870f8d31090621220c4c8048304"
        ],
        [
            "unfold typeof_temp in TYret.",
            "VernacExtend",
            "7ba4ad41d8d1bce9443d1b24ae9eb84962f62414"
        ],
        [
            "destruct ((temp_types Delta) ! ret); inversion TYret; clear TYret; try subst t.",
            "VernacExtend",
            "d1e5c75fd3b6cfce04ccb01ac38cf8a5256eada5"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "repeat rewrite denote_tc_assert_andp; simpl.",
            "VernacExtend",
            "0e5a0a44fdd2d6382ff3eefe80b537f0c91b6597"
        ],
        [
            "rewrite denote_tc_assert_bool.",
            "VernacExtend",
            "6be39b0ac0c853286729729b2f982511bc46e369"
        ],
        [
            "assert (is_neutral_cast (implicit_deref retty') retty = true).",
            "VernacExtend",
            "1a3227548b2ea38099b501315feda81dc1aa3310"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "replace (implicit_deref retty') with retty' by (destruct retty' as [ | [ | | |] [| ]| [|] | [ | ] | | | | | ]; try contradiction; reflexivity).",
            "VernacExtend",
            "9701e81f76fae61f2ae253cc47297e7143b4f535"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl; apply andp_right.",
            "VernacExtend",
            "e388254c440fab1e950a2add4e5665476b884c89"
        ],
        [
            "apply prop_right; auto.",
            "VernacExtend",
            "95e18efadb5767545f0255f518eaa92b08876b58"
        ],
        [
            "apply neutral_isCastResultType; auto.",
            "VernacExtend",
            "c8ff5767aa4e6d5ceaa3f42a7ce4a6db335134ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- !insert_local.",
            "VernacExtend",
            "33e6c00aa000bf0144e5b0b89f5ab2cc9e39ccd0"
        ],
        [
            "apply andp_left2.",
            "VernacExtend",
            "3da478e31ab10133b2816f729b2ec71358922e85"
        ],
        [
            "apply andp_derives; auto.",
            "VernacExtend",
            "06fb2d3c3b4119d09c1ccf6848327e268da1e098"
        ],
        [
            "subst Qnew; apply derives_remove_localdef_PQR.",
            "VernacExtend",
            "dfc29c19f7b31f29ddea10953a5ba7f1c548dac0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst Post2.",
            "VernacExtend",
            "15eee87dbe464e1a34c903005e80ce470786a3af"
        ],
        [
            "unfold normal_ret_assert.",
            "VernacExtend",
            "5872edfef289d88c4df30366a6ecbc814d29d068"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply exp_right with vret; normalize.",
            "VernacExtend",
            "759ade066020457dd8e1951af4c3148313d86fc0"
        ],
        [
            "rewrite <- !insert_local.",
            "VernacExtend",
            "33e6c00aa000bf0144e5b0b89f5ab2cc9e39ccd0"
        ],
        [
            "autorewrite with subst.",
            "VernacExtend",
            "a0a7cc51d36fa0a311954515c238f15599d651bc"
        ],
        [
            "rewrite <- !andp_assoc.",
            "VernacExtend",
            "c5054dc7db48721dcca908810895940ad495a85d"
        ],
        [
            "apply andp_derives; [| subst Qnew; apply subst_remove_localdef_PQR].",
            "VernacExtend",
            "47c0b7142eb85dadf33c1aa2bd49682b3c92e532"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "assert (eqb_ident ret ret' = false) by (clear - NEret; pose proof (eqb_ident_spec ret ret'); destruct (eqb_ident ret ret'); auto; contradiction NEret; intuition).",
            "VernacExtend",
            "faee5d35ae37ce7ed114b629b1409224ec69d333"
        ],
        [
            "rewrite H3 in *.",
            "VernacExtend",
            "05c6ecd2c6487293634aa6b851ba93e6eebc5724"
        ],
        [
            "apply Pos.eqb_neq in H3.",
            "VernacExtend",
            "fd63dc03f903d643c7b4d917f067345e96807024"
        ],
        [
            "split; congruence.",
            "VernacExtend",
            "7f007b5ce3732856c1deed66b0edcc61cdb7f2d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semax_call_id01_wow: forall (cs: compspecs) Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc ts (A: rmaps.TypeTree) Pre Post NEPre NEPost (witness: functors.MixVariantFunctor._functor (rmaps.dependent_type_functor_rec ts A) mpred) (Frame: list mpred) (bl: list expr) (Ppre: list Prop) (Qpre : list localdef) (Rpre: list mpred) (Qactuals Qpre_temp : PTree.t _) GV' (vl : list val) (SETUP: call_setup2' cs Qtemp Qvar GV a Delta P Q R R' fs argsig retty cc ts A Pre Post NEPre NEPost bl vl Qactuals witness Frame Ppre Qpre Rpre Qpre_temp GV') Espec (Post2: environ -> mpred) (B: Type) (Ppost: B -> list Prop) (F: B -> val) (Rpost: B -> list mpred) (_: check_retty retty) (POST1: Post ts witness = EX vret:B, PROPx (Ppost vret) (LOCALx (temp ret_temp (F vret) :: nil) (SEPx (Rpost vret)))) (POST2: Post2 = EX vret:B, PROPx (P++ Ppost vret) (LOCALx Q (SEPx (Rpost vret ++ Frame)))) (PPRE: fold_right_and True Ppre), @semax cs Espec Delta (PROPx P (LOCALx Q (SEPx R'))) (Scall None a bl) (normal_ret_assert Post2).",
            "VernacStartTheoremProof",
            "c8f033a063176e70843465657df0ae0885fc7bd8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct SETUP as [[PTREE [Hsub [SPEC [HR' [ATY [TC0 [TC1 [MSUBST PTREE'']]]]]]]] [PRE1 [PTREE' [CHECKTEMP [CHECKG FRAME]]]]].",
            "VernacExtend",
            "5752ed7c6bfb0257ed80c33f83f025496376c9de"
        ],
        [
            "apply SPEC.",
            "VernacExtend",
            "b1cf91919c67ef6efb51c215e230bb5f955d2dfe"
        ],
        [
            "clear SPEC.",
            "VernacExtend",
            "2ec2c5864a0a5c68ce44d75bff7001971e17e04a"
        ],
        [
            "eapply semax_pre; [apply andp_right; [apply andp_left2, andp_left1, derives_refl|]|].",
            "VernacExtend",
            "51d920b53d3fb8c8c8a86e686861b13f3b22b19c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- andp_assoc, andp_comm.",
            "VernacExtend",
            "9263610a933a683f718818c1fe62794c635252bd"
        ],
        [
            "rewrite <- andp_assoc; apply andp_left1.",
            "VernacExtend",
            "7faa6f707be80867354643930fe6e3e4328d495f"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply derives_trans; [apply andp_derives, HR'; apply derives_refl|].",
            "VernacExtend",
            "91ec0e1723199a4bf7c085db5ed8c4a172aa45ab"
        ],
        [
            "apply later_left2.",
            "VernacExtend",
            "3f79fb8fbd966599fa5429b21f60bcd06fb14386"
        ],
        [
            "apply andp_right, andp_left2, derives_refl.",
            "VernacExtend",
            "2af217862abedb5829a83d437e40de609926a2eb"
        ],
        [
            "apply andp_right, CHECKTEMP.",
            "VernacExtend",
            "741174c017efd0885513f5ad61f7aae88fa8975e"
        ],
        [
            "eapply derives_trans, tc_exprlist_len; apply TC1.",
            "VernacExtend",
            "6bc7c81580e14f4ccf160b29305aeafb35f3334c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite later_andp, andp_comm, andp_assoc.",
            "VernacExtend",
            "a5f970ec32c2422ae7407158387968a2f6e63677"
        ],
        [
            "rewrite <- !prop_and.",
            "VernacExtend",
            "feb9bd4db9ee0d2520b40366558461b9ebfc903d"
        ],
        [
            "apply semax_extract_later_prop; intros [].",
            "VernacExtend",
            "cb2d5893c463edeed7b0aa175d2c6b9de2fa43e5"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "eapply semax_pre_post'; [ | | apply semax_call0 with (fs:=fs)(cc:=cc)(A:= A) (ts := ts)(x:=witness) (P:=P)(Q:=Q)(NEPre :=NEPre) (NEPost := NEPost)(R := Frame); auto ]; try eassumption.",
            "VernacExtend",
            "8dd4e00b06bc2ca85775dc47c6e8ca1c0d050473"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "eapply semax_call_aux55; eauto.",
            "VernacExtend",
            "1f31f8c514dc776fc8ef3be06c9c4cab628f7d4b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "clear CHECKTEMP TC1 PRE1 PPRE.",
            "VernacExtend",
            "fe77b4a26de2072ce1464e7ac84fb34c50571c7d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "rewrite POST1; clear POST1.",
            "VernacExtend",
            "c873e32800bb97ee49bf0feaf18b27646016bbd4"
        ],
        [
            "match goal with |- context [ifvoid retty ?A ?B] => replace (ifvoid retty A B) with B by (destruct retty; try contradiction; auto) end.",
            "VernacExtend",
            "216e584b2d749e1273c261029d716ff813bece7d"
        ],
        [
            "go_lowerx.",
            "VernacExtend",
            "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply exp_right with x0; normalize.",
            "VernacExtend",
            "7b22c47d32f596900a9453796941afc270f5b788"
        ],
        [
            "apply andp_right; auto.",
            "VernacExtend",
            "01f8426ca1b47d5761359bf895b36d1c0819cd3d"
        ],
        [
            "apply prop_right.",
            "VernacExtend",
            "951daa52f148695942d4aefc563d5e92d8ec02ff"
        ],
        [
            "rewrite fold_right_and_app_low.",
            "VernacExtend",
            "a0e88f97aba8590a1334a63dbd0f983c7c8b86f2"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rename x0 into vret.",
            "VernacExtend",
            "9c698aaae4f6599b3ff251c2215d6e6d4ca6b050"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "rewrite fold_right_sepcon_app.",
            "VernacExtend",
            "ccdab8789b72da2f2964f4902618bed2be7467f8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac forward_call_id1_wow' := let H := fresh in intro H; eapply (semax_call_id1_wow _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H); clear H; lazymatch goal with Frame := _ : list mpred |- _ => try clear Frame end; [check_result_type |apply Logic.I | cbv beta iota zeta; unfold_post; extensionality rho; repeat rewrite exp_uncurry; try rewrite no_post_exists; repeat rewrite exp_unfold; first [apply exp_congr; intros ?vret; reflexivity | give_EX_warning ] | prove_delete_temp | unify_postcondition_exps | unfold fold_right_and; repeat rewrite and_True; auto ].",
            "VernacExtend",
            "0a9b86c7c2f185a60569dad4cc72089e297daf89"
        ],
        [
            "Ltac forward_call_id1_x_wow' := let H := fresh in intro H; eapply (semax_call_id1_x_wow _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H); clear H; lazymatch goal with Frame := _ : list mpred |- _ => try clear Frame end; [ check_result_type | check_result_type | apply Coq.Init.Logic.I | apply Coq.Init.Logic.I | reflexivity | (clear; let H := fresh in intro H; inversion H) | cbv beta iota zeta; unfold_post; extensionality rho; repeat rewrite exp_uncurry; try rewrite no_post_exists; repeat rewrite exp_unfold; first [apply exp_congr; intros ?vret; reflexivity | give_EX_warning ] | prove_delete_temp | prove_delete_temp | unify_postcondition_exps | unfold fold_right_and; repeat rewrite and_True; auto ].",
            "VernacExtend",
            "8145812c8fba65aae44d7198bcfb74f42c21312e"
        ],
        [
            "Ltac forward_call_id1_y_wow' := let H := fresh in intro H; eapply (semax_call_id1_y_wow _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H); clear H; lazymatch goal with Frame := _ : list mpred |- _ => try clear Frame end; [ check_result_type | check_result_type | apply Coq.Init.Logic.I | apply Coq.Init.Logic.I | reflexivity | (clear; let H := fresh in intro H; inversion H) | cbv beta iota zeta; unfold_post; extensionality rho; repeat rewrite exp_uncurry; try rewrite no_post_exists; repeat rewrite exp_unfold; first [apply exp_congr; intros ?vret; reflexivity | give_EX_warning ] | prove_delete_temp | prove_delete_temp | unify_postcondition_exps | unfold fold_right_and; repeat rewrite and_True; auto ].",
            "VernacExtend",
            "398e51858972ccb05224cefeb7fcfbf785618f57"
        ],
        [
            "Ltac forward_call_id01_wow' := let H := fresh in intro H; eapply (semax_call_id01_wow _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H); clear H; lazymatch goal with Frame := _ : list mpred |- _ => try clear Frame end; [ apply Coq.Init.Logic.I | cbv beta iota zeta; unfold_post; extensionality rho; repeat rewrite exp_uncurry; try rewrite no_post_exists; repeat rewrite exp_unfold; first [apply exp_congr; intros ?vret; reflexivity | give_EX_warning ] | unify_postcondition_exps | unfold fold_right_and; repeat rewrite and_True; auto ].",
            "VernacExtend",
            "088ed90586be99b7982d50944255d7f5f8f41b1b"
        ],
        [
            "Ltac forward_call_id00_wow' := let H := fresh in intro H; eapply (semax_call_id00_wow _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H); clear H; lazymatch goal with Frame := _ : list mpred |- _ => try clear Frame end; [ check_result_type | cbv beta iota zeta; unfold_post; extensionality rho; repeat rewrite exp_uncurry; try rewrite no_post_exists0; repeat rewrite exp_unfold; first [reflexivity | extensionality; simpl; reflexivity | give_EX_warning] | unify_postcondition_exps | unfold fold_right_and; repeat rewrite and_True; auto ].",
            "VernacExtend",
            "1b1835c13c88af01e232ac5beb54730225dccc98"
        ],
        [
            "Ltac fwd_call'_dep ts witness := lazymatch goal with | |- semax _ _ (Ssequence (Scall _ _ _) _) _ => eapply semax_seq'; [prove_call_setup' ts witness; clear_Delta_specs; clear_MORE_POST; [ .. | lazymatch goal with | |- _ -> semax _ _ (Scall (Some _) _ _) _ => forward_call_id1_wow' | |- call_setup2' _ _ _ _ _ _ _ _ _ _ _ _ ?retty _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ -> semax _ _ (Scall None _ _) _ => tryif (unify retty Tvoid) then forward_call_id00_wow' else forward_call_id01_wow' end] | after_forward_call ] | |- semax _ _ (Ssequence (Ssequence (Scall (Some ?ret') _ _) (Sset _ (Ecast (Etempvar ?ret'2 _) _))) _) _ => unify ret' ret'2; eapply semax_seq'; [prove_call_setup' ts witness; clear_Delta_specs; clear_MORE_POST; [ .. | forward_call_id1_x_wow' ] | after_forward_call ] | |- semax _ _ (Ssequence (Ssequence (Scall (Some ?ret') _ _) (Sset _ (Etempvar ?ret'2 _))) _) _ => unify ret' ret'2; eapply semax_seq'; [prove_call_setup' ts witness; clear_Delta_specs; clear_MORE_POST; [ .. | forward_call_id1_y_wow' ] | after_forward_call ] | |- _ => rewrite <- seq_assoc; fwd_call'_dep ts witness end.",
            "VernacExtend",
            "541f2b308e314c609859b2f70a9923c8be9e27f6"
        ],
        [
            "Ltac fwd_call_dep ts witness := try lazymatch goal with | |- semax _ _ (Scall _ _ _) _ => rewrite -> semax_seq_skip end; repeat lazymatch goal with | |- semax _ _ (Ssequence (Ssequence (Ssequence _ _) _) _) _ => rewrite <- seq_assoc end; lazymatch goal with |- @semax ?CS _ ?Delta _ (Ssequence ?C _) _ => lazymatch C with context [Scall _ _ _] => fwd_call'_dep ts witness end end.",
            "VernacExtend",
            "fb46676605dfdbd5107318f5ec52eb099f0cc1c9"
        ],
        [
            "Tactic Notation \"forward_call_dep\" constr(ts) constr(witness) := fwd_call_dep ts witness.",
            "VernacExtend",
            "1ad7d9f24a46ad3daf0b9e4ea215af0dcaa7452f"
        ],
        [
            "Lemma PROP_into_SEP : forall P Q R, PROPx P (LOCALx Q (SEPx R)) = PROPx [] (LOCALx Q (SEPx (!!fold_right and True P && emp :: R))).",
            "VernacStartTheoremProof",
            "8b5031d6abd05abf1c7cae8e261f0c49ff09543c"
        ],
        [
            "intros; unfold PROPx, LOCALx, SEPx; extensionality; simpl.",
            "VernacExtend",
            "4f43358ef25802a16714e7f89c3a63e10beea1f7"
        ],
        [
            "rewrite <- andp_assoc, (andp_comm _ (fold_right_sepcon R)), <- andp_assoc.",
            "VernacExtend",
            "4ca7fba14129a381b2471b51297aa20bc1b0bc94"
        ],
        [
            "rewrite prop_true_andp by auto.",
            "VernacExtend",
            "44b90a74ea59cff20941df8435ffb878e390c4dd"
        ],
        [
            "rewrite andp_comm; f_equal.",
            "VernacExtend",
            "2f90c521d1a68758095a4f734bf0089a9f0954aa"
        ],
        [
            "rewrite andp_comm.",
            "VernacExtend",
            "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
        ],
        [
            "rewrite sepcon_andp_prop', emp_sepcon; auto.",
            "VernacExtend",
            "5fa923ddfda19e31d57d8807a8275143b49c2087"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac cancel_for_forward_spawn := eapply symbolic_cancel_setup; [ construct_fold_right_sepcon | construct_fold_right_sepcon | fold_abnormal_mpred | cbv beta iota delta [before_symbol_cancel]; cancel_for_forward_call].",
            "VernacExtend",
            "d1bbdc96f8803a3cff128ab17b912602d906fba9"
        ],
        [
            "Ltac forward_spawn id arg wit := match goal with gv : globals |- _ => make_func_ptr id; let f := fresh \"f_\" in set (f := gv id); match goal with |- context[func_ptr' (NDmk_funspec _ _ (val * ?A) ?Pre _) f] => let y := fresh \"y\" in let Q := fresh \"Q\" in let R := fresh \"R\" in evar (y : ident); evar (Q : A -> globals); evar (R : A -> val -> mpred); replace Pre with (fun '(a, w) => PROPx [] (LOCALx (temp y a :: gvars (Q w) :: nil) (SEPx [R w a]))); [|let x := fresh \"x\" in extensionality x; destruct x as (?, x); instantiate (1 := fun w a => _ w) in (Value of R); repeat (destruct x as (x, ?); instantiate (1 := fun '(a, b) => _ a) in (Value of Q); instantiate (1 := fun '(a, b) => _ a) in (Value of R)); etransitivity; [|symmetry; apply PROP_into_SEP]; f_equal; f_equal ; [instantiate (1 := fun _ => _) in (Value of Q); subst y Q; f_equal; simpl; f_equal | unfold SEPx; extensionality; simpl; rewrite sepcon_emp; instantiate (1 := fun _ => _); reflexivity]]; forward_call_dep [A] (f, arg, Q, wit, R); subst Q R; [ .. | subst y f]; try (Exists y; subst y f; simpl; cancel_for_forward_spawn) end end.",
            "VernacExtend",
            "8de563c6f8761e5a0a34ce0048958279d6a00af6"
        ]
    ],
    "proofs": [
        {
            "name": "app_cons_assoc",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros; rewrite <- app_assoc; auto.",
                        "VernacExtend",
                        "ad8541ad63ac6aada48fa9312767c0200ac581c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_forall_Znth",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "split; intros; [apply Forall_Znth; auto|].",
                        "VernacExtend",
                        "81225701b3ce3a2c69342330b0388b3bd7e74d3e"
                    ]
                },
                {
                    "command": [
                        "induction l; auto.",
                        "VernacExtend",
                        "6df74a097ee826dbbeb45167e7678377d4e52265"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons in *.",
                        "VernacExtend",
                        "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "specialize (H 0); rewrite Znth_0_cons in H; apply H.",
                        "VernacExtend",
                        "82be448912342a43f5da99f5ddb08f38a6b59a04"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zlength_nonneg l); omega.",
                        "VernacExtend",
                        "9483f1824eac12aefb9ae8350ff4f99722558f93"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHl; intros.",
                        "VernacExtend",
                        "17c41ee74699ffcb3889dae4c0a533d241b6287b"
                    ]
                },
                {
                    "command": [
                        "specialize (H (i + 1)).",
                        "VernacExtend",
                        "56b330f334caf90651a078b1e536b8a446d9af42"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_pos_cons, Z.add_simpl_r in H by omega.",
                        "VernacExtend",
                        "30da8cb01585e0897bf2cc0177f5cff1819f20ce"
                    ]
                },
                {
                    "command": [
                        "apply H; omega.",
                        "VernacExtend",
                        "25f1ceb280800c37161013440275309d43c00c5f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zmod_smallish",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt x y); [left; apply Zmod_small; omega|].",
                        "VernacExtend",
                        "af462ee4b6f599bfb9e6d772948baa0ac5358bb1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.mod_add with (b := -1) by auto.",
                        "VernacExtend",
                        "b536aa92dd0d8768902723908cbe6581cad3385e"
                    ]
                },
                {
                    "command": [
                        "right; apply Zmod_small; omega.",
                        "VernacExtend",
                        "607d29928f65b37ecdb286ff5f029a7fd6ba985f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zmod_plus_inv",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros; rewrite Zplus_mod, (Zplus_mod d) in Heq.",
                        "VernacExtend",
                        "88adbedc7f2f35f633be64bab3717441170db112"
                    ]
                },
                {
                    "command": [
                        "pose proof (Z_mod_lt a c Hc).",
                        "VernacExtend",
                        "7a0177ff3503969f2c181abcb5503b0c065696a5"
                    ]
                },
                {
                    "command": [
                        "pose proof (Z_mod_lt b c Hc).",
                        "VernacExtend",
                        "7ecc7395eb816f37871f44ea5de90b657557840d"
                    ]
                },
                {
                    "command": [
                        "pose proof (Z_mod_lt d c Hc).",
                        "VernacExtend",
                        "f615cb8eceb59af18f6cc674be7f5e2fa2a76e2f"
                    ]
                },
                {
                    "command": [
                        "destruct (Zmod_smallish (a mod c + b mod c) c), (Zmod_smallish (d mod c + b mod c) c); omega.",
                        "VernacExtend",
                        "7c83701c618c3ad3b3b5f4ecb2abe127a0136ecc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_app",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros; subst; rewrite app_Znth2, Zminus_diag; auto; omega.",
                        "VernacExtend",
                        "4da3d9410d0c315ca296e2185558c66f58987b5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_app1",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros; rewrite Znth_app, Znth_0_cons; auto.",
                        "VernacExtend",
                        "2198db30afce9a963e20a3540ac2de59c9028b45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repable_0",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "split; computable.",
                        "VernacExtend",
                        "ed287165128ae012305c24a89cfca7c450d080f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_complete",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros; unfold complete.",
                        "VernacExtend",
                        "acbe7920a7d5e4ac6e0c341f8b6baa7b44402eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_app2, Zminus_diag.",
                        "VernacExtend",
                        "03da53755754e8f3015795bd77c4211cf77cd087"
                    ]
                },
                {
                    "command": [
                        "rewrite app_length; simpl plus.",
                        "VernacExtend",
                        "4abe9d364dfc42ca434320f0f7dfc453c309d24b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct, Z2Nat.inj_lt, Nat2Z.id in H; try omega.",
                        "VernacExtend",
                        "a10754b3e107b5e60c19d032a197092422a7257d"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.to_nat MAX - length l)%nat eqn: Hminus; [omega|].",
                        "VernacExtend",
                        "a10addb1cc014af186a42bd4ee6413fa939d5071"
                    ]
                },
                {
                    "command": [
                        "replace (Z.to_nat MAX - (length l + 1))%nat with n by omega.",
                        "VernacExtend",
                        "2e60d011ccacb43d2b4d2d025dbf977913c729e7"
                    ]
                },
                {
                    "command": [
                        "unfold upd_Znth, sublist; simpl.",
                        "VernacExtend",
                        "50879954d698b83151bbf4718e6ab667936aab84"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons.",
                        "VernacExtend",
                        "e06d429bdf690ef195f65a36ea0771f78b7f113c"
                    ]
                },
                {
                    "command": [
                        "unfold Z.succ; rewrite Z.add_simpl_r.",
                        "VernacExtend",
                        "924a424639aa50eb93a5814d086dac8d79920cca"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct, Nat2Z.id, firstn_exact_length.",
                        "VernacExtend",
                        "5e32119c45d10b0ffa6c2793371c8adf43fd1e08"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_assoc; auto.",
                        "VernacExtend",
                        "911cf4e990b66d41b6ca3bf104452c15b01e76e0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zlength_correct; omega.",
                        "VernacExtend",
                        "e5fd7ffb54134ecccf3f1a8fd2e5c114189cdca2"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_complete",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros; apply app_Znth1; auto.",
                        "VernacExtend",
                        "9b0786b925c2979eabaae45bdac0aa09f566bd35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_complete",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros; unfold complete.",
                        "VernacExtend",
                        "acbe7920a7d5e4ac6e0c341f8b6baa7b44402eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_app1 by (rewrite Zlength_app, ?Zlength_cons; rep_omega).",
                        "VernacExtend",
                        "90face948ffd2d9430821e683362f6dc0f44717c"
                    ]
                },
                {
                    "command": [
                        "rewrite app_length; simpl plus.",
                        "VernacExtend",
                        "4abe9d364dfc42ca434320f0f7dfc453c309d24b"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_app2, Zminus_diag; [|rewrite Zlength_cons; simpl; omega].",
                        "VernacExtend",
                        "68d5120a78d7d76dec7689e6cbeb1c90f93de8a5"
                    ]
                },
                {
                    "command": [
                        "unfold upd_Znth, sublist.sublist.",
                        "VernacExtend",
                        "bd48666af66eb9763285a7ebb57fe2067af7a977"
                    ]
                },
                {
                    "command": [
                        "rewrite Zminus_diag; simpl firstn.",
                        "VernacExtend",
                        "15a0670ec425102130a02c6c12a9855a80b82240"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct, Z2Nat.inj_lt, Nat2Z.id in H; try omega.",
                        "VernacExtend",
                        "a10754b3e107b5e60c19d032a197092422a7257d"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.to_nat MAX - length l)%nat eqn: Hminus; [omega|].",
                        "VernacExtend",
                        "a10addb1cc014af186a42bd4ee6413fa939d5071"
                    ]
                },
                {
                    "command": [
                        "replace (Z.to_nat MAX - (length l + 1))%nat with n by omega.",
                        "VernacExtend",
                        "2e60d011ccacb43d2b4d2d025dbf977913c729e7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_assoc; auto.",
                        "VernacExtend",
                        "911cf4e990b66d41b6ca3bf104452c15b01e76e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_app",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "induction l1; split; auto; intros.",
                        "VernacExtend",
                        "88dad163924c9c3613aab2f2987fec453e23fcb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H; auto.",
                        "VernacExtend",
                        "95ae427bd4e09a5f31c59184b718811a23ecb36f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H as [|??? H']; subst.",
                        "VernacExtend",
                        "bd0dc2090366b16939686ee5cdfb2961b8292383"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1 in H'; destruct H'; split; auto.",
                        "VernacExtend",
                        "133a2a2d985ceb72140e754aa46c1299de84035e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H as (H & ?); inv H; constructor; auto.",
                        "VernacExtend",
                        "d401e4c1ac17b7ad9a10894d00c5d703cc0e3408"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1; split; auto.",
                        "VernacExtend",
                        "eece07430f21686f78d428f98bd03685f875d0f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_incl",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "intros; rewrite Forall_forall in *; eauto.",
                        "VernacExtend",
                        "d30f19c0ba58d8aca6e53bdb9f1ef5c05e8b1f2f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repeat_plus",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "induction i; auto; simpl; intro.",
                        "VernacExtend",
                        "5022104e8c7fa7ba205a027d557fed889aff41f0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHi; auto.",
                        "VernacExtend",
                        "6e751ab3cd193557d54cab1ad90bd00b5fe3c354"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_insert_iff",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros; rewrite !in_app; split; simpl; intros [|[|]]; auto.",
                        "VernacExtend",
                        "1d7a2a27c0749a441aca587bb7ec222bd6c8aedf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_firstn",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros; rewrite Forall_forall in *.",
                        "VernacExtend",
                        "c0c93b662e3774b3c9ed27e11937a16d4e72e91d"
                    ]
                },
                {
                    "command": [
                        "intros ? Hin; pose proof (firstn_In _ _ _ Hin); auto.",
                        "VernacExtend",
                        "95a2691dde534038f8b31b7fbbf25f183cc272dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_skipn",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros; rewrite Forall_forall in *.",
                        "VernacExtend",
                        "c0c93b662e3774b3c9ed27e11937a16d4e72e91d"
                    ]
                },
                {
                    "command": [
                        "intros ? Hin; pose proof (skipn_In _ _ _ Hin); auto.",
                        "VernacExtend",
                        "abd25ecd04376ed57d0b208c48c3c3a80461754a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_upd_Znth",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros; unfold upd_Znth.",
                        "VernacExtend",
                        "774945f168bf5f0ce358f4c6297717a58e345ddd"
                    ]
                },
                {
                    "command": [
                        "rewrite Forall_app; split; [|constructor; auto]; apply Forall_sublist; auto.",
                        "VernacExtend",
                        "b781fe914346014ea532b526a69c3996e4813bdc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_cons",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct l; auto.",
                        "VernacExtend",
                        "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
                    ]
                },
                {
                    "command": [
                        "contradiction H; auto.",
                        "VernacExtend",
                        "86122fc31d7ce21d331e0e5c69cdfcbbcce3602c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_last",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "induction l; auto.",
                        "VernacExtend",
                        "6df74a097ee826dbbeb45167e7678377d4e52265"
                    ]
                },
                {
                    "command": [
                        "simpl nth.",
                        "VernacExtend",
                        "638f01acf7c3f604830425db1d602e4eb9012c88"
                    ]
                },
                {
                    "command": [
                        "destruct (length l) eqn: Hlen.",
                        "VernacExtend",
                        "c495da53baf4b986f6e6b8d058658e28544c7b42"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct l; simpl in *; [auto | omega].",
                        "VernacExtend",
                        "859639c2411d909e1adee6e41258eb97e064e632"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite last_cons; simpl in *; [|intro; subst; discriminate].",
                        "VernacExtend",
                        "27e43480e12faa6e3753a0ce6b6e78f7f068f205"
                    ]
                },
                {
                    "command": [
                        "rewrite NPeano.Nat.sub_0_r in IHl; auto.",
                        "VernacExtend",
                        "43d2b8bafee2e9d5d6edb3c38a366089f18969a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_last",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "intros; unfold Znth.",
                        "VernacExtend",
                        "7989a4df1d1c5ce54113449ebf28f5cc15752941"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Zlength l - 1) 0).",
                        "VernacExtend",
                        "230f1c00726c901d24ccbe8b0945ecefde2cc265"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct l; auto.",
                        "VernacExtend",
                        "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct in *; simpl length in *.",
                        "VernacExtend",
                        "46f178e5d33350332a93e5ce7bc525c58e4b1cd6"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ in *; omega.",
                        "VernacExtend",
                        "a82525e06a85e434e4e7dc99eae40de49a9d33cd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.inj_sub; [|omega].",
                        "VernacExtend",
                        "4991da783154514506cb17b2ee7a5cf5fb6bb7b6"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct, Nat2Z.id; simpl.",
                        "VernacExtend",
                        "78eb5c70e515739865777c7d21b5699973b280aa"
                    ]
                },
                {
                    "command": [
                        "apply nth_last.",
                        "VernacExtend",
                        "ca7fa8df8e5b2f1f94d31ee7754c770f5a8e7a5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_app",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "induction l1; auto; intros.",
                        "VernacExtend",
                        "59089403bea5ede8ccc811e9dae304969e5291cd"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite last_cons; eauto.",
                        "VernacExtend",
                        "5916139fc7e604c5b16580d95f3077d1174dc126"
                    ]
                },
                {
                    "command": [
                        "intro X; apply app_eq_nil in X; tauto.",
                        "VernacExtend",
                        "d15e065a09ef9aa7fe7ef9e951a4b5871021c780"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_sorted_list_eq",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "induction n; intros; [omega|].",
                        "VernacExtend",
                        "7b6a46d1becf39908747848b90c1b8ad82680f80"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec l []); [subst; discriminate|].",
                        "VernacExtend",
                        "acf651eda502c9181933c80a6799598a9c86d995"
                    ]
                },
                {
                    "command": [
                        "destruct (exists_last n0) as (l' & x & ?); subst.",
                        "VernacExtend",
                        "0658a5f49730803b50f5e512be4d399c084dab2b"
                    ]
                },
                {
                    "command": [
                        "rewrite app_length in Hlen; simpl in Hlen.",
                        "VernacExtend",
                        "cbc66c6b78a5ea1aca6f38fcb54c6c7b2887aba0"
                    ]
                },
                {
                    "command": [
                        "assert (length l' = n) by omega.",
                        "VernacExtend",
                        "215c185afb1da4b2483cdbf0c78ad2a2cdbbd936"
                    ]
                },
                {
                    "command": [
                        "assert (x = n).",
                        "VernacExtend",
                        "6971ad415d4b49ced8b14e111b43e8a542f62d20"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (x < S n)%nat.",
                        "VernacExtend",
                        "4182e154ca814d81b0261b6a278b03e0a9177965"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "specialize (Hl x); destruct Hl as (_ & Hl); apply Hl.",
                        "VernacExtend",
                        "1031ed9eec5d34b4fa4a94ca14a43f8619726125"
                    ]
                },
                {
                    "command": [
                        "rewrite in_app; simpl; auto.",
                        "VernacExtend",
                        "78214060553df06c9218817fa2d21d52d73cd97d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_dec x n); [|omega].",
                        "VernacExtend",
                        "bf5e33e01d40f8a039f3fa588b272f7ade8c1da9"
                    ]
                },
                {
                    "command": [
                        "assert (n < S n)%nat as Hlt by omega; rewrite Hl in Hlt.",
                        "VernacExtend",
                        "d7f407d2596b005d71a84e4b4fd115bdd13995be"
                    ]
                },
                {
                    "command": [
                        "rewrite in_app in Hlt; destruct Hlt as [Hin | [? | ?]]; [| omega | contradiction].",
                        "VernacExtend",
                        "d380e0f17e315f88a7ec9206fca3c095a2ebf246"
                    ]
                },
                {
                    "command": [
                        "apply In_nth with (d := d) in Hin; destruct Hin as (j & ? & ?).",
                        "VernacExtend",
                        "c7523990a0ebb961769a03bc642239b180fa9815"
                    ]
                },
                {
                    "command": [
                        "exploit (Hsorted j (length l')); [omega|].",
                        "VernacExtend",
                        "080e81c9725b974a5f3c658ec95897923fb7e56e"
                    ]
                },
                {
                    "command": [
                        "rewrite app_nth1, app_nth2, minus_diag by auto; simpl; omega.",
                        "VernacExtend",
                        "b52d9efa73c430b90681c9ba0a49ad33e2c425b7"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i n); subst.",
                        "VernacExtend",
                        "74a0b425f9a3974181d75691dddaefa6cbf8407b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite app_nth2, minus_diag by omega; auto.",
                        "VernacExtend",
                        "ec8bb8966f2a33bae6e98f9f8166dbe85ebee28f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite app_nth1 by omega; apply IHn; auto; try omega.",
                        "VernacExtend",
                        "1c279e73769b79b46952987ff3065b9300d0791f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intro j; specialize (Hl j); split; intro Hin.",
                        "VernacExtend",
                        "9611c39ce88202c4e27b747ad9ed6659512d68e0"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct Hl as (Hl & _); exploit Hl; [omega|].",
                        "VernacExtend",
                        "be3fc58c6e02532b51cda085053338fff29ef13b"
                    ]
                },
                {
                    "command": [
                        "rewrite in_app; intros [? | [? | ?]]; [auto | omega | contradiction].",
                        "VernacExtend",
                        "bcfe8da58d19dba09ac0b8cedda973f9a87b9f1b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct Hl as (_ & Hl); exploit Hl; [rewrite in_app; auto | intro].",
                        "VernacExtend",
                        "1891543e50ea86305e71e12a2e988852947c2ef0"
                    ]
                },
                {
                    "command": [
                        "apply In_nth with (d := d) in Hin; destruct Hin as (i' & ? & ?).",
                        "VernacExtend",
                        "f20e2d565d0ef026486dff57c61c6e269372a1a7"
                    ]
                },
                {
                    "command": [
                        "exploit (Hsorted i' (length l')); [omega|].",
                        "VernacExtend",
                        "ab2ed5959a97b078c326735cb69a124a701d074f"
                    ]
                },
                {
                    "command": [
                        "rewrite app_nth1, app_nth2, minus_diag by auto; simpl; omega.",
                        "VernacExtend",
                        "b52d9efa73c430b90681c9ba0a49ad33e2c425b7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros i' j' ?; exploit (Hsorted i' j'); [omega|].",
                        "VernacExtend",
                        "6bb152209f0f2bb017bbfdccba8e0f7799bc29b1"
                    ]
                },
                {
                    "command": [
                        "rewrite !app_nth1 by omega; auto.",
                        "VernacExtend",
                        "8c383db085b4a1f90769d689420b02187d4a61e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_In_l",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "induction 1; intro Hin; destruct Hin; simpl.",
                        "VernacExtend",
                        "24d3dca0ae2e9f86f97aefba013260aa8035b419"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; eauto.",
                        "VernacExtend",
                        "28a62bb991e5121953e2bbeb729f6608ba63a793"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct IHForall2 as (? & ? & ?); eauto.",
                        "VernacExtend",
                        "16d43ce2de0c6a57e7a1b63b64563ff47767f790"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_In_r",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "induction 1; intro Hin; destruct Hin; simpl.",
                        "VernacExtend",
                        "24d3dca0ae2e9f86f97aefba013260aa8035b419"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; eauto.",
                        "VernacExtend",
                        "28a62bb991e5121953e2bbeb729f6608ba63a793"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct IHForall2 as (? & ? & ?); eauto.",
                        "VernacExtend",
                        "16d43ce2de0c6a57e7a1b63b64563ff47767f790"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_snoc",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "induction l; auto; simpl.",
                        "VernacExtend",
                        "eed68d4d83fee76794ef25f3fe5547ed00ee3133"
                    ]
                },
                {
                    "command": [
                        "destruct (l ++ [x]) eqn: Heq; auto.",
                        "VernacExtend",
                        "16fbace38d1b9f4e75862780caa3b28328360d71"
                    ]
                },
                {
                    "command": [
                        "contradiction (app_cons_not_nil l [] x); auto.",
                        "VernacExtend",
                        "0b1e02b4969de63ad00e5954a469aa61216fa0c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_sepcon_sepcon",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros; induction l; simpl; normalize.",
                        "VernacExtend",
                        "4c792232bdab40131d41fde32917f42f12a09499"
                    ]
                },
                {
                    "command": [
                        "rewrite H, IHl; apply pred_ext; cancel.",
                        "VernacExtend",
                        "c24a8f4df391c1e297597102d3c82c6d3c224007"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_app",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "induction l1; simpl; intros.",
                        "VernacExtend",
                        "a75edf2a12acf37be08446879dcf0f8cfc9e0e1d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite emp_sepcon; auto.",
                        "VernacExtend",
                        "48c3c3dbe79fdbdaa99570c01577bfec18ad6c41"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1, sepcon_assoc; auto.",
                        "VernacExtend",
                        "fba8e9e623ba4220d69189d20a26507a6d49b3c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_of_nil",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "intros; unfold sublist.",
                        "VernacExtend",
                        "09ec98bb9a22664aa583101a1d4faac006f3a7d0"
                    ]
                },
                {
                    "command": [
                        "rewrite skipn_nil, firstn_nil; auto.",
                        "VernacExtend",
                        "01184f5e1fb4f744e60b2da324a53dc1f359e0d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_0_cons",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "intros; unfold sublist; simpl.",
                        "VernacExtend",
                        "4144edfcf7720ac73246a1635f7a38a85b86a68d"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.to_nat (j - 0)) eqn: Hminus.",
                        "VernacExtend",
                        "03202b86e4883ecd3867ca767271a87ce4aff318"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Z.gt_lt in H; rewrite Z2Nat.inj_lt in H; try omega.",
                        "VernacExtend",
                        "036dec7f6d4ad0165b3201baeeb543eeec622560"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.inj_sub in Hminus; omega.",
                        "VernacExtend",
                        "edd2849b4dc1457afc7fa290edbdb597a6668304"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; repeat f_equal.",
                        "VernacExtend",
                        "f249e685efd1b3dd2dd9c89c499de8694fc307f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.sub_0_r in *.",
                        "VernacExtend",
                        "44f1c1d62ad6bb9cd2d26b402351a962eee3f9a1"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.inj_sub, Hminus; simpl; omega.",
                        "VernacExtend",
                        "5c98b9432c419bfa851e16b195e0b141d1eab821"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_S_cons",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "intros; unfold sublist; simpl.",
                        "VernacExtend",
                        "4144edfcf7720ac73246a1635f7a38a85b86a68d"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.to_nat i) eqn: Hi.",
                        "VernacExtend",
                        "ff4326c7d0a49550cb70f08c444ca50e559bd188"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Z.gt_lt in H; rewrite Z2Nat.inj_lt in H; omega.",
                        "VernacExtend",
                        "8bc76634bcb006d8f75e72a92e0a53ce4627b7b5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal; f_equal; try omega.",
                        "VernacExtend",
                        "e75ff0526a5eb18d3cc08e90b2ed45a6c6ab7e14"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.inj_sub, Hi; simpl; omega.",
                        "VernacExtend",
                        "f99d1b5d5e960034a1ec401d715a3783a4d48266"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_rotate",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "intros; unfold rotate.",
                        "VernacExtend",
                        "6e2230d922df0295d44fa392eb2ba64ace613799"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_Zlength by (subst; apply Z_mod_lt; omega).",
                        "VernacExtend",
                        "9ffd84aae6104b6b5175907f9d82f731119f2e1a"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i (Zlength l - (m - n))).",
                        "VernacExtend",
                        "36a607a1d5af66c2de4bdd82c019762519e32921"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_app1 by (rewrite Zlength_sublist; omega).",
                        "VernacExtend",
                        "f5a71f444d557112b7b84b253a661a7d443dc11b"
                    ]
                },
                {
                    "command": [
                        "assert ((i - n) mod m = m + i - n) as Hmod.",
                        "VernacExtend",
                        "f6d7521f237cb02c2f053b948a8e69279f85c514"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.mod_add with (b := 1) by omega.",
                        "VernacExtend",
                        "a2d1aecebb45069e8a3b228f5eda0b3b9a598ff9"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmod_small; omega.",
                        "VernacExtend",
                        "f2d071eae62de27f949578e466093157ca74438a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite Hmod, sublist_upd_Znth_lr, sublist_upd_Znth_l by (auto; omega).",
                        "VernacExtend",
                        "34b65536d80df8c6f290315b91ba683b1fd0ba75"
                    ]
                },
                {
                    "command": [
                        "replace (m + i - n - (m - n)) with i by omega; auto.",
                        "VernacExtend",
                        "a587549d24188909f7f498125734ff160811517b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_app2; rewrite ?Zlength_sublist; try omega.",
                        "VernacExtend",
                        "25318d87040623692a2457f43974453bc6fcaea9"
                    ]
                },
                {
                    "command": [
                        "assert ((i - n) mod m = i - n) as Hmod.",
                        "VernacExtend",
                        "c7e2aa924180e010540c114b7d53dc75533d9b8f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmod_small; omega.",
                        "VernacExtend",
                        "f2d071eae62de27f949578e466093157ca74438a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite Hmod, sublist_upd_Znth_r, sublist_upd_Znth_lr by omega.",
                        "VernacExtend",
                        "1e815418dc37b57c061f1cce4f3acf39157c1881"
                    ]
                },
                {
                    "command": [
                        "replace (i - (Zlength l - (m - n))) with (i - n - 0) by omega; auto.",
                        "VernacExtend",
                        "27c517b15e53c4745089c7761b5f665d408c9a1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_cons_eq",
            "line_nb": 265,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0); [subst; apply Znth_0_cons|].",
                        "VernacExtend",
                        "db058bb3b1438a40de09f76b541e671b30f7d4d6"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i 0); [rewrite !Znth_underflow; auto; omega|].",
                        "VernacExtend",
                        "00caf60baa253340cf0fd48b5c8c4c81a70f4828"
                    ]
                },
                {
                    "command": [
                        "apply Znth_pos_cons; omega.",
                        "VernacExtend",
                        "dad327b2eb7f57b9d7b68659aa404390ca9b07ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_rotate",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "intros; unfold rotate.",
                        "VernacExtend",
                        "6e2230d922df0295d44fa392eb2ba64ace613799"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i n).",
                        "VernacExtend",
                        "e95249794f6baef3de0ea4980efbabfd979ed1b4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite app_Znth1 by (rewrite Zlength_sublist; omega).",
                        "VernacExtend",
                        "9fd3295c157007d9b7132145811097b055b53b7a"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_sublist by omega.",
                        "VernacExtend",
                        "3e43a9793b4768ce5447f1500c036151f6dfa388"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z_mod_plus with (b := 1), Zmod_small by omega.",
                        "VernacExtend",
                        "af6d75188db0b36949f2fd06e15eb14d4d5cb139"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite app_Znth2; (rewrite Zlength_sublist; try omega).",
                        "VernacExtend",
                        "cfeb40373d8e8e1155450f27ebea6e7b00db8d35"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_sublist by omega.",
                        "VernacExtend",
                        "3e43a9793b4768ce5447f1500c036151f6dfa388"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmod_small by omega.",
                        "VernacExtend",
                        "b55bd313119b61355324b8f6158f311f7095d082"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rotate_nil",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "intros; unfold rotate; rewrite !sublist_of_nil; auto.",
                        "VernacExtend",
                        "8a2109afff3f95b13e23352a19cc92a4d4857548"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_sublist_le",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec j i); auto.",
                        "VernacExtend",
                        "9720311216bfad2804287eb5d4886b3e8ba5e38c"
                    ]
                },
                {
                    "command": [
                        "eapply Forall_Znth with (i0 := i) in Hj; [|rewrite Zlength_sublist; omega].",
                        "VernacExtend",
                        "a918470020ba543500a9b6ef4e4c84acd540b8bb"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_sublist, Z.add_0_r in Hj by omega.",
                        "VernacExtend",
                        "8276423a838312c161be18105238ffe96220a4d4"
                    ]
                },
                {
                    "command": [
                        "contradiction Hi; eauto.",
                        "VernacExtend",
                        "f0f08d28730214fe473cc80947ed58289eb36614"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_sublist_first",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_antisymm; eapply Forall_sublist_le; eauto; omega.",
                        "VernacExtend",
                        "af0b16907596c807f24de9970a3cd798301adf95"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDup_Znth_inj",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "induction l; intros.",
                        "VernacExtend",
                        "f3f6b28c6822ad560a06f008ea0a5aa487d0e8e3"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_nil in *; omega.",
                        "VernacExtend",
                        "11e355bcc65e98c7aa282771754cdae5eb378b32"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "inv HNoDup.",
                        "VernacExtend",
                        "9cd0f3fd7b138590214cc9fd9127595f5e4e5ea3"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons in *.",
                        "VernacExtend",
                        "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_cons_eq in Heq.",
                        "VernacExtend",
                        "49c5db85e80c881acb6e4e602eeceb8812e5ce25"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0), (eq_dec j 0); subst; auto.",
                        "VernacExtend",
                        "eef1c1739bb8fd1f22b3c8d178c0e5692a99d8ed"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "contradiction H1; apply Znth_In; omega.",
                        "VernacExtend",
                        "60d8d63f7a857de7e6fd9171704ccb6febbb6aad"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "contradiction H1; apply Znth_In; omega.",
                        "VernacExtend",
                        "60d8d63f7a857de7e6fd9171704ccb6febbb6aad"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exploit (IHl (i - 1) (j - 1)); auto; omega.",
                        "VernacExtend",
                        "5bccda39085f8708834fb8c572be45ce8c2f0a17"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rotate_In",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "unfold rotate; intros.",
                        "VernacExtend",
                        "ed12e262d8e75f5cc381280c6c31839b56bcd5ea"
                    ]
                },
                {
                    "command": [
                        "replace l with (sublist 0 (m - n) l ++ sublist (m - n) (Zlength l) l) at 4 by (rewrite sublist_rejoin, sublist_same; auto; omega).",
                        "VernacExtend",
                        "ba1741b84c53c864b2314620e70b410f5cb443f0"
                    ]
                },
                {
                    "command": [
                        "rewrite !in_app; tauto.",
                        "VernacExtend",
                        "3a0c74163fd59cc43211b80b28a24c6c7e6d3c0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rotate_map",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "intros; unfold rotate.",
                        "VernacExtend",
                        "6e2230d922df0295d44fa392eb2ba64ace613799"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_map, Zlength_map, map_app; auto.",
                        "VernacExtend",
                        "4dbe629552ed40d67157ceb9e23d494ccc070e8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_app",
            "line_nb": 324,
            "steps": [
                {
                    "command": [
                        "induction l1; destruct l1'; intros; try discriminate; auto; simpl in *.",
                        "VernacExtend",
                        "7a5c654c92a9ddd71d84a2a14057977cf87a4afc"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1; auto.",
                        "VernacExtend",
                        "3bcd23a92f23552a758e14aa4b09c186695e77c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_app'",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "intros; apply combine_app.",
                        "VernacExtend",
                        "5b3911da464e275456c604d660a0a330baeb6096"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zlength_correct in *; omega.",
                        "VernacExtend",
                        "77de471b6ab50c4c1ae8800e7c07e8f04e7bb27c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_rotate",
            "line_nb": 332,
            "steps": [
                {
                    "command": [
                        "intros; unfold rotate.",
                        "VernacExtend",
                        "6e2230d922df0295d44fa392eb2ba64ace613799"
                    ]
                },
                {
                    "command": [
                        "rewrite Forall_app; split; apply Forall_sublist; auto.",
                        "VernacExtend",
                        "b6619886c6e52ed273d1337d1ec4d62dfaf0f0cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_repeat",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; auto.",
                        "VernacExtend",
                        "e97dceb16245749e91243b27d3fd5ddc89e99bdd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_complete",
            "line_nb": 339,
            "steps": [
                {
                    "command": [
                        "intros; unfold complete.",
                        "VernacExtend",
                        "acbe7920a7d5e4ac6e0c341f8b6baa7b44402eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite Forall_app; split; [|apply Forall_repeat]; auto.",
                        "VernacExtend",
                        "a1ef68e8e15fb7a9e5ba371f2a774d2df9217b2d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "app_eq_inv",
            "line_nb": 343,
            "steps": [
                {
                    "command": [
                        "induction l1; simpl; intros; destruct l3; try discriminate; auto.",
                        "VernacExtend",
                        "c7636ae5b12ed6ecb45c3f9ed3d64d6bd12e7ea1"
                    ]
                },
                {
                    "command": [
                        "inv Heq; inv Hlen.",
                        "VernacExtend",
                        "92b14fa3dc45dae0d441eb39229565d3b26528ad"
                    ]
                },
                {
                    "command": [
                        "exploit IHl1; eauto; intros (? & ?); subst; auto.",
                        "VernacExtend",
                        "b913553effd64c08d823d917ea2fc4009be70b25"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rotate_inj",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "unfold rotate; intros.",
                        "VernacExtend",
                        "ed12e262d8e75f5cc381280c6c31839b56bcd5ea"
                    ]
                },
                {
                    "command": [
                        "destruct (app_eq_inv _ _ _ _ H) as (Hskip & Hfirst).",
                        "VernacExtend",
                        "8311f07a39b2c9e43445ab90a69e1b9bcba32b28"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold sublist; repeat rewrite firstn_length, skipn_length.",
                        "VernacExtend",
                        "08031e04b3f5f1ce6eb9e003666575134f439799"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zlength_correct; rewrite H0; omega.",
                        "VernacExtend",
                        "4f6b6d50a724f7f3e1d182abbb52ceee1fd5d9e5"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "erewrite <- sublist_same with (al := l1), <- sublist_rejoin with (mid := m - n); auto; try omega.",
                        "VernacExtend",
                        "468681f9f41c62a6b349100679092fd8c40c8724"
                    ]
                },
                {
                    "command": [
                        "rewrite Hfirst, Hskip, sublist_rejoin, sublist_same; auto; try omega.",
                        "VernacExtend",
                        "479a963351350e7a9cd5d50bb6eef1229a7d6291"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zlength_correct in *; rewrite H0 in *; omega.",
                        "VernacExtend",
                        "61ca71f009158eb578ed5bce9cda84de665887df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "complete_inj",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "unfold complete; intros.",
                        "VernacExtend",
                        "f33b32a236bc478478bf8749ff89a7fd7c84ac2d"
                    ]
                },
                {
                    "command": [
                        "destruct (app_eq_inv _ _ _ _ H); auto.",
                        "VernacExtend",
                        "e10eb5b35a63e72db3899908c320d39fcbe0ee99"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_complete",
            "line_nb": 363,
            "steps": [
                {
                    "command": [
                        "intros; unfold complete.",
                        "VernacExtend",
                        "acbe7920a7d5e4ac6e0c341f8b6baa7b44402eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite app_length, repeat_length; rewrite Zlength_correct in H.",
                        "VernacExtend",
                        "6b2fd4e44ee224b263101379387e0d389a8541e5"
                    ]
                },
                {
                    "command": [
                        "rep_omega.",
                        "VernacExtend",
                        "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_rotate",
            "line_nb": 368,
            "steps": [
                {
                    "command": [
                        "intros; unfold rotate.",
                        "VernacExtend",
                        "6e2230d922df0295d44fa392eb2ba64ace613799"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_app; repeat rewrite Zlength_sublist; omega.",
                        "VernacExtend",
                        "ae488505f679619c81ac65025f1d1cc723f97f6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_repeat",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "intros; rewrite Zlength_correct, repeat_length; auto.",
                        "VernacExtend",
                        "f1d028c37d4077ed86dc0ed17b0c40e3891eff44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_complete",
            "line_nb": 375,
            "steps": [
                {
                    "command": [
                        "intros; unfold complete.",
                        "VernacExtend",
                        "acbe7920a7d5e4ac6e0c341f8b6baa7b44402eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_app, Zlength_repeat; rewrite Zlength_correct in *; rep_omega.",
                        "VernacExtend",
                        "7aa62dcf81811e3658c00b1068c0c4de44be2447"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_eq",
            "line_nb": 379,
            "steps": [
                {
                    "command": [
                        "induction l; auto; simpl.",
                        "VernacExtend",
                        "eed68d4d83fee76794ef25f3fe5547ed00ee3133"
                    ]
                },
                {
                    "command": [
                        "destruct a; rewrite IHl; auto.",
                        "VernacExtend",
                        "3aeaa9757720627143523a4040561aa72b79dbfb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "signed_inj",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply int_eq_e.",
                        "VernacExtend",
                        "28a1ca5a34d7c8c689fa4dabec299c073372683a"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.eq_signed, H.",
                        "VernacExtend",
                        "724a412a150576a86a3fc52b73d7b3367c94f29b"
                    ]
                },
                {
                    "command": [
                        "apply zeq_true.",
                        "VernacExtend",
                        "af0121a2373c6f0f0aecd87040e8474a45a41dff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mods_repr",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Int.mods.",
                        "VernacExtend",
                        "28f425a3586ef66ce6801d8e4084e413df34a87f"
                    ]
                },
                {
                    "command": [
                        "pose proof Int.min_signed_neg.",
                        "VernacExtend",
                        "616ff89aa3c6c776101dd7ce0853fe05c17c72bc"
                    ]
                },
                {
                    "command": [
                        "rewrite Zquot.Zrem_Zmod_pos; repeat rewrite Int.signed_repr; auto; omega.",
                        "VernacExtend",
                        "032f0c4d5692a9bd029956fb84ac0fcae15057fc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repeat_list_repeat",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "induction n; auto; simpl; intro.",
                        "VernacExtend",
                        "79bcb395e85202f2be7d7e080c55b672c53c8818"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn; auto.",
                        "VernacExtend",
                        "317b9a54627f8cc619b6611fa844d1b3ef42be9a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_repeat",
            "line_nb": 399,
            "steps": [
                {
                    "command": [
                        "intros; repeat rewrite repeat_list_repeat; apply sublist_list_repeat; auto.",
                        "VernacExtend",
                        "ff530656a184bfcc7548ab44c202d82fe35b6086"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_head",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "intros; unfold rotate.",
                        "VernacExtend",
                        "6e2230d922df0295d44fa392eb2ba64ace613799"
                    ]
                },
                {
                    "command": [
                        "assert (Zlength (sublist (m - head) (Zlength (complete m reqs)) (complete m reqs)) = head) as Hlen.",
                        "VernacExtend",
                        "8abfa3ad615d5605c805a12c2d79d0936c9c6f85"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_sublist; rewrite Zlength_complete; omega.",
                        "VernacExtend",
                        "3719230fce07c8c03b1d3ca26bd6f7f431c2ab8d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite app_Znth2; rewrite Hlen; [|omega].",
                        "VernacExtend",
                        "140e9eddadb3f1c44f09c049a018f98fda17f501"
                    ]
                },
                {
                    "command": [
                        "rewrite Zminus_diag.",
                        "VernacExtend",
                        "ba29aeb517289d2984aef69c718f64cdb113d2df"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_sublist; try omega.",
                        "VernacExtend",
                        "0ce438022d6c9d2a233f9714d6d6e92509b7234a"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_complete; auto; omega.",
                        "VernacExtend",
                        "29401ccfbc16e52c79532c0a0e03e9d867301b14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_repeat",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; intro.",
                        "VernacExtend",
                        "4c60212fcbbb416a6ed72840028783179b73ece2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Znth_nil.",
                        "VernacExtend",
                        "3a555e9d94e18a9780bdc523a8a57bb33152450b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_lt_dec i 0); [apply Znth_underflow; auto|].",
                        "VernacExtend",
                        "e1af3dbcef95b9c165200e3e8be4de60547a562f"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0); [subst; apply Znth_0_cons | rewrite Znth_pos_cons; eauto; omega].",
                        "VernacExtend",
                        "d070bf2ef2c52f9a104dc2ea605746ead7e572c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_repeat'",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "induction n; intros; [simpl in *; omega|].",
                        "VernacExtend",
                        "d5d5caa9ad950312d90fdddd608ee36f898c4c7d"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ in H; simpl.",
                        "VernacExtend",
                        "07cda84e82a198921b107bad3c1c32b958c66154"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0).",
                        "VernacExtend",
                        "ed0407251a0d330a3d6d3f4b234de52e598904c6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; apply Znth_0_cons.",
                        "VernacExtend",
                        "dcce73ead546e5ad7c70778921c1e7607bbee9b5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_pos_cons by omega; apply IHn; omega.",
                        "VernacExtend",
                        "34819f2b099001851341cfe508c574cf7bd872ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rotate_1",
            "line_nb": 430,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold complete at 1; simpl.",
                        "VernacExtend",
                        "6a7c104fae29ddb37fb0d29682cb94c9efc0506d"
                    ]
                },
                {
                    "command": [
                        "unfold upd_Znth; simpl.",
                        "VernacExtend",
                        "051740e4398110c1d939e8d19bb3aee423fb0534"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons; simpl.",
                        "VernacExtend",
                        "f95e8c2b4dab4a1accb6b828177b64438ce568ac"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_1_cons, sublist_same; auto; [|omega].",
                        "VernacExtend",
                        "c685fd8e833bc7de18594df4823c34e7060e985b"
                    ]
                },
                {
                    "command": [
                        "unfold rotate.",
                        "VernacExtend",
                        "6fa05813bebed0c3d730fa04e54d569dc11d521c"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons; simpl.",
                        "VernacExtend",
                        "f95e8c2b4dab4a1accb6b828177b64438ce568ac"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_S_cons; [|omega].",
                        "VernacExtend",
                        "998d0663c907044e60337f4430c28bd5efad8819"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_0_cons; [|omega].",
                        "VernacExtend",
                        "a9545738f0f5959dc2b6417db74551a49feb9e80"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec (n + 1) m).",
                        "VernacExtend",
                        "80c00559aeb70b5e48345eb0ef8aa15997c0785c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite Z.mod_same; [|omega].",
                        "VernacExtend",
                        "bd7290c4638a60f29fee96f103516e9eacb19639"
                    ]
                },
                {
                    "command": [
                        "autorewrite with sublist.",
                        "VernacExtend",
                        "27d3b47789f36e3bd15e796d8905bf4584c44131"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_complete, sublist_nil; [|omega].",
                        "VernacExtend",
                        "c0bcb96d0c87b3e8d185c2cf2aa60ae68b5adf90"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_same; auto; [|rewrite Zlength_complete; omega].",
                        "VernacExtend",
                        "a8551b9a9541d4ebc2d63cb00fb8c775b887b97d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_assoc; unfold complete.",
                        "VernacExtend",
                        "147d6fa35a402124c16b17383537cb8a57dfb31a"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2Nat.inj_add; try omega.",
                        "VernacExtend",
                        "5732649c8bacd99a8487247f6a79ac6e3be23594"
                    ]
                },
                {
                    "command": [
                        "rewrite NPeano.Nat.add_sub_swap with (p := length l); [|rewrite Zlength_correct in *; rep_omega].",
                        "VernacExtend",
                        "6fcb437bcc330d2c319857f90086e222602754de"
                    ]
                },
                {
                    "command": [
                        "rewrite repeat_plus; simpl; do 3 f_equal; omega.",
                        "VernacExtend",
                        "61d007cdb8e28332aaab938f5984ab5e711c619a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmod_small; [|omega].",
                        "VernacExtend",
                        "b20c20da7451c8446cef2ed2b51c56786970ce65"
                    ]
                },
                {
                    "command": [
                        "rewrite (sublist_split (m - (n + 1)) (Zlength (complete m l) - 1)); try rewrite Zlength_complete; try omega.",
                        "VernacExtend",
                        "d4667c3c9670f4f8dee12a12b5aae71a4eee29c6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_assoc, (sublist_one (m - 1)); try rewrite Zlength_complete; try omega; simpl.",
                        "VernacExtend",
                        "1b7cc130d095e234361c5601b9c3a8327c35aa97"
                    ]
                },
                {
                    "command": [
                        "assert (length l < Z.to_nat m)%nat by (rewrite Zlength_correct in *; rep_omega).",
                        "VernacExtend",
                        "2d2bec40a05f77763decad15bb5df5b191b42a59"
                    ]
                },
                {
                    "command": [
                        "unfold complete.",
                        "VernacExtend",
                        "e12f9585ad1b199b6a97bb391eab350935a19c8c"
                    ]
                },
                {
                    "command": [
                        "replace (Z.to_nat m - length l)%nat with (Z.to_nat m - S (length l) + 1)%nat; [|omega].",
                        "VernacExtend",
                        "29bbb516bce25474b68d58dda5c2d1735dacf097"
                    ]
                },
                {
                    "command": [
                        "rewrite repeat_plus, app_assoc; simpl.",
                        "VernacExtend",
                        "66f0d1a92ae5c8389cf25427d6ee9f329e466801"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zlength_app.",
                        "VernacExtend",
                        "e57483ef857ff5a82d76f4e19daec27e90727bb8"
                    ]
                },
                {
                    "command": [
                        "assert (m - 1 = Zlength l + Zlength (repeat (vptrofs 0) (Z.to_nat m - S (Datatypes.length l)))) as Heq.",
                        "VernacExtend",
                        "9dacc6ed4cb38f36fc2550d4b98f1b5cbb410cb1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_repeat, Nat2Z.inj_sub, Z2Nat.id, Nat2Z.inj_succ, <- Zlength_correct; omega.",
                        "VernacExtend",
                        "a78ce72ba27500bb9d9bc23ec8c88a304898d5fa"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite (sublist_app1 _ _ _ (_ ++ _)%list); rewrite ?Zlength_app; try omega.",
                        "VernacExtend",
                        "c67128d779cd394a1e28feb5f3813f98bd2d9494"
                    ]
                },
                {
                    "command": [
                        "rewrite (sublist_app1 _ _ _ (_ ++ _)%list); try rewrite Zlength_app; try omega.",
                        "VernacExtend",
                        "ff9fd0e57dbd03890afa761530d8b65a590685bf"
                    ]
                },
                {
                    "command": [
                        "f_equal; f_equal; try omega.",
                        "VernacExtend",
                        "e75ff0526a5eb18d3cc08e90b2ed45a6c6ab7e14"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite app_Znth2, Zlength_app, Heq, Zminus_diag, Znth_0_cons; auto.",
                        "VernacExtend",
                        "922e6c0a095a70a71638ad7e85b4e69d01173618"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_app; omega.",
                        "VernacExtend",
                        "1bf0a6129914c39b3cd017d1546205870744ba14"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_complete_gen",
            "line_nb": 472,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_app2, Zminus_diag.",
                        "VernacExtend",
                        "03da53755754e8f3015795bd77c4211cf77cd087"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.to_nat (n - Zlength l)) eqn: Hn.",
                        "VernacExtend",
                        "98ea6b08b9746a0a6dd62d2cab5530b72bffd798"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Z2Nat.inj with (m := 0) in Hn; omega.",
                        "VernacExtend",
                        "eeeff6634fb7420d4cd31152294bfdb5e3c3adde"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite upd_Znth0, Zlength_cons, sublist_1_cons.",
                        "VernacExtend",
                        "a69f5a9a0582c9bce7f6f6286122a39a6e6ff702"
                    ]
                },
                {
                    "command": [
                        "unfold Z.succ; rewrite Z.add_simpl_r, sublist_same; auto.",
                        "VernacExtend",
                        "88cb6e35bcdec857ea2033d93c2c2b1778e39abe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_assoc, Zlength_app, Zlength_cons, Zlength_nil; simpl.",
                        "VernacExtend",
                        "0ae100fdad1da86fcb426e9571d908f6a97740d4"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.sub_add_distr, Z2Nat.inj_sub, Hn by computable; simpl.",
                        "VernacExtend",
                        "45bd6fb28f0b679fa59517237a349c6c08aedec9"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.sub_0_r; auto.",
                        "VernacExtend",
                        "03bec7a7ac3f5809bb00ede6309b7bbebee919ab"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zlength_nonneg (repeat y (Z.to_nat (n - Zlength l)))); omega.",
                        "VernacExtend",
                        "82f4dc2c3969b2525984890b12764f5bd4323d22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_complete'",
            "line_nb": 487,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_app2; [|repeat rewrite Zlength_map; repeat rewrite Zlength_correct; omega].",
                        "VernacExtend",
                        "1b2b6017e07e2fbd458af6ec60efa8b743167f70"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zlength_map.",
                        "VernacExtend",
                        "14c8fdba0b938014792d534f8569d4ace72a61f4"
                    ]
                },
                {
                    "command": [
                        "rewrite Zminus_diag.",
                        "VernacExtend",
                        "ba29aeb517289d2984aef69c718f64cdb113d2df"
                    ]
                },
                {
                    "command": [
                        "rewrite app_length; simpl plus.",
                        "VernacExtend",
                        "4abe9d364dfc42ca434320f0f7dfc453c309d24b"
                    ]
                },
                {
                    "command": [
                        "destruct (n - length l)%nat eqn: Hminus; [omega|].",
                        "VernacExtend",
                        "58a39e3339ea8e0103ca457585e9492011ded8d1"
                    ]
                },
                {
                    "command": [
                        "replace (n - (length l + 1))%nat with n0 by omega.",
                        "VernacExtend",
                        "72bd145b9baa0cb42dc639a5163fbbfc9870209d"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth0, !map_app, <- app_assoc; simpl.",
                        "VernacExtend",
                        "8280eb9314811c4bf3b59f2e48c9d31df4f092a8"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_1_cons, Zlength_cons, sublist_same; auto; omega.",
                        "VernacExtend",
                        "940afc1dccb4d4d43b609665cce0eaf31f42e8d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upto_app",
            "line_nb": 500,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; intro.",
                        "VernacExtend",
                        "4c60212fcbbb416a6ed72840028783179b73ece2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite map_id; auto.",
                        "VernacExtend",
                        "b0854c5082089bb1a3445d949b5b86f316d709ea"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn, map_app, map_map, Nat2Z.inj_succ; f_equal; f_equal.",
                        "VernacExtend",
                        "083973524a869f686371c0e28ddabeab60ed5e38"
                    ]
                },
                {
                    "command": [
                        "apply map_ext; intro; omega.",
                        "VernacExtend",
                        "3a45948eb4c6bbc50771a9be015b4be720232ddf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upto_length",
            "line_nb": 508,
            "steps": [
                {
                    "command": [
                        "induction n; auto; simpl.",
                        "VernacExtend",
                        "6b6930eaad02b28c1b026e7fccaf77ebfcf43c97"
                    ]
                },
                {
                    "command": [
                        "rewrite map_length, IHn; auto.",
                        "VernacExtend",
                        "3563b3f00f3619c0a282ea1710f9190f070e5c51"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_upto",
            "line_nb": 512,
            "steps": [
                {
                    "command": [
                        "intro; rewrite Zlength_correct, upto_length; auto.",
                        "VernacExtend",
                        "aeb2c238046feda26b20834e7537958ae3a82805"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "skipn_cons",
            "line_nb": 515,
            "steps": [
                {
                    "command": [
                        "induction n; intros; simpl; destruct l; simpl in *; try omega; auto.",
                        "VernacExtend",
                        "05034b9696c0f7d831e4be0bc993008feb953512"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ.",
                        "VernacExtend",
                        "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_pos_cons; [|omega].",
                        "VernacExtend",
                        "11bb6045ea28938bc57d60390a84780c3581cf64"
                    ]
                },
                {
                    "command": [
                        "unfold Z.succ; rewrite Z.add_simpl_r.",
                        "VernacExtend",
                        "924a424639aa50eb93a5814d086dac8d79920cca"
                    ]
                },
                {
                    "command": [
                        "erewrite IHn; auto; omega.",
                        "VernacExtend",
                        "848bc26831d9bd5b431ed1f48c4a2d0091f2dbca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_upto",
            "line_nb": 525,
            "steps": [
                {
                    "command": [
                        "induction m; simpl; intros.",
                        "VernacExtend",
                        "738c751c4edf16c228e9dc66b9592aea22d1738c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_nil; simpl in *; rewrite Nat2Z.inj_0 in *; omega.",
                        "VernacExtend",
                        "72eac88da2c5797cebf2de1ea5301a0909b2b6df"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec n 0).",
                        "VernacExtend",
                        "08868513c0e5a8599babd2de2ff567aa1c2a5169"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst; apply Znth_0_cons.",
                        "VernacExtend",
                        "dcce73ead546e5ad7c70778921c1e7607bbee9b5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ in *.",
                        "VernacExtend",
                        "94a1923b4c404f4516050cf56ec08d5e432b7e68"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_pos_cons by omega.",
                        "VernacExtend",
                        "c3b4fb155af7a4ceb6dc192beebe3056fde20a00"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_map.",
                        "VernacExtend",
                        "64fc67c68ae6c726df42f8e94d9029dfcbb8388e"
                    ]
                },
                {
                    "command": [
                        "rewrite IHm.",
                        "VernacExtend",
                        "bf73c511f9e37493a929521561a4b35798c2f374"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_upto.",
                        "VernacExtend",
                        "8dd8daea2f8b1a4938965c5a106ac254096e797a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_Znth",
            "line_nb": 544,
            "steps": [
                {
                    "command": [
                        "unfold Znth; intros.",
                        "VernacExtend",
                        "555307e685bd668cac5159bb378013165a24b125"
                    ]
                },
                {
                    "command": [
                        "apply In_nth with (d := d) in H; destruct H as (n & ? & ?).",
                        "VernacExtend",
                        "2b854a68223f40a0d3cb04760b97607cdd841a84"
                    ]
                },
                {
                    "command": [
                        "exists (Z.of_nat n); split.",
                        "VernacExtend",
                        "dd58daba00682303dd489e093cac279b26342e28"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct; omega.",
                        "VernacExtend",
                        "3c58e615b482d35ab340a89d9c58a09e6c973b4f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Z.of_nat n) 0); [omega|].",
                        "VernacExtend",
                        "ebeb3c99b1b444a738f9258ef0eb3d91d4062262"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.id; auto.",
                        "VernacExtend",
                        "fc5428accde804885c3c7ff2335ba17bd67e8aa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_upd_Znth_old",
            "line_nb": 554,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply In_Znth in H; destruct H as (j & ? & ?); subst.",
                        "VernacExtend",
                        "3e34e71185b4e44e484439d0f15cc402b710aed3"
                    ]
                },
                {
                    "command": [
                        "unfold upd_Znth.",
                        "VernacExtend",
                        "95ddb9495752f5ead64e15932f2edb72a19b90fb"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec j i); [subst; contradiction|].",
                        "VernacExtend",
                        "9842fc11eaae50a9f05191e3ab87265ccfd0f780"
                    ]
                },
                {
                    "command": [
                        "rewrite in_app; simpl.",
                        "VernacExtend",
                        "5c0e0ff2077284f161ea2a8895f61b6069f3aafd"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt j i); [left | right; right].",
                        "VernacExtend",
                        "ab8bede67cba12a48019d28a985c808ee405317c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "erewrite <- (Z.add_0_r j), <- Znth_sublist; [apply Znth_In; rewrite Zlength_sublist| |]; auto; omega.",
                        "VernacExtend",
                        "96f9805a3cd71ff00736240fce90da401ef84387"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "erewrite <- (Z.sub_simpl_r _ (i + 1)), <- Znth_sublist; [apply Znth_In; rewrite Zlength_sublist| |]; omega.",
                        "VernacExtend",
                        "686c323e65a7f9aee9c92bf2d1f55590ebbe5cb6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_combine",
            "line_nb": 566,
            "steps": [
                {
                    "command": [
                        "intros; unfold Znth.",
                        "VernacExtend",
                        "7989a4df1d1c5ce54113449ebf28f5cc15752941"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i 0); auto.",
                        "VernacExtend",
                        "633c3efffa16dc09774391c84a1d9907f3b23cc6"
                    ]
                },
                {
                    "command": [
                        "apply combine_nth.",
                        "VernacExtend",
                        "2213c2247322137b6bd2203bb385793abfbb5313"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zlength_correct in *; rep_omega.",
                        "VernacExtend",
                        "6d737c426bd15e6cef0a03e246b5ef228935a514"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_combine",
            "line_nb": 572,
            "steps": [
                {
                    "command": [
                        "intros; rewrite !Zlength_correct, combine_length, Nat2Z.inj_min; auto.",
                        "VernacExtend",
                        "98c9789cce3af9a070be29fef15af3c122ad10aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_Znth",
            "line_nb": 575,
            "steps": [
                {
                    "command": [
                        "intros; unfold Znth.",
                        "VernacExtend",
                        "7989a4df1d1c5ce54113449ebf28f5cc15752941"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt (Z.of_nat i) 0); [omega|].",
                        "VernacExtend",
                        "c079dcc769bab9f6804a58a0b5f4e7603f9d2a41"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.id; auto.",
                        "VernacExtend",
                        "fc5428accde804885c3c7ff2335ba17bd67e8aa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_Znth_cons",
            "line_nb": 580,
            "steps": [
                {
                    "command": [
                        "intros; unfold upd_Znth, sublist.sublist; simpl.",
                        "VernacExtend",
                        "dba382f065a4b40f0d5ff633279dba141347c40a"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z.sub_0_r.",
                        "VernacExtend",
                        "e9cfeebc7e9e16aa607ed0b5fdd4ffce7aba206f"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.to_nat i) eqn: Hi.",
                        "VernacExtend",
                        "ff4326c7d0a49550cb70f08c444ca50e559bd188"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exploit Z2Nat_inj_0; eauto; omega.",
                        "VernacExtend",
                        "57e306b56886b616dabd0a4f315eed4ed45c1285"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons; repeat rewrite Z2Nat.inj_add; try omega.",
                        "VernacExtend",
                        "79fcbcc11626a12a863d6eb0104c6d9d2d05742d"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2Nat.inj_sub; try omega.",
                        "VernacExtend",
                        "aa1db43485b80cb23dcd492f502f82a83bf5b8b5"
                    ]
                },
                {
                    "command": [
                        "rewrite Hi; simpl.",
                        "VernacExtend",
                        "08260432355bdc5347ed2f7d82577f2e30afa4b9"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.sub_0_r.",
                        "VernacExtend",
                        "5b98063e5ed2e2470f00a8793f5a5d7ccafde326"
                    ]
                },
                {
                    "command": [
                        "do 4 f_equal.",
                        "VernacExtend",
                        "e99e2b1ab7ca81fb12ceee784455978dc516e26e"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.inj_succ; [|rewrite Zlength_correct; omega].",
                        "VernacExtend",
                        "3dd22b332ec4d42cea9f380a0206b9d79306afe7"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Z2Nat.inj_add; try omega.",
                        "VernacExtend",
                        "5732649c8bacd99a8487247f6a79ac6e3be23594"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.inj_sub; try omega.",
                        "VernacExtend",
                        "075c6786cd26b1ee3ebf64e41f1ebee6806aa3c2"
                    ]
                },
                {
                    "command": [
                        "simpl plus; omega.",
                        "VernacExtend",
                        "09c070dc6fb62dfbac7dcc5deffdde37553443f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_Znth_triv",
            "line_nb": 597,
            "steps": [
                {
                    "command": [
                        "intros; unfold upd_Znth.",
                        "VernacExtend",
                        "774945f168bf5f0ce358f4c6297717a58e345ddd"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite <- (firstn_skipn (Z.to_nat i) l) at 4.",
                        "VernacExtend",
                        "c6597e744d321d8d2e9ead75751fd763e58391c6"
                    ]
                },
                {
                    "command": [
                        "erewrite skipn_cons, Z2Nat.id, H; try omega; [|rewrite Zlength_correct in *; rep_omega].",
                        "VernacExtend",
                        "77bcfdb7e9441975f744c9cb5d0f9ead0567d261"
                    ]
                },
                {
                    "command": [
                        "unfold sublist.",
                        "VernacExtend",
                        "8210ab75a1a2dc3ddfadfb3aed3bee9dc75be488"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.sub_0_r, Z2Nat.inj_add, NPeano.Nat.add_1_r; try omega.",
                        "VernacExtend",
                        "8337bbf52d413090305d9deecfa4ea0c0e519f5f"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite firstn_same at 2; auto.",
                        "VernacExtend",
                        "198db24ba18a38a775fb27838172785b5f1be5c0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.inj_sub, Zlength_correct, Nat2Z.id, Z2Nat.inj_add, skipn_length; simpl; omega.",
                        "VernacExtend",
                        "6fe87be39e7c723ffd527373df593d404e47c9e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_upd_Znth",
            "line_nb": 606,
            "steps": [
                {
                    "command": [
                        "induction l1; simpl; intros; [rewrite Zlength_nil in *; omega|].",
                        "VernacExtend",
                        "e36c4ec80ce6727459f2f54b3e5fbf9234062b9e"
                    ]
                },
                {
                    "command": [
                        "destruct l2; [rewrite Zlength_nil in *; omega|].",
                        "VernacExtend",
                        "95d538bd6e00ad8c04f164166782142340e709f0"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zlength_cons in *.",
                        "VernacExtend",
                        "6fee36b4937891c3c10fb27886f1cd8a5e353dd8"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0).",
                        "VernacExtend",
                        "ed0407251a0d330a3d6d3f4b234de52e598904c6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite !upd_Znth0, !Zlength_cons, !sublist_1_cons, !sublist_same; auto; omega.",
                        "VernacExtend",
                        "fe132790403fe6bc1d56f0a79ecf3d2c44bcf587"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite !upd_Znth_cons; try omega; simpl.",
                        "VernacExtend",
                        "748c60f5882142187beedf636628852568e9702f"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1; auto; omega.",
                        "VernacExtend",
                        "b7d8bdaa4b2f9908e59dca49572bfc3a69e6dda9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_upd_Znth1",
            "line_nb": 617,
            "steps": [
                {
                    "command": [
                        "intros; rewrite <- combine_upd_Znth by auto.",
                        "VernacExtend",
                        "5581e1220c1c54cff4f7e8e7b7ae8a2f9b9c16e9"
                    ]
                },
                {
                    "command": [
                        "erewrite upd_Znth_triv with (l := l2); eauto; omega.",
                        "VernacExtend",
                        "0afa06f65011e9effb68fcfde9775d9596a4fe21"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_upd_Znth2",
            "line_nb": 621,
            "steps": [
                {
                    "command": [
                        "intros; rewrite <- combine_upd_Znth by auto.",
                        "VernacExtend",
                        "5581e1220c1c54cff4f7e8e7b7ae8a2f9b9c16e9"
                    ]
                },
                {
                    "command": [
                        "erewrite upd_Znth_triv with (l := l1); eauto; omega.",
                        "VernacExtend",
                        "9b7f403690a22983709dad9d64a8ad329378c320"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_concat",
            "line_nb": 625,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros.",
                        "VernacExtend",
                        "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; [|intros (? & ? & ?)]; contradiction.",
                        "VernacExtend",
                        "77d81a14d72c97904b1edacff6d35b647b05cf0f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite in_app, IHl; split.",
                        "VernacExtend",
                        "23da18467f20ab79676d7639e6b31238dcae9374"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros [? | (? & ? & ?)]; eauto.",
                        "VernacExtend",
                        "746e727652588ff906111737459804ceba66a784"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros (? & ? & [? | ?]); subst; eauto.",
                        "VernacExtend",
                        "78cacf79d735b30c56f6a1906c4df1881d05e59b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_concat",
            "line_nb": 636,
            "steps": [
                {
                    "command": [
                        "induction l; auto; simpl.",
                        "VernacExtend",
                        "eed68d4d83fee76794ef25f3fe5547ed00ee3133"
                    ]
                },
                {
                    "command": [
                        "rewrite app_length, IHl; auto.",
                        "VernacExtend",
                        "9a23ee221b022e16e6356dec9aa18bbdf1466ade"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_concat_min",
            "line_nb": 640,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros; [rewrite Zlength_nil in *; omega|].",
                        "VernacExtend",
                        "15da5691769a42c08a9f59f8b50c632e53d25dfc"
                    ]
                },
                {
                    "command": [
                        "rewrite app_length; destruct (eq_dec i 0).",
                        "VernacExtend",
                        "ae2568afea38629413e57d168bfe3c8da5dd03f3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite Znth_0_cons; omega.",
                        "VernacExtend",
                        "3a965584522fc4fd7749a78c433936ee93b88f56"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_pos_cons by omega.",
                        "VernacExtend",
                        "c3b4fb155af7a4ceb6dc192beebe3056fde20a00"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons in *; etransitivity; [apply IHl|]; omega.",
                        "VernacExtend",
                        "7d87567f5cd13443ddaf9179cb15f56fcda34a25"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_concat_upd",
            "line_nb": 649,
            "steps": [
                {
                    "command": [
                        "induction l; intros; [rewrite Zlength_nil in *; omega|].",
                        "VernacExtend",
                        "e79a02e81a33fbe78fdefb5361664701ec22c272"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0).",
                        "VernacExtend",
                        "ed0407251a0d330a3d6d3f4b234de52e598904c6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite upd_Znth0, Znth_0_cons, sublist_1_cons.",
                        "VernacExtend",
                        "dff0bbe7a39070a498e0b52cd3d7d391e054f37b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons in *; rewrite sublist_same by (auto; omega); simpl.",
                        "VernacExtend",
                        "73bf8d26d4092ced6788671a3c40e2ba9b0f7f13"
                    ]
                },
                {
                    "command": [
                        "rewrite !app_length; omega.",
                        "VernacExtend",
                        "1bb9c592c13dda35a503730cd6eeb28cec15a65c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_cons, Znth_pos_cons by omega; simpl.",
                        "VernacExtend",
                        "371e0a29c6743c0839471904e2c81b7e9cf91495"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons in *.",
                        "VernacExtend",
                        "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
                    ]
                },
                {
                    "command": [
                        "rewrite !app_length, IHl by omega.",
                        "VernacExtend",
                        "bbea2ac02f563acfa5672a5e7769f2da8e4e09ef"
                    ]
                },
                {
                    "command": [
                        "exploit (length_concat_min l (i - 1)); omega.",
                        "VernacExtend",
                        "b67255ac2c79a7baa43f700ce9a725b70efce9c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_rev",
            "line_nb": 662,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; auto.",
                        "VernacExtend",
                        "2300dcaca2cea0b38a7d9c3b8a28bfa9feaddecf"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_app; simpl.",
                        "VernacExtend",
                        "d92b4cf38245eb828307049758a3e3317aaee465"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp, sepcon_comm, IHl; auto.",
                        "VernacExtend",
                        "1b3052b8dfef2fd4b6e5d97ad941f00907994107"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incl_nil",
            "line_nb": 667,
            "steps": [
                {
                    "command": [
                        "repeat intro; contradiction.",
                        "VernacExtend",
                        "92190827c920a98f09efff62b69312aeb0b883cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incl_cons_out",
            "line_nb": 671,
            "steps": [
                {
                    "command": [
                        "intros; intros ? Hin; specialize (H _ Hin); destruct H; auto; subst; contradiction.",
                        "VernacExtend",
                        "2a4a9bd3cc0b2ca0404051787ac228516d7e8f60"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_upto",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "induction n; intro.",
                        "VernacExtend",
                        "33d42529595f9b7eaeb8f47ee97518a5b8868c37"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; split; try contradiction; omega.",
                        "VernacExtend",
                        "c342d87fd88a28e0267f3a10818db4bc82ce86eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ; simpl.",
                        "VernacExtend",
                        "05ba99a30849c0f67027c59580240456103cef5f"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff; split.",
                        "VernacExtend",
                        "99b1e2ae005ba747fabdb4cc33214089518c59c9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros [? | ?]; [omega|].",
                        "VernacExtend",
                        "1b8d50661af636aac8975e5623a22d1fb349ba2b"
                    ]
                },
                {
                    "command": [
                        "destruct H as (? & ? & ?); subst; rewrite IHn in *; omega.",
                        "VernacExtend",
                        "879299527f2366f946da5190169993355854834e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intro; destruct (eq_dec i 0); [auto | right].",
                        "VernacExtend",
                        "6d2895b3e405fcd230e780411ff39ea2b4e76f70"
                    ]
                },
                {
                    "command": [
                        "exists (i - 1); rewrite IHn; omega.",
                        "VernacExtend",
                        "79711c7b8be051fe4ccf8303e49d89658a069ef1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_fst",
            "line_nb": 688,
            "steps": [
                {
                    "command": [
                        "induction l; destruct l'; try discriminate; auto; intros.",
                        "VernacExtend",
                        "f0426880bb01ca9b2eb7a32a03313d8e4dd65027"
                    ]
                },
                {
                    "command": [
                        "inv H; simpl; rewrite IHl; auto.",
                        "VernacExtend",
                        "cf3102125d267bc99df81a6cdecf4e7a4ba94951"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_snd",
            "line_nb": 692,
            "steps": [
                {
                    "command": [
                        "induction l; destruct l'; try discriminate; auto; intros.",
                        "VernacExtend",
                        "f0426880bb01ca9b2eb7a32a03313d8e4dd65027"
                    ]
                },
                {
                    "command": [
                        "inv H; simpl; rewrite IHl; auto.",
                        "VernacExtend",
                        "cf3102125d267bc99df81a6cdecf4e7a4ba94951"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rev_combine",
            "line_nb": 696,
            "steps": [
                {
                    "command": [
                        "induction l1; destruct l2; try discriminate; auto; simpl; intros.",
                        "VernacExtend",
                        "246b79867777220b787f2154c5c4630dcfff04aa"
                    ]
                },
                {
                    "command": [
                        "inv H; rewrite combine_app; [|rewrite !rev_length; auto].",
                        "VernacExtend",
                        "3f08f1eb28f974de902a622a2cc7c91db4f53b15"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1; auto.",
                        "VernacExtend",
                        "3bcd23a92f23552a758e14aa4b09c186695e77c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_map_snd",
            "line_nb": 701,
            "steps": [
                {
                    "command": [
                        "induction l1; auto; simpl; intros.",
                        "VernacExtend",
                        "e114186f9d1e491afcc5a60102019e032a22df12"
                    ]
                },
                {
                    "command": [
                        "destruct l2; auto; simpl.",
                        "VernacExtend",
                        "b297159d1c27184777c3e1945bc636cafb392193"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1; auto.",
                        "VernacExtend",
                        "3bcd23a92f23552a758e14aa4b09c186695e77c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_const1",
            "line_nb": 706,
            "steps": [
                {
                    "command": [
                        "induction l1; auto; simpl; intros.",
                        "VernacExtend",
                        "e114186f9d1e491afcc5a60102019e032a22df12"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons in *; destruct n; [rewrite Zlength_correct in *; simpl in *; omega | simpl].",
                        "VernacExtend",
                        "5deb4b46b4a91b760ee2773c605fed2d42014fdf"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1; auto.",
                        "VernacExtend",
                        "3bcd23a92f23552a758e14aa4b09c186695e77c7"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ in *; omega.",
                        "VernacExtend",
                        "a82525e06a85e434e4e7dc99eae40de49a9d33cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_const2",
            "line_nb": 712,
            "steps": [
                {
                    "command": [
                        "induction n; destruct l2; auto; intros; rewrite ?Nat2Z.inj_succ, ?Zlength_nil, ?Zlength_cons in *; simpl in *; try (rewrite Zlength_correct in *; omega).",
                        "VernacExtend",
                        "e521e9ad63fd55e7a9b5cee7443296a7e0c9d015"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn; auto; omega.",
                        "VernacExtend",
                        "b5b7a40a49236191286f8a285ca4ec721f217724"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_const",
            "line_nb": 716,
            "steps": [
                {
                    "command": [
                        "induction l; auto; simpl.",
                        "VernacExtend",
                        "eed68d4d83fee76794ef25f3fe5547ed00ee3133"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl; auto.",
                        "VernacExtend",
                        "393525b1bdb1a369fcb5ee1df369f0a6bb2ffdb4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_upd_Znth",
            "line_nb": 720,
            "steps": [
                {
                    "command": [
                        "unfold upd_Znth; intros.",
                        "VernacExtend",
                        "d426523d5f937785301dfd6dd365f6cc4fdf5cfd"
                    ]
                },
                {
                    "command": [
                        "rewrite in_app in H; destruct H as [? | [? | ?]]; auto; right; eapply sublist_In; eauto.",
                        "VernacExtend",
                        "d206e1fe5e005e588685c8048b3ca21aae4b6b03"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_Znth_In",
            "line_nb": 724,
            "steps": [
                {
                    "command": [
                        "intros; unfold upd_Znth.",
                        "VernacExtend",
                        "774945f168bf5f0ce358f4c6297717a58e345ddd"
                    ]
                },
                {
                    "command": [
                        "rewrite in_app; simpl; auto.",
                        "VernacExtend",
                        "78214060553df06c9218817fa2d21d52d73cd97d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDup_Znth_iff",
            "line_nb": 728,
            "steps": [
                {
                    "command": [
                        "split; intros; [eapply NoDup_Znth_inj; eauto|].",
                        "VernacExtend",
                        "93cc2d02c6bdd71e45fcf6924567fde74bdb25e9"
                    ]
                },
                {
                    "command": [
                        "induction l; rewrite ?Zlength_cons in *; constructor.",
                        "VernacExtend",
                        "9bc510650ac5b8ac4871578b8b9416d4e021ac50"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro Hin; eapply In_Znth in Hin; destruct Hin as (j & ? & Hj).",
                        "VernacExtend",
                        "5d48739f0f88ffb64df65f7088c206305e3b1d6f"
                    ]
                },
                {
                    "command": [
                        "exploit (H 0 (j + 1)); try omega.",
                        "VernacExtend",
                        "a68e1aeebfa0396a9845a507e168b01a457f3751"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_cons_eq; simpl.",
                        "VernacExtend",
                        "6afbd1208cfc29feed9eee027f52392cf5465fbd"
                    ]
                },
                {
                    "command": [
                        "if_tac; [omega|].",
                        "VernacExtend",
                        "acaa292b3247b1295626605e01dd4b9892994f8b"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_simpl_r; eauto.",
                        "VernacExtend",
                        "02b0464bfca40ab00059e314424c7d68309c51da"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHl; intros.",
                        "VernacExtend",
                        "17c41ee74699ffcb3889dae4c0a533d241b6287b"
                    ]
                },
                {
                    "command": [
                        "exploit (H (i + 1) (j + 1)); try omega.",
                        "VernacExtend",
                        "2ed19772357dcd0d42350da8db33d9552c592c82"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_cons_eq, !Z.add_simpl_r.",
                        "VernacExtend",
                        "2f12c2664c3b9c6c3b8cf5cd6ad0810bf6f1e448"
                    ]
                },
                {
                    "command": [
                        "if_tac; [omega|].",
                        "VernacExtend",
                        "acaa292b3247b1295626605e01dd4b9892994f8b"
                    ]
                },
                {
                    "command": [
                        "if_tac; [omega | auto].",
                        "VernacExtend",
                        "7ab7aa2c05dd16354f56659d62c4c7b39d62abd5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDup_app",
            "line_nb": 753,
            "steps": [
                {
                    "command": [
                        "induction l1; intros.",
                        "VernacExtend",
                        "fb1b27cb856c7812b6af97a650698a744c9f86bc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto; constructor.",
                        "VernacExtend",
                        "d9db79991e875f0476e164618d6007a4b1f4b9c1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "exploit IHl1; eauto; intros (? & ? & ?).",
                        "VernacExtend",
                        "08fb16f7d6c39726adfd45836220468d38cb7f25"
                    ]
                },
                {
                    "command": [
                        "rewrite in_app in *.",
                        "VernacExtend",
                        "1ac5244ab3bafd210b0f5168b624318a19a88d8d"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros ? [? | ?]; auto; subst; auto.",
                        "VernacExtend",
                        "12ea82523022d165db107befd39beb47250c54d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDup_app_iff",
            "line_nb": 767,
            "steps": [
                {
                    "command": [
                        "intros; split; [apply NoDup_app|].",
                        "VernacExtend",
                        "4df1eea94503cadbb566e682f22e55a7d37e7e9d"
                    ]
                },
                {
                    "command": [
                        "intros (? & ? & Hsep); induction l1; auto.",
                        "VernacExtend",
                        "dd7302fc11cf6ceb344d8dbb4ab2f31e8d98edc8"
                    ]
                },
                {
                    "command": [
                        "inv H; simpl; constructor.",
                        "VernacExtend",
                        "34ff79cfb19f864fb529120cf00eeb8cfd101061"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite in_app_iff; intros [? | ?]; [contradiction|].",
                        "VernacExtend",
                        "278900cf66a2998c22abaa176f8a3d5bee699be8"
                    ]
                },
                {
                    "command": [
                        "eapply Hsep; simpl; eauto.",
                        "VernacExtend",
                        "4fd96115f3bcbb15da87049544f9d33726ba1ad0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHl1; auto.",
                        "VernacExtend",
                        "faf3c6a21d6bc708325ef9cfcef005f1721c606d"
                    ]
                },
                {
                    "command": [
                        "intros; apply Hsep; simpl; auto.",
                        "VernacExtend",
                        "d61060ba9bb3d355342fa31bc7258cd7fba3876e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDup_app_swap",
            "line_nb": 778,
            "steps": [
                {
                    "command": [
                        "intros; rewrite !NoDup_app_iff; split; intros (? & ? & Hsep); repeat split; auto; repeat intro; eapply Hsep; eauto.",
                        "VernacExtend",
                        "5701d625b21f6fbf08de6840ed4da91343219d05"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDup_concat_less",
            "line_nb": 781,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros; [rewrite Zlength_nil in *; omega|].",
                        "VernacExtend",
                        "15da5691769a42c08a9f59f8b50c632e53d25dfc"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons in *.",
                        "VernacExtend",
                        "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0).",
                        "VernacExtend",
                        "ed0407251a0d330a3d6d3f4b234de52e598904c6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite upd_Znth0, Zlength_cons, sublist_1_cons, sublist_same by (auto; omega); simpl.",
                        "VernacExtend",
                        "1ad6c83e89f0780824293d7b2164f1834b12cf9d"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_0_cons in Hless; subst.",
                        "VernacExtend",
                        "c7304611730172c7d4e6a3f9909d6df551f425ea"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_assoc, NoDup_app_swap, <- app_assoc, NoDup_app_iff, NoDup_app_swap in Hl; tauto.",
                        "VernacExtend",
                        "39959ca5209b5ac2cfb7f91f4f4ded394ae5e09f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_cons by omega; simpl.",
                        "VernacExtend",
                        "9a1007d2f613e95d93a7059df6f7b30c7c59bf14"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_pos_cons in Hless by omega.",
                        "VernacExtend",
                        "184fbb630c073e70959e2f17c120a0a40d0691e0"
                    ]
                },
                {
                    "command": [
                        "rewrite NoDup_app_iff in Hl; rewrite NoDup_app_iff.",
                        "VernacExtend",
                        "2c20ade19d524f71769e1d8ebdae578397fcea46"
                    ]
                },
                {
                    "command": [
                        "destruct Hl as (? & ? & Hsep).",
                        "VernacExtend",
                        "7fa1488d4638845a45b535cdbed929c5658c4094"
                    ]
                },
                {
                    "command": [
                        "split; [auto|]; split.",
                        "VernacExtend",
                        "0f049d928c10b8ac9b4c4fc47108d2c7d3dfb7db"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply IHl; eauto; omega.",
                        "VernacExtend",
                        "9eeadaa015c42b4887c0d42d55f2aecf818e5194"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros ?? Hin; eapply Hsep; eauto.",
                        "VernacExtend",
                        "d8d86307c976f8fd05683e89e43741c871d0b2a2"
                    ]
                },
                {
                    "command": [
                        "eapply concat_less_incl; eauto; omega.",
                        "VernacExtend",
                        "0be7fcd6e888a8b6c17dba0be8de38b917352dc6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_Znth",
            "line_nb": 801,
            "steps": [
                {
                    "command": [
                        "induction 1; intros.",
                        "VernacExtend",
                        "176684f910d62ec20fbc75549575bf1cd34fa8ec"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_nil in *; omega.",
                        "VernacExtend",
                        "11e355bcc65e98c7aa282771754cdae5eb378b32"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons in *.",
                        "VernacExtend",
                        "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0).",
                        "VernacExtend",
                        "ed0407251a0d330a3d6d3f4b234de52e598904c6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite !Znth_0_cons; auto.",
                        "VernacExtend",
                        "fa8ed8ddbc149e20b69b1794caa216d87cfb87fe"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_pos_cons; try omega.",
                        "VernacExtend",
                        "1d858eb7b1bb38a3318d58bddd4a343cffe6e44d"
                    ]
                },
                {
                    "command": [
                        "apply IHHall; omega.",
                        "VernacExtend",
                        "395ef7e16a1665821ddf62a5ad469af78c759e12"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_app_inv",
            "line_nb": 814,
            "steps": [
                {
                    "command": [
                        "induction l1; destruct l3; try discriminate; auto; intros.",
                        "VernacExtend",
                        "ffe87cb1050d9dacda9a961c83d84c4199154d32"
                    ]
                },
                {
                    "command": [
                        "inv H; inv Hlen.",
                        "VernacExtend",
                        "949afdc595aa1aa0cb212f0042c5656dc10b555b"
                    ]
                },
                {
                    "command": [
                        "exploit IHl1; eauto; intros (? & ?); split; [constructor|]; auto.",
                        "VernacExtend",
                        "73eb34dddaa7f07d3024c5a32efdc4608c4ed383"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_firstn",
            "line_nb": 819,
            "steps": [
                {
                    "command": [
                        "intros; revert n; induction H; intro.",
                        "VernacExtend",
                        "4b634abc0c2b185a4f1baa87dc74e37420f35075"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite !firstn_nil; auto.",
                        "VernacExtend",
                        "a7f6ba32eebf72064b828e97989489e49a4209f7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct n; simpl; auto.",
                        "VernacExtend",
                        "1e3544c1db38cf9d3b82500db7d90f24bce9aeea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_upd_Znth",
            "line_nb": 826,
            "steps": [
                {
                    "command": [
                        "intros; unfold upd_Znth.",
                        "VernacExtend",
                        "774945f168bf5f0ce358f4c6297717a58e345ddd"
                    ]
                },
                {
                    "command": [
                        "pose proof (mem_lemmas.Forall2_Zlength H) as Hlen.",
                        "VernacExtend",
                        "8af2464d50ac8dbfad8134408efb9653bfbec8bf"
                    ]
                },
                {
                    "command": [
                        "erewrite <- sublist_same with (al := l1), sublist_split with (mid := i) in H; auto; try omega.",
                        "VernacExtend",
                        "ecacada28a6ba9d14a346720e48bdf6e5825b4c2"
                    ]
                },
                {
                    "command": [
                        "erewrite <- sublist_same with (al := l2), sublist_split with (al := l2)(mid := i) in H; auto; try omega.",
                        "VernacExtend",
                        "ad4fb419f19b1913bb6bf38555a5b31972493c43"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_app_inv in H.",
                        "VernacExtend",
                        "c59a77dbf0f1a315f84eb69e87023effa55c93b2"
                    ]
                },
                {
                    "command": [
                        "destruct H as (? & Hall); apply Forall2_app; auto.",
                        "VernacExtend",
                        "ab57b4e93e07c8319f8a547c3902128f79cbab0b"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i (Zlength l1)).",
                        "VernacExtend",
                        "61079bdbad4cf1589db3da5aa08469625478c869"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_nil_gen; auto; omega.",
                        "VernacExtend",
                        "e5dc0f21441490877d763f2cafc24163815c90c0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_comm.",
                        "VernacExtend",
                        "cb1af9408ed4e4ab13bf29109365368cad89a879"
                    ]
                },
                {
                    "command": [
                        "replace (Zlength l1) with (Zlength l1 - i + i) by omega.",
                        "VernacExtend",
                        "23cda587f8c014d142955ff5409932db40af93f5"
                    ]
                },
                {
                    "command": [
                        "replace (Zlength l2) with (Zlength l2 - i + i) by omega.",
                        "VernacExtend",
                        "ff7837dc1017ac8d53483a57789f5519aa49d60a"
                    ]
                },
                {
                    "command": [
                        "erewrite <- !sublist_sublist with (j := Zlength l1); try omega.",
                        "VernacExtend",
                        "c1cb7fae97fb1d1ffe82dd424decdac4f7631915"
                    ]
                },
                {
                    "command": [
                        "inversion Hall as [Hl1 Hl2 | ?????? Hl1 Hl2].",
                        "VernacExtend",
                        "667ea943132c4bf087a0f99bcd6f51dcd9d7b1a8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite !Hlen, <- Hl2.",
                        "VernacExtend",
                        "4d427d0c51a2277890b61f209e2ebb4ec897dbf1"
                    ]
                },
                {
                    "command": [
                        "unfold sublist; rewrite !skipn_nil, !firstn_nil; auto.",
                        "VernacExtend",
                        "1520ea0132b8857cf94df6c661f2666406148b26"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_1_cons, !Hlen, <- Hl2, sublist_1_cons.",
                        "VernacExtend",
                        "58bb5a4d93afa38ab46f555c86eba7543871bed2"
                    ]
                },
                {
                    "command": [
                        "unfold sublist; simpl; apply Forall2_firstn; auto.",
                        "VernacExtend",
                        "47dba0c6b1f931b566dc2d6d962b75bdfe70f019"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Nat2Z.inj; rewrite <- !Zlength_correct.",
                        "VernacExtend",
                        "926951c9fa66975abfc582c94989376308c66505"
                    ]
                },
                {
                    "command": [
                        "autorewrite with sublist; auto.",
                        "VernacExtend",
                        "928ba352fac4c0a4d960f940cd8d2b6430082342"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_impl'",
            "line_nb": 853,
            "steps": [
                {
                    "command": [
                        "induction 2; simpl in *; auto.",
                        "VernacExtend",
                        "712c50d95c2fb012dd4091f842b67f8298602767"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_impl",
            "line_nb": 856,
            "steps": [
                {
                    "command": [
                        "induction 2; auto.",
                        "VernacExtend",
                        "dcfc52477da5ede37c9d912847b566de0e271512"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_id_eq",
            "line_nb": 859,
            "steps": [
                {
                    "command": [
                        "induction l; auto.",
                        "VernacExtend",
                        "6df74a097ee826dbbeb45167e7678377d4e52265"
                    ]
                },
                {
                    "command": [
                        "simpl; apply f_equal; auto.",
                        "VernacExtend",
                        "0497396dcc248d7bfaffc8fb30d2349ae7e68aa7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_map",
            "line_nb": 863,
            "steps": [
                {
                    "command": [
                        "induction l1.",
                        "VernacExtend",
                        "dfeb7bb70eb7390d22f3eada025c33a176cd1338"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; intro H.",
                        "VernacExtend",
                        "496dd5fc77c723ff896bbd9bc6dee3ccc3aa9bde"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct l2; auto; inv H.",
                        "VernacExtend",
                        "40d9a9c21c04b00142e87bd96dcabe0843f6578b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H; simpl; auto.",
                        "VernacExtend",
                        "119811780f92497484b832c8ec003364cb5904e0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; intro H.",
                        "VernacExtend",
                        "496dd5fc77c723ff896bbd9bc6dee3ccc3aa9bde"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct l2; inv H.",
                        "VernacExtend",
                        "eacc0437bfb6c744d1e2e89999de77b06b882fb5"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1 in *; constructor; auto.",
                        "VernacExtend",
                        "628999d138c3e6b10ac298e8589d35f98db054dc"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H; simpl; constructor; auto.",
                        "VernacExtend",
                        "4ea5da2fc97c370884862d3f4845539cad0e2d52"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1; auto.",
                        "VernacExtend",
                        "3bcd23a92f23552a758e14aa4b09c186695e77c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_map1",
            "line_nb": 880,
            "steps": [
                {
                    "command": [
                        "intros; rewrite <- (map_id_eq l2) at 1; apply Forall2_map.",
                        "VernacExtend",
                        "1d5ffb877bd36020cac76432a338c18625eef798"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_map2",
            "line_nb": 883,
            "steps": [
                {
                    "command": [
                        "intros; rewrite <- (map_id_eq l1) at 1; apply Forall2_map.",
                        "VernacExtend",
                        "2dbc4411e781d74f691e1d5aceb022526f281cc1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_max_length",
            "line_nb": 886,
            "steps": [
                {
                    "command": [
                        "intros; unfold sublist.",
                        "VernacExtend",
                        "09ec98bb9a22664aa583101a1d4faac006f3a7d0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_firstn, Zlength_skipn.",
                        "VernacExtend",
                        "d722e53460fbca54ef774d9825b7a3323a309565"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.min_le_iff; right.",
                        "VernacExtend",
                        "e7b826ceab4e911302e67ba266f716602e22331d"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zlength_nonneg al).",
                        "VernacExtend",
                        "1b09827e8af8e30091d01484742a507228bb13a2"
                    ]
                },
                {
                    "command": [
                        "apply Z.max_lub; try omega.",
                        "VernacExtend",
                        "6a383c3145cad6fee7c8026083f5c002d321a921"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.le_sub_nonneg; apply Z.le_max_l.",
                        "VernacExtend",
                        "fa7214704bcb17108b256906c1aa26a3387c84cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_sublist",
            "line_nb": 894,
            "steps": [
                {
                    "command": [
                        "intros; revert j; revert dependent i; induction H; intros.",
                        "VernacExtend",
                        "0d30973e7dc6ecb7e62cdfed74342f9cdfae097c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_of_nil; constructor.",
                        "VernacExtend",
                        "ae2c862a57aab4c103a4a4adf9aab79ec1f17dbb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec j i); [rewrite !sublist_nil_gen; auto; constructor|].",
                        "VernacExtend",
                        "500cb9392b4b9dae5da392d848242db579cbedef"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0).",
                        "VernacExtend",
                        "ed0407251a0d330a3d6d3f4b234de52e598904c6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite !sublist_0_cons by omega.",
                        "VernacExtend",
                        "70083fbfd85589bdfd63abaf19a2107c1183037d"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_S_cons by omega.",
                        "VernacExtend",
                        "a57bab3cc096cce12c826994d2ff2e9e1e8fa394"
                    ]
                },
                {
                    "command": [
                        "apply IHForall2; omega.",
                        "VernacExtend",
                        "abb0c93f0d20b8b8ae4c5b4e6363246d44de5d1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_last",
            "line_nb": 908,
            "steps": [
                {
                    "command": [
                        "destruct l; auto.",
                        "VernacExtend",
                        "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
                    ]
                },
                {
                    "command": [
                        "exploit (@app_removelast_last _ (a :: l) d); [discriminate | intro Hlast].",
                        "VernacExtend",
                        "31c9f1233333a4ead799a40c4db1926c1cec4ba7"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite Forall_forall in H; apply H.",
                        "VernacExtend",
                        "974f3499e1e22d6b8e71168206e1bcf28a79eb01"
                    ]
                },
                {
                    "command": [
                        "rewrite Hlast at 2; rewrite in_app; simpl; auto.",
                        "VernacExtend",
                        "86bc303eba354b5b15d01d7668165947d80bf28a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_map",
            "line_nb": 914,
            "steps": [
                {
                    "command": [
                        "induction l; auto; simpl.",
                        "VernacExtend",
                        "eed68d4d83fee76794ef25f3fe5547ed00ee3133"
                    ]
                },
                {
                    "command": [
                        "destruct l; auto.",
                        "VernacExtend",
                        "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_removelast",
            "line_nb": 918,
            "steps": [
                {
                    "command": [
                        "induction l; auto; simpl; intros.",
                        "VernacExtend",
                        "279ca8eb5e74b40505c14e4c71486078bc450c1c"
                    ]
                },
                {
                    "command": [
                        "destruct l; auto.",
                        "VernacExtend",
                        "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
                    ]
                },
                {
                    "command": [
                        "destruct H; auto.",
                        "VernacExtend",
                        "95ae427bd4e09a5f31c59184b718811a23ecb36f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_dec",
            "line_nb": 923,
            "steps": [
                {
                    "command": [
                        "destruct l; auto.",
                        "VernacExtend",
                        "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_upd_Znth_l",
            "line_nb": 927,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "erewrite <- upd_Znth_triv with (l := l2)(i0 := i); eauto.",
                        "VernacExtend",
                        "59e8851d651d3b5217d38ecc7bf8402fbba9ab35"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_upd_Znth; eauto; omega.",
                        "VernacExtend",
                        "d7c1af6209aa4e71f717adf8167f11f74579cb15"
                    ]
                },
                {
                    "command": [
                        "apply mem_lemmas.Forall2_Zlength in H; omega.",
                        "VernacExtend",
                        "a7211d7ce66b76dd76ab74921a54870a0604618d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_upd_Znth_r",
            "line_nb": 933,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "erewrite <- upd_Znth_triv with (l := l1)(i0 := i) by (eauto; omega).",
                        "VernacExtend",
                        "97a33ac8e35de6c1d5422835b5dea10785090a0c"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_upd_Znth; eauto.",
                        "VernacExtend",
                        "63ea9a880e968876a9e63075c54d01509f83db9d"
                    ]
                },
                {
                    "command": [
                        "apply mem_lemmas.Forall2_Zlength in H; omega.",
                        "VernacExtend",
                        "a7211d7ce66b76dd76ab74921a54870a0604618d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_eq_upto",
            "line_nb": 939,
            "steps": [
                {
                    "command": [
                        "induction l1; destruct l2; rewrite ?Zlength_cons, ?Zlength_nil; try solve [split; intro H; inv H; try (rewrite Zlength_correct in *; omega)]; simpl.",
                        "VernacExtend",
                        "b9e438597d365dfcb375de9ac82677f5ea680d45"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (upto 0) with (@nil Z); split; auto.",
                        "VernacExtend",
                        "63cab705c84aa8609396fda1865d3702b19e62be"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.inj_succ by (apply Zlength_nonneg).",
                        "VernacExtend",
                        "dc88c8522268d3d75dec63a8d298ee0a2a399f72"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.add_1_l, upto_app, Forall_app, Forall_map.",
                        "VernacExtend",
                        "d6333a13695db0a289b11ab0c985d1d01e9adacd"
                    ]
                },
                {
                    "command": [
                        "change (upto 1) with [0]; split; intro H.",
                        "VernacExtend",
                        "5c176b5e49caa8b27cad45a55bb665a932679cb4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H as [|????? Hall]; subst.",
                        "VernacExtend",
                        "07683db4bd60b165ed5dfd375b50b4b26f91a568"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1 in Hall; destruct Hall as (? & Hall).",
                        "VernacExtend",
                        "093c465930555f405a012d33d35b1cd7e1cfe426"
                    ]
                },
                {
                    "command": [
                        "split; [congruence|].",
                        "VernacExtend",
                        "61d8fae76bb7ad3b85b0c7d1b4f4c3cd449cdcc7"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite Forall_forall in *; intros ? Hin.",
                        "VernacExtend",
                        "c9b4b81a48526e205b9cb81a436f3c9233152b6f"
                    ]
                },
                {
                    "command": [
                        "specialize (Hall _ Hin); simpl.",
                        "VernacExtend",
                        "1abaa05241d684569e31a92454a2d30448fa6b44"
                    ]
                },
                {
                    "command": [
                        "rewrite In_upto in Hin.",
                        "VernacExtend",
                        "f019208e40161583f587304768c468402017fa0f"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_pos_cons, Z.add_simpl_l by omega; auto.",
                        "VernacExtend",
                        "30cac4790f3b62193740124be4f52ebb3bc5592c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct H as (? & Ha & Hall); inversion Ha as [|?? HP]; subst.",
                        "VernacExtend",
                        "ceb2d2dd36fe601119d9dbc0813dfebd8abdb5cf"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_0_cons in HP.",
                        "VernacExtend",
                        "6de289012533137ae442c42bb2ef76696bfd597b"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1; split; [omega|].",
                        "VernacExtend",
                        "009fa0bc2b06a94c39af6ba5717fbbcaa7fd9bb1"
                    ]
                },
                {
                    "command": [
                        "rewrite Forall_forall in *; intros ? Hin.",
                        "VernacExtend",
                        "c9b4b81a48526e205b9cb81a436f3c9233152b6f"
                    ]
                },
                {
                    "command": [
                        "specialize (Hall _ Hin); simpl in *.",
                        "VernacExtend",
                        "f512c1c6d6eb6b29dd9baf0342cce778d4e72a26"
                    ]
                },
                {
                    "command": [
                        "rewrite In_upto in Hin.",
                        "VernacExtend",
                        "f019208e40161583f587304768c468402017fa0f"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_pos_cons, Z.add_simpl_l in Hall by omega; auto.",
                        "VernacExtend",
                        "93eccb5c4e9a8f62e9fdb600a8eee6e64ec94e14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_forall_Znth",
            "line_nb": 966,
            "steps": [
                {
                    "command": [
                        "intros; rewrite Forall2_eq_upto, Forall_forall.",
                        "VernacExtend",
                        "3da3dc4b8e20fd9a1ef300f95533420a7ca1477b"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite In_upto.",
                        "VernacExtend",
                        "0156ec1f72eec951f7c2e437586718faf4da45f5"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.id by (apply Zlength_nonneg).",
                        "VernacExtend",
                        "a638481ad5a8e244b47d02142a69cf2b4439de67"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_inbounds",
            "line_nb": 972,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i 0); [contradiction H; apply Znth_underflow; auto|].",
                        "VernacExtend",
                        "7303503cefac48ad0a6cf2a73af4f33e3ee7308a"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_lt_dec i (Zlength l)); [omega|].",
                        "VernacExtend",
                        "f4bc0e261e33d632d9bfd1cef2324b61548d642f"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_overflow in H; [contradiction H; auto | omega].",
                        "VernacExtend",
                        "9ac238e5894f90f8a4ca9af735037f4623337518"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_next",
            "line_nb": 978,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_cons_sublist; [|omega].",
                        "VernacExtend",
                        "a98a05bf937adba318b165f5f09583f84e30ed05"
                    ]
                },
                {
                    "command": [
                        "apply sublist_split; omega.",
                        "VernacExtend",
                        "44d61b9e6e17c673849d7314038719da1d94504f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_init",
            "line_nb": 983,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_app2; rewrite ?Zlength_repeat, ?Z2Nat.id; try omega.",
                        "VernacExtend",
                        "c513a8d1fd6c2333c579a04dd4aaaa7fe8b96d71"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite Zminus_diag, upd_Znth0.",
                        "VernacExtend",
                        "56afb64ef6fe33d7b2aff21ee7f52268cf506a42"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.to_nat (b - Zlength l)) eqn: Hi.",
                        "VernacExtend",
                        "75bc4eca019efc2de38a882cac3ba8395284a5e7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "change O with (Z.to_nat 0) in Hi; apply Z2Nat.inj in Hi; omega.",
                        "VernacExtend",
                        "20af4067e162dd3d6f85eb74c5b99791e92acf30"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite sublist_1_cons, sublist_same; try rewrite Zlength_cons, !Zlength_repeat; try omega.",
                        "VernacExtend",
                        "5b6ede46c4c8a0dd38acdf251591c69dd2a5807a"
                    ]
                },
                {
                    "command": [
                        "replace (Z.to_nat (b - (Zlength l + 1))) with n; auto.",
                        "VernacExtend",
                        "a618e6c74694394bc39caaaa8179b5500ba79a1f"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.sub_add_distr, Z2Nat.inj_sub; try omega.",
                        "VernacExtend",
                        "5ba55fa17c0f6ddfe1de80b5b570c2de0e6dcf5f"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Hi; simpl; omega.",
                        "VernacExtend",
                        "be970aa6e6d02f3372d4fdc6ad1865e7aa26fa70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_init_const",
            "line_nb": 996,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_init; try rewrite Zlength_repeat, Z2Nat.id; auto; try omega.",
                        "VernacExtend",
                        "0ed2cfffe863653c02bfd26b4708485a2e981f10"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.inj_add, repeat_plus, <- app_assoc; auto; omega.",
                        "VernacExtend",
                        "db08b4b40cb459f9901a683c8c44c4280725c54a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_Znth_eq",
            "line_nb": 1001,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros; auto.",
                        "VernacExtend",
                        "8220944a1558558e20036605293047bd287cfc25"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_0_cons, IHl, map_map, map_length, upto_length.",
                        "VernacExtend",
                        "5545df5ec09323d189c4529e9a579b12a402a07d"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply map_ext_in; intros.",
                        "VernacExtend",
                        "ea24ad029557ad488332a88f8642625afbf19cb2"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_pos_cons, <- IHl.",
                        "VernacExtend",
                        "5c1692fb6feb3146fbf503e4338c0c8bcc9c5fd2"
                    ]
                },
                {
                    "command": [
                        "unfold Z.succ; rewrite Z.add_simpl_r; auto.",
                        "VernacExtend",
                        "9484f6a21e5af92e30f1263a3a44806d5dd8bc71"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite In_upto in *; omega.",
                        "VernacExtend",
                        "f796101bc1d727768e5ae536c3fce288a4439b7a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_Znth_eq",
            "line_nb": 1012,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros.",
                        "VernacExtend",
                        "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_nil in *; omega.",
                        "VernacExtend",
                        "11e355bcc65e98c7aa282771754cdae5eb378b32"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec 0 i).",
                        "VernacExtend",
                        "87256eea8ca2b219b9e1f9e66367f88a340940b7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite upd_Znth0, Zlength_cons, sublist_1_cons, sublist_same; auto; try omega.",
                        "VernacExtend",
                        "a6454017e1693286aef3761f914550fdd01644a4"
                    ]
                },
                {
                    "command": [
                        "rewrite list_Znth_eq with (l0 := l) at 1.",
                        "VernacExtend",
                        "4589a4a710a951891ea6c20b5ddf70f2b8c3043a"
                    ]
                },
                {
                    "command": [
                        "rewrite map_map.",
                        "VernacExtend",
                        "ae8e13105f5289f0c1e44cbfa83eff3c6f47acee"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply map_ext_in; intros.",
                        "VernacExtend",
                        "ea24ad029557ad488332a88f8642625afbf19cb2"
                    ]
                },
                {
                    "command": [
                        "rewrite In_upto in *.",
                        "VernacExtend",
                        "49e8fea5c2ec57244ee4cbf331c87093203550ab"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec (Z.succ a0) 0); [omega|].",
                        "VernacExtend",
                        "8fb320538e0834f91e31737ab0e50b6d7d77a42f"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_pos_cons; [|omega].",
                        "VernacExtend",
                        "11bb6045ea28938bc57d60390a84780c3581cf64"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_0_cons, upd_Znth_cons; [|omega].",
                        "VernacExtend",
                        "d03ec677c4c42c37890f7212817e9659bf45750d"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons in *.",
                        "VernacExtend",
                        "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl, map_map; [|omega].",
                        "VernacExtend",
                        "ba437c165331f73f79c2cf4ee602fbfea9a82a94"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply map_ext_in; intros.",
                        "VernacExtend",
                        "ea24ad029557ad488332a88f8642625afbf19cb2"
                    ]
                },
                {
                    "command": [
                        "rewrite In_upto in *.",
                        "VernacExtend",
                        "49e8fea5c2ec57244ee4cbf331c87093203550ab"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec a0 (i - 1)), (eq_dec (Z.succ a0) i); try omega; auto.",
                        "VernacExtend",
                        "8d738cc5f6f6b76cb1f46089a2f5357faa46eb25"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_pos_cons; [|omega].",
                        "VernacExtend",
                        "11bb6045ea28938bc57d60390a84780c3581cf64"
                    ]
                },
                {
                    "command": [
                        "f_equal; omega.",
                        "VernacExtend",
                        "3b812353131f9b9bebbd6410b3fa7c9d2e597ec3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_Znth_diff'",
            "line_nb": 1037,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i 0).",
                        "VernacExtend",
                        "1d4e6d4d62fc8e4e151b9c8c7f9624235a238e27"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_underflow; auto.",
                        "VernacExtend",
                        "f762d1e7351f500b9415b1027e54d354afa49225"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i (Zlength l)).",
                        "VernacExtend",
                        "ebe5236ea19d46635cf3f43cb7dddff4614ea547"
                    ]
                },
                {
                    "command": [
                        "apply upd_Znth_diff; auto; omega.",
                        "VernacExtend",
                        "4f073901009931f4a31d7d540f44322937576a46"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_overflow; auto.",
                        "VernacExtend",
                        "26976e3d826bea830d7e8a99523acc7db37a49c9"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_Zlength; auto.",
                        "VernacExtend",
                        "20b3d09d7e267b772183b321af9bf077b762b301"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_Znth_eq'",
            "line_nb": 1058,
            "steps": [
                {
                    "command": [
                        "induction l1; destruct l2; intros; rewrite ?Zlength_cons in *; rewrite ?Zlength_nil in *; auto; try (rewrite Zlength_correct in *; omega).",
                        "VernacExtend",
                        "57a03a0487c9099bea78e33768b3f93d992a4992"
                    ]
                },
                {
                    "command": [
                        "exploit (Heq 0); [rewrite Zlength_correct; omega|].",
                        "VernacExtend",
                        "e01b58af967b08ebf4d38bacb6182f00f4df742c"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_0_cons; intro; subst.",
                        "VernacExtend",
                        "229dc924a10b18b4e64cdcd2524f92acd9ab206d"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply IHl1; [omega|].",
                        "VernacExtend",
                        "70c7d8f16635f71d31e477f2ed2bb3659a041f33"
                    ]
                },
                {
                    "command": [
                        "intros; specialize (Heq (j + 1)); rewrite !Znth_pos_cons in Heq; try omega.",
                        "VernacExtend",
                        "3a4034095df662006c1ee4f3e640c073e0701417"
                    ]
                },
                {
                    "command": [
                        "rewrite !Z.add_simpl_r in *; apply Heq; omega.",
                        "VernacExtend",
                        "f5c9a83f0d0a9068d4b97d0d64304d9a2665e071"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_Znth_eq'",
            "line_nb": 1066,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Zlength (upd_Znth i l1 x) = Zlength (upd_Znth i l2 x)).",
                        "VernacExtend",
                        "14adaffbc2f20ea525f34678da71d7ccaf670973"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite !upd_Znth_Zlength; auto; omega.",
                        "VernacExtend",
                        "cb18e1f501d41747adc077ec47184cc5abb008a9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply list_Znth_eq'; auto.",
                        "VernacExtend",
                        "dbe962864d724780da76cd92152d08b6ec9d354e"
                    ]
                },
                {
                    "command": [
                        "intros ? Hj; destruct (eq_dec j i).",
                        "VernacExtend",
                        "09b656d8ebcf03101780fb6656fbd30bad30aa29"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite !upd_Znth_same; auto; omega.",
                        "VernacExtend",
                        "b49431fad37a993314c46140b2ebabd5d5b10eb1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite !upd_Znth_diff'; rewrite upd_Znth_Zlength in Hj; auto; omega.",
                        "VernacExtend",
                        "303fbf657b96791b7109fa11169cddccc99f4a1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_Znth_twice",
            "line_nb": 1079,
            "steps": [
                {
                    "command": [
                        "intros; unfold upd_Znth.",
                        "VernacExtend",
                        "774945f168bf5f0ce358f4c6297717a58e345ddd"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_app; rewrite ?Zlength_app, ?Zlength_cons, ?Zlength_sublist; try omega.",
                        "VernacExtend",
                        "050d374eb7a967be7a6a4ebdba8433274b435e81"
                    ]
                },
                {
                    "command": [
                        "rewrite 2Z.min_l, 2Z.min_r, 2Z.max_r, 2Z.max_l; try omega.",
                        "VernacExtend",
                        "1b015dd4e785d4b97d72459c1d7165513d96c274"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_nil, app_nil_r; simpl.",
                        "VernacExtend",
                        "96bf4db5c3c4522459f91ff5ba7589036e9bd58b"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_S_cons, !sublist_sublist; try omega.",
                        "VernacExtend",
                        "080e79b0a8227efa78730b8d74d7acbbaa81c91c"
                    ]
                },
                {
                    "command": [
                        "f_equal; f_equal; [|f_equal]; omega.",
                        "VernacExtend",
                        "18cae6b3c8820c6469669dd7fbfbdf2b88675031"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hd_Znth",
            "line_nb": 1087,
            "steps": [
                {
                    "command": [
                        "destruct l; auto.",
                        "VernacExtend",
                        "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDup_filter",
            "line_nb": 1090,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros; auto.",
                        "VernacExtend",
                        "8220944a1558558e20036605293047bd287cfc25"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "destruct (f a); auto.",
                        "VernacExtend",
                        "2cd489f57b47c929cf3dad2bf3030d45333517f3"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_In; intros (? & ?); contradiction.",
                        "VernacExtend",
                        "e119a73a97ea0c91a8217d240ac23fee7b6f34fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_Zlength",
            "line_nb": 1097,
            "steps": [
                {
                    "command": [
                        "intros; apply Z2Nat.inj; try apply Zlength_nonneg.",
                        "VernacExtend",
                        "e9331ec565e559f3391915aed1612075b382d8bf"
                    ]
                },
                {
                    "command": [
                        "rewrite !ZtoNat_Zlength; apply Permutation.Permutation_length; auto.",
                        "VernacExtend",
                        "c9d4203c3613f87cb35ea0e121630464556d3280"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_filter",
            "line_nb": 1101,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl; auto.",
                        "VernacExtend",
                        "c744c0db2f17ed7745b4893bfd3017058a6e4828"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (f x); auto.",
                        "VernacExtend",
                        "b164fdfe47b9391d455e087160294c3f20cdecd8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (f x); auto.",
                        "VernacExtend",
                        "b164fdfe47b9391d455e087160294c3f20cdecd8"
                    ]
                },
                {
                    "command": [
                        "destruct (f y); auto.",
                        "VernacExtend",
                        "f7f58642338433df46e6541e6c7c44e1c497d7d1"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "etransitivity; eauto.",
                        "VernacExtend",
                        "9a7a03ac784b775f6203b3104ab84c89b908a8ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDup_add",
            "line_nb": 1112,
            "steps": [
                {
                    "command": [
                        "induction l1; simpl; intros.",
                        "VernacExtend",
                        "a75edf2a12acf37be08446879dcf0f8cfc9e0e1d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inv H; constructor; auto.",
                        "VernacExtend",
                        "94c2a63227e9a0494888b6417590039e3b09dc19"
                    ]
                },
                {
                    "command": [
                        "rewrite in_app in *; simpl; intros [? | [? | ?]]; subst; tauto.",
                        "VernacExtend",
                        "ccb3eeafff679e2ec7042a2d3ac18810bf3240ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_in_count",
            "line_nb": 1120,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply NoDup_incl_length; [apply NoDup_filter; auto|].",
                        "VernacExtend",
                        "e933393ac6fbcbe3e88a572793871b8734733d1d"
                    ]
                },
                {
                    "command": [
                        "intros ? Hin.",
                        "VernacExtend",
                        "45a0f16e56a18c7506642e9c81c2883cef1d82f0"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_In in Hin; destruct Hin.",
                        "VernacExtend",
                        "ec939e4bc3891176d8ba02eace1fca4b7491fad5"
                    ]
                },
                {
                    "command": [
                        "destruct (in_dec eq_dec a l); [auto | discriminate].",
                        "VernacExtend",
                        "132638718b000e50f0ffe49db5286589bf389a19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_length",
            "line_nb": 1127,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros; auto.",
                        "VernacExtend",
                        "8220944a1558558e20036605293047bd287cfc25"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl.",
                        "VernacExtend",
                        "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
                    ]
                },
                {
                    "command": [
                        "destruct (f a); simpl; omega.",
                        "VernacExtend",
                        "035b7157f55e6db2b85d47f7aa1c027d4973b2cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_filter",
            "line_nb": 1132,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Zlength_correct at 2.",
                        "VernacExtend",
                        "ba4dbf198b4db7cba57c81586b9c46f9511e5a81"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_length with (f0 := f).",
                        "VernacExtend",
                        "94450ed89893be8580f59d1063aec95004c4192a"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_add.",
                        "VernacExtend",
                        "f4283898b8ff4130b4a42d50e196c192acf71146"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zlength_correct; omega.",
                        "VernacExtend",
                        "2a44ff575501bf506c50b03ea115a0a3d22f38e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_concat",
            "line_nb": 1139,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct, length_concat.",
                        "VernacExtend",
                        "37c9d2e9733f633d2339e968e743b10bf007b753"
                    ]
                },
                {
                    "command": [
                        "change 0 with (Z.of_nat O).",
                        "VernacExtend",
                        "2df72b6fda32553bbf98cf45ad75fbb17ace0c3d"
                    ]
                },
                {
                    "command": [
                        "forget O as n.",
                        "VernacExtend",
                        "00a0ae2bfe34a936f5c65a935e7f931228fd201d"
                    ]
                },
                {
                    "command": [
                        "revert n; induction l; auto; simpl; intros.",
                        "VernacExtend",
                        "da289bd275848f39ebd255f31ced53978e53551a"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_add, IHl, Zlength_correct; auto.",
                        "VernacExtend",
                        "754589649118810350622f7adabab8eac48412d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_concat_le",
            "line_nb": 1147,
            "steps": [
                {
                    "command": [
                        "intros; rewrite Zlength_concat.",
                        "VernacExtend",
                        "d409c08f207f94f989492611f0a259446dfb122f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Z.add_0_l (n * Zlength l)).",
                        "VernacExtend",
                        "8de65980b6b5e7711d780e1cff05f37656ec888d"
                    ]
                },
                {
                    "command": [
                        "forget 0 as m; revert m.",
                        "VernacExtend",
                        "89c0b4216328e811cb1ceaa62346543ceb3df54b"
                    ]
                },
                {
                    "command": [
                        "induction H; simpl; intro.",
                        "VernacExtend",
                        "42dbf6152e18c7a0f13560a5a1eb00acbd5b6f12"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_nil; omega.",
                        "VernacExtend",
                        "98170f83cbde0983d8f1ea7d95c89780d6263ebc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons, Z.mul_succ_r.",
                        "VernacExtend",
                        "0dcf39d938f1ec758a18ba469af35b443d0d3d17"
                    ]
                },
                {
                    "command": [
                        "specialize (IHForall m); omega.",
                        "VernacExtend",
                        "29cbd6ce8852eda0db5d1b5a468c357a3a55a98d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_app",
            "line_nb": 1158,
            "steps": [
                {
                    "command": [
                        "induction l1; auto; intros; simpl.",
                        "VernacExtend",
                        "c3bb42a4e9fd23932550e1dee1117eab11bcd441"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1.",
                        "VernacExtend",
                        "ff982e15bacd402f06c6809dc374790cc3fb6db2"
                    ]
                },
                {
                    "command": [
                        "destruct (f a); auto.",
                        "VernacExtend",
                        "2cd489f57b47c929cf3dad2bf3030d45333517f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_concat",
            "line_nb": 1163,
            "steps": [
                {
                    "command": [
                        "induction l; auto; simpl.",
                        "VernacExtend",
                        "eed68d4d83fee76794ef25f3fe5547ed00ee3133"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_app, IHl; auto.",
                        "VernacExtend",
                        "62b0ca124ce75063020b9e58807e4983e4ba9161"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDup_upto",
            "line_nb": 1167,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; constructor.",
                        "VernacExtend",
                        "d216ab6af7f56c25bead3149b6da2b4957c6b024"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff.",
                        "VernacExtend",
                        "a55211f52b1485764a1a9aeded8063ea6d2e66ea"
                    ]
                },
                {
                    "command": [
                        "intros (? & ? & ?); rewrite In_upto in *; omega.",
                        "VernacExtend",
                        "daf05eafd8f9130104ff44b7fce53f57ea7bbb67"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply FinFun.Injective_map_NoDup; auto.",
                        "VernacExtend",
                        "e820c2ce3c7d9e44b9fb7203ab5f99ef540ae7bc"
                    ]
                },
                {
                    "command": [
                        "intros ???; omega.",
                        "VernacExtend",
                        "c868bcd3640daa114af76c620a3df6875b18e7b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_remove",
            "line_nb": 1176,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros; [tauto|].",
                        "VernacExtend",
                        "399b120711dd98654e538ecf817b0f430bfe2507"
                    ]
                },
                {
                    "command": [
                        "destruct (A_eq y a); simpl; rewrite IHl; repeat split; try tauto.",
                        "VernacExtend",
                        "885a71090de00cb4ef1d043e1c3cabd7b01e6d8b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H as [[|]]; auto; subst; contradiction.",
                        "VernacExtend",
                        "425e5a77b4f79ef484b072f76c5e8f6d64d65309"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H as [|[]]; subst; auto.",
                        "VernacExtend",
                        "5b200fa98633ce5ead61102589a23d14124cd5f2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_NoDup",
            "line_nb": 1184,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl.",
                        "VernacExtend",
                        "7a487009c144d86c422c5127aa0fc0ff1707bb8b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "if_tac; auto.",
                        "VernacExtend",
                        "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "intro X; apply In_remove in X; destruct X; contradiction.",
                        "VernacExtend",
                        "512a78e0f5b712fa06d4b2220c548a60722f103f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_out",
            "line_nb": 1193,
            "steps": [
                {
                    "command": [
                        "induction l; auto; simpl; intros.",
                        "VernacExtend",
                        "279ca8eb5e74b40505c14e4c71486078bc450c1c"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl by auto.",
                        "VernacExtend",
                        "2bab85b8670ec384ba7b1357be0cd4c9a53d7459"
                    ]
                },
                {
                    "command": [
                        "if_tac; auto; subst; tauto.",
                        "VernacExtend",
                        "833f1701b047df23c1c61fb20cbb5a6c236c9ca6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_from_NoDup",
            "line_nb": 1198,
            "steps": [
                {
                    "command": [
                        "induction l1; simpl; intros.",
                        "VernacExtend",
                        "a75edf2a12acf37be08446879dcf0f8cfc9e0e1d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "if_tac; [|contradiction].",
                        "VernacExtend",
                        "44746bcd474a595cfe296304edc75f7218b2abfa"
                    ]
                },
                {
                    "command": [
                        "inv H; apply remove_out; auto.",
                        "VernacExtend",
                        "83aed69f410d7b1e7896b46cceb502b5ad6d0865"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H as [|?? Hx]; subst.",
                        "VernacExtend",
                        "05b74441dc329ff7ea8d96b8ebdfb811b927cb0e"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl1 by auto.",
                        "VernacExtend",
                        "d02fa9d28acfc555d4417cadc42a1c800b4db324"
                    ]
                },
                {
                    "command": [
                        "if_tac; auto.",
                        "VernacExtend",
                        "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
                    ]
                },
                {
                    "command": [
                        "subst; contradiction Hx; rewrite in_app; simpl; auto.",
                        "VernacExtend",
                        "8f2fc6459a48c08ad935da6ddb21616ebca88f90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incl_remove_add",
            "line_nb": 1209,
            "steps": [
                {
                    "command": [
                        "intros; intros ? Hin; specialize (H _ Hin).",
                        "VernacExtend",
                        "ffb5737e53472b96ecf06ca58b0e89b531c2dfae"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite In_remove.",
                        "VernacExtend",
                        "1beff9d39d6f06546c2b0b146db7a3723e0d8207"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec a x); auto.",
                        "VernacExtend",
                        "0eea5485b29f804284dfafef3ad91676afa8b9c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_pigeonhole",
            "line_nb": 1214,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (filter_length (fun x => if in_dec eq_dec x l then true else false) (upto (Z.to_nat n))) as Hlen.",
                        "VernacExtend",
                        "37a77504924765ceae10d26b8167860302a64c66"
                    ]
                },
                {
                    "command": [
                        "rewrite upto_length in Hlen.",
                        "VernacExtend",
                        "0236e554f823b25a98dffb94f1685b4c6046e8d9"
                    ]
                },
                {
                    "command": [
                        "assert (length (filter (fun x => negb (if in_dec eq_dec x l then true else false)) (upto (Z.to_nat n))) > 0)%nat.",
                        "VernacExtend",
                        "af603b305397e5970945e5fe175264a750e9aded"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exploit (list_in_count l (upto (Z.to_nat n))).",
                        "VernacExtend",
                        "c8c499b7186e3796654747f3b1239d24aa7abc6b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply NoDup_upto.",
                        "VernacExtend",
                        "f7ac5dd9daddc9794f16f0d1c29f7cb28a9236f2"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct in H.",
                        "VernacExtend",
                        "24191ff0bf5bb198fd214a771d44264ff9d873e1"
                    ]
                },
                {
                    "command": [
                        "apply Z2Nat.inj_lt in H; try omega.",
                        "VernacExtend",
                        "3c079668b0643bfe2138171c8149a746e21c11ec"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.id in H; omega.",
                        "VernacExtend",
                        "571595ee272cf1ce337c0710e85062c3ea8ca92a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (filter (fun x => negb (if in_dec eq_dec x l then true else false)) (upto (Z.to_nat n))) eqn: Hfilter; [simpl in *; omega|].",
                        "VernacExtend",
                        "770447a4b28ff5bca99fa4c6bccbfcd6c58e3dd3"
                    ]
                },
                {
                    "command": [
                        "assert (In z (filter (fun x => negb (if in_dec eq_dec x l then true else false)) (upto (Z.to_nat n)))) as Hin by (rewrite Hfilter; simpl; auto).",
                        "VernacExtend",
                        "d570850182046e778c9ae719c113580b3fab88c2"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_In, In_upto, Z2Nat.id in Hin; [|rewrite Zlength_correct in *; omega].",
                        "VernacExtend",
                        "9a1c1b54e8e550dcdf272d67dc55f02fcb418570"
                    ]
                },
                {
                    "command": [
                        "destruct Hin; destruct (in_dec eq_dec z l); try discriminate; eauto.",
                        "VernacExtend",
                        "32d44ae9b453df7863feb8059acc79ae2a86cdd2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_sublist_upto",
            "line_nb": 1233,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold sublist in H; rewrite skipn_nil, firstn_nil in H; contradiction.",
                        "VernacExtend",
                        "b2634249c43d16afc91de02b360f460b2d9748ba"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ; simpl in *.",
                        "VernacExtend",
                        "32b310eaa8e759c832a289b34ecae159261fb04e"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt 0 j).",
                        "VernacExtend",
                        "40a256f3397f440d13222396cd3ef3c43b425d72"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0).",
                        "VernacExtend",
                        "ed0407251a0d330a3d6d3f4b234de52e598904c6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite sublist_0_cons in H; try omega; destruct H; [omega|].",
                        "VernacExtend",
                        "f65f02087cae84c0d4d7bfca00aa1d53ef15afff"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_map, in_map_iff in H; destruct H as (? & ? & H); subst.",
                        "VernacExtend",
                        "d9e76231fa57bacdb310b51b7fe1b34f542e928f"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt 0 (j - 1)).",
                        "VernacExtend",
                        "328013e845007b1bad3abfef9456b12db26b4a86"
                    ]
                },
                {
                    "command": [
                        "exploit IHn; eauto; omega.",
                        "VernacExtend",
                        "196f36d3308619e66b7638da1e69beead9a1999d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_nil_gen in H; [contradiction | omega].",
                        "VernacExtend",
                        "e5ab163d329ff7324a85f02204ab1256e1217762"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_S_cons in H; [|omega].",
                        "VernacExtend",
                        "08795edf21a5147e3d37a9c53312f410ff1e1927"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_map, in_map_iff in H; destruct H as (? & ? & H); subst.",
                        "VernacExtend",
                        "d9e76231fa57bacdb310b51b7fe1b34f542e928f"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt 0 (j - 1)).",
                        "VernacExtend",
                        "328013e845007b1bad3abfef9456b12db26b4a86"
                    ]
                },
                {
                    "command": [
                        "exploit IHn; eauto; omega.",
                        "VernacExtend",
                        "196f36d3308619e66b7638da1e69beead9a1999d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_nil_gen in H; [contradiction | omega].",
                        "VernacExtend",
                        "e5ab163d329ff7324a85f02204ab1256e1217762"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_nil_gen in H; [contradiction | omega].",
                        "VernacExtend",
                        "e5ab163d329ff7324a85f02204ab1256e1217762"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incl_cons_iff",
            "line_nb": 1260,
            "steps": [
                {
                    "command": [
                        "split; intro.",
                        "VernacExtend",
                        "966a6edea9c2088caf0e546be884ea531f6207b3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; [|eapply incl_cons_inv; eauto].",
                        "VernacExtend",
                        "9ba04b35207534b11310c115e3de27e6818b1f35"
                    ]
                },
                {
                    "command": [
                        "specialize (H a); apply H; simpl; auto.",
                        "VernacExtend",
                        "553781051bcff0b1bd06b0eb19bd4d1c402b0675"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H; intros ? [? | ?]; subst; auto.",
                        "VernacExtend",
                        "e715eaa829908e6f55a77292bae0ab6189c0fe93"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_le_1",
            "line_nb": 1268,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "firstn_all",
            "line_nb": 1271,
            "steps": [
                {
                    "command": [
                        "induction n; destruct l; auto; simpl; intros; try omega.",
                        "VernacExtend",
                        "b99a990c6a0f59e23bbc6455803a4d8296228f17"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn; auto; omega.",
                        "VernacExtend",
                        "b5b7a40a49236191286f8a285ca4ec721f217724"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_all",
            "line_nb": 1275,
            "steps": [
                {
                    "command": [
                        "intros; unfold sublist; simpl.",
                        "VernacExtend",
                        "4144edfcf7720ac73246a1635f7a38a85b86a68d"
                    ]
                },
                {
                    "command": [
                        "apply firstn_all.",
                        "VernacExtend",
                        "f80c434b0925cacab67591d49e41673bbae466b8"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct in *; rep_omega.",
                        "VernacExtend",
                        "d318025ddb002eafc40bdda71cb82442e9841e17"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_prefix",
            "line_nb": 1280,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec i 0).",
                        "VernacExtend",
                        "8c6d33a4a2b27757bffec9e473f31866ac77c0c1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_nil_gen; auto.",
                        "VernacExtend",
                        "f537bd489793c9d80a9283a9e0fd8c3ca93f1d67"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.min_le_iff; auto.",
                        "VernacExtend",
                        "d238503cbb22aa9dc39130258479e4355d5c93a7"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.min_spec i j) as [(? & ->) | (? & ->)].",
                        "VernacExtend",
                        "6ad39116f9a076548f25a9040ee25d7f04f12475"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_sublist, !Z.add_0_r by omega; auto.",
                        "VernacExtend",
                        "b141f263f6ad1e5a499d92e663e7da12922d134c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply sublist_all.",
                        "VernacExtend",
                        "b95d08728288a896389e136637e3ee03d74bc4b6"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec j 0); [rewrite sublist_nil_gen; auto; rewrite Zlength_nil; omega|].",
                        "VernacExtend",
                        "9932848dec9d5c458eba8e91a3ef2a16d097c459"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec j (Zlength l)).",
                        "VernacExtend",
                        "ea4b5608a643fbf562231c8a53f4d0a6519c3219"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_sublist; try omega.",
                        "VernacExtend",
                        "b55ecb9f7e1c84f864c95a3dcc89491c7a57d1a1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "pose proof (sublist_max_length 0 j l); omega.",
                        "VernacExtend",
                        "20f2a3944fb0f7bbe1b266d8ee9dfc53937d198c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_suffix",
            "line_nb": 1299,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec (Zlength l - j) i).",
                        "VernacExtend",
                        "89c03eb642f469cd3a5e47d1fc363516cb959120"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_nil_gen; auto; omega.",
                        "VernacExtend",
                        "e5dc0f21441490877d763f2cafc24163815c90c0"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_sublist by omega.",
                        "VernacExtend",
                        "552c6305a1396636ff6dfbb941efff3217bc7e2d"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.sub_simpl_r; auto.",
                        "VernacExtend",
                        "c14b9cbccd6889d8ea01db14c22a9c75268ff3a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_parts1",
            "line_nb": 1308,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec j i).",
                        "VernacExtend",
                        "b5b95d48423ca56b16c903c072d28d68726b473c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_nil_gen; auto.",
                        "VernacExtend",
                        "f537bd489793c9d80a9283a9e0fd8c3ca93f1d67"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_sublist by omega.",
                        "VernacExtend",
                        "552c6305a1396636ff6dfbb941efff3217bc7e2d"
                    ]
                },
                {
                    "command": [
                        "rewrite !Z.add_0_r; auto.",
                        "VernacExtend",
                        "6e4fd550fd77af2165af08f57911deebf4031ead"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_parts2",
            "line_nb": 1317,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec j i).",
                        "VernacExtend",
                        "b5b95d48423ca56b16c903c072d28d68726b473c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_nil_gen; auto; omega.",
                        "VernacExtend",
                        "e5dc0f21441490877d763f2cafc24163815c90c0"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_sublist; try omega.",
                        "VernacExtend",
                        "7e15ffac324aedddb639fae18a2c20415b05e1f3"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_0_l, Z.sub_simpl_r; auto.",
                        "VernacExtend",
                        "7d5661eecce6036610981c120848e604da7ba94d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_Forall2",
            "line_nb": 1326,
            "steps": [
                {
                    "command": [
                        "induction 2; auto; intros.",
                        "VernacExtend",
                        "762a1f6c97af7fe6d47d5199bd516a0bbd8266e9"
                    ]
                },
                {
                    "command": [
                        "inv HP.",
                        "VernacExtend",
                        "b61e9eaad2b57332631a0ce1009dab1fdaabc83e"
                    ]
                },
                {
                    "command": [
                        "constructor; eauto.",
                        "VernacExtend",
                        "e0e7f3b9c455b20aabae95754dcd431c74b5b789"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_suffix_max",
            "line_nb": 1331,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i (Zlength l1)).",
                        "VernacExtend",
                        "61079bdbad4cf1589db3da5aa08469625478c869"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite sublist_nil in Hl2.",
                        "VernacExtend",
                        "575510f3988095f63ef205082cf39d02ffb206b6"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.max_l by omega.",
                        "VernacExtend",
                        "33008bfe4a3b1ffcaa54873a74678ce072eb8059"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hl2; auto.",
                        "VernacExtend",
                        "e3be24f88cf312cba62f235f9b991fd54de66c22"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Zlength l1 = Zlength l2) as Heq.",
                        "VernacExtend",
                        "f52315e95971a860cb93ac3a986514ee132ebf19"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Zlength (sublist i (Zlength l1) l1) = Zlength (sublist i (Zlength l2) l2)) as Heq by congruence.",
                        "VernacExtend",
                        "f5c6ed9526bbcdd360bc6b253f92f58c811a0107"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec (Zlength l2) i).",
                        "VernacExtend",
                        "b8dcf55e8e8f47100568dc559d46a3e0f89f1e76"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_nil_gen with (l0 := l2), Zlength_nil in Heq; auto.",
                        "VernacExtend",
                        "b3308cb5717ba8df91e25f67a6a59f55b26f226e"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zlength_sublist in Heq; omega.",
                        "VernacExtend",
                        "88ae98836a596fcc3dc3bc9e6efa5f558bb821d1"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zlength_sublist in Heq; omega.",
                        "VernacExtend",
                        "88ae98836a596fcc3dc3bc9e6efa5f558bb821d1"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros; destruct (Z.max_spec i j) as [(? & ->) | (? & ->)].",
                        "VernacExtend",
                        "f8f888e4f708b1f77d7bc9aaf8450d2a42af1483"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "replace (sublist _ _ _) with (sublist (j - i) (Zlength l2 - i) (sublist i (Zlength l2) l2)).",
                        "VernacExtend",
                        "5ee9387a620f3a6e059f1110e03ac19446fb2f9a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hl2, sublist_sublist, !Z.sub_simpl_r by omega.",
                        "VernacExtend",
                        "488e21bcc3eaee7fa774dab911b5ef133ef1f3e2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq; auto.",
                        "VernacExtend",
                        "74966dfb8fc3cc839b843661dc848bb5e697e143"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_sublist, !Z.sub_simpl_r by omega; auto.",
                        "VernacExtend",
                        "906eeb8f2893f88d1e2a8bd7e86b7ef9b7d0c24f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hl2.",
                        "VernacExtend",
                        "38bee75271aa59d6de5332b519e727bc7453344a"
                    ]
                },
                {
                    "command": [
                        "replace (sublist _ _ _) with (sublist (i - j) (Zlength l1 - j) (sublist j (Zlength l1) l1)).",
                        "VernacExtend",
                        "c6eb7ddcb89dfba8a474e85271586828d8a72033"
                    ]
                },
                {
                    "command": [
                        "apply Forall_sublist; auto.",
                        "VernacExtend",
                        "2d7b6cd6da690e1a2020b756a3ab70d0f84950b5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_sublist, !Z.sub_simpl_r; auto; omega.",
                        "VernacExtend",
                        "6fa4859398912c8755f5560de4e2ea7d6c43610d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_extend",
            "line_nb": 1366,
            "steps": [
                {
                    "command": [
                        "induction l; destruct ls; auto; simpl.",
                        "VernacExtend",
                        "917c06b0aab145e0e599b1504d342962c148f346"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zlength_cons, IHl; auto.",
                        "VernacExtend",
                        "815ef552bd04e50c783ca1b3f1c30d988f9bbbd9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_extend_in",
            "line_nb": 1370,
            "steps": [
                {
                    "command": [
                        "induction l; destruct ls; simpl; intros; try rewrite Zlength_nil in *; try omega.",
                        "VernacExtend",
                        "a337c3d241b6b9c25d7ca8989986030f19e44b61"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zlength_cons in *.",
                        "VernacExtend",
                        "6fee36b4937891c3c10fb27886f1cd8a5e353dd8"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0); subst; auto.",
                        "VernacExtend",
                        "b66622fde515e6b6bfe077ecf6b4b801b2c672b1"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_pos_cons; try omega.",
                        "VernacExtend",
                        "1d858eb7b1bb38a3318d58bddd4a343cffe6e44d"
                    ]
                },
                {
                    "command": [
                        "apply IHl; omega.",
                        "VernacExtend",
                        "78d3603f491f27957a421a68aedf114b0cadef65"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_extend_ge",
            "line_nb": 1377,
            "steps": [
                {
                    "command": [
                        "induction l; destruct ls; auto; simpl; intros.",
                        "VernacExtend",
                        "7e20262599d2c7223535e4f64c1c110f85fc637f"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i 0); [rewrite !Znth_underflow; auto|].",
                        "VernacExtend",
                        "0f22fff03bb46f007b50b276102a667f1d1f3550"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons in *.",
                        "VernacExtend",
                        "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0); [rewrite Zlength_correct in *; omega|].",
                        "VernacExtend",
                        "4d06746d844bc487d9c867e101a4caea4993629d"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_pos_cons; try omega.",
                        "VernacExtend",
                        "1d858eb7b1bb38a3318d58bddd4a343cffe6e44d"
                    ]
                },
                {
                    "command": [
                        "apply IHl; omega.",
                        "VernacExtend",
                        "78d3603f491f27957a421a68aedf114b0cadef65"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_extendr",
            "line_nb": 1386,
            "steps": [
                {
                    "command": [
                        "induction l; destruct ls; auto; simpl.",
                        "VernacExtend",
                        "917c06b0aab145e0e599b1504d342962c148f346"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zlength_cons, IHl; auto.",
                        "VernacExtend",
                        "815ef552bd04e50c783ca1b3f1c30d988f9bbbd9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_extendr_in",
            "line_nb": 1390,
            "steps": [
                {
                    "command": [
                        "induction l; destruct ls; simpl; intros; try rewrite Zlength_nil in *; try omega.",
                        "VernacExtend",
                        "a337c3d241b6b9c25d7ca8989986030f19e44b61"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zlength_cons in *.",
                        "VernacExtend",
                        "6fee36b4937891c3c10fb27886f1cd8a5e353dd8"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0); subst; auto.",
                        "VernacExtend",
                        "b66622fde515e6b6bfe077ecf6b4b801b2c672b1"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_pos_cons; try omega.",
                        "VernacExtend",
                        "1d858eb7b1bb38a3318d58bddd4a343cffe6e44d"
                    ]
                },
                {
                    "command": [
                        "apply IHl; omega.",
                        "VernacExtend",
                        "78d3603f491f27957a421a68aedf114b0cadef65"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Znth_extendr_ge",
            "line_nb": 1397,
            "steps": [
                {
                    "command": [
                        "induction l; destruct ls; auto; simpl; intros.",
                        "VernacExtend",
                        "7e20262599d2c7223535e4f64c1c110f85fc637f"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i 0); [rewrite !Znth_underflow; auto|].",
                        "VernacExtend",
                        "0f22fff03bb46f007b50b276102a667f1d1f3550"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons in *.",
                        "VernacExtend",
                        "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0); [rewrite Zlength_correct in *; omega|].",
                        "VernacExtend",
                        "4d06746d844bc487d9c867e101a4caea4993629d"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_pos_cons; try omega.",
                        "VernacExtend",
                        "1d858eb7b1bb38a3318d58bddd4a343cffe6e44d"
                    ]
                },
                {
                    "command": [
                        "apply IHl; omega.",
                        "VernacExtend",
                        "78d3603f491f27957a421a68aedf114b0cadef65"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_join_eq",
            "line_nb": 1405,
            "steps": [
                {
                    "command": [
                        "induction b; intros; inv Hc; inv Hc'; auto.",
                        "VernacExtend",
                        "82f0e0ad76539737ea4da3dadcc30451663f9917"
                    ]
                },
                {
                    "command": [
                        "assert (w0 = w1) by (eapply sepalg.join_eq; eauto).",
                        "VernacExtend",
                        "c0f090c381e4958d6f9e9708c2a002316044e57c"
                    ]
                },
                {
                    "command": [
                        "subst; eapply IHb; eauto.",
                        "VernacExtend",
                        "225c2ce3088407f562b5e2612463a6852fb1ea0b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "readable_share_list_join",
            "line_nb": 1410,
            "steps": [
                {
                    "command": [
                        "induction 1; intros [? | Hexists]; try inv Hexists; auto.",
                        "VernacExtend",
                        "196e761ed21b9ffca6d0a319273f0c07d7d280b8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHfold_rel; left; eapply readable_share_join; eauto.",
                        "VernacExtend",
                        "1aaea80f3ee0e7ee5d29d2e28406c2867a39a441"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHfold_rel; left; eapply readable_share_join; eauto.",
                        "VernacExtend",
                        "1aaea80f3ee0e7ee5d29d2e28406c2867a39a441"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_0_cons'",
            "line_nb": 1417,
            "steps": [
                {
                    "command": [
                        "intros; unfold sublist.",
                        "VernacExtend",
                        "09ec98bb9a22664aa583101a1d4faac006f3a7d0"
                    ]
                },
                {
                    "command": [
                        "replace (Z.to_nat i) with O; simpl.",
                        "VernacExtend",
                        "6d63517c4823751484f2283d8a6d7495c1fb7b6e"
                    ]
                },
                {
                    "command": [
                        "assert (0 < j - i) as Hgt by omega.",
                        "VernacExtend",
                        "a205628e2c83576fd403ee76c941fd76fa04cdf0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.inj_lt in Hgt; try omega.",
                        "VernacExtend",
                        "bfa3553273e01c4ecef51279a698679e6c40e06d"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.to_nat (j - i)) eqn: Hj; [omega|].",
                        "VernacExtend",
                        "93841cac0cafec738c2b924ad7daecd552b97093"
                    ]
                },
                {
                    "command": [
                        "simpl; f_equal; f_equal.",
                        "VernacExtend",
                        "99a2e47926a201d502a54b5d3db4dd4c08757f70"
                    ]
                },
                {
                    "command": [
                        "replace (j - 1 - i) with (j - i - 1) by omega.",
                        "VernacExtend",
                        "9449f52859e6213bc73abbc78c44155272f0ab2d"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.inj_sub; simpl; omega.",
                        "VernacExtend",
                        "df6ca424d5765ce5e146c599f942d8ab001f0e68"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0); subst; auto.",
                        "VernacExtend",
                        "b66622fde515e6b6bfe077ecf6b4b801b2c672b1"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat_neg; auto; omega.",
                        "VernacExtend",
                        "17f964eafbb2ee53fc3b4bb0d5cc0ffeb2f7ea33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_combine",
            "line_nb": 1429,
            "steps": [
                {
                    "command": [
                        "induction l1; simpl; intros.",
                        "VernacExtend",
                        "a75edf2a12acf37be08446879dcf0f8cfc9e0e1d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold sublist; rewrite !skipn_nil, !firstn_nil; auto.",
                        "VernacExtend",
                        "1520ea0132b8857cf94df6c661f2666406148b26"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct l2.",
                        "VernacExtend",
                        "0d8334f1e323ab8f2f037af4de7aa29b31aa5fb2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold sublist at 1 3; rewrite !skipn_nil, !firstn_nil.",
                        "VernacExtend",
                        "ee40d23c186a0ca9662f55a56b879a9defbaea6d"
                    ]
                },
                {
                    "command": [
                        "destruct (sublist i j (a :: l1)); auto.",
                        "VernacExtend",
                        "6ad201597bfd36d1a0d55ae289a35ed2a365b8c4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec j i); [rewrite !sublist_nil_gen; auto|].",
                        "VernacExtend",
                        "383724d81061e5a36aadc8c78def21f4d61f4b4c"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec i 0).",
                        "VernacExtend",
                        "8c6d33a4a2b27757bffec9e473f31866ac77c0c1"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite !sublist_0_cons'; try omega.",
                        "VernacExtend",
                        "cc6856ced68bf6556686fbad2a69d68eeea9abe8"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite IHl1; auto.",
                        "VernacExtend",
                        "3250fdd6ed04ce55b0917d219e17a35e2ffc67fb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_S_cons; try omega.",
                        "VernacExtend",
                        "515d852e84db54fdabc92fa29ee82e59331c6ec9"
                    ]
                },
                {
                    "command": [
                        "apply IHl1; omega.",
                        "VernacExtend",
                        "a051c3d42ac41a25380660c7f778e385e68510cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extend_nil",
            "line_nb": 1448,
            "steps": [
                {
                    "command": [
                        "destruct l; auto.",
                        "VernacExtend",
                        "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extend_cons",
            "line_nb": 1451,
            "steps": [
                {
                    "command": [
                        "destruct l; auto.",
                        "VernacExtend",
                        "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_extend",
            "line_nb": 1454,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros.",
                        "VernacExtend",
                        "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold sublist; rewrite skipn_nil, firstn_nil; auto.",
                        "VernacExtend",
                        "dd650618e29e4878f26152447a501022d2635156"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct ls.",
                        "VernacExtend",
                        "4acd3e1f2c45e2d50b3a43010af8b1bb5fce525e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold sublist; rewrite skipn_nil, firstn_nil, extend_nil; auto.",
                        "VernacExtend",
                        "b6d97b408dcd8afe8a30824acbc9e56ffdba6e00"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec j i); [rewrite !sublist_nil_gen; auto|].",
                        "VernacExtend",
                        "383724d81061e5a36aadc8c78def21f4d61f4b4c"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec i 0).",
                        "VernacExtend",
                        "8c6d33a4a2b27757bffec9e473f31866ac77c0c1"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite !sublist_0_cons'; try omega.",
                        "VernacExtend",
                        "cc6856ced68bf6556686fbad2a69d68eeea9abe8"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl; auto.",
                        "VernacExtend",
                        "393525b1bdb1a369fcb5ee1df369f0a6bb2ffdb4"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_S_cons; auto; omega.",
                        "VernacExtend",
                        "51a62a4bce59cf1fd933a519e9dad7b293b4190f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extendr_nil",
            "line_nb": 1471,
            "steps": [
                {
                    "command": [
                        "destruct l; auto.",
                        "VernacExtend",
                        "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extendr_cons",
            "line_nb": 1474,
            "steps": [
                {
                    "command": [
                        "destruct l; auto.",
                        "VernacExtend",
                        "4bfcd2f625a7deb5fd623e7d5faa40328d66978c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_extendr",
            "line_nb": 1477,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros.",
                        "VernacExtend",
                        "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold sublist; rewrite skipn_nil, firstn_nil; auto.",
                        "VernacExtend",
                        "dd650618e29e4878f26152447a501022d2635156"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct ls.",
                        "VernacExtend",
                        "4acd3e1f2c45e2d50b3a43010af8b1bb5fce525e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold sublist; rewrite skipn_nil, firstn_nil, extendr_nil; auto.",
                        "VernacExtend",
                        "51c94678fb5b80c8decc0d56010a28b2fa40f4ee"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec j i); [rewrite !sublist_nil_gen; auto|].",
                        "VernacExtend",
                        "383724d81061e5a36aadc8c78def21f4d61f4b4c"
                    ]
                },
                {
                    "command": [
                        "destruct (Z_le_dec i 0).",
                        "VernacExtend",
                        "8c6d33a4a2b27757bffec9e473f31866ac77c0c1"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite !sublist_0_cons'; try omega.",
                        "VernacExtend",
                        "cc6856ced68bf6556686fbad2a69d68eeea9abe8"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl; auto.",
                        "VernacExtend",
                        "393525b1bdb1a369fcb5ee1df369f0a6bb2ffdb4"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_S_cons; auto; omega.",
                        "VernacExtend",
                        "51a62a4bce59cf1fd933a519e9dad7b293b4190f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sublist_over",
            "line_nb": 1494,
            "steps": [
                {
                    "command": [
                        "intros; unfold sublist.",
                        "VernacExtend",
                        "09ec98bb9a22664aa583101a1d4faac006f3a7d0"
                    ]
                },
                {
                    "command": [
                        "rewrite skipn_short, firstn_nil; auto.",
                        "VernacExtend",
                        "cd72831fb8a08185bddede3be769f7992c9b3582"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct in *; rep_omega.",
                        "VernacExtend",
                        "d318025ddb002eafc40bdda71cb82442e9841e17"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "make_tycontext_s_distinct",
            "line_nb": 1499,
            "steps": [
                {
                    "command": [
                        "intros a l.",
                        "VernacExtend",
                        "c6e1e3cc6e0e03269c9c78383c22e173bc25ab2e"
                    ]
                },
                {
                    "command": [
                        "unfold make_tycontext_s.",
                        "VernacExtend",
                        "61b57e0c5bc29349a03eedaad8ab6b1795b13a44"
                    ]
                },
                {
                    "command": [
                        "change (@ptree_set) with (@PTree.set).",
                        "VernacExtend",
                        "b6f41e1268837082cbb70425e2ae547cb0a272d5"
                    ]
                },
                {
                    "command": [
                        "induction l; simpl; intros.",
                        "VernacExtend",
                        "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "inv Hdistinct.",
                        "VernacExtend",
                        "5eadea3d90c3290f243e335e79032e214ad4f4fd"
                    ]
                },
                {
                    "command": [
                        "destruct a0.",
                        "VernacExtend",
                        "a0487b579f70f8f2c661f4b75c8b4e6474630618"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct Ha.",
                        "VernacExtend",
                        "b9d209998016b53acbed24a2ce5e398de114be70"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gss.",
                        "VernacExtend",
                        "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gso.",
                        "VernacExtend",
                        "6aa89209a57c294bcf8a2206f8ecdff703d6861a"
                    ]
                },
                {
                    "command": [
                        "apply IHl; auto.",
                        "VernacExtend",
                        "e138dde1a62d902d35fbbfcb71bf2b52acaced18"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "apply H1; apply in_map.",
                        "VernacExtend",
                        "596d4720031026447c2df99b96801ba2f20f8f3f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookup_distinct",
            "line_nb": 1519,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros; [contradiction|].",
                        "VernacExtend",
                        "0b721e99bd03e5e042567578631bad9645f387a2"
                    ]
                },
                {
                    "command": [
                        "inv Hdistinct.",
                        "VernacExtend",
                        "5eadea3d90c3290f243e335e79032e214ad4f4fd"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "destruct (peq (fst a) (fst a0)) eqn: Heq; setoid_rewrite Heq.",
                        "VernacExtend",
                        "5350b4e00454244c948e5c659cb59cbcb90338ce"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct Ha; [subst; auto|].",
                        "VernacExtend",
                        "31f10b0ff23fd5659390b399e3b07b88b25b66ea"
                    ]
                },
                {
                    "command": [
                        "contradiction H1; rewrite in_map_iff; eauto.",
                        "VernacExtend",
                        "697261d9f00f5febf2f9678aee8b9f4f6f7b2733"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHl; auto.",
                        "VernacExtend",
                        "e138dde1a62d902d35fbbfcb71bf2b52acaced18"
                    ]
                },
                {
                    "command": [
                        "destruct Ha; auto; subst.",
                        "VernacExtend",
                        "cc7a15a64a61a70e5509a808ab38d3e14be8d47a"
                    ]
                },
                {
                    "command": [
                        "contradiction n; auto.",
                        "VernacExtend",
                        "1a770b2052c016c79de046b85faff2507205b8bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookup_out",
            "line_nb": 1532,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros; auto.",
                        "VernacExtend",
                        "8220944a1558558e20036605293047bd287cfc25"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "destruct (peq a (fst a0)) eqn: Heq; setoid_rewrite Heq.",
                        "VernacExtend",
                        "a6afcd45ea2fb5618bb16dc02abddb27621c2b9b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "contradiction Ha; auto.",
                        "VernacExtend",
                        "06c9a42a58ef96517aa521f2721b302c5fbca89f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHl.",
                        "VernacExtend",
                        "af412c6009bba78f939aa53ab07dcd1baaf5888b"
                    ]
                },
                {
                    "command": [
                        "intro; contradiction Ha; auto.",
                        "VernacExtend",
                        "3fa949945984a3b04c20ca81766a3e9de2df185b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "data_at__eq",
            "line_nb": 1542,
            "steps": [
                {
                    "command": [
                        "intros; unfold data_at_, data_at, field_at_; auto.",
                        "VernacExtend",
                        "623762e2c3cfb551629dcdfef9148d15c1d1d749"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "func_tycontext_sub",
            "line_nb": 1545,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold func_tycontext, make_tycontext, tycontext_sub; simpl.",
                        "VernacExtend",
                        "2ce2903aa91e308d17a53b75bdc0f730bfd7fa99"
                    ]
                },
                {
                    "command": [
                        "apply NoDup_app in Hdistinct; destruct Hdistinct as (? & ? & Hdistinct); auto.",
                        "VernacExtend",
                        "01af982a7facc193160fc594bf00dc2e0cdb3e09"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto; intro.",
                        "VernacExtend",
                        "08e0f27d181c8f3f48d94f8b66c88955a5107ea0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (PTree.get _ _); auto.",
                        "VernacExtend",
                        "bdf995d0cfa6364fb05fbc66b057a2383e58caf1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold make_tycontext_g.",
                        "VernacExtend",
                        "c511998b535921312eb34fec461f910ec58239b2"
                    ]
                },
                {
                    "command": [
                        "revert dependent G2; revert dependent V2; revert V; induction G; simpl.",
                        "VernacExtend",
                        "5ca24b4cd8a5b705d0a7251319b93ba81254c57a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "induction V; simpl; intros.",
                        "VernacExtend",
                        "2d5d441d2a764a26b8f2d19017a33605524424a2"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty; simpl; auto.",
                        "VernacExtend",
                        "2c4592f141d35fa00d6ee002f0edc55be70d3d80"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite incl_cons_iff in HV; destruct HV.",
                        "VernacExtend",
                        "05efdaf0ee882fdd5ea6b888f885571350c30a64"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "destruct (peq id (fst a)); eauto; subst; simpl.",
                        "VernacExtend",
                        "2f2df172eeef509a27e08c78396fa646896eef0b"
                    ]
                },
                {
                    "command": [
                        "rewrite lookup_out.",
                        "VernacExtend",
                        "be686c25eca64262125080d7a1451163f0d1e371"
                    ]
                },
                {
                    "command": [
                        "apply lookup_distinct with (f0:=@id type); auto.",
                        "VernacExtend",
                        "9aabcc5a0c4511b1863230080dc7c87217b040a5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Hdistinct.",
                        "VernacExtend",
                        "ff830101e7db89690996570f6c4b509925f5713c"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff; eexists; split; eauto.",
                        "VernacExtend",
                        "51290fa9102242b9c6d7b098e40c67d697ac6baf"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite incl_cons_iff in HG; destruct HG.",
                        "VernacExtend",
                        "c62429b67395f7385bcf03b603c1d1b0348af23e"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "destruct (peq id (fst a)); eauto; subst; simpl.",
                        "VernacExtend",
                        "2f2df172eeef509a27e08c78396fa646896eef0b"
                    ]
                },
                {
                    "command": [
                        "apply lookup_distinct; auto.",
                        "VernacExtend",
                        "731798457425def8e8201f66ae9dcadfc17b1692"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold make_tycontext_s.",
                        "VernacExtend",
                        "61b57e0c5bc29349a03eedaad8ab6b1795b13a44"
                    ]
                },
                {
                    "command": [
                        "revert dependent G2; induction G; simpl; intros.",
                        "VernacExtend",
                        "d209caf6cbb7539d8b2dd3b17c8882cff2e5f307"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty; simpl; auto.",
                        "VernacExtend",
                        "2c4592f141d35fa00d6ee002f0edc55be70d3d80"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct a; simpl.",
                        "VernacExtend",
                        "f5ca625e5e379c6dfd31b7a41c31e2ffeb9af906"
                    ]
                },
                {
                    "command": [
                        "hnf.",
                        "VernacExtend",
                        "93c9be61208bb2956fb47b51f12123e34260e667"
                    ]
                },
                {
                    "command": [
                        "change @ptree_set with @PTree.set in * at 1.",
                        "VernacExtend",
                        "10fa6cae9fc0c6313bbdce59a48cb4cf626e5501"
                    ]
                },
                {
                    "command": [
                        "rewrite incl_cons_iff in HG; destruct HG.",
                        "VernacExtend",
                        "c62429b67395f7385bcf03b603c1d1b0348af23e"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "change (@PTree.set) with @ptree_set in IHG.",
                        "VernacExtend",
                        "e9edb275d0c7bf3845c22b7cfd6298ab6bb64cd7"
                    ]
                },
                {
                    "command": [
                        "fold make_tycontext_s in *.",
                        "VernacExtend",
                        "945acd0ded7a0664a35bda2b495f390ad611cee4"
                    ]
                },
                {
                    "command": [
                        "destruct (peq id i); eauto; subst; simpl.",
                        "VernacExtend",
                        "ba16a7293008dccc22960f1286f59bcd53454b74"
                    ]
                },
                {
                    "command": [
                        "apply make_tycontext_s_distinct with (a:=(i,f0)); auto.",
                        "VernacExtend",
                        "90347dde03ea08b6d66a1e1809801d46f305b395"
                    ]
                },
                {
                    "command": [
                        "destruct ((make_tycontext_s G) ! id); auto.",
                        "VernacExtend",
                        "64a157b79cbbe969f26a048bd551d7ccf2871364"
                    ]
                },
                {
                    "command": [
                        "apply IHG; auto.",
                        "VernacExtend",
                        "c9a121f73afa99c140b966bd2a26313e64ad017d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Annotation_sub_refl.",
                        "VernacExtend",
                        "28d0172e888bc14418a561683f00d89374565e06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semax_body_mono",
            "line_nb": 1595,
            "steps": [
                {
                    "command": [
                        "unfold semax_body; intros.",
                        "VernacExtend",
                        "230fd56786c6b062d62b5b359f568a70d5500970"
                    ]
                },
                {
                    "command": [
                        "destruct s, f0.",
                        "VernacExtend",
                        "901c89c27c80a0da556ca2661103bb4adede6d33"
                    ]
                },
                {
                    "command": [
                        "intros; eapply semax_extensionality_Delta, H.",
                        "VernacExtend",
                        "27d7d08ae9ce3979b037801089918d9f58a52199"
                    ]
                },
                {
                    "command": [
                        "apply func_tycontext_sub; auto.",
                        "VernacExtend",
                        "6f14f49a7a1e84d6a9e4737ec9328afb32e75f97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weak_exclusive_conflict",
            "line_nb": 1601,
            "steps": [
                {
                    "command": [
                        "intros ?? (r1 & r2 & ? & (? & ? & Hj & [Hexclusive Hemp] & ?) & ?).",
                        "VernacExtend",
                        "a653ef5e3c6edc2f3aa4d9576e1b878fa1c1ae5b"
                    ]
                },
                {
                    "command": [
                        "destruct (age_sepalg.join_level _ _ _ H), (age_sepalg.join_level _ _ _ Hj).",
                        "VernacExtend",
                        "2b8cc2c811a67b02791e6183785b63466b46b747"
                    ]
                },
                {
                    "command": [
                        "apply Hemp in Hj; subst.",
                        "VernacExtend",
                        "684ca179bc80f06d820ef555c523a8b266762eed"
                    ]
                },
                {
                    "command": [
                        "simpl in Hexclusive.",
                        "VernacExtend",
                        "922182592680d2f43aa4997d8b65a806809d1400"
                    ]
                },
                {
                    "command": [
                        "match goal with H : exclusive_mpred ?P |- _ => change (predicates_hered.derives (P * P) FF) in H end.",
                        "VernacExtend",
                        "8fe5cca793c346d46ac341bd21b7273f4ff61d7a"
                    ]
                },
                {
                    "command": [
                        "apply Hexclusive.",
                        "VernacExtend",
                        "bd4eee3cd7a4fea587408a48193a53212bb107e9"
                    ]
                },
                {
                    "command": [
                        "do 3 eexists; eauto; repeat split; auto; omega.",
                        "VernacExtend",
                        "fb8bb668fbd1f600d9c7d251cff1c8465c1d4d62"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exclusive_sepcon1",
            "line_nb": 1610,
            "steps": [
                {
                    "command": [
                        "unfold exclusive_mpred; intros.",
                        "VernacExtend",
                        "6428fd5c3f9bdeb9dff8c696fe60c0f4190a63e4"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans, sepcon_FF_derives' with (P := Q * Q), HP; cancel.",
                        "VernacExtend",
                        "2cb68cbc6452a35d72d75d75c2cf56ea5a22df8b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exclusive_sepcon2",
            "line_nb": 1614,
            "steps": [
                {
                    "command": [
                        "intros; rewrite sepcon_comm; apply exclusive_sepcon1; auto.",
                        "VernacExtend",
                        "efc83300fb75e84b73d60c944b5802e88120936d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exclusive_andp1",
            "line_nb": 1617,
            "steps": [
                {
                    "command": [
                        "unfold exclusive_mpred; intros.",
                        "VernacExtend",
                        "6428fd5c3f9bdeb9dff8c696fe60c0f4190a63e4"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans, HP.",
                        "VernacExtend",
                        "6db9dae1d0826a8dac3c5d035dc986f569738594"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; apply andp_left1; auto.",
                        "VernacExtend",
                        "451c12134798251718e36e31d5d78fe343fed745"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exclusive_andp2",
            "line_nb": 1622,
            "steps": [
                {
                    "command": [
                        "intros; rewrite andp_comm; apply exclusive_andp1; auto.",
                        "VernacExtend",
                        "9322627c006627f8486b54a29a7c3257e661993b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "selflock_exclusive",
            "line_nb": 1645,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite selflock_eq.",
                        "VernacExtend",
                        "d7e90abe08cc883824d979e8731983c59ce5d6e3"
                    ]
                },
                {
                    "command": [
                        "apply exclusive_sepcon1; auto.",
                        "VernacExtend",
                        "0e9799f4471bee50d623e30263d10d34bee3e5fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exclusive_FF",
            "line_nb": 1650,
            "steps": [
                {
                    "command": [
                        "unfold exclusive_mpred.",
                        "VernacExtend",
                        "4eed3424d44a74d431e8b9b1f9e6adbfe7c4d1a6"
                    ]
                },
                {
                    "command": [
                        "rewrite FF_sepcon; auto.",
                        "VernacExtend",
                        "bd194f425ac0cda2c515ca68b60e5e5153235e93"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derives_exclusive",
            "line_nb": 1654,
            "steps": [
                {
                    "command": [
                        "unfold exclusive_mpred; intros.",
                        "VernacExtend",
                        "6428fd5c3f9bdeb9dff8c696fe60c0f4190a63e4"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans, HQ.",
                        "VernacExtend",
                        "455f8aeeb4a798de6d63a11ef73ac6c1d3b6d109"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives; auto.",
                        "VernacExtend",
                        "be1a2e9b634dacb2d97e30c206c2fca242392ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapsto_exclusive",
            "line_nb": 1659,
            "steps": [
                {
                    "command": [
                        "intros; unfold exclusive_mpred.",
                        "VernacExtend",
                        "4a0b005fee04b85123bbdc5335710546a69ae67a"
                    ]
                },
                {
                    "command": [
                        "Intros v1 v2; apply mapsto_conflict; auto.",
                        "VernacExtend",
                        "2ee3564525b0388bcd69f18c866858224b696212"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "field_at__exclusive",
            "line_nb": 1663,
            "steps": [
                {
                    "command": [
                        "intros; apply field_at__conflict; auto.",
                        "VernacExtend",
                        "553bf1a0a749d0bdbf7b4f9ba98748e7c93ab697"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_field_at_exclusive",
            "line_nb": 1666,
            "steps": [
                {
                    "command": [
                        "intros; unfold exclusive_mpred.",
                        "VernacExtend",
                        "4a0b005fee04b85123bbdc5335710546a69ae67a"
                    ]
                },
                {
                    "command": [
                        "Intros v v'; apply field_at_conflict; auto.",
                        "VernacExtend",
                        "4e3218314566c553f3cc4411ca3fd5a57bf8c211"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_data_at_exclusive",
            "line_nb": 1674,
            "steps": [
                {
                    "command": [
                        "intros; unfold exclusive_mpred.",
                        "VernacExtend",
                        "4a0b005fee04b85123bbdc5335710546a69ae67a"
                    ]
                },
                {
                    "command": [
                        "Intros v v'; apply data_at_conflict; auto.",
                        "VernacExtend",
                        "aaeea5d1d4fced0940b8b81236d9379aa98fae15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_var_exclusive",
            "line_nb": 1686,
            "steps": [
                {
                    "command": [
                        "intros; apply data_at__exclusive; auto.",
                        "VernacExtend",
                        "e3d4da77393ef90719e21d3bdc7c18af57461899"
                    ]
                },
                {
                    "command": [
                        "unfold tcond; simpl; omega.",
                        "VernacExtend",
                        "816be64366cb3c97cedf533c22ba57349d1b4963"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_var_isptr",
            "line_nb": 1698,
            "steps": [
                {
                    "command": [
                        "intros; apply data_at__isptr.",
                        "VernacExtend",
                        "419b81c18a76d38950db5c66c98368b1d41de1b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_var_share_join",
            "line_nb": 1702,
            "steps": [
                {
                    "command": [
                        "intros; unfold cond_var; apply data_at__share_join; auto.",
                        "VernacExtend",
                        "c91f3ffca250cb54116e73045fc9dce2f9af9ad8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_dec_refl",
            "line_nb": 1706,
            "steps": [
                {
                    "command": [
                        "intros; destruct (eq_dec a a); [|contradiction n]; auto.",
                        "VernacExtend",
                        "21f591c8d3b8023338b6231fd878e6dc2c11890c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LKspec_readable",
            "line_nb": 1709,
            "steps": [
                {
                    "command": [
                        "intros pos R sh p a [H _].",
                        "VernacExtend",
                        "09f9a6b864c9e65d5fb8314bbe28342f8ea233cd"
                    ]
                },
                {
                    "command": [
                        "specialize (H p); simpl in H.",
                        "VernacExtend",
                        "94a58db6404fd4570f0add0fdc42a69e81fb27b0"
                    ]
                },
                {
                    "command": [
                        "destruct (adr_range_dec p lock_size p).",
                        "VernacExtend",
                        "c65b78a7312c8394ba6c491be742afff8f0a02c3"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec p p); [|contradiction n; auto].",
                        "VernacExtend",
                        "14ac23ff78407a47248517cda30d0fa7b35710c9"
                    ]
                },
                {
                    "command": [
                        "destruct H; auto.",
                        "VernacExtend",
                        "95ae427bd4e09a5f31c59184b718811a23ecb36f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "contradiction n; unfold adr_range.",
                        "VernacExtend",
                        "dc7f0f061855cfa47d784ff4bb02569f902f0495"
                    ]
                },
                {
                    "command": [
                        "destruct p; split; auto.",
                        "VernacExtend",
                        "6845b62af80e873e49aa1fbd1d95380c9f5c18e2"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_join_top",
            "line_nb": 1743,
            "steps": [
                {
                    "command": [
                        "intro; pose proof (Share.comp1 sh).",
                        "VernacExtend",
                        "782155b0222ec652929121e0fdc122f3de4a2d15"
                    ]
                },
                {
                    "command": [
                        "apply comp_parts_join with (L := sh)(R := Share.comp sh); auto; rewrite Share.glb_idem, Share.glb_top.",
                        "VernacExtend",
                        "67a622181c50df675006ef50763aff075b451a0d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.comp2; auto.",
                        "VernacExtend",
                        "59464b708ed5859fbde214bec0c9bfe806b3d75f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.glb_commute, Share.comp2; auto.",
                        "VernacExtend",
                        "aa7c2d02f62bcdc6372a410fdf93182a265eef1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unreadable_bot",
            "line_nb": 1751,
            "steps": [
                {
                    "command": [
                        "unfold readable_share, nonempty_share, sepalg.nonidentity.",
                        "VernacExtend",
                        "0f7deb2e0db81f9629bc5a033e62368ecdad8492"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.glb_bot; auto.",
                        "VernacExtend",
                        "603648591fd9b63abae032b9950a00763b576051"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_Tsh",
            "line_nb": 1757,
            "steps": [
                {
                    "command": [
                        "intros ?? (? & ?).",
                        "VernacExtend",
                        "ccbaf96c6ce99cd26b558e11bcf68846d0f9d0b6"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.glb_commute, Share.glb_top in H; subst; split; auto.",
                        "VernacExtend",
                        "193a2baf3bf00b65809be2c5326b7c345d1e0b97"
                    ]
                },
                {
                    "command": [
                        "apply Share.lub_bot.",
                        "VernacExtend",
                        "cb129a2be64860945f09da69c1a921429a51f91d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "readable_gsh1",
            "line_nb": 1764,
            "steps": [
                {
                    "command": [
                        "apply slice.cleave_readable1; auto.",
                        "VernacExtend",
                        "34f01f65c6aa3e9f6965bc52ae9ece2150b05fbf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "readable_gsh2",
            "line_nb": 1767,
            "steps": [
                {
                    "command": [
                        "apply slice.cleave_readable2; auto.",
                        "VernacExtend",
                        "ad0db287268a3b69fb4f3541b905f596687be5f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gsh1_gsh2_join",
            "line_nb": 1770,
            "steps": [
                {
                    "command": [
                        "apply slice.cleave_join; unfold gsh1, gsh2; destruct (slice.cleave Tsh); auto.",
                        "VernacExtend",
                        "f6653159f6195ea5a080729c1592b7be3999f781"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gsh1_not_bot",
            "line_nb": 1774,
            "steps": [
                {
                    "command": [
                        "intro X; contradiction unreadable_bot; rewrite <- X; auto.",
                        "VernacExtend",
                        "814730b81c6dc7ed0caec62675650351d725fe29"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gsh2_not_bot",
            "line_nb": 1777,
            "steps": [
                {
                    "command": [
                        "intro X; contradiction unreadable_bot; rewrite <- X; auto.",
                        "VernacExtend",
                        "814730b81c6dc7ed0caec62675650351d725fe29"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_readable_share",
            "line_nb": 1781,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (slice.cleave_readable1 _ H); pose proof (slice.cleave_readable2 _ H).",
                        "VernacExtend",
                        "618a00f5b0b29ec118446807241cc1774501fede"
                    ]
                },
                {
                    "command": [
                        "destruct (slice.cleave sh) as (sh1, sh2) eqn: Hsplit.",
                        "VernacExtend",
                        "ccfc725c2c73de8516ada29eeacf97b390317549"
                    ]
                },
                {
                    "command": [
                        "exists sh1, sh2; split; [|split]; auto.",
                        "VernacExtend",
                        "d10d90e2999b3ce41e7d2c4c4458081472521822"
                    ]
                },
                {
                    "command": [
                        "replace sh1 with (fst (slice.cleave sh)) by (rewrite Hsplit; auto).",
                        "VernacExtend",
                        "a410992a16850645b2557c8d4107f9ac8c56c44a"
                    ]
                },
                {
                    "command": [
                        "replace sh2 with (snd (slice.cleave sh)) by (rewrite Hsplit; auto).",
                        "VernacExtend",
                        "c324fe8688306c6faaf5df4f9523cdb7daac6198"
                    ]
                },
                {
                    "command": [
                        "apply slice.cleave_join; auto.",
                        "VernacExtend",
                        "2c32b4025acbbcd238d57325b859f597408271cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_Ews",
            "line_nb": 1790,
            "steps": [
                {
                    "command": [
                        "apply split_readable_share; auto.",
                        "VernacExtend",
                        "11f96e382cf16049990781e0c93a20b4669f2a6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_Znth0",
            "line_nb": 1794,
            "steps": [
                {
                    "command": [
                        "intros; unfold remove_Znth.",
                        "VernacExtend",
                        "1091b454c75ade08912d935a48cd5c729abf394f"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_nil; auto.",
                        "VernacExtend",
                        "8a20fcf67ae9740519e3a7d57bc1bb8306d141a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_Znth_cons",
            "line_nb": 1798,
            "steps": [
                {
                    "command": [
                        "intros; unfold remove_Znth.",
                        "VernacExtend",
                        "1091b454c75ade08912d935a48cd5c729abf394f"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_0_cons, sublist_S_cons, Zlength_cons; auto; try omega.",
                        "VernacExtend",
                        "5eda326c975b231e1b8dcdaa065e83fa4807d51f"
                    ]
                },
                {
                    "command": [
                        "simpl; f_equal; f_equal; f_equal; omega.",
                        "VernacExtend",
                        "8e95c5c0c70ea62e222bae185abc98d9101c6518"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_remove_Znth",
            "line_nb": 1803,
            "steps": [
                {
                    "command": [
                        "intros; unfold remove_Znth.",
                        "VernacExtend",
                        "1091b454c75ade08912d935a48cd5c729abf394f"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_app, !Zlength_sublist; omega.",
                        "VernacExtend",
                        "3a41fd1e8b09f97152c9a1d45f87edb5bc3e8535"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_upd_Znth",
            "line_nb": 1807,
            "steps": [
                {
                    "command": [
                        "intros; unfold remove_Znth.",
                        "VernacExtend",
                        "1091b454c75ade08912d935a48cd5c729abf394f"
                    ]
                },
                {
                    "command": [
                        "rewrite upd_Znth_Zlength, sublist_upd_Znth_l, sublist_upd_Znth_r; auto; omega.",
                        "VernacExtend",
                        "ffd7466b9bcc3940e79b3c5167a124db0b61845a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_Znth_map",
            "line_nb": 1811,
            "steps": [
                {
                    "command": [
                        "intros; unfold remove_Znth.",
                        "VernacExtend",
                        "1091b454c75ade08912d935a48cd5c729abf394f"
                    ]
                },
                {
                    "command": [
                        "rewrite map_app, Zlength_map, !sublist_map; auto.",
                        "VernacExtend",
                        "0ccbe72a88911db96fe973185e14a7c2ebc54315"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_Znth_combine",
            "line_nb": 1815,
            "steps": [
                {
                    "command": [
                        "intros; unfold remove_Znth.",
                        "VernacExtend",
                        "1091b454c75ade08912d935a48cd5c729abf394f"
                    ]
                },
                {
                    "command": [
                        "rewrite !sublist_combine, combine_app' by (rewrite !Zlength_sublist; omega).",
                        "VernacExtend",
                        "f2e2a7e32ebde5866f7bacd7a80267a898e0ac39"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_combine, Z.min_l by omega.",
                        "VernacExtend",
                        "bb2d833a35d2d615b24970ffb4f2ba6cb841112e"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_sepcon_Znth",
            "line_nb": 1821,
            "steps": [
                {
                    "command": [
                        "intros; unfold remove_Znth.",
                        "VernacExtend",
                        "1091b454c75ade08912d935a48cd5c729abf394f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sublist_same at 1 by auto.",
                        "VernacExtend",
                        "8a110e51ccf5bbbe9996c250b5903587d2e48e39"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_split with (mid := i) by omega.",
                        "VernacExtend",
                        "eaca3388f6cfa7e7c883ea01f4ae13bfd292fac6"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_next with (i0 := i) by omega.",
                        "VernacExtend",
                        "1eda913b51af090016fefb11261464711ace1f23"
                    ]
                },
                {
                    "command": [
                        "rewrite !iter_sepcon_app; simpl; apply pred_ext; cancel.",
                        "VernacExtend",
                        "17028f3f6b3d94d7436e06623a4a45fd2b0f2dad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_sepcon2_Znth",
            "line_nb": 1828,
            "steps": [
                {
                    "command": [
                        "intros; rewrite !iter_sepcon2_spec.",
                        "VernacExtend",
                        "c411f4c0c2d44df263a721716bb66eedf013ee23"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; Intros l; subst.",
                        "VernacExtend",
                        "59d9a093ea4e2070c317eec446636802d6df2878"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_map in *.",
                        "VernacExtend",
                        "703549b9837b85e6a0bf22f1b87c5ea6f6277434"
                    ]
                },
                {
                    "command": [
                        "rewrite !remove_Znth_map, !Znth_map, iter_sepcon_Znth with (i0 := i) by auto.",
                        "VernacExtend",
                        "2bbfdd2c3894549cab58d99f4d4dca7a57a471fa"
                    ]
                },
                {
                    "command": [
                        "unfold uncurry at 1.",
                        "VernacExtend",
                        "df2db443d8593eb7c03b7d50bb37f12aa0b1a615"
                    ]
                },
                {
                    "command": [
                        "Exists (remove_Znth i l); entailer!.",
                        "VernacExtend",
                        "6cd0a8c2df67753901f0c62b7e96961b2ffed4b8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "Exists (combine l1 l2).",
                        "VernacExtend",
                        "8064f4f43f559b69d36763ab8949cf20cf8c176e"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_fst, combine_snd by (rewrite <- !ZtoNat_Zlength; apply Nat2Z.inj; rewrite !Z2Nat.id; omega).",
                        "VernacExtend",
                        "6743bbd8690c0f1de3e06f86cd50b2acf7474754"
                    ]
                },
                {
                    "command": [
                        "rewrite iter_sepcon_Znth with (i0 := i)(l0 := combine _ _) by (rewrite Zlength_combine, Z.min_l; omega).",
                        "VernacExtend",
                        "89f733d6d5b2827477276e97ad381e008248a914"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_combine, remove_Znth_combine by auto.",
                        "VernacExtend",
                        "f57ae8f50b7ef5fda0534a3013920e0c52315d30"
                    ]
                },
                {
                    "command": [
                        "rewrite H1, H2, combine_eq; unfold uncurry; entailer!.",
                        "VernacExtend",
                        "969bf945ddb0570639634b345edb4443cad2219b"
                    ]
                },
                {
                    "command": [
                        "apply derives_refl.",
                        "VernacExtend",
                        "e6aad07de74a98e9e95ce8bc0aeafdd1290e4b6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_shares_nth",
            "line_nb": 1846,
            "steps": [
                {
                    "command": [
                        "induction shs; simpl; intros.",
                        "VernacExtend",
                        "4287d77e24f23f3acd705e3a9c2c0da2f43ac221"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_nil in *; omega.",
                        "VernacExtend",
                        "11e355bcc65e98c7aa282771754cdae5eb378b32"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i 0).",
                        "VernacExtend",
                        "ed0407251a0d330a3d6d3f4b234de52e598904c6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite remove_Znth0, sublist_1_cons, Zlength_cons, sublist_same, Znth_0_cons; auto; try omega.",
                        "VernacExtend",
                        "3904f152fa391f361276c0e7d174670c48c959c6"
                    ]
                },
                {
                    "command": [
                        "eapply sepalg_list.list_join_assoc1; eauto.",
                        "VernacExtend",
                        "ace92f318eeba4a2ecfe73c20b76037f0e5bb37f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons in *; exploit (IHshs w1 sh (i - 1)); auto; try omega.",
                        "VernacExtend",
                        "35ad40512ba05318e3903629f026b4e85c02a85e"
                    ]
                },
                {
                    "command": [
                        "intros (sh2 & ? & ?).",
                        "VernacExtend",
                        "9bf85504216017183a7df6de8d60630d77717a25"
                    ]
                },
                {
                    "command": [
                        "rewrite Znth_pos_cons, remove_Znth_cons; try omega.",
                        "VernacExtend",
                        "815dbe15dda1ac63bc65ef07109eb4ffa09e516a"
                    ]
                },
                {
                    "command": [
                        "exploit (sepalg.join_sub_joins_trans(a := a)(b := sh2)(c := w1)); eauto.",
                        "VernacExtend",
                        "eb8f0d4a8267d03c3cd50c772883004365c2dab3"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "eexists; eapply sepalg.join_comm; eauto.",
                        "VernacExtend",
                        "37bb93c7be53fe9b45b4b8674d7c20b2749a6861"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros (sh' & ?); exists sh'; split.",
                        "VernacExtend",
                        "e17dc45d2c1ab726668bfc20cffeefa71c0061cf"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exploit (sepalg_list.list_join_assoc2(a := a)(b := Znth (i - 1) shs) (cl := remove_Znth (i - 1) shs)(e := sh')(f := sh2)); auto.",
                        "VernacExtend",
                        "98bac2145529fa9441b8c2344b627106c606ced9"
                    ]
                },
                {
                    "command": [
                        "intros (d & ? & ?).",
                        "VernacExtend",
                        "9977eedca47f17638f1fb8239258f8615299c837"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (sepalg.join_assoc(a := sh1)(b := a)(c := sh2)(d := w1)(e := sh)) as X.",
                        "VernacExtend",
                        "0cceb0cee8c60671ea94d66974424c7a33f392ed"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with X : ?a -> _, H : ?a |- _ => specialize (X H) end.",
                        "VernacExtend",
                        "9283e52bd468526bb7740143bc5cbae57aee17a8"
                    ]
                },
                {
                    "command": [
                        "destruct X as (f & Ha' & ?).",
                        "VernacExtend",
                        "fb0f18f4e6221934934ff4746433554d5afbb3ff"
                    ]
                },
                {
                    "command": [
                        "assert (f = sh') by (eapply sepalg.join_eq; eauto).",
                        "VernacExtend",
                        "6542ded9e448e95ec7b70cec7462fcf77961b4fa"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_join_comm",
            "line_nb": 1876,
            "steps": [
                {
                    "command": [
                        "induction l1; intros; [rewrite app_nil_r; auto|].",
                        "VernacExtend",
                        "86e87769b974e3ebbd72e12254a1f7f8a564eac2"
                    ]
                },
                {
                    "command": [
                        "inversion H as [|????? H1 H2]; subst.",
                        "VernacExtend",
                        "426e7f01059e9e81f8961c8f8eaf545b4eaacba2"
                    ]
                },
                {
                    "command": [
                        "apply IHl1, sepalg_list.list_join_unapp in H2.",
                        "VernacExtend",
                        "0ebe25ffc84fde4ca2a4e0ce9fb84c98279e43d5"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as (c & Hl2 & Hl1).",
                        "VernacExtend",
                        "8f24eff5e38740168b3a275a127cdab570053b0d"
                    ]
                },
                {
                    "command": [
                        "apply sepalg.join_comm in H1.",
                        "VernacExtend",
                        "822a52d1ef51c67e5dd0ff4ff5fc4c722f3ba2a3"
                    ]
                },
                {
                    "command": [
                        "destruct (sepalg_list.list_join_assoc1 H1 Hl2) as (? & ? & ?).",
                        "VernacExtend",
                        "f4388d3a14df196d7110f9dbaedbf1ee6d225037"
                    ]
                },
                {
                    "command": [
                        "eapply sepalg_list.list_join_app; eauto.",
                        "VernacExtend",
                        "ef12458b339ca313fd9d1a7300d522b8b0d40853"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_shares",
            "line_nb": 1886,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists sh, []; repeat split; auto.",
                        "VernacExtend",
                        "3fe02548f86f82bda93001093cde0b21ffe605de"
                    ]
                },
                {
                    "command": [
                        "apply sepalg_list.fold_rel_nil.",
                        "VernacExtend",
                        "6fe329f859fa6e251cc70f64655f64cbb450a3bd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (split_readable_share _ H) as (sh1 & sh2 & H1 & ? & ?).",
                        "VernacExtend",
                        "6361351e0d563a3e66b09b3ace87ada68e4a90f1"
                    ]
                },
                {
                    "command": [
                        "destruct (IHn _ H1) as (sh1' & shs & ? & ? & ? & ?).",
                        "VernacExtend",
                        "e32118201deda7c298fc02b44aab4e1f2511bfbd"
                    ]
                },
                {
                    "command": [
                        "exists sh1', (shs ++ [sh2]).",
                        "VernacExtend",
                        "03da584d111e3704f45927e965bceec2c077f11c"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ, Zlength_app, Zlength_cons, Zlength_nil; split; [omega|].",
                        "VernacExtend",
                        "4469dc4195ff861d648823b2b444320fdade115e"
                    ]
                },
                {
                    "command": [
                        "rewrite Forall_app; repeat split; auto.",
                        "VernacExtend",
                        "bedf7f53748f4d06e839edf3b10ec1a483d33d2e"
                    ]
                },
                {
                    "command": [
                        "eapply sepalg_list.list_join_app; eauto.",
                        "VernacExtend",
                        "ef12458b339ca313fd9d1a7300d522b8b0d40853"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sepalg_list.list_join_1; auto.",
                        "VernacExtend",
                        "095e9df31a1d8debe3c93113afea0b3962b711ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "data_at_shares_join",
            "line_nb": 1900,
            "steps": [
                {
                    "command": [
                        "induction shs; intros; simpl.",
                        "VernacExtend",
                        "e490dc1c34020e4c2e5938f7fdeaed5958279c39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inv Hsplit.",
                        "VernacExtend",
                        "28c1a2fd8bc549dd1b9460ba6177eca370bf96e5"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; auto.",
                        "VernacExtend",
                        "547f574af52ed1ecf6eeb00679f096581655b054"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inv Hsplit.",
                        "VernacExtend",
                        "28c1a2fd8bc549dd1b9460ba6177eca370bf96e5"
                    ]
                },
                {
                    "command": [
                        "erewrite <- sepcon_assoc, data_at_share_join; eauto.",
                        "VernacExtend",
                        "fa80dd8b4a9e7f61e2c0220fd469063f0c16ad07"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exp_comm",
            "line_nb": 1909,
            "steps": [
                {
                    "command": [
                        "intros; apply seplog.pred_ext; Intros x y; Exists y x; auto.",
                        "VernacExtend",
                        "f9d4c7726422c2b0747fe073a6bab1a5e793171c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "data_at_value_cohere",
            "line_nb": 1996,
            "steps": [
                {
                    "command": [
                        "intros; unfold data_at, field_at, at_offset; Intros.",
                        "VernacExtend",
                        "bb991df06227b214697697b0832b0e872722c610"
                    ]
                },
                {
                    "command": [
                        "apply andp_right; [apply prop_right; auto|].",
                        "VernacExtend",
                        "8cbfe2f178cdf84bb221a3416eacf09e39a80a16"
                    ]
                },
                {
                    "command": [
                        "rewrite !by_value_data_at_rec_nonvolatile by auto.",
                        "VernacExtend",
                        "d4bc9fb7731e76bc0a49c9428d36c414a7b09bb1"
                    ]
                },
                {
                    "command": [
                        "apply mapsto_value_cohere; auto.",
                        "VernacExtend",
                        "e4fa9cead5b824e272de1e16a8d1c459854ce844"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extract_nth_sepcon",
            "line_nb": 2027,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "erewrite <- sublist_same with (al := l) at 1; auto.",
                        "VernacExtend",
                        "c06f7e823f74b5f6e649999c4be053c89bf156f8"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_split with (mid := i); try omega.",
                        "VernacExtend",
                        "c42301dc84eb8a6b144ad33e7a5783d14d770fe8"
                    ]
                },
                {
                    "command": [
                        "rewrite sublist_next with (i0 := i); try omega.",
                        "VernacExtend",
                        "23a85993a7093fce366977312d948ff445bdceba"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_app; simpl.",
                        "VernacExtend",
                        "d92b4cf38245eb828307049758a3e3317aaee465"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sepcon_assoc, (sepcon_comm _ (Znth i l)).",
                        "VernacExtend",
                        "55e93906fc41a523d9a01280807cdd9f168f570f"
                    ]
                },
                {
                    "command": [
                        "unfold upd_Znth; rewrite sepcon_app, sepcon_assoc; simpl.",
                        "VernacExtend",
                        "559a775a7aae8054b3d0b60210b4dd3e5ea16a6d"
                    ]
                },
                {
                    "command": [
                        "rewrite emp_sepcon; auto.",
                        "VernacExtend",
                        "48c3c3dbe79fdbdaa99570c01577bfec18ad6c41"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "replace_nth_sepcon",
            "line_nb": 2037,
            "steps": [
                {
                    "command": [
                        "intros; unfold upd_Znth.",
                        "VernacExtend",
                        "774945f168bf5f0ce358f4c6297717a58e345ddd"
                    ]
                },
                {
                    "command": [
                        "rewrite !sepcon_app; simpl.",
                        "VernacExtend",
                        "7f91a2579a114141145e5b7163aca6b3e2a49f7e"
                    ]
                },
                {
                    "command": [
                        "rewrite emp_sepcon, <- !sepcon_assoc, (sepcon_comm P); auto.",
                        "VernacExtend",
                        "70187bb85951b7f4025936caba70ce4284ddb5e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_derives_prop",
            "line_nb": 2042,
            "steps": [
                {
                    "command": [
                        "intros; eapply derives_trans; [apply saturate_aux20 with (Q' := True); eauto|].",
                        "VernacExtend",
                        "5f46c462e7ef83c323a2d9a7b6c3e97b3a5d22e9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply prop_left; intros (? & ?); apply prop_right; auto.",
                        "VernacExtend",
                        "e8544057c5fa424e78b7d1e2ba05b754db7529c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_map",
            "line_nb": 2049,
            "steps": [
                {
                    "command": [
                        "induction l; simpl.",
                        "VernacExtend",
                        "4ae00a4cb6decae1eaa2f9b701c4f4e7bd0ec6f4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_emp; auto.",
                        "VernacExtend",
                        "547f574af52ed1ecf6eeb00679f096581655b054"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite !sepcon_assoc, <- (sepcon_assoc (fold_right _ _ _) (Q a)), (sepcon_comm (fold_right _ _ _) (Q _)).",
                        "VernacExtend",
                        "e56fca8c95fdff6dfdb791128161b36daef4d960"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl; rewrite sepcon_assoc; auto.",
                        "VernacExtend",
                        "ef8e57efd0f07c6e9fd5e027df52adc9799fdba7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_list_derives",
            "line_nb": 2057,
            "steps": [
                {
                    "command": [
                        "induction l1; destruct l2; auto; simpl; intros; rewrite ?Zlength_nil, ?Zlength_cons in *; try (rewrite Zlength_correct in *; omega).",
                        "VernacExtend",
                        "77683744bf4b29453b19c38b8f52c84fa1185871"
                    ]
                },
                {
                    "command": [
                        "apply sepcon_derives.",
                        "VernacExtend",
                        "5279c4b0e23192edb2904c60cb96eb25409229af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "specialize (Heq 0); rewrite !Znth_0_cons in Heq; apply Heq.",
                        "VernacExtend",
                        "cfe8d8e582b9ef4e5a9fb6a4dd9c25b6ba28d247"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct; omega.",
                        "VernacExtend",
                        "3c58e615b482d35ab340a89d9c58a09e6c973b4f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHl1; [omega|].",
                        "VernacExtend",
                        "f3fda59334c2b897b5a28ae8fcd2d196c8aad12c"
                    ]
                },
                {
                    "command": [
                        "intros; specialize (Heq (i + 1)); rewrite !Znth_pos_cons, !Z.add_simpl_r in Heq; try omega.",
                        "VernacExtend",
                        "070fab0c8fb1f95ed40ee7d4272189f141dc96d1"
                    ]
                },
                {
                    "command": [
                        "apply Heq; omega.",
                        "VernacExtend",
                        "cc146a492ca41788edf755f44ab4ea755aa03ac4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_rotate",
            "line_nb": 2068,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold rotate.",
                        "VernacExtend",
                        "6fa05813bebed0c3d730fa04e54d569dc11d521c"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_app, sepcon_comm, <- sepcon_app, sublist_rejoin, sublist_same by omega; auto.",
                        "VernacExtend",
                        "b62d871081753e8a88e855128074d968c4d25bd7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_eq",
            "line_nb": 2073,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply seplog.pred_ext, modus_ponens_wand.",
                        "VernacExtend",
                        "fe8a69ce7a53aac9777487e112dbba715e0e0c0b"
                    ]
                },
                {
                    "command": [
                        "subst; cancel.",
                        "VernacExtend",
                        "9ca1bb45a241f568b3327bcce02ae05ba2fb2c0c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wand_sepcon_adjoint; auto.",
                        "VernacExtend",
                        "58be0b0b2ca60df2f753b84856bcda366e333bac"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm; auto.",
                        "VernacExtend",
                        "d2c29cb76cae8b6b80971554ec9314b6f193e751"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_twice",
            "line_nb": 2080,
            "steps": [
                {
                    "command": [
                        "intros; apply seplog.pred_ext.",
                        "VernacExtend",
                        "7f9ab1444862a924df9c871514ec6b50e701e9ad"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wand_sepcon_adjoint.",
                        "VernacExtend",
                        "4dfb536b033f51b4ab3daf3908d9495321a9d882"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sepcon_assoc, wand_sepcon_adjoint.",
                        "VernacExtend",
                        "a72ba3c0d6d29bdfcb207ec6852be4bc3917a7b2"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm; apply modus_ponens_wand.",
                        "VernacExtend",
                        "543fd9b2e45f1910e611c0b7e0db1e17d054cbf4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !wand_sepcon_adjoint.",
                        "VernacExtend",
                        "14da36f0df753c99d7c2d94727606f17db6c3f3d"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_assoc, sepcon_comm; apply modus_ponens_wand.",
                        "VernacExtend",
                        "c46c47099ec3da48e8f62906907d41d706bf68c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sepcon_In",
            "line_nb": 2090,
            "steps": [
                {
                    "command": [
                        "induction l; [contradiction|].",
                        "VernacExtend",
                        "af2e8405b5d756dc0b4c28ea12ecad65447f5c9f"
                    ]
                },
                {
                    "command": [
                        "intros ? [|]; simpl; subst; eauto.",
                        "VernacExtend",
                        "6da89a48805e8e2d835bbba5709225e311615d50"
                    ]
                },
                {
                    "command": [
                        "destruct (IHl _ H) as [? ->].",
                        "VernacExtend",
                        "b67c6ae07971f462dda7efc904d497e0f9f487fc"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm, sepcon_assoc; eauto.",
                        "VernacExtend",
                        "3cf37d19409e5cf407160ccb2cf5f6d18360bbb1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extract_wand_sepcon",
            "line_nb": 2096,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (sepcon_In _ _ H).",
                        "VernacExtend",
                        "78893a38169df0df5bf3aabe0e5f51048fe87bc7"
                    ]
                },
                {
                    "command": [
                        "eapply wand_eq; eauto.",
                        "VernacExtend",
                        "1d20eb915e809472568dc738525799491bb0fa3f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_frame",
            "line_nb": 2106,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wand_sepcon_adjoint; cancel.",
                        "VernacExtend",
                        "260c082cd26a7168da3b2c8b1e81a3008b63747d"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_comm; apply modus_ponens_wand.",
                        "VernacExtend",
                        "543fd9b2e45f1910e611c0b7e0db1e17d054cbf4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semax_extract_later_prop''",
            "line_nb": 2111,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "erewrite (add_andp P2) by eauto.",
                        "VernacExtend",
                        "254a850d3dc4a3c4e6a7a33d99b918e43978fba7"
                    ]
                },
                {
                    "command": [
                        "apply semax_pre0 with (P' := |>!!PP && PROPx P (LOCALx Q (SEPx (P1 && |>P2 :: R)))).",
                        "VernacExtend",
                        "f6fbbb46ff48994b379d6088e2df16124ed741b6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "go_lowerx.",
                        "VernacExtend",
                        "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
                    ]
                },
                {
                    "command": [
                        "rewrite later_andp, <- andp_assoc, andp_comm, corable_andp_sepcon1; auto.",
                        "VernacExtend",
                        "55d171a0c07dd129d85092e66c41000fd81217ad"
                    ]
                },
                {
                    "command": [
                        "apply corable_later; auto.",
                        "VernacExtend",
                        "d7061cb5d6cfd7b5a5988421dfe291728cc11d46"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply semax_extract_later_prop; auto.",
                        "VernacExtend",
                        "d448484146ca324ece753a323fc59a52054f07c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "field_at_array_inbounds",
            "line_nb": 2122,
            "steps": [
                {
                    "command": [
                        "intros; entailer!.",
                        "VernacExtend",
                        "8519bd6609d7efed40508e18bc8e71aedaa78d96"
                    ]
                },
                {
                    "command": [
                        "destruct H as (_ & _ & _ & _ & _ & ?); auto.",
                        "VernacExtend",
                        "8f6e835d820fec404285e7fb11206437868ca6f2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "approx_imp",
            "line_nb": 2135,
            "steps": [
                {
                    "command": [
                        "intros; apply predicates_hered.pred_ext; intros ? (? & Himp); split; auto; intros ? Ha' HP.",
                        "VernacExtend",
                        "d6e11d8965ff02fc8cd7ba89668d2c97fcd46710"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct HP; split; auto.",
                        "VernacExtend",
                        "909bf8cf6e3eb47012f86cc7684093a354d99609"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Himp; auto; split; auto.",
                        "VernacExtend",
                        "7ec75fb97348cea376db595d212f010dbb7c10da"
                    ]
                },
                {
                    "command": [
                        "pose proof (ageable.necR_level _ _ Ha'); omega.",
                        "VernacExtend",
                        "f9107ace8ed38819d0a22d542f15edba4cdaa0e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "approx_sepcon_list",
            "line_nb": 2144,
            "steps": [
                {
                    "command": [
                        "induction lP; [contradiction | intros].",
                        "VernacExtend",
                        "e612df5ed848bbe13a980d0f7f09489de6a46511"
                    ]
                },
                {
                    "command": [
                        "destruct lP; simpl in *.",
                        "VernacExtend",
                        "dd0b8ffddb02c068b93bc53b4dce968b9c4cf2da"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite !sepcon_emp; auto.",
                        "VernacExtend",
                        "b1dd4912b6dae2d67331b07a5d27799229ddcb7d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite approx_sepcon, IHlP; auto; discriminate.",
                        "VernacExtend",
                        "64ebe46837c49cffbe12496162bb0e659b5da458"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "approx_sepcon_list'",
            "line_nb": 2152,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !approx_sepcon, !(sepcon_comm (fold_right _ _ _)).",
                        "VernacExtend",
                        "37f9932940dc81de50bf0642a55d7764eaa3d4c3"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite approx_sepcon_list with (lP := _ :: _); auto; discriminate.",
                        "VernacExtend",
                        "9788909fd66b63cf5e69790690ff069dd72572fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "approx_FF",
            "line_nb": 2157,
            "steps": [
                {
                    "command": [
                        "intro; apply predicates_hered.pred_ext; intros ??; try contradiction.",
                        "VernacExtend",
                        "20743c63b2a98fdeec44c1b1bb67966b7bfaeb1e"
                    ]
                },
                {
                    "command": [
                        "destruct H; contradiction.",
                        "VernacExtend",
                        "13d9512bba557f3bb20e804c4e8b41596f0b9bac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "later_nonexpansive",
            "line_nb": 2161,
            "steps": [
                {
                    "command": [
                        "apply contractive_nonexpansive, later_contractive.",
                        "VernacExtend",
                        "af15de60eee98a239edc507cbf788467f5e48d42"
                    ]
                },
                {
                    "command": [
                        "intros ??; auto.",
                        "VernacExtend",
                        "048b6811c3c587f9030595346efd336715086631"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_refl",
            "line_nb": 2165,
            "steps": [
                {
                    "command": [
                        "intros; rewrite andp_dup; apply subp_refl.",
                        "VernacExtend",
                        "409320dad1a2bd66cf64f8cd4c3864cbe81fb480"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_sepcon",
            "line_nb": 2168,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite fash_andp in HP, HQ |- *.",
                        "VernacExtend",
                        "e1707fc93919c0654e6433ab4af78aee023a472c"
                    ]
                },
                {
                    "command": [
                        "apply andp_right; apply subp_sepcon; auto; intros ? Ha; destruct (HP _ Ha), (HQ _ Ha); auto.",
                        "VernacExtend",
                        "79372a390cde961245957b5ff4893af541ac8f24"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_andp",
            "line_nb": 2173,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite fash_andp in HP, HQ |- *.",
                        "VernacExtend",
                        "e1707fc93919c0654e6433ab4af78aee023a472c"
                    ]
                },
                {
                    "command": [
                        "apply andp_right; apply subp_andp; auto; intros ? Ha; destruct (HP _ Ha), (HQ _ Ha); auto.",
                        "VernacExtend",
                        "384b086bb63a74848d0906a10b72a74d12f03824"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_exp",
            "line_nb": 2178,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite fash_andp; apply andp_right; apply subp_exp; intro x; specialize (H x); rewrite fash_andp in H; intros ? Ha; destruct (H _ Ha); auto.",
                        "VernacExtend",
                        "a08b451e5a5d0fc5f145bc799ae703e116a9a574"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_right_sepcon_nonexpansive",
            "line_nb": 2182,
            "steps": [
                {
                    "command": [
                        "induction lP1; intros.",
                        "VernacExtend",
                        "5f5e4943f7d7ac379a3da91a555317b267192858"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "symmetry in H; apply Zlength_nil_inv in H; subst.",
                        "VernacExtend",
                        "cf2ef27791c4ef27344212b5a1250e6f58f3d203"
                    ]
                },
                {
                    "command": [
                        "apply eqp_refl.",
                        "VernacExtend",
                        "ec609a9d644fee75dbc561b43143d163741b383c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct lP2; [apply Zlength_nil_inv in H; discriminate|].",
                        "VernacExtend",
                        "90e47cd7c32cdd754c27773ac0861b7aec6860d8"
                    ]
                },
                {
                    "command": [
                        "rewrite !Zlength_cons in H.",
                        "VernacExtend",
                        "87f8bb10de7fe3dd07ae63bc65289dd351171eb0"
                    ]
                },
                {
                    "command": [
                        "simpl fold_right; apply eqp_sepcon.",
                        "VernacExtend",
                        "002a171bb176326cb687214af5aa2f704a319cdf"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply allp_left with 0.",
                        "VernacExtend",
                        "f5465192820eb8003346c5232e25a24a83d43936"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_0_cons; auto.",
                        "VernacExtend",
                        "10dd1992e3a9e483a882c38a3db2b120026d46a5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply derives_trans, IHlP1; [|omega].",
                        "VernacExtend",
                        "f2fac9509dd3d26e67b52c1c414415741d3bab46"
                    ]
                },
                {
                    "command": [
                        "apply allp_right; intro i.",
                        "VernacExtend",
                        "b4748b1966377bb8e95bff97930df9806ccd2b30"
                    ]
                },
                {
                    "command": [
                        "apply allp_left with (i + 1).",
                        "VernacExtend",
                        "fbc227de8c2a3ea7e72cac78ed737470fb0e3dee"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt i 0).",
                        "VernacExtend",
                        "1d4e6d4d62fc8e4e151b9c8c7f9624235a238e27"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite !(Znth_underflow _ _ l); apply eqp_refl.",
                        "VernacExtend",
                        "0f69e58a7bbc51effe23bc512ba314abfff2cda7"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite !Znth_pos_cons, Z.add_simpl_r by omega; auto.",
                        "VernacExtend",
                        "32d648eaa7caec7c6c0fc1d4f8c57366696ff5b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "void_ret",
            "line_nb": 2204,
            "steps": [
                {
                    "command": [
                        "extensionality; simpl.",
                        "VernacExtend",
                        "74c61dc816cc54a93e4c71f0471b10c14275783a"
                    ]
                },
                {
                    "command": [
                        "unfold liftx, lift, PROPx, LOCALx, SEPx; simpl; normalize.",
                        "VernacExtend",
                        "6d9628407ebcb8d773bb791f4fc8f815bf2b0e38"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semax_fun_id''",
            "line_nb": 2212,
            "steps": [
                {
                    "command": [
                        "intros V G GS HGV SA.",
                        "VernacExtend",
                        "5490d5dba91fbc95dfed3570695f46d88a9af07f"
                    ]
                },
                {
                    "command": [
                        "apply (semax_fun_id id f Delta); auto.",
                        "VernacExtend",
                        "3d33a8cc07bf9c4834d2e02429d9caa154caf344"
                    ]
                },
                {
                    "command": [
                        "eapply semax_pre_post; try apply SA; clear SA; intros; try apply ENTAIL_refl.",
                        "VernacExtend",
                        "9181321887e376611a591ac81afdf2778e13f867"
                    ]
                },
                {
                    "command": [
                        "destruct (local2ptree Q) as [[[T1 T2] Res] GV] eqn:?H.",
                        "VernacExtend",
                        "f0d0f3e82e148e79db27451ed868b95aabd3ad1b"
                    ]
                },
                {
                    "command": [
                        "simpl in HGV; subst GV.",
                        "VernacExtend",
                        "61e5542209cbd43ae78740295e349859369d646d"
                    ]
                },
                {
                    "command": [
                        "erewrite (local2ptree_soundness P) by eauto.",
                        "VernacExtend",
                        "bf07aa864925e75863f236b4759e53512d989806"
                    ]
                },
                {
                    "command": [
                        "erewrite (local2ptree_soundness P) by eauto.",
                        "VernacExtend",
                        "bf07aa864925e75863f236b4759e53512d989806"
                    ]
                },
                {
                    "command": [
                        "go_lowerx.",
                        "VernacExtend",
                        "b779c117d7d09a3200f3f548bb905f7d0a7246f6"
                    ]
                },
                {
                    "command": [
                        "entailer.",
                        "VernacExtend",
                        "b73314f9b45f246f2bc4b3330fa13724d53d10fa"
                    ]
                },
                {
                    "command": [
                        "unfold func_ptr'.",
                        "VernacExtend",
                        "bc1a54bbaa7b27155f3ac9160a06293f287e664c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- andp_left_corable by (apply corable_func_ptr).",
                        "VernacExtend",
                        "316da0c7daafdac2e8369f98184ef568541ab92b"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_comm; apply andp_derives; auto.",
                        "VernacExtend",
                        "5ecffe56f8e7f74b999a13fce934c3a307f19235"
                    ]
                },
                {
                    "command": [
                        "erewrite <- gvars_eval_var; [apply derives_refl | eauto ..].",
                        "VernacExtend",
                        "885bdda88563de0606e74397756310d221e2551a"
                    ]
                },
                {
                    "command": [
                        "pose proof LocalD_sound_gvars gv T1 T2 _ eq_refl.",
                        "VernacExtend",
                        "56dc58cb2986455c21d4887b912c81dc05f3878a"
                    ]
                },
                {
                    "command": [
                        "clear - H2 H3.",
                        "VernacExtend",
                        "4e8f4ded31fadc8965664652d1eb78a93c7ac505"
                    ]
                },
                {
                    "command": [
                        "revert H3.",
                        "VernacExtend",
                        "955508da3ffe781e1988ee35dd19fc48de81cfbd"
                    ]
                },
                {
                    "command": [
                        "generalize (gvars gv).",
                        "VernacExtend",
                        "0ad550399caf3b90c4c644ded2099dc7b9277d8a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Forall_forall.",
                        "VernacExtend",
                        "151597223201968137dd10870b1ad83061c567ce"
                    ]
                },
                {
                    "command": [
                        "induction (LocalD T1 T2 (Some gv)); [constructor |].",
                        "VernacExtend",
                        "4a74ec052619edca8c074b8917d005367f39fc23"
                    ]
                },
                {
                    "command": [
                        "simpl in H2.",
                        "VernacExtend",
                        "b1e247c43b6623097ab13813b4de664287dd4249"
                    ]
                },
                {
                    "command": [
                        "destruct H2; constructor; auto.",
                        "VernacExtend",
                        "2440c9b6b58ea4f45c7e18c1ee4913e781823833"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "call_setup2'_i",
            "line_nb": 2252,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PROP_into_SEP",
            "line_nb": 2615,
            "steps": [
                {
                    "command": [
                        "intros; unfold PROPx, LOCALx, SEPx; extensionality; simpl.",
                        "VernacExtend",
                        "4f43358ef25802a16714e7f89c3a63e10beea1f7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- andp_assoc, (andp_comm _ (fold_right_sepcon R)), <- andp_assoc.",
                        "VernacExtend",
                        "4ca7fba14129a381b2471b51297aa20bc1b0bc94"
                    ]
                },
                {
                    "command": [
                        "rewrite prop_true_andp by auto.",
                        "VernacExtend",
                        "44b90a74ea59cff20941df8435ffb878e390c4dd"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_comm; f_equal.",
                        "VernacExtend",
                        "2f90c521d1a68758095a4f734bf0089a9f0954aa"
                    ]
                },
                {
                    "command": [
                        "rewrite andp_comm.",
                        "VernacExtend",
                        "f42ee316a55b2a9216373e6b515ce4b77ae502d5"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_andp_prop', emp_sepcon; auto.",
                        "VernacExtend",
                        "5fa923ddfda19e31d57d8807a8275143b49c2087"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}