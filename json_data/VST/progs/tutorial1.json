{
    "filename": "progs/tutorial1.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.floyd.proofauto.",
            "VernacRequire",
            "1b5b5bd8f6976ab2a8ffc41bb68ef58d6fb49b99"
        ],
        [
            "Require Import VST.progs.sumarray.",
            "VernacRequire",
            "e7d2ba9cd22b0c559cd337b1e6044f10854d2041"
        ],
        [
            "Instance CompSpecs : compspecs.",
            "VernacInstance",
            "154eee01c656800e0ca79db421bf2abcdf325f7f"
        ],
        [
            "make_compspecs prog.",
            "VernacExtend",
            "36220761a2e554d38938361d97a6a7824a7eb4eb"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Vprog : varspecs.",
            "VernacDefinition",
            "071102901c915338608cbb3742cc92eff26260b2"
        ],
        [
            "mk_varspecs prog.",
            "VernacExtend",
            "3d71166af717afdd6c2d6e7673cef893ac1c6afc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Gprog: funspecs := nil.",
            "VernacDefinition",
            "c885fc38a22775d33d87925daecdd0091ce4414e"
        ],
        [
            "Definition Delta1 : tycontext := ltac:(let x := constr:(func_tycontext f_sumarray Vprog Gprog nil) in let y := eval hnf in x in exact y).",
            "VernacDefinition",
            "7d633c6ab317954ff7898486c1798e658b32f9a3"
        ],
        [
            "Lemma exercise1: let Delta := @abbreviate _ Delta1 in forall sh p, ENTAIL Delta, EX x:Z, PROP(0<=x) LOCAL(temp _i (Vint (Int.repr x))) SEP (EX y:Z, !!(x<y) && data_at sh tint (Vint (Int.repr y)) p) |-- EX u: Z, PROP(0<u) LOCAL() SEP (data_at sh tint (Vint (Int.repr u)) p).",
            "VernacStartTheoremProof",
            "2232c480da62635d5648f09d7609575063752fa6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "Intros a b.",
            "VernacExtend",
            "928335f79528d69ceef6fd92a2aed1276e247838"
        ],
        [
            "Exists b.",
            "VernacExtend",
            "58cba4a7e5ab78a152f06fe4ce83d0bbf4a5782e"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exercise2: forall x, Int.min_signed <= x <= Int.max_signed -> Int.signed (Int.repr x) = x.",
            "VernacStartTheoremProof",
            "7663281d7c84fd139ef3ae2b85b1d310a97ca62b"
        ],
        [
            "intros x H.",
            "VernacExtend",
            "a0cd74b85812810ce5a78a540bad98f664bd4842"
        ],
        [
            "rewrite Int.signed_repr by rep_omega.",
            "VernacExtend",
            "d508eecbca091f2c2edfc0543f291efe3e357e26"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exercise3: forall n, 0 <= n <= Int.max_signed -> Int.min_signed <= 0 <= n.",
            "VernacStartTheoremProof",
            "4d1b435e7c381b3eae6661884749eab0e0d1ace6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rep_omega.",
            "VernacExtend",
            "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exercise3b: forall al: list Z , Zlength al < 50 -> 0 <= Zlength al < Int.max_signed.",
            "VernacStartTheoremProof",
            "c7ef1ca69033213aba6da99c5d0e534e847d4bc9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rep_omega.",
            "VernacExtend",
            "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exercise3c: forall i, 0 <= Int.unsigned (Int.repr i) <= Int.max_unsigned.",
            "VernacStartTheoremProof",
            "faf56f70070883f1c979d98f547868f405088390"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rep_omega.",
            "VernacExtend",
            "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition N : Z := 20.",
            "VernacDefinition",
            "f1828791fc49dd1df57ac311da135ad5b29fa0ac"
        ],
        [
            "Lemma exercise4: let Delta := @abbreviate _ Delta1 in forall sh p, data_at sh (tarray tint N) (Vint (Int.repr 1) :: Vint (Int.repr 2) :: list_repeat (Z.to_nat (N-2)) Vundef) p |-- !! (0 <= Zlength (list_repeat (Z.to_nat (N-2)) Vundef) < Int.max_signed).",
            "VernacStartTheoremProof",
            "49a5847417e2dfb4f94b809ba8d138c02b720c63"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "repeat rewrite Zlength_cons.",
            "VernacExtend",
            "7c8c8857495da06ba92c61fac948f11461198006"
        ],
        [
            "rewrite Zlength_nil.",
            "VernacExtend",
            "991cc61ab92dafa414827d401b0e1bc5b3b2f703"
        ],
        [
            "rep_omega.",
            "VernacExtend",
            "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Global Opaque N.",
            "VernacSetOpacity",
            "21264d6915b8791365f5a71dd01664c0a3ef409a"
        ],
        [
            "Lemma exercise4b: let Delta := @abbreviate _ Delta1 in forall sh p, data_at sh (tarray tint N) (Vint (Int.repr 1) :: Vint (Int.repr 2) :: list_repeat (Z.to_nat (N-2)) Vundef) p |-- !! (0 <= Zlength (list_repeat (Z.to_nat (N-2)) Vundef) < Int.max_signed).",
            "VernacStartTheoremProof",
            "8a2ebc3f3fe0801d432ef45645aab8abc86d52fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "rewrite Zlength_list_repeat.",
            "VernacExtend",
            "93142caf1e13ab3a7e520c6f826760c2553a0482"
        ],
        [
            "Fail rep_omega.",
            "VernacExtend",
            "8d992656afc4d38926253a1b470e0ebfc8acd6d5"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Lemma N_eq: N=20.",
            "VernacStartTheoremProof",
            "bbe8e66cae7edeeff8f610875d10e4ce783120c7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite N_eq : rep_omega.",
            "VernacExtend",
            "0d43ea2331d2c9ee028ae41a96ea582a338f1320"
        ],
        [
            "Lemma exercise4c: let Delta := @abbreviate _ Delta1 in forall sh p, data_at sh (tarray tint N) (Vint (Int.repr 1) :: Vint (Int.repr 2) :: list_repeat (Z.to_nat (N-2)) Vundef) p |-- !! (0 <= Zlength (list_repeat (Z.to_nat (N-2)) Vundef) < Int.max_signed).",
            "VernacStartTheoremProof",
            "77447e85f0f9d74ff3a6dd03780b410359dbab4b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "rewrite Zlength_list_repeat.",
            "VernacExtend",
            "93142caf1e13ab3a7e520c6f826760c2553a0482"
        ],
        [
            "rep_omega.",
            "VernacExtend",
            "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
        ],
        [
            "rep_omega.",
            "VernacExtend",
            "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "CompSpecs",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "make_compspecs prog.",
                        "VernacExtend",
                        "36220761a2e554d38938361d97a6a7824a7eb4eb"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Vprog",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "mk_varspecs prog.",
                        "VernacExtend",
                        "3d71166af717afdd6c2d6e7673cef893ac1c6afc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "exercise1",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "Intros a b.",
                        "VernacExtend",
                        "928335f79528d69ceef6fd92a2aed1276e247838"
                    ]
                },
                {
                    "command": [
                        "Exists b.",
                        "VernacExtend",
                        "58cba4a7e5ab78a152f06fe4ce83d0bbf4a5782e"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exercise2",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros x H.",
                        "VernacExtend",
                        "a0cd74b85812810ce5a78a540bad98f664bd4842"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.signed_repr by rep_omega.",
                        "VernacExtend",
                        "d508eecbca091f2c2edfc0543f291efe3e357e26"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exercise3",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rep_omega.",
                        "VernacExtend",
                        "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exercise3b",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rep_omega.",
                        "VernacExtend",
                        "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exercise3c",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rep_omega.",
                        "VernacExtend",
                        "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "N_eq",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exercise4c",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_list_repeat.",
                        "VernacExtend",
                        "93142caf1e13ab3a7e520c6f826760c2553a0482"
                    ]
                },
                {
                    "command": [
                        "rep_omega.",
                        "VernacExtend",
                        "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
                    ]
                },
                {
                    "command": [
                        "rep_omega.",
                        "VernacExtend",
                        "41dfe20803b7e2448c0c8c8e355b919fa38aa228"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}