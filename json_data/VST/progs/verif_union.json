{
    "filename": "progs/verif_union.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.floyd.proofauto.",
            "VernacRequire",
            "1b5b5bd8f6976ab2a8ffc41bb68ef58d6fb49b99"
        ],
        [
            "Require Import VST.progs.union.",
            "VernacRequire",
            "a1f4995b7db04e6e6463b5ec4fb3371bc29738da"
        ],
        [
            "Instance CompSpecs : compspecs.",
            "VernacInstance",
            "154eee01c656800e0ca79db421bf2abcdf325f7f"
        ],
        [
            "make_compspecs prog.",
            "VernacExtend",
            "36220761a2e554d38938361d97a6a7824a7eb4eb"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Vprog : varspecs.",
            "VernacDefinition",
            "071102901c915338608cbb3742cc92eff26260b2"
        ],
        [
            "mk_varspecs prog.",
            "VernacExtend",
            "3d71166af717afdd6c2d6e7673cef893ac1c6afc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Import Memdata.",
            "VernacImport",
            "209a9387f499b8f79ef5f94d32d8867fc6578905"
        ],
        [
            "Lemma decode_float32_int32: forall (bl: list memval) (x: float32), size_chunk Mfloat32 = Z.of_nat (Datatypes.length bl) -> decode_val Mfloat32 bl = Vsingle x -> decode_val Mint32 bl = Vint (Float32.to_bits x).",
            "VernacStartTheoremProof",
            "9633ee30d1c7b93abe98dcca7df40d8a11eba4c5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold decode_val,decode_int,rev_if_be in *.",
            "VernacExtend",
            "6de8bbcc46d2d5f82c038c1c6a7da5a621315a54"
        ],
        [
            "destruct (proj_bytes bl) eqn:?H.",
            "VernacExtend",
            "0bbffef6e90f0c0cda598a44976ef94f1e4afa63"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "rewrite Float32.to_of_bits.",
            "VernacExtend",
            "8866fc6c2e85996685f0b027b1277fe4519dcd2e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NOT_decode_int32_float32: ~ (forall (bl: list memval) (x: float32), size_chunk Mfloat32 = Z.of_nat (Datatypes.length bl) -> decode_val Mint32 bl = Vint (Float32.to_bits x) -> decode_val Mfloat32 bl = Vsingle x).",
            "VernacStartTheoremProof",
            "ba6c292e65847e1d1e8daa43516000822d8f0881"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "set (x := Float32.zero).",
            "VernacExtend",
            "ccc630dc656cc7ac7d40906963c9965832386171"
        ],
        [
            "set (i := Float32.to_bits x).",
            "VernacExtend",
            "d3f961d3c4de1191be99ef826e5bf7cca3d10cd9"
        ],
        [
            "set (bl := [Fragment (Vint i) Q32 3; Fragment (Vint i) Q32 2; Fragment (Vint i) Q32 1; Fragment (Vint i) Q32 0]).",
            "VernacExtend",
            "6233a389f6adf51e735c692ab908931a7f6b40c6"
        ],
        [
            "specialize (H bl x).",
            "VernacExtend",
            "b4c3f8ec4a106b591da376ca47a370a5390c1402"
        ],
        [
            "specialize (H (eq_refl _)).",
            "VernacExtend",
            "ec7e927454d1cce5846df2aa5d053a7c3608cc22"
        ],
        [
            "assert (decode_val Mint32 bl = Vint (Float32.to_bits x)).",
            "VernacExtend",
            "429b08bba6d0624b933507a0cd81be7ec4e8900d"
        ],
        [
            "unfold decode_val, bl.",
            "VernacExtend",
            "f6d39cada5df3e6cbd0cfca52fb6c64c7c298145"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (Val.eq (Vint i) (Vint i)); [ | congruence].",
            "VernacExtend",
            "4d83a4c3a306b0cf06505e5da836b632358f7b46"
        ],
        [
            "destruct (quantity_eq Q32 Q32); [ | congruence].",
            "VernacExtend",
            "0e4ae3ee907c2eb156ead03248b5d3c9559a622e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "specialize (H H0).",
            "VernacExtend",
            "c54bab77619d44044b341734ba5cf8906d22a6cc"
        ],
        [
            "clear - H.",
            "VernacExtend",
            "0feb8621f12176e9894f4f3ff86ecf0003739aed"
        ],
        [
            "subst bl i.",
            "VernacExtend",
            "0a5b8db0d40f84930f3d6be0850a70329a588c4e"
        ],
        [
            "unfold decode_val in H.",
            "VernacExtend",
            "dc47308e7015ca2afcf468c73652ad9e1f0bd2ef"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_float32_iff_int32: forall (bl: list Memdata.memval) (x: float32), Memdata.size_chunk Mfloat32 = Z.of_nat (Datatypes.length bl) -> (Memdata.decode_val Mfloat32 bl = Vsingle x <-> Memdata.decode_val Mint32 bl = Vint (Float32.to_bits x)).",
            "VernacStartTheoremProof",
            "ffc1e93a28fd2e79f6d644c5b426462e59a7849e"
        ],
        [
            "Admitted.",
            "VernacEndProof",
            "b273df2a612833d7cae3ad881c7303cec72f8651"
        ],
        [
            "Definition samerep (ch1 ch2: memory_chunk) (v1 v2: val) := Memdata.size_chunk ch1 = Memdata.size_chunk ch2 /\\ forall bl: list Memdata.memval, Memdata.size_chunk ch1 = Z.of_nat (length bl) -> (Memdata.decode_val ch1 bl = v1 <-> Memdata.decode_val ch2 bl = v2).",
            "VernacDefinition",
            "55948bd9c779746f72a13cbe619869677ba2b425"
        ],
        [
            "Lemma mapsto_single_int: forall sh v1 v2 p, is_single v1 -> is_int I32 Unsigned v2 -> samerep Mfloat32 Mint32 v1 v2 -> mapsto sh (Tfloat F32 noattr) p v1 = mapsto sh (Tint I32 Unsigned noattr) p v2.",
            "VernacStartTheoremProof",
            "8838f909fe313b61d49cd0e668b275bb8f52d746"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold mapsto.",
            "VernacExtend",
            "ddd6f5006c78ea6d38dd2ca1bc0830a4d57ddc90"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct p; auto.",
            "VernacExtend",
            "94280b3a49c08b76852fac1fca3c7461587f918a"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite (prop_true_andp _ _ H).",
            "VernacExtend",
            "cff17fe6826a8e3d4a3af4d576ce37cd6408bc73"
        ],
        [
            "rewrite (prop_true_andp _ _ H0).",
            "VernacExtend",
            "0793a1eeecf0d9e3357e2871c126bf221a0acb96"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold res_predicates.address_mapsto.",
            "VernacExtend",
            "04875e31b0ac4de79b8fdbc9f4754d6119b97c0a"
        ],
        [
            "apply predicates_hered.pred_ext'.",
            "VernacExtend",
            "9cdffdffb88333f301c2074dce9cf53287c323e4"
        ],
        [
            "extensionality phi.",
            "VernacExtend",
            "341296532300d7776f83753146650b9d4cba01e1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply exists_ext; intro bl.",
            "VernacExtend",
            "a76d1d646df2990d4153dc843936dce6a002c9df"
        ],
        [
            "f_equal; f_equal.",
            "VernacExtend",
            "4af3aabf2275f9cf435779d06a608416745c2ac4"
        ],
        [
            "apply and_ext'; auto.",
            "VernacExtend",
            "ba653796bb4bccac8ac44029275ceab7f2d8a118"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct H1 as [H1' H1].",
            "VernacExtend",
            "2571e374b7dcfda8b1f97cd890e99770ae12a0f7"
        ],
        [
            "specialize (H1 bl).",
            "VernacExtend",
            "d4b79ef5c09961c71b26c8f6a27a178b650874cc"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply prop_ext.",
            "VernacExtend",
            "2eefee59d08f4d00cc25a349963ba3e1c50fc334"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "apply exp_left; intro bl.",
            "VernacExtend",
            "1bb41b04f47da6ce3fa8067a66962ceaf7df2a8a"
        ],
        [
            "apply exp_right with bl.",
            "VernacExtend",
            "3abeb7d25b2d68fab3c0c07d267326e3fc9b0c93"
        ],
        [
            "normalize.",
            "VernacExtend",
            "b44f672ef6622bc7f333c87e081e8283dfd06387"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold tc_val'.",
            "VernacExtend",
            "61208a269c11cc870f6197774860d62a19e00349"
        ],
        [
            "apply prop_ext.",
            "VernacExtend",
            "2eefee59d08f4d00cc25a349963ba3e1c50fc334"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma data_at_single_int: forall sh v1 v2 p1 p2, is_single v1 -> is_int I32 Unsigned v2 -> samerep Mfloat32 Mint32 v1 v2 -> readable_share sh -> p1 = p2 -> data_at sh (Tfloat F32 noattr) v1 p1 = data_at sh (Tint I32 Unsigned noattr) v2 p2.",
            "VernacStartTheoremProof",
            "a2c61eb3a622b2c0db335b5c9faf57bdfadeeecc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "erewrite <- mapsto_data_at'; auto.",
            "VernacExtend",
            "268092cde744a0932ecda176f5f84f95d6298831"
        ],
        [
            "erewrite <- mapsto_data_at'; auto.",
            "VernacExtend",
            "268092cde744a0932ecda176f5f84f95d6298831"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "erewrite mapsto_single_int; try apply derives_refl; auto.",
            "VernacExtend",
            "9f8d246b3707a269f6dff5732f57be36f7bde26d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H3 as [? [? [? [? ?]]]].",
            "VernacExtend",
            "683c6249fd263bf7e100af1a16ce46381d6bbee7"
        ],
        [
            "split; [| split; [| split; [| split]]]; auto.",
            "VernacExtend",
            "564e19f5c2c4dfb158e5ebfe4b4b00df9cbd89ff"
        ],
        [
            "destruct p2; auto.",
            "VernacExtend",
            "a7c7ed10f3b069e730b660fa39c4a4f82f011e8e"
        ],
        [
            "inv H7.",
            "VernacExtend",
            "6f993be1576214e41089dccba4ad8a0bd4208b26"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inv H9.",
            "VernacExtend",
            "95f92f756ca62d80d4d41ad2f3de0dc7c49f5f39"
        ],
        [
            "exact H10.",
            "VernacExtend",
            "32c404a06a1e2ccc508df6d866090a31ba6555a5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "erewrite <- mapsto_data_at'; auto.",
            "VernacExtend",
            "268092cde744a0932ecda176f5f84f95d6298831"
        ],
        [
            "erewrite <- mapsto_data_at'; auto.",
            "VernacExtend",
            "268092cde744a0932ecda176f5f84f95d6298831"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "erewrite mapsto_single_int; try apply derives_refl; auto.",
            "VernacExtend",
            "9f8d246b3707a269f6dff5732f57be36f7bde26d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H3 as [? [? [? [? ?]]]].",
            "VernacExtend",
            "683c6249fd263bf7e100af1a16ce46381d6bbee7"
        ],
        [
            "split; [| split; [| split; [| split]]]; auto.",
            "VernacExtend",
            "564e19f5c2c4dfb158e5ebfe4b4b00df9cbd89ff"
        ],
        [
            "destruct p2; auto.",
            "VernacExtend",
            "a7c7ed10f3b069e730b660fa39c4a4f82f011e8e"
        ],
        [
            "inv H7.",
            "VernacExtend",
            "6f993be1576214e41089dccba4ad8a0bd4208b26"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inv H9.",
            "VernacExtend",
            "95f92f756ca62d80d4d41ad2f3de0dc7c49f5f39"
        ],
        [
            "exact H10.",
            "VernacExtend",
            "32c404a06a1e2ccc508df6d866090a31ba6555a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma float32_to_bits_abs': forall x, Fappli_IEEE_bits.bits_of_b32 (Fappli_IEEE.Babs 24 128 (fun _ pl => (false,pl)) x) = Z.land (Fappli_IEEE_bits.bits_of_b32 x) (2 ^ 31 - 1).",
            "VernacStartTheoremProof",
            "689b0360fe1f772e32c7466adf6ff7603d81aaed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x,b; try reflexivity.",
            "VernacExtend",
            "a727994ffb104415548033f469e1ebc20f3ede1a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "unfold Fappli_IEEE_bits.join_bits.",
            "VernacExtend",
            "0fa75aa8af7d2b2351b2cd18d6ac865359ace598"
        ],
        [
            "change (0+255) with 255.",
            "VernacExtend",
            "dda9a3106a13210bc38e282fd418b2c575d48355"
        ],
        [
            "admit.",
            "VernacExtend",
            "6f3b875177c67c86e200aa57e88acfa851c78387"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "admit.",
            "VernacExtend",
            "6f3b875177c67c86e200aa57e88acfa851c78387"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold Fappli_IEEE_bits.bits_of_b32, Fappli_IEEE.Babs, Fappli_IEEE_bits.bits_of_binary_float.",
            "VernacExtend",
            "82f6e7739c7f7943efbd4520ac00bb25e63d8dc6"
        ],
        [
            "Admitted.",
            "VernacEndProof",
            "b273df2a612833d7cae3ad881c7303cec72f8651"
        ],
        [
            "Lemma float32_to_bits_abs: forall x, Float32.to_bits (Float32.abs x) = Int.and (Float32.to_bits x) (Int.repr (2 ^ 31 - 1)).",
            "VernacStartTheoremProof",
            "fe371ca7bc7b9611a2759d983e17d6cbeb752336"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "Transparent Float32.to_bits.",
            "VernacSetOpacity",
            "7b41c61ba4cdf7a0a629e08cb159f945c0c21f18"
        ],
        [
            "unfold Float32.to_bits.",
            "VernacExtend",
            "40b618517f21e32215f131401a8eba3827398f39"
        ],
        [
            "Opaque Float32.to_bits.",
            "VernacSetOpacity",
            "29f94ff87ec641c21cfb66caa000bcafcac028e8"
        ],
        [
            "rewrite and_repr.",
            "VernacExtend",
            "1ee7847e507407d1c06c8c8707f1a64c69c16e6a"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "Transparent Float32.abs.",
            "VernacSetOpacity",
            "97874c41514efb098f1af21282b48b3c55d83fc6"
        ],
        [
            "unfold Float32.abs.",
            "VernacExtend",
            "761a564c711cd4db39e9b40b507a625601d4776f"
        ],
        [
            "Opaque Float32.abs.",
            "VernacSetOpacity",
            "653358732942edf730120555dc7f2d35798bb886"
        ],
        [
            "unfold Float32.abs_pl.",
            "VernacExtend",
            "4ed83091015bb90fab796b1b650efad18097d9b3"
        ],
        [
            "apply float32_to_bits_abs'.",
            "VernacExtend",
            "be8c348ab5f00f49cb9fc4c0a4604d49238ab37d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fabs_float32_lemma: forall x: float32, exists y: int, samerep Mfloat32 Mint32 (Vsingle x) (Vint y) /\\ samerep Mfloat32 Mint32 (Vsingle (Float32.abs x)) (Vint (Int.and y (Int.repr 2147483647))).",
            "VernacStartTheoremProof",
            "3648f3217ccc10f497e31cef9fcd89983123d399"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (Float32.to_bits x).",
            "VernacExtend",
            "9cdb930ad4f6c78abb1191a379f373ce78d7e0bf"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "split; [ reflexivity | ].",
            "VernacExtend",
            "688a19953df683daa93f28ed79224d10c1268724"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply decode_float32_iff_int32; auto.",
            "VernacExtend",
            "df3e7cc096da97e43067380b203d1f69b059ac5c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "split; [ reflexivity | ].",
            "VernacExtend",
            "688a19953df683daa93f28ed79224d10c1268724"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- float32_to_bits_abs.",
            "VernacExtend",
            "67830226616791d7e52ca2cdd132a5608086252e"
        ],
        [
            "apply decode_float32_iff_int32; auto.",
            "VernacExtend",
            "df3e7cc096da97e43067380b203d1f69b059ac5c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Module Single.",
            "VernacDefineModule",
            "b4962c500b191cbdbfe493e5b5fb6ca7d5262923"
        ],
        [
            "Definition fabs_single_spec := DECLARE _fabs_single WITH x: float32 PRE [ _x OF Tfloat F32 noattr] PROP() LOCAL(temp _x (Vsingle x)) SEP() POST [ Tfloat F32 noattr ] PROP() LOCAL (temp ret_temp (Vsingle (Float32.abs x))) SEP().",
            "VernacDefinition",
            "ec6971b1642d8a7b7fb07b00b3b8874641ca8b3c"
        ],
        [
            "Definition Gprog : funspecs := ltac:(with_library prog [ fabs_single_spec ]).",
            "VernacDefinition",
            "66aaf78e679c6b6d36569339111ea27384ff5cd0"
        ],
        [
            "Lemma union_field_address: forall id, composites = (Composite id Union ((_f, tfloat) :: (_i, tuint) :: nil) noattr :: nil) -> forall p, field_address (Tunion id noattr) [UnionField _f] p = field_address (Tunion id noattr) [UnionField _i] p.",
            "VernacStartTheoremProof",
            "5e0605fdea06aeb4b76e0bd706fa0a5873d3f6e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "assert (field_compatible (Tunion id noattr) [UnionField _f] p <-> field_compatible (Tunion id noattr) [UnionField _i] p).",
            "VernacExtend",
            "0d30d4936c373de7670ecf5adbcc2183ea43a519"
        ],
        [
            "2: subst id; unfold field_address; if_tac; if_tac; auto; tauto.",
            "VernacExtend",
            "97c98e59a71e935f80ce784427ac3194a76e2f9d"
        ],
        [
            "subst id.",
            "VernacExtend",
            "767d665b900c00267662410c47cd78d0b487ae49"
        ],
        [
            "rewrite !field_compatible_cons; simpl.",
            "VernacExtend",
            "d7b850f494d982ec8c3e9f614e11e6e7ea8947d1"
        ],
        [
            "unfold in_members; simpl.",
            "VernacExtend",
            "1bc036b88e7269338b7a09ca2a514ad18b03e3be"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma body_fabs_single: semax_body Vprog Gprog f_fabs_single fabs_single_spec.",
            "VernacStartTheoremProof",
            "bd1af96d03901603d8ebc4f53b1bfbe06bd742ac"
        ],
        [
            "start_function.",
            "VernacExtend",
            "c9d31eecaa0cff79fee4b43862828db880600e1a"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "destruct (fabs_float32_lemma x) as [y [H3 H4]].",
            "VernacExtend",
            "fbdf52319ab9562b67661a9d9ce3b9041dec7a70"
        ],
        [
            "unfold_data_at (data_at _ _ _ _).",
            "VernacExtend",
            "90421338274ed69a4a7071fdea096daa6d0a5813"
        ],
        [
            "rewrite field_at_data_at.",
            "VernacExtend",
            "574f3b04d77aacbaa7b36ed60622f8e84d690df9"
        ],
        [
            "erewrite data_at_single_int with (v2:= Vint y); [ | apply I | apply I | exact H3 | auto | apply (union_field_address _ (eq_refl _))].",
            "VernacExtend",
            "94a2e0346961322a641568fcdc96aee5a1649802"
        ],
        [
            "match goal with |- context [Tunion ?structid] => change (Tint I32 Unsigned noattr) with (nested_field_type (Tunion structid noattr) [UnionField _i]) end.",
            "VernacExtend",
            "0218882f698c7a5c23f7ef665d5637920c62ed8a"
        ],
        [
            "rewrite <- field_at_data_at.",
            "VernacExtend",
            "2fcd633a9b2ba7577fa3f0219888c754a1c1d623"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "rewrite field_at_data_at.",
            "VernacExtend",
            "574f3b04d77aacbaa7b36ed60622f8e84d690df9"
        ],
        [
            "erewrite <- data_at_single_int with (v1:= Vsingle (Float32.abs x)); [| apply I | apply I | exact H4 | auto | apply (union_field_address _ (eq_refl _))].",
            "VernacExtend",
            "3e95de5bc9da2f6a7766d2df7c948b03c9721540"
        ],
        [
            "match goal with |- context [Tunion ?structid] => change (Tfloat F32 noattr) with (nested_field_type (Tunion structid noattr) [UnionField _f]) end.",
            "VernacExtend",
            "2878e32e58c084bc3f20cf6061eeaeeae84efbf4"
        ],
        [
            "rewrite <- field_at_data_at.",
            "VernacExtend",
            "2fcd633a9b2ba7577fa3f0219888c754a1c1d623"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "unfold_data_at (data_at_ _ _ _).",
            "VernacExtend",
            "cb33a14c761730a5c793610ed6f857d954b0aab9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Single.",
            "VernacEndSegment",
            "301cf278d5ce187becf6171b9bc00bd11f209f6b"
        ],
        [
            "Module Float.",
            "VernacDefineModule",
            "12fd6a566bc035610a63095284813c7e7db21d6d"
        ],
        [
            "Definition fabs_single_spec := DECLARE _fabs_single WITH x: float PRE [ _x OF Tfloat F32 noattr] PROP() LOCAL(temp _x (Vfloat x)) SEP() POST [ Tfloat F32 noattr ] PROP() LOCAL (temp ret_temp (Vfloat (Float.abs x))) SEP().",
            "VernacDefinition",
            "39260ae35bc462a3f066c059af0bbc27df5d1042"
        ],
        [
            "Definition Gprog : funspecs := ltac:(with_library prog [ fabs_single_spec ]).",
            "VernacDefinition",
            "66aaf78e679c6b6d36569339111ea27384ff5cd0"
        ],
        [
            "Lemma body_fabs_single: semax_body Vprog Gprog f_fabs_single fabs_single_spec.",
            "VernacStartTheoremProof",
            "bd1af96d03901603d8ebc4f53b1bfbe06bd742ac"
        ],
        [
            "try (start_function; fail 99).",
            "VernacExtend",
            "7ac73150f3dc7aadd848e2d8bdddfa6afda8d210"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "End Float.",
            "VernacEndSegment",
            "57d87d1d9ceaec9bce9496192829a187d54afaac"
        ]
    ],
    "proofs": [
        {
            "name": "CompSpecs",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "make_compspecs prog.",
                        "VernacExtend",
                        "36220761a2e554d38938361d97a6a7824a7eb4eb"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Vprog",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "mk_varspecs prog.",
                        "VernacExtend",
                        "3d71166af717afdd6c2d6e7673cef893ac1c6afc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "decode_float32_int32",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold decode_val,decode_int,rev_if_be in *.",
                        "VernacExtend",
                        "6de8bbcc46d2d5f82c038c1c6a7da5a621315a54"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes bl) eqn:?H.",
                        "VernacExtend",
                        "0bbffef6e90f0c0cda598a44976ef94f1e4afa63"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "rewrite Float32.to_of_bits.",
                        "VernacExtend",
                        "8866fc6c2e85996685f0b027b1277fe4519dcd2e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NOT_decode_int32_float32",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "set (x := Float32.zero).",
                        "VernacExtend",
                        "ccc630dc656cc7ac7d40906963c9965832386171"
                    ]
                },
                {
                    "command": [
                        "set (i := Float32.to_bits x).",
                        "VernacExtend",
                        "d3f961d3c4de1191be99ef826e5bf7cca3d10cd9"
                    ]
                },
                {
                    "command": [
                        "set (bl := [Fragment (Vint i) Q32 3; Fragment (Vint i) Q32 2; Fragment (Vint i) Q32 1; Fragment (Vint i) Q32 0]).",
                        "VernacExtend",
                        "6233a389f6adf51e735c692ab908931a7f6b40c6"
                    ]
                },
                {
                    "command": [
                        "specialize (H bl x).",
                        "VernacExtend",
                        "b4c3f8ec4a106b591da376ca47a370a5390c1402"
                    ]
                },
                {
                    "command": [
                        "specialize (H (eq_refl _)).",
                        "VernacExtend",
                        "ec7e927454d1cce5846df2aa5d053a7c3608cc22"
                    ]
                },
                {
                    "command": [
                        "assert (decode_val Mint32 bl = Vint (Float32.to_bits x)).",
                        "VernacExtend",
                        "429b08bba6d0624b933507a0cd81be7ec4e8900d"
                    ]
                },
                {
                    "command": [
                        "unfold decode_val, bl.",
                        "VernacExtend",
                        "f6d39cada5df3e6cbd0cfca52fb6c64c7c298145"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (Val.eq (Vint i) (Vint i)); [ | congruence].",
                        "VernacExtend",
                        "4d83a4c3a306b0cf06505e5da836b632358f7b46"
                    ]
                },
                {
                    "command": [
                        "destruct (quantity_eq Q32 Q32); [ | congruence].",
                        "VernacExtend",
                        "0e4ae3ee907c2eb156ead03248b5d3c9559a622e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "specialize (H H0).",
                        "VernacExtend",
                        "c54bab77619d44044b341734ba5cf8906d22a6cc"
                    ]
                },
                {
                    "command": [
                        "clear - H.",
                        "VernacExtend",
                        "0feb8621f12176e9894f4f3ff86ecf0003739aed"
                    ]
                },
                {
                    "command": [
                        "subst bl i.",
                        "VernacExtend",
                        "0a5b8db0d40f84930f3d6be0850a70329a588c4e"
                    ]
                },
                {
                    "command": [
                        "unfold decode_val in H.",
                        "VernacExtend",
                        "dc47308e7015ca2afcf468c73652ad9e1f0bd2ef"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapsto_single_int",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold mapsto.",
                        "VernacExtend",
                        "ddd6f5006c78ea6d38dd2ca1bc0830a4d57ddc90"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct p; auto.",
                        "VernacExtend",
                        "94280b3a49c08b76852fac1fca3c7461587f918a"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite (prop_true_andp _ _ H).",
                        "VernacExtend",
                        "cff17fe6826a8e3d4a3af4d576ce37cd6408bc73"
                    ]
                },
                {
                    "command": [
                        "rewrite (prop_true_andp _ _ H0).",
                        "VernacExtend",
                        "0793a1eeecf0d9e3357e2871c126bf221a0acb96"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold res_predicates.address_mapsto.",
                        "VernacExtend",
                        "04875e31b0ac4de79b8fdbc9f4754d6119b97c0a"
                    ]
                },
                {
                    "command": [
                        "apply predicates_hered.pred_ext'.",
                        "VernacExtend",
                        "9cdffdffb88333f301c2074dce9cf53287c323e4"
                    ]
                },
                {
                    "command": [
                        "extensionality phi.",
                        "VernacExtend",
                        "341296532300d7776f83753146650b9d4cba01e1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply exists_ext; intro bl.",
                        "VernacExtend",
                        "a76d1d646df2990d4153dc843936dce6a002c9df"
                    ]
                },
                {
                    "command": [
                        "f_equal; f_equal.",
                        "VernacExtend",
                        "4af3aabf2275f9cf435779d06a608416745c2ac4"
                    ]
                },
                {
                    "command": [
                        "apply and_ext'; auto.",
                        "VernacExtend",
                        "ba653796bb4bccac8ac44029275ceab7f2d8a118"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [H1' H1].",
                        "VernacExtend",
                        "2571e374b7dcfda8b1f97cd890e99770ae12a0f7"
                    ]
                },
                {
                    "command": [
                        "specialize (H1 bl).",
                        "VernacExtend",
                        "d4b79ef5c09961c71b26c8f6a27a178b650874cc"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext.",
                        "VernacExtend",
                        "2eefee59d08f4d00cc25a349963ba3e1c50fc334"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "apply exp_left; intro bl.",
                        "VernacExtend",
                        "1bb41b04f47da6ce3fa8067a66962ceaf7df2a8a"
                    ]
                },
                {
                    "command": [
                        "apply exp_right with bl.",
                        "VernacExtend",
                        "3abeb7d25b2d68fab3c0c07d267326e3fc9b0c93"
                    ]
                },
                {
                    "command": [
                        "normalize.",
                        "VernacExtend",
                        "b44f672ef6622bc7f333c87e081e8283dfd06387"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold tc_val'.",
                        "VernacExtend",
                        "61208a269c11cc870f6197774860d62a19e00349"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext.",
                        "VernacExtend",
                        "2eefee59d08f4d00cc25a349963ba3e1c50fc334"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fabs_float32_lemma",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists (Float32.to_bits x).",
                        "VernacExtend",
                        "9cdb930ad4f6c78abb1191a379f373ce78d7e0bf"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "split; [ reflexivity | ].",
                        "VernacExtend",
                        "688a19953df683daa93f28ed79224d10c1268724"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply decode_float32_iff_int32; auto.",
                        "VernacExtend",
                        "df3e7cc096da97e43067380b203d1f69b059ac5c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "split; [ reflexivity | ].",
                        "VernacExtend",
                        "688a19953df683daa93f28ed79224d10c1268724"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- float32_to_bits_abs.",
                        "VernacExtend",
                        "67830226616791d7e52ca2cdd132a5608086252e"
                    ]
                },
                {
                    "command": [
                        "apply decode_float32_iff_int32; auto.",
                        "VernacExtend",
                        "df3e7cc096da97e43067380b203d1f69b059ac5c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "body_fabs_single",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "start_function.",
                        "VernacExtend",
                        "c9d31eecaa0cff79fee4b43862828db880600e1a"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "destruct (fabs_float32_lemma x) as [y [H3 H4]].",
                        "VernacExtend",
                        "fbdf52319ab9562b67661a9d9ce3b9041dec7a70"
                    ]
                },
                {
                    "command": [
                        "unfold_data_at (data_at _ _ _ _).",
                        "VernacExtend",
                        "90421338274ed69a4a7071fdea096daa6d0a5813"
                    ]
                },
                {
                    "command": [
                        "rewrite field_at_data_at.",
                        "VernacExtend",
                        "574f3b04d77aacbaa7b36ed60622f8e84d690df9"
                    ]
                },
                {
                    "command": [
                        "erewrite data_at_single_int with (v2:= Vint y); [ | apply I | apply I | exact H3 | auto | apply (union_field_address _ (eq_refl _))].",
                        "VernacExtend",
                        "94a2e0346961322a641568fcdc96aee5a1649802"
                    ]
                },
                {
                    "command": [
                        "match goal with |- context [Tunion ?structid] => change (Tint I32 Unsigned noattr) with (nested_field_type (Tunion structid noattr) [UnionField _i]) end.",
                        "VernacExtend",
                        "0218882f698c7a5c23f7ef665d5637920c62ed8a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- field_at_data_at.",
                        "VernacExtend",
                        "2fcd633a9b2ba7577fa3f0219888c754a1c1d623"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "rewrite field_at_data_at.",
                        "VernacExtend",
                        "574f3b04d77aacbaa7b36ed60622f8e84d690df9"
                    ]
                },
                {
                    "command": [
                        "erewrite <- data_at_single_int with (v1:= Vsingle (Float32.abs x)); [| apply I | apply I | exact H4 | auto | apply (union_field_address _ (eq_refl _))].",
                        "VernacExtend",
                        "3e95de5bc9da2f6a7766d2df7c948b03c9721540"
                    ]
                },
                {
                    "command": [
                        "match goal with |- context [Tunion ?structid] => change (Tfloat F32 noattr) with (nested_field_type (Tunion structid noattr) [UnionField _f]) end.",
                        "VernacExtend",
                        "2878e32e58c084bc3f20cf6061eeaeeae84efbf4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- field_at_data_at.",
                        "VernacExtend",
                        "2fcd633a9b2ba7577fa3f0219888c754a1c1d623"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "unfold_data_at (data_at_ _ _ _).",
                        "VernacExtend",
                        "cb33a14c761730a5c793610ed6f857d954b0aab9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}