{
    "filename": "progs/verif_fib.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.floyd.proofauto.",
            "VernacRequire",
            "1b5b5bd8f6976ab2a8ffc41bb68ef58d6fb49b99"
        ],
        [
            "Require Import VST.progs.fib.",
            "VernacRequire",
            "6ee42447e1481ba87618f134da0eed419f08427f"
        ],
        [
            "Instance CompSpecs : compspecs.",
            "VernacInstance",
            "154eee01c656800e0ca79db421bf2abcdf325f7f"
        ],
        [
            "make_compspecs prog.",
            "VernacExtend",
            "36220761a2e554d38938361d97a6a7824a7eb4eb"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Vprog : varspecs.",
            "VernacDefinition",
            "071102901c915338608cbb3742cc92eff26260b2"
        ],
        [
            "mk_varspecs prog.",
            "VernacExtend",
            "3d71166af717afdd6c2d6e7673cef893ac1c6afc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Fixpoint fib_of_nat (n: nat): Z := match n with | O => 0 | S n' => match n' with | O => 1 | S n'' => fib_of_nat n'' + fib_of_nat n' end end.",
            "VernacFixpoint",
            "81909a4bdcfad9318136a8d5b58f8cd2874ecbf3"
        ],
        [
            "Definition fib_of_Z (n: Z): Z := fib_of_nat (nat_of_Z n).",
            "VernacDefinition",
            "080741ead7046eddb6d9efad23afed1a300d5f39"
        ],
        [
            "Theorem fib_0: fib_of_Z 0 = 0.",
            "VernacStartTheoremProof",
            "89f06a0cd0392305d5c19ca24e1087f7f50c83cf"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fib_1: fib_of_Z 1 = 1.",
            "VernacStartTheoremProof",
            "5646eaa5a0648e743cbf239d55a362ba3eeec0de"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fib_rec: forall n, n >= 0 -> fib_of_Z (n + 2) = fib_of_Z n + fib_of_Z (n + 1).",
            "VernacStartTheoremProof",
            "d22c324d2aad3515434011213984fea9ecbd52a6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fib_of_Z.",
            "VernacExtend",
            "1d3d742a90f9729c5912e4bb4d87c03ef496034a"
        ],
        [
            "rewrite !nat_of_Z_plus, !(plus_comm (nat_of_Z n)) by omega.",
            "VernacExtend",
            "fc57be5bed5a179e85850ddbde0fe5b062649e68"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fib_nonneg: forall n, 0 <= fib_of_Z n.",
            "VernacStartTheoremProof",
            "8e6bb1817d54e4c11ae83cf927f1bdcb1dd7b6c8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fib_of_Z.",
            "VernacExtend",
            "1d3d742a90f9729c5912e4bb4d87c03ef496034a"
        ],
        [
            "forget (nat_of_Z n) as m; clear.",
            "VernacExtend",
            "50c7884b1a4a8deeff0c438f564365976a776377"
        ],
        [
            "assert (0 <= fib_of_nat m /\\ 0 <= fib_of_nat (S m)); [| tauto].",
            "VernacExtend",
            "ed43a3b687a4c440843710f0cce92c68a29789c1"
        ],
        [
            "induction m; [simpl; try omega |].",
            "VernacExtend",
            "da647f1513b3af8da7a3ba1df584c6a03657779a"
        ],
        [
            "destruct IHm.",
            "VernacExtend",
            "17b0050dac84cf86a708a32dad1b604325af7c17"
        ],
        [
            "split; [auto |].",
            "VernacExtend",
            "ea804582ec2c7fdb4bfb4ef625c8246753a75a05"
        ],
        [
            "change (fib_of_nat (S (S m))) with (fib_of_nat m + fib_of_nat (S m)).",
            "VernacExtend",
            "c9fb577de4df63233d28d010da478ec5c501b5ee"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fib_ordered: forall n, 0 <= n -> fib_of_Z n <= fib_of_Z (n + 1).",
            "VernacStartTheoremProof",
            "41ec6853abf28fe116690778f3a60a195c1a1ce0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (zeq n 0); [subst; simpl; rewrite fib_0, fib_1; omega |].",
            "VernacExtend",
            "847dc66552b62af7ed9d84813da89d3de80c2a51"
        ],
        [
            "replace (n + 1) with (n - 1 + 2) by omega.",
            "VernacExtend",
            "c1adc7118d71bd0f3d42e48a57a15be29e3be45b"
        ],
        [
            "rewrite fib_rec by omega.",
            "VernacExtend",
            "00ae8cf8fde1bc942b7f1ded1a6e973637113f22"
        ],
        [
            "replace (n - 1 + 1) with n by omega.",
            "VernacExtend",
            "972e749dd2504482b5730f230212efe2f0bd7eca"
        ],
        [
            "pose proof fib_nonneg (n -1).",
            "VernacExtend",
            "fb53ff6170247f2923fd4fab1e9e1e0c8d0635d0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fib_bound: forall n, 0 <= n < 46 -> 0 <= fib_of_Z n < Int.max_signed.",
            "VernacStartTheoremProof",
            "67da47ea1a99422db08028026c14c353eb25fec9"
        ],
        [
            "assert (fib_of_Z 0 = 0 -> fib_of_Z (0 + 1) = 1 -> forall n, 0 <= n < 46 -> 0 <= fib_of_Z n < Int.max_signed); [| intros; apply H; auto].",
            "VernacExtend",
            "9a143878e03c9f0f62b92fbd1b1c4e75ef60cebe"
        ],
        [
            "do 46 match goal with | |- fib_of_Z ?z = ?f0 -> fib_of_Z (?z + 1) = ?f1 -> forall n, ?z <= n < 46 -> _ => let f2 := eval compute in (f0 + f1) in assert (fib_of_Z (z + 1) = f1 -> fib_of_Z (z + 2) = f2 -> forall n, z + 1 <= n < 46 ->0 <= fib_of_Z n < Int.max_signed); [ replace (z + 2) with (z + 1 + 1) by omega | intros HH0 HH1; specialize (H HH1 ltac:(rewrite fib_rec by (simpl; omega); rewrite HH0, HH1; reflexivity)); intros; destruct (zeq z n); [subst n; rewrite HH0; rep_omega | apply H; omega] ] end.",
            "VernacExtend",
            "df5b06bff4f4a3e2f743f52ef65a9025872c509a"
        ],
        [
            "intros; simpl in *.",
            "VernacExtend",
            "4204ebccd80c56fcc86bac7d33524a002a2d3ee2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fib_spec fun_id := DECLARE fun_id WITH n : Z PRE [ _n OF tint ] PROP (0 <= n < 45) LOCAL (temp _n (Vint (Int.repr n))) SEP () POST [ tint ] PROP () LOCAL (temp ret_temp (Vint (Int.repr (fib_of_Z n)))) SEP ().",
            "VernacDefinition",
            "a574b4a771f2de2ba5730bd90e0cc37b25c4c6cf"
        ],
        [
            "Definition Gprog : funspecs := ltac:(with_library prog [ fib_spec _fib_loop; fib_spec _fib_loop_save_var; fib_spec _fib_rec ]).",
            "VernacDefinition",
            "6c895b56c2d0044f0e1a68604a878d4e740b3f44"
        ],
        [
            "Lemma body_fib_loop: semax_body Vprog Gprog f_fib_loop (fib_spec _fib_loop).",
            "VernacStartTheoremProof",
            "2f260d473586d0309b223d18a5074a61d0d3faaa"
        ],
        [
            "start_function.",
            "VernacExtend",
            "c9d31eecaa0cff79fee4b43862828db880600e1a"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward_for_simple_bound n (EX i: Z, (PROP () LOCAL (temp _a1 (Vint (Int.repr (fib_of_Z (i + 1)))); temp _a0 (Vint (Int.repr (fib_of_Z i))); temp _n (Vint (Int.repr n))) SEP ()))%assert.",
            "VernacExtend",
            "c5d739fd689d5360783621a2205342c9e6796ec9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (0 <= fib_of_Z i < Int.max_signed /\\ 0 <= fib_of_Z (i + 1) < Int.max_signed /\\ 0 <= fib_of_Z i + fib_of_Z (i + 1) < Int.max_signed) as [R0 [R1 R2]].",
            "VernacExtend",
            "86bb92e86d33a043ca26d72b703e1efb7e247c1b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- fib_rec by omega.",
            "VernacExtend",
            "a7f0c3495ab1665df66cbb3391a79b0472b5d613"
        ],
        [
            "split; [| split]; apply fib_bound; omega.",
            "VernacExtend",
            "5f5cae5e4d6f92598c5ec87843a72e054d522052"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "rewrite <- fib_rec by omega.",
            "VernacExtend",
            "a7f0c3495ab1665df66cbb3391a79b0472b5d613"
        ],
        [
            "do 3 f_equal; omega.",
            "VernacExtend",
            "eda953ecf16e8b24822ca803e350ad24916fa0b4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma body_fib_rec: semax_body Vprog Gprog f_fib_rec (fib_spec _fib_rec).",
            "VernacStartTheoremProof",
            "ed14789afcf7e5ddaefecd87a7505ed9466faf67"
        ],
        [
            "start_function.",
            "VernacExtend",
            "c9d31eecaa0cff79fee4b43862828db880600e1a"
        ],
        [
            "forward_if.",
            "VernacExtend",
            "c26d674c71f14838f40e15eee264b85c5a5c2b19"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "forward_if.",
            "VernacExtend",
            "c26d674c71f14838f40e15eee264b85c5a5c2b19"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "forward_call (n - 2).",
            "VernacExtend",
            "ab8124d00a3a29611d4317072c87fa50f9133cdc"
        ],
        [
            "1: omega.",
            "VernacExtend",
            "12d0de25399ca7f3e266bea09a98c8e62c871f81"
        ],
        [
            "forward_call (n - 1).",
            "VernacExtend",
            "4e5a11f10029b72e251c4867d52042e3c8f419d3"
        ],
        [
            "1: omega.",
            "VernacExtend",
            "12d0de25399ca7f3e266bea09a98c8e62c871f81"
        ],
        [
            "assert (0 <= fib_of_Z (n - 2) < Int.max_signed /\\ 0 <= fib_of_Z (n - 1) < Int.max_signed /\\ 0 <= fib_of_Z (n - 2) + fib_of_Z (n - 1) < Int.max_signed) as [R0 [R1 R2]].",
            "VernacExtend",
            "f20e308e2740703af47c64cdd25006b1a3925a61"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "replace (n - 1) with (n - 2 + 1) at 3 4 by omega.",
            "VernacExtend",
            "47e74f0969fbee4b403995428b0bf3cc70af214f"
        ],
        [
            "rewrite <- fib_rec by omega.",
            "VernacExtend",
            "a7f0c3495ab1665df66cbb3391a79b0472b5d613"
        ],
        [
            "split; [| split]; apply fib_bound; omega.",
            "VernacExtend",
            "5f5cae5e4d6f92598c5ec87843a72e054d522052"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "replace (n - 1) with (n - 2 + 1) by omega.",
            "VernacExtend",
            "5496acf618b4e32891682de7a094061ea4d52657"
        ],
        [
            "rewrite <- fib_rec by omega.",
            "VernacExtend",
            "a7f0c3495ab1665df66cbb3391a79b0472b5d613"
        ],
        [
            "do 3 f_equal; omega.",
            "VernacExtend",
            "eda953ecf16e8b24822ca803e350ad24916fa0b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma body_fib_loop_save_var: semax_body Vprog Gprog f_fib_loop_save_var (fib_spec _fib_loop_save_var).",
            "VernacStartTheoremProof",
            "da86ca24fa0361f5b01447ea4233b17e2b3f2dba"
        ],
        [
            "start_function.",
            "VernacExtend",
            "c9d31eecaa0cff79fee4b43862828db880600e1a"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward_loop (EX i: Z, (PROP (0 <= i <= n) LOCAL (temp _a1 (Vint (Int.repr (fib_of_Z (i + 1)))); temp _a0 (Vint (Int.repr (fib_of_Z i))); temp _n (Vint (Int.repr (n - i)))) SEP ()))%assert break: (PROP () LOCAL (temp _a0 (Vint (Int.repr (fib_of_Z n)))) SEP ())%assert.",
            "VernacExtend",
            "2ed38aad44e72441c25790b0c56e1f93018364bb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "Exists 0.",
            "VernacExtend",
            "cde6688457913206651aac7ff6334442533f83b6"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "Intros i.",
            "VernacExtend",
            "186579fe52813d623451d11fad01ccb321430c84"
        ],
        [
            "forward_if.",
            "VernacExtend",
            "c26d674c71f14838f40e15eee264b85c5a5c2b19"
        ],
        [
            "2:{",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "assert (i = n) by omega.",
            "VernacExtend",
            "c8a198d6b15bc4da3d2d43c80ecd4457a897eae3"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (0 <= fib_of_Z i < Int.max_signed /\\ 0 <= fib_of_Z (i + 1) < Int.max_signed /\\ 0 <= fib_of_Z i + fib_of_Z (i + 1) < Int.max_signed) as [R0 [R1 R2]].",
            "VernacExtend",
            "86bb92e86d33a043ca26d72b703e1efb7e247c1b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- fib_rec by omega.",
            "VernacExtend",
            "a7f0c3495ab1665df66cbb3391a79b0472b5d613"
        ],
        [
            "split; [| split]; apply fib_bound; omega.",
            "VernacExtend",
            "5f5cae5e4d6f92598c5ec87843a72e054d522052"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Exists (i + 1).",
            "VernacExtend",
            "477e61c045a72453b6a62bd84be18f444ba934d0"
        ],
        [
            "entailer!.",
            "VernacExtend",
            "e9311eb469ece63c985af7872ea148a97277818d"
        ],
        [
            "split3.",
            "VernacExtend",
            "d503f4d2280de6d12536867e06be0ceea4b38749"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- fib_rec by omega.",
            "VernacExtend",
            "a7f0c3495ab1665df66cbb3391a79b0472b5d613"
        ],
        [
            "do 3 f_equal; omega.",
            "VernacExtend",
            "eda953ecf16e8b24822ca803e350ad24916fa0b4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "do 2 f_equal; omega.",
            "VernacExtend",
            "7ef782e5612767d21521eb501e56eff1d40e8a73"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "do 2 f_equal; omega.",
            "VernacExtend",
            "7ef782e5612767d21521eb501e56eff1d40e8a73"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "forward.",
            "VernacExtend",
            "9b0656c46c9070100c33193703b52c502932001c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "CompSpecs",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "make_compspecs prog.",
                        "VernacExtend",
                        "36220761a2e554d38938361d97a6a7824a7eb4eb"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Vprog",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "mk_varspecs prog.",
                        "VernacExtend",
                        "3d71166af717afdd6c2d6e7673cef893ac1c6afc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "fib_0",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fib_1",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fib_rec",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold fib_of_Z.",
                        "VernacExtend",
                        "1d3d742a90f9729c5912e4bb4d87c03ef496034a"
                    ]
                },
                {
                    "command": [
                        "rewrite !nat_of_Z_plus, !(plus_comm (nat_of_Z n)) by omega.",
                        "VernacExtend",
                        "fc57be5bed5a179e85850ddbde0fe5b062649e68"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fib_nonneg",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold fib_of_Z.",
                        "VernacExtend",
                        "1d3d742a90f9729c5912e4bb4d87c03ef496034a"
                    ]
                },
                {
                    "command": [
                        "forget (nat_of_Z n) as m; clear.",
                        "VernacExtend",
                        "50c7884b1a4a8deeff0c438f564365976a776377"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= fib_of_nat m /\\ 0 <= fib_of_nat (S m)); [| tauto].",
                        "VernacExtend",
                        "ed43a3b687a4c440843710f0cce92c68a29789c1"
                    ]
                },
                {
                    "command": [
                        "induction m; [simpl; try omega |].",
                        "VernacExtend",
                        "da647f1513b3af8da7a3ba1df584c6a03657779a"
                    ]
                },
                {
                    "command": [
                        "destruct IHm.",
                        "VernacExtend",
                        "17b0050dac84cf86a708a32dad1b604325af7c17"
                    ]
                },
                {
                    "command": [
                        "split; [auto |].",
                        "VernacExtend",
                        "ea804582ec2c7fdb4bfb4ef625c8246753a75a05"
                    ]
                },
                {
                    "command": [
                        "change (fib_of_nat (S (S m))) with (fib_of_nat m + fib_of_nat (S m)).",
                        "VernacExtend",
                        "c9fb577de4df63233d28d010da478ec5c501b5ee"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fib_ordered",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (zeq n 0); [subst; simpl; rewrite fib_0, fib_1; omega |].",
                        "VernacExtend",
                        "847dc66552b62af7ed9d84813da89d3de80c2a51"
                    ]
                },
                {
                    "command": [
                        "replace (n + 1) with (n - 1 + 2) by omega.",
                        "VernacExtend",
                        "c1adc7118d71bd0f3d42e48a57a15be29e3be45b"
                    ]
                },
                {
                    "command": [
                        "rewrite fib_rec by omega.",
                        "VernacExtend",
                        "00ae8cf8fde1bc942b7f1ded1a6e973637113f22"
                    ]
                },
                {
                    "command": [
                        "replace (n - 1 + 1) with n by omega.",
                        "VernacExtend",
                        "972e749dd2504482b5730f230212efe2f0bd7eca"
                    ]
                },
                {
                    "command": [
                        "pose proof fib_nonneg (n -1).",
                        "VernacExtend",
                        "fb53ff6170247f2923fd4fab1e9e1e0c8d0635d0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fib_bound",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "assert (fib_of_Z 0 = 0 -> fib_of_Z (0 + 1) = 1 -> forall n, 0 <= n < 46 -> 0 <= fib_of_Z n < Int.max_signed); [| intros; apply H; auto].",
                        "VernacExtend",
                        "9a143878e03c9f0f62b92fbd1b1c4e75ef60cebe"
                    ]
                },
                {
                    "command": [
                        "do 46 match goal with | |- fib_of_Z ?z = ?f0 -> fib_of_Z (?z + 1) = ?f1 -> forall n, ?z <= n < 46 -> _ => let f2 := eval compute in (f0 + f1) in assert (fib_of_Z (z + 1) = f1 -> fib_of_Z (z + 2) = f2 -> forall n, z + 1 <= n < 46 ->0 <= fib_of_Z n < Int.max_signed); [ replace (z + 2) with (z + 1 + 1) by omega | intros HH0 HH1; specialize (H HH1 ltac:(rewrite fib_rec by (simpl; omega); rewrite HH0, HH1; reflexivity)); intros; destruct (zeq z n); [subst n; rewrite HH0; rep_omega | apply H; omega] ] end.",
                        "VernacExtend",
                        "df5b06bff4f4a3e2f743f52ef65a9025872c509a"
                    ]
                },
                {
                    "command": [
                        "intros; simpl in *.",
                        "VernacExtend",
                        "4204ebccd80c56fcc86bac7d33524a002a2d3ee2"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "body_fib_rec",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "start_function.",
                        "VernacExtend",
                        "c9d31eecaa0cff79fee4b43862828db880600e1a"
                    ]
                },
                {
                    "command": [
                        "forward_if.",
                        "VernacExtend",
                        "c26d674c71f14838f40e15eee264b85c5a5c2b19"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "forward_if.",
                        "VernacExtend",
                        "c26d674c71f14838f40e15eee264b85c5a5c2b19"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "forward_call (n - 2).",
                        "VernacExtend",
                        "ab8124d00a3a29611d4317072c87fa50f9133cdc"
                    ]
                },
                {
                    "command": [
                        "1: omega.",
                        "VernacExtend",
                        "12d0de25399ca7f3e266bea09a98c8e62c871f81"
                    ]
                },
                {
                    "command": [
                        "forward_call (n - 1).",
                        "VernacExtend",
                        "4e5a11f10029b72e251c4867d52042e3c8f419d3"
                    ]
                },
                {
                    "command": [
                        "1: omega.",
                        "VernacExtend",
                        "12d0de25399ca7f3e266bea09a98c8e62c871f81"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= fib_of_Z (n - 2) < Int.max_signed /\\ 0 <= fib_of_Z (n - 1) < Int.max_signed /\\ 0 <= fib_of_Z (n - 2) + fib_of_Z (n - 1) < Int.max_signed) as [R0 [R1 R2]].",
                        "VernacExtend",
                        "f20e308e2740703af47c64cdd25006b1a3925a61"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "replace (n - 1) with (n - 2 + 1) at 3 4 by omega.",
                        "VernacExtend",
                        "47e74f0969fbee4b403995428b0bf3cc70af214f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- fib_rec by omega.",
                        "VernacExtend",
                        "a7f0c3495ab1665df66cbb3391a79b0472b5d613"
                    ]
                },
                {
                    "command": [
                        "split; [| split]; apply fib_bound; omega.",
                        "VernacExtend",
                        "5f5cae5e4d6f92598c5ec87843a72e054d522052"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "forward.",
                        "VernacExtend",
                        "9b0656c46c9070100c33193703b52c502932001c"
                    ]
                },
                {
                    "command": [
                        "entailer!.",
                        "VernacExtend",
                        "e9311eb469ece63c985af7872ea148a97277818d"
                    ]
                },
                {
                    "command": [
                        "replace (n - 1) with (n - 2 + 1) by omega.",
                        "VernacExtend",
                        "5496acf618b4e32891682de7a094061ea4d52657"
                    ]
                },
                {
                    "command": [
                        "rewrite <- fib_rec by omega.",
                        "VernacExtend",
                        "a7f0c3495ab1665df66cbb3391a79b0472b5d613"
                    ]
                },
                {
                    "command": [
                        "do 3 f_equal; omega.",
                        "VernacExtend",
                        "eda953ecf16e8b24822ca803e350ad24916fa0b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}