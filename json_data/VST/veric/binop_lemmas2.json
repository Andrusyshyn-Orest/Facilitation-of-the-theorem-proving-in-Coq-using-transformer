{
    "filename": "veric/binop_lemmas2.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.msl.msl_standard.",
            "VernacRequire",
            "bbb3b33b9509ab47eb7418bd6127eafa914382b1"
        ],
        [
            "Require Import VST.veric.Clight_base.",
            "VernacRequire",
            "03391ebcbe352738cbe4d19626ab439bfac7c2e7"
        ],
        [
            "Require Import VST.veric.compcert_rmaps.",
            "VernacRequire",
            "c684a380737921a2e41654d70bb2fe8e448426cf"
        ],
        [
            "Require Import VST.veric.Clight_lemmas.",
            "VernacRequire",
            "02532b9c71acd440dec2f77aca2af2a0760847e8"
        ],
        [
            "Require Import VST.veric.mpred.",
            "VernacRequire",
            "11652084584e46804583cf99fdbf0fa76aa9fd7a"
        ],
        [
            "Require Import VST.veric.tycontext.",
            "VernacRequire",
            "f8951535af03e9380f7d0a99afae06d1059d4422"
        ],
        [
            "Require Import VST.veric.expr2.",
            "VernacRequire",
            "bf07dfc9a4517a977ef232bb1ba25ac9aaf5c2d9"
        ],
        [
            "Require Import VST.veric.Clight_Cop2.",
            "VernacRequire",
            "f0c330ebce3c0859261241e10e8a1008ad79973b"
        ],
        [
            "Import Cop.",
            "VernacImport",
            "866b3177cf263601a61546355b941920e6b447ef"
        ],
        [
            "Lemma eval_expr_any: forall {CS: compspecs} rho e v, eval_expr e any_environ = v -> v <> Vundef -> eval_expr e rho = v with eval_lvalue_any: forall {CS: compspecs} rho e v, eval_lvalue e any_environ = v -> v <> Vundef -> eval_lvalue e rho = v.",
            "VernacStartTheoremProof",
            "32bbcc36d823e71900cf36559a2a82e944fddb62"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear eval_expr_any.",
            "VernacExtend",
            "04dfb487711b38aaa46a54b10f0dffd6f32e90f2"
        ],
        [
            "intros ? ?.",
            "VernacExtend",
            "546ddfdd2482db9e439533251e7f222ee06f71aa"
        ],
        [
            "induction e; simpl; intros; subst; unfold_lift; try reflexivity; unfold_lift in H0; cbv delta [eval_unop eval_binop force_val2 force_val1 deref_noload always Datatypes.id deref_noload force_ptr force_val eval_var eval_id ] in H0|-*; simpl in *; repeat match goal with | _ => reflexivity | |- match access_mode ?t with | _ => _ end _ = _ => destruct (access_mode t); simpl in * | |- context [match eval_expr ?e any_environ with _ => _ end] => destruct (eval_expr e any_environ) eqn:?; try congruence; rewrite (IHe _ (eq_refl _)); auto | _ => try congruence end.",
            "VernacExtend",
            "55f4c675d6940ea4356010ed11c773614fb3b481"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IHe; auto.",
            "VernacExtend",
            "ae548d891bf1e942a2630e21af5058ecd9a9ef1c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply eval_lvalue_any; auto.",
            "VernacExtend",
            "2ec5c0c0a29c362ceee52b5125cd7ed75176110a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (eval_expr e any_environ) eqn:?; simpl in *; [elimtype False; apply H0; clear; try destruct u; destruct (typeof e) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; try reflexivity | rewrite (IHe _ (eq_refl _)) by congruence; auto .. ].",
            "VernacExtend",
            "2bc00dacf483745faa3b79ed9d18f729fac74937"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Cop2.bool_val; simple_if_tac; reflexivity.",
            "VernacExtend",
            "7d533d6c6aa17ee12d9fdb9f25ef4b08e00e3523"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (eval_expr e1 any_environ) eqn:?; simpl in *; [ elimtype False; apply H0; clear | rewrite (IHe1 _ (eq_refl _)) by congruence; auto .. ]; try solve [ destruct b; destruct (typeof e1) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; destruct (typeof e2) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; try reflexivity; cbv beta iota delta [ sem_binary_operation' Clight_Cop2.sem_cmp classify_cmp typeconv remove_attributes change_attributes ]; repeat match goal with |- context [eqb_type ?A ?B] => let J := fresh \"J\" in destruct (eqb_type A B) eqn:J; [apply eqb_type_true in J; try solve [inv J] | apply eqb_type_false in J] end; try reflexivity; destruct (eval_expr e2 any_environ); reflexivity].",
            "VernacExtend",
            "cf5a8b48b961f06fd7c0b95b4ef6957b377ad405"
        ],
        [
            "all: destruct (eval_expr e2 any_environ) eqn:?; simpl in *; [ elimtype False; apply H0; clear | rewrite (IHe2 _ (eq_refl _)) by congruence; auto .. ]; destruct b; destruct (typeof e1) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; destruct (typeof e2) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; try reflexivity; cbv beta iota delta [ sem_binary_operation' Clight_Cop2.sem_cmp classify_cmp typeconv remove_attributes change_attributes ]; repeat match goal with |- context [eqb_type ?A ?B] => let J := fresh \"J\" in destruct (eqb_type A B) eqn:J; [apply eqb_type_true in J; try solve [inv J] | apply eqb_type_false in J] end; reflexivity.",
            "VernacExtend",
            "788c1418cbbfe2e439b203c77afca6ee6fd7674d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct t as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; destruct (typeof e) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; (destruct (eval_expr e any_environ) eqn:?; simpl in *; [elimtype False; apply H0; clear | try rewrite (IHe _ (eq_refl _)) by congruence; auto .. ]); auto; try (unfold Clight_Cop2.sem_cast, Clight_Cop2.classify_cast; repeat simple_if_tac; reflexivity).",
            "VernacExtend",
            "180c6c8cf0045681c12ec283346e6d38e8dcaf17"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (typeof e) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; simpl in *; unfold always; auto.",
            "VernacExtend",
            "5c9f00fed8c64b9e37d8e4b243e508da1ed5941a"
        ],
        [
            "destruct (cenv_cs ! i0) as [co |]; auto.",
            "VernacExtend",
            "917ac434ca407d772fb2926503f16fa4397461fa"
        ],
        [
            "destruct (field_offset cenv_cs i (co_members co)); auto.",
            "VernacExtend",
            "d48a7edf26d8f2651e35ac3282dcc40acc697e36"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply eval_lvalue_any; auto.",
            "VernacExtend",
            "2ec5c0c0a29c362ceee52b5125cd7ed75176110a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "apply H0; reflexivity.",
            "VernacExtend",
            "a937a537de614f007d03ed42d6ef34b054efcb82"
        ],
        [
            "unfold force_ptr in *.",
            "VernacExtend",
            "de5bf42b8027dc6cde4e6631f91b00d3931d9321"
        ],
        [
            "destruct (eval_lvalue e any_environ) eqn:?; simpl in *; destruct (cenv_cs ! i0); try congruence.",
            "VernacExtend",
            "9236424f7e702504944f9a6e838bd922a018a798"
        ],
        [
            "rewrite (eval_lvalue_any _ _ _ _ Heqv); auto.",
            "VernacExtend",
            "0e3fb7e8d5774758bef879c244403659ce5c87ec"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear eval_lvalue_any.",
            "VernacExtend",
            "80bee1f531b028c234ed5e4f2c97002aa68f67e8"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction e; simpl; intros; subst; unfold_lift; try reflexivity; unfold_lift in H0.",
            "VernacExtend",
            "0fcc0aff0d3f04165423ad6eee22eaa593cb1bc0"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold eval_var in *; simpl in *; congruence.",
            "VernacExtend",
            "02352456b7ff2797b0681174bc0202bf7d4ad761"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply eval_expr_any; auto.",
            "VernacExtend",
            "103c4740cebdd2a8377404fa63def324029f1581"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (typeof e) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; simpl in *; unfold always; auto.",
            "VernacExtend",
            "5c9f00fed8c64b9e37d8e4b243e508da1ed5941a"
        ],
        [
            "destruct (cenv_cs ! i0) as [co |]; auto.",
            "VernacExtend",
            "917ac434ca407d772fb2926503f16fa4397461fa"
        ],
        [
            "destruct (field_offset cenv_cs i (co_members co)); auto.",
            "VernacExtend",
            "d48a7edf26d8f2651e35ac3282dcc40acc697e36"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply IHe; auto.",
            "VernacExtend",
            "ae548d891bf1e942a2630e21af5058ecd9a9ef1c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "apply H0; reflexivity.",
            "VernacExtend",
            "a937a537de614f007d03ed42d6ef34b054efcb82"
        ],
        [
            "unfold force_ptr in *.",
            "VernacExtend",
            "de5bf42b8027dc6cde4e6631f91b00d3931d9321"
        ],
        [
            "destruct (eval_lvalue e any_environ) eqn:?; simpl in *; destruct (cenv_cs ! i0); try congruence.",
            "VernacExtend",
            "9236424f7e702504944f9a6e838bd922a018a798"
        ],
        [
            "rewrite (IHe _ (eq_refl _)); auto.",
            "VernacExtend",
            "489c79d593ac6386b2b13f6878dc79f3d3b8f7e0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_ilt': forall {CS: compspecs} e j, denote_tc_assert (tc_ilt e j) = denote_tc_assert (tc_ilt' e j).",
            "VernacStartTheoremProof",
            "146fa0c36b76af1b9971b1d702ae99f19bb6f583"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "unfold tc_ilt; simpl.",
            "VernacExtend",
            "7beba333d66b7dbad3248b98bc6109fcde6047cb"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "destruct (eval_expr e any_environ) eqn:?; simpl; auto.",
            "VernacExtend",
            "b8ef5f66c2ee45f4cd94e6e358005c5e3a14783a"
        ],
        [
            "apply (eval_expr_any rho) in Heqv; try congruence.",
            "VernacExtend",
            "b9664c25533189775eec0b5c51f971ec5293e701"
        ],
        [
            "rewrite Heqv; simpl.",
            "VernacExtend",
            "902efa9d537df76ce799918e54689a3f96d51a6e"
        ],
        [
            "destruct (Int.ltu i j) eqn:?; simpl; unfold_lift; simpl; rewrite ?Heqv; simpl; auto.",
            "VernacExtend",
            "6b5102e9ebb7b2f1e708cd36d64d78cd8fd9dd10"
        ],
        [
            "apply pred_ext; intuition.",
            "VernacExtend",
            "a34827f50d30f5a574c28315d22e34aad5f96c52"
        ],
        [
            "apply Int.ltu_inv in Heqb.",
            "VernacExtend",
            "6d5cb82fce471ff8928abd1505ca9c7aed82fd80"
        ],
        [
            "intros ? ?.",
            "VernacExtend",
            "546ddfdd2482db9e439533251e7f222ee06f71aa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct Heqb.",
            "VernacExtend",
            "523b34fe12d4c0f1f76ca41dc5235f6655047e17"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_llt': forall {CS: compspecs} e j, denote_tc_assert (tc_llt e j) = denote_tc_assert (tc_llt' e j).",
            "VernacStartTheoremProof",
            "e6ca745dffe934b79fc6fd2292a666d44d7ab000"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "unfold tc_llt; simpl.",
            "VernacExtend",
            "eac436b128c8ed6b25a4d7a6ecd3de28d32af4d6"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "destruct (eval_expr e any_environ) eqn:?; simpl; auto.",
            "VernacExtend",
            "b8ef5f66c2ee45f4cd94e6e358005c5e3a14783a"
        ],
        [
            "apply (eval_expr_any rho) in Heqv; try congruence.",
            "VernacExtend",
            "b9664c25533189775eec0b5c51f971ec5293e701"
        ],
        [
            "rewrite Heqv; simpl.",
            "VernacExtend",
            "902efa9d537df76ce799918e54689a3f96d51a6e"
        ],
        [
            "destruct (Int64.ltu i j) eqn:?; simpl; unfold_lift; simpl; rewrite ?Heqv; simpl; auto.",
            "VernacExtend",
            "f3f90eba09b9fb1d62a33e9b229c31a9ebf25069"
        ],
        [
            "apply pred_ext; intuition.",
            "VernacExtend",
            "a34827f50d30f5a574c28315d22e34aad5f96c52"
        ],
        [
            "apply Int64.ltu_inv in Heqb.",
            "VernacExtend",
            "985ecf03a7edeaa67102af7a1aeee6f707c537f0"
        ],
        [
            "intros ? ?.",
            "VernacExtend",
            "546ddfdd2482db9e439533251e7f222ee06f71aa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct Heqb.",
            "VernacExtend",
            "523b34fe12d4c0f1f76ca41dc5235f6655047e17"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_val_void: forall v, tc_val Tvoid v <-> False.",
            "VernacStartTheoremProof",
            "f9b7552f7e0b8fe1e5f6be9de49c16fdded376e3"
        ],
        [
            "destruct v; simpl; tauto.",
            "VernacExtend",
            "f417ffef43d879347fe357f849bf9e58bded0cda"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition denote_tc_assert' {CS: compspecs} (a: tc_assert) (rho: environ) : mpred.",
            "VernacDefinition",
            "319b73886ec036d87418c07d98881d6d3288606c"
        ],
        [
            "pose (P := denote_tc_assert a rho).",
            "VernacExtend",
            "7433ff15d707ceae8fb6698d592877056ec08f97"
        ],
        [
            "unfold denote_tc_assert in P.",
            "VernacExtend",
            "d0cb21bce76f2450689efa3990d671c81d5e883f"
        ],
        [
            "super_unfold_lift.",
            "VernacExtend",
            "f74399a7d6c2e3b20cb175917085c1b87ddc843e"
        ],
        [
            "destruct a; apply P.",
            "VernacExtend",
            "0e5b9e2b97d95439f3d4e30d56490edb83a05e6d"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma denote_tc_assert'_eq{CS: compspecs}: denote_tc_assert' = denote_tc_assert.",
            "VernacStartTheoremProof",
            "20b2fa28f250aedafc624fb7cc790141d1fc4b5f"
        ],
        [
            "extensionality a rho.",
            "VernacExtend",
            "cf2b93eeb18cc38bb99cd7364a743ba1d43a833e"
        ],
        [
            "destruct a; reflexivity.",
            "VernacExtend",
            "7fbe57a1b7de98163889837c4a347c7457bf77a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_eq_true : forall x y, true = Int.eq x y -> x = y.",
            "VernacStartTheoremProof",
            "a98372ec72e17cbd1dbb90745ae58190a843cf17"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (X := Int.eq_spec x y).",
            "VernacExtend",
            "16e6651e4f37a7e163f63bf019a173271a721fe6"
        ],
        [
            "rewrite <- H in X; congruence.",
            "VernacExtend",
            "1dcf82ead25f8e67cd994723e3d4d66116cba7be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition check_pp_int' e1 e2 op t e := match op with | Cop.Oeq | Cop.One => tc_andp' (tc_test_eq' e1 e2) (tc_bool (is_int_type t) (op_result_type e)) | Cop.Ole | Cop.Olt | Cop.Oge | Cop.Ogt => tc_andp' (tc_test_order' e1 e2) (tc_bool (is_int_type t) (op_result_type e)) | _ => tc_noproof end.",
            "VernacDefinition",
            "1e3d30e8d863dcce31d6f37f9633246eaf5bcdb5"
        ],
        [
            "Lemma tc_andp_TT2: forall e, tc_andp e tc_TT = e.",
            "VernacStartTheoremProof",
            "092c0a94bacbbc73db3201a3ea4c2736899d7c32"
        ],
        [
            "intros; unfold tc_andp.",
            "VernacExtend",
            "d82e7214442df2584da6a832f12c1e5b49394cb4"
        ],
        [
            "destruct e; reflexivity.",
            "VernacExtend",
            "b936eee5257e73f9a5a0f8feb1ce207f600658d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_andp_TT1: forall e, tc_andp tc_TT e = e.",
            "VernacStartTheoremProof",
            "3ea1977902af91f6607013d16d61ba1ddb1e211a"
        ],
        [
            "intros; unfold tc_andp; reflexivity.",
            "VernacExtend",
            "64ca008e9858be3338bb25ee8f03c1507d53237c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or_False: forall x, (x \\/ False) = x.",
            "VernacStartTheoremProof",
            "97faa274b1ce06ed91b76c588ae5e29670150ff7"
        ],
        [
            "intros; apply prop_ext; intuition.",
            "VernacExtend",
            "29f6b2585664c8346c506e0a0e40390db5d63839"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or_True: forall x, (x \\/ True) = True.",
            "VernacStartTheoremProof",
            "7e6edc5bad6d890355e83ad25144e0206ef504fc"
        ],
        [
            "intros; apply prop_ext; intuition.",
            "VernacExtend",
            "29f6b2585664c8346c506e0a0e40390db5d63839"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma True_or: forall x, (True \\/ x) = True.",
            "VernacStartTheoremProof",
            "8543743ed67ea9b5693d7549dc88463390e3523f"
        ],
        [
            "intros; apply prop_ext; intuition.",
            "VernacExtend",
            "29f6b2585664c8346c506e0a0e40390db5d63839"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma False_or: forall x, (False \\/ x) = x.",
            "VernacStartTheoremProof",
            "11871e296b238fc2dd86edd0228f8a4f283f1853"
        ],
        [
            "intros; apply prop_ext; intuition.",
            "VernacExtend",
            "29f6b2585664c8346c506e0a0e40390db5d63839"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_orp_sound : forall {CS: compspecs} a1 a2 rho m, denote_tc_assert (tc_orp a1 a2) rho m <-> denote_tc_assert (tc_orp' a1 a2) rho m.",
            "VernacStartTheoremProof",
            "be7182e3b15e2c5b251734bb16449d581b053d0b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold tc_orp.",
            "VernacExtend",
            "4238ada2f1521b072cd892dc95d56241a3965cf0"
        ],
        [
            "destruct a1; simpl; unfold_lift; repeat first [rewrite False_or | rewrite True_or | rewrite or_False | rewrite or_True]; try apply iff_refl; destruct a2; simpl in *; unfold_lift; repeat first [rewrite False_or | rewrite True_or | rewrite or_False | rewrite or_True]; try apply iff_refl.",
            "VernacExtend",
            "06d223c099ebc099bbf64801bcf04b6cfe7bd5b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_orp: forall {CS: compspecs} x y rho, denote_tc_assert (tc_orp x y) rho = orp (denote_tc_assert x rho) (denote_tc_assert y rho).",
            "VernacStartTheoremProof",
            "85a9850dcec3a7a792769fd8c2caff7c41741086"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext; intro m; rewrite tc_orp_sound; intro; assumption.",
            "VernacExtend",
            "8c6203dd84ac68766bf9975383b9f358154892c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_true_true: is_true true = True.",
            "VernacStartTheoremProof",
            "d17cf3227ebfe75358133cb4fca89a294a14c804"
        ],
        [
            "apply prop_ext; intuition.",
            "VernacExtend",
            "8a4224a6b11df295ba822165ed660bf644fc5d44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_true_false: is_true false = False.",
            "VernacStartTheoremProof",
            "910730b38b1c0f95a64364bc5c77158ab8d79377"
        ],
        [
            "apply prop_ext; intuition.",
            "VernacExtend",
            "8a4224a6b11df295ba822165ed660bf644fc5d44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_iszero: forall {CS: compspecs} e rho, denote_tc_assert (tc_iszero e) rho = match (eval_expr e rho) with | Vint i => prop (is_true (Int.eq i Int.zero)) | Vlong i => prop (is_true (Int64.eq i Int64.zero)) | _ => FF end.",
            "VernacStartTheoremProof",
            "03d02679a470f4b09c7397e30fa8556872ba7c8d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold tc_iszero.",
            "VernacExtend",
            "33b01bb0b6fd2f2a39e1f9bb2a32a570228834fb"
        ],
        [
            "destruct (eval_expr e any_environ) eqn:?; simpl; auto; rewrite (eval_expr_any rho e _ Heqv) by congruence.",
            "VernacExtend",
            "11532525e6240cbd41f32940b3cf8f8f17ab8724"
        ],
        [
            "destruct (Int.eq i Int.zero); reflexivity.",
            "VernacExtend",
            "9141fecec3162bf28e7932fa7a59ce22f3d08414"
        ],
        [
            "destruct (Int64.eq i Int64.zero); reflexivity.",
            "VernacExtend",
            "c2a9a307cc3cf6a4f01f0352e8d2ec75f7c5d23f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_iszero': forall {CS: compspecs} e, denote_tc_assert (tc_iszero e) = denote_tc_assert (tc_iszero' e).",
            "VernacStartTheoremProof",
            "c22c4b9be82f4311dd5adfd0cdab6545a4a2a72d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "rewrite denote_tc_assert_iszero.",
            "VernacExtend",
            "63ec9a3e7997c777a8d64328f6e9e280d9ffba13"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_nonzero: forall {CS: compspecs} e rho, denote_tc_assert (tc_nonzero e) rho = match (eval_expr e rho) with | Vint i => prop (i <> Int.zero) | Vlong i =>prop (i <> Int64.zero) | _ => FF end.",
            "VernacStartTheoremProof",
            "621182976990a7dd6cbf59d2df2eb883c09683a7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold tc_nonzero.",
            "VernacExtend",
            "6d6e8d57a6ad4f01b85a36f03186f95a34c5237a"
        ],
        [
            "destruct (eval_expr e any_environ) eqn:?; simpl; auto; try rewrite (eval_expr_any rho e _ Heqv) by congruence; unfold_lift.",
            "VernacExtend",
            "e305c18a4465cb5fa7ef062fee7d1d2f7640ef40"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (Int.eq i Int.zero) eqn:?; simpl; unfold_lift; unfold denote_tc_nonzero; simpl; rewrite ?(eval_expr_any rho e _ Heqv) by congruence; auto.",
            "VernacExtend",
            "71b5e884f1df5220a4f4dd23d343fb5a8a8963bb"
        ],
        [
            "apply pred_ext; auto; intros ? ? ?; subst; inv Heqb.",
            "VernacExtend",
            "49ad6ca1c23bb50dac430720e76e9ca6ee384494"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (Int64.eq i Int64.zero) eqn:?; simpl; unfold_lift; unfold denote_tc_nonzero; simpl; rewrite ?(eval_expr_any rho e _ Heqv) by congruence; auto.",
            "VernacExtend",
            "eeff4651f4c6a263159c6c7f633d8c507366bf6c"
        ],
        [
            "apply pred_ext; auto; intros ? ? ?; subst; inv Heqb.",
            "VernacExtend",
            "49ad6ca1c23bb50dac430720e76e9ca6ee384494"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_nonzero': forall {CS: compspecs} e, denote_tc_assert (tc_nonzero e) = denote_tc_assert (tc_nonzero' e).",
            "VernacStartTheoremProof",
            "039e70a3ff78b7b0e5f3fe66e5a8f207a506d92d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "rewrite denote_tc_assert_nonzero.",
            "VernacExtend",
            "35638cbc6b31654f9b77e66c97b8d8ca073d7948"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "destruct (eval_expr e rho); simpl; auto.",
            "VernacExtend",
            "ffb53c071b426953b643e26ea87cc2b9ce8a40a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_nodivover: forall {CS: compspecs} e1 e2 rho, denote_tc_assert (tc_nodivover e1 e2) rho = match eval_expr e1 rho, eval_expr e2 rho with | Vint n1, Vint n2 => prop (~(n1 = Int.repr Int.min_signed /\\ n2 = Int.mone)) | Vlong n1, Vlong n2 => prop (~(n1 = Int64.repr Int64.min_signed /\\ n2 = Int64.mone)) | Vint n1, Vlong n2 => TT | Vlong n1, Vint n2 => prop (~ (n1 = Int64.repr Int64.min_signed /\\ n2 = Int.mone)) | _ , _ => FF end.",
            "VernacStartTheoremProof",
            "d29e5c78d0369aebc9a102dc684eeeecd5309add"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold tc_nodivover.",
            "VernacExtend",
            "b67a8ae453cd6ad8dd436fc5a8dd8ebb28dd75e2"
        ],
        [
            "destruct (eval_expr e1 any_environ) eqn:?; destruct (eval_expr e2 any_environ) eqn:?; simpl; auto; rewrite (eval_expr_any rho e1 _ Heqv) by congruence; rewrite (eval_expr_any rho e2 _ Heqv0) by congruence; auto.",
            "VernacExtend",
            "648995470d45834087752e067c11f4bf1470ffe7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (negb (Int.eq i (Int.repr Int.min_signed) && Int.eq i0 Int.mone)) eqn:?.",
            "VernacExtend",
            "1351d76089d35172db94ac0eddbe4bbb34a02381"
        ],
        [
            "simpl; unfold_lift; apply pred_ext; auto; intros ? ? [? ?]; subst; inv Heqb.",
            "VernacExtend",
            "aa74f6597bb391cb09822cb782a70b5b1744a11a"
        ],
        [
            "simpl; unfold_lift; rewrite (eval_expr_any rho e1 _ Heqv) by congruence; rewrite (eval_expr_any rho e2 _ Heqv0) by congruence; reflexivity.",
            "VernacExtend",
            "7d04ccc93095e63e376737bf6b2ffa8a00f690d1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (negb (Int64.eq i (Int64.repr Int64.min_signed) && Int.eq i0 Int.mone)) eqn:?.",
            "VernacExtend",
            "8b8fd5865a453f1c4b4e8b868bb367a4f0e54600"
        ],
        [
            "simpl; unfold_lift; apply pred_ext; auto; intros ? ? [? ?]; subst; inv Heqb.",
            "VernacExtend",
            "aa74f6597bb391cb09822cb782a70b5b1744a11a"
        ],
        [
            "simpl; unfold_lift; rewrite (eval_expr_any rho e1 _ Heqv) by congruence; rewrite (eval_expr_any rho e2 _ Heqv0) by congruence; reflexivity.",
            "VernacExtend",
            "7d04ccc93095e63e376737bf6b2ffa8a00f690d1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (negb (Int64.eq i (Int64.repr Int64.min_signed) && Int64.eq i0 Int64.mone)) eqn:?.",
            "VernacExtend",
            "f8d0ba603d6e8985e829027f74b23efbdd424ab7"
        ],
        [
            "simpl; unfold_lift; apply pred_ext; auto; intros ? ? [? ?]; subst; inv Heqb.",
            "VernacExtend",
            "aa74f6597bb391cb09822cb782a70b5b1744a11a"
        ],
        [
            "simpl; unfold_lift; rewrite (eval_expr_any rho e1 _ Heqv) by congruence; rewrite (eval_expr_any rho e2 _ Heqv0) by congruence; reflexivity.",
            "VernacExtend",
            "7d04ccc93095e63e376737bf6b2ffa8a00f690d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_nodivover': forall {CS: compspecs} e1 e2, denote_tc_assert (tc_nodivover e1 e2) = denote_tc_assert (tc_nodivover' e1 e2).",
            "VernacStartTheoremProof",
            "e38ace42ed25386ffb8d8f2520da6231638138ec"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "rewrite denote_tc_assert_nodivover; reflexivity.",
            "VernacExtend",
            "907c7ec2eb375945fcf4109d93f975c8a9096754"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_andp'': forall {CS: compspecs} a b rho, denote_tc_assert (tc_andp' a b) rho = andp (denote_tc_assert a rho) (denote_tc_assert b rho).",
            "VernacStartTheoremProof",
            "7c1211bdee78fff2807c5211bbbe6846eb0b39b5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_orp'': forall {CS: compspecs} a b rho, denote_tc_assert (tc_orp' a b) rho = orp (denote_tc_assert a rho) (denote_tc_assert b rho).",
            "VernacStartTheoremProof",
            "e74976ed7e35d42506dd5855698e48d8c4cdf414"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_andp': forall {CS: compspecs} a b, denote_tc_assert (tc_andp a b) = denote_tc_assert (tc_andp' a b).",
            "VernacStartTheoremProof",
            "0733add75000fba9f23edabf85c799d446dab7f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "apply denote_tc_assert_andp.",
            "VernacExtend",
            "f5d53093f5c4b41daf03cc40230849a9de5d6280"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_orp': forall {CS: compspecs} a b, denote_tc_assert (tc_orp a b) = denote_tc_assert (tc_orp' a b).",
            "VernacStartTheoremProof",
            "c591d17f436c6b92a6083d55ae36ff4af1066c4e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality rho.",
            "VernacExtend",
            "a6182bb98d71ae2b51b3675429229ccd77d7161f"
        ],
        [
            "apply denote_tc_assert_orp.",
            "VernacExtend",
            "a425b04081773838368dcecc44a019fc7163344b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_test_eq': forall {CS: compspecs} a b, denote_tc_assert (tc_test_eq a b) = denote_tc_assert (tc_test_eq' a b).",
            "VernacStartTheoremProof",
            "506f94dcaeec2885db00a9df771b5e414fcd1539"
        ],
        [
            "intros; extensionality rho.",
            "VernacExtend",
            "876c9ddd2c67098fb113bf57fc855e1053ecc44d"
        ],
        [
            "unfold tc_test_eq.",
            "VernacExtend",
            "4bb8e3e3c08bf85e8434437bb6f841289a60b495"
        ],
        [
            "simpl; unfold_lift; unfold denote_tc_test_eq.",
            "VernacExtend",
            "b826c307e4f0209788578f718ac47f5baf9c41f6"
        ],
        [
            "destruct (Val.eq (eval_expr a any_environ) Vundef); [rewrite e; reflexivity | ].",
            "VernacExtend",
            "d7d2844c8e64c7d25afe7bb0fe0f42102b18bdd0"
        ],
        [
            "rewrite <- (eval_expr_any rho _ _ (eq_refl _) n).",
            "VernacExtend",
            "657f0f27e17e8cdf6118615d9956ccabdf5a5170"
        ],
        [
            "destruct (Val.eq (eval_expr b any_environ) Vundef).",
            "VernacExtend",
            "953cf3cfd98c30619868be70aa3452ace73c288e"
        ],
        [
            "rewrite e; destruct (eval_expr a rho) eqn:Ha; simpl; unfold_lift; rewrite Ha; reflexivity.",
            "VernacExtend",
            "1f5e6d9dc17b783f522fef42a8b38d75f4b44f74"
        ],
        [
            "rewrite <- (eval_expr_any rho _ _ (eq_refl _) n0).",
            "VernacExtend",
            "4972187f6b445f272c172d4a60299575180d8c62"
        ],
        [
            "clear n n0.",
            "VernacExtend",
            "a771a7909934b3797a700e77303a06ea95d0b30c"
        ],
        [
            "destruct (eval_expr a rho) eqn:Ha; simpl; unfold_lift; try rewrite Ha; try reflexivity; destruct (eval_expr b rho) eqn:Hb; simpl; unfold_lift; rewrite ?Ha, ?Hb; try reflexivity.",
            "VernacExtend",
            "4235ba0f638ad56a51b85f58f59e783db5dcef7a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct Archi.ptr64 eqn:Hp; simpl; unfold_lift.",
            "VernacExtend",
            "7eb2f12c79429ff77844af06838876cc94ae86a0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Ha,Hb; simpl; rewrite Hp; reflexivity.",
            "VernacExtend",
            "0d52adcb23c59cf865a18579cea19263061371d9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (Int.eq_spec i Int.zero); destruct (Int.eq i Int.zero).",
            "VernacExtend",
            "8a06e18756b39ae2745115f8eba6386e8bbc852f"
        ],
        [
            "pose proof (Int.eq_spec i0 Int.zero); destruct (Int.eq i0 Int.zero).",
            "VernacExtend",
            "8e8fae0e114871e6e1612e7511ef3ce49f78707a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite !prop_true_andp by auto.",
            "VernacExtend",
            "16dffcb05dc897a4b582d5abff676ed83ddb0974"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "unfold TT.",
            "VernacExtend",
            "51b11cf0d56b548a82411781b03fea5c883237db"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "apply prop_ext; intuition.",
            "VernacExtend",
            "8a4224a6b11df295ba822165ed660bf644fc5d44"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "rewrite Ha,Hb.",
            "VernacExtend",
            "c409b7ebaf6ac5df01c7e8a9540a5d286e983fb0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "rewrite Ha,Hb.",
            "VernacExtend",
            "c409b7ebaf6ac5df01c7e8a9540a5d286e983fb0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct Archi.ptr64 eqn:Hp; simpl; unfold_lift.",
            "VernacExtend",
            "7eb2f12c79429ff77844af06838876cc94ae86a0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (Int64.eq_spec i Int64.zero); destruct (Int64.eq i Int64.zero).",
            "VernacExtend",
            "b08200ee1ebccb5e075a86739a614ec1f9927606"
        ],
        [
            "pose proof (Int64.eq_spec i0 Int64.zero); destruct (Int64.eq i0 Int64.zero).",
            "VernacExtend",
            "e7c3cdb68d465ef2e6c8022dca5a9b3326463a03"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite !prop_true_andp by auto.",
            "VernacExtend",
            "16dffcb05dc897a4b582d5abff676ed83ddb0974"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "unfold TT.",
            "VernacExtend",
            "51b11cf0d56b548a82411781b03fea5c883237db"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "apply prop_ext; intuition.",
            "VernacExtend",
            "8a4224a6b11df295ba822165ed660bf644fc5d44"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "rewrite Ha,Hb.",
            "VernacExtend",
            "c409b7ebaf6ac5df01c7e8a9540a5d286e983fb0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "rewrite Ha,Hb.",
            "VernacExtend",
            "c409b7ebaf6ac5df01c7e8a9540a5d286e983fb0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Ha,Hb; simpl; rewrite Hp; reflexivity.",
            "VernacExtend",
            "0d52adcb23c59cf865a18579cea19263061371d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert_test_order': forall {CS: compspecs} a b, denote_tc_assert (tc_test_order a b) = denote_tc_assert (tc_test_order' a b).",
            "VernacStartTheoremProof",
            "5a7081c282bf1a96b7f42d156fa8d768efa3cfbe"
        ],
        [
            "intros; extensionality rho.",
            "VernacExtend",
            "876c9ddd2c67098fb113bf57fc855e1053ecc44d"
        ],
        [
            "unfold tc_test_order.",
            "VernacExtend",
            "4ed94b21b94604bfe286b58411b303f5b1d4ca25"
        ],
        [
            "simpl; unfold_lift; unfold denote_tc_test_order.",
            "VernacExtend",
            "397a7ccddab1da6b3c29e79e91545dbbc479aac1"
        ],
        [
            "destruct (eval_expr a rho) eqn:Ha; destruct (eval_expr a any_environ) eqn:Ha'; simpl; unfold_lift; unfold denote_tc_test_order; rewrite ?Ha, ?Ha'; simpl; auto; try solve [ rewrite (eval_expr_any rho a _ Ha') in Ha by congruence; inv Ha]; destruct (eval_expr b rho) eqn:Hb; destruct (eval_expr b any_environ) eqn:Hb'; simpl; unfold_lift; unfold denote_tc_test_eq; rewrite ?Ha, ?Ha', ?Hb, ?Hb'; simpl; auto; rewrite (eval_expr_any rho b _ Hb') in Hb by congruence; inv Hb; rewrite (eval_expr_any rho a _ Ha') in Ha by congruence; inv Ha.",
            "VernacExtend",
            "8169f4bab3f56d190779060897fe25259ac5cef1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct Archi.ptr64 eqn:Hp.",
            "VernacExtend",
            "ddbeb08cfda8118e447ce468b630e255ec886676"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "rewrite (eval_expr_any rho b _ Hb') by congruence; rewrite (eval_expr_any rho a _ Ha') by congruence.",
            "VernacExtend",
            "5c4e5703a483af2ed0f15ad9b4e91a9a112e8b5b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (Int.eq_dec i Int.zero).",
            "VernacExtend",
            "52edb48e612426baaf834faaef56d88e25a339fc"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite Int.eq_true.",
            "VernacExtend",
            "8d739d79dd8bd6b8bad59fd0bfa7dafc3cfbdc0c"
        ],
        [
            "destruct (Int.eq_dec i1 Int.zero).",
            "VernacExtend",
            "46c0868881d7e195f1bbbbd5e501b549a9fcdba8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite Int.eq_true.",
            "VernacExtend",
            "8d739d79dd8bd6b8bad59fd0bfa7dafc3cfbdc0c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite !prop_true_andp by auto.",
            "VernacExtend",
            "16dffcb05dc897a4b582d5abff676ed83ddb0974"
        ],
        [
            "super_unfold_lift.",
            "VernacExtend",
            "f74399a7d6c2e3b20cb175917085c1b87ddc843e"
        ],
        [
            "unfold TT.",
            "VernacExtend",
            "51b11cf0d56b548a82411781b03fea5c883237db"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply prop_ext; intuition.",
            "VernacExtend",
            "8a4224a6b11df295ba822165ed660bf644fc5d44"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Int.eq_false by auto.",
            "VernacExtend",
            "d5949d6db4296fa66949b81eab1d07677697c4ee"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl; unfold_lift; unfold denote_tc_test_eq.",
            "VernacExtend",
            "b826c307e4f0209788578f718ac47f5baf9c41f6"
        ],
        [
            "rewrite (eval_expr_any rho a _ Ha') by congruence.",
            "VernacExtend",
            "1847412480b3eb18e4f9c653db9da9b404c7cd15"
        ],
        [
            "rewrite (eval_expr_any rho _ _ Hb') by congruence.",
            "VernacExtend",
            "58a468da9c5674611afdd5816ecb1893f8bc9c73"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Int.eq_false by auto.",
            "VernacExtend",
            "d5949d6db4296fa66949b81eab1d07677697c4ee"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl; unfold_lift; unfold denote_tc_test_eq.",
            "VernacExtend",
            "b826c307e4f0209788578f718ac47f5baf9c41f6"
        ],
        [
            "rewrite (eval_expr_any rho a _ Ha') by congruence.",
            "VernacExtend",
            "1847412480b3eb18e4f9c653db9da9b404c7cd15"
        ],
        [
            "rewrite (eval_expr_any rho _ _ Hb') by congruence.",
            "VernacExtend",
            "58a468da9c5674611afdd5816ecb1893f8bc9c73"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct Archi.ptr64 eqn:Hp.",
            "VernacExtend",
            "ddbeb08cfda8118e447ce468b630e255ec886676"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (Int64.eq_dec i Int64.zero).",
            "VernacExtend",
            "eecdd462f945809b0c0d9914cdcd39a0aa40cdc1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite Int64.eq_true.",
            "VernacExtend",
            "8cead271a0856a262b888c89c5d66dc76f21587b"
        ],
        [
            "destruct (Int64.eq_dec i1 Int64.zero).",
            "VernacExtend",
            "03c9ba99001a31e5cf7221749fb8062ae6cbb92f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite Int64.eq_true.",
            "VernacExtend",
            "8cead271a0856a262b888c89c5d66dc76f21587b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite !prop_true_andp by auto.",
            "VernacExtend",
            "16dffcb05dc897a4b582d5abff676ed83ddb0974"
        ],
        [
            "super_unfold_lift.",
            "VernacExtend",
            "f74399a7d6c2e3b20cb175917085c1b87ddc843e"
        ],
        [
            "unfold TT.",
            "VernacExtend",
            "51b11cf0d56b548a82411781b03fea5c883237db"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply prop_ext; intuition.",
            "VernacExtend",
            "8a4224a6b11df295ba822165ed660bf644fc5d44"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Int64.eq_false by auto.",
            "VernacExtend",
            "e70d1ffd2c78c1f4b62df8c3a9100e8d47c25e65"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl; unfold_lift; unfold denote_tc_test_eq.",
            "VernacExtend",
            "b826c307e4f0209788578f718ac47f5baf9c41f6"
        ],
        [
            "rewrite (eval_expr_any rho a _ Ha') by congruence.",
            "VernacExtend",
            "1847412480b3eb18e4f9c653db9da9b404c7cd15"
        ],
        [
            "rewrite (eval_expr_any rho _ _ Hb') by congruence.",
            "VernacExtend",
            "58a468da9c5674611afdd5816ecb1893f8bc9c73"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Int64.eq_false by auto.",
            "VernacExtend",
            "e70d1ffd2c78c1f4b62df8c3a9100e8d47c25e65"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl; unfold_lift; unfold denote_tc_test_eq.",
            "VernacExtend",
            "b826c307e4f0209788578f718ac47f5baf9c41f6"
        ],
        [
            "rewrite (eval_expr_any rho a _ Ha') by congruence.",
            "VernacExtend",
            "1847412480b3eb18e4f9c653db9da9b404c7cd15"
        ],
        [
            "rewrite (eval_expr_any rho _ _ Hb') by congruence.",
            "VernacExtend",
            "58a468da9c5674611afdd5816ecb1893f8bc9c73"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold_lift.",
            "VernacExtend",
            "49cc678292f20068718dd6f7d6f838fc96506b4c"
        ],
        [
            "rewrite (eval_expr_any rho b _ Hb') by congruence; rewrite (eval_expr_any rho a _ Ha') by congruence.",
            "VernacExtend",
            "5c4e5703a483af2ed0f15ad9b4e91a9a112e8b5b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite @denote_tc_assert_andp' @denote_tc_assert_andp'' @denote_tc_assert_orp' @denote_tc_assert_orp'' @denote_tc_assert_iszero' @denote_tc_assert_nonzero' @denote_tc_assert_nodivover' @denote_tc_assert_ilt' @denote_tc_assert_llt' @denote_tc_assert_test_eq' @denote_tc_assert_test_order' : dtca.",
            "VernacExtend",
            "70c12d207f025dc5ade9cb2589a71b2d9979d2da"
        ],
        [
            "Ltac dtca := autorewrite with dtca; auto.",
            "VernacExtend",
            "977b2db1b99f275add48c910ad0dc15d9dc9e5a0"
        ],
        [
            "Definition stupid_typeconv ty := match ty with | Tarray t _ a => Tpointer t a | Tfunction _ _ _ => Tpointer ty noattr | Tint _ _ _ => typeconv ty | _ => ty end.",
            "VernacDefinition",
            "67f08d56c75b490279bf763728513e318b4d9a71"
        ],
        [
            "Definition classify_sub' ty1 ty2 := match stupid_typeconv ty1 with | Tpointer ty a => match stupid_typeconv ty2 with | Tint _ si _ => sub_case_pi ty si | Tlong _ _ => sub_case_pl ty | Tpointer _ _ => sub_case_pp ty | _ => sub_default end | _ => sub_default end.",
            "VernacDefinition",
            "4d4873dd4fd8f2e62638e924658b44ec18609ef3"
        ],
        [
            "Lemma classify_sub_eq : classify_sub = classify_sub'.",
            "VernacStartTheoremProof",
            "e027bb3357a8fdcc2a76572ff8fe68547d4534f1"
        ],
        [
            "unfold classify_sub, classify_sub'; extensionality t1 t2.",
            "VernacExtend",
            "c818633dd129308d42fd1620fda1929fe3bccd67"
        ],
        [
            "destruct t1, t2; simpl; auto; try destruct i,s; auto; try destruct i0,s0; auto.",
            "VernacExtend",
            "45d5c1525d106f9c62d431feaab0f470e1250a87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition classify_cmp' ty1 ty2 := match stupid_typeconv ty1, stupid_typeconv ty2 with | Tpointer _ _ , Tpointer _ _ => cmp_case_pp | Tpointer _ _ , Tint _ si _ => cmp_case_pi si | Tint _ si _, Tpointer _ _ => cmp_case_ip si | Tpointer _ _ , Tlong _ _ => cmp_case_pl | Tlong _ _ , Tpointer _ _ => cmp_case_lp | _, _ => cmp_default end.",
            "VernacDefinition",
            "3cd10ef5b5678061ede81cea5bbec363d777a47f"
        ],
        [
            "Lemma classify_cmp_eq: classify_cmp = classify_cmp'.",
            "VernacStartTheoremProof",
            "7f9eecd05073504cd3110b0e388282bb67727e10"
        ],
        [
            "unfold classify_cmp, classify_cmp'; extensionality t1 t2.",
            "VernacExtend",
            "7a1d54092ca8f6c61c18782efdc566f22c622d31"
        ],
        [
            "destruct t1,t2; simpl; auto; try destruct i,s; auto; try destruct i0,s0; auto.",
            "VernacExtend",
            "45d5c1525d106f9c62d431feaab0f470e1250a87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition classify_add' ty1 ty2 := match stupid_typeconv ty1 with | Tint _ si _ => match stupid_typeconv ty2 with | Tpointer ty a => add_case_ip si ty | _ => add_default end | Tlong _ _ => match stupid_typeconv ty2 with | Tpointer ty a => add_case_lp ty | _ => add_default end | Tpointer ty a => match stupid_typeconv ty2 with | Tint _ si _ => add_case_pi ty si | Tlong _ _ => add_case_pl ty | _ => add_default end | _ => add_default end.",
            "VernacDefinition",
            "1560e2c88ec634ade0fef7a4b73554407ad51684"
        ],
        [
            "Lemma classify_add_eq: classify_add = classify_add'.",
            "VernacStartTheoremProof",
            "a85bc478049fcf57f28c81e6fb4653c3a0793f84"
        ],
        [
            "unfold classify_add; extensionality t1 t2.",
            "VernacExtend",
            "2a696bc4c93ec299f499a558cd289ccba975506a"
        ],
        [
            "destruct t1,t2; simpl; auto; try destruct i,s; auto; try destruct i0,s0; auto.",
            "VernacExtend",
            "45d5c1525d106f9c62d431feaab0f470e1250a87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition classify_shift' (ty1: type) (ty2: type) := match stupid_typeconv ty1, stupid_typeconv ty2 with | Tint sz sg _, Tint _ _ _ => shift_case_ii match sz, sg with | I32, Unsigned => Unsigned | _, _ => Signed end | Tint sz sg _, Tlong _ _ => shift_case_il match sz, sg with | I32, Unsigned => Unsigned | _, _ => Signed end | Tlong s _, Tint _ _ _ => shift_case_li s | Tlong s _, Tlong _ _ => shift_case_ll s | _,_ => shift_default end.",
            "VernacDefinition",
            "312ca0ebb53888a0cbb3baa5048f41f0045c705d"
        ],
        [
            "Lemma classify_shift_eq: classify_shift = classify_shift'.",
            "VernacStartTheoremProof",
            "da5232486708af89c8890cfdf1e7c975da4f3118"
        ],
        [
            "unfold classify_shift; extensionality t1 t2.",
            "VernacExtend",
            "6c5c2b5d7457aa853999b4cc0531119f60e6631c"
        ],
        [
            "destruct t1,t2; simpl; auto; try destruct i,s; auto; try destruct i0,s0; auto.",
            "VernacExtend",
            "45d5c1525d106f9c62d431feaab0f470e1250a87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition classify_binarith' (ty1: type) (ty2: type) := match stupid_typeconv ty1, stupid_typeconv ty2 with | Tint i1 s1 _, Tint i2 s2 _ => bin_case_i match i1, s1, i2, s2 with | I32, Unsigned, _, _ => Unsigned | _, _, I32, Unsigned => Unsigned | _, _, _, _ => Signed end | Tint _ _ _, Tlong s _ => bin_case_l s | Tlong s _, Tint _ _ _ => bin_case_l s | Tlong s1 _, Tlong s2 _ => bin_case_l match s1, s2 with | Signed, Signed => Signed | _, _ => Unsigned end | Tfloat F32 _, Tfloat F32 _ => bin_case_s | Tfloat _ _, Tfloat _ _ => bin_case_f | Tfloat F64 _, (Tint _ _ _ | Tlong _ _) => bin_case_f | (Tint _ _ _ | Tlong _ _), Tfloat F64 _ => bin_case_f | Tfloat F32 _, (Tint _ _ _ | Tlong _ _) => bin_case_s | (Tint _ _ _ | Tlong _ _), Tfloat F32 _ => bin_case_s | _, _ => bin_default end.",
            "VernacDefinition",
            "1c4c33f1f2b434be93df6ddc05a0b589406a56da"
        ],
        [
            "Definition binarithType' t1 t2 ty deferr reterr : tc_assert := match classify_binarith' t1 t2 with | Cop.bin_case_i sg => tc_bool (is_int32_type ty) reterr | Cop.bin_case_l sg => tc_bool (is_long_type ty) reterr | Cop.bin_case_f => tc_bool (is_float_type ty) reterr | Cop.bin_case_s => tc_bool (is_single_type ty) reterr | Cop.bin_default => tc_FF deferr end.",
            "VernacDefinition",
            "867483d79747d8a96215698836dbfda638f740e1"
        ],
        [
            "Lemma classify_binarith_eq: classify_binarith = classify_binarith'.",
            "VernacStartTheoremProof",
            "3d7c8b5eeb8aca885f4a7969ef2d0f48da306683"
        ],
        [
            "unfold classify_binarith; extensionality t1 t2.",
            "VernacExtend",
            "3bd1b23768c18e2bcbf401c1d503a8183dcbaf08"
        ],
        [
            "destruct t1,t2; simpl; auto; try destruct i,s; auto; try destruct i0,s0; auto; try destruct s; auto; try destruct s0; auto.",
            "VernacExtend",
            "282f5402ee0cb683ce39e0024255369667ba0d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma binarithType_eq: binarithType = binarithType'.",
            "VernacStartTheoremProof",
            "8d4592ddb3e9927e97c6ea53cf462885fd9969dd"
        ],
        [
            "unfold binarithType, binarithType'; extensionality t1 t2 ty e1 e2.",
            "VernacExtend",
            "7fccb8834b1f0bd432bc34d9c8db4cf878e8c318"
        ],
        [
            "rewrite classify_binarith_eq.",
            "VernacExtend",
            "3235fa99c228c279afc2f3ba463b86c2fc234879"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma den_isBinOpR: forall {CS: compspecs} op a1 a2 ty, denote_tc_assert (isBinOpResultType op a1 a2 ty) = let e := (Ebinop op a1 a2 ty) in let reterr := op_result_type e in let deferr := arg_type e in denote_tc_assert match op with | Cop.Oadd => match classify_add' (typeof a1) (typeof a2) with | Cop.add_case_pi t _ => tc_andp' (tc_andp' (tc_andp' (tc_isptr a1) (tc_bool (complete_type cenv_cs t) reterr)) (tc_int_or_ptr_type (typeof a1))) (tc_bool (is_pointer_type ty) reterr) | Cop.add_case_ip _ t => tc_andp' (tc_andp' (tc_andp' (tc_isptr a2) (tc_bool (complete_type cenv_cs t) reterr)) (tc_int_or_ptr_type (typeof a2))) (tc_bool (is_pointer_type ty) reterr) | Cop.add_case_pl t => tc_andp' (tc_andp' (tc_andp' (tc_isptr a1) (tc_bool (complete_type cenv_cs t) reterr)) (tc_int_or_ptr_type (typeof a1))) (tc_bool (is_pointer_type ty) reterr) | Cop.add_case_lp t => tc_andp' (tc_andp' (tc_andp' (tc_isptr a2) (tc_bool (complete_type cenv_cs t) reterr)) (tc_int_or_ptr_type (typeof a2))) (tc_bool (is_pointer_type ty) reterr) | Cop.add_default => tc_andp (binarithType' (typeof a1) (typeof a2) ty deferr reterr) (tc_nobinover Z.add a1 a2) end | Cop.Osub => match classify_sub' (typeof a1) (typeof a2) with | Cop.sub_case_pi t _ => tc_andp' (tc_andp' (tc_andp' (tc_isptr a1) (tc_bool (complete_type cenv_cs t) reterr)) (tc_int_or_ptr_type (typeof a1))) (tc_bool (is_pointer_type ty) reterr) | Cop.sub_case_pl t => tc_andp' (tc_andp' (tc_andp' (tc_isptr a1) (tc_bool (complete_type cenv_cs t) reterr)) (tc_int_or_ptr_type (typeof a1))) (tc_bool (is_pointer_type ty) reterr) | Cop.sub_case_pp t => tc_andp' (tc_andp' (tc_andp' (tc_andp' (tc_andp' (tc_andp' (tc_andp' (tc_andp' (tc_samebase a1 a2) (tc_isptr a1)) (tc_isptr a2)) (tc_int_or_ptr_type (typeof a1))) (tc_int_or_ptr_type (typeof a2))) (tc_bool (is_ptrofs_type ty) reterr)) (tc_bool (negb (Z.eqb (sizeof t) 0)) (pp_compare_size_0 t))) (tc_bool (complete_type cenv_cs t) reterr)) (tc_bool (Z.leb (sizeof t) Ptrofs.max_signed) (pp_compare_size_exceed t)) | Cop.sub_default => tc_andp (binarithType' (typeof a1) (typeof a2) ty deferr reterr) (tc_nobinover Z.sub a1 a2) end | Cop.Omul => tc_andp (binarithType' (typeof a1) (typeof a2) ty deferr reterr) (tc_nobinover Z.mul a1 a2) | Cop.Omod => match classify_binarith' (typeof a1) (typeof a2) with | Cop.bin_case_i Unsigned => tc_andp' (tc_nonzero' a2) (tc_bool (is_int32_type ty) reterr) | Cop.bin_case_l Unsigned => tc_andp' (tc_nonzero' a2) (tc_bool (is_long_type ty) reterr) | Cop.bin_case_i Signed => tc_andp' (tc_andp' (tc_nonzero' a2) (tc_nodivover' a1 a2)) (tc_bool (is_int32_type ty) reterr) | Cop.bin_case_l Signed => tc_andp' (tc_andp' (tc_nonzero' a2) (tc_nodivover' a1 a2)) (tc_bool (is_long_type ty) reterr) | _ => tc_FF deferr end | Cop.Odiv => match classify_binarith' (typeof a1) (typeof a2) with | Cop.bin_case_i Unsigned => tc_andp' (tc_nonzero' a2) (tc_bool (is_int32_type ty) reterr) | Cop.bin_case_l Unsigned => tc_andp' (tc_nonzero' a2) (tc_bool (is_long_type ty) reterr) | Cop.bin_case_i Signed => tc_andp' (tc_andp' (tc_nonzero' a2) (tc_nodivover' a1 a2)) (tc_bool (is_int32_type ty) reterr) | Cop.bin_case_l Signed => tc_andp' (tc_andp' (tc_nonzero' a2) (tc_nodivover' a1 a2)) (tc_bool (is_long_type ty) reterr) | Cop.bin_case_f => tc_bool (is_float_type ty) reterr | Cop.bin_case_s => tc_bool (is_single_type ty) reterr | Cop.bin_default => tc_FF deferr end | Cop.Oshl | Cop.Oshr => match classify_shift' (typeof a1) (typeof a2) with | Cop.shift_case_ii _ => tc_andp' (tc_ilt' a2 Int.iwordsize) (tc_bool (is_int32_type ty) reterr) | Cop.shift_case_il _ => tc_andp' (tc_llt' a2 (Int64.repr 32)) (tc_bool (is_int32_type ty) reterr) | Cop.shift_case_li _ => tc_andp' (tc_ilt' a2 Int64.iwordsize') (tc_bool (is_long_type ty) reterr) | Cop.shift_case_ll _ => tc_andp' (tc_llt' a2 Int64.iwordsize) (tc_bool (is_long_type ty) reterr) | _ => tc_FF deferr end | Cop.Oand | Cop.Oor | Cop.Oxor => match classify_binarith' (typeof a1) (typeof a2) with | Cop.bin_case_i _ =>tc_bool (is_int32_type ty) reterr | Cop.bin_case_l _ =>tc_bool (is_long_type ty) reterr | Cop.bin_case_f => tc_FF deferr | Cop.bin_case_s => tc_FF deferr | Cop.bin_default => tc_FF deferr end | Cop.Oeq | Cop.One | Cop.Olt | Cop.Ogt | Cop.Ole | Cop.Oge => match classify_cmp' (typeof a1) (typeof a2) with | Cop.cmp_default => tc_bool (is_numeric_type (typeof a1) && is_numeric_type (typeof a2) && is_int_type ty) deferr | Cop.cmp_case_pp => tc_andp' (tc_andp' (tc_int_or_ptr_type (typeof a1)) (tc_int_or_ptr_type (typeof a2))) (check_pp_int' a1 a2 op ty e) | Cop.cmp_case_pi si => tc_andp' (tc_int_or_ptr_type (typeof a1)) (check_pp_int' a1 (Ecast a2 size_t) op ty e) | Cop.cmp_case_ip si => tc_andp' (tc_int_or_ptr_type (typeof a2)) (check_pp_int' (Ecast a1 size_t) a2 op ty e) | Cop.cmp_case_pl => tc_andp' (tc_int_or_ptr_type (typeof a1)) (check_pp_int' a1 (Ecast a2 size_t) op ty e) | Cop.cmp_case_lp => tc_andp' (tc_int_or_ptr_type (typeof a2)) (check_pp_int' (Ecast a1 size_t) a2 op ty e) end end.",
            "VernacStartTheoremProof",
            "11a0ce36e49a4d63c843b1561c2d1ea86a673f24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- classify_add_eq.",
            "VernacExtend",
            "09bfc1c275e92f33370e21a8e92c0a963d57816d"
        ],
        [
            "rewrite <- classify_sub_eq.",
            "VernacExtend",
            "0884ffc8f4775283d5090cba1cb15d04ee491625"
        ],
        [
            "rewrite <- classify_shift_eq.",
            "VernacExtend",
            "96bf6ed8273632892b727a10b1b53a5dc8d068b5"
        ],
        [
            "rewrite <- classify_cmp_eq.",
            "VernacExtend",
            "06593e14f870aeeb321a98852bbc768414346d3e"
        ],
        [
            "rewrite <- classify_binarith_eq.",
            "VernacExtend",
            "5475c92c91031427dbc5df8c7e31fe868e6faa35"
        ],
        [
            "rewrite <- binarithType_eq.",
            "VernacExtend",
            "45581bb52e56b690ad02cb5386636f1cda62db93"
        ],
        [
            "unfold isBinOpResultType, classify_add, classify_sub, classify_binarith, classify_shift, classify_cmp, check_pp_int, check_pp_int', typeconv, remove_attributes, change_attributes; destruct op; dtca; extensionality rho; destruct (typeof a1) as [ | [ | | | ] [ | ] ? | [ | ] ? | [ | ] ? | | | | | ]; dtca; destruct (typeof a2) as [ | [ | | | ] [ | ] ? | [ | ] ? | [ | ] ? | | | | | ]; dtca.",
            "VernacExtend",
            "09ca6361dabaf105200adcc0682133aa83ad565a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_assert'_andp'_e: forall {CS: compspecs} a b rho m, denote_tc_assert' (tc_andp' a b) rho m -> denote_tc_assert' a rho m /\\ denote_tc_assert' b rho m.",
            "VernacStartTheoremProof",
            "672e5a67b50cc59908e56e1ece4507456f00d385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite denote_tc_assert'_eq in *.",
            "VernacExtend",
            "aa7dd99c992894f11d79a26f4ef68ae0d7766ff1"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cast_int_long_nonzero: forall s i, Int.eq i Int.zero = false -> Int64.eq (cast_int_long s i) Int64.zero = false.",
            "VernacStartTheoremProof",
            "f79d1d3205d3c4184b67cfd5da9c512065d6d500"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.eq_spec i Int.zero).",
            "VernacExtend",
            "3b2106a3bbae9a09bba923f16dd640fd9f692110"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "rewrite Int64.eq_false; auto.",
            "VernacExtend",
            "3679fbe6c859c4fd5267b5b2f639b9f4f2fed833"
        ],
        [
            "unfold cast_int_long.",
            "VernacExtend",
            "d0fbedfaf1c46f67bcff08be72a7393847fdb0bb"
        ],
        [
            "contradict H0.",
            "VernacExtend",
            "e9276d92c17ea182f1ef13aa74464b33eea923d9"
        ],
        [
            "unfold Int64.zero in H0.",
            "VernacExtend",
            "684b8f38f10493e4bb6a7ca855eb867bee19827d"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "assert (Int64.signed (Int64.repr (Int.signed i)) = Int64.signed (Int64.repr 0)) by (f_equal; auto).",
            "VernacExtend",
            "660664d48cf4c43bfba508ae7fedd7a4536db807"
        ],
        [
            "rewrite Int64.signed_repr in H.",
            "VernacExtend",
            "1a10e017de2907ef4750b3a3bfe79324e0bede6c"
        ],
        [
            "rewrite Int64.signed_repr in H.",
            "VernacExtend",
            "1a10e017de2907ef4750b3a3bfe79324e0bede6c"
        ],
        [
            "rewrite <- (Int.repr_signed i).",
            "VernacExtend",
            "58865f3753a075ce3387e2d56907cbd92515e439"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "pose proof (Int64.signed_range Int64.zero).",
            "VernacExtend",
            "29154258cbf4afa6bb112ef6fbc036ee78bb5689"
        ],
        [
            "rewrite Int64.signed_zero in H1.",
            "VernacExtend",
            "afb94f0449d967e724762ef9102699e7d8f5f090"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "pose proof (Int.signed_range i).",
            "VernacExtend",
            "dfeaa40ebd710d23cf2d404288929fc34638b6d5"
        ],
        [
            "clear - H1.",
            "VernacExtend",
            "a97560cbbe2cd31ef128e29a3cf251870622f56a"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Z.le_trans with Int.min_signed; auto.",
            "VernacExtend",
            "e7063a53e1c0e77addad88e9aac4fbc7bcf275fb"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "apply Z.le_trans with Int.max_signed; auto.",
            "VernacExtend",
            "545083ef57db4400d68f486ce23291f790618be8"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "assert (Int64.unsigned (Int64.repr (Int.unsigned i)) = Int64.unsigned (Int64.repr 0)) by (f_equal; auto).",
            "VernacExtend",
            "50cbc4d3a841a6cf8900e46ee2d8a21dd2a69e66"
        ],
        [
            "rewrite Int64.unsigned_repr in H.",
            "VernacExtend",
            "82f5825f2b9d21841bbdcf4becf4e8486c48f8e1"
        ],
        [
            "rewrite Int64.unsigned_repr in H.",
            "VernacExtend",
            "82f5825f2b9d21841bbdcf4becf4e8486c48f8e1"
        ],
        [
            "rewrite <- (Int.repr_unsigned i).",
            "VernacExtend",
            "2c5606931407d1321e14855ad7036622fefd27ca"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "split; compute; congruence.",
            "VernacExtend",
            "a66896a3eebf884657a87b63af6dc274a3ce1b39"
        ],
        [
            "pose proof (Int.unsigned_range i).",
            "VernacExtend",
            "c3a9e19e3d86215533851fab70582d6c3a47266e"
        ],
        [
            "clear - H1.",
            "VernacExtend",
            "a97560cbbe2cd31ef128e29a3cf251870622f56a"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "unfold Int64.max_unsigned.",
            "VernacExtend",
            "972eb9a40f51d24a1eb5af2883a7df6b5ca86927"
        ],
        [
            "apply Z.le_trans with Int.modulus.",
            "VernacExtend",
            "b3dec4b15270a443cdddb1f623a47bc020ba8614"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition tc_numeric_val (v: val) (t: type) : Prop := match v,t with | Vint _, Tint _ _ _ => True | Vlong _, Tlong _ _ => True | Vfloat _, Tfloat F64 _ => True | _, _ => False end.",
            "VernacDefinition",
            "c1919fc9e07269b638982468e0842911e363ed10"
        ],
        [
            "Lemma tc_val_of_bool: forall x i3 s3 a3, tc_val (Tint i3 s3 a3) (Val.of_bool x).",
            "VernacStartTheoremProof",
            "5b0ded279818858f48a3835c424c9d8b32a0934e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x, i3,s3; simpl; try split; auto; rewrite <- Z.leb_le; reflexivity.",
            "VernacExtend",
            "0acafc2f4763f267a6a20b6d3b05de5c64c7f73e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_val_sem_cmp: forall op v1 t1 v2 t2 i3 s3 a3, tc_numeric_val v1 t1 -> tc_numeric_val v2 t2 -> tc_val (Tint i3 s3 a3) (force_val (Clight_Cop2.sem_cmp op t1 t2 v1 v2)).",
            "VernacStartTheoremProof",
            "19ceab2caa2b6b3466553dcd248f1d51dfcbd307"
        ],
        [
            "Opaque tc_val.",
            "VernacSetOpacity",
            "84219b4e50ac5f24a4372e0ddd0b2c81cf4c0b2b"
        ],
        [
            "destruct op; intros; destruct v1; destruct t1 as [ | [ | | | ] [ | ] ? | [ | ] ? | [ | ] ? | | | | | ]; try contradiction H; destruct v2; destruct t2 as [ | [ | | | ] [ | ] ? | [ | ] ? | [ | ] ? | | | | | ]; try contradiction H0; unfold Clight_Cop2.sem_cmp, classify_cmp, typeconv, Clight_Cop2.sem_binarith, Clight_Cop2.sem_cast, classify_cast; simpl; try apply tc_val_of_bool.",
            "VernacExtend",
            "9339ff0e86baa16c325bb2c2d6abd9c15f847a24"
        ],
        [
            "Transparent tc_val.",
            "VernacSetOpacity",
            "c568dfdfd7ed9818d0e2ceb2cf393e76daec4d8b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_val'_sem_cmp_pp: forall cmp v1 v2 v i s a, sem_cmp_pp cmp v1 v2 = Some v -> tc_val' (Tint i s a) v.",
            "VernacStartTheoremProof",
            "b34df757e38cf9dbcd4915d45bb22c1ff9e3d173"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sem_cmp_pp, option_map in H.",
            "VernacExtend",
            "bf4b734b8b465a05452f26efecbf7194f6824f6f"
        ],
        [
            "forget (if Archi.ptr64 then Val.cmplu_bool true2 cmp v1 v2 else Val.cmpu_bool true2 cmp v1 v2) as v0.",
            "VernacExtend",
            "f7b2fe4a4631e754fcc86d64f9de05c141d1c5dd"
        ],
        [
            "destruct v0; inv H.",
            "VernacExtend",
            "0671dbe18d34475b22fdc69abef324db1f63141e"
        ],
        [
            "intros _; apply tc_val_of_bool.",
            "VernacExtend",
            "1d45d2f6e0ffc262898f24797dec9cb4332a0a6b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_val'_sem_cmp: forall cmp t v1 v2 t1 t2, is_int_type t = true -> tc_val' t (force_val2 (Clight_Cop2.sem_cmp cmp t1 t2) v1 v2).",
            "VernacStartTheoremProof",
            "a158709eefeb90f3ba1b06a484ed2abf2d8527a9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct t; inv H.",
            "VernacExtend",
            "861954a6641a01327f24c810a6baf183225e136a"
        ],
        [
            "unfold force_val2, force_val.",
            "VernacExtend",
            "4d6f754d6c345a1ad6c32b108eec3ca5bfd303a2"
        ],
        [
            "destruct (Clight_Cop2.sem_cmp cmp t1 t2 v1 v2) eqn:?H; [| intros ?; congruence].",
            "VernacExtend",
            "df7288ec4393c795958c8b96b8e26502a79bd77f"
        ],
        [
            "unfold Clight_Cop2.sem_cmp in H.",
            "VernacExtend",
            "7951068c82d8b54def805abc302642baaa3c1054"
        ],
        [
            "Opaque tc_val.",
            "VernacSetOpacity",
            "84219b4e50ac5f24a4372e0ddd0b2c81cf4c0b2b"
        ],
        [
            "destruct (Cop.classify_cmp t1 t2).",
            "VernacExtend",
            "6d3447eb5843f1bd9c3ff6983a470d9859b83a87"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "revert H; simple_if_tac; intros; [congruence |].",
            "VernacExtend",
            "b630d075e5ad9561569ef1987473c66c2df525a1"
        ],
        [
            "eapply tc_val'_sem_cmp_pp; eauto.",
            "VernacExtend",
            "fb150049205297c23bf7c1ba4919970eb8f4f62d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "revert H; simple_if_tac; intros; [congruence |].",
            "VernacExtend",
            "b630d075e5ad9561569ef1987473c66c2df525a1"
        ],
        [
            "unfold sem_cmp_pi in H.",
            "VernacExtend",
            "496a306ea1f5cea4817ea4d271cc8a99f06517c1"
        ],
        [
            "destruct v2; [ inv H | | inv H .. |].",
            "VernacExtend",
            "d7f34f5367d8106d3b8c9d6fad21695ecc662e95"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply tc_val'_sem_cmp_pp; eauto.",
            "VernacExtend",
            "fb150049205297c23bf7c1ba4919970eb8f4f62d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Archi.ptr64; inv H; try (eapply tc_val'_sem_cmp_pp; eauto).",
            "VernacExtend",
            "ddec9397f32e6b3b4bc40f981e3d2cf226098c75"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "revert H; simple_if_tac; intros; [congruence |].",
            "VernacExtend",
            "b630d075e5ad9561569ef1987473c66c2df525a1"
        ],
        [
            "unfold sem_cmp_ip in H.",
            "VernacExtend",
            "f02c1a960a507a825fcc93dc90c5f602df0187b0"
        ],
        [
            "destruct v1; [ inv H | | inv H .. |].",
            "VernacExtend",
            "dc54abca1a4763e77c4342f659648bc991ca67f0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply tc_val'_sem_cmp_pp; eauto.",
            "VernacExtend",
            "fb150049205297c23bf7c1ba4919970eb8f4f62d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Archi.ptr64; inv H; try (eapply tc_val'_sem_cmp_pp; eauto).",
            "VernacExtend",
            "ddec9397f32e6b3b4bc40f981e3d2cf226098c75"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "revert H; simple_if_tac; intros; [congruence |].",
            "VernacExtend",
            "b630d075e5ad9561569ef1987473c66c2df525a1"
        ],
        [
            "unfold sem_cmp_pl in H.",
            "VernacExtend",
            "ec59d2ed9d635cc7c74c678f31b3520f8d0f1e49"
        ],
        [
            "destruct v2; try congruence.",
            "VernacExtend",
            "056057d8684ea1b59aeba552514fbca04bb96897"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply tc_val'_sem_cmp_pp; eauto.",
            "VernacExtend",
            "fb150049205297c23bf7c1ba4919970eb8f4f62d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Archi.ptr64; inv H.",
            "VernacExtend",
            "79727dd1efd2f373fe1934758fcc19ca23d4b8c7"
        ],
        [
            "eapply tc_val'_sem_cmp_pp; eauto.",
            "VernacExtend",
            "fb150049205297c23bf7c1ba4919970eb8f4f62d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "revert H; simple_if_tac; intros; [congruence |].",
            "VernacExtend",
            "b630d075e5ad9561569ef1987473c66c2df525a1"
        ],
        [
            "unfold sem_cmp_lp in H.",
            "VernacExtend",
            "0a92a09d157836109d084bebd2dd5eb56bcba52a"
        ],
        [
            "destruct v1; try congruence.",
            "VernacExtend",
            "f34428ea63d17f1375d24502c858d1c9105fb968"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply tc_val'_sem_cmp_pp; eauto.",
            "VernacExtend",
            "fb150049205297c23bf7c1ba4919970eb8f4f62d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Archi.ptr64; inv H.",
            "VernacExtend",
            "79727dd1efd2f373fe1934758fcc19ca23d4b8c7"
        ],
        [
            "eapply tc_val'_sem_cmp_pp; eauto.",
            "VernacExtend",
            "fb150049205297c23bf7c1ba4919970eb8f4f62d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold sem_cmp_default, Clight_Cop2.sem_binarith in H.",
            "VernacExtend",
            "5f8acfdd0fe0a8a31cf915225b57e176d66d88da"
        ],
        [
            "destruct (Cop.classify_binarith t1 t2).",
            "VernacExtend",
            "dae4e585f48fced19530dc5dcd7c30dc7f5b3d6d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold both_int in H.",
            "VernacExtend",
            "9d399d98b5196acaf7038cc43255bc1580c3f344"
        ],
        [
            "forget (Clight_Cop2.sem_cast t1 (Cop.binarith_type (Cop.bin_case_i s0)) v1) as v1'.",
            "VernacExtend",
            "253d9204ebd24d936bcdfdce03ea07f35870af39"
        ],
        [
            "forget (Clight_Cop2.sem_cast t2 (Cop.binarith_type (Cop.bin_case_i s0)) v2) as v2'.",
            "VernacExtend",
            "5474921335802ef116e1ef472c9a8510ac292d5d"
        ],
        [
            "destruct v1'; [| inv H].",
            "VernacExtend",
            "591076be7dafdf4738c9a7b9cb469437591ecd30"
        ],
        [
            "destruct v0; inv H.",
            "VernacExtend",
            "0671dbe18d34475b22fdc69abef324db1f63141e"
        ],
        [
            "destruct v2'; [| inv H1].",
            "VernacExtend",
            "b3eb86f553b1c9588aa81df9288dd3099303f696"
        ],
        [
            "destruct v0; inv H1.",
            "VernacExtend",
            "33ade25f93f3e23afdb1f56a92003c38f9b7fb60"
        ],
        [
            "intros _; apply tc_val_of_bool.",
            "VernacExtend",
            "1d45d2f6e0ffc262898f24797dec9cb4332a0a6b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold both_long in H.",
            "VernacExtend",
            "bfd1f16179131cb50f9e4cdd246be1eb520560ff"
        ],
        [
            "forget (Clight_Cop2.sem_cast t1 (Cop.binarith_type (Cop.bin_case_l s0)) v1) as v1'.",
            "VernacExtend",
            "347c2f03a6437dd6bac2bfc2b1014ee711d34027"
        ],
        [
            "forget (Clight_Cop2.sem_cast t2 (Cop.binarith_type (Cop.bin_case_l s0)) v2) as v2'.",
            "VernacExtend",
            "82fc02364a37609f15124736546e0cdd0838cb63"
        ],
        [
            "destruct v1'; [| inv H].",
            "VernacExtend",
            "591076be7dafdf4738c9a7b9cb469437591ecd30"
        ],
        [
            "destruct v0; inv H.",
            "VernacExtend",
            "0671dbe18d34475b22fdc69abef324db1f63141e"
        ],
        [
            "destruct v2'; [| inv H1].",
            "VernacExtend",
            "b3eb86f553b1c9588aa81df9288dd3099303f696"
        ],
        [
            "destruct v0; inv H1.",
            "VernacExtend",
            "33ade25f93f3e23afdb1f56a92003c38f9b7fb60"
        ],
        [
            "intros _; apply tc_val_of_bool.",
            "VernacExtend",
            "1d45d2f6e0ffc262898f24797dec9cb4332a0a6b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold both_float in H.",
            "VernacExtend",
            "4363009ffea815745c9ba0be3bfd7c0763deb75d"
        ],
        [
            "forget (Clight_Cop2.sem_cast t1 (Cop.binarith_type (Cop.bin_case_f)) v1) as v1'.",
            "VernacExtend",
            "c1fd09d130428714a491b32266099bfe1ba983d5"
        ],
        [
            "forget (Clight_Cop2.sem_cast t2 (Cop.binarith_type (Cop.bin_case_f)) v2) as v2'.",
            "VernacExtend",
            "53cc15d9f2fbb5b8efc1a64d388b3a6cac430543"
        ],
        [
            "destruct v1'; [| inv H].",
            "VernacExtend",
            "591076be7dafdf4738c9a7b9cb469437591ecd30"
        ],
        [
            "destruct v0; inv H.",
            "VernacExtend",
            "0671dbe18d34475b22fdc69abef324db1f63141e"
        ],
        [
            "destruct v2'; [| inv H1].",
            "VernacExtend",
            "b3eb86f553b1c9588aa81df9288dd3099303f696"
        ],
        [
            "destruct v0; inv H1.",
            "VernacExtend",
            "33ade25f93f3e23afdb1f56a92003c38f9b7fb60"
        ],
        [
            "intros _; apply tc_val_of_bool.",
            "VernacExtend",
            "1d45d2f6e0ffc262898f24797dec9cb4332a0a6b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold both_single in H.",
            "VernacExtend",
            "b6217d399781156dd43265d269201692733db8b8"
        ],
        [
            "forget (Clight_Cop2.sem_cast t1 (Cop.binarith_type (Cop.bin_case_s)) v1) as v1'.",
            "VernacExtend",
            "b5690995f2cec4438cbd8c317a835d60e5d2acdc"
        ],
        [
            "forget (Clight_Cop2.sem_cast t2 (Cop.binarith_type (Cop.bin_case_s)) v2) as v2'.",
            "VernacExtend",
            "20696f8a30bc24f14ac14afb699d6e040de9f464"
        ],
        [
            "destruct v1'; [| inv H].",
            "VernacExtend",
            "591076be7dafdf4738c9a7b9cb469437591ecd30"
        ],
        [
            "destruct v0; inv H.",
            "VernacExtend",
            "0671dbe18d34475b22fdc69abef324db1f63141e"
        ],
        [
            "destruct v2'; [| inv H1].",
            "VernacExtend",
            "b3eb86f553b1c9588aa81df9288dd3099303f696"
        ],
        [
            "destruct v0; inv H1.",
            "VernacExtend",
            "33ade25f93f3e23afdb1f56a92003c38f9b7fb60"
        ],
        [
            "intros _; apply tc_val_of_bool.",
            "VernacExtend",
            "1d45d2f6e0ffc262898f24797dec9cb4332a0a6b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_val_cmp_eqne_ip: forall op v1 t1 v2 t0 a0 i2 s0 a1, match op with Ceq => True | Cne => True | _ => False end -> match v1,t1 with | Vint i, Tint _ _ _ => Int.eq i Int.zero = true | Vlong i, Tlong _ _ => Int64.eq (Int64.repr (Int64.unsigned i)) Int64.zero = true | _, _ => False end -> tc_val (Tpointer t0 a0) v2 -> tc_val (Tint i2 s0 a1) (force_val (Clight_Cop2.sem_cmp op t1 (Tpointer t0 a0) v1 v2)).",
            "VernacStartTheoremProof",
            "ea9053e9ad6352adec58df23dbee77c9f39c4108"
        ],
        [
            "Opaque tc_val.",
            "VernacSetOpacity",
            "84219b4e50ac5f24a4372e0ddd0b2c81cf4c0b2b"
        ],
        [
            "intros until 1; rename H into CMP; intros; destruct op; try contradiction CMP; clear CMP; destruct v1, t1; try contradiction H; destruct v2; try (inv H0; try rewrite H2; try destruct i0; destruct s; unfold Clight_Cop2.sem_cmp, classify_cmp, typeconv, Clight_Cop2.sem_binarith, sem_cast, classify_cast, sem_cmp_lp, sem_cmp_pp; simpl; try rewrite H; try reflexivity; try apply tc_val_of_bool).",
            "VernacExtend",
            "cac8cc2a94e46c56c05ac842c24c4db120668eff"
        ],
        [
            "Transparent tc_val.",
            "VernacSetOpacity",
            "c568dfdfd7ed9818d0e2ceb2cf393e76daec4d8b"
        ],
        [
            "all: try solve [hnf in H0; destruct (eqb_type _ _); inv H0].",
            "VernacExtend",
            "56e2f67e0b2a3e33e5792ea9b82ab968cdf07837"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Lemma tc_val_cmp_eqne_pi: forall op v1 t1 v2 t0 a0 i2 s0 a1, match op with Ceq => True | Cne => True | _ => False end -> match v1,t1 with | Vint i, Tint _ _ _ => Int.eq i Int.zero = true | Vlong i, Tlong _ _ => Int64.eq (Int64.repr (Int64.unsigned i)) Int64.zero = true | _, _ => False end -> tc_val (Tpointer t0 a0) v2 -> tc_val (Tint i2 s0 a1) (force_val (Clight_Cop2.sem_cmp op (Tpointer t0 a0) t1 v2 v1)).",
            "VernacStartTheoremProof",
            "7ea1e5ce5d495336910faf3d06a9b3ecc29c2210"
        ],
        [
            "Opaque tc_val.",
            "VernacSetOpacity",
            "84219b4e50ac5f24a4372e0ddd0b2c81cf4c0b2b"
        ],
        [
            "intros until 1; rename H into CMP; intros.",
            "VernacExtend",
            "8470a4c6fdc44382ce1b5ddb4cf859ee6da52480"
        ],
        [
            "destruct op; try contradiction CMP; clear CMP; destruct v1, t1; try contradiction H; destruct v2; try (inv H0; try rewrite H2; try destruct i0; destruct s; unfold Clight_Cop2.sem_cmp, classify_cmp, typeconv, sem_binarith, sem_cast, classify_cast, sem_cmp_pl, sem_cmp_pp; simpl; try rewrite H; try reflexivity; try apply tc_val_of_bool).",
            "VernacExtend",
            "baa03d11bbfa862e5651c8ef769ff3844f07a7a0"
        ],
        [
            "Transparent tc_val.",
            "VernacSetOpacity",
            "c568dfdfd7ed9818d0e2ceb2cf393e76daec4d8b"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Ltac sem_cmp_solver t1 t2 := match t1 with | Tint ?i ?s _ => destruct i,s | Tlong ?s _ => destruct s | Tfloat ?i _ => try (is_var i; destruct i) | _ => idtac end; match t2 with | Tint ?i ?s _ => destruct i,s | Tlong ?s _ => destruct s | Tfloat ?i _ => try (is_var i; destruct i) | _ => idtac end; unfold Clight_Cop2.sem_cmp, sem_cmp_pl, sem_cmp_lp, sem_cmp_pp; simpl; repeat match goal with | H: _ = true |- _ => try rewrite H; clear H | H: if ?A then True else False |- _ => destruct A eqn:?; try contradiction; clear H end; try reflexivity; try apply tc_val_of_bool.",
            "VernacExtend",
            "c4bfd5db003c40fbf9d6b60f1a34aac25d34c81b"
        ]
    ],
    "proofs": [
        {
            "name": "denote_tc_assert_llt'",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "unfold tc_llt; simpl.",
                        "VernacExtend",
                        "eac436b128c8ed6b25a4d7a6ecd3de28d32af4d6"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e any_environ) eqn:?; simpl; auto.",
                        "VernacExtend",
                        "b8ef5f66c2ee45f4cd94e6e358005c5e3a14783a"
                    ]
                },
                {
                    "command": [
                        "apply (eval_expr_any rho) in Heqv; try congruence.",
                        "VernacExtend",
                        "b9664c25533189775eec0b5c51f971ec5293e701"
                    ]
                },
                {
                    "command": [
                        "rewrite Heqv; simpl.",
                        "VernacExtend",
                        "902efa9d537df76ce799918e54689a3f96d51a6e"
                    ]
                },
                {
                    "command": [
                        "destruct (Int64.ltu i j) eqn:?; simpl; unfold_lift; simpl; rewrite ?Heqv; simpl; auto.",
                        "VernacExtend",
                        "f3f90eba09b9fb1d62a33e9b229c31a9ebf25069"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; intuition.",
                        "VernacExtend",
                        "a34827f50d30f5a574c28315d22e34aad5f96c52"
                    ]
                },
                {
                    "command": [
                        "apply Int64.ltu_inv in Heqb.",
                        "VernacExtend",
                        "985ecf03a7edeaa67102af7a1aeee6f707c537f0"
                    ]
                },
                {
                    "command": [
                        "intros ? ?.",
                        "VernacExtend",
                        "546ddfdd2482db9e439533251e7f222ee06f71aa"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct Heqb.",
                        "VernacExtend",
                        "523b34fe12d4c0f1f76ca41dc5235f6655047e17"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_val_void",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "destruct v; simpl; tauto.",
                        "VernacExtend",
                        "f417ffef43d879347fe357f849bf9e58bded0cda"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert'",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "pose (P := denote_tc_assert a rho).",
                        "VernacExtend",
                        "7433ff15d707ceae8fb6698d592877056ec08f97"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_assert in P.",
                        "VernacExtend",
                        "d0cb21bce76f2450689efa3990d671c81d5e883f"
                    ]
                },
                {
                    "command": [
                        "super_unfold_lift.",
                        "VernacExtend",
                        "f74399a7d6c2e3b20cb175917085c1b87ddc843e"
                    ]
                },
                {
                    "command": [
                        "destruct a; apply P.",
                        "VernacExtend",
                        "0e5b9e2b97d95439f3d4e30d56490edb83a05e6d"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert'_eq",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "extensionality a rho.",
                        "VernacExtend",
                        "cf2b93eeb18cc38bb99cd7364a743ba1d43a833e"
                    ]
                },
                {
                    "command": [
                        "destruct a; reflexivity.",
                        "VernacExtend",
                        "7fbe57a1b7de98163889837c4a347c7457bf77a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_eq_true",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (X := Int.eq_spec x y).",
                        "VernacExtend",
                        "16e6651e4f37a7e163f63bf019a173271a721fe6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H in X; congruence.",
                        "VernacExtend",
                        "1dcf82ead25f8e67cd994723e3d4d66116cba7be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_andp_TT2",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "intros; unfold tc_andp.",
                        "VernacExtend",
                        "d82e7214442df2584da6a832f12c1e5b49394cb4"
                    ]
                },
                {
                    "command": [
                        "destruct e; reflexivity.",
                        "VernacExtend",
                        "b936eee5257e73f9a5a0f8feb1ce207f600658d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_andp_TT1",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros; unfold tc_andp; reflexivity.",
                        "VernacExtend",
                        "64ca008e9858be3338bb25ee8f03c1507d53237c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_False",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "intros; apply prop_ext; intuition.",
                        "VernacExtend",
                        "29f6b2585664c8346c506e0a0e40390db5d63839"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_True",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "intros; apply prop_ext; intuition.",
                        "VernacExtend",
                        "29f6b2585664c8346c506e0a0e40390db5d63839"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "True_or",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros; apply prop_ext; intuition.",
                        "VernacExtend",
                        "29f6b2585664c8346c506e0a0e40390db5d63839"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "False_or",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "intros; apply prop_ext; intuition.",
                        "VernacExtend",
                        "29f6b2585664c8346c506e0a0e40390db5d63839"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_orp_sound",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold tc_orp.",
                        "VernacExtend",
                        "4238ada2f1521b072cd892dc95d56241a3965cf0"
                    ]
                },
                {
                    "command": [
                        "destruct a1; simpl; unfold_lift; repeat first [rewrite False_or | rewrite True_or | rewrite or_False | rewrite or_True]; try apply iff_refl; destruct a2; simpl in *; unfold_lift; repeat first [rewrite False_or | rewrite True_or | rewrite or_False | rewrite or_True]; try apply iff_refl.",
                        "VernacExtend",
                        "06d223c099ebc099bbf64801bcf04b6cfe7bd5b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_orp",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; intro m; rewrite tc_orp_sound; intro; assumption.",
                        "VernacExtend",
                        "8c6203dd84ac68766bf9975383b9f358154892c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_true_true",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "apply prop_ext; intuition.",
                        "VernacExtend",
                        "8a4224a6b11df295ba822165ed660bf644fc5d44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_true_false",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "apply prop_ext; intuition.",
                        "VernacExtend",
                        "8a4224a6b11df295ba822165ed660bf644fc5d44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_iszero",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold tc_iszero.",
                        "VernacExtend",
                        "33b01bb0b6fd2f2a39e1f9bb2a32a570228834fb"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e any_environ) eqn:?; simpl; auto; rewrite (eval_expr_any rho e _ Heqv) by congruence.",
                        "VernacExtend",
                        "11532525e6240cbd41f32940b3cf8f8f17ab8724"
                    ]
                },
                {
                    "command": [
                        "destruct (Int.eq i Int.zero); reflexivity.",
                        "VernacExtend",
                        "9141fecec3162bf28e7932fa7a59ce22f3d08414"
                    ]
                },
                {
                    "command": [
                        "destruct (Int64.eq i Int64.zero); reflexivity.",
                        "VernacExtend",
                        "c2a9a307cc3cf6a4f01f0352e8d2ec75f7c5d23f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_iszero'",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "rewrite denote_tc_assert_iszero.",
                        "VernacExtend",
                        "63ec9a3e7997c777a8d64328f6e9e280d9ffba13"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_nonzero",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold tc_nonzero.",
                        "VernacExtend",
                        "6d6e8d57a6ad4f01b85a36f03186f95a34c5237a"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e any_environ) eqn:?; simpl; auto; try rewrite (eval_expr_any rho e _ Heqv) by congruence; unfold_lift.",
                        "VernacExtend",
                        "e305c18a4465cb5fa7ef062fee7d1d2f7640ef40"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (Int.eq i Int.zero) eqn:?; simpl; unfold_lift; unfold denote_tc_nonzero; simpl; rewrite ?(eval_expr_any rho e _ Heqv) by congruence; auto.",
                        "VernacExtend",
                        "71b5e884f1df5220a4f4dd23d343fb5a8a8963bb"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; auto; intros ? ? ?; subst; inv Heqb.",
                        "VernacExtend",
                        "49ad6ca1c23bb50dac430720e76e9ca6ee384494"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (Int64.eq i Int64.zero) eqn:?; simpl; unfold_lift; unfold denote_tc_nonzero; simpl; rewrite ?(eval_expr_any rho e _ Heqv) by congruence; auto.",
                        "VernacExtend",
                        "eeff4651f4c6a263159c6c7f633d8c507366bf6c"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext; auto; intros ? ? ?; subst; inv Heqb.",
                        "VernacExtend",
                        "49ad6ca1c23bb50dac430720e76e9ca6ee384494"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_nonzero'",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "rewrite denote_tc_assert_nonzero.",
                        "VernacExtend",
                        "35638cbc6b31654f9b77e66c97b8d8ca073d7948"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e rho); simpl; auto.",
                        "VernacExtend",
                        "ffb53c071b426953b643e26ea87cc2b9ce8a40a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_nodivover",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold tc_nodivover.",
                        "VernacExtend",
                        "b67a8ae453cd6ad8dd436fc5a8dd8ebb28dd75e2"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 any_environ) eqn:?; destruct (eval_expr e2 any_environ) eqn:?; simpl; auto; rewrite (eval_expr_any rho e1 _ Heqv) by congruence; rewrite (eval_expr_any rho e2 _ Heqv0) by congruence; auto.",
                        "VernacExtend",
                        "648995470d45834087752e067c11f4bf1470ffe7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (negb (Int.eq i (Int.repr Int.min_signed) && Int.eq i0 Int.mone)) eqn:?.",
                        "VernacExtend",
                        "1351d76089d35172db94ac0eddbe4bbb34a02381"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold_lift; apply pred_ext; auto; intros ? ? [? ?]; subst; inv Heqb.",
                        "VernacExtend",
                        "aa74f6597bb391cb09822cb782a70b5b1744a11a"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold_lift; rewrite (eval_expr_any rho e1 _ Heqv) by congruence; rewrite (eval_expr_any rho e2 _ Heqv0) by congruence; reflexivity.",
                        "VernacExtend",
                        "7d04ccc93095e63e376737bf6b2ffa8a00f690d1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (negb (Int64.eq i (Int64.repr Int64.min_signed) && Int.eq i0 Int.mone)) eqn:?.",
                        "VernacExtend",
                        "8b8fd5865a453f1c4b4e8b868bb367a4f0e54600"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold_lift; apply pred_ext; auto; intros ? ? [? ?]; subst; inv Heqb.",
                        "VernacExtend",
                        "aa74f6597bb391cb09822cb782a70b5b1744a11a"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold_lift; rewrite (eval_expr_any rho e1 _ Heqv) by congruence; rewrite (eval_expr_any rho e2 _ Heqv0) by congruence; reflexivity.",
                        "VernacExtend",
                        "7d04ccc93095e63e376737bf6b2ffa8a00f690d1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (negb (Int64.eq i (Int64.repr Int64.min_signed) && Int64.eq i0 Int64.mone)) eqn:?.",
                        "VernacExtend",
                        "f8d0ba603d6e8985e829027f74b23efbdd424ab7"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold_lift; apply pred_ext; auto; intros ? ? [? ?]; subst; inv Heqb.",
                        "VernacExtend",
                        "aa74f6597bb391cb09822cb782a70b5b1744a11a"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold_lift; rewrite (eval_expr_any rho e1 _ Heqv) by congruence; rewrite (eval_expr_any rho e2 _ Heqv0) by congruence; reflexivity.",
                        "VernacExtend",
                        "7d04ccc93095e63e376737bf6b2ffa8a00f690d1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_nodivover'",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "rewrite denote_tc_assert_nodivover; reflexivity.",
                        "VernacExtend",
                        "907c7ec2eb375945fcf4109d93f975c8a9096754"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_andp''",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_orp''",
            "line_nb": 205,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_andp'",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "apply denote_tc_assert_andp.",
                        "VernacExtend",
                        "f5d53093f5c4b41daf03cc40230849a9de5d6280"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_orp'",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality rho.",
                        "VernacExtend",
                        "a6182bb98d71ae2b51b3675429229ccd77d7161f"
                    ]
                },
                {
                    "command": [
                        "apply denote_tc_assert_orp.",
                        "VernacExtend",
                        "a425b04081773838368dcecc44a019fc7163344b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_test_eq'",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "intros; extensionality rho.",
                        "VernacExtend",
                        "876c9ddd2c67098fb113bf57fc855e1053ecc44d"
                    ]
                },
                {
                    "command": [
                        "unfold tc_test_eq.",
                        "VernacExtend",
                        "4bb8e3e3c08bf85e8434437bb6f841289a60b495"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold_lift; unfold denote_tc_test_eq.",
                        "VernacExtend",
                        "b826c307e4f0209788578f718ac47f5baf9c41f6"
                    ]
                },
                {
                    "command": [
                        "destruct (Val.eq (eval_expr a any_environ) Vundef); [rewrite e; reflexivity | ].",
                        "VernacExtend",
                        "d7d2844c8e64c7d25afe7bb0fe0f42102b18bdd0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (eval_expr_any rho _ _ (eq_refl _) n).",
                        "VernacExtend",
                        "657f0f27e17e8cdf6118615d9956ccabdf5a5170"
                    ]
                },
                {
                    "command": [
                        "destruct (Val.eq (eval_expr b any_environ) Vundef).",
                        "VernacExtend",
                        "953cf3cfd98c30619868be70aa3452ace73c288e"
                    ]
                },
                {
                    "command": [
                        "rewrite e; destruct (eval_expr a rho) eqn:Ha; simpl; unfold_lift; rewrite Ha; reflexivity.",
                        "VernacExtend",
                        "1f5e6d9dc17b783f522fef42a8b38d75f4b44f74"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (eval_expr_any rho _ _ (eq_refl _) n0).",
                        "VernacExtend",
                        "4972187f6b445f272c172d4a60299575180d8c62"
                    ]
                },
                {
                    "command": [
                        "clear n n0.",
                        "VernacExtend",
                        "a771a7909934b3797a700e77303a06ea95d0b30c"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr a rho) eqn:Ha; simpl; unfold_lift; try rewrite Ha; try reflexivity; destruct (eval_expr b rho) eqn:Hb; simpl; unfold_lift; rewrite ?Ha, ?Hb; try reflexivity.",
                        "VernacExtend",
                        "4235ba0f638ad56a51b85f58f59e783db5dcef7a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64 eqn:Hp; simpl; unfold_lift.",
                        "VernacExtend",
                        "7eb2f12c79429ff77844af06838876cc94ae86a0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Ha,Hb; simpl; rewrite Hp; reflexivity.",
                        "VernacExtend",
                        "0d52adcb23c59cf865a18579cea19263061371d9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.eq_spec i Int.zero); destruct (Int.eq i Int.zero).",
                        "VernacExtend",
                        "8a06e18756b39ae2745115f8eba6386e8bbc852f"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.eq_spec i0 Int.zero); destruct (Int.eq i0 Int.zero).",
                        "VernacExtend",
                        "8e8fae0e114871e6e1612e7511ef3ce49f78707a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite !prop_true_andp by auto.",
                        "VernacExtend",
                        "16dffcb05dc897a4b582d5abff676ed83ddb0974"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "unfold TT.",
                        "VernacExtend",
                        "51b11cf0d56b548a82411781b03fea5c883237db"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext; intuition.",
                        "VernacExtend",
                        "8a4224a6b11df295ba822165ed660bf644fc5d44"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "rewrite Ha,Hb.",
                        "VernacExtend",
                        "c409b7ebaf6ac5df01c7e8a9540a5d286e983fb0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "rewrite Ha,Hb.",
                        "VernacExtend",
                        "c409b7ebaf6ac5df01c7e8a9540a5d286e983fb0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64 eqn:Hp; simpl; unfold_lift.",
                        "VernacExtend",
                        "7eb2f12c79429ff77844af06838876cc94ae86a0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.eq_spec i Int64.zero); destruct (Int64.eq i Int64.zero).",
                        "VernacExtend",
                        "b08200ee1ebccb5e075a86739a614ec1f9927606"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.eq_spec i0 Int64.zero); destruct (Int64.eq i0 Int64.zero).",
                        "VernacExtend",
                        "e7c3cdb68d465ef2e6c8022dca5a9b3326463a03"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite !prop_true_andp by auto.",
                        "VernacExtend",
                        "16dffcb05dc897a4b582d5abff676ed83ddb0974"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "unfold TT.",
                        "VernacExtend",
                        "51b11cf0d56b548a82411781b03fea5c883237db"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext; intuition.",
                        "VernacExtend",
                        "8a4224a6b11df295ba822165ed660bf644fc5d44"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "rewrite Ha,Hb.",
                        "VernacExtend",
                        "c409b7ebaf6ac5df01c7e8a9540a5d286e983fb0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "rewrite Ha,Hb.",
                        "VernacExtend",
                        "c409b7ebaf6ac5df01c7e8a9540a5d286e983fb0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Ha,Hb; simpl; rewrite Hp; reflexivity.",
                        "VernacExtend",
                        "0d52adcb23c59cf865a18579cea19263061371d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert_test_order'",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "intros; extensionality rho.",
                        "VernacExtend",
                        "876c9ddd2c67098fb113bf57fc855e1053ecc44d"
                    ]
                },
                {
                    "command": [
                        "unfold tc_test_order.",
                        "VernacExtend",
                        "4ed94b21b94604bfe286b58411b303f5b1d4ca25"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold_lift; unfold denote_tc_test_order.",
                        "VernacExtend",
                        "397a7ccddab1da6b3c29e79e91545dbbc479aac1"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr a rho) eqn:Ha; destruct (eval_expr a any_environ) eqn:Ha'; simpl; unfold_lift; unfold denote_tc_test_order; rewrite ?Ha, ?Ha'; simpl; auto; try solve [ rewrite (eval_expr_any rho a _ Ha') in Ha by congruence; inv Ha]; destruct (eval_expr b rho) eqn:Hb; destruct (eval_expr b any_environ) eqn:Hb'; simpl; unfold_lift; unfold denote_tc_test_eq; rewrite ?Ha, ?Ha', ?Hb, ?Hb'; simpl; auto; rewrite (eval_expr_any rho b _ Hb') in Hb by congruence; inv Hb; rewrite (eval_expr_any rho a _ Ha') in Ha by congruence; inv Ha.",
                        "VernacExtend",
                        "8169f4bab3f56d190779060897fe25259ac5cef1"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64 eqn:Hp.",
                        "VernacExtend",
                        "ddbeb08cfda8118e447ce468b630e255ec886676"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "rewrite (eval_expr_any rho b _ Hb') by congruence; rewrite (eval_expr_any rho a _ Ha') by congruence.",
                        "VernacExtend",
                        "5c4e5703a483af2ed0f15ad9b4e91a9a112e8b5b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (Int.eq_dec i Int.zero).",
                        "VernacExtend",
                        "52edb48e612426baaf834faaef56d88e25a339fc"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.eq_true.",
                        "VernacExtend",
                        "8d739d79dd8bd6b8bad59fd0bfa7dafc3cfbdc0c"
                    ]
                },
                {
                    "command": [
                        "destruct (Int.eq_dec i1 Int.zero).",
                        "VernacExtend",
                        "46c0868881d7e195f1bbbbd5e501b549a9fcdba8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.eq_true.",
                        "VernacExtend",
                        "8d739d79dd8bd6b8bad59fd0bfa7dafc3cfbdc0c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite !prop_true_andp by auto.",
                        "VernacExtend",
                        "16dffcb05dc897a4b582d5abff676ed83ddb0974"
                    ]
                },
                {
                    "command": [
                        "super_unfold_lift.",
                        "VernacExtend",
                        "f74399a7d6c2e3b20cb175917085c1b87ddc843e"
                    ]
                },
                {
                    "command": [
                        "unfold TT.",
                        "VernacExtend",
                        "51b11cf0d56b548a82411781b03fea5c883237db"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext; intuition.",
                        "VernacExtend",
                        "8a4224a6b11df295ba822165ed660bf644fc5d44"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.eq_false by auto.",
                        "VernacExtend",
                        "d5949d6db4296fa66949b81eab1d07677697c4ee"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold_lift; unfold denote_tc_test_eq.",
                        "VernacExtend",
                        "b826c307e4f0209788578f718ac47f5baf9c41f6"
                    ]
                },
                {
                    "command": [
                        "rewrite (eval_expr_any rho a _ Ha') by congruence.",
                        "VernacExtend",
                        "1847412480b3eb18e4f9c653db9da9b404c7cd15"
                    ]
                },
                {
                    "command": [
                        "rewrite (eval_expr_any rho _ _ Hb') by congruence.",
                        "VernacExtend",
                        "58a468da9c5674611afdd5816ecb1893f8bc9c73"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Int.eq_false by auto.",
                        "VernacExtend",
                        "d5949d6db4296fa66949b81eab1d07677697c4ee"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold_lift; unfold denote_tc_test_eq.",
                        "VernacExtend",
                        "b826c307e4f0209788578f718ac47f5baf9c41f6"
                    ]
                },
                {
                    "command": [
                        "rewrite (eval_expr_any rho a _ Ha') by congruence.",
                        "VernacExtend",
                        "1847412480b3eb18e4f9c653db9da9b404c7cd15"
                    ]
                },
                {
                    "command": [
                        "rewrite (eval_expr_any rho _ _ Hb') by congruence.",
                        "VernacExtend",
                        "58a468da9c5674611afdd5816ecb1893f8bc9c73"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64 eqn:Hp.",
                        "VernacExtend",
                        "ddbeb08cfda8118e447ce468b630e255ec886676"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (Int64.eq_dec i Int64.zero).",
                        "VernacExtend",
                        "eecdd462f945809b0c0d9914cdcd39a0aa40cdc1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.eq_true.",
                        "VernacExtend",
                        "8cead271a0856a262b888c89c5d66dc76f21587b"
                    ]
                },
                {
                    "command": [
                        "destruct (Int64.eq_dec i1 Int64.zero).",
                        "VernacExtend",
                        "03c9ba99001a31e5cf7221749fb8062ae6cbb92f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.eq_true.",
                        "VernacExtend",
                        "8cead271a0856a262b888c89c5d66dc76f21587b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite !prop_true_andp by auto.",
                        "VernacExtend",
                        "16dffcb05dc897a4b582d5abff676ed83ddb0974"
                    ]
                },
                {
                    "command": [
                        "super_unfold_lift.",
                        "VernacExtend",
                        "f74399a7d6c2e3b20cb175917085c1b87ddc843e"
                    ]
                },
                {
                    "command": [
                        "unfold TT.",
                        "VernacExtend",
                        "51b11cf0d56b548a82411781b03fea5c883237db"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext; intuition.",
                        "VernacExtend",
                        "8a4224a6b11df295ba822165ed660bf644fc5d44"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.eq_false by auto.",
                        "VernacExtend",
                        "e70d1ffd2c78c1f4b62df8c3a9100e8d47c25e65"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold_lift; unfold denote_tc_test_eq.",
                        "VernacExtend",
                        "b826c307e4f0209788578f718ac47f5baf9c41f6"
                    ]
                },
                {
                    "command": [
                        "rewrite (eval_expr_any rho a _ Ha') by congruence.",
                        "VernacExtend",
                        "1847412480b3eb18e4f9c653db9da9b404c7cd15"
                    ]
                },
                {
                    "command": [
                        "rewrite (eval_expr_any rho _ _ Hb') by congruence.",
                        "VernacExtend",
                        "58a468da9c5674611afdd5816ecb1893f8bc9c73"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.eq_false by auto.",
                        "VernacExtend",
                        "e70d1ffd2c78c1f4b62df8c3a9100e8d47c25e65"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold_lift; unfold denote_tc_test_eq.",
                        "VernacExtend",
                        "b826c307e4f0209788578f718ac47f5baf9c41f6"
                    ]
                },
                {
                    "command": [
                        "rewrite (eval_expr_any rho a _ Ha') by congruence.",
                        "VernacExtend",
                        "1847412480b3eb18e4f9c653db9da9b404c7cd15"
                    ]
                },
                {
                    "command": [
                        "rewrite (eval_expr_any rho _ _ Hb') by congruence.",
                        "VernacExtend",
                        "58a468da9c5674611afdd5816ecb1893f8bc9c73"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold_lift.",
                        "VernacExtend",
                        "49cc678292f20068718dd6f7d6f838fc96506b4c"
                    ]
                },
                {
                    "command": [
                        "rewrite (eval_expr_any rho b _ Hb') by congruence; rewrite (eval_expr_any rho a _ Ha') by congruence.",
                        "VernacExtend",
                        "5c4e5703a483af2ed0f15ad9b4e91a9a112e8b5b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classify_sub_eq",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "unfold classify_sub, classify_sub'; extensionality t1 t2.",
                        "VernacExtend",
                        "c818633dd129308d42fd1620fda1929fe3bccd67"
                    ]
                },
                {
                    "command": [
                        "destruct t1, t2; simpl; auto; try destruct i,s; auto; try destruct i0,s0; auto.",
                        "VernacExtend",
                        "45d5c1525d106f9c62d431feaab0f470e1250a87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classify_cmp_eq",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "unfold classify_cmp, classify_cmp'; extensionality t1 t2.",
                        "VernacExtend",
                        "7a1d54092ca8f6c61c18782efdc566f22c622d31"
                    ]
                },
                {
                    "command": [
                        "destruct t1,t2; simpl; auto; try destruct i,s; auto; try destruct i0,s0; auto.",
                        "VernacExtend",
                        "45d5c1525d106f9c62d431feaab0f470e1250a87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classify_add_eq",
            "line_nb": 391,
            "steps": [
                {
                    "command": [
                        "unfold classify_add; extensionality t1 t2.",
                        "VernacExtend",
                        "2a696bc4c93ec299f499a558cd289ccba975506a"
                    ]
                },
                {
                    "command": [
                        "destruct t1,t2; simpl; auto; try destruct i,s; auto; try destruct i0,s0; auto.",
                        "VernacExtend",
                        "45d5c1525d106f9c62d431feaab0f470e1250a87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classify_shift_eq",
            "line_nb": 396,
            "steps": [
                {
                    "command": [
                        "unfold classify_shift; extensionality t1 t2.",
                        "VernacExtend",
                        "6c5c2b5d7457aa853999b4cc0531119f60e6631c"
                    ]
                },
                {
                    "command": [
                        "destruct t1,t2; simpl; auto; try destruct i,s; auto; try destruct i0,s0; auto.",
                        "VernacExtend",
                        "45d5c1525d106f9c62d431feaab0f470e1250a87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classify_binarith_eq",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "unfold classify_binarith; extensionality t1 t2.",
                        "VernacExtend",
                        "3bd1b23768c18e2bcbf401c1d503a8183dcbaf08"
                    ]
                },
                {
                    "command": [
                        "destruct t1,t2; simpl; auto; try destruct i,s; auto; try destruct i0,s0; auto; try destruct s; auto; try destruct s0; auto.",
                        "VernacExtend",
                        "282f5402ee0cb683ce39e0024255369667ba0d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "binarithType_eq",
            "line_nb": 406,
            "steps": [
                {
                    "command": [
                        "unfold binarithType, binarithType'; extensionality t1 t2 ty e1 e2.",
                        "VernacExtend",
                        "7fccb8834b1f0bd432bc34d9c8db4cf878e8c318"
                    ]
                },
                {
                    "command": [
                        "rewrite classify_binarith_eq.",
                        "VernacExtend",
                        "3235fa99c228c279afc2f3ba463b86c2fc234879"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "den_isBinOpR",
            "line_nb": 411,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- classify_add_eq.",
                        "VernacExtend",
                        "09bfc1c275e92f33370e21a8e92c0a963d57816d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- classify_sub_eq.",
                        "VernacExtend",
                        "0884ffc8f4775283d5090cba1cb15d04ee491625"
                    ]
                },
                {
                    "command": [
                        "rewrite <- classify_shift_eq.",
                        "VernacExtend",
                        "96bf6ed8273632892b727a10b1b53a5dc8d068b5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- classify_cmp_eq.",
                        "VernacExtend",
                        "06593e14f870aeeb321a98852bbc768414346d3e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- classify_binarith_eq.",
                        "VernacExtend",
                        "5475c92c91031427dbc5df8c7e31fe868e6faa35"
                    ]
                },
                {
                    "command": [
                        "rewrite <- binarithType_eq.",
                        "VernacExtend",
                        "45581bb52e56b690ad02cb5386636f1cda62db93"
                    ]
                },
                {
                    "command": [
                        "unfold isBinOpResultType, classify_add, classify_sub, classify_binarith, classify_shift, classify_cmp, check_pp_int, check_pp_int', typeconv, remove_attributes, change_attributes; destruct op; dtca; extensionality rho; destruct (typeof a1) as [ | [ | | | ] [ | ] ? | [ | ] ? | [ | ] ? | | | | | ]; dtca; destruct (typeof a2) as [ | [ | | | ] [ | ] ? | [ | ] ? | [ | ] ? | | | | | ]; dtca.",
                        "VernacExtend",
                        "09ca6361dabaf105200adcc0682133aa83ad565a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_assert'_andp'_e",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite denote_tc_assert'_eq in *.",
                        "VernacExtend",
                        "aa7dd99c992894f11d79a26f4ef68ae0d7766ff1"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cast_int_long_nonzero",
            "line_nb": 426,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.eq_spec i Int.zero).",
                        "VernacExtend",
                        "3b2106a3bbae9a09bba923f16dd640fd9f692110"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.eq_false; auto.",
                        "VernacExtend",
                        "3679fbe6c859c4fd5267b5b2f639b9f4f2fed833"
                    ]
                },
                {
                    "command": [
                        "unfold cast_int_long.",
                        "VernacExtend",
                        "d0fbedfaf1c46f67bcff08be72a7393847fdb0bb"
                    ]
                },
                {
                    "command": [
                        "contradict H0.",
                        "VernacExtend",
                        "e9276d92c17ea182f1ef13aa74464b33eea923d9"
                    ]
                },
                {
                    "command": [
                        "unfold Int64.zero in H0.",
                        "VernacExtend",
                        "684b8f38f10493e4bb6a7ca855eb867bee19827d"
                    ]
                },
                {
                    "command": [
                        "destruct s.",
                        "VernacExtend",
                        "25b900e268e7851d959aa45edce33af62b3fca65"
                    ]
                },
                {
                    "command": [
                        "assert (Int64.signed (Int64.repr (Int.signed i)) = Int64.signed (Int64.repr 0)) by (f_equal; auto).",
                        "VernacExtend",
                        "660664d48cf4c43bfba508ae7fedd7a4536db807"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.signed_repr in H.",
                        "VernacExtend",
                        "1a10e017de2907ef4750b3a3bfe79324e0bede6c"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.signed_repr in H.",
                        "VernacExtend",
                        "1a10e017de2907ef4750b3a3bfe79324e0bede6c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_signed i).",
                        "VernacExtend",
                        "58865f3753a075ce3387e2d56907cbd92515e439"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.signed_range Int64.zero).",
                        "VernacExtend",
                        "29154258cbf4afa6bb112ef6fbc036ee78bb5689"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.signed_zero in H1.",
                        "VernacExtend",
                        "afb94f0449d967e724762ef9102699e7d8f5f090"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.signed_range i).",
                        "VernacExtend",
                        "dfeaa40ebd710d23cf2d404288929fc34638b6d5"
                    ]
                },
                {
                    "command": [
                        "clear - H1.",
                        "VernacExtend",
                        "a97560cbbe2cd31ef128e29a3cf251870622f56a"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_trans with Int.min_signed; auto.",
                        "VernacExtend",
                        "e7063a53e1c0e77addad88e9aac4fbc7bcf275fb"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_trans with Int.max_signed; auto.",
                        "VernacExtend",
                        "545083ef57db4400d68f486ce23291f790618be8"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "assert (Int64.unsigned (Int64.repr (Int.unsigned i)) = Int64.unsigned (Int64.repr 0)) by (f_equal; auto).",
                        "VernacExtend",
                        "50cbc4d3a841a6cf8900e46ee2d8a21dd2a69e66"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.unsigned_repr in H.",
                        "VernacExtend",
                        "82f5825f2b9d21841bbdcf4becf4e8486c48f8e1"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.unsigned_repr in H.",
                        "VernacExtend",
                        "82f5825f2b9d21841bbdcf4becf4e8486c48f8e1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_unsigned i).",
                        "VernacExtend",
                        "2c5606931407d1321e14855ad7036622fefd27ca"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "split; compute; congruence.",
                        "VernacExtend",
                        "a66896a3eebf884657a87b63af6dc274a3ce1b39"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range i).",
                        "VernacExtend",
                        "c3a9e19e3d86215533851fab70582d6c3a47266e"
                    ]
                },
                {
                    "command": [
                        "clear - H1.",
                        "VernacExtend",
                        "a97560cbbe2cd31ef128e29a3cf251870622f56a"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "unfold Int64.max_unsigned.",
                        "VernacExtend",
                        "972eb9a40f51d24a1eb5af2883a7df6b5ca86927"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_trans with Int.modulus.",
                        "VernacExtend",
                        "b3dec4b15270a443cdddb1f623a47bc020ba8614"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_val_of_bool",
            "line_nb": 470,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x, i3,s3; simpl; try split; auto; rewrite <- Z.leb_le; reflexivity.",
                        "VernacExtend",
                        "0acafc2f4763f267a6a20b6d3b05de5c64c7f73e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_val'_sem_cmp_pp",
            "line_nb": 479,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sem_cmp_pp, option_map in H.",
                        "VernacExtend",
                        "bf4b734b8b465a05452f26efecbf7194f6824f6f"
                    ]
                },
                {
                    "command": [
                        "forget (if Archi.ptr64 then Val.cmplu_bool true2 cmp v1 v2 else Val.cmpu_bool true2 cmp v1 v2) as v0.",
                        "VernacExtend",
                        "f7b2fe4a4631e754fcc86d64f9de05c141d1c5dd"
                    ]
                },
                {
                    "command": [
                        "destruct v0; inv H.",
                        "VernacExtend",
                        "0671dbe18d34475b22fdc69abef324db1f63141e"
                    ]
                },
                {
                    "command": [
                        "intros _; apply tc_val_of_bool.",
                        "VernacExtend",
                        "1d45d2f6e0ffc262898f24797dec9cb4332a0a6b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}