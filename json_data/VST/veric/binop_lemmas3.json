{
    "filename": "veric/binop_lemmas3.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.msl.msl_standard.",
            "VernacRequire",
            "bbb3b33b9509ab47eb7418bd6127eafa914382b1"
        ],
        [
            "Require Import VST.veric.Clight_base.",
            "VernacRequire",
            "03391ebcbe352738cbe4d19626ab439bfac7c2e7"
        ],
        [
            "Require Import VST.veric.compcert_rmaps.",
            "VernacRequire",
            "c684a380737921a2e41654d70bb2fe8e448426cf"
        ],
        [
            "Require Import VST.veric.Clight_lemmas.",
            "VernacRequire",
            "02532b9c71acd440dec2f77aca2af2a0760847e8"
        ],
        [
            "Require Import VST.veric.mpred.",
            "VernacRequire",
            "11652084584e46804583cf99fdbf0fa76aa9fd7a"
        ],
        [
            "Require Import VST.veric.tycontext.",
            "VernacRequire",
            "f8951535af03e9380f7d0a99afae06d1059d4422"
        ],
        [
            "Require Import VST.veric.expr2.",
            "VernacRequire",
            "bf07dfc9a4517a977ef232bb1ba25ac9aaf5c2d9"
        ],
        [
            "Require Import VST.veric.Clight_Cop2.",
            "VernacRequire",
            "f0c330ebce3c0859261241e10e8a1008ad79973b"
        ],
        [
            "Require Import VST.veric.juicy_mem.",
            "VernacRequire",
            "f1eecf3ecf80d465588513629a8e6b5706759bd8"
        ],
        [
            "Require Import VST.veric.binop_lemmas2.",
            "VernacRequire",
            "288f5ed828eb94a9522c1ac63730306cbf5ac44a"
        ],
        [
            "Lemma denote_tc_nonzero_e: forall i m, app_pred (denote_tc_nonzero (Vint i)) m -> i <> Int.zero.",
            "VernacStartTheoremProof",
            "e3228f61eaed56f17b0111a8eb53d2661399ac85"
        ],
        [
            "simpl; auto .",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_nodivover_e: forall i j m, app_pred (denote_tc_nodivover (Vint i) (Vint j)) m -> ~ (i =Int.repr Int.min_signed /\\ j = Int.mone).",
            "VernacStartTheoremProof",
            "e4be29f2c2b09b12cd503d7b677d97948eee1514"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_nonzero_e64: forall i m, app_pred (denote_tc_nonzero (Vlong i)) m -> i <> Int64.zero.",
            "VernacStartTheoremProof",
            "dec9c256a2363469781b9db439d59429fe77f9f1"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_nodivover_e64_ll: forall i j m, app_pred (denote_tc_nodivover (Vlong i) (Vlong j)) m -> ~ (i =Int64.repr Int64.min_signed /\\ j = Int64.mone).",
            "VernacStartTheoremProof",
            "6039886fe200b0297a715e41677e479abd210e72"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_nodivover_e64_il: forall s i j m, app_pred (denote_tc_nodivover (Vint i) (Vlong j)) m -> ~ (cast_int_long s i = Int64.repr Int64.min_signed /\\ j = Int64.mone).",
            "VernacStartTheoremProof",
            "c70dd8b78e77001e5d389783bf4751f277a5ef1b"
        ],
        [
            "simpl; intros.",
            "VernacExtend",
            "429a59199da524088af55673600740ccc58db31e"
        ],
        [
            "intros [? ?].",
            "VernacExtend",
            "103d05a036b9ac75a805207998e1c61f7a0137bb"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "destruct s; simpl in *.",
            "VernacExtend",
            "9b53faeb6557a88096b1512ec5e13f08ce211921"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pose proof (@f_equal _ _ Int64.signed _ _ H0).",
            "VernacExtend",
            "d01f121bc5cd810ab25e25c7476b989f08031084"
        ],
        [
            "rewrite Int64.signed_repr in H1.",
            "VernacExtend",
            "63cde63ef6e73a4a8511709cdeb9a86b0be2acb5"
        ],
        [
            "rewrite Int64.signed_repr in H1.",
            "VernacExtend",
            "63cde63ef6e73a4a8511709cdeb9a86b0be2acb5"
        ],
        [
            "pose proof (Int.signed_range i).",
            "VernacExtend",
            "dfeaa40ebd710d23cf2d404288929fc34638b6d5"
        ],
        [
            "rewrite H1 in H2.",
            "VernacExtend",
            "3ddaddaf8f89728f77671f580e26162e25035230"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "compute in H2.",
            "VernacExtend",
            "7211b392316dd70a6982bd2611971f542f675139"
        ],
        [
            "apply H2; auto.",
            "VernacExtend",
            "30acbf5144f9dcdba4f738b81d251d83daba847e"
        ],
        [
            "compute; split; congruence.",
            "VernacExtend",
            "517f1ce8e92821ec4becfa3932170bc49c560d15"
        ],
        [
            "pose proof (Int.signed_range i).",
            "VernacExtend",
            "dfeaa40ebd710d23cf2d404288929fc34638b6d5"
        ],
        [
            "clear - H2.",
            "VernacExtend",
            "df3dc56b8cb8ec54f9503844cf7d5b731417589e"
        ],
        [
            "forget (Int.signed i) as a.",
            "VernacExtend",
            "5d2894024dd4ff31b9183a2c5806088781dafecf"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "split; eapply Z.le_trans; try eassumption.",
            "VernacExtend",
            "20d422e4a3633fbf21f8548f2ae4aa6cb34b8bdb"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pose proof (@f_equal _ _ Int64.unsigned _ _ H0).",
            "VernacExtend",
            "da9f9440229191c96af5e6196a4b540a37aea071"
        ],
        [
            "rewrite Int64.unsigned_repr in H1.",
            "VernacExtend",
            "81b6861b22f7a81ca08d31235ec331f2c7a17f18"
        ],
        [
            "replace (Int64.repr Int64.min_signed) with (Int64.repr (Int64.modulus + Int64.min_signed)) in H1.",
            "VernacExtend",
            "dde8939e0d88a48c8135da4fd19d65499274d1a9"
        ],
        [
            "rewrite Int64.unsigned_repr in H1.",
            "VernacExtend",
            "81b6861b22f7a81ca08d31235ec331f2c7a17f18"
        ],
        [
            "pose proof (Int.unsigned_range i).",
            "VernacExtend",
            "c3a9e19e3d86215533851fab70582d6c3a47266e"
        ],
        [
            "rewrite H1 in H2.",
            "VernacExtend",
            "3ddaddaf8f89728f77671f580e26162e25035230"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "compute in H2.",
            "VernacExtend",
            "7211b392316dd70a6982bd2611971f542f675139"
        ],
        [
            "apply H2; auto.",
            "VernacExtend",
            "30acbf5144f9dcdba4f738b81d251d83daba847e"
        ],
        [
            "compute; split; congruence.",
            "VernacExtend",
            "517f1ce8e92821ec4becfa3932170bc49c560d15"
        ],
        [
            "apply Int64.eqm_samerepr.",
            "VernacExtend",
            "85a89829e8c5cea7f3400344fa98b5f5fa0c5113"
        ],
        [
            "rewrite <- Z.add_0_l.",
            "VernacExtend",
            "381dfa3dceaf45eaf5b9b41c17a9153278f01376"
        ],
        [
            "apply Int64.eqm_add.",
            "VernacExtend",
            "d3492f198e4e1b2293713ebd4bae84d20b36d50b"
        ],
        [
            "unfold Int64.eqm.",
            "VernacExtend",
            "595ba0e754a5e7631c95489ec76cc6424ca653a8"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply Int64.eqm_refl.",
            "VernacExtend",
            "2ce6af83c842c61dd1a2925840bd1a55a5066660"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "pose proof (Int.unsigned_range i).",
            "VernacExtend",
            "c3a9e19e3d86215533851fab70582d6c3a47266e"
        ],
        [
            "destruct H; split; auto.",
            "VernacExtend",
            "6b0b617ec55939190e129ebd913eb5389aac7738"
        ],
        [
            "assert (Int.modulus < Int64.max_unsigned).",
            "VernacExtend",
            "0521ad8b580f868ee7da9b39330ab4e862cbdb42"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_nodivover_e64_li: forall s i j m, app_pred (denote_tc_nodivover (Vlong i) (Vint j)) m -> ~ (i = Int64.repr Int64.min_signed /\\ cast_int_long s j = Int64.mone).",
            "VernacStartTheoremProof",
            "2db44c98dbbdc3b6fa6424cb2b1fb8600970a6f6"
        ],
        [
            "simpl; intros.",
            "VernacExtend",
            "429a59199da524088af55673600740ccc58db31e"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "destruct H; split; auto.",
            "VernacExtend",
            "6b0b617ec55939190e129ebd913eb5389aac7738"
        ],
        [
            "clear - H0.",
            "VernacExtend",
            "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
        ],
        [
            "destruct s; simpl in *.",
            "VernacExtend",
            "9b53faeb6557a88096b1512ec5e13f08ce211921"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold Int64.mone in H0.",
            "VernacExtend",
            "81a2f7fca8c9c65fc110334f51eede572fd146bc"
        ],
        [
            "pose proof (@f_equal _ _ Int64.signed _ _ H0).",
            "VernacExtend",
            "d01f121bc5cd810ab25e25c7476b989f08031084"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "rewrite Int64.signed_repr in H.",
            "VernacExtend",
            "1a10e017de2907ef4750b3a3bfe79324e0bede6c"
        ],
        [
            "change (Int.signed j = -1) in H.",
            "VernacExtend",
            "e1092e1bc4403cf9af5cf79e9fbc53758a9ffd44"
        ],
        [
            "rewrite <- (Int.repr_signed j).",
            "VernacExtend",
            "3baa6fcf8e2581f80190d0ebf54a913a603e3275"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "pose proof (Int.signed_range j).",
            "VernacExtend",
            "df55dce8e8406a9286377edfafbcf468e4e4abe3"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "split; eapply Z.le_trans; try eassumption.",
            "VernacExtend",
            "20d422e4a3633fbf21f8548f2ae4aa6cb34b8bdb"
        ],
        [
            "compute.",
            "VernacExtend",
            "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "compute.",
            "VernacExtend",
            "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold Int64.mone in H0.",
            "VernacExtend",
            "81a2f7fca8c9c65fc110334f51eede572fd146bc"
        ],
        [
            "pose proof (@f_equal _ _ Int64.signed _ _ H0).",
            "VernacExtend",
            "d01f121bc5cd810ab25e25c7476b989f08031084"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "rewrite Int64.signed_repr in H.",
            "VernacExtend",
            "1a10e017de2907ef4750b3a3bfe79324e0bede6c"
        ],
        [
            "change (Int.unsigned j = -1) in H.",
            "VernacExtend",
            "50b3d07cc851f1c718cb5a3c9275c2c1a99fe9e0"
        ],
        [
            "pose proof (Int.unsigned_range j).",
            "VernacExtend",
            "7f9c9f9a6144f3477751c167e2ca3555ea85ea85"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "compute in H0.",
            "VernacExtend",
            "31905ff4f9d27a1820066eabc95ac22c45a4c7f3"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "pose proof (Int.unsigned_range j).",
            "VernacExtend",
            "7f9c9f9a6144f3477751c167e2ca3555ea85ea85"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply Z.le_trans; try eassumption.",
            "VernacExtend",
            "3f1c57239626dd4aea1f79a66b7a4132269b1ca6"
        ],
        [
            "compute.",
            "VernacExtend",
            "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "assert (Int.modulus < Int64.max_signed).",
            "VernacExtend",
            "6802d4db1f761b32ecc7f7c277300431e0c828f9"
        ],
        [
            "compute.",
            "VernacExtend",
            "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Int64_eq_repr_signed32_nonzero: forall i, i <> Int.zero -> Int64.repr (Int.signed i) <> Int64.zero.",
            "VernacStartTheoremProof",
            "2c8193645a2e989fe76e059f5d45e44b39c409e6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "rename H into H0.",
            "VernacExtend",
            "8d51167a54038a370507e0578c03218695c402d3"
        ],
        [
            "unfold Int64.zero in H0.",
            "VernacExtend",
            "684b8f38f10493e4bb6a7ca855eb867bee19827d"
        ],
        [
            "assert (Int64.signed (Int64.repr (Int.signed i)) = Int64.signed (Int64.repr 0)) by (f_equal; auto).",
            "VernacExtend",
            "660664d48cf4c43bfba508ae7fedd7a4536db807"
        ],
        [
            "rewrite Int64.signed_repr in H.",
            "VernacExtend",
            "1a10e017de2907ef4750b3a3bfe79324e0bede6c"
        ],
        [
            "rewrite Int64.signed_repr in H.",
            "VernacExtend",
            "1a10e017de2907ef4750b3a3bfe79324e0bede6c"
        ],
        [
            "rewrite <- (Int.repr_signed i).",
            "VernacExtend",
            "58865f3753a075ce3387e2d56907cbd92515e439"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "pose proof (Int64.signed_range Int64.zero).",
            "VernacExtend",
            "29154258cbf4afa6bb112ef6fbc036ee78bb5689"
        ],
        [
            "rewrite Int64.signed_zero in H1.",
            "VernacExtend",
            "afb94f0449d967e724762ef9102699e7d8f5f090"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "pose proof (Int.signed_range i).",
            "VernacExtend",
            "dfeaa40ebd710d23cf2d404288929fc34638b6d5"
        ],
        [
            "clear - H1.",
            "VernacExtend",
            "a97560cbbe2cd31ef128e29a3cf251870622f56a"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Z.le_trans with Int.min_signed; auto.",
            "VernacExtend",
            "e7063a53e1c0e77addad88e9aac4fbc7bcf275fb"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "apply Z.le_trans with Int.max_signed; auto.",
            "VernacExtend",
            "545083ef57db4400d68f486ce23291f790618be8"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Int64_eq_repr_unsigned32_nonzero: forall i, i <> Int.zero -> Int64.repr (Int.unsigned i) <> Int64.zero.",
            "VernacStartTheoremProof",
            "b695d033430fc0e90e25e76b6dc54cd7944cd007"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rename H into H0.",
            "VernacExtend",
            "8d51167a54038a370507e0578c03218695c402d3"
        ],
        [
            "contradict H0.",
            "VernacExtend",
            "e9276d92c17ea182f1ef13aa74464b33eea923d9"
        ],
        [
            "unfold Int64.zero in H0.",
            "VernacExtend",
            "684b8f38f10493e4bb6a7ca855eb867bee19827d"
        ],
        [
            "assert (Int64.unsigned (Int64.repr (Int.unsigned i)) = Int64.unsigned (Int64.repr 0)) by (f_equal; auto).",
            "VernacExtend",
            "50cbc4d3a841a6cf8900e46ee2d8a21dd2a69e66"
        ],
        [
            "rewrite Int64.unsigned_repr in H.",
            "VernacExtend",
            "82f5825f2b9d21841bbdcf4becf4e8486c48f8e1"
        ],
        [
            "rewrite Int64.unsigned_repr in H.",
            "VernacExtend",
            "82f5825f2b9d21841bbdcf4becf4e8486c48f8e1"
        ],
        [
            "rewrite <- (Int.repr_unsigned i).",
            "VernacExtend",
            "2c5606931407d1321e14855ad7036622fefd27ca"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "split; compute; congruence.",
            "VernacExtend",
            "a66896a3eebf884657a87b63af6dc274a3ce1b39"
        ],
        [
            "pose proof (Int.unsigned_range i).",
            "VernacExtend",
            "c3a9e19e3d86215533851fab70582d6c3a47266e"
        ],
        [
            "clear - H1.",
            "VernacExtend",
            "a97560cbbe2cd31ef128e29a3cf251870622f56a"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "unfold Int64.max_unsigned.",
            "VernacExtend",
            "972eb9a40f51d24a1eb5af2883a7df6b5ca86927"
        ],
        [
            "apply Z.le_trans with Int.modulus.",
            "VernacExtend",
            "b3dec4b15270a443cdddb1f623a47bc020ba8614"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "compute; congruence.",
            "VernacExtend",
            "1a58589b5617513e16966c72a14aa8b5277b9c28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Int64_eq_repr_int_nonzero: forall s i, i <> Int.zero -> cast_int_long s i <> Int64.zero.",
            "VernacStartTheoremProof",
            "a80a0a1bd4defbdd4107b3372c46433ee3d6f605"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Int64_eq_repr_signed32_nonzero; auto.",
            "VernacExtend",
            "37906b777c77bfb2ffd54333693956e272e8d259"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Int64_eq_repr_unsigned32_nonzero; auto.",
            "VernacExtend",
            "27a06aa0cb3fe2266dae219581a55674f8794b30"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_igt_e: forall m i j, app_pred (denote_tc_igt j (Vint i)) m -> Int.unsigned i < Int.unsigned j.",
            "VernacStartTheoremProof",
            "c316e11d20e6a2c9ddde5913d38beb3892a40a94"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_lgt_e: forall m i j, app_pred (denote_tc_lgt j (Vlong i)) m -> Int64.unsigned i < Int64.unsigned j.",
            "VernacStartTheoremProof",
            "386eba078cd457f3682d3c0b20890ab1eea843d0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_iszero_long_e: forall m i, app_pred (denote_tc_iszero (Vlong i)) m -> i = Int64.zero.",
            "VernacStartTheoremProof",
            "ccb4e95c88343ec3ed19d9eb4a6a31f97d65b0b1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "pose proof (Int64.eq_spec i Int64.zero).",
            "VernacExtend",
            "b3dc4348affea34bc0347c9511c363397279ed3d"
        ],
        [
            "destruct (Int64.eq i Int64.zero); try contradiction.",
            "VernacExtend",
            "5464171cb128c24348c2bec014acd3fb0fbbeb5a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_type_tc_val_Vtrue: forall t, is_int_type t = true -> tc_val t Vtrue.",
            "VernacStartTheoremProof",
            "7a0d8561f1df7499588f85554b4c4582d28ec66d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct t as [| [| | |] [|] | | | | | | |]; try discriminate; hnf; auto.",
            "VernacExtend",
            "f637f57b6fdca49e76f4cccb92e9625c032f36b7"
        ],
        [
            "change (Int.signed Int.one) with 1.",
            "VernacExtend",
            "c3b471446eba5532dd7567cdc16e4dbd0245d8cb"
        ],
        [
            "change Byte.min_signed with (-128).",
            "VernacExtend",
            "6d6fc28e04af5ceb612de8c5dea46b87bb583287"
        ],
        [
            "change Byte.max_signed with 127.",
            "VernacExtend",
            "6c220946163b2a1ee178140c9e9b9f9fbe39f39f"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "change (Int.signed Int.one) with 1.",
            "VernacExtend",
            "c3b471446eba5532dd7567cdc16e4dbd0245d8cb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_type_tc_val_Vfalse: forall t, is_int_type t = true -> tc_val t Vfalse.",
            "VernacStartTheoremProof",
            "2400467a3d0e61180be4f3be5e7a4ef5b9480469"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct t as [| [| | |] [|] | | | | | | |]; try discriminate; hnf; auto; change (Int.signed Int.zero) with 0.",
            "VernacExtend",
            "cca07f05ad702fa8629d4fb34599401e41e30e5f"
        ],
        [
            "change Byte.min_signed with (-128).",
            "VernacExtend",
            "6d6fc28e04af5ceb612de8c5dea46b87bb583287"
        ],
        [
            "change Byte.max_signed with 127.",
            "VernacExtend",
            "6c220946163b2a1ee178140c9e9b9f9fbe39f39f"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma int_type_tc_val_of_bool: forall t b, is_int_type t = true -> tc_val t (Val.of_bool b).",
            "VernacStartTheoremProof",
            "814050b367b9111f413a8857f76f055f77cc9193"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct t as [| [| | |] [|] | | | | | | |]; try discriminate; hnf; auto; clear H; destruct b; simpl; auto; change (Int.signed Int.one) with 1; change (Int.signed Int.zero) with 0; change (Int.unsigned Int.one) with 1; change (Int.unsigned Int.zero) with 0; change Byte.min_signed with (-128); change Byte.max_signed with 127; change Byte.max_unsigned with 255; try omega.",
            "VernacExtend",
            "1e315a88031949019a102d5ebb674b9dcdd8e923"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ptrofs_to_of64_lemma: Archi.ptr64 = false -> forall i, Ptrofs.to_int (Ptrofs.of_int64 i) = Int.repr (Int64.unsigned i).",
            "VernacStartTheoremProof",
            "7d804142a1b8ff23d212013d6eee802eaa53bfef"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Ptrofs.of_int64, Ptrofs.to_int.",
            "VernacExtend",
            "c2c8471ee6c0544e9ce7447753de3cd4d553e6cf"
        ],
        [
            "pose proof (Ptrofs.agree32_repr H (Int64.unsigned i)).",
            "VernacExtend",
            "f4cf2fe4f2918bc6d30993a0f25745235d90d99d"
        ],
        [
            "red in H0.",
            "VernacExtend",
            "3e33e4fdada8386783e8311d1d4116d148279cb2"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply Int.repr_unsigned.",
            "VernacExtend",
            "b3d43aae5f6f402bb1c3d022281cbe34cf2ae2f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Int64repr_Intsigned_zero: forall i, Int64.repr (Int.signed i) = Int64.zero -> i=Int.zero.",
            "VernacStartTheoremProof",
            "0fb533e6f188fc4f92c24d136ceae93341a7a079"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.eq_spec i Int.zero).",
            "VernacExtend",
            "3b2106a3bbae9a09bba923f16dd640fd9f692110"
        ],
        [
            "destruct (Int.eq i Int.zero) eqn:?; auto.",
            "VernacExtend",
            "78122b65b59d2e3f7938c1ee6080dc3d4563968d"
        ],
        [
            "apply Int64_eq_repr_signed32_nonzero in H0.",
            "VernacExtend",
            "a3f7efc4ad4558399cbed7cd794db5fca60c20d5"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Int64repr_Intunsigned_zero: forall i, Int64.repr (Int.unsigned i) = Int64.zero -> i=Int.zero.",
            "VernacStartTheoremProof",
            "f735accaa7f4bcce6ce9629a1f59d3f6c4b8d1ec"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.eq_spec i Int.zero).",
            "VernacExtend",
            "3b2106a3bbae9a09bba923f16dd640fd9f692110"
        ],
        [
            "destruct (Int.eq i Int.zero) eqn:?; auto.",
            "VernacExtend",
            "78122b65b59d2e3f7938c1ee6080dc3d4563968d"
        ],
        [
            "apply Int64_eq_repr_unsigned32_nonzero in H0.",
            "VernacExtend",
            "546d3e1ba779141e6ee50db0e15e7d2fdba60270"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_block_true: forall b1 b2 i1 i2 A (a b: A), is_true (sameblock (Vptr b1 i1) (Vptr b2 i2)) -> (if eq_block b1 b2 then a else b) = a.",
            "VernacStartTheoremProof",
            "66307879d13c3011b51e56096f4501bad72aaffd"
        ],
        [
            "unfold sameblock, eq_block.",
            "VernacExtend",
            "b24f35de5a66d939d46821d27fd38c6eb5684d23"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_true_e in H.",
            "VernacExtend",
            "4fca6b2a96e6796231b5b2e59ade3187123aeeae"
        ],
        [
            "destruct (peq b1 b2); auto.",
            "VernacExtend",
            "a4985db4f5d7596e66184b56d780834e41396b71"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sizeof_range_true {CS: composite_env}: forall t A (a b: A) (max: Z), negb (Z.eqb (sizeof t) 0) = true -> Z.leb (sizeof t) max = true -> (if zlt 0 (sizeof t) && zle (sizeof t) max then a else b) = a.",
            "VernacStartTheoremProof",
            "28a9e0990fed7dfcf341571edf42258cb6dd3f2a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite negb_true_iff in H.",
            "VernacExtend",
            "24fac8337821d0ffbce5aaf906e263bfd5955048"
        ],
        [
            "rewrite Z.eqb_neq in H.",
            "VernacExtend",
            "9db364e8d26ba05f430cb4e0158619dc17440005"
        ],
        [
            "pose proof sizeof_pos t.",
            "VernacExtend",
            "ae8d041da01ea19d95abbe7523653584bc09ad50"
        ],
        [
            "rewrite <- Zle_is_le_bool in H0.",
            "VernacExtend",
            "9edbd515f0b646db73e0160d6c7e498c2e6fbd50"
        ],
        [
            "destruct (zlt 0 (sizeof t)); [| omega].",
            "VernacExtend",
            "a12a1d601b377bff7e9429cfe51749071321b1a6"
        ],
        [
            "destruct (zle (sizeof t) max); [| omega].",
            "VernacExtend",
            "61393c7f9d9f17c29371e401b5c9cf337339fddd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive tc_val_PM: type -> val -> Prop := | tc_val_PM_Tint: forall sz sg a v, is_int sz sg v -> tc_val_PM (Tint sz sg a) v | tc_val_PM_Tlong: forall s a v, is_long v -> tc_val_PM (Tlong s a) v | tc_val_PM_Tfloat_single: forall a v, is_single v -> tc_val_PM (Tfloat F32 a) v | tc_val_PM_Tfloat_double: forall a v, is_float v -> tc_val_PM (Tfloat F64 a) v | tc_val_PM_Tpointer: forall t a v, (if eqb_type (Tpointer t a) int_or_ptr_type then is_pointer_or_integer else is_pointer_or_null) v -> tc_val_PM (Tpointer t a) v | tc_val_PM_Tarray: forall t n a v, is_pointer_or_null v -> tc_val_PM (Tarray t n a) v | tc_val_PM_Tfunction: forall ts t a v, is_pointer_or_null v -> tc_val_PM (Tfunction ts t a) v | tc_val_PM_Tstruct: forall i a v, isptr v -> tc_val_PM (Tstruct i a) v | tc_val_PM_Tunion: forall i a v, isptr v -> tc_val_PM (Tunion i a) v.",
            "VernacInductive",
            "b748b72e0cde49e90ca5f545d517b6b37d76eb35"
        ],
        [
            "Lemma tc_val_tc_val_PM: forall t v, tc_val t v <-> tc_val_PM t v.",
            "VernacStartTheoremProof",
            "dba409ab00259014b0c2e891f21ed2765dff1096"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct t as [| | | [ | ] ? | | | | |]; try (inv H); constructor; auto.",
            "VernacExtend",
            "8c58e10cabbdfdb7de356511000726fcdb7df4a0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H; subst; auto.",
            "VernacExtend",
            "3ac5a8efa0f6861868f1bfc9ce7119d14816504c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive tc_val_PM': type -> val -> Prop := | tc_val_PM'_Tint: forall t0 sz sg a v, t0 = Tint sz sg a -> is_int sz sg v -> tc_val_PM' t0 v | tc_val_PM'_Tlong: forall t0 s a v, stupid_typeconv t0 = Tlong s a -> is_long v -> tc_val_PM' t0 v | tc_val_PM'_Tfloat_single: forall t0 a v, stupid_typeconv t0 = Tfloat F32 a -> is_single v -> tc_val_PM' t0 v | tc_val_PM'_Tfloat_double: forall t0 a v, stupid_typeconv t0 = Tfloat F64 a -> is_float v -> tc_val_PM' t0 v | tc_val_PM'_Tpointer: forall t0 t a v, stupid_typeconv t0 = Tpointer t a -> (if eqb_type t0 int_or_ptr_type then is_pointer_or_integer else is_pointer_or_null) v -> tc_val_PM' t0 v | tc_val_PM'_Tstruct: forall t0 i a v, stupid_typeconv t0 = Tstruct i a -> isptr v -> tc_val_PM' t0 v | tc_val_PM'_Tunion: forall t0 i a v, stupid_typeconv t0 = Tunion i a -> isptr v -> tc_val_PM' t0 v.",
            "VernacInductive",
            "19e5a3a0634c2ad3cfa9a0ba4d616bdd7f2c8b5b"
        ],
        [
            "Lemma tc_val_tc_val_PM': forall t v, tc_val t v <-> tc_val_PM' t v.",
            "VernacStartTheoremProof",
            "c7d88896d0c0878464bfd5012b91e433ffbb043f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct t as [| | | [ | ] ? | | | | |]; try (inv H).",
            "VernacExtend",
            "2ae5d27713c22d1c2724383dabbf28b5664e86b2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s; eapply tc_val_PM'_Tint; eauto.",
            "VernacExtend",
            "b1f4364b6b4ec7937876ff1cbc0298f34cb22419"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply tc_val_PM'_Tlong; eauto; reflexivity.",
            "VernacExtend",
            "f2ca9b76e78a2b50808577ec40274e44d0969580"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply tc_val_PM'_Tfloat_single; eauto; reflexivity.",
            "VernacExtend",
            "97026ed5159254d186ff06e4c0e2fa0e3df25d6e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply tc_val_PM'_Tfloat_double; eauto; reflexivity.",
            "VernacExtend",
            "613cf11063478714530338fe17d75b9af4f6a4bb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply tc_val_PM'_Tpointer; eauto; reflexivity.",
            "VernacExtend",
            "b3406377b0f4576b2cc07703cd57fdcc5210a44f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply tc_val_PM'_Tpointer; eauto; reflexivity.",
            "VernacExtend",
            "b3406377b0f4576b2cc07703cd57fdcc5210a44f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply tc_val_PM'_Tpointer; eauto; reflexivity.",
            "VernacExtend",
            "b3406377b0f4576b2cc07703cd57fdcc5210a44f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply tc_val_PM'_Tstruct; eauto; reflexivity.",
            "VernacExtend",
            "d82a1da38e3f595c73374df31f71dbedd86a3522"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply tc_val_PM'_Tunion; eauto; reflexivity.",
            "VernacExtend",
            "829fdc38be9d3ef2fb352cbc1764e8ef9e2c5a0f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H; subst; auto; destruct t as [| | | [ | ] ? | | | | |]; try (inv H0); auto.",
            "VernacExtend",
            "833c8e43135b07cd70f0579d7e127b52db77957a"
        ],
        [
            "destruct i; inv H3.",
            "VernacExtend",
            "867d2576b5d83284033cf04fa8476ef9da9bd5e9"
        ],
        [
            "destruct i; inv H3.",
            "VernacExtend",
            "867d2576b5d83284033cf04fa8476ef9da9bd5e9"
        ],
        [
            "destruct i; inv H3.",
            "VernacExtend",
            "867d2576b5d83284033cf04fa8476ef9da9bd5e9"
        ],
        [
            "destruct i; inv H3.",
            "VernacExtend",
            "867d2576b5d83284033cf04fa8476ef9da9bd5e9"
        ],
        [
            "destruct i0; inv H3.",
            "VernacExtend",
            "24132eaec9524a0daf2a0ab7117055628a1a9610"
        ],
        [
            "destruct i0; inv H3.",
            "VernacExtend",
            "24132eaec9524a0daf2a0ab7117055628a1a9610"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac solve_tc_val H := rewrite tc_val_tc_val_PM in H; inv H.",
            "VernacExtend",
            "743a2527d5cfffeebf03a0ab85d6118f239bc90c"
        ],
        [
            "Ltac solve_tc_val' H := rewrite tc_val_tc_val_PM' in H; inv H.",
            "VernacExtend",
            "666a72e62e4b3db90cb157387b5b3dedfcc4f300"
        ],
        [
            "Lemma tc_val_sem_binarith': forall {CS: compspecs} sem_int sem_long sem_float sem_single t1 t2 t v1 v2 deferr reterr rho m (TV2: tc_val t2 v2) (TV1: tc_val t1 v1), (denote_tc_assert (binarithType' t1 t2 t deferr reterr) rho) m -> tc_val t (force_val (Clight_Cop2.sem_binarith (fun s n1 n2 => Some (Vint (sem_int s n1 n2))) (fun s n1 n2 => Some (Vlong (sem_long s n1 n2))) (fun n1 n2 => Some (Vfloat (sem_float n1 n2))) (fun n1 n2 => Some (Vsingle (sem_single n1 n2))) t1 t2 v1 v2)).",
            "VernacStartTheoremProof",
            "d13ca4dbf889763ae752b4ea90437ce840e89fa3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold binarithType' in H.",
            "VernacExtend",
            "ce4eb6b46ce62c63b92adfbf94aa91dd91224832"
        ],
        [
            "unfold Clight_Cop2.sem_binarith.",
            "VernacExtend",
            "96b290f920fb6211bee2eb4fba6ecc29a9b0fc62"
        ],
        [
            "rewrite classify_binarith_eq.",
            "VernacExtend",
            "3235fa99c228c279afc2f3ba463b86c2fc234879"
        ],
        [
            "destruct (classify_binarith' t1 t2) eqn:?H; try solve [inv H]; apply tc_bool_e in H; destruct t1 as [| [| | |] [|] | | [ | ] ? | | | | |]; try discriminate H0; destruct t2 as [| [| | |] [|] | | [ | ] ? | | | | |]; try inv H0; try contradiction; destruct v1; try solve [inv TV1]; destruct v2; try solve [inv TV2]; destruct t as [| [| | |] [|] ? | | [|] | | | | |]; inv H; simpl; auto; apply I.",
            "VernacExtend",
            "848a88cdf293f08b0851aa0a34a7be02e9d54323"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tc_val_sem_cmp_binarith': forall sem_int sem_long sem_float sem_single t1 t2 t v1 v2 (TV2: tc_val t2 v2) (TV1: tc_val t1 v1), is_numeric_type t1 = true -> is_numeric_type t2 = true -> is_int_type t = true -> tc_val t (force_val (Clight_Cop2.sem_binarith (fun s n1 n2 => Some (Val.of_bool (sem_int s n1 n2))) (fun s n1 n2 => Some (Val.of_bool (sem_long s n1 n2))) (fun n1 n2 => Some (Val.of_bool (sem_float n1 n2))) (fun n1 n2 => Some (Val.of_bool (sem_single n1 n2))) t1 t2 v1 v2)).",
            "VernacStartTheoremProof",
            "cf0daf69a66a78e4adbe6177285a0ee72a705d34"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct t; inv H1.",
            "VernacExtend",
            "767836c6d4a9860f9a795ac76ec264c554dd2ee9"
        ],
        [
            "unfold Clight_Cop2.sem_binarith.",
            "VernacExtend",
            "96b290f920fb6211bee2eb4fba6ecc29a9b0fc62"
        ],
        [
            "rewrite classify_binarith_eq.",
            "VernacExtend",
            "3235fa99c228c279afc2f3ba463b86c2fc234879"
        ],
        [
            "destruct (classify_binarith' t1 t2) eqn:?H.",
            "VernacExtend",
            "a8c4b101c82220948b1046e4b1aecbac46ace534"
        ],
        [
            "1,2,3,4: destruct t1 as [| [| | |] [|] | | [ | ] ? | | | | |]; try discriminate H0; destruct t2 as [| [| | |] [|] | | [ | ] ? | | | | |]; try inv H0; try contradiction; destruct v1; try solve [inv TV1]; destruct v2; try solve [inv TV2]; inv H1; simpl; apply tc_val_of_bool; auto.",
            "VernacExtend",
            "a866aa5cf082e395682d70e0dc4c8d01651f2f5f"
        ],
        [
            "destruct t1 as [| [| | |] [|] | | [ | ] ? | | | | |]; inv H; destruct t2 as [| [| | |] [|] | | [ | ] ? | | | | |]; inv H0; inv H1.",
            "VernacExtend",
            "4b1f399ab7c202797079c5a7822029c3489058bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negb_true: forall a, negb a = true -> a = false.",
            "VernacStartTheoremProof",
            "94ae1ab1e6ae55d501acb3180f15474e2dc12e88"
        ],
        [
            "intros; destruct a; auto; inv H.",
            "VernacExtend",
            "69cff34437e83058519f3000b95b6f1cf77994ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma typecheck_Oadd_sound: forall {CS: compspecs} (rho : environ) m (e1 e2 : expr) (t : type) (IBR: denote_tc_assert (isBinOpResultType Oadd e1 e2 t) rho m) (TV2: tc_val (typeof e2) (eval_expr e2 rho)) (TV1: tc_val (typeof e1) (eval_expr e1 rho)), tc_val t (eval_binop Oadd (typeof e1) (typeof e2) (eval_expr e1 rho) (eval_expr e2 rho)).",
            "VernacStartTheoremProof",
            "5e7691fb7df1e1069dff89f7ffcf2d4ef139668b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite den_isBinOpR in IBR.",
            "VernacExtend",
            "d6d8d48c59b265bcb0a73041478071056ed3d5c2"
        ],
        [
            "unfold tc_int_or_ptr_type, eval_binop, sem_binary_operation', isBinOpResultType, Clight_Cop2.sem_add in IBR |- *.",
            "VernacExtend",
            "9fd7101a31f44ad988f5be76fd5143394f210fba"
        ],
        [
            "rewrite classify_add_eq.",
            "VernacExtend",
            "9bb1322a17c1e6e3bbe396ba92922e3db844a560"
        ],
        [
            "destruct (classify_add' (typeof e1) (typeof e2)) eqn:?H; unfold force_val2, force_val; rewrite tc_val_tc_val_PM in TV1,TV2|-*; unfold classify_add' in H; simpl in IBR; repeat match goal with | H: _ /\\ _ |- _ => destruct H | H: app_pred (denote_tc_assert (tc_bool _ _) _) _ |- _ => apply tc_bool_e in H | H: negb (eqb_type ?A ?B) = true |- _ => let J := fresh \"J\" in destruct (eqb_type A B) eqn:J; [inv H | clear H] end; try solve [ unfold is_pointer_type in H1; destruct (typeof e1) as [| [| | |] ? ? | | [|] | | | | |]; inv TV1; destruct (typeof e2) as [| [| | |] ? ? | | [|] | | | | |]; inv TV2; simpl in H; inv H; try rewrite J in *; clear J; destruct (eval_expr e1 rho), (eval_expr e2 rho); simpl in *; try contradiction; destruct t; try solve [inv H1]; try solve [constructor; try rewrite (negb_true _ H1); apply I] ].",
            "VernacExtend",
            "4170da78955b142e3d0a81bafc7619ead508bbbc"
        ],
        [
            "rewrite denote_tc_assert_andp in IBR.",
            "VernacExtend",
            "58463373c313bb4b1a63aeeb3c4baf4ddb15aafa"
        ],
        [
            "destruct IBR.",
            "VernacExtend",
            "527c6ba0b8ac210d130253d0cc7a121b5fd61fea"
        ],
        [
            "rewrite <- tc_val_tc_val_PM in TV1,TV2|-*.",
            "VernacExtend",
            "872ce90af173cf2b767485562240b81d63d9d7fc"
        ],
        [
            "eapply tc_val_sem_binarith'; eauto.",
            "VernacExtend",
            "1a27069f4021f93fca46e95a4f899dc4c1ae4bd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma peq_eq_block: forall a b A (c d: A), is_true (peq a b) -> (if eq_block a b then c else d) = c.",
            "VernacStartTheoremProof",
            "eacd83da44ca34fcf2fa32b4c33be7fea3444e20"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite if_true; auto.",
            "VernacExtend",
            "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
        ],
        [
            "destruct (peq a b); auto.",
            "VernacExtend",
            "562a2141cf9fd5bbaf084042930d4568f8c07ed7"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma typecheck_Osub_sound: forall {CS: compspecs} (rho : environ) m (e1 e2 : expr) (t : type) (IBR: denote_tc_assert (isBinOpResultType Osub e1 e2 t) rho m) (TV2: tc_val (typeof e2) (eval_expr e2 rho)) (TV1: tc_val (typeof e1) (eval_expr e1 rho)), tc_val t (eval_binop Osub (typeof e1) (typeof e2) (eval_expr e1 rho) (eval_expr e2 rho)).",
            "VernacStartTheoremProof",
            "5aceefa28d1054007a3bf5d25318c4b1d6e277f0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite den_isBinOpR in IBR.",
            "VernacExtend",
            "d6d8d48c59b265bcb0a73041478071056ed3d5c2"
        ],
        [
            "unfold tc_int_or_ptr_type, eval_binop, sem_binary_operation', isBinOpResultType, Clight_Cop2.sem_sub in IBR |- *.",
            "VernacExtend",
            "e6d8d5cbd9f98856000d8c929552297f57002f97"
        ],
        [
            "rewrite classify_sub_eq.",
            "VernacExtend",
            "e6c7bb2d2f5244f053a7d2510e4087c53abd6f6a"
        ],
        [
            "destruct (classify_sub' (typeof e1) (typeof e2)) eqn:?H; unfold force_val2, force_val; rewrite tc_val_tc_val_PM in TV1,TV2|-*; unfold classify_sub' in H; simpl in IBR; repeat match goal with | H: _ /\\ _ |- _ => destruct H | H: app_pred (denote_tc_assert (tc_bool _ _) _) _ |- _ => apply tc_bool_e in H | H: negb (eqb_type ?A ?B) = true |- _ => let J := fresh \"J\" in destruct (eqb_type A B) eqn:J; [inv H | clear H] end; try solve [ unfold is_pointer_type in H1; destruct (typeof e1); inv TV1; destruct (typeof e2) as [| [| | |] [|] | | | | | | |]; inv TV2; simpl in H; inv H; try rewrite J in *; clear J; destruct (eval_expr e1 rho), (eval_expr e2 rho); simpl in *; try contradiction; destruct t; try solve [inv H1]; try solve [constructor; try rewrite (negb_true _ H1); apply I] ].",
            "VernacExtend",
            "4da7d4c063b702ba665cff906d15fe1aebf8b721"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (typeof e1); inv TV1; destruct (typeof e2); inv TV2; simpl in H; inv H; rewrite ?J, ?J0 in *; clear J J0; destruct (eval_expr e1 rho), (eval_expr e2 rho); simpl in *; try contradiction; destruct t as [| [| | |] [|] | | | | | | |]; inv H4; simpl; constructor; try (rewrite peq_eq_block by auto; rewrite sizeof_range_true by auto); try discriminate; try apply I.",
            "VernacExtend",
            "05c3dbfb54e399020acc2001f97c13b197fa75f3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- tc_val_tc_val_PM in TV1,TV2|-*.",
            "VernacExtend",
            "872ce90af173cf2b767485562240b81d63d9d7fc"
        ],
        [
            "rewrite denote_tc_assert_andp in IBR.",
            "VernacExtend",
            "58463373c313bb4b1a63aeeb3c4baf4ddb15aafa"
        ],
        [
            "destruct IBR.",
            "VernacExtend",
            "527c6ba0b8ac210d130253d0cc7a121b5fd61fea"
        ],
        [
            "eapply tc_val_sem_binarith'; eauto.",
            "VernacExtend",
            "1a27069f4021f93fca46e95a4f899dc4c1ae4bd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma typecheck_Omul_sound: forall {CS: compspecs} (rho : environ) m (e1 e2 : expr) (t : type) (IBR: denote_tc_assert (isBinOpResultType Omul e1 e2 t) rho m) (TV2: tc_val (typeof e2) (eval_expr e2 rho)) (TV1: tc_val (typeof e1) (eval_expr e1 rho)), tc_val t (eval_binop Omul (typeof e1) (typeof e2) (eval_expr e1 rho) (eval_expr e2 rho)).",
            "VernacStartTheoremProof",
            "ebf842755c660922d3c02363a2436c4747a949b9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite den_isBinOpR in IBR.",
            "VernacExtend",
            "d6d8d48c59b265bcb0a73041478071056ed3d5c2"
        ],
        [
            "unfold eval_binop, sem_binary_operation', isBinOpResultType, Clight_Cop2.sem_mul in IBR |- *.",
            "VernacExtend",
            "66c4000725b4b5684e6c448750cf8fba6b519e32"
        ],
        [
            "rewrite denote_tc_assert_andp in IBR.",
            "VernacExtend",
            "58463373c313bb4b1a63aeeb3c4baf4ddb15aafa"
        ],
        [
            "destruct IBR.",
            "VernacExtend",
            "527c6ba0b8ac210d130253d0cc7a121b5fd61fea"
        ],
        [
            "unfold force_val2, force_val.",
            "VernacExtend",
            "4d6f754d6c345a1ad6c32b108eec3ca5bfd303a2"
        ],
        [
            "eapply tc_val_sem_binarith'; eauto.",
            "VernacExtend",
            "1a27069f4021f93fca46e95a4f899dc4c1ae4bd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma typecheck_Odiv_sound: forall {CS: compspecs} (rho : environ) m (e1 e2 : expr) (t : type) (IBR: denote_tc_assert (isBinOpResultType Odiv e1 e2 t) rho m) (TV2: tc_val (typeof e2) (eval_expr e2 rho)) (TV1: tc_val (typeof e1) (eval_expr e1 rho)), tc_val t (eval_binop Odiv (typeof e1) (typeof e2) (eval_expr e1 rho) (eval_expr e2 rho)).",
            "VernacStartTheoremProof",
            "d00da2438eb6b1a1278aabfa062b9215fcdc5997"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite den_isBinOpR in IBR.",
            "VernacExtend",
            "d6d8d48c59b265bcb0a73041478071056ed3d5c2"
        ],
        [
            "unfold eval_binop, sem_binary_operation', isBinOpResultType, Clight_Cop2.sem_mul in IBR |- *.",
            "VernacExtend",
            "66c4000725b4b5684e6c448750cf8fba6b519e32"
        ],
        [
            "unfold force_val2, force_val.",
            "VernacExtend",
            "4d6f754d6c345a1ad6c32b108eec3ca5bfd303a2"
        ],
        [
            "eapply (tc_val_sem_binarith' _ _ _ _ _ _ _ _ _ _ _ rho m); eauto.",
            "VernacExtend",
            "5c614d2cab854d6a39d8a337248f47d759a43d65"
        ],
        [
            "unfold binarithType'.",
            "VernacExtend",
            "0b1c01a4ed6041e5324807bfb6f9c8fc90cc1897"
        ],
        [
            "destruct (classify_binarith' (typeof e1) (typeof e2)); eauto.",
            "VernacExtend",
            "ae37d9f45cd74de40110a9ddd86495f0b5b6c943"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct s; destruct IBR; eauto.",
            "VernacExtend",
            "701a547dc14cb827cdb56163f8edc316c1b9e2e1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct s; destruct IBR; eauto.",
            "VernacExtend",
            "701a547dc14cb827cdb56163f8edc316c1b9e2e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma typecheck_Omod_sound: forall {CS: compspecs} (rho : environ) m (e1 e2 : expr) (t : type) (IBR: denote_tc_assert (isBinOpResultType Omod e1 e2 t) rho m) (TV2: tc_val (typeof e2) (eval_expr e2 rho)) (TV1: tc_val (typeof e1) (eval_expr e1 rho)), tc_val t (eval_binop Omod (typeof e1) (typeof e2) (eval_expr e1 rho) (eval_expr e2 rho)).",
            "VernacStartTheoremProof",
            "db658980a962f5734d4dcdb3de78d423281ebebf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite den_isBinOpR in IBR.",
            "VernacExtend",
            "d6d8d48c59b265bcb0a73041478071056ed3d5c2"
        ],
        [
            "unfold eval_binop, sem_binary_operation', isBinOpResultType, Clight_Cop2.sem_mod in IBR |- *.",
            "VernacExtend",
            "59878afb12b1b62591f4e94b0248937a230ad69e"
        ],
        [
            "unfold force_val2, force_val.",
            "VernacExtend",
            "4d6f754d6c345a1ad6c32b108eec3ca5bfd303a2"
        ],
        [
            "unfold Clight_Cop2.sem_binarith.",
            "VernacExtend",
            "96b290f920fb6211bee2eb4fba6ecc29a9b0fc62"
        ],
        [
            "rewrite classify_binarith_eq.",
            "VernacExtend",
            "3235fa99c228c279afc2f3ba463b86c2fc234879"
        ],
        [
            "destruct (classify_binarith' (typeof e1) (typeof e2)) eqn:?H.",
            "VernacExtend",
            "f65c1916c117add1b03acd5aac092988ec286287"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H2, <- H0 in H; try solve [inv H]; try solve [destruct sz,sg; inv H].",
            "VernacExtend",
            "b757cf7c9e60aa29af1048decf2c208adc92ff10"
        ],
        [
            "destruct s; destruct IBR as [?IBR ?IBR].",
            "VernacExtend",
            "f2ea62df18a600e2cc9de769426e3846d67420a4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct IBR as [?IBR ?IBR].",
            "VernacExtend",
            "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
        ],
        [
            "apply tc_bool_e in IBR0.",
            "VernacExtend",
            "6e66402682109f8572a93b86f17de8962f47c311"
        ],
        [
            "simpl in IBR, IBR1 |- *; unfold_lift in IBR; unfold_lift in IBR1.",
            "VernacExtend",
            "6c5c19b8c11c1542ed0b7f4be0dc8810861f22c6"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3 | inv IBR].",
            "VernacExtend",
            "0d87c386a7a77bf4bdaf0c41e686724de5dd9f6d"
        ],
        [
            "unfold both_int; simpl.",
            "VernacExtend",
            "bd0e0abcb6abfb1f4eb30773ead5872b11daa67a"
        ],
        [
            "apply denote_tc_nonzero_e in IBR; try rewrite IBR.",
            "VernacExtend",
            "06b4fce05cb5b3ae37ae85c0b280e1f630d1bcb3"
        ],
        [
            "apply denote_tc_nodivover_e in IBR1; try rewrite IBR1.",
            "VernacExtend",
            "9c4c6b8ea86046ed7959c252f08bbd1b5066d834"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
        ],
        [
            "unfold Clight_Cop2.sem_cast, Clight_Cop2.classify_cast.",
            "VernacExtend",
            "38a89885306a7de02030910a763d6ec8ad9a8dcc"
        ],
        [
            "unfold sem_cast_pointer.",
            "VernacExtend",
            "ae700d3638ba3deec7e36b746dd48abc0ff65f3c"
        ],
        [
            "destruct Archi.ptr64; reflexivity.",
            "VernacExtend",
            "d5048ad5be09cc598b78fcb98d02a3582d005ba7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply tc_bool_e in IBR0.",
            "VernacExtend",
            "6e66402682109f8572a93b86f17de8962f47c311"
        ],
        [
            "simpl in IBR |- *; unfold_lift in IBR.",
            "VernacExtend",
            "cbb43a6ceac2de61af81619332a9ab6c253ecb16"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3 | inv IBR].",
            "VernacExtend",
            "0d87c386a7a77bf4bdaf0c41e686724de5dd9f6d"
        ],
        [
            "unfold both_int; simpl.",
            "VernacExtend",
            "bd0e0abcb6abfb1f4eb30773ead5872b11daa67a"
        ],
        [
            "apply denote_tc_nonzero_e in IBR; try rewrite IBR.",
            "VernacExtend",
            "06b4fce05cb5b3ae37ae85c0b280e1f630d1bcb3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
        ],
        [
            "unfold Clight_Cop2.sem_cast, Clight_Cop2.classify_cast.",
            "VernacExtend",
            "38a89885306a7de02030910a763d6ec8ad9a8dcc"
        ],
        [
            "unfold sem_cast_pointer.",
            "VernacExtend",
            "ae700d3638ba3deec7e36b746dd48abc0ff65f3c"
        ],
        [
            "destruct Archi.ptr64; reflexivity.",
            "VernacExtend",
            "d5048ad5be09cc598b78fcb98d02a3582d005ba7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H2, <- H0 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
            "VernacExtend",
            "0df84c21238529ee8db743e6efa8c260cbaed0ea"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s; destruct IBR as [?IBR ?IBR].",
            "VernacExtend",
            "f2ea62df18a600e2cc9de769426e3846d67420a4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct IBR as [?IBR ?IBR].",
            "VernacExtend",
            "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
        ],
        [
            "apply tc_bool_e in IBR0.",
            "VernacExtend",
            "6e66402682109f8572a93b86f17de8962f47c311"
        ],
        [
            "simpl in IBR, IBR1 |- *; unfold_lift in IBR; unfold_lift in IBR1.",
            "VernacExtend",
            "6c5c19b8c11c1542ed0b7f4be0dc8810861f22c6"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
            "VernacExtend",
            "f6445e3c420081a52f0aeb95db61d9886ca11750"
        ],
        [
            "unfold both_long; simpl.",
            "VernacExtend",
            "dabc15fbed49267aa0954ef168fde7a15448924c"
        ],
        [
            "apply denote_tc_nonzero_e64 in IBR; try rewrite IBR.",
            "VernacExtend",
            "412817a5bea2fb6cfbd674aaf583227501e42a29"
        ],
        [
            "apply (denote_tc_nodivover_e64_il sg) in IBR1; try rewrite IBR1.",
            "VernacExtend",
            "260a37b47f8604152b69f04d533b5ecd2941fe5a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply tc_bool_e in IBR0.",
            "VernacExtend",
            "6e66402682109f8572a93b86f17de8962f47c311"
        ],
        [
            "simpl in IBR |- *; unfold_lift in IBR.",
            "VernacExtend",
            "cbb43a6ceac2de61af81619332a9ab6c253ecb16"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3 | inv IBR].",
            "VernacExtend",
            "0d87c386a7a77bf4bdaf0c41e686724de5dd9f6d"
        ],
        [
            "unfold both_long; simpl.",
            "VernacExtend",
            "dabc15fbed49267aa0954ef168fde7a15448924c"
        ],
        [
            "apply denote_tc_nonzero_e64 in IBR; try rewrite IBR.",
            "VernacExtend",
            "412817a5bea2fb6cfbd674aaf583227501e42a29"
        ],
        [
            "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s; destruct IBR as [?IBR ?IBR].",
            "VernacExtend",
            "f2ea62df18a600e2cc9de769426e3846d67420a4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct IBR as [?IBR ?IBR].",
            "VernacExtend",
            "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
        ],
        [
            "apply tc_bool_e in IBR0.",
            "VernacExtend",
            "6e66402682109f8572a93b86f17de8962f47c311"
        ],
        [
            "simpl in IBR, IBR1 |- *; unfold_lift in IBR; unfold_lift in IBR1.",
            "VernacExtend",
            "6c5c19b8c11c1542ed0b7f4be0dc8810861f22c6"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
            "VernacExtend",
            "f6445e3c420081a52f0aeb95db61d9886ca11750"
        ],
        [
            "unfold both_long; simpl.",
            "VernacExtend",
            "dabc15fbed49267aa0954ef168fde7a15448924c"
        ],
        [
            "apply denote_tc_nonzero_e, (Int64_eq_repr_int_nonzero sg) in IBR; try rewrite IBR.",
            "VernacExtend",
            "b46b8a5e8fc93d6ef9d32fd97f96c7b423341c92"
        ],
        [
            "apply (denote_tc_nodivover_e64_li sg) in IBR1; try rewrite IBR1.",
            "VernacExtend",
            "450bc5848827c63ecd7be9da3c0bf4c6946c406d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply tc_bool_e in IBR0.",
            "VernacExtend",
            "6e66402682109f8572a93b86f17de8962f47c311"
        ],
        [
            "simpl in IBR |- *; unfold_lift in IBR.",
            "VernacExtend",
            "cbb43a6ceac2de61af81619332a9ab6c253ecb16"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3 | inv IBR].",
            "VernacExtend",
            "0d87c386a7a77bf4bdaf0c41e686724de5dd9f6d"
        ],
        [
            "unfold both_long; simpl.",
            "VernacExtend",
            "dabc15fbed49267aa0954ef168fde7a15448924c"
        ],
        [
            "apply denote_tc_nonzero_e, (Int64_eq_repr_int_nonzero sg) in IBR; try rewrite IBR.",
            "VernacExtend",
            "b46b8a5e8fc93d6ef9d32fd97f96c7b423341c92"
        ],
        [
            "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s; destruct IBR as [?IBR ?IBR].",
            "VernacExtend",
            "f2ea62df18a600e2cc9de769426e3846d67420a4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct IBR as [?IBR ?IBR].",
            "VernacExtend",
            "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
        ],
        [
            "apply tc_bool_e in IBR0.",
            "VernacExtend",
            "6e66402682109f8572a93b86f17de8962f47c311"
        ],
        [
            "simpl in IBR, IBR1 |- *; unfold_lift in IBR; unfold_lift in IBR1.",
            "VernacExtend",
            "6c5c19b8c11c1542ed0b7f4be0dc8810861f22c6"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
            "VernacExtend",
            "f6445e3c420081a52f0aeb95db61d9886ca11750"
        ],
        [
            "unfold both_long; simpl.",
            "VernacExtend",
            "dabc15fbed49267aa0954ef168fde7a15448924c"
        ],
        [
            "apply denote_tc_nonzero_e64 in IBR; try rewrite IBR.",
            "VernacExtend",
            "412817a5bea2fb6cfbd674aaf583227501e42a29"
        ],
        [
            "apply denote_tc_nodivover_e64_ll in IBR1; try rewrite IBR1.",
            "VernacExtend",
            "3fdff9505da6f6927523ad161d943d2b4d374b79"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply tc_bool_e in IBR0.",
            "VernacExtend",
            "6e66402682109f8572a93b86f17de8962f47c311"
        ],
        [
            "simpl in IBR |- *; unfold_lift in IBR.",
            "VernacExtend",
            "cbb43a6ceac2de61af81619332a9ab6c253ecb16"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3 | inv IBR].",
            "VernacExtend",
            "0d87c386a7a77bf4bdaf0c41e686724de5dd9f6d"
        ],
        [
            "unfold both_long; simpl.",
            "VernacExtend",
            "dabc15fbed49267aa0954ef168fde7a15448924c"
        ],
        [
            "apply denote_tc_nonzero_e64 in IBR; try rewrite IBR.",
            "VernacExtend",
            "412817a5bea2fb6cfbd674aaf583227501e42a29"
        ],
        [
            "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv IBR.",
            "VernacExtend",
            "f63b792365ff64742bdfaa409f37c2dd33f762c7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv IBR.",
            "VernacExtend",
            "f63b792365ff64742bdfaa409f37c2dd33f762c7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv IBR.",
            "VernacExtend",
            "f63b792365ff64742bdfaa409f37c2dd33f762c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma typecheck_Oshift_sound: forall op {CS: compspecs} (rho : environ) m (e1 e2 : expr) (t : type) (IBR: denote_tc_assert (isBinOpResultType op e1 e2 t) rho m) (TV2: tc_val (typeof e2) (eval_expr e2 rho)) (TV1: tc_val (typeof e1) (eval_expr e1 rho)) (OP: op = Oshl \\/ op = Oshr), tc_val t (eval_binop op (typeof e1) (typeof e2) (eval_expr e1 rho) (eval_expr e2 rho)).",
            "VernacStartTheoremProof",
            "da81b3973a51a4771efdb76d330ddee99b38b9ae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace ((denote_tc_assert (isBinOpResultType op e1 e2 t) rho) m) with ((denote_tc_assert match classify_shift' (typeof e1) (typeof e2) with | shift_case_ii _ => tc_andp' (tc_ilt' e2 Int.iwordsize) (tc_bool (is_int32_type t) (op_result_type (Ebinop op e1 e2 t))) | shift_case_il _ => tc_andp' (tc_llt' e2 (Int64.repr 32)) (tc_bool (is_int32_type t) (op_result_type (Ebinop op e1 e2 t))) | shift_case_li _ => tc_andp' (tc_ilt' e2 Int64.iwordsize') (tc_bool (is_long_type t) (op_result_type (Ebinop op e1 e2 t))) | shift_case_ll _ => tc_andp' (tc_llt' e2 Int64.iwordsize) (tc_bool (is_long_type t) (op_result_type (Ebinop op e1 e2 t))) | _ => tc_FF (arg_type (Ebinop op e1 e2 t)) end rho) m) in IBR by (rewrite den_isBinOpR; destruct OP; subst; auto).",
            "VernacExtend",
            "fa25b80808af0f765d3df07f788a727e15ef7ce5"
        ],
        [
            "destruct (classify_shift' (typeof e1) (typeof e2)) eqn:?H; try solve [inv IBR].",
            "VernacExtend",
            "49ff37f7004c48193c76211bb35bfcef47fcdd2e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct IBR as [?IBR ?IBR].",
            "VernacExtend",
            "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
        ],
        [
            "apply tc_bool_e in IBR0.",
            "VernacExtend",
            "6e66402682109f8572a93b86f17de8962f47c311"
        ],
        [
            "simpl in IBR; unfold_lift in IBR.",
            "VernacExtend",
            "661737d6a5e9c6061595c6858d1d5bda5affdc2f"
        ],
        [
            "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H0, <- H2 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
            "VernacExtend",
            "6b20d42c143803bfc686252c7c724033502cb2d6"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
            "VernacExtend",
            "f6445e3c420081a52f0aeb95db61d9886ca11750"
        ],
        [
            "destruct OP; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_shift; rewrite classify_shift_eq, H; simpl.",
            "VernacExtend",
            "574eae6dce1de8fdec362f022d641ef601ede20e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct IBR as [?IBR ?IBR].",
            "VernacExtend",
            "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
        ],
        [
            "apply tc_bool_e in IBR0.",
            "VernacExtend",
            "6e66402682109f8572a93b86f17de8962f47c311"
        ],
        [
            "simpl in IBR; unfold_lift in IBR.",
            "VernacExtend",
            "661737d6a5e9c6061595c6858d1d5bda5affdc2f"
        ],
        [
            "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H0, <- H2 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
            "VernacExtend",
            "6b20d42c143803bfc686252c7c724033502cb2d6"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
            "VernacExtend",
            "f6445e3c420081a52f0aeb95db61d9886ca11750"
        ],
        [
            "destruct OP; subst; auto; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "609a68b13b08a50ccbe95b89379a3da5a4f28013"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct IBR as [?IBR ?IBR].",
            "VernacExtend",
            "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
        ],
        [
            "apply tc_bool_e in IBR0.",
            "VernacExtend",
            "6e66402682109f8572a93b86f17de8962f47c311"
        ],
        [
            "simpl in IBR; unfold_lift in IBR.",
            "VernacExtend",
            "661737d6a5e9c6061595c6858d1d5bda5affdc2f"
        ],
        [
            "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H0, <- H2 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
            "VernacExtend",
            "6b20d42c143803bfc686252c7c724033502cb2d6"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
            "VernacExtend",
            "f6445e3c420081a52f0aeb95db61d9886ca11750"
        ],
        [
            "destruct OP; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_shift; rewrite classify_shift_eq, H; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "9c70dde30a3e07eb52fa2053477a86899ee669fc"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct IBR as [?IBR ?IBR].",
            "VernacExtend",
            "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
        ],
        [
            "apply tc_bool_e in IBR0.",
            "VernacExtend",
            "6e66402682109f8572a93b86f17de8962f47c311"
        ],
        [
            "simpl in IBR; unfold_lift in IBR.",
            "VernacExtend",
            "661737d6a5e9c6061595c6858d1d5bda5affdc2f"
        ],
        [
            "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H0, <- H2 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
            "VernacExtend",
            "6b20d42c143803bfc686252c7c724033502cb2d6"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
            "VernacExtend",
            "f6445e3c420081a52f0aeb95db61d9886ca11750"
        ],
        [
            "destruct OP; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_shift; rewrite classify_shift_eq, H; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
            "VernacExtend",
            "9c70dde30a3e07eb52fa2053477a86899ee669fc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma typecheck_Obin_sound: forall op {CS: compspecs} (rho : environ) m (e1 e2 : expr) (t : type) (IBR: denote_tc_assert (isBinOpResultType op e1 e2 t) rho m) (TV2: tc_val (typeof e2) (eval_expr e2 rho)) (TV1: tc_val (typeof e1) (eval_expr e1 rho)) (OP: op = Oand \\/ op = Oor \\/ op = Oxor), tc_val t (eval_binop op (typeof e1) (typeof e2) (eval_expr e1 rho) (eval_expr e2 rho)).",
            "VernacStartTheoremProof",
            "00481aa4fc84bc54f15e13a0e37191db078c0bbc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace ((denote_tc_assert (isBinOpResultType op e1 e2 t) rho) m) with ((denote_tc_assert match classify_binarith' (typeof e1) (typeof e2) with | bin_case_i _ => tc_bool (is_int32_type t) (op_result_type (Ebinop op e1 e2 t)) | bin_case_l _ => tc_bool (is_long_type t) (op_result_type (Ebinop op e1 e2 t)) | _ => tc_FF (arg_type (Ebinop op e1 e2 t)) end rho) m) in IBR by (rewrite den_isBinOpR; destruct OP as [| [ | ]]; subst; auto).",
            "VernacExtend",
            "1d8bd76500d17867243b26e21673b01c301d0f19"
        ],
        [
            "destruct (classify_binarith' (typeof e1) (typeof e2)) eqn:?H; try solve [inv IBR].",
            "VernacExtend",
            "eca97cd9f9c285bb0c963380ef9041609acd80d2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply tc_bool_e in IBR.",
            "VernacExtend",
            "92a1b8e15980da380d06abfa46f42cf9f3fdd393"
        ],
        [
            "simpl in IBR; unfold_lift in IBR.",
            "VernacExtend",
            "661737d6a5e9c6061595c6858d1d5bda5affdc2f"
        ],
        [
            "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H0, <- H2 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
            "VernacExtend",
            "6b20d42c143803bfc686252c7c724033502cb2d6"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
            "VernacExtend",
            "f6445e3c420081a52f0aeb95db61d9886ca11750"
        ],
        [
            "clear e1 e2 H0 H2.",
            "VernacExtend",
            "0ee7e3f56b64e54f72dac8ddeb902567734b9f38"
        ],
        [
            "destruct OP as [| [|]]; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_and, Clight_Cop2.sem_or, Clight_Cop2.sem_xor, Clight_Cop2.sem_binarith; rewrite classify_binarith_eq, H; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR]; simpl; auto; unfold both_int, Clight_Cop2.sem_cast, Clight_Cop2.classify_cast, sem_cast_pointer; destruct Archi.ptr64; reflexivity.",
            "VernacExtend",
            "7abfe53e58c9e854c5152377ca89f59f9c646dc3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply tc_bool_e in IBR.",
            "VernacExtend",
            "92a1b8e15980da380d06abfa46f42cf9f3fdd393"
        ],
        [
            "simpl in IBR; unfold_lift in IBR.",
            "VernacExtend",
            "661737d6a5e9c6061595c6858d1d5bda5affdc2f"
        ],
        [
            "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H0, <- H2 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
            "VernacExtend",
            "6b20d42c143803bfc686252c7c724033502cb2d6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
            "VernacExtend",
            "f6445e3c420081a52f0aeb95db61d9886ca11750"
        ],
        [
            "destruct OP as [| [|]]; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_and, Clight_Cop2.sem_or, Clight_Cop2.sem_xor, Clight_Cop2.sem_binarith; rewrite classify_binarith_eq, H; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR]; simpl; auto.",
            "VernacExtend",
            "c58ce94f0dc5837bd3a40244d60f8a820af66630"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
            "VernacExtend",
            "f6445e3c420081a52f0aeb95db61d9886ca11750"
        ],
        [
            "destruct OP as [| [|]]; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_and, Clight_Cop2.sem_or, Clight_Cop2.sem_xor, Clight_Cop2.sem_binarith; rewrite classify_binarith_eq, H; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR]; simpl; auto.",
            "VernacExtend",
            "c58ce94f0dc5837bd3a40244d60f8a820af66630"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
            "VernacExtend",
            "f6445e3c420081a52f0aeb95db61d9886ca11750"
        ],
        [
            "destruct OP as [| [|]]; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_and, Clight_Cop2.sem_or, Clight_Cop2.sem_xor, Clight_Cop2.sem_binarith; rewrite classify_binarith_eq, H; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR]; simpl; auto.",
            "VernacExtend",
            "c58ce94f0dc5837bd3a40244d60f8a820af66630"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "denote_tc_nonzero_e",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "simpl; auto .",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_nodivover_e",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_nonzero_e64",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_nodivover_e64_ll",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_nodivover_e64_il",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "simpl; intros.",
                        "VernacExtend",
                        "429a59199da524088af55673600740ccc58db31e"
                    ]
                },
                {
                    "command": [
                        "intros [? ?].",
                        "VernacExtend",
                        "103d05a036b9ac75a805207998e1c61f7a0137bb"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "destruct s; simpl in *.",
                        "VernacExtend",
                        "9b53faeb6557a88096b1512ec5e13f08ce211921"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pose proof (@f_equal _ _ Int64.signed _ _ H0).",
                        "VernacExtend",
                        "d01f121bc5cd810ab25e25c7476b989f08031084"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.signed_repr in H1.",
                        "VernacExtend",
                        "63cde63ef6e73a4a8511709cdeb9a86b0be2acb5"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.signed_repr in H1.",
                        "VernacExtend",
                        "63cde63ef6e73a4a8511709cdeb9a86b0be2acb5"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.signed_range i).",
                        "VernacExtend",
                        "dfeaa40ebd710d23cf2d404288929fc34638b6d5"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H2.",
                        "VernacExtend",
                        "3ddaddaf8f89728f77671f580e26162e25035230"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "compute in H2.",
                        "VernacExtend",
                        "7211b392316dd70a6982bd2611971f542f675139"
                    ]
                },
                {
                    "command": [
                        "apply H2; auto.",
                        "VernacExtend",
                        "30acbf5144f9dcdba4f738b81d251d83daba847e"
                    ]
                },
                {
                    "command": [
                        "compute; split; congruence.",
                        "VernacExtend",
                        "517f1ce8e92821ec4becfa3932170bc49c560d15"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.signed_range i).",
                        "VernacExtend",
                        "dfeaa40ebd710d23cf2d404288929fc34638b6d5"
                    ]
                },
                {
                    "command": [
                        "clear - H2.",
                        "VernacExtend",
                        "df3dc56b8cb8ec54f9503844cf7d5b731417589e"
                    ]
                },
                {
                    "command": [
                        "forget (Int.signed i) as a.",
                        "VernacExtend",
                        "5d2894024dd4ff31b9183a2c5806088781dafecf"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "split; eapply Z.le_trans; try eassumption.",
                        "VernacExtend",
                        "20d422e4a3633fbf21f8548f2ae4aa6cb34b8bdb"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pose proof (@f_equal _ _ Int64.unsigned _ _ H0).",
                        "VernacExtend",
                        "da9f9440229191c96af5e6196a4b540a37aea071"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.unsigned_repr in H1.",
                        "VernacExtend",
                        "81b6861b22f7a81ca08d31235ec331f2c7a17f18"
                    ]
                },
                {
                    "command": [
                        "replace (Int64.repr Int64.min_signed) with (Int64.repr (Int64.modulus + Int64.min_signed)) in H1.",
                        "VernacExtend",
                        "dde8939e0d88a48c8135da4fd19d65499274d1a9"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.unsigned_repr in H1.",
                        "VernacExtend",
                        "81b6861b22f7a81ca08d31235ec331f2c7a17f18"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range i).",
                        "VernacExtend",
                        "c3a9e19e3d86215533851fab70582d6c3a47266e"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H2.",
                        "VernacExtend",
                        "3ddaddaf8f89728f77671f580e26162e25035230"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "compute in H2.",
                        "VernacExtend",
                        "7211b392316dd70a6982bd2611971f542f675139"
                    ]
                },
                {
                    "command": [
                        "apply H2; auto.",
                        "VernacExtend",
                        "30acbf5144f9dcdba4f738b81d251d83daba847e"
                    ]
                },
                {
                    "command": [
                        "compute; split; congruence.",
                        "VernacExtend",
                        "517f1ce8e92821ec4becfa3932170bc49c560d15"
                    ]
                },
                {
                    "command": [
                        "apply Int64.eqm_samerepr.",
                        "VernacExtend",
                        "85a89829e8c5cea7f3400344fa98b5f5fa0c5113"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.add_0_l.",
                        "VernacExtend",
                        "381dfa3dceaf45eaf5b9b41c17a9153278f01376"
                    ]
                },
                {
                    "command": [
                        "apply Int64.eqm_add.",
                        "VernacExtend",
                        "d3492f198e4e1b2293713ebd4bae84d20b36d50b"
                    ]
                },
                {
                    "command": [
                        "unfold Int64.eqm.",
                        "VernacExtend",
                        "595ba0e754a5e7631c95489ec76cc6424ca653a8"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply Int64.eqm_refl.",
                        "VernacExtend",
                        "2ce6af83c842c61dd1a2925840bd1a55a5066660"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range i).",
                        "VernacExtend",
                        "c3a9e19e3d86215533851fab70582d6c3a47266e"
                    ]
                },
                {
                    "command": [
                        "destruct H; split; auto.",
                        "VernacExtend",
                        "6b0b617ec55939190e129ebd913eb5389aac7738"
                    ]
                },
                {
                    "command": [
                        "assert (Int.modulus < Int64.max_unsigned).",
                        "VernacExtend",
                        "0521ad8b580f868ee7da9b39330ab4e862cbdb42"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_nodivover_e64_li",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "simpl; intros.",
                        "VernacExtend",
                        "429a59199da524088af55673600740ccc58db31e"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "destruct H; split; auto.",
                        "VernacExtend",
                        "6b0b617ec55939190e129ebd913eb5389aac7738"
                    ]
                },
                {
                    "command": [
                        "clear - H0.",
                        "VernacExtend",
                        "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
                    ]
                },
                {
                    "command": [
                        "destruct s; simpl in *.",
                        "VernacExtend",
                        "9b53faeb6557a88096b1512ec5e13f08ce211921"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold Int64.mone in H0.",
                        "VernacExtend",
                        "81a2f7fca8c9c65fc110334f51eede572fd146bc"
                    ]
                },
                {
                    "command": [
                        "pose proof (@f_equal _ _ Int64.signed _ _ H0).",
                        "VernacExtend",
                        "d01f121bc5cd810ab25e25c7476b989f08031084"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.signed_repr in H.",
                        "VernacExtend",
                        "1a10e017de2907ef4750b3a3bfe79324e0bede6c"
                    ]
                },
                {
                    "command": [
                        "change (Int.signed j = -1) in H.",
                        "VernacExtend",
                        "e1092e1bc4403cf9af5cf79e9fbc53758a9ffd44"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_signed j).",
                        "VernacExtend",
                        "3baa6fcf8e2581f80190d0ebf54a913a603e3275"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.signed_range j).",
                        "VernacExtend",
                        "df55dce8e8406a9286377edfafbcf468e4e4abe3"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "split; eapply Z.le_trans; try eassumption.",
                        "VernacExtend",
                        "20d422e4a3633fbf21f8548f2ae4aa6cb34b8bdb"
                    ]
                },
                {
                    "command": [
                        "compute.",
                        "VernacExtend",
                        "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "compute.",
                        "VernacExtend",
                        "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold Int64.mone in H0.",
                        "VernacExtend",
                        "81a2f7fca8c9c65fc110334f51eede572fd146bc"
                    ]
                },
                {
                    "command": [
                        "pose proof (@f_equal _ _ Int64.signed _ _ H0).",
                        "VernacExtend",
                        "d01f121bc5cd810ab25e25c7476b989f08031084"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.signed_repr in H.",
                        "VernacExtend",
                        "1a10e017de2907ef4750b3a3bfe79324e0bede6c"
                    ]
                },
                {
                    "command": [
                        "change (Int.unsigned j = -1) in H.",
                        "VernacExtend",
                        "50b3d07cc851f1c718cb5a3c9275c2c1a99fe9e0"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range j).",
                        "VernacExtend",
                        "7f9c9f9a6144f3477751c167e2ca3555ea85ea85"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "compute in H0.",
                        "VernacExtend",
                        "31905ff4f9d27a1820066eabc95ac22c45a4c7f3"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range j).",
                        "VernacExtend",
                        "7f9c9f9a6144f3477751c167e2ca3555ea85ea85"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply Z.le_trans; try eassumption.",
                        "VernacExtend",
                        "3f1c57239626dd4aea1f79a66b7a4132269b1ca6"
                    ]
                },
                {
                    "command": [
                        "compute.",
                        "VernacExtend",
                        "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "assert (Int.modulus < Int64.max_signed).",
                        "VernacExtend",
                        "6802d4db1f761b32ecc7f7c277300431e0c828f9"
                    ]
                },
                {
                    "command": [
                        "compute.",
                        "VernacExtend",
                        "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Int64_eq_repr_signed32_nonzero",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "rename H into H0.",
                        "VernacExtend",
                        "8d51167a54038a370507e0578c03218695c402d3"
                    ]
                },
                {
                    "command": [
                        "unfold Int64.zero in H0.",
                        "VernacExtend",
                        "684b8f38f10493e4bb6a7ca855eb867bee19827d"
                    ]
                },
                {
                    "command": [
                        "assert (Int64.signed (Int64.repr (Int.signed i)) = Int64.signed (Int64.repr 0)) by (f_equal; auto).",
                        "VernacExtend",
                        "660664d48cf4c43bfba508ae7fedd7a4536db807"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.signed_repr in H.",
                        "VernacExtend",
                        "1a10e017de2907ef4750b3a3bfe79324e0bede6c"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.signed_repr in H.",
                        "VernacExtend",
                        "1a10e017de2907ef4750b3a3bfe79324e0bede6c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_signed i).",
                        "VernacExtend",
                        "58865f3753a075ce3387e2d56907cbd92515e439"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.signed_range Int64.zero).",
                        "VernacExtend",
                        "29154258cbf4afa6bb112ef6fbc036ee78bb5689"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.signed_zero in H1.",
                        "VernacExtend",
                        "afb94f0449d967e724762ef9102699e7d8f5f090"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.signed_range i).",
                        "VernacExtend",
                        "dfeaa40ebd710d23cf2d404288929fc34638b6d5"
                    ]
                },
                {
                    "command": [
                        "clear - H1.",
                        "VernacExtend",
                        "a97560cbbe2cd31ef128e29a3cf251870622f56a"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_trans with Int.min_signed; auto.",
                        "VernacExtend",
                        "e7063a53e1c0e77addad88e9aac4fbc7bcf275fb"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_trans with Int.max_signed; auto.",
                        "VernacExtend",
                        "545083ef57db4400d68f486ce23291f790618be8"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Int64_eq_repr_unsigned32_nonzero",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rename H into H0.",
                        "VernacExtend",
                        "8d51167a54038a370507e0578c03218695c402d3"
                    ]
                },
                {
                    "command": [
                        "contradict H0.",
                        "VernacExtend",
                        "e9276d92c17ea182f1ef13aa74464b33eea923d9"
                    ]
                },
                {
                    "command": [
                        "unfold Int64.zero in H0.",
                        "VernacExtend",
                        "684b8f38f10493e4bb6a7ca855eb867bee19827d"
                    ]
                },
                {
                    "command": [
                        "assert (Int64.unsigned (Int64.repr (Int.unsigned i)) = Int64.unsigned (Int64.repr 0)) by (f_equal; auto).",
                        "VernacExtend",
                        "50cbc4d3a841a6cf8900e46ee2d8a21dd2a69e66"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.unsigned_repr in H.",
                        "VernacExtend",
                        "82f5825f2b9d21841bbdcf4becf4e8486c48f8e1"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.unsigned_repr in H.",
                        "VernacExtend",
                        "82f5825f2b9d21841bbdcf4becf4e8486c48f8e1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_unsigned i).",
                        "VernacExtend",
                        "2c5606931407d1321e14855ad7036622fefd27ca"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "split; compute; congruence.",
                        "VernacExtend",
                        "a66896a3eebf884657a87b63af6dc274a3ce1b39"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range i).",
                        "VernacExtend",
                        "c3a9e19e3d86215533851fab70582d6c3a47266e"
                    ]
                },
                {
                    "command": [
                        "clear - H1.",
                        "VernacExtend",
                        "a97560cbbe2cd31ef128e29a3cf251870622f56a"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "unfold Int64.max_unsigned.",
                        "VernacExtend",
                        "972eb9a40f51d24a1eb5af2883a7df6b5ca86927"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_trans with Int.modulus.",
                        "VernacExtend",
                        "b3dec4b15270a443cdddb1f623a47bc020ba8614"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "compute; congruence.",
                        "VernacExtend",
                        "1a58589b5617513e16966c72a14aa8b5277b9c28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Int64_eq_repr_int_nonzero",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct s.",
                        "VernacExtend",
                        "25b900e268e7851d959aa45edce33af62b3fca65"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Int64_eq_repr_signed32_nonzero; auto.",
                        "VernacExtend",
                        "37906b777c77bfb2ffd54333693956e272e8d259"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Int64_eq_repr_unsigned32_nonzero; auto.",
                        "VernacExtend",
                        "27a06aa0cb3fe2266dae219581a55674f8794b30"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_igt_e",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_lgt_e",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_iszero_long_e",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "hnf in H.",
                        "VernacExtend",
                        "b998e5ae98dd847416f4f194f30407c3597ea052"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.eq_spec i Int64.zero).",
                        "VernacExtend",
                        "b3dc4348affea34bc0347c9511c363397279ed3d"
                    ]
                },
                {
                    "command": [
                        "destruct (Int64.eq i Int64.zero); try contradiction.",
                        "VernacExtend",
                        "5464171cb128c24348c2bec014acd3fb0fbbeb5a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_type_tc_val_Vtrue",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] [|] | | | | | | |]; try discriminate; hnf; auto.",
                        "VernacExtend",
                        "f637f57b6fdca49e76f4cccb92e9625c032f36b7"
                    ]
                },
                {
                    "command": [
                        "change (Int.signed Int.one) with 1.",
                        "VernacExtend",
                        "c3b471446eba5532dd7567cdc16e4dbd0245d8cb"
                    ]
                },
                {
                    "command": [
                        "change Byte.min_signed with (-128).",
                        "VernacExtend",
                        "6d6fc28e04af5ceb612de8c5dea46b87bb583287"
                    ]
                },
                {
                    "command": [
                        "change Byte.max_signed with 127.",
                        "VernacExtend",
                        "6c220946163b2a1ee178140c9e9b9f9fbe39f39f"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "change (Int.signed Int.one) with 1.",
                        "VernacExtend",
                        "c3b471446eba5532dd7567cdc16e4dbd0245d8cb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_type_tc_val_Vfalse",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] [|] | | | | | | |]; try discriminate; hnf; auto; change (Int.signed Int.zero) with 0.",
                        "VernacExtend",
                        "cca07f05ad702fa8629d4fb34599401e41e30e5f"
                    ]
                },
                {
                    "command": [
                        "change Byte.min_signed with (-128).",
                        "VernacExtend",
                        "6d6fc28e04af5ceb612de8c5dea46b87bb583287"
                    ]
                },
                {
                    "command": [
                        "change Byte.max_signed with 127.",
                        "VernacExtend",
                        "6c220946163b2a1ee178140c9e9b9f9fbe39f39f"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "int_type_tc_val_of_bool",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] [|] | | | | | | |]; try discriminate; hnf; auto; clear H; destruct b; simpl; auto; change (Int.signed Int.one) with 1; change (Int.signed Int.zero) with 0; change (Int.unsigned Int.one) with 1; change (Int.unsigned Int.zero) with 0; change Byte.min_signed with (-128); change Byte.max_signed with 127; change Byte.max_unsigned with 255; try omega.",
                        "VernacExtend",
                        "1e315a88031949019a102d5ebb674b9dcdd8e923"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ptrofs_to_of64_lemma",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.of_int64, Ptrofs.to_int.",
                        "VernacExtend",
                        "c2c8471ee6c0544e9ce7447753de3cd4d553e6cf"
                    ]
                },
                {
                    "command": [
                        "pose proof (Ptrofs.agree32_repr H (Int64.unsigned i)).",
                        "VernacExtend",
                        "f4cf2fe4f2918bc6d30993a0f25745235d90d99d"
                    ]
                },
                {
                    "command": [
                        "red in H0.",
                        "VernacExtend",
                        "3e33e4fdada8386783e8311d1d4116d148279cb2"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "apply Int.repr_unsigned.",
                        "VernacExtend",
                        "b3d43aae5f6f402bb1c3d022281cbe34cf2ae2f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Int64repr_Intsigned_zero",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.eq_spec i Int.zero).",
                        "VernacExtend",
                        "3b2106a3bbae9a09bba923f16dd640fd9f692110"
                    ]
                },
                {
                    "command": [
                        "destruct (Int.eq i Int.zero) eqn:?; auto.",
                        "VernacExtend",
                        "78122b65b59d2e3f7938c1ee6080dc3d4563968d"
                    ]
                },
                {
                    "command": [
                        "apply Int64_eq_repr_signed32_nonzero in H0.",
                        "VernacExtend",
                        "a3f7efc4ad4558399cbed7cd794db5fca60c20d5"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Int64repr_Intunsigned_zero",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.eq_spec i Int.zero).",
                        "VernacExtend",
                        "3b2106a3bbae9a09bba923f16dd640fd9f692110"
                    ]
                },
                {
                    "command": [
                        "destruct (Int.eq i Int.zero) eqn:?; auto.",
                        "VernacExtend",
                        "78122b65b59d2e3f7938c1ee6080dc3d4563968d"
                    ]
                },
                {
                    "command": [
                        "apply Int64_eq_repr_unsigned32_nonzero in H0.",
                        "VernacExtend",
                        "546d3e1ba779141e6ee50db0e15e7d2fdba60270"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_block_true",
            "line_nb": 229,
            "steps": [
                {
                    "command": [
                        "unfold sameblock, eq_block.",
                        "VernacExtend",
                        "b24f35de5a66d939d46821d27fd38c6eb5684d23"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_true_e in H.",
                        "VernacExtend",
                        "4fca6b2a96e6796231b5b2e59ade3187123aeeae"
                    ]
                },
                {
                    "command": [
                        "destruct (peq b1 b2); auto.",
                        "VernacExtend",
                        "a4985db4f5d7596e66184b56d780834e41396b71"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sizeof_range_true",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_true_iff in H.",
                        "VernacExtend",
                        "24fac8337821d0ffbce5aaf906e263bfd5955048"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.eqb_neq in H.",
                        "VernacExtend",
                        "9db364e8d26ba05f430cb4e0158619dc17440005"
                    ]
                },
                {
                    "command": [
                        "pose proof sizeof_pos t.",
                        "VernacExtend",
                        "ae8d041da01ea19d95abbe7523653584bc09ad50"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zle_is_le_bool in H0.",
                        "VernacExtend",
                        "9edbd515f0b646db73e0160d6c7e498c2e6fbd50"
                    ]
                },
                {
                    "command": [
                        "destruct (zlt 0 (sizeof t)); [| omega].",
                        "VernacExtend",
                        "a12a1d601b377bff7e9429cfe51749071321b1a6"
                    ]
                },
                {
                    "command": [
                        "destruct (zle (sizeof t) max); [| omega].",
                        "VernacExtend",
                        "61393c7f9d9f17c29371e401b5c9cf337339fddd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_val_tc_val_PM",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| | | [ | ] ? | | | | |]; try (inv H); constructor; auto.",
                        "VernacExtend",
                        "8c58e10cabbdfdb7de356511000726fcdb7df4a0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst; auto.",
                        "VernacExtend",
                        "3ac5a8efa0f6861868f1bfc9ce7119d14816504c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_val_tc_val_PM'",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| | | [ | ] ? | | | | |]; try (inv H).",
                        "VernacExtend",
                        "2ae5d27713c22d1c2724383dabbf28b5664e86b2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct s; eapply tc_val_PM'_Tint; eauto.",
                        "VernacExtend",
                        "b1f4364b6b4ec7937876ff1cbc0298f34cb22419"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply tc_val_PM'_Tlong; eauto; reflexivity.",
                        "VernacExtend",
                        "f2ca9b76e78a2b50808577ec40274e44d0969580"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply tc_val_PM'_Tfloat_single; eauto; reflexivity.",
                        "VernacExtend",
                        "97026ed5159254d186ff06e4c0e2fa0e3df25d6e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply tc_val_PM'_Tfloat_double; eauto; reflexivity.",
                        "VernacExtend",
                        "613cf11063478714530338fe17d75b9af4f6a4bb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply tc_val_PM'_Tpointer; eauto; reflexivity.",
                        "VernacExtend",
                        "b3406377b0f4576b2cc07703cd57fdcc5210a44f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply tc_val_PM'_Tpointer; eauto; reflexivity.",
                        "VernacExtend",
                        "b3406377b0f4576b2cc07703cd57fdcc5210a44f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply tc_val_PM'_Tpointer; eauto; reflexivity.",
                        "VernacExtend",
                        "b3406377b0f4576b2cc07703cd57fdcc5210a44f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply tc_val_PM'_Tstruct; eauto; reflexivity.",
                        "VernacExtend",
                        "d82a1da38e3f595c73374df31f71dbedd86a3522"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply tc_val_PM'_Tunion; eauto; reflexivity.",
                        "VernacExtend",
                        "829fdc38be9d3ef2fb352cbc1764e8ef9e2c5a0f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst; auto; destruct t as [| | | [ | ] ? | | | | |]; try (inv H0); auto.",
                        "VernacExtend",
                        "833c8e43135b07cd70f0579d7e127b52db77957a"
                    ]
                },
                {
                    "command": [
                        "destruct i; inv H3.",
                        "VernacExtend",
                        "867d2576b5d83284033cf04fa8476ef9da9bd5e9"
                    ]
                },
                {
                    "command": [
                        "destruct i; inv H3.",
                        "VernacExtend",
                        "867d2576b5d83284033cf04fa8476ef9da9bd5e9"
                    ]
                },
                {
                    "command": [
                        "destruct i; inv H3.",
                        "VernacExtend",
                        "867d2576b5d83284033cf04fa8476ef9da9bd5e9"
                    ]
                },
                {
                    "command": [
                        "destruct i; inv H3.",
                        "VernacExtend",
                        "867d2576b5d83284033cf04fa8476ef9da9bd5e9"
                    ]
                },
                {
                    "command": [
                        "destruct i0; inv H3.",
                        "VernacExtend",
                        "24132eaec9524a0daf2a0ab7117055628a1a9610"
                    ]
                },
                {
                    "command": [
                        "destruct i0; inv H3.",
                        "VernacExtend",
                        "24132eaec9524a0daf2a0ab7117055628a1a9610"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tc_val_sem_binarith'",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold binarithType' in H.",
                        "VernacExtend",
                        "ce4eb6b46ce62c63b92adfbf94aa91dd91224832"
                    ]
                },
                {
                    "command": [
                        "unfold Clight_Cop2.sem_binarith.",
                        "VernacExtend",
                        "96b290f920fb6211bee2eb4fba6ecc29a9b0fc62"
                    ]
                },
                {
                    "command": [
                        "rewrite classify_binarith_eq.",
                        "VernacExtend",
                        "3235fa99c228c279afc2f3ba463b86c2fc234879"
                    ]
                },
                {
                    "command": [
                        "destruct (classify_binarith' t1 t2) eqn:?H; try solve [inv H]; apply tc_bool_e in H; destruct t1 as [| [| | |] [|] | | [ | ] ? | | | | |]; try discriminate H0; destruct t2 as [| [| | |] [|] | | [ | ] ? | | | | |]; try inv H0; try contradiction; destruct v1; try solve [inv TV1]; destruct v2; try solve [inv TV2]; destruct t as [| [| | |] [|] ? | | [|] | | | | |]; inv H; simpl; auto; apply I.",
                        "VernacExtend",
                        "848a88cdf293f08b0851aa0a34a7be02e9d54323"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negb_true",
            "line_nb": 306,
            "steps": [
                {
                    "command": [
                        "intros; destruct a; auto; inv H.",
                        "VernacExtend",
                        "69cff34437e83058519f3000b95b6f1cf77994ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "typecheck_Oadd_sound",
            "line_nb": 309,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite den_isBinOpR in IBR.",
                        "VernacExtend",
                        "d6d8d48c59b265bcb0a73041478071056ed3d5c2"
                    ]
                },
                {
                    "command": [
                        "unfold tc_int_or_ptr_type, eval_binop, sem_binary_operation', isBinOpResultType, Clight_Cop2.sem_add in IBR |- *.",
                        "VernacExtend",
                        "9fd7101a31f44ad988f5be76fd5143394f210fba"
                    ]
                },
                {
                    "command": [
                        "rewrite classify_add_eq.",
                        "VernacExtend",
                        "9bb1322a17c1e6e3bbe396ba92922e3db844a560"
                    ]
                },
                {
                    "command": [
                        "destruct (classify_add' (typeof e1) (typeof e2)) eqn:?H; unfold force_val2, force_val; rewrite tc_val_tc_val_PM in TV1,TV2|-*; unfold classify_add' in H; simpl in IBR; repeat match goal with | H: _ /\\ _ |- _ => destruct H | H: app_pred (denote_tc_assert (tc_bool _ _) _) _ |- _ => apply tc_bool_e in H | H: negb (eqb_type ?A ?B) = true |- _ => let J := fresh \"J\" in destruct (eqb_type A B) eqn:J; [inv H | clear H] end; try solve [ unfold is_pointer_type in H1; destruct (typeof e1) as [| [| | |] ? ? | | [|] | | | | |]; inv TV1; destruct (typeof e2) as [| [| | |] ? ? | | [|] | | | | |]; inv TV2; simpl in H; inv H; try rewrite J in *; clear J; destruct (eval_expr e1 rho), (eval_expr e2 rho); simpl in *; try contradiction; destruct t; try solve [inv H1]; try solve [constructor; try rewrite (negb_true _ H1); apply I] ].",
                        "VernacExtend",
                        "4170da78955b142e3d0a81bafc7619ead508bbbc"
                    ]
                },
                {
                    "command": [
                        "rewrite denote_tc_assert_andp in IBR.",
                        "VernacExtend",
                        "58463373c313bb4b1a63aeeb3c4baf4ddb15aafa"
                    ]
                },
                {
                    "command": [
                        "destruct IBR.",
                        "VernacExtend",
                        "527c6ba0b8ac210d130253d0cc7a121b5fd61fea"
                    ]
                },
                {
                    "command": [
                        "rewrite <- tc_val_tc_val_PM in TV1,TV2|-*.",
                        "VernacExtend",
                        "872ce90af173cf2b767485562240b81d63d9d7fc"
                    ]
                },
                {
                    "command": [
                        "eapply tc_val_sem_binarith'; eauto.",
                        "VernacExtend",
                        "1a27069f4021f93fca46e95a4f899dc4c1ae4bd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "peq_eq_block",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true; auto.",
                        "VernacExtend",
                        "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
                    ]
                },
                {
                    "command": [
                        "destruct (peq a b); auto.",
                        "VernacExtend",
                        "562a2141cf9fd5bbaf084042930d4568f8c07ed7"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "typecheck_Osub_sound",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite den_isBinOpR in IBR.",
                        "VernacExtend",
                        "d6d8d48c59b265bcb0a73041478071056ed3d5c2"
                    ]
                },
                {
                    "command": [
                        "unfold tc_int_or_ptr_type, eval_binop, sem_binary_operation', isBinOpResultType, Clight_Cop2.sem_sub in IBR |- *.",
                        "VernacExtend",
                        "e6d8d5cbd9f98856000d8c929552297f57002f97"
                    ]
                },
                {
                    "command": [
                        "rewrite classify_sub_eq.",
                        "VernacExtend",
                        "e6c7bb2d2f5244f053a7d2510e4087c53abd6f6a"
                    ]
                },
                {
                    "command": [
                        "destruct (classify_sub' (typeof e1) (typeof e2)) eqn:?H; unfold force_val2, force_val; rewrite tc_val_tc_val_PM in TV1,TV2|-*; unfold classify_sub' in H; simpl in IBR; repeat match goal with | H: _ /\\ _ |- _ => destruct H | H: app_pred (denote_tc_assert (tc_bool _ _) _) _ |- _ => apply tc_bool_e in H | H: negb (eqb_type ?A ?B) = true |- _ => let J := fresh \"J\" in destruct (eqb_type A B) eqn:J; [inv H | clear H] end; try solve [ unfold is_pointer_type in H1; destruct (typeof e1); inv TV1; destruct (typeof e2) as [| [| | |] [|] | | | | | | |]; inv TV2; simpl in H; inv H; try rewrite J in *; clear J; destruct (eval_expr e1 rho), (eval_expr e2 rho); simpl in *; try contradiction; destruct t; try solve [inv H1]; try solve [constructor; try rewrite (negb_true _ H1); apply I] ].",
                        "VernacExtend",
                        "4da7d4c063b702ba665cff906d15fe1aebf8b721"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (typeof e1); inv TV1; destruct (typeof e2); inv TV2; simpl in H; inv H; rewrite ?J, ?J0 in *; clear J J0; destruct (eval_expr e1 rho), (eval_expr e2 rho); simpl in *; try contradiction; destruct t as [| [| | |] [|] | | | | | | |]; inv H4; simpl; constructor; try (rewrite peq_eq_block by auto; rewrite sizeof_range_true by auto); try discriminate; try apply I.",
                        "VernacExtend",
                        "05c3dbfb54e399020acc2001f97c13b197fa75f3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- tc_val_tc_val_PM in TV1,TV2|-*.",
                        "VernacExtend",
                        "872ce90af173cf2b767485562240b81d63d9d7fc"
                    ]
                },
                {
                    "command": [
                        "rewrite denote_tc_assert_andp in IBR.",
                        "VernacExtend",
                        "58463373c313bb4b1a63aeeb3c4baf4ddb15aafa"
                    ]
                },
                {
                    "command": [
                        "destruct IBR.",
                        "VernacExtend",
                        "527c6ba0b8ac210d130253d0cc7a121b5fd61fea"
                    ]
                },
                {
                    "command": [
                        "eapply tc_val_sem_binarith'; eauto.",
                        "VernacExtend",
                        "1a27069f4021f93fca46e95a4f899dc4c1ae4bd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "typecheck_Omul_sound",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite den_isBinOpR in IBR.",
                        "VernacExtend",
                        "d6d8d48c59b265bcb0a73041478071056ed3d5c2"
                    ]
                },
                {
                    "command": [
                        "unfold eval_binop, sem_binary_operation', isBinOpResultType, Clight_Cop2.sem_mul in IBR |- *.",
                        "VernacExtend",
                        "66c4000725b4b5684e6c448750cf8fba6b519e32"
                    ]
                },
                {
                    "command": [
                        "rewrite denote_tc_assert_andp in IBR.",
                        "VernacExtend",
                        "58463373c313bb4b1a63aeeb3c4baf4ddb15aafa"
                    ]
                },
                {
                    "command": [
                        "destruct IBR.",
                        "VernacExtend",
                        "527c6ba0b8ac210d130253d0cc7a121b5fd61fea"
                    ]
                },
                {
                    "command": [
                        "unfold force_val2, force_val.",
                        "VernacExtend",
                        "4d6f754d6c345a1ad6c32b108eec3ca5bfd303a2"
                    ]
                },
                {
                    "command": [
                        "eapply tc_val_sem_binarith'; eauto.",
                        "VernacExtend",
                        "1a27069f4021f93fca46e95a4f899dc4c1ae4bd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "typecheck_Omod_sound",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite den_isBinOpR in IBR.",
                        "VernacExtend",
                        "d6d8d48c59b265bcb0a73041478071056ed3d5c2"
                    ]
                },
                {
                    "command": [
                        "unfold eval_binop, sem_binary_operation', isBinOpResultType, Clight_Cop2.sem_mod in IBR |- *.",
                        "VernacExtend",
                        "59878afb12b1b62591f4e94b0248937a230ad69e"
                    ]
                },
                {
                    "command": [
                        "unfold force_val2, force_val.",
                        "VernacExtend",
                        "4d6f754d6c345a1ad6c32b108eec3ca5bfd303a2"
                    ]
                },
                {
                    "command": [
                        "unfold Clight_Cop2.sem_binarith.",
                        "VernacExtend",
                        "96b290f920fb6211bee2eb4fba6ecc29a9b0fc62"
                    ]
                },
                {
                    "command": [
                        "rewrite classify_binarith_eq.",
                        "VernacExtend",
                        "3235fa99c228c279afc2f3ba463b86c2fc234879"
                    ]
                },
                {
                    "command": [
                        "destruct (classify_binarith' (typeof e1) (typeof e2)) eqn:?H.",
                        "VernacExtend",
                        "f65c1916c117add1b03acd5aac092988ec286287"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H2, <- H0 in H; try solve [inv H]; try solve [destruct sz,sg; inv H].",
                        "VernacExtend",
                        "b757cf7c9e60aa29af1048decf2c208adc92ff10"
                    ]
                },
                {
                    "command": [
                        "destruct s; destruct IBR as [?IBR ?IBR].",
                        "VernacExtend",
                        "f2ea62df18a600e2cc9de769426e3846d67420a4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct IBR as [?IBR ?IBR].",
                        "VernacExtend",
                        "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR0.",
                        "VernacExtend",
                        "6e66402682109f8572a93b86f17de8962f47c311"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR, IBR1 |- *; unfold_lift in IBR; unfold_lift in IBR1.",
                        "VernacExtend",
                        "6c5c19b8c11c1542ed0b7f4be0dc8810861f22c6"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3 | inv IBR].",
                        "VernacExtend",
                        "0d87c386a7a77bf4bdaf0c41e686724de5dd9f6d"
                    ]
                },
                {
                    "command": [
                        "unfold both_int; simpl.",
                        "VernacExtend",
                        "bd0e0abcb6abfb1f4eb30773ead5872b11daa67a"
                    ]
                },
                {
                    "command": [
                        "apply denote_tc_nonzero_e in IBR; try rewrite IBR.",
                        "VernacExtend",
                        "06b4fce05cb5b3ae37ae85c0b280e1f630d1bcb3"
                    ]
                },
                {
                    "command": [
                        "apply denote_tc_nodivover_e in IBR1; try rewrite IBR1.",
                        "VernacExtend",
                        "9c4c6b8ea86046ed7959c252f08bbd1b5066d834"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
                    ]
                },
                {
                    "command": [
                        "unfold Clight_Cop2.sem_cast, Clight_Cop2.classify_cast.",
                        "VernacExtend",
                        "38a89885306a7de02030910a763d6ec8ad9a8dcc"
                    ]
                },
                {
                    "command": [
                        "unfold sem_cast_pointer.",
                        "VernacExtend",
                        "ae700d3638ba3deec7e36b746dd48abc0ff65f3c"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64; reflexivity.",
                        "VernacExtend",
                        "d5048ad5be09cc598b78fcb98d02a3582d005ba7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR0.",
                        "VernacExtend",
                        "6e66402682109f8572a93b86f17de8962f47c311"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR |- *; unfold_lift in IBR.",
                        "VernacExtend",
                        "cbb43a6ceac2de61af81619332a9ab6c253ecb16"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3 | inv IBR].",
                        "VernacExtend",
                        "0d87c386a7a77bf4bdaf0c41e686724de5dd9f6d"
                    ]
                },
                {
                    "command": [
                        "unfold both_int; simpl.",
                        "VernacExtend",
                        "bd0e0abcb6abfb1f4eb30773ead5872b11daa67a"
                    ]
                },
                {
                    "command": [
                        "apply denote_tc_nonzero_e in IBR; try rewrite IBR.",
                        "VernacExtend",
                        "06b4fce05cb5b3ae37ae85c0b280e1f630d1bcb3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
                    ]
                },
                {
                    "command": [
                        "unfold Clight_Cop2.sem_cast, Clight_Cop2.classify_cast.",
                        "VernacExtend",
                        "38a89885306a7de02030910a763d6ec8ad9a8dcc"
                    ]
                },
                {
                    "command": [
                        "unfold sem_cast_pointer.",
                        "VernacExtend",
                        "ae700d3638ba3deec7e36b746dd48abc0ff65f3c"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64; reflexivity.",
                        "VernacExtend",
                        "d5048ad5be09cc598b78fcb98d02a3582d005ba7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H2, <- H0 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
                        "VernacExtend",
                        "0df84c21238529ee8db743e6efa8c260cbaed0ea"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct s; destruct IBR as [?IBR ?IBR].",
                        "VernacExtend",
                        "f2ea62df18a600e2cc9de769426e3846d67420a4"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct IBR as [?IBR ?IBR].",
                        "VernacExtend",
                        "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR0.",
                        "VernacExtend",
                        "6e66402682109f8572a93b86f17de8962f47c311"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR, IBR1 |- *; unfold_lift in IBR; unfold_lift in IBR1.",
                        "VernacExtend",
                        "6c5c19b8c11c1542ed0b7f4be0dc8810861f22c6"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
                        "VernacExtend",
                        "f6445e3c420081a52f0aeb95db61d9886ca11750"
                    ]
                },
                {
                    "command": [
                        "unfold both_long; simpl.",
                        "VernacExtend",
                        "dabc15fbed49267aa0954ef168fde7a15448924c"
                    ]
                },
                {
                    "command": [
                        "apply denote_tc_nonzero_e64 in IBR; try rewrite IBR.",
                        "VernacExtend",
                        "412817a5bea2fb6cfbd674aaf583227501e42a29"
                    ]
                },
                {
                    "command": [
                        "apply (denote_tc_nodivover_e64_il sg) in IBR1; try rewrite IBR1.",
                        "VernacExtend",
                        "260a37b47f8604152b69f04d533b5ecd2941fe5a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR0.",
                        "VernacExtend",
                        "6e66402682109f8572a93b86f17de8962f47c311"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR |- *; unfold_lift in IBR.",
                        "VernacExtend",
                        "cbb43a6ceac2de61af81619332a9ab6c253ecb16"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3 | inv IBR].",
                        "VernacExtend",
                        "0d87c386a7a77bf4bdaf0c41e686724de5dd9f6d"
                    ]
                },
                {
                    "command": [
                        "unfold both_long; simpl.",
                        "VernacExtend",
                        "dabc15fbed49267aa0954ef168fde7a15448924c"
                    ]
                },
                {
                    "command": [
                        "apply denote_tc_nonzero_e64 in IBR; try rewrite IBR.",
                        "VernacExtend",
                        "412817a5bea2fb6cfbd674aaf583227501e42a29"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct s; destruct IBR as [?IBR ?IBR].",
                        "VernacExtend",
                        "f2ea62df18a600e2cc9de769426e3846d67420a4"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct IBR as [?IBR ?IBR].",
                        "VernacExtend",
                        "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR0.",
                        "VernacExtend",
                        "6e66402682109f8572a93b86f17de8962f47c311"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR, IBR1 |- *; unfold_lift in IBR; unfold_lift in IBR1.",
                        "VernacExtend",
                        "6c5c19b8c11c1542ed0b7f4be0dc8810861f22c6"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
                        "VernacExtend",
                        "f6445e3c420081a52f0aeb95db61d9886ca11750"
                    ]
                },
                {
                    "command": [
                        "unfold both_long; simpl.",
                        "VernacExtend",
                        "dabc15fbed49267aa0954ef168fde7a15448924c"
                    ]
                },
                {
                    "command": [
                        "apply denote_tc_nonzero_e, (Int64_eq_repr_int_nonzero sg) in IBR; try rewrite IBR.",
                        "VernacExtend",
                        "b46b8a5e8fc93d6ef9d32fd97f96c7b423341c92"
                    ]
                },
                {
                    "command": [
                        "apply (denote_tc_nodivover_e64_li sg) in IBR1; try rewrite IBR1.",
                        "VernacExtend",
                        "450bc5848827c63ecd7be9da3c0bf4c6946c406d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR0.",
                        "VernacExtend",
                        "6e66402682109f8572a93b86f17de8962f47c311"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR |- *; unfold_lift in IBR.",
                        "VernacExtend",
                        "cbb43a6ceac2de61af81619332a9ab6c253ecb16"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3 | inv IBR].",
                        "VernacExtend",
                        "0d87c386a7a77bf4bdaf0c41e686724de5dd9f6d"
                    ]
                },
                {
                    "command": [
                        "unfold both_long; simpl.",
                        "VernacExtend",
                        "dabc15fbed49267aa0954ef168fde7a15448924c"
                    ]
                },
                {
                    "command": [
                        "apply denote_tc_nonzero_e, (Int64_eq_repr_int_nonzero sg) in IBR; try rewrite IBR.",
                        "VernacExtend",
                        "b46b8a5e8fc93d6ef9d32fd97f96c7b423341c92"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct s; destruct IBR as [?IBR ?IBR].",
                        "VernacExtend",
                        "f2ea62df18a600e2cc9de769426e3846d67420a4"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct IBR as [?IBR ?IBR].",
                        "VernacExtend",
                        "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR0.",
                        "VernacExtend",
                        "6e66402682109f8572a93b86f17de8962f47c311"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR, IBR1 |- *; unfold_lift in IBR; unfold_lift in IBR1.",
                        "VernacExtend",
                        "6c5c19b8c11c1542ed0b7f4be0dc8810861f22c6"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
                        "VernacExtend",
                        "f6445e3c420081a52f0aeb95db61d9886ca11750"
                    ]
                },
                {
                    "command": [
                        "unfold both_long; simpl.",
                        "VernacExtend",
                        "dabc15fbed49267aa0954ef168fde7a15448924c"
                    ]
                },
                {
                    "command": [
                        "apply denote_tc_nonzero_e64 in IBR; try rewrite IBR.",
                        "VernacExtend",
                        "412817a5bea2fb6cfbd674aaf583227501e42a29"
                    ]
                },
                {
                    "command": [
                        "apply denote_tc_nodivover_e64_ll in IBR1; try rewrite IBR1.",
                        "VernacExtend",
                        "3fdff9505da6f6927523ad161d943d2b4d374b79"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR0.",
                        "VernacExtend",
                        "6e66402682109f8572a93b86f17de8962f47c311"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR |- *; unfold_lift in IBR.",
                        "VernacExtend",
                        "cbb43a6ceac2de61af81619332a9ab6c253ecb16"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3 | inv IBR].",
                        "VernacExtend",
                        "0d87c386a7a77bf4bdaf0c41e686724de5dd9f6d"
                    ]
                },
                {
                    "command": [
                        "unfold both_long; simpl.",
                        "VernacExtend",
                        "dabc15fbed49267aa0954ef168fde7a15448924c"
                    ]
                },
                {
                    "command": [
                        "apply denote_tc_nonzero_e64 in IBR; try rewrite IBR.",
                        "VernacExtend",
                        "412817a5bea2fb6cfbd674aaf583227501e42a29"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv IBR.",
                        "VernacExtend",
                        "f63b792365ff64742bdfaa409f37c2dd33f762c7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv IBR.",
                        "VernacExtend",
                        "f63b792365ff64742bdfaa409f37c2dd33f762c7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv IBR.",
                        "VernacExtend",
                        "f63b792365ff64742bdfaa409f37c2dd33f762c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "typecheck_Oshift_sound",
            "line_nb": 463,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace ((denote_tc_assert (isBinOpResultType op e1 e2 t) rho) m) with ((denote_tc_assert match classify_shift' (typeof e1) (typeof e2) with | shift_case_ii _ => tc_andp' (tc_ilt' e2 Int.iwordsize) (tc_bool (is_int32_type t) (op_result_type (Ebinop op e1 e2 t))) | shift_case_il _ => tc_andp' (tc_llt' e2 (Int64.repr 32)) (tc_bool (is_int32_type t) (op_result_type (Ebinop op e1 e2 t))) | shift_case_li _ => tc_andp' (tc_ilt' e2 Int64.iwordsize') (tc_bool (is_long_type t) (op_result_type (Ebinop op e1 e2 t))) | shift_case_ll _ => tc_andp' (tc_llt' e2 Int64.iwordsize) (tc_bool (is_long_type t) (op_result_type (Ebinop op e1 e2 t))) | _ => tc_FF (arg_type (Ebinop op e1 e2 t)) end rho) m) in IBR by (rewrite den_isBinOpR; destruct OP; subst; auto).",
                        "VernacExtend",
                        "fa25b80808af0f765d3df07f788a727e15ef7ce5"
                    ]
                },
                {
                    "command": [
                        "destruct (classify_shift' (typeof e1) (typeof e2)) eqn:?H; try solve [inv IBR].",
                        "VernacExtend",
                        "49ff37f7004c48193c76211bb35bfcef47fcdd2e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct IBR as [?IBR ?IBR].",
                        "VernacExtend",
                        "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR0.",
                        "VernacExtend",
                        "6e66402682109f8572a93b86f17de8962f47c311"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR; unfold_lift in IBR.",
                        "VernacExtend",
                        "661737d6a5e9c6061595c6858d1d5bda5affdc2f"
                    ]
                },
                {
                    "command": [
                        "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H0, <- H2 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
                        "VernacExtend",
                        "6b20d42c143803bfc686252c7c724033502cb2d6"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
                        "VernacExtend",
                        "f6445e3c420081a52f0aeb95db61d9886ca11750"
                    ]
                },
                {
                    "command": [
                        "destruct OP; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_shift; rewrite classify_shift_eq, H; simpl.",
                        "VernacExtend",
                        "574eae6dce1de8fdec362f022d641ef601ede20e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "8835d3c95c39963d3e0685e707b7b6cd2d09a54b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct IBR as [?IBR ?IBR].",
                        "VernacExtend",
                        "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR0.",
                        "VernacExtend",
                        "6e66402682109f8572a93b86f17de8962f47c311"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR; unfold_lift in IBR.",
                        "VernacExtend",
                        "661737d6a5e9c6061595c6858d1d5bda5affdc2f"
                    ]
                },
                {
                    "command": [
                        "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H0, <- H2 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
                        "VernacExtend",
                        "6b20d42c143803bfc686252c7c724033502cb2d6"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
                        "VernacExtend",
                        "f6445e3c420081a52f0aeb95db61d9886ca11750"
                    ]
                },
                {
                    "command": [
                        "destruct OP; subst; auto; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "609a68b13b08a50ccbe95b89379a3da5a4f28013"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct IBR as [?IBR ?IBR].",
                        "VernacExtend",
                        "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR0.",
                        "VernacExtend",
                        "6e66402682109f8572a93b86f17de8962f47c311"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR; unfold_lift in IBR.",
                        "VernacExtend",
                        "661737d6a5e9c6061595c6858d1d5bda5affdc2f"
                    ]
                },
                {
                    "command": [
                        "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H0, <- H2 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
                        "VernacExtend",
                        "6b20d42c143803bfc686252c7c724033502cb2d6"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
                        "VernacExtend",
                        "f6445e3c420081a52f0aeb95db61d9886ca11750"
                    ]
                },
                {
                    "command": [
                        "destruct OP; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_shift; rewrite classify_shift_eq, H; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "9c70dde30a3e07eb52fa2053477a86899ee669fc"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct IBR as [?IBR ?IBR].",
                        "VernacExtend",
                        "b4a5909f3df23f75afe3af6bb5eeec1617c8dfeb"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR0.",
                        "VernacExtend",
                        "6e66402682109f8572a93b86f17de8962f47c311"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR; unfold_lift in IBR.",
                        "VernacExtend",
                        "661737d6a5e9c6061595c6858d1d5bda5affdc2f"
                    ]
                },
                {
                    "command": [
                        "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H0, <- H2 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
                        "VernacExtend",
                        "6b20d42c143803bfc686252c7c724033502cb2d6"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
                        "VernacExtend",
                        "f6445e3c420081a52f0aeb95db61d9886ca11750"
                    ]
                },
                {
                    "command": [
                        "destruct OP; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_shift; rewrite classify_shift_eq, H; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR0]; simpl; auto.",
                        "VernacExtend",
                        "9c70dde30a3e07eb52fa2053477a86899ee669fc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "typecheck_Obin_sound",
            "line_nb": 500,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace ((denote_tc_assert (isBinOpResultType op e1 e2 t) rho) m) with ((denote_tc_assert match classify_binarith' (typeof e1) (typeof e2) with | bin_case_i _ => tc_bool (is_int32_type t) (op_result_type (Ebinop op e1 e2 t)) | bin_case_l _ => tc_bool (is_long_type t) (op_result_type (Ebinop op e1 e2 t)) | _ => tc_FF (arg_type (Ebinop op e1 e2 t)) end rho) m) in IBR by (rewrite den_isBinOpR; destruct OP as [| [ | ]]; subst; auto).",
                        "VernacExtend",
                        "1d8bd76500d17867243b26e21673b01c301d0f19"
                    ]
                },
                {
                    "command": [
                        "destruct (classify_binarith' (typeof e1) (typeof e2)) eqn:?H; try solve [inv IBR].",
                        "VernacExtend",
                        "eca97cd9f9c285bb0c963380ef9041609acd80d2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR.",
                        "VernacExtend",
                        "92a1b8e15980da380d06abfa46f42cf9f3fdd393"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR; unfold_lift in IBR.",
                        "VernacExtend",
                        "661737d6a5e9c6061595c6858d1d5bda5affdc2f"
                    ]
                },
                {
                    "command": [
                        "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H0, <- H2 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
                        "VernacExtend",
                        "6b20d42c143803bfc686252c7c724033502cb2d6"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
                        "VernacExtend",
                        "f6445e3c420081a52f0aeb95db61d9886ca11750"
                    ]
                },
                {
                    "command": [
                        "clear e1 e2 H0 H2.",
                        "VernacExtend",
                        "0ee7e3f56b64e54f72dac8ddeb902567734b9f38"
                    ]
                },
                {
                    "command": [
                        "destruct OP as [| [|]]; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_and, Clight_Cop2.sem_or, Clight_Cop2.sem_xor, Clight_Cop2.sem_binarith; rewrite classify_binarith_eq, H; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR]; simpl; auto; unfold both_int, Clight_Cop2.sem_cast, Clight_Cop2.classify_cast, sem_cast_pointer; destruct Archi.ptr64; reflexivity.",
                        "VernacExtend",
                        "7abfe53e58c9e854c5152377ca89f59f9c646dc3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply tc_bool_e in IBR.",
                        "VernacExtend",
                        "92a1b8e15980da380d06abfa46f42cf9f3fdd393"
                    ]
                },
                {
                    "command": [
                        "simpl in IBR; unfold_lift in IBR.",
                        "VernacExtend",
                        "661737d6a5e9c6061595c6858d1d5bda5affdc2f"
                    ]
                },
                {
                    "command": [
                        "solve_tc_val TV1; solve_tc_val TV2; rewrite <- H0, <- H2 in H; try solve [inv H]; try solve [destruct sz,sg; try destruct sz0,sg0; inv H].",
                        "VernacExtend",
                        "6b20d42c143803bfc686252c7c724033502cb2d6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
                        "VernacExtend",
                        "f6445e3c420081a52f0aeb95db61d9886ca11750"
                    ]
                },
                {
                    "command": [
                        "destruct OP as [| [|]]; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_and, Clight_Cop2.sem_or, Clight_Cop2.sem_xor, Clight_Cop2.sem_binarith; rewrite classify_binarith_eq, H; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR]; simpl; auto.",
                        "VernacExtend",
                        "c58ce94f0dc5837bd3a40244d60f8a820af66630"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
                        "VernacExtend",
                        "f6445e3c420081a52f0aeb95db61d9886ca11750"
                    ]
                },
                {
                    "command": [
                        "destruct OP as [| [|]]; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_and, Clight_Cop2.sem_or, Clight_Cop2.sem_xor, Clight_Cop2.sem_binarith; rewrite classify_binarith_eq, H; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR]; simpl; auto.",
                        "VernacExtend",
                        "c58ce94f0dc5837bd3a40244d60f8a820af66630"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (eval_expr e1 rho), (eval_expr e2 rho); try solve [inv H1 | inv H3].",
                        "VernacExtend",
                        "f6445e3c420081a52f0aeb95db61d9886ca11750"
                    ]
                },
                {
                    "command": [
                        "destruct OP as [| [|]]; subst; auto; simpl; unfold force_val, Clight_Cop2.sem_and, Clight_Cop2.sem_or, Clight_Cop2.sem_xor, Clight_Cop2.sem_binarith; rewrite classify_binarith_eq, H; simpl; destruct t as [| [| | |] ? ? | | | | | | |]; try solve [inv IBR]; simpl; auto.",
                        "VernacExtend",
                        "c58ce94f0dc5837bd3a40244d60f8a820af66630"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}