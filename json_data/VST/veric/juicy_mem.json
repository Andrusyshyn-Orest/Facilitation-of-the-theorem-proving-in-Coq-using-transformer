{
    "filename": "veric/juicy_mem.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.veric.base.",
            "VernacRequire",
            "44430f3044f6ed3bc31c11a137cd98cdfe01c277"
        ],
        [
            "Require Import VST.veric.Memory.",
            "VernacRequire",
            "1dd0c2ef3975bb6f29be59cf2730b2ac319ae653"
        ],
        [
            "Require Import VST.veric.juicy_base.",
            "VernacRequire",
            "7a63c83b17327e7ee5b9ab38e2ae76d2d22b7583"
        ],
        [
            "Require Import VST.veric.shares.",
            "VernacRequire",
            "3704a447cd367fa0955afd14b15f7281894f1482"
        ],
        [
            "Import cjoins.",
            "VernacImport",
            "82e777b597c987c5aca2679d7a9e447ee83d1363"
        ],
        [
            "Definition dec_share_nonidentity (sh: Share.t) : {~identity sh}+{identity sh} := (Sumbool.sumbool_not _ _ (dec_share_identity sh)).",
            "VernacDefinition",
            "d96dc6c7df70ea5be69597e6a71350fdd54fd940"
        ],
        [
            "Definition perm_of_sh (sh: Share.t): option permission := if writable0_share_dec sh then if eq_dec sh Share.top then Some Freeable else Some Writable else if readable_share_dec sh then Some Readable else if eq_dec sh Share.bot then None else Some Nonempty.",
            "VernacDefinition",
            "5b99564f8f15602d2e7b46029dec3a8e2a25f2b5"
        ],
        [
            "Functional Scheme perm_of_sh_ind := Induction for perm_of_sh Sort Prop.",
            "VernacExtend",
            "723ecaee9ba0448a7d740850ff091097568025fb"
        ],
        [
            "Definition contents_at (m: mem) (loc: address) : memval := ZMap.get (snd loc) (PMap.get (fst loc) (mem_contents m)).",
            "VernacDefinition",
            "9678b3ec258f1c6fe1e4167c1e8c8a0cdd749907"
        ],
        [
            "Definition contents_cohere (m: mem) (phi: rmap) := forall rsh sh v loc pp, phi @ loc = YES rsh sh (VAL v) pp -> contents_at m loc = v /\\ pp=NoneP.",
            "VernacDefinition",
            "88562c6d176249ebb197588ebfb29dd832a1c9c9"
        ],
        [
            "Definition valshare (r: resource) : share := match r with | YES sh rsh _ _ => Share.glb Share.Rsh sh | _ => Share.bot end.",
            "VernacDefinition",
            "841face4e4b422a68e43a4303c2a0aa4203c1f14"
        ],
        [
            "Definition res_retain' (r: resource) : Share.t := match r with | NO sh _ => sh | YES sh _ _ _ => Share.glb Share.Lsh sh | PURE _ _ => Share.top end.",
            "VernacDefinition",
            "2d7c21e5f73e943ac22759fd76b1e96470696340"
        ],
        [
            "Definition perm_of_res (r: resource) := match r with | NO sh _ => if eq_dec sh Share.bot then None else Some Nonempty | PURE _ _ => Some Nonempty | YES sh rsh (VAL _) _ => perm_of_sh sh | YES sh rsh _ _ => Some Nonempty end.",
            "VernacDefinition",
            "6e47eb5a30b0ce26353b9429e943f63020a0c587"
        ],
        [
            "Definition perm_of_res_lock_explicit (r : compcert_rmaps.RML.R.resource):= match r with | compcert_rmaps.RML.R.NO _ _ => None | compcert_rmaps.RML.R.YES sh _ (compcert_rmaps.VAL _) _ => None | compcert_rmaps.RML.R.YES sh _ (compcert_rmaps.LK _ _) _ => if writable0_share_dec (Share.glb Share.Rsh sh) then if eq_dec (Share.glb Share.Rsh sh) Share.top then Some Freeable else Some Writable else if readable_share_dec (Share.glb Share.Rsh sh) then Some Readable else if eq_dec (Share.glb Share.Rsh sh) Share.bot then None else Some Nonempty | compcert_rmaps.RML.R.YES sh _ (compcert_rmaps.FUN _ _) _ => None | compcert_rmaps.RML.R.PURE _ _ => None end.",
            "VernacDefinition",
            "fcb2c4e705a8e55c6dce708c21a7ebd50eac75fd"
        ],
        [
            "Functional Scheme perm_of_res_lock_expl_ind := Induction for perm_of_res_lock_explicit Sort Prop.",
            "VernacExtend",
            "c96a687642fee7f352ca5611a6176fde7a0dbaf7"
        ],
        [
            "Definition perm_of_res' (r: resource) := match r with | NO sh _ => if eq_dec sh Share.bot then None else Some Nonempty | PURE _ _ => Some Nonempty | YES sh _ _ _ => perm_of_sh sh end.",
            "VernacDefinition",
            "60184cf98d09068feafa04e258524503611dfb6f"
        ],
        [
            "Definition perm_of_res_lock (r: resource) := match r with | YES sh rsh (LK _ _) _ => perm_of_sh (Share.glb Share.Rsh sh) | _ => None end.",
            "VernacDefinition",
            "8cfaac5eff32929e31fb4da455a6d0f1188eeed4"
        ],
        [
            "Definition perm_of_res_explicit (r : compcert_rmaps.RML.R.resource):= match r with | compcert_rmaps.RML.R.NO sh _ => if eq_dec sh Share.bot then None else Some Nonempty | compcert_rmaps.RML.R.YES sh _ (compcert_rmaps.VAL _) _ => if writable0_share_dec sh then if eq_dec sh Share.top then Some Freeable else Some Writable else if readable_share_dec sh then Some Readable else if eq_dec sh Share.bot then None else Some Nonempty | compcert_rmaps.RML.R.YES sh _ (compcert_rmaps.LK _ _) _ => Some Nonempty | compcert_rmaps.RML.R.YES sh _ (compcert_rmaps.FUN _ _) _ => Some Nonempty | compcert_rmaps.RML.R.PURE _ _ => Some Nonempty end.",
            "VernacDefinition",
            "9171b4ce5964e09300500c648da6941078447205"
        ],
        [
            "Functional Scheme perm_of_res_expl_ind := Induction for perm_of_res_explicit Sort Prop.",
            "VernacExtend",
            "02180538135a22bb6f62fb7ede5c3fda06f39aef"
        ],
        [
            "Lemma Rsh_not_top: Share.Rsh <> Share.top.",
            "VernacStartTheoremProof",
            "b247531e3ec688e309035c9808254224fd56fdcc"
        ],
        [
            "unfold Share.Rsh.",
            "VernacExtend",
            "181ca8f885460b512586a51a99f6b8edb6f36804"
        ],
        [
            "case_eq (Share.split Share.top); intros.",
            "VernacExtend",
            "cb492125fc8e899bcbf439dc0a3f2b2862a80a64"
        ],
        [
            "simpl; intro.",
            "VernacExtend",
            "ea06f672e843e2df533e8479ab6d750009d7073e"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply nonemp_split_neq2 in H.",
            "VernacExtend",
            "13bd5a813e94e5616c34dc11c33e2f7de785a669"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply top_share_nonidentity.",
            "VernacExtend",
            "1e91da3d68ce976aa578b24f8ef3791f3cf86f23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nonidentity_Rsh: ~identity Share.Rsh.",
            "VernacStartTheoremProof",
            "d750a388b3132ac3f24982afb40063b85647c68a"
        ],
        [
            "unfold Share.Rsh.",
            "VernacExtend",
            "181ca8f885460b512586a51a99f6b8edb6f36804"
        ],
        [
            "case_eq (Share.split Share.top); intros.",
            "VernacExtend",
            "cb492125fc8e899bcbf439dc0a3f2b2862a80a64"
        ],
        [
            "simpl; intro.",
            "VernacExtend",
            "ea06f672e843e2df533e8479ab6d750009d7073e"
        ],
        [
            "apply split_nontrivial' in H.",
            "VernacExtend",
            "ba86e21a133d0c6b9e92047a36d4618da6f14e2a"
        ],
        [
            "apply top_share_nonidentity; auto.",
            "VernacExtend",
            "4cfd98dbcbb4f73d4d660164b05edd0a22454bc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_sh_fullshare: perm_of_sh fullshare = Some Freeable.",
            "VernacStartTheoremProof",
            "c15e228c52c28d2c26d654fc03a7d492ba662c5f"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "rewrite if_true.",
            "VernacExtend",
            "8198b40d461a5545fc467eded52f2fe8cb3ac368"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold fullshare.",
            "VernacExtend",
            "ddd55a4da91baf48b66304db2de1ebfe67b30248"
        ],
        [
            "apply writable_writable0.",
            "VernacExtend",
            "afd02beccb29111b5bc997c299f6689dcafe2033"
        ],
        [
            "apply writable_share_top.",
            "VernacExtend",
            "610383dfb397015efbacd268e621086ab50af876"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nonreadable_extern_retainer: ~readable_share extern_retainer.",
            "VernacStartTheoremProof",
            "9e07307657228bde6478cf1b41d095566d6c00c7"
        ],
        [
            "unfold extern_retainer, readable_share.",
            "VernacExtend",
            "8466058b6b2494cc530ca3b3359aa9d5caa1412a"
        ],
        [
            "intro H; apply H; clear H.",
            "VernacExtend",
            "1be01ee22bc6151533070ea0b485c2b6b25332c9"
        ],
        [
            "assert (Share.glb Share.Rsh (fst (Share.split Share.Lsh)) = Share.bot); [ | rewrite H; auto].",
            "VernacExtend",
            "1a0c231e8e4ace016362037bada009ad448bebf3"
        ],
        [
            "apply sub_glb_bot with Share.Lsh.",
            "VernacExtend",
            "0425ba59b306b893a69479d865b6079cca883d37"
        ],
        [
            "destruct (Share.split Share.Lsh) eqn:H.",
            "VernacExtend",
            "9cfc73dfc2dc947ff7e3d6da993e7df679a0fef8"
        ],
        [
            "apply Share.split_together in H.",
            "VernacExtend",
            "15fc543ab18c4fff38ca49483759e282bd7860f8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "apply leq_join_sub.",
            "VernacExtend",
            "3fff34a85cde33bcdf7d12bcb66c5c1e11b2a5a9"
        ],
        [
            "apply Share.lub_upper1.",
            "VernacExtend",
            "b953252956af316ab4f358f76f099e185a0783bc"
        ],
        [
            "apply glb_Rsh_Lsh.",
            "VernacExtend",
            "6a2f3d33b0c08695550681f39c028816c5c2687a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lsh_nonreadable: ~readable_share Share.Lsh.",
            "VernacStartTheoremProof",
            "a936dfd93edc60fd6315ff89da27f576c622b919"
        ],
        [
            "unfold readable_share; intros.",
            "VernacExtend",
            "8ea5431bf29fe3fbbf26ddbc2e3a3cfbf7f215e7"
        ],
        [
            "rewrite glb_Rsh_Lsh.",
            "VernacExtend",
            "5ae8cdb4f2d90885e7cbf0cdfe7603814ca1068a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_res_op1: forall r, perm_order'' (perm_of_res' r) (perm_of_res r).",
            "VernacStartTheoremProof",
            "25de6d85851d3e8aab202667c4ff5c8e4b6af279"
        ],
        [
            "destruct r eqn:?; simpl.",
            "VernacExtend",
            "2f41c574b90c19e52f0b302b41515857185a6576"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "if_tac; constructor.",
            "VernacExtend",
            "02059178128c6a04306aa1a2033748b366218991"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "if_tac; destruct k; constructor.",
            "VernacExtend",
            "b37bf00de07ff49bdb0a49657402818a119fc838"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "destruct k; constructor.",
            "VernacExtend",
            "3ccfc13a3cf783ee1e98529d14e2b42f3c391a6e"
        ],
        [
            "rewrite if_false by auto.",
            "VernacExtend",
            "5a76c3b1b70df813cbad68c4a8a05295b8091083"
        ],
        [
            "destruct k; constructor.",
            "VernacExtend",
            "3ccfc13a3cf783ee1e98529d14e2b42f3c391a6e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_res_op2: forall r, perm_order'' (perm_of_res' r) (perm_of_res_lock r).",
            "VernacStartTheoremProof",
            "4896b6de69d9891acb39486566577f14bf3ef79e"
        ],
        [
            "destruct r; simpl; auto.",
            "VernacExtend",
            "bc448dbd73ed11ee44130e99e9ad13b513acff8c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "if_tac; constructor.",
            "VernacExtend",
            "02059178128c6a04306aa1a2033748b366218991"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct k; try solve [destruct (perm_of_sh sh); constructor].",
            "VernacExtend",
            "f4cea81dd03196a43ef77b995541cc8c2fdcaf72"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "repeat if_tac; constructor.",
            "VernacExtend",
            "eacdbf9950d2e13905d967d3560aa957f911fd0f"
        ],
        [
            "rewrite if_true.",
            "VernacExtend",
            "8198b40d461a5545fc467eded52f2fe8cb3ac368"
        ],
        [
            "rewrite if_false.",
            "VernacExtend",
            "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply glb_Rsh_not_top.",
            "VernacExtend",
            "65e0a9226eadea33e2919e965e50b79a0b67b445"
        ],
        [
            "apply writable0_share_glb_Rsh; auto.",
            "VernacExtend",
            "6bbd0742e499ceb0c6153dfa79aed48de3449690"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "rewrite if_false.",
            "VernacExtend",
            "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
        ],
        [
            "rewrite if_true.",
            "VernacExtend",
            "8198b40d461a5545fc467eded52f2fe8cb3ac368"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold readable_share.",
            "VernacExtend",
            "81db76555770dee3886332dc2cd6171b48abe2d6"
        ],
        [
            "rewrite glb_twice; auto.",
            "VernacExtend",
            "a18b7ad7a6fe032341158f5dd61f1c89bed7083c"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "unfold writable0_share in *.",
            "VernacExtend",
            "86c740723ef06923ba46a2487d9fb562851176ed"
        ],
        [
            "eapply join_sub_trans; eauto.",
            "VernacExtend",
            "a43c921d3c03d97dfb0c9cf318ac015a52203383"
        ],
        [
            "apply leq_join_sub.",
            "VernacExtend",
            "3fff34a85cde33bcdf7d12bcb66c5c1e11b2a5a9"
        ],
        [
            "apply Share.glb_lower2.",
            "VernacExtend",
            "e8dd9d3effecea72ceee641b88d062972b7636e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition access_cohere (m: mem) (phi: rmap) := forall loc, access_at m loc Cur = perm_of_res (phi @ loc).",
            "VernacDefinition",
            "ec264faf65d4e160e93efa8dd4af151188dfad32"
        ],
        [
            "Definition max_access_at m loc := access_at m loc Max.",
            "VernacDefinition",
            "6c7f67e52dcf14789a1cd5ccb35436ac1ceb14de"
        ],
        [
            "Definition max_access_cohere (m: mem) (phi: rmap) := forall loc, perm_order'' (max_access_at m loc) (perm_of_res' (phi @ loc)).",
            "VernacDefinition",
            "85579745e50d6474cdbfcbed52cc1dd5cc7e45bf"
        ],
        [
            "Definition alloc_cohere (m: mem) (phi: rmap) := forall loc, (fst loc >= nextblock m)%positive -> phi @ loc = NO Share.bot bot_unreadable.",
            "VernacDefinition",
            "9f7a1540ecd27b99870b2a31f2fc8eb9c8ca1f37"
        ],
        [
            "Inductive juicy_mem: Type := mkJuicyMem: forall (m: mem) (phi: rmap) (JMcontents: contents_cohere m phi) (JMaccess: access_cohere m phi) (JMmax_access: max_access_cohere m phi) (JMalloc: alloc_cohere m phi), juicy_mem.",
            "VernacInductive",
            "3493cadc9c998f1f2e305efc198c3daa7fd71f87"
        ],
        [
            "Section selectors.",
            "VernacBeginSection",
            "efc016d77d02f20afb277fcaec45b522f8fccde6"
        ],
        [
            "Variable (j: juicy_mem).",
            "VernacAssumption",
            "f46f5d875d08417a8ac54821b59a8a948eb988f8"
        ],
        [
            "Definition m_dry := match j with mkJuicyMem m _ _ _ _ _ => m end.",
            "VernacDefinition",
            "2908e500e5dd43ed95d51ea07a502f71ffda1d97"
        ],
        [
            "Definition m_phi := match j with mkJuicyMem _ phi _ _ _ _ => phi end.",
            "VernacDefinition",
            "b2cc1fcff4f0080be949470be2f9ec3cd0cb7b38"
        ],
        [
            "Lemma juicy_mem_contents: contents_cohere m_dry m_phi.",
            "VernacStartTheoremProof",
            "ebc038c5fa85a730d8f0af0ab18a929deff48516"
        ],
        [
            "unfold m_dry, m_phi; destruct j; auto.",
            "VernacExtend",
            "ab3d76ad88ccb462c67a1b7b92e6f71ce4a2d1a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma juicy_mem_access: access_cohere m_dry m_phi.",
            "VernacStartTheoremProof",
            "c6349dbe110f5b8e2f7a62767a621503fdae852d"
        ],
        [
            "unfold m_dry, m_phi; destruct j; auto.",
            "VernacExtend",
            "ab3d76ad88ccb462c67a1b7b92e6f71ce4a2d1a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma juicy_mem_max_access: max_access_cohere m_dry m_phi.",
            "VernacStartTheoremProof",
            "ee5b8dfa9bdd6cb66c6dda1072dd29ce6f3a221e"
        ],
        [
            "unfold m_dry, m_phi; destruct j; auto.",
            "VernacExtend",
            "ab3d76ad88ccb462c67a1b7b92e6f71ce4a2d1a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma juicy_mem_alloc_cohere: alloc_cohere m_dry m_phi.",
            "VernacStartTheoremProof",
            "fe4a21a464c3b11fe1fc1485f8ebf46c17c9528a"
        ],
        [
            "unfold m_dry, m_phi; destruct j; auto.",
            "VernacExtend",
            "ab3d76ad88ccb462c67a1b7b92e6f71ce4a2d1a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End selectors.",
            "VernacEndSegment",
            "425a3831ab592568b670714e51e7cf46492f6c8a"
        ],
        [
            "Definition juicy_mem_resource: forall jm m', resource_at m' = resource_at (m_phi jm) -> {jm' | m_phi jm' = m' /\\ m_dry jm' = m_dry jm}.",
            "VernacDefinition",
            "ede1f2103aa1bbcd7525b88dc718e39e853a8516"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (contents_cohere (m_dry jm) m') as Hcontents.",
            "VernacExtend",
            "f3f7624c397d46c665d0b35c9ace53c31b8c8adc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros ?????.",
            "VernacExtend",
            "0cf8dd5e53b76160b696a0b73b23e8fec0b81782"
        ],
        [
            "rewrite H; apply juicy_mem_contents.",
            "VernacExtend",
            "e33b1c6c8f93da392226715f2209ab1850e0e668"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (access_cohere (m_dry jm) m') as Haccess.",
            "VernacExtend",
            "6fc933b0afccf0a4ba122245d83d8694fea3bf91"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H; apply juicy_mem_access.",
            "VernacExtend",
            "4882f683a29bcc158ac1d457ebe41c344060c003"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (max_access_cohere (m_dry jm) m') as Hmax.",
            "VernacExtend",
            "1752ba6ce8b9fedc0b6e3009c37d8056b793b10b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H; apply juicy_mem_max_access.",
            "VernacExtend",
            "a0dbeb0e7406cc0cfff4567c15412541cb89676f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (alloc_cohere (m_dry jm) m') as Halloc.",
            "VernacExtend",
            "c05225b3643322939e8307f017a4ebefb25fd21a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H; apply juicy_mem_alloc_cohere.",
            "VernacExtend",
            "941ff7364725d1a3e001cf827a0d7863e864f89d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "exists (mkJuicyMem _ _ Hcontents Haccess Hmax Halloc); auto.",
            "VernacExtend",
            "a5b43b394bb5a7fc36cf0ed368ccbf13de488472"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma perm_of_empty_inv {s} : perm_of_sh s = None -> s = Share.bot.",
            "VernacStartTheoremProof",
            "8ffe387b90b20182e372223cbd37372073929d74"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold perm_of_sh in*.",
            "VernacExtend",
            "daa3eecfcac4b0e7c6215fbb9230715428265ac1"
        ],
        [
            "if_tac in H; subst; auto.",
            "VernacExtend",
            "5cc6df3b60947e24f156c91949d5a4b92cc15fb2"
        ],
        [
            "if_tac in H; subst; auto.",
            "VernacExtend",
            "5cc6df3b60947e24f156c91949d5a4b92cc15fb2"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "if_tac in H; subst; auto.",
            "VernacExtend",
            "5cc6df3b60947e24f156c91949d5a4b92cc15fb2"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "if_tac in H; subst; auto.",
            "VernacExtend",
            "5cc6df3b60947e24f156c91949d5a4b92cc15fb2"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma writable_join_sub: forall loc phi1 phi2, join_sub phi1 phi2 -> writable loc phi1 -> writable loc phi2.",
            "VernacStartTheoremProof",
            "28624533c0e05c781effa4aaa6ef7557edc35717"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf in H0|-*.",
            "VernacExtend",
            "e63b866eba9bfaa3450c481ebbe1aab0de02a973"
        ],
        [
            "destruct H; generalize (resource_at_join _ _ _ loc H); clear H.",
            "VernacExtend",
            "8df0820e8918635154a073e61b8a0c698de59be3"
        ],
        [
            "revert H0; destruct (phi1 @ loc); intros; try contradiction.",
            "VernacExtend",
            "09cf0f0b165b429071733dc56929df078fdfa34b"
        ],
        [
            "destruct H0; subst.",
            "VernacExtend",
            "20271853295fa24b8817fa15426b7cb1d3d3abe2"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply join_writable01; eauto.",
            "VernacExtend",
            "2b7acb7381c9b7abf4e2950a89d7e9fc0047ced6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "contradiction (join_writable0_readable RJ H0 rsh2).",
            "VernacExtend",
            "8e7802711b2e6e2ba9852d895c4328dfd5aede1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma writable_inv: forall phi loc, writable loc phi -> exists sh, exists rsh, exists k, exists pp, phi @ loc = YES sh rsh k pp /\\ writable0_share sh /\\ isVAL k.",
            "VernacStartTheoremProof",
            "7d7ee6cf8868c610e4b8f5ac30e536c8dfd34595"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros phi loc H.",
            "VernacExtend",
            "883c4a530b7bbe68b89bb75936b2ec6ec960842c"
        ],
        [
            "destruct (phi @ loc); try solve [inversion H].",
            "VernacExtend",
            "aa141106d77af13a1cbff689f0b11a4d9c48172c"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "do 4 eexists.",
            "VernacExtend",
            "3b86975d37e68cd6ec5dc325c37fa09d5a226035"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nreadable_inv: forall phi loc, ~readable loc phi -> (exists sh, exists nsh, phi @ loc = NO sh nsh) \\/ (exists sh, exists rsh, exists k, exists pp, phi @ loc = YES sh rsh k pp /\\ ~isVAL k) \\/ (exists k, exists pp, phi @ loc = PURE k pp).",
            "VernacStartTheoremProof",
            "c6bd2c7434851376a7b7a8f4fda252460fbb3dd4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct (phi@loc); eauto 50.",
            "VernacExtend",
            "e716574bc8a73f6fe4913c5862344baaddb993a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age1_joinx {A} {JA: Join A}{PA: Perm_alg A}{agA: ageable A}{AgeA: Age_alg A} : forall phi1 phi2 phi3 phi1' phi2' phi3', age phi1 phi1' -> age phi2 phi2' -> age phi3 phi3' -> join phi1 phi2 phi3 -> join phi1' phi2' phi3'.",
            "VernacStartTheoremProof",
            "6cae4fab34061174d15a92c3a565c0993e928ba0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (age1_join _ H2 H) as [phi2'' [phi3'' [? [? ?]]]].",
            "VernacExtend",
            "ed1da911303f8ae9c8820dbe89c38b6b7c8c2448"
        ],
        [
            "unfold age in *.",
            "VernacExtend",
            "21b5ab032e51bd9296ba434b1bc6a61269ceed41"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma constructive_age1_join {A} {JA: Join A}{PA: Perm_alg A}{agA: ageable A}{AgeA: Age_alg A} : forall x y z x' : A, join x y z -> age x x' -> { yz' : A*A | join x' (fst yz') (snd yz') /\\ age y (fst yz') /\\ age z (snd yz')}.",
            "VernacStartTheoremProof",
            "73e8854b80b0d1415e70f7a9836a6118a80c012d"
        ],
        [
            "pose proof I.",
            "VernacExtend",
            "abc787e9ace0638243c51c43605b46fde630e9f6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (age1 y); [intros y' ? | intros].",
            "VernacExtend",
            "7171725e507de8b9c02290f136f5b7afcebcef79"
        ],
        [
            "case_eq (age1 z); [intros z' ? | intros].",
            "VernacExtend",
            "1263c143bb0eb2e1fc6d980c5eabff0617a19082"
        ],
        [
            "exists (y',z').",
            "VernacExtend",
            "ad4866981f81ec53bf94b479ecd6153512eb1d9d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply (age1_joinx x y z x' y' z' H1 H2 H3 H0).",
            "VernacExtend",
            "ecc815a3f55bcaaf3465e0802bb7e6d42e5df729"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "destruct (age1_join _ H0 H1) as [? [? [? [? ?]]]].",
            "VernacExtend",
            "aefcbf365ccca618823912062c5f95dbe3f8d643"
        ],
        [
            "unfold age in *.",
            "VernacExtend",
            "21b5ab032e51bd9296ba434b1bc6a61269ceed41"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "destruct (age1_join _ H0 H1) as [? [? [? [? ?]]]].",
            "VernacExtend",
            "aefcbf365ccca618823912062c5f95dbe3f8d643"
        ],
        [
            "unfold age in *.",
            "VernacExtend",
            "21b5ab032e51bd9296ba434b1bc6a61269ceed41"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age1_constructive_joins_eq : forall {A} {JA: Join A}{PA: Perm_alg A}{agA: ageable A}{AgeA: Age_alg A} {phi1 phi2}, constructive_joins phi1 phi2 -> forall {phi1'}, age1 phi1 = Some phi1' -> forall {phi2'}, age1 phi2 = Some phi2' -> constructive_joins phi1' phi2'.",
            "VernacStartTheoremProof",
            "1ff265ddb4454528ef10ebbd46d8ac22993f7bc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct X as [? ?H].",
            "VernacExtend",
            "299451ee585901a18f64cf95705353f4ee0ad191"
        ],
        [
            "destruct (constructive_age1_join _ _ _ _ H1 H) as [[y z] [? [? ?]]].",
            "VernacExtend",
            "209c88d69f1f8bdc547b435e5ed92d98d2b1e0e7"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "unfold age in H3.",
            "VernacExtend",
            "06af5d256190d2e614627a2a297e923bb22947de"
        ],
        [
            "rewrite H0 in H3; inv H3; econstructor; eauto.",
            "VernacExtend",
            "aa0379786fe4b2942d3b84619107846f0cdd530e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition age1_juicy_mem (j: juicy_mem): option juicy_mem := match age1 (m_phi j) with | Some phi' => Some (mkJuicyMem (m_dry j) phi' _ _ _ _) | None => None end.",
            "VernacDefinition",
            "997ba9167a63a01c8a61bea64e97a0f89c730021"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "assert (necR (m_phi j) phi') by (constructor 1; symmetry in Heq_anonymous; apply Heq_anonymous).",
            "VernacExtend",
            "534c368700db4cc101d0096623deb1bda62c9549"
        ],
        [
            "destruct j; hnf; simpl in *; intros.",
            "VernacExtend",
            "08e284dbd164d7d2d83d84a87add1313d7d5e824"
        ],
        [
            "case_eq (phi @ loc); intros.",
            "VernacExtend",
            "b61b92be6054795be5b6df44c1e635f64b6af2ca"
        ],
        [
            "apply (necR_NO _ _ _ _ _ H) in H1.",
            "VernacExtend",
            "fd9f4f5e88e185dc3c9d1ae57a130f502014cc3f"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "generalize (necR_YES _ _ _ _ _ _ _ H H1); intros.",
            "VernacExtend",
            "c46bab689b69db9e29e6446221933465ef19e852"
        ],
        [
            "rewrite H0 in H2.",
            "VernacExtend",
            "a4d82e65c345819bdd50b79b067ee218c42a8857"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "e11edf85dc09e31a8a2ba9dcf84be4035731ae99"
        ],
        [
            "destruct (JMcontents sh0 r v loc _ H1).",
            "VernacExtend",
            "f11126db0423dbbb1c6ca26cd715972f2eddc66c"
        ],
        [
            "subst; split; auto.",
            "VernacExtend",
            "c451ef2914ab67806aed8494e25bb2724f9ace83"
        ],
        [
            "rewrite (necR_PURE _ _ _ _ _ H H1) in H0.",
            "VernacExtend",
            "05243ca249242d078f2d6ebe136cd4a61fda2183"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "2721274aada33cbec3c1f62204a14a93dcf297fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "assert (necR (m_phi j) phi') by (constructor 1; symmetry in Heq_anonymous; apply Heq_anonymous).",
            "VernacExtend",
            "534c368700db4cc101d0096623deb1bda62c9549"
        ],
        [
            "destruct j; hnf; simpl in *; intros.",
            "VernacExtend",
            "08e284dbd164d7d2d83d84a87add1313d7d5e824"
        ],
        [
            "generalize (JMaccess loc); case_eq (phi @ loc); intros.",
            "VernacExtend",
            "089bfafcbba0ade252b2a073ed7264c4a0d0e6fb"
        ],
        [
            "apply (necR_NO _ _ loc _ _ H) in H0.",
            "VernacExtend",
            "afd915101763386be0677eff56503a4c5aa0e662"
        ],
        [
            "rewrite H0; auto.",
            "VernacExtend",
            "48df2b0b453adadcea8e6914bccb68bfc33b286b"
        ],
        [
            "rewrite (necR_YES _ _ _ _ _ _ _ H H0); auto.",
            "VernacExtend",
            "a96127944190073692c4472d6939dd1695209d27"
        ],
        [
            "rewrite (necR_PURE _ _ _ _ _ H H0); auto.",
            "VernacExtend",
            "a72a7f346634b829d7b068f969111caf5ef55a8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "assert (necR (m_phi j) phi') by (constructor 1; symmetry in Heq_anonymous; apply Heq_anonymous).",
            "VernacExtend",
            "534c368700db4cc101d0096623deb1bda62c9549"
        ],
        [
            "destruct j; hnf; simpl in *; intros.",
            "VernacExtend",
            "08e284dbd164d7d2d83d84a87add1313d7d5e824"
        ],
        [
            "generalize (JMmax_access loc); case_eq (phi @ loc); intros.",
            "VernacExtend",
            "3bae6af19aa1a7c17128816c2d98ff5c2516add5"
        ],
        [
            "apply (necR_NO _ _ loc _ _ H) in H0.",
            "VernacExtend",
            "afd915101763386be0677eff56503a4c5aa0e662"
        ],
        [
            "rewrite H0; auto.",
            "VernacExtend",
            "48df2b0b453adadcea8e6914bccb68bfc33b286b"
        ],
        [
            "rewrite (necR_YES _ _ _ _ _ _ _ H H0); auto.",
            "VernacExtend",
            "a96127944190073692c4472d6939dd1695209d27"
        ],
        [
            "rewrite (necR_PURE _ _ _ _ _ H H0); auto.",
            "VernacExtend",
            "a72a7f346634b829d7b068f969111caf5ef55a8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "assert (necR (m_phi j) phi') by (constructor 1; symmetry in Heq_anonymous; apply Heq_anonymous).",
            "VernacExtend",
            "534c368700db4cc101d0096623deb1bda62c9549"
        ],
        [
            "destruct j; hnf; simpl in *; intros.",
            "VernacExtend",
            "08e284dbd164d7d2d83d84a87add1313d7d5e824"
        ],
        [
            "specialize (JMalloc loc H0).",
            "VernacExtend",
            "857f9b9c36d8022e98bb835ea93ae773934c19a9"
        ],
        [
            "apply (necR_NO _ _ loc _ _ H).",
            "VernacExtend",
            "de882061dc0fc9b65a01482789779be678eb9e46"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age1_juicy_mem_unpack: forall j j', age1_juicy_mem j = Some j' -> age (m_phi j) (m_phi j') /\\ m_dry j = m_dry j'.",
            "VernacStartTheoremProof",
            "bb791dce51af9a1e902b142f31e95789ec72783b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold age1_juicy_mem in H.",
            "VernacExtend",
            "ee81913579dde3ecc0c18b2de263962d602a8c0e"
        ],
        [
            "invSome.",
            "VernacExtend",
            "f9b0e980c61f8244d51be433c425e71a65913712"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "split; simpl; auto.",
            "VernacExtend",
            "e2ee7819fbb32d2c4a8d46eec291a3c64ca8c3fb"
        ],
        [
            "symmetry in H0; apply H0.",
            "VernacExtend",
            "35a04c3db7ccf6dd017db014e3cdf88d24b439dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age1_juicy_mem_unpack': forall j j', age (m_phi j) (m_phi j') /\\ m_dry j = m_dry j' -> age1_juicy_mem j = Some j'.",
            "VernacStartTheoremProof",
            "81830b377c209ca52b9684871ca84ce0b9c487c2"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold age1_juicy_mem.",
            "VernacExtend",
            "0aab2b38d63a40eeb939c8164032d11aebef30e2"
        ],
        [
            "generalize (eq_refl (age1 (m_phi j))).",
            "VernacExtend",
            "356ebf86336b2fa3e14d5cdb09d59c77b60548da"
        ],
        [
            "pattern (age1 (m_phi j)) at 1 3.",
            "VernacExtend",
            "841ee47c04e741970b8cf3bb409cf19420208dc3"
        ],
        [
            "rewrite H0; clear H0.",
            "VernacExtend",
            "fabeca7858ebb717928a37dd7ab85d95711cf62f"
        ],
        [
            "intros H0.",
            "VernacExtend",
            "7be07b7f0ac418af4d02cddf70af6f27f8714110"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct j, j'; simpl in *; subst; repeat f_equal; try apply proof_irr.",
            "VernacExtend",
            "6b95686a7a54d8a93dd69bcd9bb3c20aa10c7b47"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age1_juicy_mem_unpack'': forall j j', age (m_phi j) (m_phi j') -> m_dry j = m_dry j' -> age1_juicy_mem j = Some j'.",
            "VernacStartTheoremProof",
            "28715d042eb9f51c6d5f1adc71be8c5ea05d0bae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply age1_juicy_mem_unpack'.",
            "VernacExtend",
            "cfcf604f86b99a16ce360f5311bb42668d6dcf43"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmap_join_eq_level: forall phi1 phi2: rmap, joins phi1 phi2 -> level phi1 = level phi2.",
            "VernacStartTheoremProof",
            "c799dc51298958408ebd06159bfec69d3a46b5c1"
        ],
        [
            "intros until phi2; intro H.",
            "VernacExtend",
            "2de3656b140a2c1dcc89690840a637f190e830e0"
        ],
        [
            "destruct H as [? H].",
            "VernacExtend",
            "525b85dbd6ca474432329de67ace9280a4967afb"
        ],
        [
            "apply join_level in H; destruct H; congruence.",
            "VernacExtend",
            "982c18d3e62b647853b172e1aebf819c36dcab97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmap_join_sub_eq_level: forall phi1 phi2: rmap, join_sub phi1 phi2 -> level phi1 = level phi2.",
            "VernacStartTheoremProof",
            "3badae446d61bc0e795c8eac04a56ca7d110d38d"
        ],
        [
            "intros until phi2; intro H.",
            "VernacExtend",
            "2de3656b140a2c1dcc89690840a637f190e830e0"
        ],
        [
            "destruct H; apply join_level in H; destruct H; congruence.",
            "VernacExtend",
            "752181b15e87ca340edd2e029e03b1bd4e888b1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age1_juicy_mem_None1: forall j, age1_juicy_mem j = None -> age1 (m_phi j) = None.",
            "VernacStartTheoremProof",
            "bd7e89d48fc398034098df220f7e46942b640c3b"
        ],
        [
            "intros j H.",
            "VernacExtend",
            "e1029b95a4589a1a46696900831601e831ecbb3e"
        ],
        [
            "destruct j.",
            "VernacExtend",
            "01d6a18cdb100d2afee8d77e7fe64aa0aa4a1e68"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold age1_juicy_mem in H; simpl in H.",
            "VernacExtend",
            "1009d6a78f27e55f55a0887ea3607fd673231fb1"
        ],
        [
            "revert H; generalize (refl_equal (age1 phi)); pattern (age1 phi) at 1 3; destruct (age1 phi); intros; auto.",
            "VernacExtend",
            "4040d1857a612c842979581e5dd62b5fd61c89a9"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age1_juicy_mem_None2: forall j, age1 (m_phi j) = None -> age1_juicy_mem j = None.",
            "VernacStartTheoremProof",
            "c82e9c29f7a95f6549ec66ada0e24b542752c453"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold age1_juicy_mem.",
            "VernacExtend",
            "0aab2b38d63a40eeb939c8164032d11aebef30e2"
        ],
        [
            "generalize (eq_refl (age1 (m_phi j))).",
            "VernacExtend",
            "356ebf86336b2fa3e14d5cdb09d59c77b60548da"
        ],
        [
            "pattern (age1 (m_phi j)) at 1 3.",
            "VernacExtend",
            "841ee47c04e741970b8cf3bb409cf19420208dc3"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age1_juicy_mem_Some: forall j j', age1_juicy_mem j = Some j' -> age1 (m_phi j) = Some (m_phi j').",
            "VernacStartTheoremProof",
            "b7b72e9ce84344d63e46fd0cba0a8fae4b9cc947"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply age1_juicy_mem_unpack in H; intuition.",
            "VernacExtend",
            "0f5cdfab6f5cec01621f82c0ee5485d6e68826aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unage_juicy_mem: forall j' : juicy_mem, exists j : juicy_mem, age1_juicy_mem j = Some j'.",
            "VernacStartTheoremProof",
            "931fe345243078d2469f7863155b9c1283d62c83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct j' as [m phi'].",
            "VernacExtend",
            "232cd33bea57576a23356c3463dd69926a166149"
        ],
        [
            "destruct (af_unage age_facts phi') as [phi ?].",
            "VernacExtend",
            "04accd12371197dfdf217c6d07c657ca523bea07"
        ],
        [
            "assert (NEC: necR phi phi') by (constructor 1; auto).",
            "VernacExtend",
            "71545bfa44efa14eb7eb5fee7f5ddc8f7f3a3142"
        ],
        [
            "rename H into Hage.",
            "VernacExtend",
            "a3a4ad8230af1509923a0c8b2920d84575b9049e"
        ],
        [
            "assert (contents_cohere m phi).",
            "VernacExtend",
            "8ca82de703d523fedb817078cbcec07c01f88bdf"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "generalize (necR_YES phi phi' loc rsh sh (VAL v) pp NEC H); intro.",
            "VernacExtend",
            "e224e3ffcc61d370bd2c14c4d98297596c7c6ffc"
        ],
        [
            "destruct (JMcontents _ _ _ _ _ H0).",
            "VernacExtend",
            "bc3253490482935f989f151b382a8377e6495d03"
        ],
        [
            "rewrite H2 in H0.",
            "VernacExtend",
            "e125171e08531dd629ebb661886eab3f6051ba8d"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "generalize (necR_YES' _ _ loc rsh sh (VAL v) NEC); intro.",
            "VernacExtend",
            "874c5232fe858fb5c5db1812aa8356688ac22d70"
        ],
        [
            "apply H3 in H0.",
            "VernacExtend",
            "63f67de29d0e73476ad3989c90e7f6451a21729d"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "assert (access_cohere m phi).",
            "VernacExtend",
            "4eb84e7c5b09a156d141551ea2baa21bf74bd3d8"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "generalize (JMaccess loc); intros.",
            "VernacExtend",
            "55c97619f17701de834a77feddf95a9119930d6f"
        ],
        [
            "case_eq (phi @ loc); intros.",
            "VernacExtend",
            "b61b92be6054795be5b6df44c1e635f64b6af2ca"
        ],
        [
            "apply (necR_NO _ _ loc _ _ NEC) in H1.",
            "VernacExtend",
            "0a902a5b96ba7e976a43a3bd2b867ca2ee4758e8"
        ],
        [
            "rewrite H1 in H0; auto.",
            "VernacExtend",
            "8f1778821d18c5baa509302961ef3be209acaf61"
        ],
        [
            "apply (necR_YES _ _ _ _ _ _ _ NEC) in H1.",
            "VernacExtend",
            "2360b90325999afb64e4e2b26f263cac47900e1d"
        ],
        [
            "rewrite H1 in H0; auto.",
            "VernacExtend",
            "8f1778821d18c5baa509302961ef3be209acaf61"
        ],
        [
            "apply (necR_PURE _ _ _ _ _ NEC) in H1.",
            "VernacExtend",
            "588547b3452fb0e8b0a0e59f413d9aa51890cae2"
        ],
        [
            "rewrite H1 in H0; auto.",
            "VernacExtend",
            "8f1778821d18c5baa509302961ef3be209acaf61"
        ],
        [
            "assert (max_access_cohere m phi).",
            "VernacExtend",
            "ad716c5fb5bebeec0b82c8c9b20fb0c49d70e7c5"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "generalize (JMmax_access loc); intros.",
            "VernacExtend",
            "41d30ef5a087efa515989bc5dcb30c100169e021"
        ],
        [
            "case_eq (phi @ loc); intros.",
            "VernacExtend",
            "b61b92be6054795be5b6df44c1e635f64b6af2ca"
        ],
        [
            "apply (necR_NO _ _ _ _ _ NEC) in H2; rewrite H2 in H1; auto.",
            "VernacExtend",
            "2e670867d4583feb68c6fef8ec31f733bcdf3767"
        ],
        [
            "rewrite (necR_YES _ _ _ _ _ _ _ NEC H2) in H1; auto.",
            "VernacExtend",
            "f4067b1e08bad74605ae67035db26f881558c970"
        ],
        [
            "rewrite (necR_PURE _ _ _ _ _ NEC H2) in H1; auto.",
            "VernacExtend",
            "ed898f9a53467f839017878a0a439e6d4cece167"
        ],
        [
            "assert (alloc_cohere m phi).",
            "VernacExtend",
            "1e5ba545d77324b9a83b5ed42ede51a93accc3e4"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "generalize (JMalloc loc H2); intros.",
            "VernacExtend",
            "0189f678e416fcf08b47eeed78434d107c59b668"
        ],
        [
            "case_eq (phi @ loc); intros.",
            "VernacExtend",
            "b61b92be6054795be5b6df44c1e635f64b6af2ca"
        ],
        [
            "apply (necR_NO _ _ _ _ _ NEC) in H4; rewrite H4 in H3; auto.",
            "VernacExtend",
            "af5a487c3cb4c8e9272a0a2fda5e6c60aa59e65d"
        ],
        [
            "rewrite (necR_YES _ _ _ _ _ _ _ NEC H4) in H3; inv H3.",
            "VernacExtend",
            "971c2d19af328927de069d91db0955570c44c4ea"
        ],
        [
            "rewrite (necR_PURE _ _ _ _ _ NEC H4) in H3; inv H3.",
            "VernacExtend",
            "2a6872f1cd44f24ca2a7961d35131074e0a460dd"
        ],
        [
            "exists (mkJuicyMem m phi H H0 H1 H2).",
            "VernacExtend",
            "c50e9492254eb9e20ea14629807d1b470dd01ddd"
        ],
        [
            "apply age1_juicy_mem_unpack''; simpl; auto.",
            "VernacExtend",
            "8e692199176b74641914f73bf66e8cc00e627a99"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma level1_juicy_mem: forall j: juicy_mem, age1_juicy_mem j = None <-> level (m_phi j) = 0%nat.",
            "VernacStartTheoremProof",
            "ae96909dfbcfac38af6f24e62482533e94aeeae9"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "split; intro H.",
            "VernacExtend",
            "496dd5fc77c723ff896bbd9bc6dee3ccc3aa9bde"
        ],
        [
            "apply age1_level0.",
            "VernacExtend",
            "4f6dd9c8a0a8d73dd07f7f4d2303e0ada72fc61b"
        ],
        [
            "apply age1_juicy_mem_None1; auto.",
            "VernacExtend",
            "1958f9fb23cfd31323927a669ddfa17b714a0a38"
        ],
        [
            "apply age1_level0 in H.",
            "VernacExtend",
            "1c83653de59fc39eaa331d504a7b4197f5db114c"
        ],
        [
            "apply age1_juicy_mem_None2.",
            "VernacExtend",
            "73a9e1ff95818e4313074b095e9eefa626796088"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma level2_juicy_mem: forall j1 j2: juicy_mem, age1_juicy_mem j1 = Some j2 -> level (m_phi j1) = S (level (m_phi j2)).",
            "VernacStartTheoremProof",
            "e8748adc59f6288be90e050bc1e1e56a49cf58e7"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "destruct (age1_juicy_mem_unpack x y H).",
            "VernacExtend",
            "e9b42810ef34c87af3a2f8ba5dd7469760693d99"
        ],
        [
            "apply age_level in H0.",
            "VernacExtend",
            "c87f986006106a4d0adf74897b3c4423527d5e3d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma juicy_mem_ageable_facts: ageable_facts juicy_mem (fun j => level (m_phi j)) age1_juicy_mem.",
            "VernacStartTheoremProof",
            "abe91845dda627a44b725a622caa3663d413afd1"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply unage_juicy_mem.",
            "VernacExtend",
            "8f9d38e694e20de771fce248dbe739203f43a09c"
        ],
        [
            "apply level1_juicy_mem.",
            "VernacExtend",
            "7682859e3e47ab8ba3547a980431a0aec96f93a7"
        ],
        [
            "apply level2_juicy_mem.",
            "VernacExtend",
            "b3090523ff2f2432852dd3428f9c1c4b66c0a93f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance juicy_mem_ageable: ageable juicy_mem := mkAgeable _ (fun j => level (m_phi j)) age1_juicy_mem juicy_mem_ageable_facts.",
            "VernacInstance",
            "d0c59cbdecc333dd98f77d74c8c366bb8df088e8"
        ],
        [
            "Lemma level_juice_level_phi: forall (j: juicy_mem), level j = level (m_phi j).",
            "VernacStartTheoremProof",
            "13054c66583a0da7255213a2ae9e2a8c376a0b0e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma juicy_mem_ext: forall j1 j2, m_dry j1 = m_dry j2 -> m_phi j1 = m_phi j2 -> j1=j2.",
            "VernacStartTheoremProof",
            "47025f343db6037ce2ff5a1bf9a9464f4d672674"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct j1; destruct j2; simpl in *.",
            "VernacExtend",
            "11e41336ca9a4b45d18c20a857d3b068ac20adb2"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "f_equal; apply proof_irr.",
            "VernacExtend",
            "6645667c8eb88627dd9c1b14a310a927f61ac2ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unage_writable: forall (phi phi': rmap) loc, age phi phi' -> writable loc phi' -> writable loc phi.",
            "VernacStartTheoremProof",
            "36688d8a82a53963c34b85c79973af5ae1864125"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "apply age1_resource_at with (loc := loc) (r := phi @ loc) in H.",
            "VernacExtend",
            "53a260fd9bd8392745b1ac85c074c38f19619659"
        ],
        [
            "destruct (phi' @ loc); try contradiction.",
            "VernacExtend",
            "538bd5a1846b6898cb399a872308ed325c58f308"
        ],
        [
            "unfold writable.",
            "VernacExtend",
            "03754d14e11b812e6fd06bb98ad3b5203200cb09"
        ],
        [
            "destruct (phi @ loc); try discriminate.",
            "VernacExtend",
            "5c9bfa8240b48a50a57cc09fd837dcd79db3c9a1"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (phi' @ loc); inv H0.",
            "VernacExtend",
            "c07cbff2d24010620e0748ca4fad4b0f449440c2"
        ],
        [
            "rewrite resource_at_approx.",
            "VernacExtend",
            "7d18662bc2312a78cc412cc1e5f3805ea304002a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unage_readable: forall (phi phi': rmap) loc, age phi phi' -> readable loc phi' -> readable loc phi.",
            "VernacStartTheoremProof",
            "554151d1b619ce612bce4262de9a480da6ddd7f7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "apply age1_resource_at with (loc := loc) (r := phi @ loc) in H.",
            "VernacExtend",
            "53a260fd9bd8392745b1ac85c074c38f19619659"
        ],
        [
            "2: symmetry; apply resource_at_approx.",
            "VernacExtend",
            "d272c0b83295e8c0f43c3ca177d3b5a0ca7dedd2"
        ],
        [
            "destruct (phi' @ loc); try inv H0.",
            "VernacExtend",
            "225327882eff1c775217ca3ba5fed8786fb16955"
        ],
        [
            "destruct (phi @ loc); try inv H.",
            "VernacExtend",
            "b34b04ec5ad1d76760a6eb5e2d16b66c08004fde"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma readable_inv: forall phi loc, readable loc phi -> exists rsh, exists sh, exists v, exists pp, phi @ loc = YES rsh sh (VAL v) pp.",
            "VernacStartTheoremProof",
            "09ccd45d772f6de041f11182d16fc4306aef2512"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros phi loc H.",
            "VernacExtend",
            "883c4a530b7bbe68b89bb75936b2ec6ec960842c"
        ],
        [
            "destruct (phi @ loc); try solve [inversion H].",
            "VernacExtend",
            "aa141106d77af13a1cbff689f0b11a4d9c48172c"
        ],
        [
            "destruct k; try inv H.",
            "VernacExtend",
            "20ede3e8a0701d66403ab2abc608f93ee626b100"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fmap_option {A B} (v: option A) (m: B) (f: A -> B): B := match v with | None => m | Some v' => f v' end.",
            "VernacDefinition",
            "ef6e17e1abb6d5d898c0cf2702cbcaa2330365f2"
        ],
        [
            "Lemma resource_at_make_rmap: forall f g lev H Hg, resource_at (proj1_sig (make_rmap f g lev H Hg)) = f.",
            "VernacStartTheoremProof",
            "f349937af68c8b0460d0a627808a785125741584"
        ],
        [
            "refine (fun f g lev H Hg => match proj2_sig (make_rmap f g lev H Hg) with | conj _ (conj RESOURCE_AT _) => RESOURCE_AT end).",
            "VernacExtend",
            "1d234db71daacd9358c235a42764399ba1997054"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma resource_at_remake_rmap: forall f g lev H Hg, resource_at (proj1_sig (remake_rmap f g lev H Hg)) = f.",
            "VernacStartTheoremProof",
            "2b5f954a003ffd5a261014ca3b93a4e952eabc43"
        ],
        [
            "refine (fun f g lev H Hg => match proj2_sig (remake_rmap f g lev H Hg) with | conj _ (conj RESOURCE_AT _) => RESOURCE_AT end).",
            "VernacExtend",
            "3a41171d564bb615f424a688328cf2b2c8219ee3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ghost_of_make_rmap: forall f g lev H Hg, ghost_of (proj1_sig (make_rmap f g lev H Hg)) = g.",
            "VernacStartTheoremProof",
            "01329a5ca29742386a5748b7518b0c16d4d30476"
        ],
        [
            "refine (fun f g lev H Hg => match proj2_sig (make_rmap f g lev H Hg) with | conj _ (conj _ RESOURCE_AT) => RESOURCE_AT end).",
            "VernacExtend",
            "10b70f02d1d722528ea52396b229c95bb57347a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ghost_of_remake_rmap: forall f g lev H Hg, ghost_of (proj1_sig (remake_rmap f g lev H Hg)) = g.",
            "VernacStartTheoremProof",
            "ba3d5cae608f2729bbeec498d4f5fc5d9a80dde5"
        ],
        [
            "refine (fun f g lev H Hg => match proj2_sig (remake_rmap f g lev H Hg) with | conj _ (conj _ RESOURCE_AT) => RESOURCE_AT end).",
            "VernacExtend",
            "dd0a94b722c5a054a613a83aa588cb4fd9372abe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma level_make_rmap: forall f g lev H Hg, @level rmap _ (proj1_sig (make_rmap f g lev H Hg)) = lev.",
            "VernacStartTheoremProof",
            "c79e6b0dd7f533197f37797c974ad2a358ee0b69"
        ],
        [
            "refine (fun f g lev H Hg => match proj2_sig (make_rmap f g lev H Hg) with | conj LEVEL _ => LEVEL end).",
            "VernacExtend",
            "4016db8ed0735a12d28941ee39d268a3fa97f899"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma level_remake_rmap: forall f g lev H Hg, @level rmap _ (proj1_sig (remake_rmap f g lev H Hg)) = lev.",
            "VernacStartTheoremProof",
            "6e065ca39165df7de6641ad32735d8b2b313352c"
        ],
        [
            "refine (fun f g lev H Hg => match proj2_sig (remake_rmap f g lev H Hg) with | conj LEVEL _ => LEVEL end).",
            "VernacExtend",
            "fda4573563b92dccd6957a7affde7de265f45bc5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section inflate.",
            "VernacBeginSection",
            "39fcd72c947c45e2fe2e85b5a5b055df1ace158c"
        ],
        [
            "Variables (m: mem) (phi: rmap).",
            "VernacAssumption",
            "a475fc7d08b36c8051db0cf3b0604bd156f4b2a1"
        ],
        [
            "Definition inflate_initial_mem' (w: rmap) (loc: address) := match access_at m loc Cur with | Some Freeable => YES Share.top readable_share_top (VAL (contents_at m loc)) NoneP | Some Writable => YES Ews (writable_readable writable_Ews) (VAL (contents_at m loc)) NoneP | Some Readable => YES Ers readable_Ers (VAL (contents_at m loc)) NoneP | Some Nonempty => match w @ loc with PURE _ _ => w @ loc | _ => NO _ nonreadable_extern_retainer end | None => NO Share.bot bot_unreadable end.",
            "VernacDefinition",
            "7a7f4c9b085ec2adbb6543f7caf858b664d9f5b7"
        ],
        [
            "Lemma inflate_initial_mem'_fmap: forall w, resource_fmap (approx (level w)) (approx (level w)) oo inflate_initial_mem' w = inflate_initial_mem' w.",
            "VernacStartTheoremProof",
            "0b13f96084d932796527013eee88ea9a63fde9a8"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold inflate_initial_mem'.",
            "VernacExtend",
            "14562ffe0135e7b138dcd2ce81a541e5e6d5472c"
        ],
        [
            "extensionality loc.",
            "VernacExtend",
            "1e7eb6ee95191abc4fc69ac4ede8caa2d6671fd4"
        ],
        [
            "destruct (access_at m loc); try destruct p; try solve [unfold resource_fmap; f_equal; try apply preds_fmap_NoneP].",
            "VernacExtend",
            "8b97eb187ddb120f9aebbebe3e7efa56416a892a"
        ],
        [
            "rewrite <- level_core.",
            "VernacExtend",
            "ff84055a66acf86843c0cc169056b76bfd881d35"
        ],
        [
            "case_eq (w @ loc);intros; try reflexivity.",
            "VernacExtend",
            "b25f45cad720f49451e53503c5b4418cc4aefa04"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite level_core.",
            "VernacExtend",
            "311b7130b0585b6bfe481f394758f6b14e36a5b3"
        ],
        [
            "apply resource_at_approx.",
            "VernacExtend",
            "53a0be89142540ace752063765d3f9d213ace003"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition inflate_initial_mem (w: rmap): rmap := proj1_sig (make_rmap (inflate_initial_mem' w) (ghost_of w) _ (inflate_initial_mem'_fmap w) (ghost_of_approx w)).",
            "VernacDefinition",
            "9af0e3a4f93fbdd824463a3ef3b8dc620c29c430"
        ],
        [
            "Lemma inflate_initial_mem_level: forall w, level (inflate_initial_mem w) = level w.",
            "VernacStartTheoremProof",
            "00f8b31cc16727ac64f4b07ce90b8cd4666c9b47"
        ],
        [
            "intros; unfold inflate_initial_mem, inflate_initial_mem'.",
            "VernacExtend",
            "75ac4191b6439bb05fed224c9bf648ca14afe2f8"
        ],
        [
            "rewrite level_make_rmap; auto.",
            "VernacExtend",
            "17582c56d8fb3ff09a7f463bb1a165af17f876ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition all_VALs (phi: rmap) := forall l, match phi @ l with | YES _ _ k _ => isVAL k | _ => True end.",
            "VernacDefinition",
            "47682d4daa087586d2173ed8724320a089b17068"
        ],
        [
            "Lemma inflate_initial_mem_all_VALs: forall lev, all_VALs (inflate_initial_mem lev).",
            "VernacStartTheoremProof",
            "5f19525aad3b0ca865f30fe87e02508c0efe1f74"
        ],
        [
            "unfold inflate_initial_mem, inflate_initial_mem', all_VALs.",
            "VernacExtend",
            "2aa7fd3faf8ed966c2aa1ddd7f7a0acd0cf82240"
        ],
        [
            "intros; rewrite resource_at_make_rmap.",
            "VernacExtend",
            "c769de66c67b8c7cf036f8573dd83a3e622b1dca"
        ],
        [
            "destruct (access_at m l); try destruct p; auto.",
            "VernacExtend",
            "38df5e05fa61a82bae945e359d46d83f1b892cc1"
        ],
        [
            "case (lev @ l); simpl; intros; auto.",
            "VernacExtend",
            "110cefea3df04ccf3b3878446a5aa2cd649c570d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition inflate_alloc: rmap.",
            "VernacDefinition",
            "d55fa720c635135e89a54f823681456b807bbd43"
        ],
        [
            "refine (proj1_sig (remake_rmap (fun loc => fmap_option (res_option (phi @ loc)) (fmap_option (access_at m loc Cur) (NO Share.bot bot_unreadable) (fun p => match p with | Freeable => YES Share.top readable_share_top (VAL (contents_at m loc)) NoneP | _ => NO Share.Lsh Lsh_nonreadable end)) (fun _ => phi @ loc)) (ghost_of phi) (level phi) _ (ghost_of_approx phi))).",
            "VernacExtend",
            "102145e95e48d75eb579680d795865fb461ab68e"
        ],
        [
            "hnf; auto.",
            "VernacExtend",
            "65344d2383630f0b20be3e06df4e3dac3545a5cf"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "case_eq (phi @ l); simpl; intros; auto.",
            "VernacExtend",
            "db6af5787cacc6752daeb6ae211f1ee7442504ca"
        ],
        [
            "case_eq (access_at m l Cur); simpl; intros; auto.",
            "VernacExtend",
            "3df7dbc128a40d2176bbf2d7ec0707e5af8ad1c2"
        ],
        [
            "right; destruct p; simpl; auto.",
            "VernacExtend",
            "316105c2da46c3e0813a1445308e3a2dd0789d24"
        ],
        [
            "left; exists phi; split; auto.",
            "VernacExtend",
            "7bb8d0f361f97bd3a7347d957cde2cb4f0d36d86"
        ],
        [
            "right; destruct (access_at m l Cur); simpl; auto.",
            "VernacExtend",
            "575b3d615688c84885b8c7a5d276d5aa51ea8557"
        ],
        [
            "destruct p0; simpl; auto.",
            "VernacExtend",
            "20188655852df3a4f2f8c36f675d1e5fd83bc7f3"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma approx_map_idem: forall n (lp: preds), preds_fmap (approx n) (approx n) (preds_fmap (approx n) (approx n) lp) = preds_fmap (approx n) (approx n) lp.",
            "VernacStartTheoremProof",
            "69721fa8d0e6d399c1fb4aaff725a239da4632be"
        ],
        [
            "intros n ls.",
            "VernacExtend",
            "d15670c2f2529d6bd217b6e24e72cedcbcec4c7d"
        ],
        [
            "change (preds_fmap (approx n) (approx n) (preds_fmap (approx n) (approx n) ls)) with (((preds_fmap (approx n) (approx n)) oo (preds_fmap (approx n) (approx n))) ls).",
            "VernacExtend",
            "52be000c8245564d1d60d89411b5c601ceea71b9"
        ],
        [
            "rewrite preds_fmap_comp.",
            "VernacExtend",
            "386260a6a44ca4ce2f59db40a381c0f7c54b5b5e"
        ],
        [
            "rewrite (approx_oo_approx n).",
            "VernacExtend",
            "5e40bdf370a7e7dce27af7b2c094734a0874e702"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition inflate_store: rmap.",
            "VernacDefinition",
            "5f230809ba894c42f24aff688bfd70b7d92d83fb"
        ],
        [
            "refine ( proj1_sig (make_rmap (fun loc => match phi @ loc with | YES sh rsh (VAL _) _ => YES sh rsh (VAL (contents_at m loc)) NoneP | YES _ _ _ _ => resource_fmap (approx (level phi)) (approx (level phi)) (phi @ loc) | _ => phi @ loc end) (ghost_of phi) (level phi) _ (ghost_of_approx phi))).",
            "VernacExtend",
            "1bfa0efe03dac363b630b15b4de495fd09634765"
        ],
        [
            "hnf; auto.",
            "VernacExtend",
            "65344d2383630f0b20be3e06df4e3dac3545a5cf"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "extensionality l.",
            "VernacExtend",
            "9fc65292979c99219ff785a0ff10282cfe10e770"
        ],
        [
            "destruct l as (b, ofs).",
            "VernacExtend",
            "43bc3eb1df0946a02b889423c5482c38ba28d7ac"
        ],
        [
            "remember (phi @ (b, ofs)) as HPHI.",
            "VernacExtend",
            "42d045ad2843d63d4d487712d7592440196ca188"
        ],
        [
            "destruct HPHI; auto.",
            "VernacExtend",
            "375ec7a847c010c0f4ca0059a61c443fbbeed9f2"
        ],
        [
            "destruct k; try solve [ unfold resource_fmap; rewrite preds_fmap_NoneP; auto | unfold resource_fmap; rewrite approx_map_idem; auto ].",
            "VernacExtend",
            "7067bbc30ecb355a329b26697787add03c1bcd59"
        ],
        [
            "rewrite HeqHPHI.",
            "VernacExtend",
            "a0860ead07eccf9641f667892a76abb616ae4a84"
        ],
        [
            "apply resource_at_approx.",
            "VernacExtend",
            "53a0be89142540ace752063765d3f9d213ace003"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End inflate.",
            "VernacEndSegment",
            "ed9033c459b4468595d2ff67bb725f7a5740d1f6"
        ],
        [
            "Lemma adr_inv0: forall (b b': block) (ofs ofs': Z) (sz: Z), ~ adr_range (b, ofs) sz (b', ofs') -> b <> b' \\/ ~ ofs <= ofs' < ofs + sz.",
            "VernacStartTheoremProof",
            "1e34785a213c7e956585e6cb4f3a66cfd76aa2c4"
        ],
        [
            "intros until sz.",
            "VernacExtend",
            "42bbce12500f233e464a83e6e191205da9bb673e"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "destruct (peq b b').",
            "VernacExtend",
            "c60e47b4a72bae440e0629b1ff5a7dd382a3e95b"
        ],
        [
            "right; intro Contra.",
            "VernacExtend",
            "02fcec325afee3d8570737e961432215802fbd07"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold adr_range.",
            "VernacExtend",
            "b0e528febe3305fcc3909e875d29c117ccd363ea"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "left; intro Contra.",
            "VernacExtend",
            "aa7224eb7b5b7388501a36d4744cd42553babc62"
        ],
        [
            "apply n; auto.",
            "VernacExtend",
            "50f5fe9be649d10ce6a039598712426ef64bcbce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adr_inv: forall (b b': block) (ofs ofs': Z) ch, ~ adr_range (b, ofs) (size_chunk ch) (b', ofs') -> b <> b' \\/ ~ ofs <= ofs' < ofs + size_chunk ch.",
            "VernacStartTheoremProof",
            "979ef20e7f1282f18321f4c8b4ae07d97a96cd8d"
        ],
        [
            "intros until ch; intros H1; eapply adr_inv0; eauto.",
            "VernacExtend",
            "f6c0e57c1310dab24c4e8d481750d0b4d0434cd1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma range_inv0: forall ofs ofs' sz, ~ ofs <= ofs' < ofs + sz -> ofs' < ofs \\/ ofs' >= ofs + sz.",
            "VernacStartTheoremProof",
            "c79a01f07689b021256c4302b8b5eb25d155c291"
        ],
        [
            "intros until sz; intro H.",
            "VernacExtend",
            "43ac198f253c6b50e5e5d66f3cb9524abfe3069c"
        ],
        [
            "destruct (zle ofs ofs'); destruct (zlt ofs' (ofs + sz)); omega.",
            "VernacExtend",
            "0eb09a6f2434ee207ae33ba718a934162679d412"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma range_inv: forall ofs ofs' ch, ~ ofs <= ofs' < ofs + size_chunk ch -> ofs' < ofs \\/ ofs' >= ofs + size_chunk ch.",
            "VernacStartTheoremProof",
            "dfd55c8503a078b1e1fd932ee424e88beb3bce02"
        ],
        [
            "intros; eapply range_inv0; eauto.",
            "VernacExtend",
            "6e2f8acdee47e34b239d6fc4b6bf6579cefc7667"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_sh_Freeable_top: forall sh, perm_of_sh sh = Some Freeable -> sh = Share.top.",
            "VernacStartTheoremProof",
            "8eb73e543f70dc32fff8a546da29ecb12c6ef1d6"
        ],
        [
            "intros sh H.",
            "VernacExtend",
            "808a7bd4ab36185bcde00ce288b4b96427d6b699"
        ],
        [
            "unfold perm_of_sh in H.",
            "VernacExtend",
            "53c4e41959fdd2be012b6ec942c093f16fb19e49"
        ],
        [
            "repeat if_tac in H; solve [inversion H | auto].",
            "VernacExtend",
            "eaf87c70433447eb6179e5c74d01ba5c6c24f869"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nextblock_access_empty: forall m b ofs k, (b >= nextblock m)%positive -> access_at m (b, ofs) k = None.",
            "VernacStartTheoremProof",
            "ba19d4c142a55dc356b6d1248f6187df29faf00c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold access_at.",
            "VernacExtend",
            "62798782afe09c554efd8c2a969dcf4529e62bb3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (nextblock_noaccess m b ofs k).",
            "VernacExtend",
            "3f4b07d009df1f5b653de9de0ae995e91804a55c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section initial_mem.",
            "VernacBeginSection",
            "1c4d27a2befec43f10c7028ce3c439a886cb2add"
        ],
        [
            "Variables (m: mem) (w: rmap).",
            "VernacAssumption",
            "2d729ab2484d00cd0e41c146dd6e2173d9c358c1"
        ],
        [
            "Definition initial_rmap_ok := forall loc, ((fst loc >= nextblock m)%positive -> core w @ loc = NO Share.bot bot_unreadable) /\\ (match w @ loc with | PURE _ _ => (fst loc < nextblock m)%positive /\\ access_at m loc Cur = Some Nonempty /\\ max_access_at m loc = Some Nonempty | _ => True end).",
            "VernacDefinition",
            "739f780657bd51ee65dbe9b13f856d05147ffc6a"
        ],
        [
            "Hypothesis IOK: initial_rmap_ok.",
            "VernacAssumption",
            "9cce520d2099854e8dc1f5957d704c055e9ec340"
        ],
        [
            "End initial_mem.",
            "VernacEndSegment",
            "cc3d017cf55f67b7d2b67cdab0e829b50932b4fb"
        ],
        [
            "Definition empty_retainer (loc: address) := Share.bot.",
            "VernacDefinition",
            "418a9af731f13296c90bef11d11686aba43f19cf"
        ],
        [
            "Lemma perm_of_freeable: perm_of_sh Share.top = Some Freeable.",
            "VernacStartTheoremProof",
            "a55b602dfbadc3a28357410d0b60c57eb158d44f"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "rewrite if_true.",
            "VernacExtend",
            "8198b40d461a5545fc467eded52f2fe8cb3ac368"
        ],
        [
            "rewrite if_true; auto.",
            "VernacExtend",
            "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_writable: forall sh, writable_share sh -> sh <> Share.top -> perm_of_sh sh = Some Writable.",
            "VernacStartTheoremProof",
            "bac8ee1f1b5bfbb708bd2ebde2833d6e98817436"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "rewrite if_false; auto.",
            "VernacExtend",
            "1240282bd6190d3e1786b83abf332d1976c76b04"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_readable: forall sh (rsh: readable_share sh), ~writable0_share sh -> perm_of_sh sh = Some Readable.",
            "VernacStartTheoremProof",
            "05c2194395231fe89428a07ce7e9a3de69142846"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "rewrite if_false by auto.",
            "VernacExtend",
            "5a76c3b1b70df813cbad68c4a8a05295b8091083"
        ],
        [
            "rewrite if_true; auto.",
            "VernacExtend",
            "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_nonempty: forall sh, sh <> Share.bot -> ~readable_share sh -> perm_of_sh sh = Some Nonempty.",
            "VernacStartTheoremProof",
            "7588a47015c847c39a5c5fc27607d6d1dea78922"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "rewrite if_false by auto.",
            "VernacExtend",
            "5a76c3b1b70df813cbad68c4a8a05295b8091083"
        ],
        [
            "rewrite if_false by auto.",
            "VernacExtend",
            "5a76c3b1b70df813cbad68c4a8a05295b8091083"
        ],
        [
            "rewrite if_false by auto; auto.",
            "VernacExtend",
            "79e721c0823517dcaa34f2c49c109725be37d5b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_empty: perm_of_sh Share.bot = None.",
            "VernacStartTheoremProof",
            "0689ba33c6b027ddfb6d339f73795c527ee41a40"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "rewrite if_false.",
            "VernacExtend",
            "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
        ],
        [
            "rewrite if_false.",
            "VernacExtend",
            "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
        ],
        [
            "rewrite if_true; auto.",
            "VernacExtend",
            "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
        ],
        [
            "apply bot_unreadable.",
            "VernacExtend",
            "d2b929fc5ca7de72e76b4ef031fd032b7e5ad81a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply writable0_readable in H.",
            "VernacExtend",
            "595f8668db335213ddc10758026a6cc15d874f4c"
        ],
        [
            "apply bot_unreadable in H; auto.",
            "VernacExtend",
            "0c7768fea12698df5a0a9a666321086b46db3cbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_Ews: perm_of_sh Ews = Some Writable.",
            "VernacStartTheoremProof",
            "0ffdfc550f7cf70b7aa70fd31287fa8e855ad703"
        ],
        [
            "unfold perm_of_sh, Ews, extern_retainer.",
            "VernacExtend",
            "62ecd4037f24bd37f3595f2f2642cd6fcab69cff"
        ],
        [
            "rewrite if_true.",
            "VernacExtend",
            "8198b40d461a5545fc467eded52f2fe8cb3ac368"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite if_false; auto.",
            "VernacExtend",
            "1240282bd6190d3e1786b83abf332d1976c76b04"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite Share.lub_commute in H.",
            "VernacExtend",
            "87baeabd92611e9ae58d6d15fe0718955fa01e6b"
        ],
        [
            "pose proof lub_Lsh_Rsh.",
            "VernacExtend",
            "41759aebbb5aa11b58f19f3c36fcb775d9a872bf"
        ],
        [
            "rewrite Share.lub_commute in H0.",
            "VernacExtend",
            "a4ba1148b2af80f570188f79fb7b36d947714e9e"
        ],
        [
            "rewrite <- H in H0.",
            "VernacExtend",
            "044ef0a64c068347d38112a9feb1635f78270f85"
        ],
        [
            "apply Share.distrib_spec in H0.",
            "VernacExtend",
            "9925295b604ef499947c005774a755944aa0d397"
        ],
        [
            "destruct (Share.split Share.Lsh) eqn:?H; simpl in *.",
            "VernacExtend",
            "edb04064688cdbf3230a515bf8199937c48ebb53"
        ],
        [
            "pose proof (nonemp_split_neq1 Share.Lsh t t0).",
            "VernacExtend",
            "8286138e6fb3b8e1ab1d52c40db6183e9f3f1fce"
        ],
        [
            "spec H2.",
            "VernacExtend",
            "ccbc913e682d1020971c7fd5f1b9a88216edea30"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply identity_share_bot in H3.",
            "VernacExtend",
            "2e40fb47513acf2b541f6b721573ba5bbefe48ee"
        ],
        [
            "contradiction Lsh_bot_neq.",
            "VernacExtend",
            "36b3d36d1b672544d1b1d65a7d710e3ba458e7b3"
        ],
        [
            "subst t.",
            "VernacExtend",
            "9a338ade929583d1d9999c5f080f6e2c965d6617"
        ],
        [
            "apply H2; auto.",
            "VernacExtend",
            "30acbf5144f9dcdba4f738b81d251d83daba847e"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "rewrite glb_Rsh_Lsh.",
            "VernacExtend",
            "5ae8cdb4f2d90885e7cbf0cdfe7603814ca1068a"
        ],
        [
            "rewrite Share.glb_commute.",
            "VernacExtend",
            "c7aa2ca1c2cacfb5aaf79a73ad4af3b6b141785a"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Share.ord_antisym.",
            "VernacExtend",
            "d0c80ca5b35a82a119003eb73dbaf0e584aaead7"
        ],
        [
            "rewrite <- glb_Lsh_Rsh.",
            "VernacExtend",
            "7f10ef9636c7bac92ce8b88e988196e6c5a02fb0"
        ],
        [
            "apply glb_less_both.",
            "VernacExtend",
            "b3d251c30597b0697308e8daf541be0d687e4858"
        ],
        [
            "destruct (Share.split Share.Lsh) eqn:H.",
            "VernacExtend",
            "9cfc73dfc2dc947ff7e3d6da993e7df679a0fef8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Share.split_together in H.",
            "VernacExtend",
            "15fc543ab18c4fff38ca49483759e282bd7860f8"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "apply Share.lub_upper1.",
            "VernacExtend",
            "b953252956af316ab4f358f76f099e185a0783bc"
        ],
        [
            "apply Share.ord_refl.",
            "VernacExtend",
            "378a4bea1f2477d2fc83d2cddc6944e25b27d82f"
        ],
        [
            "apply Share.bot_correct.",
            "VernacExtend",
            "fcb0e346cfcecef6734116975a6099f4f502a45a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold writable_share.",
            "VernacExtend",
            "88f58e20aa191e198234885170909c6a955cf091"
        ],
        [
            "apply leq_join_sub.",
            "VernacExtend",
            "3fff34a85cde33bcdf7d12bcb66c5c1e11b2a5a9"
        ],
        [
            "apply Share.lub_upper2.",
            "VernacExtend",
            "9f611e98fdac18babb257ab855c88dc98c7f41d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_Ers: perm_of_sh Ers = Some Readable.",
            "VernacStartTheoremProof",
            "d24d00a169f75fd4d895907b61111525fb07e9c1"
        ],
        [
            "unfold perm_of_sh, Ers, extern_retainer.",
            "VernacExtend",
            "6f7ab150cd36b40ea6563fbeaa23999a527b0ea0"
        ],
        [
            "rewrite if_false.",
            "VernacExtend",
            "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite if_true; auto.",
            "VernacExtend",
            "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
        ],
        [
            "apply readable_share_lub.",
            "VernacExtend",
            "f215b10184abefa66539cafb562430a68e0019a9"
        ],
        [
            "unfold readable_share.",
            "VernacExtend",
            "81db76555770dee3886332dc2cd6171b48abe2d6"
        ],
        [
            "rewrite glb_split_x.",
            "VernacExtend",
            "62cec800d4e5759e37d9fe32fce0e6366da36d30"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply identity_share_bot in H.",
            "VernacExtend",
            "360bf432e0e222aa9bde96f5057ce76c7c20b999"
        ],
        [
            "destruct (Share.split Share.Rsh) eqn:H0.",
            "VernacExtend",
            "ae4419e7a700b0de430cc549d348567294eb386f"
        ],
        [
            "apply Share.split_nontrivial in H0.",
            "VernacExtend",
            "3b041bd2f22a95893edbc5c117800db6b09cf104"
        ],
        [
            "unfold Share.Rsh in H0.",
            "VernacExtend",
            "1e0b88fca7d17007fd1d4b7678699b0b07c53cd9"
        ],
        [
            "destruct (Share.split Share.top) eqn:H1.",
            "VernacExtend",
            "6e8ee1874a71acc4445a7e957d2b8adcc6867ea0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply Share.split_nontrivial in H1.",
            "VernacExtend",
            "2bc8893c7601da257dc7c5b1bd7b5f73e7442a5b"
        ],
        [
            "apply Share.nontrivial; auto.",
            "VernacExtend",
            "7e2dfbaea3c3f5a6b9be458ab8dbf80c76621dfd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in H; auto.",
            "VernacExtend",
            "af8355a11fc9876408a43532409718a3dccf5638"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold writable_share.",
            "VernacExtend",
            "88f58e20aa191e198234885170909c6a955cf091"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply leq_join_sub in H.",
            "VernacExtend",
            "2ae99ac4de4d6f8e7685d348bb4f20cee8ab02ea"
        ],
        [
            "apply Share.ord_spec2 in H.",
            "VernacExtend",
            "eeaee825c0ef030b08b0336bacc962570287fb36"
        ],
        [
            "apply (f_equal (Share.glb Share.Rsh)) in H.",
            "VernacExtend",
            "68cec428bc12173ce476d50ab91883a74d75b090"
        ],
        [
            "rewrite Share.distrib1 in H.",
            "VernacExtend",
            "bb67c7bf0c9af160f29d2a9efee661cc8ed55286"
        ],
        [
            "rewrite Share.glb_idem in H.",
            "VernacExtend",
            "1cb77b6eda3f59fdfdb46d234ffcc4c91ebcb89e"
        ],
        [
            "rewrite Share.lub_absorb in H.",
            "VernacExtend",
            "372c8415728811d1978e1b2b1f218c6a6ee533cb"
        ],
        [
            "rewrite Share.distrib1 in H.",
            "VernacExtend",
            "bb67c7bf0c9af160f29d2a9efee661cc8ed55286"
        ],
        [
            "rewrite (@sub_glb_bot Share.Rsh (fst (Share.split Share.Lsh)) Share.Lsh) in H.",
            "VernacExtend",
            "f809bf02fb7a24b8c296c7967492ba785dd9d778"
        ],
        [
            "rewrite Share.lub_commute, Share.lub_bot in H.",
            "VernacExtend",
            "e8a2aa82de3bf735735cc5bbdd3fea894f61a934"
        ],
        [
            "rewrite glb_split_x in H.",
            "VernacExtend",
            "ecd35416303e95be431cd9f72555204465a032fe"
        ],
        [
            "destruct (Share.split Share.Rsh) eqn:H0.",
            "VernacExtend",
            "ae4419e7a700b0de430cc549d348567294eb386f"
        ],
        [
            "apply nonemp_split_neq1 in H0.",
            "VernacExtend",
            "2935ef7ec0249d139c6876152cfa8f641927ac3e"
        ],
        [
            "simpl in *; subst.",
            "VernacExtend",
            "979ced00f4598ad3717ed5f8b84cb9742e4a513e"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply nonidentity_Rsh.",
            "VernacExtend",
            "c1862bb6b8f57a5fbd8310cec6430dedcdd5f0a2"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "exists (snd (Share.split Share.Lsh)).",
            "VernacExtend",
            "c9686940067e47e08e82d9bf893095f9f415c3d0"
        ],
        [
            "destruct (Share.split Share.Lsh) eqn:H.",
            "VernacExtend",
            "9cfc73dfc2dc947ff7e3d6da993e7df679a0fef8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply Share.split_disjoint; eauto.",
            "VernacExtend",
            "8c9cb871b9d51fad1a45b1005e731565a0ac5a12"
        ],
        [
            "eapply Share.split_together; eauto.",
            "VernacExtend",
            "fc30e14a4e791e7841bbc367927f8d6f303b1d08"
        ],
        [
            "apply glb_Rsh_Lsh.",
            "VernacExtend",
            "6a2f3d33b0c08695550681f39c028816c5c2687a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extern_retainer_neq_bot: extern_retainer <> Share.bot.",
            "VernacStartTheoremProof",
            "e568c29be86f24540d95c7e3b1d9b12991d825f4"
        ],
        [
            "unfold extern_retainer.",
            "VernacExtend",
            "e37778dde1f3b79e3bc7057b553cfae12237a040"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct (Share.split Share.Lsh) eqn:H0.",
            "VernacExtend",
            "d4dbb712e742dcf809dccece3636ad00f4790593"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "pose proof (Share.split_together _ _ _ H0).",
            "VernacExtend",
            "fb4e036c63c6ce59b20cd6b836b29c7f1a278db5"
        ],
        [
            "rewrite Share.lub_commute, Share.lub_bot in H.",
            "VernacExtend",
            "e8a2aa82de3bf735735cc5bbdd3fea894f61a934"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply nonemp_split_neq2 in H0.",
            "VernacExtend",
            "7f404f4688a40b48be1b2b0d5a06769d82cea1ee"
        ],
        [
            "contradiction H0; auto.",
            "VernacExtend",
            "5de982052c0e96f3b25e83792ba44bedab69033c"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "unfold Share.Lsh.",
            "VernacExtend",
            "de197f28a21c7193fe3017a3833f5d617a3a2188"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply identity_share_bot in H.",
            "VernacExtend",
            "360bf432e0e222aa9bde96f5057ce76c7c20b999"
        ],
        [
            "destruct (Share.split Share.top) eqn:H0.",
            "VernacExtend",
            "2a7863bcaa0c553068d47d1adf5ffadf2e8d9150"
        ],
        [
            "simpl in *; subst.",
            "VernacExtend",
            "979ced00f4598ad3717ed5f8b84cb9742e4a513e"
        ],
        [
            "apply split_nontrivial' in H0.",
            "VernacExtend",
            "f92475cece206b058b84056d7c7b504009b0f765"
        ],
        [
            "apply identity_share_bot in H0.",
            "VernacExtend",
            "c697abd3712decf48c713f6c010c1ae66f04faf9"
        ],
        [
            "apply Share.nontrivial; auto.",
            "VernacExtend",
            "7e2dfbaea3c3f5a6b9be458ab8dbf80c76621dfd"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply bot_identity.",
            "VernacExtend",
            "1533895df57cb12584946f945937b197f80b2c10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_order''_trans: forall a b c, Mem.perm_order'' a b -> Mem.perm_order'' b c -> Mem.perm_order'' a c.",
            "VernacStartTheoremProof",
            "4a7f07f109716be2177fa10a93628557cde53a50"
        ],
        [
            "intros a b c H1 H2; destruct a, b, c; inversion H1; inversion H2; subst; eauto; eapply perm_order_trans; eauto.",
            "VernacExtend",
            "6255c05ce25fbf89f2e186dc0a6ef1f8763cd361"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition initial_mem (m: mem) lev (IOK: initial_rmap_ok m lev) : juicy_mem.",
            "VernacDefinition",
            "2f722f048821d421b0174e4990b87666b06d52af"
        ],
        [
            "refine (mkJuicyMem m (inflate_initial_mem m lev) _ _ _ _); unfold inflate_initial_mem, inflate_initial_mem'; hnf; intros; try rewrite resource_at_make_rmap in *.",
            "VernacExtend",
            "acaf64c5017155299544fdf1eac61f278562d729"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "revert H; case_eq (access_at m loc Cur); intros.",
            "VernacExtend",
            "e387836cd1272e50fc4840e730c4b54275501a11"
        ],
        [
            "destruct p; inv H0; auto.",
            "VernacExtend",
            "0b5c57499fed48ca59ed332db3788809122a8cb0"
        ],
        [
            "revert H2; case_eq (lev @ loc); intros; congruence.",
            "VernacExtend",
            "d84340281594dd882bc875560ddc6a600c2dfa24"
        ],
        [
            "destruct (max_access_at m loc); try destruct p; try congruence.",
            "VernacExtend",
            "f894f16993eb0fe6adc1f60e0c6f3ab18d823244"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "destruct (access_at m loc) eqn:?; try destruct p; auto; simpl.",
            "VernacExtend",
            "709e9f2553f05407f4b8b3a4a1e15d5f63f43881"
        ],
        [
            "apply perm_of_freeable.",
            "VernacExtend",
            "63da4381f10f7c70b389d5b3e353a2bdb574b80c"
        ],
        [
            "apply perm_of_Ews.",
            "VernacExtend",
            "331abbc6bf5a288c3bfaf1fa9bea812ec5bf76ad"
        ],
        [
            "apply perm_of_Ers.",
            "VernacExtend",
            "84cedc46bfd444dc1a269d32b0d913c839ec796a"
        ],
        [
            "destruct (IOK loc).",
            "VernacExtend",
            "e0c37fe532da11959f1a4f1ccd2670c05809b2a9"
        ],
        [
            "destruct (lev @ loc).",
            "VernacExtend",
            "aac98eed697979b4071aa2d3b01b82493db67b9a"
        ],
        [
            "simpl; rewrite if_false by apply extern_retainer_neq_bot; auto.",
            "VernacExtend",
            "e93e78c66831dd41b2accd4267b081083879aa7f"
        ],
        [
            "simpl; rewrite if_false by apply extern_retainer_neq_bot; auto.",
            "VernacExtend",
            "e93e78c66831dd41b2accd4267b081083879aa7f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite if_true; auto.",
            "VernacExtend",
            "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "generalize (perm_cur_max m (fst loc) (snd loc)); unfold perm; intros.",
            "VernacExtend",
            "b2e8e2157539d2dac5eed99f79ad789c2e50e11d"
        ],
        [
            "case_eq (access_at m loc Cur); try destruct p; intros.",
            "VernacExtend",
            "8928d6eedfc35ba19240ec2cb759dcc9f39183ee"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold perm_order'', perm_order', max_access_at in *.",
            "VernacExtend",
            "5bfdc21ba513197e3d1ccbad448a89dce7a1d51f"
        ],
        [
            "simpl; rewrite perm_of_freeable.",
            "VernacExtend",
            "baa3bdd5492f1435f13e0b7a78f0db6d7b5877db"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold access_at in H0.",
            "VernacExtend",
            "cb18fcc1d5a3c28f924a0f275e8501708c534e69"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite perm_of_Ews.",
            "VernacExtend",
            "fa60c9a2b0a42bbcd1d5017a83622a24c0f5d57e"
        ],
        [
            "unfold perm_order'', perm_order', max_access_at, access_at in *.",
            "VernacExtend",
            "5d86cbe0ee3fca9132e15262c9475b935fbf9357"
        ],
        [
            "rewrite H0 in *.",
            "VernacExtend",
            "af83a584973699e6385aaceb6dfa23390deb3419"
        ],
        [
            "specialize (H Writable).",
            "VernacExtend",
            "1171450337884300d69c49ee318cf3e277e3ccf7"
        ],
        [
            "spec H.",
            "VernacExtend",
            "c7a045c1cfd9908cdf3626bbe876cad8b9f0c976"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite perm_of_Ers.",
            "VernacExtend",
            "670508ed09a9c760d38213080e410bb389d5fc10"
        ],
        [
            "unfold perm_order'', perm_order', max_access_at, access_at in *.",
            "VernacExtend",
            "5d86cbe0ee3fca9132e15262c9475b935fbf9357"
        ],
        [
            "rewrite H0 in *.",
            "VernacExtend",
            "af83a584973699e6385aaceb6dfa23390deb3419"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (IOK loc).",
            "VernacExtend",
            "e0c37fe532da11959f1a4f1ccd2670c05809b2a9"
        ],
        [
            "eapply perm_order''_trans; [apply (access_max m (fst loc) (snd loc))|].",
            "VernacExtend",
            "fd8b2acaede6a65bdebf2ed61d32d37880a119eb"
        ],
        [
            "unfold access_at in H0; rewrite H0.",
            "VernacExtend",
            "625c7258ecd5cac1eb8742efd16d1a8a9a486dcb"
        ],
        [
            "destruct (lev @ loc) ; simpl; try destruct (@eq_dec Share.t Share.EqDec_share extern_retainer Share.bot); try constructor.",
            "VernacExtend",
            "bd739d74e067535d2efaeb725f96d976e584ae3b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (eq_dec Share.bot Share.bot) as [e|n]; [| exfalso; apply n; reflexivity].",
            "VernacExtend",
            "15c489b98833f079a4d46afea023280232eb1900"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "apply (access_max m).",
            "VernacExtend",
            "9dd0a792e939ed3b22b309216c3f232f78edcb55"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold access_at.",
            "VernacExtend",
            "62798782afe09c554efd8c2a969dcf4529e62bb3"
        ],
        [
            "unfold block; rewrite (nextblock_noaccess m (fst loc) (snd loc) Cur); auto.",
            "VernacExtend",
            "08d0c7a0e3726be5019b0f2ac78eb8548c9289a5"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition juicy_mem_level (j: juicy_mem) (lev: nat) := level (m_phi j) = lev.",
            "VernacDefinition",
            "8888b55fac81fe8527076dd15a601f3ddb748478"
        ],
        [
            "Lemma initial_mem_level: forall lev m j IOK, j = initial_mem m lev IOK -> juicy_mem_level j (level lev).",
            "VernacStartTheoremProof",
            "ef178cad4eb90d0685255253c67e4cbbbd8c814d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct j; simpl.",
            "VernacExtend",
            "91a3fb4cf04ba148f81b4789a2625d7ab926c18a"
        ],
        [
            "unfold initial_mem in H.",
            "VernacExtend",
            "e4c08e963421867def785005a50fbe1cb657582a"
        ],
        [
            "inversion H; subst.",
            "VernacExtend",
            "123ebc73101dcac5781200440a60232218464ea1"
        ],
        [
            "unfold juicy_mem_level.",
            "VernacExtend",
            "67444c60a9f17b043d554be00f50c4becc4283c9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "erewrite inflate_initial_mem_level; eauto.",
            "VernacExtend",
            "a76850c1e2150adc1caa6da01301aed8cf246645"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma initial_mem_all_VALs: forall lev m j IOK, j = initial_mem m lev IOK -> all_VALs (m_phi j).",
            "VernacStartTheoremProof",
            "fdc4f8e72d5728bbe9ee7e97ab058c641d228cce"
        ],
        [
            "intros until 1; intros (b, ofs).",
            "VernacExtend",
            "ece8466ed0c1c1c3df212f045462722d3e50c2fd"
        ],
        [
            "destruct j; unfold initial_mem in H; inversion H; subst.",
            "VernacExtend",
            "d9b1eff034b36978966d4586685bbe3fb73c2f88"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold inflate_initial_mem, inflate_initial_mem'; rewrite resource_at_make_rmap.",
            "VernacExtend",
            "8051a444ebd6d3d69a8022d576a8c555acc088f8"
        ],
        [
            "destruct (access_at m (b, ofs)); try destruct p; auto.",
            "VernacExtend",
            "a60dd7202f6a26028bbc79cc831b98566386ca1e"
        ],
        [
            "case_eq (lev @ (b,ofs)); intros; auto.",
            "VernacExtend",
            "58204fd2f9a03a90e1e94e52ac08b8a7b05f2c91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_mem_access: forall m b ofs p, perm m b ofs Cur p -> exists p', (perm_order p' p /\\ access_at m (b, ofs) Cur = Some p').",
            "VernacStartTheoremProof",
            "3d96d5735e112fd9fbfb1956cde0e0ab5b6fd0a8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite perm_access in H.",
            "VernacExtend",
            "d9739c4201234f2c6cfb89a59d5afd72f00ca180"
        ],
        [
            "red in H.",
            "VernacExtend",
            "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
        ],
        [
            "destruct (access_at m (b, ofs) Cur); try contradiction; eauto.",
            "VernacExtend",
            "58cb07c2949ad9f8c4075f3fd922396008fa88d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section store.",
            "VernacBeginSection",
            "503e4ff83a74d83485528d1abc9d93eae8eacc17"
        ],
        [
            "Variables (jm: juicy_mem) (m': mem) (ch: memory_chunk) (b: block) (ofs: Z) (v: val) (STORE: store ch (m_dry jm) b ofs v = Some m').",
            "VernacAssumption",
            "5b7e46e894d856fc9ac8dd4ed60ef40d86aecf72"
        ],
        [
            "Lemma store_phi_elsewhere_eq: forall rsh sh mv loc', ~ adr_range (b, ofs) (size_chunk ch) loc' -> (m_phi jm) @ loc' = YES rsh sh (VAL mv) NoneP -> contents_at m' loc' = mv.",
            "VernacStartTheoremProof",
            "89d51c7044ea38cacd28bab642a0bdd4a6b30ed0"
        ],
        [
            "destruct jm.",
            "VernacExtend",
            "8795f89844d770dd0654a8ef328b3253248c83f1"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "clear jm.",
            "VernacExtend",
            "8144aef320ac66a080b53673a8cae27211a63dee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold contents_at.",
            "VernacExtend",
            "355fb39404b1a9523a8d490a90045797e265ef16"
        ],
        [
            "rewrite store_mem_contents with (chunk := ch) (m1 := m) (b := b) (ofs := ofs) (v := v); auto.",
            "VernacExtend",
            "819698e914aa4e0e56fbb9cccb7ed16351aed73b"
        ],
        [
            "destruct loc' as [b' ofs'].",
            "VernacExtend",
            "9dcc3f72ba258083a6d53ed74fe052c21911ca90"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (peq b' b).",
            "VernacExtend",
            "0f30722c1c4f01f2a3c703767998c6242ecd478a"
        ],
        [
            "destruct (adr_inv b b' ofs ofs' ch H).",
            "VernacExtend",
            "3bae64170571c5c85ea1a43fe0899e3839f18b58"
        ],
        [
            "symmetry in e.",
            "VernacExtend",
            "063739eb53c2f93de3428d3591ef3e5c0eb1d7dd"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite PMap.gss.",
            "VernacExtend",
            "b5a245c2e8793ec855a664f9951af0c15417e45b"
        ],
        [
            "rewrite setN_outside.",
            "VernacExtend",
            "7661ff73f59ff6e4f69544e8d76050bc104812ed"
        ],
        [
            "destruct (JMcontents _ _ _ _ _ H0) as [H5 _].",
            "VernacExtend",
            "80e0bae4258c249b183da2b6c53824da494f82ae"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "destruct (range_inv _ _ _ H1) as [H1'|H1'].",
            "VernacExtend",
            "718e2dd1c1acd24c1de065a7d2b1222a18fb3014"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite encode_val_length.",
            "VernacExtend",
            "b0e90aedf59ee48cea6adf5d40d7d77ee1bd6402"
        ],
        [
            "rewrite <- size_chunk_conv.",
            "VernacExtend",
            "901d4a55d66f5c2aee307b32100ce3bf270b8f5f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite PMap.gso; auto.",
            "VernacExtend",
            "fd359ee8aa72b151984c0d9320f278a59a02dd91"
        ],
        [
            "destruct (JMcontents _ _ _ _ _ H0) as [H1 _].",
            "VernacExtend",
            "da77c31ffbfcb8471396379fbf30376cfd1d3674"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition store_juicy_mem: juicy_mem.",
            "VernacDefinition",
            "a2c0d56b50ffb43276978929c5942947cf275f2d"
        ],
        [
            "refine (mkJuicyMem m' (inflate_store m' (m_phi jm)) _ _ _ _).",
            "VernacExtend",
            "ba11f8b35e79925d71118ad549f7b71cb4f79d4e"
        ],
        [
            "intros rsh sh' v' loc' pp H2.",
            "VernacExtend",
            "d49dbf3d708ea32379c533a840d4a17a45fab555"
        ],
        [
            "unfold inflate_store in H2; rewrite resource_at_make_rmap in H2.",
            "VernacExtend",
            "bb29f8442ca596d4c6140efeeaa656cc0bdb81ab"
        ],
        [
            "destruct (m_phi jm @ loc'); try destruct k; try solve [inversion H2].",
            "VernacExtend",
            "5030bf30ac4d5b4c5d6640f666bdf9d25c62fa82"
        ],
        [
            "inversion H2; auto.",
            "VernacExtend",
            "ea1132527ad99368fb4b34137c12eb88448ba881"
        ],
        [
            "intro loc; generalize (juicy_mem_access jm loc); intro H0.",
            "VernacExtend",
            "334939bdadd6f4067a2c73983316c3345533da90"
        ],
        [
            "unfold inflate_store; rewrite resource_at_make_rmap.",
            "VernacExtend",
            "df172867dc5ec7f97f219d19224ee0f1a980d012"
        ],
        [
            "rewrite <- (Memory.store_access _ _ _ _ _ _ STORE).",
            "VernacExtend",
            "3a6a5ac4c8884b0ed8c729491be7d8ab62495905"
        ],
        [
            "destruct (m_phi jm @ loc); try destruct k; auto.",
            "VernacExtend",
            "95b44ab3751f5adb2034fb126331d0bdd6046b2d"
        ],
        [
            "intro loc; generalize (juicy_mem_max_access jm loc); intro H1.",
            "VernacExtend",
            "26b361e59b733e6a29bf3d375da9c5342100054c"
        ],
        [
            "unfold inflate_store; rewrite resource_at_make_rmap.",
            "VernacExtend",
            "df172867dc5ec7f97f219d19224ee0f1a980d012"
        ],
        [
            "unfold max_access_at in *.",
            "VernacExtend",
            "77a7c640d38f7b9542d001203af96917ce52714b"
        ],
        [
            "rewrite <- (Memory.store_access _ _ _ _ _ _ STORE).",
            "VernacExtend",
            "3a6a5ac4c8884b0ed8c729491be7d8ab62495905"
        ],
        [
            "apply nextblock_store in STORE.",
            "VernacExtend",
            "7eaefb08b93df96ee7570754354c064cd6a3facd"
        ],
        [
            "destruct (m_phi jm @ loc); auto.",
            "VernacExtend",
            "9e49777218aa867a635755c069e7941392e1adde"
        ],
        [
            "destruct k; simpl; try assumption.",
            "VernacExtend",
            "cfca94ee203eaea4470194e8e51522f1793be51d"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "unfold inflate_store.",
            "VernacExtend",
            "106b8407ce3c46e43c202e702fc1f2c2e4d4bf5c"
        ],
        [
            "rewrite resource_at_make_rmap.",
            "VernacExtend",
            "8c357c8ccf2cc08642a35d18032ae2f7599bca42"
        ],
        [
            "generalize (juicy_mem_alloc_cohere jm loc); intro.",
            "VernacExtend",
            "12d79f80805d344afa44291011023b3a8afb00fe"
        ],
        [
            "rewrite (nextblock_store _ _ _ _ _ _ STORE) in H.",
            "VernacExtend",
            "c65dd9ce608fe0314d73c32dcb471d4da3a04fc9"
        ],
        [
            "rewrite (H0 H).",
            "VernacExtend",
            "6ea9bcf8d9e61366a630ecfd4a54a83c1cdda053"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End store.",
            "VernacEndSegment",
            "31c30e4e8cfc2846940c447e35e0e4c172a51ae5"
        ],
        [
            "Section storebytes.",
            "VernacBeginSection",
            "ff055b8a0b674cb4f0c4f22a16a813f6b73a62a7"
        ],
        [
            "Variables (jm: juicy_mem) (m': mem) (b: block) (ofs: Z) (bytes: list memval) (STOREBYTES: storebytes (m_dry jm) b ofs bytes = Some m').",
            "VernacAssumption",
            "9c815bd59e93bc7be880b8abaecf368d535617cd"
        ],
        [
            "Lemma storebytes_phi_elsewhere_eq: forall rsh sh mv loc', ~ adr_range (b, ofs) (Zlength bytes) loc' -> (m_phi jm) @ loc' = YES rsh sh (VAL mv) NoneP -> contents_at m' loc' = mv.",
            "VernacStartTheoremProof",
            "7e1dc569a8a8c6c9ce0c6ac75fdfdac57d332ff7"
        ],
        [
            "destruct jm.",
            "VernacExtend",
            "8795f89844d770dd0654a8ef328b3253248c83f1"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "clear jm.",
            "VernacExtend",
            "8144aef320ac66a080b53673a8cae27211a63dee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold contents_at.",
            "VernacExtend",
            "355fb39404b1a9523a8d490a90045797e265ef16"
        ],
        [
            "rewrite storebytes_mem_contents with (m1 := m) (b := b) (ofs := ofs) (bytes := bytes); auto.",
            "VernacExtend",
            "8fb9b1ecb4634e216ef22a3612f0cf4b272a8641"
        ],
        [
            "destruct loc' as [b' ofs'].",
            "VernacExtend",
            "9dcc3f72ba258083a6d53ed74fe052c21911ca90"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (peq b' b).",
            "VernacExtend",
            "0f30722c1c4f01f2a3c703767998c6242ecd478a"
        ],
        [
            "destruct (adr_inv0 b b' ofs ofs' (Zlength bytes) H).",
            "VernacExtend",
            "6b4389e0386e4e2f618d21cc7706b85e2d1f3c34"
        ],
        [
            "symmetry in e.",
            "VernacExtend",
            "063739eb53c2f93de3428d3591ef3e5c0eb1d7dd"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite PMap.gss.",
            "VernacExtend",
            "b5a245c2e8793ec855a664f9951af0c15417e45b"
        ],
        [
            "rewrite setN_outside.",
            "VernacExtend",
            "7661ff73f59ff6e4f69544e8d76050bc104812ed"
        ],
        [
            "destruct (JMcontents _ _ _ _ _ H0) as [H5 _].",
            "VernacExtend",
            "80e0bae4258c249b183da2b6c53824da494f82ae"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "destruct (range_inv0 _ _ _ H1) as [H1'|H1'].",
            "VernacExtend",
            "4662d0ef9afd432d6ebee32708d3b42be215e0f8"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite <-Zlength_correct; auto.",
            "VernacExtend",
            "9a83783966bf81d9aa50377c22ae1a8559bb6500"
        ],
        [
            "rewrite PMap.gso; auto.",
            "VernacExtend",
            "fd359ee8aa72b151984c0d9320f278a59a02dd91"
        ],
        [
            "destruct (JMcontents _ _ _ _ _ H0) as [H1 _].",
            "VernacExtend",
            "da77c31ffbfcb8471396379fbf30376cfd1d3674"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition storebytes_juicy_mem: juicy_mem.",
            "VernacDefinition",
            "be66b53727abe165d63db1441afedb0d21f7e90e"
        ],
        [
            "refine (mkJuicyMem m' (inflate_store m' (m_phi jm)) _ _ _ _).",
            "VernacExtend",
            "ba11f8b35e79925d71118ad549f7b71cb4f79d4e"
        ],
        [
            "intros rsh sh' v' loc' pp H2.",
            "VernacExtend",
            "d49dbf3d708ea32379c533a840d4a17a45fab555"
        ],
        [
            "unfold inflate_store in H2; rewrite resource_at_make_rmap in H2.",
            "VernacExtend",
            "bb29f8442ca596d4c6140efeeaa656cc0bdb81ab"
        ],
        [
            "destruct (m_phi jm @ loc'); try destruct k; try solve [inversion H2].",
            "VernacExtend",
            "5030bf30ac4d5b4c5d6640f666bdf9d25c62fa82"
        ],
        [
            "inversion H2; auto.",
            "VernacExtend",
            "ea1132527ad99368fb4b34137c12eb88448ba881"
        ],
        [
            "intro loc; generalize (juicy_mem_access jm loc); intro H0.",
            "VernacExtend",
            "334939bdadd6f4067a2c73983316c3345533da90"
        ],
        [
            "unfold inflate_store; rewrite resource_at_make_rmap.",
            "VernacExtend",
            "df172867dc5ec7f97f219d19224ee0f1a980d012"
        ],
        [
            "rewrite <- (Memory.storebytes_access _ _ _ _ _ STOREBYTES).",
            "VernacExtend",
            "5c0d363be2760b2876a2ff0eb3d6a48c4975c03d"
        ],
        [
            "destruct (m_phi jm @ loc); try destruct k; auto.",
            "VernacExtend",
            "95b44ab3751f5adb2034fb126331d0bdd6046b2d"
        ],
        [
            "intro loc; generalize (juicy_mem_max_access jm loc); intro H1.",
            "VernacExtend",
            "26b361e59b733e6a29bf3d375da9c5342100054c"
        ],
        [
            "unfold inflate_store; rewrite resource_at_make_rmap.",
            "VernacExtend",
            "df172867dc5ec7f97f219d19224ee0f1a980d012"
        ],
        [
            "unfold max_access_at in *.",
            "VernacExtend",
            "77a7c640d38f7b9542d001203af96917ce52714b"
        ],
        [
            "rewrite <- (Memory.storebytes_access _ _ _ _ _ STOREBYTES).",
            "VernacExtend",
            "5c0d363be2760b2876a2ff0eb3d6a48c4975c03d"
        ],
        [
            "assert (H88:=nextblock_storebytes _ _ _ _ _ STOREBYTES).",
            "VernacExtend",
            "e7544aa1459a18ed12bd9f8f3d2e75e099cdadf2"
        ],
        [
            "destruct (m_phi jm @ loc); try rewrite H88; auto.",
            "VernacExtend",
            "077037b4475ceb7e7c4885649c71b14b9e659e91"
        ],
        [
            "destruct k; simpl; try rewrite H88; auto.",
            "VernacExtend",
            "483b8e1e4c5ea5f6460b6426cb0b92a0d9eb8918"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "unfold inflate_store.",
            "VernacExtend",
            "106b8407ce3c46e43c202e702fc1f2c2e4d4bf5c"
        ],
        [
            "rewrite resource_at_make_rmap.",
            "VernacExtend",
            "8c357c8ccf2cc08642a35d18032ae2f7599bca42"
        ],
        [
            "generalize (juicy_mem_alloc_cohere jm loc); intro.",
            "VernacExtend",
            "12d79f80805d344afa44291011023b3a8afb00fe"
        ],
        [
            "rewrite (nextblock_storebytes _ _ _ _ _ STOREBYTES) in H.",
            "VernacExtend",
            "7a8b0a8b3e907e5390b7eae4b6a9a13ef80f4c41"
        ],
        [
            "rewrite (H0 H).",
            "VernacExtend",
            "6ea9bcf8d9e61366a630ecfd4a54a83c1cdda053"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End storebytes.",
            "VernacEndSegment",
            "3da8605c8b215feec9e2708dc24f52318a7b01a1"
        ],
        [
            "Lemma free_smaller_None : forall m b b' ofs lo hi m', access_at m (b, ofs) Cur = None -> free m b' lo hi = Some m' -> access_at m' (b, ofs) Cur = None.",
            "VernacStartTheoremProof",
            "5dea6a7ab83f52c122dacb3f7b3850752a7178e8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (adr_range_dec (b',lo) (hi-lo) (b,ofs)).",
            "VernacExtend",
            "50a84821517def88dfe72c8300dc0e558215db78"
        ],
        [
            "destruct a; simpl in *.",
            "VernacExtend",
            "f16ce63ce10cf4add043d122c2aa557e3f699d02"
        ],
        [
            "subst b'; apply free_access with (ofs:=ofs) in H0; [ | omega].",
            "VernacExtend",
            "e7560d29714a085941eb1f1441df0c7cb77a7160"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "pose proof (Memory.access_cur_max m' (b,ofs)).",
            "VernacExtend",
            "ad324df5fa313e1b78748f17aa2ebea2490004bf"
        ],
        [
            "rewrite H1 in H3; simpl in H3.",
            "VernacExtend",
            "22e05d88f679844ddde961dffb536877dc5c6143"
        ],
        [
            "destruct (access_at m' (b, ofs) Cur); auto; contradiction.",
            "VernacExtend",
            "8128ec7232a4a3ed0c90fd2cccb712a11e606b54"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "eapply free_access_other; eauto.",
            "VernacExtend",
            "1d36e3634bf0e397b14f2de20703c6af2328c7e8"
        ],
        [
            "destruct (eq_block b b'); auto; right.",
            "VernacExtend",
            "914bb5c32cce7fe069c89800838ac8b0893c825d"
        ],
        [
            "simpl in n.",
            "VernacExtend",
            "950037a81d91f1ad97b7f1e8cec014bbd95db506"
        ],
        [
            "assert (~(lo <= ofs < lo + (hi - lo))) by intuition.",
            "VernacExtend",
            "f676a9799fb61bed6bd9009d5a2d3e6598421083"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free_nadr_range_eq : forall m b b' ofs' lo hi m', ~ adr_range (b, lo) (hi - lo) (b', ofs') -> free m b lo hi = Some m' -> access_at m (b', ofs') = access_at m' (b', ofs') /\\ contents_at m (b', ofs') = contents_at m' (b', ofs').",
            "VernacStartTheoremProof",
            "36155a763787be4ad62a146efd17cc245c7ed15c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "extensionality k.",
            "VernacExtend",
            "3d0435f326186ec7f64a04595b4266d139fac42d"
        ],
        [
            "apply (free_access_other _ _ _ _ _ H0 b' ofs' k).",
            "VernacExtend",
            "b3e254dacc4f17516ac13b4234bf6918b26cbb44"
        ],
        [
            "destruct (eq_block b b'); auto; right.",
            "VernacExtend",
            "914bb5c32cce7fe069c89800838ac8b0893c825d"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "assert (~(lo <= ofs' < lo + (hi - lo))) by intuition.",
            "VernacExtend",
            "2ea181ff2f136a53d38afdda54f19775860c76e8"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold contents_at.",
            "VernacExtend",
            "355fb39404b1a9523a8d490a90045797e265ef16"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Transparent free.",
            "VernacSetOpacity",
            "2759de7f8190f6cc12bf391de500e447df4e557d"
        ],
        [
            "unfold free in H0.",
            "VernacExtend",
            "4fa9c1cc2018ec30a61abdc4937863fdb837f0a6"
        ],
        [
            "Opaque free.",
            "VernacSetOpacity",
            "76d257c32758e313b4d9954b24a1d38629514626"
        ],
        [
            "if_tac in H0; inv H0.",
            "VernacExtend",
            "7a2ed6af9a36158f51d7847f089681ad48033a8c"
        ],
        [
            "unfold unchecked_free.",
            "VernacExtend",
            "be745fb7ddc0216330030cf5298024c183c602ef"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section free.",
            "VernacBeginSection",
            "14eb66cb610dff2e107525e13163b43729b23879"
        ],
        [
            "Variables (jm :juicy_mem) (m': mem) (b: block) (lo hi: Z) (FREE: free (m_dry jm) b lo hi = Some m') (PERM: forall ofs, lo <= ofs < hi -> perm_of_res (m_phi jm @ (b,ofs)) = Some Freeable).",
            "VernacAssumption",
            "1a2db9a1ad9808b395bdaa662e4d771f9aa2fc43"
        ],
        [
            "Definition inflate_free: rmap.",
            "VernacDefinition",
            "2002747d1b43dc245b72a5f10d73e3c9eb0a4025"
        ],
        [
            "refine ( proj1_sig (make_rmap (fun loc => if adr_range_dec (b,lo) (hi-lo) loc then NO Share.bot bot_unreadable else m_phi jm @ loc) (ghost_of (m_phi jm)) (level (m_phi jm)) _ (ghost_of_approx (m_phi jm)))).",
            "VernacExtend",
            "d16b7f16d4184701a32e4cfaf5335b07d5c7542a"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "extensionality l.",
            "VernacExtend",
            "9fc65292979c99219ff785a0ff10282cfe10e770"
        ],
        [
            "destruct l as (b', ofs').",
            "VernacExtend",
            "cc863164189219af636903e2c580ff5985e1ac95"
        ],
        [
            "if_tac; try reflexivity.",
            "VernacExtend",
            "b01e2e5d0c8d83846dd3a4aff2ec6c958cdb8eac"
        ],
        [
            "apply resource_at_approx.",
            "VernacExtend",
            "53a0be89142540ace752063765d3f9d213ace003"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition free_juicy_mem: juicy_mem.",
            "VernacDefinition",
            "87ae273d30d98ae0386b5f7064dabb18af897b22"
        ],
        [
            "generalize (juicy_mem_contents jm); intro.",
            "VernacExtend",
            "b9c03ea16cb9e5d11528fe199b3816bf5c4c7235"
        ],
        [
            "generalize (juicy_mem_access jm); intro.",
            "VernacExtend",
            "15138bdbe4ce6866c015f30da160560ab8880a98"
        ],
        [
            "generalize (juicy_mem_max_access jm); intro.",
            "VernacExtend",
            "519979c9fcb735173abe62d5d7b9a96f5d5d7993"
        ],
        [
            "refine (mkJuicyMem m' inflate_free _ _ _ _).",
            "VernacExtend",
            "79c3114b1ff9fa8ccfa91d935ff1ad2405f72d24"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold contents_cohere in *.",
            "VernacExtend",
            "3bd825bce16478be72748b88571f74d52d8f28a4"
        ],
        [
            "intros rsh' sh' v' [b' ofs'] pp H2.",
            "VernacExtend",
            "241782761304533472b25049d459dde7f4c139a1"
        ],
        [
            "unfold access_cohere in H0.",
            "VernacExtend",
            "c53b07520207b6ee497a497dd5cf60a9fa03bec1"
        ],
        [
            "specialize (H0 (b', ofs')).",
            "VernacExtend",
            "84b4f9b1ee6a6b907bfb8ed29207c7c842e54f04"
        ],
        [
            "unfold inflate_free in H2; rewrite resource_at_make_rmap in H2.",
            "VernacExtend",
            "283688a77f6abd7bc8fed7ef473e2b6b0100747d"
        ],
        [
            "if_tac in H2; [inv H2 | ].",
            "VernacExtend",
            "700717cf51f75241a0b3349b2d2c0267648ca7f3"
        ],
        [
            "rename H3 into H8.",
            "VernacExtend",
            "5b16267f287869385b779e8eee2e77e45ec050bc"
        ],
        [
            "remember (m_phi jm @ (b', ofs')) as HPHI.",
            "VernacExtend",
            "0d977fe484726c4291d5f1080603888362db4dae"
        ],
        [
            "destruct HPHI; try destruct k; inv H2.",
            "VernacExtend",
            "d5bf2fb8dce90c6bf209be0558d8df6a5ff83ae1"
        ],
        [
            "assert (H3: contents_at (m_dry jm) (b', ofs') = v') by (eapply H; eauto).",
            "VernacExtend",
            "88c0a1968ab9c8b5256dbbd443631250a67d5388"
        ],
        [
            "assert (H4: m' = unchecked_free (m_dry jm) b lo hi) by (apply free_result; auto).",
            "VernacExtend",
            "69acfaf3d483d3648edc5e48ef5df44bc3078e4d"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "unfold unchecked_free, contents_at; simpl.",
            "VernacExtend",
            "103d115a67973e21f6fa11b746bc4b17f7eaa604"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "symmetry in HeqHPHI.",
            "VernacExtend",
            "cab88f7cb8fbd330693ce4d37197b99cb0936be8"
        ],
        [
            "destruct (H _ _ _ _ _ HeqHPHI); auto.",
            "VernacExtend",
            "92085cae5575fce47498c42410081ca4ffae6d99"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros [b' ofs']; specialize ( H0 (b', ofs')).",
            "VernacExtend",
            "ff4779299b3d1f9fde152d84a641cad6689aad51"
        ],
        [
            "unfold inflate_free; rewrite resource_at_make_rmap.",
            "VernacExtend",
            "a10a5b3398532072522b231cbc5155c4e38c2cdf"
        ],
        [
            "destruct (adr_range_dec (b,lo) (hi-lo) (b',ofs')).",
            "VernacExtend",
            "7186812c89ede2a3d33f09de6f2594d6cb960230"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct a as [H2 H3].",
            "VernacExtend",
            "fdb2fbbcc8b5d21ce0fe3e642ac0a415f26c939b"
        ],
        [
            "replace (lo+(hi-lo)) with hi in H3 by omega.",
            "VernacExtend",
            "c0b62da848a358126e4e25bff6d241c6ed89bf26"
        ],
        [
            "subst b'.",
            "VernacExtend",
            "998445e3e44d7190637615c1934547ff4b392560"
        ],
        [
            "replace (access_at m' (b, ofs') Cur) with (@None permission).",
            "VernacExtend",
            "164e103be109fe7aedc888d13bb70df6da9df91b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite if_true by auto.",
            "VernacExtend",
            "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (free_access _ _ _ _ _ FREE ofs' H3).",
            "VernacExtend",
            "1936ddf601c36e7d86aae4774f73c1d9368362b6"
        ],
        [
            "pose proof (Memory.access_cur_max m' (b,ofs')).",
            "VernacExtend",
            "2d272b67aa6d2c10da408921caf4195d985aeda4"
        ],
        [
            "rewrite H4 in H5.",
            "VernacExtend",
            "dc90760fc98a31cbb8924c663e46ebf35a6792db"
        ],
        [
            "simpl in H5.",
            "VernacExtend",
            "03fbfc7bb6b248b41f6241227db3e5c410547157"
        ],
        [
            "destruct (access_at m' (b, ofs') Cur); auto; contradiction.",
            "VernacExtend",
            "77e99a9ca78828c3b8899ea995e0af26420ae2a3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (free_nadr_range_eq _ _ _ _ _ _ _ n FREE) as [H2 H3].",
            "VernacExtend",
            "3ca08200f60346e425174dd868f00f8b71c8e355"
        ],
        [
            "rewrite H2 in *.",
            "VernacExtend",
            "9a6fbb53ffd706150eb2fe1581f6d5c2afebb472"
        ],
        [
            "clear H2 H3.",
            "VernacExtend",
            "045265c740f29182306a378a41a4ca0cfdf00cd8"
        ],
        [
            "case_eq (m_phi jm @ (b', ofs')); intros; rewrite H2 in *; auto.",
            "VernacExtend",
            "d4ff111663f210cc9eb49b5de96d136f137c4e02"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros [b' ofs'].",
            "VernacExtend",
            "53c6ab919938b734b6544238f1b79f4edb29cb6a"
        ],
        [
            "specialize (H1 (b',ofs')).",
            "VernacExtend",
            "535e402f4f2b6aa0cbe2d91014f1947e06a466be"
        ],
        [
            "unfold inflate_free.",
            "VernacExtend",
            "5ee509edc8afe85614bbeab7e834b65cacd138c8"
        ],
        [
            "unfold max_access_at.",
            "VernacExtend",
            "180a9342db22c98d8960746aab3e30f8453543ec"
        ],
        [
            "rewrite resource_at_make_rmap.",
            "VernacExtend",
            "8c357c8ccf2cc08642a35d18032ae2f7599bca42"
        ],
        [
            "destruct (adr_range_dec (b,lo) (hi-lo) (b',ofs')).",
            "VernacExtend",
            "7186812c89ede2a3d33f09de6f2594d6cb960230"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; destruct (eq_dec Share.bot Share.bot) as [e|n]; [| exfalso; apply n; reflexivity].",
            "VernacExtend",
            "28db37b6ea6d886633747988f3df6a208e9b0e72"
        ],
        [
            "destruct (access_at m' (b', ofs') Max); constructor.",
            "VernacExtend",
            "bd73139a45f7da0834d751c6b1acdbfdb227aef6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "clear PERM.",
            "VernacExtend",
            "c5b920ea035dde8764d22e366b425ee17fb9dc56"
        ],
        [
            "unfold max_access_at.",
            "VernacExtend",
            "180a9342db22c98d8960746aab3e30f8453543ec"
        ],
        [
            "destruct (free_nadr_range_eq _ _ _ _ _ _ _ n FREE) as [H2 H3].",
            "VernacExtend",
            "3ca08200f60346e425174dd868f00f8b71c8e355"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "hnf; intros.",
            "VernacExtend",
            "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
        ],
        [
            "unfold inflate_free.",
            "VernacExtend",
            "5ee509edc8afe85614bbeab7e834b65cacd138c8"
        ],
        [
            "rewrite resource_at_make_rmap.",
            "VernacExtend",
            "8c357c8ccf2cc08642a35d18032ae2f7599bca42"
        ],
        [
            "pose proof (juicy_mem_alloc_cohere jm loc).",
            "VernacExtend",
            "d3c26068d33ceeb9ef02722c7be24c2ba9982369"
        ],
        [
            "rewrite (nextblock_free _ _ _ _ _ FREE) in H2; auto.",
            "VernacExtend",
            "d1576ef3a801b912f9014f7ca0e780fbd2aa9249"
        ],
        [
            "rewrite H3; auto.",
            "VernacExtend",
            "81f0b52fdaf5f5da8eefafd4263db88cb26c67d0"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End free.",
            "VernacEndSegment",
            "b7829bc49cbe8e957a35d6fc704ced948b991f77"
        ],
        [
            "Lemma free_not_freeable_eq : forall m b lo hi m' b' ofs', free m b lo hi = Some m' -> access_at m (b', ofs') Cur <> Some Freeable -> access_at m (b', ofs') Cur = access_at m' (b', ofs') Cur.",
            "VernacStartTheoremProof",
            "6428280ccd85b4683b475f0c1c4d2b0b8fad3895"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (adr_range_dec (b,lo) (hi-lo) (b',ofs')).",
            "VernacExtend",
            "7186812c89ede2a3d33f09de6f2594d6cb960230"
        ],
        [
            "destruct a.",
            "VernacExtend",
            "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
        ],
        [
            "subst b'.",
            "VernacExtend",
            "998445e3e44d7190637615c1934547ff4b392560"
        ],
        [
            "destruct (free_access _ _ _ _ _ H ofs'); [omega |].",
            "VernacExtend",
            "78c9611efb47be8e4f865ac63611c3b7e7b460bf"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply (free_access_other _ _ _ _ _ H).",
            "VernacExtend",
            "bbdaa352cf1b5dfd3c1778014158a63f6734a0d8"
        ],
        [
            "destruct (eq_block b' b); auto; right.",
            "VernacExtend",
            "f298571de8ed66b8aa5e17ab03500a408b5100f2"
        ],
        [
            "subst b'.",
            "VernacExtend",
            "998445e3e44d7190637615c1934547ff4b392560"
        ],
        [
            "simpl in n.",
            "VernacExtend",
            "950037a81d91f1ad97b7f1e8cec014bbd95db506"
        ],
        [
            "assert (~( lo <= ofs' < lo + (hi - lo))) by intuition; omega.",
            "VernacExtend",
            "b22bf42350abfd4e2cf22ed42a8606d802b1b1c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition after_alloc' (lo hi: Z) (b: block) (phi: rmap)(H: forall ofs, phi @ (b,ofs) = NO Share.bot bot_unreadable) : address -> resource := fun loc => if adr_range_dec (b,lo) (hi-lo) loc then YES Share.top readable_share_top (VAL Undef) NoneP else phi @ loc.",
            "VernacDefinition",
            "27bc91d82b99ea4a80504739f68ec20751494119"
        ],
        [
            "Lemma adr_range_eq_block : forall b ofs n b' ofs', adr_range (b,ofs) n (b',ofs') -> b=b'.",
            "VernacStartTheoremProof",
            "2dfa2ca9c9c9b66a04eec13ebc13f2c2ee343781"
        ],
        [
            "unfold adr_range; intros.",
            "VernacExtend",
            "6981df9c73563bebb6f1554342b5fc83999f1dc6"
        ],
        [
            "destruct H; auto.",
            "VernacExtend",
            "95ae427bd4e09a5f31c59184b718811a23ecb36f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma after_alloc'_ok : forall lo hi b phi H, resource_fmap (approx (level phi)) (approx (level phi)) oo (after_alloc' lo hi b phi H) = after_alloc' lo hi b phi H.",
            "VernacStartTheoremProof",
            "f66f43cfca85abc4435e25f11476c71c1650a162"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold resource_fmap, compose, after_alloc'.",
            "VernacExtend",
            "3363104b964d66a61750adf7285ea79d0aa5cade"
        ],
        [
            "extensionality loc.",
            "VernacExtend",
            "1e7eb6ee95191abc4fc69ac4ede8caa2d6671fd4"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "rewrite preds_fmap_NoneP; auto.",
            "VernacExtend",
            "3e10fbf5b4cde8c0d04cc46d381deb11d2cf1f71"
        ],
        [
            "case_eq (phi @ loc); intros; auto.",
            "VernacExtend",
            "4cec44c503318521304a7cf3a1ed65f53a580264"
        ],
        [
            "generalize H1; intros.",
            "VernacExtend",
            "376268a25817a3be74600978b9e78d6708ccfa97"
        ],
        [
            "apply necR_YES with (phi':=phi) in H1; eauto.",
            "VernacExtend",
            "3bf69e18b0b669cdc9fe958345ab63c70dfd8791"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize (resource_at_approx phi loc); rewrite H1; auto.",
            "VernacExtend",
            "f68334186e581194ef1f10d561ff68dbdc907233"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition after_alloc (lo hi: Z) (b: block) (phi: rmap)(H: forall ofs, phi @ (b,ofs) = NO Share.bot bot_unreadable) : rmap := proj1_sig (make_rmap (after_alloc' lo hi b phi H) (ghost_of phi) (level phi) (after_alloc'_ok lo hi b phi H) (ghost_of_approx phi)).",
            "VernacDefinition",
            "0bf178077e20a3dc6439cc21fb469f3afae15b9c"
        ],
        [
            "Definition mod_after_alloc' (phi: rmap) (lo hi: Z) (b: block) : address -> resource := fun loc => if adr_range_dec (b,lo) (hi-lo) loc then YES Share.top readable_share_top (VAL Undef) NoneP else core phi @ loc.",
            "VernacDefinition",
            "8108218d950580d21ef14ea8ab9257f6fa3f77c9"
        ],
        [
            "Lemma mod_after_alloc'_ok : forall phi lo hi b, resource_fmap (approx (level phi)) (approx (level phi)) oo (mod_after_alloc' phi lo hi b) = mod_after_alloc' phi lo hi b.",
            "VernacStartTheoremProof",
            "e85c145a1d2570a0b3dd4af94175db030c78b4df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold resource_fmap, compose, mod_after_alloc'.",
            "VernacExtend",
            "c1bc18185d3e3eb7525c71945819a807ca1c595d"
        ],
        [
            "extensionality loc.",
            "VernacExtend",
            "1e7eb6ee95191abc4fc69ac4ede8caa2d6671fd4"
        ],
        [
            "if_tac; auto.",
            "VernacExtend",
            "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
        ],
        [
            "case_eq (core phi @ loc); intros; auto; f_equal; rewrite <- level_core; generalize (resource_at_approx (core phi) loc); rewrite H0; intro; injection H1; auto.",
            "VernacExtend",
            "73f6f420fe903170c816a155df1b2340d7011438"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mod_after_alloc (phi: rmap) (lo hi: Z) (b: block) := proj1_sig (make_rmap (mod_after_alloc' phi lo hi b) (ghost_of phi) _ (mod_after_alloc'_ok phi lo hi b) (ghost_of_approx phi)).",
            "VernacDefinition",
            "1b525512a9eff498eb3fd1aa7a9f72d838f614a9"
        ],
        [
            "Transparent alloc.",
            "VernacSetOpacity",
            "1d8b7bf21723bb4797ad81d9237a61ed93ee5f4a"
        ],
        [
            "Lemma adr_range_inv: forall loc loc' n, ~ adr_range loc n loc' -> fst loc <> fst loc' \\/ (fst loc=fst loc' /\\ ~snd loc <= snd loc' < snd loc + n).",
            "VernacStartTheoremProof",
            "0a3abc3cfff2ba19821278e8b8c027736830c4b2"
        ],
        [
            "intros until n.",
            "VernacExtend",
            "519446f80e1db29c96b7020a8f52ae408def330d"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "destruct (peq (fst loc) (fst loc')).",
            "VernacExtend",
            "9d4a5ee6b66230ac21a5fc70454c536bab874b32"
        ],
        [
            "right; split; auto; intro Contra.",
            "VernacExtend",
            "b9b3ffd2f513d8f93e22ad77fb299a0dfe34b4c4"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold adr_range.",
            "VernacExtend",
            "b0e528febe3305fcc3909e875d29c117ccd363ea"
        ],
        [
            "destruct loc,loc'.",
            "VernacExtend",
            "62115dee76575d0495dc98c4e7cae8b648c6cc11"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "left; intro Contra.",
            "VernacExtend",
            "aa7224eb7b5b7388501a36d4744cd42553babc62"
        ],
        [
            "apply n0; auto.",
            "VernacExtend",
            "fa40a0b524ec0aaace230b41ff2f44feb4bd4590"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dry_noperm_juicy_nonreadable : forall m loc, access_at (m_dry m) loc Cur = None -> ~readable loc (m_phi m).",
            "VernacStartTheoremProof",
            "f8ecf6061fa1468303e4eba39c411a446bd057a8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (juicy_mem_access m loc) in H.",
            "VernacExtend",
            "24781900b4369e3cf36c782d6772b75479c1696d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "hnf in H0.",
            "VernacExtend",
            "ef2ef5338fe3c3f98be9c585e08b6598bfd5a754"
        ],
        [
            "destruct (m_phi m @loc); simpl in *; auto.",
            "VernacExtend",
            "7ad8d01cca3ca982cf32d2ad9c2d361044b6d133"
        ],
        [
            "destruct k as [x | |]; try inv H.",
            "VernacExtend",
            "6e28c9c7b58d8f828f675d536b0d82ce882d09c5"
        ],
        [
            "unfold perm_of_sh in H2.",
            "VernacExtend",
            "d4aea7d9378d99e16e38d800066a4c9f0210c4fb"
        ],
        [
            "if_tac in H2.",
            "VernacExtend",
            "ff3857e5bf98ff5af139a8ff9fd4761536ec6958"
        ],
        [
            "if_tac in H2; inv H2.",
            "VernacExtend",
            "52959f60e42a1efb8a3d4122dae597bb4591a575"
        ],
        [
            "rewrite if_true in H2 by auto.",
            "VernacExtend",
            "4d4b28d3c8c4c1e3362388225fb888fe47a2ceb6"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "e11edf85dc09e31a8a2ba9dcf84be4035731ae99"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fullempty_after_alloc : forall m1 m2 lo n b ofs, alloc m1 lo n = (m2, b) -> access_at m2 (b, ofs) Cur = None \\/ access_at m2 (b, ofs) Cur = Some Freeable.",
            "VernacStartTheoremProof",
            "4a84316d12187f6afc97e9ff7c2e2839a9d4e198"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (alloc_access_same _ _ _ _ _ H ofs Cur).",
            "VernacExtend",
            "21b144b5d73656e24396d1e2a6da7c100dae44a6"
        ],
        [
            "destruct (range_dec lo ofs n).",
            "VernacExtend",
            "9494707509073a7d9623c4c1e0dc9d86a5e0b420"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite <- (alloc_access_other _ _ _ _ _ H b ofs Cur) by (right; omega).",
            "VernacExtend",
            "3aa3d28fd04fd9f2d84cc6c162d238bc090831d0"
        ],
        [
            "apply alloc_result in H.",
            "VernacExtend",
            "b2c9ea624387cf27c54803ae10e7ed8bbf3bab4d"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply nextblock_access_empty.",
            "VernacExtend",
            "afd1b1febc15b89c2cb19384424f404dfa14eca1"
        ],
        [
            "apply Pos.le_ge, Pos.le_refl.",
            "VernacExtend",
            "d401468bce62e3aece6510ee2c048df91a23b579"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alloc_dry_unchanged_on : forall m1 m2 loc lo hi b0, alloc m1 lo hi = (m2, b0) -> ~adr_range (b0,lo) (hi-lo) loc -> access_at m1 loc = access_at m2 loc /\\ (access_at m1 loc Cur <> None -> contents_at m1 loc= contents_at m2 loc).",
            "VernacStartTheoremProof",
            "f0e50c324b19e76b64633fa6f6239c2c35dd9272"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct loc as [b z]; simpl.",
            "VernacExtend",
            "0516938c0ca5e2170ddebfbfc7faa45bc9bf1d68"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "extensionality k.",
            "VernacExtend",
            "3d0435f326186ec7f64a04595b4266d139fac42d"
        ],
        [
            "eapply Memory.alloc_access_other; eauto.",
            "VernacExtend",
            "e77ed37c4a6bf92031bda64575894000014be0f8"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "destruct (eq_block b b0); auto.",
            "VernacExtend",
            "c00dbd28a459ffa5f91423ab658f39f84670a4d8"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assert (~(lo <= z < lo + (hi - lo))) by intuition; omega.",
            "VernacExtend",
            "e05d588c8da7767684b08355640a82475fb6f421"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold alloc in H.",
            "VernacExtend",
            "65096be7e7e23fc2988f323409bf4d7f99ae92f8"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "unfold contents_at; simpl.",
            "VernacExtend",
            "a65b18dff1c740618f11fcdc441f6733c1512cbe"
        ],
        [
            "unfold adr_range in H0.",
            "VernacExtend",
            "351743b7f94b8d08ae2aa94167188b34768088a8"
        ],
        [
            "destruct (eq_dec b (nextblock m1)).",
            "VernacExtend",
            "a431cb0bee10979f62aa02b1789399734769acf9"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite invalid_noaccess in H1; [ congruence |].",
            "VernacExtend",
            "801e76fe1d3240ee79c38262c745c63dde6c53cc"
        ],
        [
            "contradict H0.",
            "VernacExtend",
            "e9276d92c17ea182f1ef13aa74464b33eea923d9"
        ],
        [
            "red in H0.",
            "VernacExtend",
            "3e33e4fdada8386783e8311d1d4116d148279cb2"
        ],
        [
            "apply Pos.lt_irrefl in H0.",
            "VernacExtend",
            "4ecf8ba41cd57724d30db533caceb5255d5c4b29"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "rewrite PMap.gso by auto.",
            "VernacExtend",
            "7c813a7ad67552a3e6193c5f25800496b5bb3804"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adr_range_zle_fact : forall b lo hi loc, adr_range (b,lo) (hi-lo) loc -> zle lo (snd loc) && zlt (snd loc) hi = true.",
            "VernacStartTheoremProof",
            "749d418db475e3596d08186decc56287bf1709a6"
        ],
        [
            "unfold adr_range.",
            "VernacExtend",
            "b0e528febe3305fcc3909e875d29c117ccd363ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct loc; simpl in *.",
            "VernacExtend",
            "3e5d9b8a0aaf5478f25935efad6f6ba31ccb1f17"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "apply andb_true_iff.",
            "VernacExtend",
            "583d40e493f314492aad482eb70e9a25a38aae78"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply zle_true; auto.",
            "VernacExtend",
            "62a6ce5f4d193742a450fbeea57772bfda626358"
        ],
        [
            "apply zlt_true; omega.",
            "VernacExtend",
            "11d5ba53e57a55cf6c538075fe9ff297a155a96d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alloc_dry_updated_on : forall m1 m2 lo hi b loc, alloc m1 lo hi = (m2, b) -> adr_range (b, lo) (hi - lo) loc -> access_at m2 loc Cur=Some Freeable /\\ contents_at m2 loc=Undef.",
            "VernacStartTheoremProof",
            "110da5e2216904425f5115bb5810523276eef5d5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct loc as [b' z'].",
            "VernacExtend",
            "0338331af536f3ca5271da3573dc8e510dfac15c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "subst b'.",
            "VernacExtend",
            "998445e3e44d7190637615c1934547ff4b392560"
        ],
        [
            "apply (alloc_access_same _ _ _ _ _ H).",
            "VernacExtend",
            "5a37bb3c85f896a5beac272472ec7222efc180ba"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold contents_at; unfold alloc in H; inv H.",
            "VernacExtend",
            "507f912fbfa837370dc62afd0d6db4407f8d3cae"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct H0; subst b'.",
            "VernacExtend",
            "eff1ee58f6cb817eb80e78d427187d52f183b473"
        ],
        [
            "rewrite PMap.gss.",
            "VernacExtend",
            "b5a245c2e8793ec855a664f9951af0c15417e45b"
        ],
        [
            "rewrite ZMap.gi; auto.",
            "VernacExtend",
            "6fc953f10c65e7a85a36012cc9b7778aa1080861"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition resource_decay (nextb: block) (phi1 phi2: rmap) := (level phi1 >= level phi2)%nat /\\ forall l: address, ((fst l >= nextb)%positive -> phi1 @ l = NO Share.bot bot_unreadable) /\\ (resource_fmap (approx (level phi2)) (approx (level phi2)) (phi1 @ l) = (phi2 @ l) \\/ (exists sh, exists (wsh: writable0_share sh), exists v, exists v', resource_fmap (approx (level phi2)) (approx (level phi2)) (phi1 @ l) = YES sh (writable0_readable wsh) (VAL v) NoneP /\\ phi2 @ l = YES sh (writable0_readable wsh) (VAL v') NoneP) \\/ ((fst l >= nextb)%positive /\\ exists v, phi2 @ l = YES Share.top readable_share_top (VAL v) NoneP) \\/ (exists v, exists pp, phi1 @ l = YES Share.top readable_share_top (VAL v) pp /\\ phi2 @ l = NO Share.bot bot_unreadable)).",
            "VernacDefinition",
            "e2b9d7cb95626f0a076998656ff39128e63f27c4"
        ],
        [
            "Definition resource_nodecay (nextb: block) (phi1 phi2: rmap) := (level phi1 >= level phi2)%nat /\\ forall l: address, ((fst l >= nextb)%positive -> phi1 @ l = NO Share.bot bot_unreadable) /\\ (resource_fmap (approx (level phi2)) (approx (level phi2)) (phi1 @ l) = (phi2 @ l) \\/ (exists sh, exists (wsh: writable0_share sh), exists v, exists v', resource_fmap (approx (level phi2)) (approx (level phi2)) (phi1 @ l) = YES sh (writable0_readable wsh) (VAL v) NoneP /\\ phi2 @ l = YES sh (writable0_readable wsh) (VAL v') NoneP)).",
            "VernacDefinition",
            "bd7a0e3e88b7ded444e00c3d1ef513a2c79f7ec3"
        ],
        [
            "Lemma resource_nodecay_decay: forall b phi1 phi2, resource_nodecay b phi1 phi2 -> resource_decay b phi1 phi2.",
            "VernacStartTheoremProof",
            "0b2db8e9c8f07e5bf1c3247ba7153d7bd89cd24a"
        ],
        [
            "unfold resource_decay, resource_nodecay; intros; destruct H; split; intros; try omega.",
            "VernacExtend",
            "0f3cc7beff3731b41fd938ac53ec54788280ec6b"
        ],
        [
            "specialize (H0 l); intuition.",
            "VernacExtend",
            "217d1b1ee704635f1b111eb016a356eade0c804c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma resource_decay_refl: forall b phi, (forall l, (fst l >= b)%positive -> phi @ l = NO Share.bot bot_unreadable) -> resource_decay b phi phi.",
            "VernacStartTheoremProof",
            "7245fe7804a924e5785eed8529d915fddc028381"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros; split; auto.",
            "VernacExtend",
            "fff62202c2fc61c4070e96966354cdd97411a8eb"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply resource_at_approx.",
            "VernacExtend",
            "53a0be89142540ace752063765d3f9d213ace003"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma resource_decay_trans: forall b b' m1 m2 m3, (b <= b')%positive -> resource_decay b m1 m2 -> resource_decay b' m2 m3 -> resource_decay b m1 m3.",
            "VernacStartTheoremProof",
            "1148a088e2567890583caca2db07ee3f49e68513"
        ],
        [
            "intros until m3; intro Hbb; intros.",
            "VernacExtend",
            "3eaae4481ea6caefcf09f32f5470d31a94252553"
        ],
        [
            "destruct H as [H' H]; destruct H0 as [H0' H0]; split; [omega |].",
            "VernacExtend",
            "98db4460eb464eba51ef0932078e492b78b0dbf3"
        ],
        [
            "intro l; specialize (H l); specialize (H0 l).",
            "VernacExtend",
            "f579eb295f9de7b4c91beb6855fc48e8c0d2b35d"
        ],
        [
            "destruct H,H0.",
            "VernacExtend",
            "8db9e1441c64ed20802e4526963172d1abdaee94"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "replace (resource_fmap (approx (level m3)) (approx (level m3)) (m1 @ l)) with (resource_fmap (approx (level m3)) (approx (level m3)) (resource_fmap (approx (level m2)) (approx (level m2)) (m1 @ l))) by (rewrite resource_fmap_fmap; rewrite approx_oo_approx' by auto; rewrite approx'_oo_approx by auto; auto).",
            "VernacExtend",
            "c1818ba30e9202a616ff8c0786eb6e836a71d818"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "clear - Hbb H H1 H0 H2 H' H0'.",
            "VernacExtend",
            "700b53e8f6321967d4c89cb8815ad0af625f8913"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "destruct H2 as [[sh2 [wsh2 [v2 [v2' [? ?]]]]]|[[? [v ?]] |?]]; subst.",
            "VernacExtend",
            "df89605c453b3bba0a7a6e3858ccc3b03fcf3243"
        ],
        [
            "left; exists sh2, wsh2,v2,v2'; split; auto.",
            "VernacExtend",
            "4ce1d19ce4ee80e927ca5ceb41e0e78466e358c9"
        ],
        [
            "rewrite <- H1 in H2.",
            "VernacExtend",
            "1f4a0171ff66dfbbfa3ac1bf3c2e1ca370f099cf"
        ],
        [
            "rewrite resource_fmap_fmap in H2.",
            "VernacExtend",
            "49ab72fb00636329427aadcd01bcfe5c06f04dea"
        ],
        [
            "rewrite approx_oo_approx' in H2 by omega.",
            "VernacExtend",
            "b06b4d89a434965c24294ab63bc7182459aead2c"
        ],
        [
            "rewrite approx'_oo_approx in H2 by omega.",
            "VernacExtend",
            "1179dc6421268c06c4f3a83ea368bde599179986"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "exists v; auto.",
            "VernacExtend",
            "863f124117e3794411b95ae7c6344e625907c1cb"
        ],
        [
            "right; right; auto.",
            "VernacExtend",
            "fbc368862b36795aa84ce429c915d5af629e3688"
        ],
        [
            "destruct H2 as [v [pp [? ?]]].",
            "VernacExtend",
            "ccdf18207a376b1ee448eacc29a55bd66d577bb2"
        ],
        [
            "rewrite H2 in H1.",
            "VernacExtend",
            "dcb7a323484c05dcc42cd7ac9b61b0b20729d4c5"
        ],
        [
            "destruct (m1 @ l); inv H1.",
            "VernacExtend",
            "26e0f0906f877a9d648bcbe27a87099587cc76d8"
        ],
        [
            "exists v, p.",
            "VernacExtend",
            "0d8cfb3bbabda61a993a01e365adf110eacea47a"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply proof_irr.",
            "VernacExtend",
            "10d46e46974f89c2b3a9463c04a06ee6c39cd171"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "destruct H1 as [[sh [wsh [v [v' [? ?]]]]]|[[? [v ?]] |?]].",
            "VernacExtend",
            "02fdf27dff80ff3cadd32c285a1bef3c798103fd"
        ],
        [
            "right; left; exists sh,wsh,v,v'; split.",
            "VernacExtend",
            "5512f021d9b8a04a322b74035b511ff58293b6ef"
        ],
        [
            "rewrite <- (approx_oo_approx' (level m3) (level m2)) at 1 by auto.",
            "VernacExtend",
            "7f94a3d56a2bf672b5c3b9eb3ef0cfa953cc1dcc"
        ],
        [
            "rewrite <- (approx'_oo_approx (level m3) (level m2)) at 2 by auto.",
            "VernacExtend",
            "f75afb2bb945f929e725eb19aa7db3425f87e3d7"
        ],
        [
            "rewrite <- resource_fmap_fmap.",
            "VernacExtend",
            "59633f3fdbd3dce927e80a6be30e17e94166195a"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "unfold resource_fmap.",
            "VernacExtend",
            "9e3613be03b663ae3677a4b82fcc167d580790d3"
        ],
        [
            "rewrite preds_fmap_NoneP.",
            "VernacExtend",
            "c1df791b7df9ebb807f6e3057eada167cc7610bd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H3 in H2.",
            "VernacExtend",
            "cd6e90473b6ddc3ec3eb78a9c40980b4c1f2a641"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "unfold resource_fmap.",
            "VernacExtend",
            "9e3613be03b663ae3677a4b82fcc167d580790d3"
        ],
        [
            "rewrite preds_fmap_NoneP.",
            "VernacExtend",
            "c1df791b7df9ebb807f6e3057eada167cc7610bd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right; right; left; split; auto.",
            "VernacExtend",
            "30d3a1e4f17b405e090a108443f840b94481c73a"
        ],
        [
            "exists v.",
            "VernacExtend",
            "07e9a3324bfa0e7b5dc708d0101cf063e8084497"
        ],
        [
            "rewrite <- H2; rewrite <- H3.",
            "VernacExtend",
            "7470b2c06f45c32e3f3701b7cf5c70c7d02ff900"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "unfold resource_fmap.",
            "VernacExtend",
            "9e3613be03b663ae3677a4b82fcc167d580790d3"
        ],
        [
            "rewrite preds_fmap_NoneP.",
            "VernacExtend",
            "c1df791b7df9ebb807f6e3057eada167cc7610bd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right; right; right.",
            "VernacExtend",
            "3f0a6df5ce23148e2ad6b532fe6792e777a812bc"
        ],
        [
            "destruct H1 as [v [pp [? ?]]].",
            "VernacExtend",
            "597ed9dc7f1ae1eff9e450baeafabe38b7aebe81"
        ],
        [
            "rewrite H3 in H2.",
            "VernacExtend",
            "cd6e90473b6ddc3ec3eb78a9c40980b4c1f2a641"
        ],
        [
            "simpl in H2.",
            "VernacExtend",
            "b1e247c43b6623097ab13813b4de664287dd4249"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "destruct H1 as [[sh [wsh [v [v' [? ?]]]]]|[[? [v ?]] |?]].",
            "VernacExtend",
            "02fdf27dff80ff3cadd32c285a1bef3c798103fd"
        ],
        [
            "destruct H2 as [[sh2 [wsh2 [v2 [v2' [? ?]]]]]|[[? [v2 ?]] |?]].",
            "VernacExtend",
            "9c73175366bd169176fbdb1ef3f7cbbed69120a5"
        ],
        [
            "right; left; exists sh,wsh,v,v2'; split.",
            "VernacExtend",
            "a788b5d407126790708a3bef89468dc146001a40"
        ],
        [
            "rewrite <- (approx_oo_approx' (level m3) (level m2)) at 1 by auto.",
            "VernacExtend",
            "7f94a3d56a2bf672b5c3b9eb3ef0cfa953cc1dcc"
        ],
        [
            "rewrite <- (approx'_oo_approx (level m3) (level m2)) at 2 by auto.",
            "VernacExtend",
            "f75afb2bb945f929e725eb19aa7db3425f87e3d7"
        ],
        [
            "rewrite <- resource_fmap_fmap.",
            "VernacExtend",
            "59633f3fdbd3dce927e80a6be30e17e94166195a"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "unfold resource_fmap.",
            "VernacExtend",
            "9e3613be03b663ae3677a4b82fcc167d580790d3"
        ],
        [
            "rewrite preds_fmap_NoneP.",
            "VernacExtend",
            "c1df791b7df9ebb807f6e3057eada167cc7610bd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H3 in H2.",
            "VernacExtend",
            "cd6e90473b6ddc3ec3eb78a9c40980b4c1f2a641"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "simpl in H2.",
            "VernacExtend",
            "b1e247c43b6623097ab13813b4de664287dd4249"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "e11edf85dc09e31a8a2ba9dcf84be4035731ae99"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply proof_irr.",
            "VernacExtend",
            "10d46e46974f89c2b3a9463c04a06ee6c39cd171"
        ],
        [
            "right; right; left.",
            "VernacExtend",
            "50afdfb77701efe5fd61d60d0efb5df7f1f7d273"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "exists v2; auto.",
            "VernacExtend",
            "d5519098c4287fdb48732a0d31167792008ae3b8"
        ],
        [
            "right; right; right.",
            "VernacExtend",
            "3f0a6df5ce23148e2ad6b532fe6792e777a812bc"
        ],
        [
            "destruct (m1 @ l); inv H1.",
            "VernacExtend",
            "26e0f0906f877a9d648bcbe27a87099587cc76d8"
        ],
        [
            "destruct H2 as [vx [pp [? ?]]].",
            "VernacExtend",
            "7377315bb23c14b34a2ba19ab195bfc6036d0a1a"
        ],
        [
            "inversion2 H3 H1.",
            "VernacExtend",
            "b63c27f24afd82445b011dcdb4494a98210d7bc4"
        ],
        [
            "exists v,p.",
            "VernacExtend",
            "0d8cfb3bbabda61a993a01e365adf110eacea47a"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "f_equal; apply proof_irr.",
            "VernacExtend",
            "6645667c8eb88627dd9c1b14a310a927f61ac2ad"
        ],
        [
            "destruct H2 as [[sh2 [wsh2 [v2 [v2' [? ?]]]]]|[[? [v2 ?]] |?]].",
            "VernacExtend",
            "9c73175366bd169176fbdb1ef3f7cbbed69120a5"
        ],
        [
            "right; right; left; split; auto.",
            "VernacExtend",
            "30d3a1e4f17b405e090a108443f840b94481c73a"
        ],
        [
            "exists v2'.",
            "VernacExtend",
            "6cf31d5caf26c4f248ed301879d43465eb623e01"
        ],
        [
            "rewrite H3 in H2; inv H2.",
            "VernacExtend",
            "885c5b70ad3121a71757343df7493d828f73439b"
        ],
        [
            "rewrite H4; f_equal; apply proof_irr.",
            "VernacExtend",
            "74ec5e1beb6d79220e39d8b6c12092edb108f45d"
        ],
        [
            "right; right; left; split; auto; exists v2; auto.",
            "VernacExtend",
            "4b2ed79f8a5e87a828d8d5cdb93b86a1c6a55976"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "destruct H2 as [v' [pp [? ?]]].",
            "VernacExtend",
            "7aeea1135aa67a2491de0f271783902ec0176654"
        ],
        [
            "rewrite H4; rewrite H; auto.",
            "VernacExtend",
            "3be24dd44bd48572f816c00f9714c38254e85057"
        ],
        [
            "destruct H2 as [[sh2 [wsh2 [v2 [v2' [? ?]]]]]|[[? [v2 ?]] |?]].",
            "VernacExtend",
            "9c73175366bd169176fbdb1ef3f7cbbed69120a5"
        ],
        [
            "destruct H1 as [v' [pp [? ?]]].",
            "VernacExtend",
            "72302ba3a07a522caea46b1896c6faa2961bdc75"
        ],
        [
            "rewrite H4 in H2; inv H2.",
            "VernacExtend",
            "7e66749d334e92481fd2f84c18b96e28cafa6642"
        ],
        [
            "right; right; left; split.",
            "VernacExtend",
            "ba958c4f6df91bfa33cebfe16b0e373c1cb48121"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "right; right; right.",
            "VernacExtend",
            "3f0a6df5ce23148e2ad6b532fe6792e777a812bc"
        ],
        [
            "destruct H1 as [v1 [pp1 [? ?]]].",
            "VernacExtend",
            "f219635a86429e2c018cb410011ad86c34eec131"
        ],
        [
            "destruct H2 as [v2 [pp2 [? ?]]].",
            "VernacExtend",
            "d0d9a15e20164cff8728bfbcf2eb526c12f85c19"
        ],
        [
            "inversion2 H3 H2.",
            "VernacExtend",
            "bd9de885d6b1ec120d8b40088c1985585d91f1c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma level_store_juicy_mem: forall jm m ch b i v H, level (store_juicy_mem jm m ch b i v H) = level jm.",
            "VernacStartTheoremProof",
            "cb5a1b4f140eb1adbcd6843bab599a5965ad0b8e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold store_juicy_mem.",
            "VernacExtend",
            "085d0d20670c196a95726da31d75d7cd62d70e9f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold inflate_store; simpl.",
            "VernacExtend",
            "2890c6d135287df05430db8d71e43864dc6801ea"
        ],
        [
            "rewrite level_make_rmap.",
            "VernacExtend",
            "378bac6c0de25ad4ef74a1236b879bf72f93f938"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma level_storebytes_juicy_mem: forall jm m b i bytes H, level (storebytes_juicy_mem jm m b i bytes H) = level jm.",
            "VernacStartTheoremProof",
            "5537318b6a60bd826493f37c5057fec957ec24fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold storebytes_juicy_mem.",
            "VernacExtend",
            "048fd4381cf1449879dfe75ac9c85da43abfb7f9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold inflate_store; simpl.",
            "VernacExtend",
            "2890c6d135287df05430db8d71e43864dc6801ea"
        ],
        [
            "rewrite level_make_rmap.",
            "VernacExtend",
            "378bac6c0de25ad4ef74a1236b879bf72f93f938"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inflate_store_resource_nodecay: forall (jm: juicy_mem) (m': mem) (ch: memory_chunk) (b: block) (ofs: Z) (v: val) (STORE: store ch (m_dry jm) b ofs v = Some m') (PERM: forall z, ofs <= z < ofs + size_chunk ch -> perm_order'' (perm_of_res (m_phi jm @ (b,z))) (Some Writable)) phi', inflate_store m' (m_phi jm) = phi' -> resource_nodecay (nextblock (m_dry jm)) (m_phi jm) phi'.",
            "VernacStartTheoremProof",
            "3716a60018cc54e7fc8bb8cf4b2a559f4943caab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "subst; unfold inflate_store; simpl.",
            "VernacExtend",
            "6a7f5b16cb6f5f34e7819ea330d9f3e985a97fef"
        ],
        [
            "rewrite level_make_rmap.",
            "VernacExtend",
            "378bac6c0de25ad4ef74a1236b879bf72f93f938"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro l'.",
            "VernacExtend",
            "9d616f281a5b6d1586aa87f88933340015efc2f6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply juicy_mem_alloc_cohere.",
            "VernacExtend",
            "4a4a557d12d9bfee5f9972cb0a8c8d8f1f0b11da"
        ],
        [
            "destruct (adr_range_dec (b, ofs) (size_chunk ch) l') as [HA | HA].",
            "VernacExtend",
            "08c8ba1384f7673b4d946237b38f562cae0b21bc"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold adr_range in HA.",
            "VernacExtend",
            "c7d95a939a08db29e6cc9d7436b6bc443d7f2336"
        ],
        [
            "destruct l' as (b', ofs').",
            "VernacExtend",
            "7a47bdad35754a1de0ba79858605704eda60b3c1"
        ],
        [
            "destruct HA as [HA0 HA1].",
            "VernacExtend",
            "ea9581c18455d438afe255ec6822f6f14ae0ecda"
        ],
        [
            "subst b'.",
            "VernacExtend",
            "998445e3e44d7190637615c1934547ff4b392560"
        ],
        [
            "assert (H0: range_perm (m_dry jm) b ofs (ofs + size_chunk ch) Cur Writable).",
            "VernacExtend",
            "36531b0722b794ee564d52b6d2ec3e8b83cf9af8"
        ],
        [
            "cut (valid_access (m_dry jm) ch b ofs Writable).",
            "VernacExtend",
            "05f86e1bbb5881b43de85b55663c27e1ee9d9ded"
        ],
        [
            "intros [? ?]; auto.",
            "VernacExtend",
            "8f86b13fd088f428eee1bea54ce23d11a793bd58"
        ],
        [
            "eapply store_valid_access_3; eauto.",
            "VernacExtend",
            "e45fcb1fa404a864cd91a6ae5cc70026921e14c9"
        ],
        [
            "assert (H1: perm (m_dry jm) b ofs' Cur Writable) by (apply H0; auto).",
            "VernacExtend",
            "e631d84eb19c45588e3f932c545b6d6b131cd6ee"
        ],
        [
            "generalize (juicy_mem_access jm (b, ofs')); intro ACCESS.",
            "VernacExtend",
            "f784bd16964d54be0be6f8ef03819fb91ba79830"
        ],
        [
            "unfold perm, perm_order' in H1.",
            "VernacExtend",
            "f3c4992971815416f50b20b416c93618931cf873"
        ],
        [
            "unfold access_at in ACCESS.",
            "VernacExtend",
            "40682131b6342b5ba7543dff21afa637f5913223"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct ((mem_access (m_dry jm)) !! b ofs' Cur) eqn:?H; try contradiction.",
            "VernacExtend",
            "bea55a088fc7a678e6c81426690c2d230ab7fe9d"
        ],
        [
            "specialize (PERM ofs' HA1).",
            "VernacExtend",
            "0eeb70314040437650c6f8f02f91cc8d43db5194"
        ],
        [
            "destruct ( m_phi jm @ (b, ofs') ) eqn:?H; try destruct k; simpl in PERM; try if_tac in PERM; try inv PERM.",
            "VernacExtend",
            "91f8e6b1fb1fe65c00dcca59d18f0a411303da26"
        ],
        [
            "destruct (juicy_mem_contents _ _ _ _ _ _ H3); subst.",
            "VernacExtend",
            "7069c3876690b7d086b3760bbd74c3bfa43af9d1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (writable0_share sh).",
            "VernacExtend",
            "32ff9e9ed2f3ed31d89c6995e86c07132bbb70de"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear - PERM.",
            "VernacExtend",
            "879ec6d98274934758e775df43dbab4f339bfacb"
        ],
        [
            "unfold perm_of_sh in PERM.",
            "VernacExtend",
            "3df23064b6e49afe0281747df4de5af45ca13fb0"
        ],
        [
            "if_tac in PERM; auto.",
            "VernacExtend",
            "72531c5056f4964844bb38d34cf4441127a158aa"
        ],
        [
            "if_tac in PERM.",
            "VernacExtend",
            "054e001a10afce2ab4ae58c47217218b3c39aea7"
        ],
        [
            "inv PERM.",
            "VernacExtend",
            "c0072e3d1fbc1cfd26f8f9c2102e08854b90c4a6"
        ],
        [
            "if_tac in PERM; inv PERM.",
            "VernacExtend",
            "c886c4f828f86b0414a534de7e94b077c5c1bb94"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "exists sh,H; do 2 econstructor; split; simpl; f_equal.",
            "VernacExtend",
            "43e2dd2b3d71b5c687c3fcbd8616d677face523f"
        ],
        [
            "apply proof_irr.",
            "VernacExtend",
            "10d46e46974f89c2b3a9463c04a06ee6c39cd171"
        ],
        [
            "unfold inflate_store; rewrite resource_at_make_rmap.",
            "VernacExtend",
            "df172867dc5ec7f97f219d19224ee0f1a980d012"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "f_equal; apply proof_irr.",
            "VernacExtend",
            "6645667c8eb88627dd9c1b14a310a927f61ac2ad"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assert (H0: level (m_phi jm) = level phi').",
            "VernacExtend",
            "b1542d9e03de1c4092fa96f97c52ed8126184182"
        ],
        [
            "rewrite <- H; unfold inflate_store; rewrite level_make_rmap; auto.",
            "VernacExtend",
            "c2d26ec4895d5c599bf793342c1647bc9f2e7d08"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "unfold inflate_store; rewrite level_make_rmap; rewrite resource_at_make_rmap.",
            "VernacExtend",
            "69cb0c70b26d11cad79f45d6f05c00e4fae197cb"
        ],
        [
            "case_eq l'; intros b' ofs' e'; subst.",
            "VernacExtend",
            "7ba1615f8a86cbe8c7fd1a4e0b4d939e560c158e"
        ],
        [
            "remember (m_phi jm @ (b', ofs')) as HPHI; destruct HPHI; try destruct k; auto; try solve [rewrite HeqHPHI; rewrite resource_at_approx; auto].",
            "VernacExtend",
            "6ddaf37fe6b17fb62e4c1a4e748e6ee2ba78dca8"
        ],
        [
            "rewrite (store_phi_elsewhere_eq jm _ _ _ _ _ STORE _ r m (b', ofs')); auto.",
            "VernacExtend",
            "af8115484425a69a6ce645280b3a9f983240df83"
        ],
        [
            "assert (H: p = NoneP).",
            "VernacExtend",
            "05af43868a55a42f1068a924cb6094dc6ed557b4"
        ],
        [
            "symmetry in HeqHPHI; destruct (juicy_mem_contents jm _ _ _ _ _ HeqHPHI); auto.",
            "VernacExtend",
            "595c2344e056e950bef4777e65480f3477ab3f68"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "unfold resource_fmap; f_equal; try reflexivity.",
            "VernacExtend",
            "2b2c12d9917ed83ab9c2b4057caeb2926ae46ab5"
        ],
        [
            "assert (H: p = NoneP).",
            "VernacExtend",
            "05af43868a55a42f1068a924cb6094dc6ed557b4"
        ],
        [
            "symmetry in HeqHPHI; destruct (juicy_mem_contents jm _ _ _ _ _ HeqHPHI); auto.",
            "VernacExtend",
            "595c2344e056e950bef4777e65480f3477ab3f68"
        ],
        [
            "rewrite H in HeqHPHI; clear H.",
            "VernacExtend",
            "fef2273064d436ff829244059490fd73a575a66f"
        ],
        [
            "rewrite HeqHPHI; auto.",
            "VernacExtend",
            "e66350c633f7de057905b9d61d30709d924caea8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inflate_free_resource_decay: forall (jm :juicy_mem) (m': mem) (b: block) (lo hi: Z) (FREE: free (m_dry jm) b lo hi = Some m') (PERM: forall ofs : Z, lo <= ofs < hi -> perm_of_res (m_phi jm @ (b, ofs)) = Some Freeable), resource_decay (nextblock (m_dry jm)) (m_phi jm) (inflate_free jm b lo hi).",
            "VernacStartTheoremProof",
            "72a4710bb9fc6cca0e52d5fe04e137fc899ddb05"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold inflate_free; rewrite level_make_rmap; auto.",
            "VernacExtend",
            "d41574baa309438f9c1e880ebc60432c9963400b"
        ],
        [
            "intros l.",
            "VernacExtend",
            "dd0961f3ab7d1ab267b93180e66e020db2e681bc"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply juicy_mem_alloc_cohere.",
            "VernacExtend",
            "4a4a557d12d9bfee5f9972cb0a8c8d8f1f0b11da"
        ],
        [
            "destruct (adr_range_dec (b, lo) (hi-lo) l) as [HA | HA].",
            "VernacExtend",
            "8db16f90457a8ab2a3683940c25b7e8e202010d7"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "destruct l; simpl in HA|-*.",
            "VernacExtend",
            "e24eb10c5cfe2aef42ee1751ad4a1bae487dcbd9"
        ],
        [
            "destruct HA as [H0 H1].",
            "VernacExtend",
            "12bdc2ca8df668bef460b8cb78b14295dcefe184"
        ],
        [
            "subst b0.",
            "VernacExtend",
            "478b7c325e8a76ce9bafb9db976206add8bd3245"
        ],
        [
            "assert (lo + (hi - lo) = hi) by omega.",
            "VernacExtend",
            "3454c0014b4c9bd1857751bd21818ada62bb0c13"
        ],
        [
            "rewrite H in H1.",
            "VernacExtend",
            "72668ea55992bff4c6a64774b37a8290e2ed12ee"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "unfold inflate_free; simpl; rewrite resource_at_make_rmap.",
            "VernacExtend",
            "98b21eed14c39339fe7ba9fbe379316bec0a0d7b"
        ],
        [
            "specialize (PERM _ H1).",
            "VernacExtend",
            "643cbadc87f9f24ac1a63ebee11bc8bc19215af6"
        ],
        [
            "destruct (m_phi jm @ (b,z)) eqn:?; try destruct k; inv PERM.",
            "VernacExtend",
            "6a3d23cb515d93aa28249ad93b2381d36bc90ca6"
        ],
        [
            "if_tac in H0; inv H0.",
            "VernacExtend",
            "7a2ed6af9a36158f51d7847f089681ad48033a8c"
        ],
        [
            "rewrite if_true by (split; auto; omega).",
            "VernacExtend",
            "e74f15fab46600d60beaf3b94cceb598fb4b125d"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "exists m, p.",
            "VernacExtend",
            "7319e7b8994ac246b2f8b2c751c8d37018cf82fb"
        ],
        [
            "unfold perm_of_sh in H0.",
            "VernacExtend",
            "2a9783dc235d51d3b681c76881257d17aaebef6f"
        ],
        [
            "repeat if_tac in H0; inv H0.",
            "VernacExtend",
            "a6d7d3c5a56fe2ba23d2ced8f5ddfa10c1934b47"
        ],
        [
            "split; try reflexivity.",
            "VernacExtend",
            "238a58eee4ad06e96dacd1abfbc7cf3b3bb07d2c"
        ],
        [
            "f_equal; apply proof_irr.",
            "VernacExtend",
            "6645667c8eb88627dd9c1b14a310a927f61ac2ad"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "destruct (free_nadr_range_eq _ _ _ _ _ _ _ HA FREE).",
            "VernacExtend",
            "6c15e940de83b20f58a380d436312e20ab997399"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "unfold inflate_free; rewrite level_make_rmap; rewrite resource_at_make_rmap.",
            "VernacExtend",
            "a60446a66debdf3e8b2bd8a4467ff14d1e3689d1"
        ],
        [
            "rewrite if_false by auto.",
            "VernacExtend",
            "5a76c3b1b70df813cbad68c4a8a05295b8091083"
        ],
        [
            "generalize (juicy_mem_contents jm); intro Hc.",
            "VernacExtend",
            "86f8a5411581f68b6a5ee4171bfb8bc305fcb5e6"
        ],
        [
            "generalize (juicy_mem_access jm (b0,z)); intro Ha.",
            "VernacExtend",
            "1ad2bb08932488ddeb544f8408bf5316ca91fc1a"
        ],
        [
            "rewrite resource_at_approx.",
            "VernacExtend",
            "7d18662bc2312a78cc412cc1e5f3805ea304002a"
        ],
        [
            "case_eq (m_phi jm @ (b0, z)); intros; rewrite H1 in Ha; auto.",
            "VernacExtend",
            "25c1d8ef5f761b618f3aab29e50e4fef70431809"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma juicy_store_nodecay: forall jm m' ch b ofs v (H: store ch (m_dry jm) b ofs v = Some m') (PERM: forall z, ofs <= z < ofs + size_chunk ch -> perm_order'' (perm_of_res (m_phi jm @ (b,z))) (Some Writable)), resource_nodecay (nextblock (m_dry jm)) (m_phi jm) (m_phi (store_juicy_mem jm _ _ _ _ _ H)).",
            "VernacStartTheoremProof",
            "a391a40f91c5e0049794f36acc98c9f770f6fe56"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply inflate_store_resource_nodecay; eauto.",
            "VernacExtend",
            "e5ed35eefd879c262e9d2896c52dda9956921ca8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma can_age1_juicy_mem: forall j r, age (m_phi j) r -> exists j', age1 j = Some j'.",
            "VernacStartTheoremProof",
            "2cfc16ae4bcdf279b3f68dca083ede3615847abc"
        ],
        [
            "intros j r H.",
            "VernacExtend",
            "1ef9b4fdddabf81f0f4163ced93140ab20dec936"
        ],
        [
            "unfold age in H.",
            "VernacExtend",
            "a58746f69ab5a2d203fc8a1730289020249d8c72"
        ],
        [
            "case_eq (age1_juicy_mem j); intros.",
            "VernacExtend",
            "601ec1f11fe3e1078dfa626c29e4a2f304d0a469"
        ],
        [
            "destruct (age1_juicy_mem_unpack _ _ H0).",
            "VernacExtend",
            "4fcd1b639c42c96487676688059956f1a685b613"
        ],
        [
            "eexists; eauto.",
            "VernacExtend",
            "02215ff570a78e8dfed0585aa87594983a8aa0fb"
        ],
        [
            "apply age1_juicy_mem_None1 in H0.",
            "VernacExtend",
            "95fd4336287e2ab76d0ab8dfd5fb6b09350d12bc"
        ],
        [
            "rewrite H0 in H.",
            "VernacExtend",
            "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
        ],
        [
            "elimtype False; inversion H.",
            "VernacExtend",
            "4627b375c3e9833e11871775f96867215fc79eee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma can_age_jm: forall jm, age1 (m_phi jm) <> None -> exists jm', age jm jm'.",
            "VernacStartTheoremProof",
            "4b4a438c5b6b76c9dcba15eb056e34b65bb54d8c"
        ],
        [
            "intro jm; case_eq (age1 (m_phi jm)); intros; try congruence.",
            "VernacExtend",
            "6d50470a1bd39d8cb9b3b4ff34ff508025cc6939"
        ],
        [
            "apply (can_age1_juicy_mem _ _ H).",
            "VernacExtend",
            "87f127b819c06c25330da850ba63d71b872c649c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age_jm_dry: forall {jm jm'}, age jm jm' -> m_dry jm = m_dry jm'.",
            "VernacStartTheoremProof",
            "e8e376e7a2e7618f9cdcaa5a35934daba62f0ece"
        ],
        [
            "intros; destruct (age1_juicy_mem_unpack _ _ H); auto.",
            "VernacExtend",
            "131d4d4d091533a89dcd7fa1bdd637dc5680f9b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age_jm_phi: forall {jm jm'}, age jm jm' -> age (m_phi jm) (m_phi jm').",
            "VernacStartTheoremProof",
            "f319f0439d096f843c79194a89d6131fb97c7539"
        ],
        [
            "intros; destruct (age1_juicy_mem_unpack _ _ H); auto.",
            "VernacExtend",
            "131d4d4d091533a89dcd7fa1bdd637dc5680f9b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age1_YES'_1 {phi phi' l rsh sh k P} : age1 phi = Some phi' -> phi @ l = YES rsh sh k P -> (exists P, phi' @ l = YES rsh sh k P).",
            "VernacStartTheoremProof",
            "1f20bc9b232767b944a47c14ddadd5721aac7797"
        ],
        [
            "intros A E.",
            "VernacExtend",
            "f243e467b5491f4f02b8065d726c143a1042dda3"
        ],
        [
            "apply (proj1 (age1_YES' phi phi' l rsh sh k A)).",
            "VernacExtend",
            "e20ab81d180262ff1bcc92653c456212a49b3628"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age1_YES'_2 {phi phi' l rsh sh k P} : age1 phi = Some phi' -> phi' @ l = YES rsh sh k P -> (exists P, phi @ l = YES rsh sh k P).",
            "VernacStartTheoremProof",
            "6f8e85e7f2b39b99c56967e8725a71f18d26b346"
        ],
        [
            "intros A E.",
            "VernacExtend",
            "f243e467b5491f4f02b8065d726c143a1042dda3"
        ],
        [
            "apply (proj2 (age1_YES' phi phi' l rsh sh k A)).",
            "VernacExtend",
            "24e95d4ab776628f00bee325bb466c30e14f8f90"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma age1_PURE_2 {phi phi' l k P} : age1 phi = Some phi' -> phi' @ l = PURE k P -> (exists P, phi @ l = PURE k P).",
            "VernacStartTheoremProof",
            "942d9b847b71a0dfd314ded4d41f603cad80abf0"
        ],
        [
            "intros A E.",
            "VernacExtend",
            "f243e467b5491f4f02b8065d726c143a1042dda3"
        ],
        [
            "apply (proj2 (age1_PURE phi phi' l k A)).",
            "VernacExtend",
            "5c33bb19a5a3c2f88c29a33a4fe93b2e316f3e1f"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_of_res_age x y loc : age x y -> perm_of_res (x @ loc) = perm_of_res (y @ loc).",
            "VernacStartTheoremProof",
            "4769fadac196b9c9eb1e49573438d54b443f1f80"
        ],
        [
            "intros A.",
            "VernacExtend",
            "1e674201f6164f095fcb9efa159981a648ffff11"
        ],
        [
            "destruct (x @ loc) as [sh | rsh sh k p | k p] eqn:E.",
            "VernacExtend",
            "b651eedaed80b47471757a9965ad9712da4e76fe"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (age1_NO x y loc sh n A) as [[]_]; eauto.",
            "VernacExtend",
            "3ac43c6bf26613ceda5dc7ea7ff432bd119ccfe9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (age1_YES' x y loc rsh sh k A) as [[p' ->] _]; eauto.",
            "VernacExtend",
            "81c041f3bd2d77774e8c17848ce1de6dd10622f7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (age1_PURE x y loc k A) as [[p' ->] _]; eauto.",
            "VernacExtend",
            "74d981138f5dc88445336e0208f01b97e5bbb019"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contents_cohere_age m : hereditary age (contents_cohere m).",
            "VernacStartTheoremProof",
            "150f78d2a23fc3e1734664d2d65aa49add06d03f"
        ],
        [
            "intros x y E A.",
            "VernacExtend",
            "529a349bcfff708dd6943844f59d8c8d6f708e00"
        ],
        [
            "intros rsh sh v loc pp H.",
            "VernacExtend",
            "55660e03900d3c279ff1776bb417ffe3595e4b32"
        ],
        [
            "destruct (proj2 (age1_YES' _ _ loc rsh sh (VAL v) E)) as [pp' E'].",
            "VernacExtend",
            "392cab5b26404d3b3bd498ab2e8255bf87536a00"
        ],
        [
            "now eauto.",
            "VernacExtend",
            "e7df581db5ab113b3d1e7800d56a5e3e3c22071c"
        ],
        [
            "specialize (A rsh sh v loc _ E').",
            "VernacExtend",
            "7d62c624896587d7e7e02ba299be948fd72d5f90"
        ],
        [
            "destruct A as [A ->].",
            "VernacExtend",
            "9110f4ad9392e65d85068439f0d94d55e655dc82"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply (proj1 (age1_YES _ _ loc rsh sh (VAL v) E)) in E'.",
            "VernacExtend",
            "531ffdf322edebaaf76c68139c1e401ca0b7f9cf"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma access_cohere_age m : hereditary age (access_cohere m).",
            "VernacStartTheoremProof",
            "34c0399227c60311ea0605a932ad749d59f06401"
        ],
        [
            "intros x y E B.",
            "VernacExtend",
            "fe0f67b543d5c8bdcce3034a87d6c5863e83e7d4"
        ],
        [
            "intros addr.",
            "VernacExtend",
            "6c300f088ddd49c94b1c56f9872ae8278e404c13"
        ],
        [
            "destruct (age1_levelS _ _ E) as [n L].",
            "VernacExtend",
            "20c07976082da1b8a45397ff5eb6e66926df8712"
        ],
        [
            "rewrite (B addr).",
            "VernacExtend",
            "03d96a78180e85ebd3419f2dae16037e654b8cf3"
        ],
        [
            "apply perm_of_res_age, E.",
            "VernacExtend",
            "3faa826b55d6e55c5f9f22fdd9374a9264a2b23f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_access_cohere_age m : hereditary age (max_access_cohere m).",
            "VernacStartTheoremProof",
            "872e80b8559173f3aa03fd00b788e47be5ebfef2"
        ],
        [
            "intros x y E C.",
            "VernacExtend",
            "028f1c83799fa7f9a44dca8d805df0d6755a4979"
        ],
        [
            "intros addr; specialize (C addr).",
            "VernacExtend",
            "30b40f9b341ecbb38fe9e1d8c47a8aa3417e9b18"
        ],
        [
            "destruct (y @ addr) as [sh | sh p k pp | k p] eqn:AT.",
            "VernacExtend",
            "cd8732ea943818d3c098e5fed5a407af27615442"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply (age1_NO x) in AT; auto.",
            "VernacExtend",
            "f29d2e223d4c6a5126ddb4bee361d17c671493d8"
        ],
        [
            "rewrite AT in C; auto.",
            "VernacExtend",
            "21b118f0d2f6a4aeb94554f4a75336a3bf3992c0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (age1_YES'_2 E AT) as [P Ex].",
            "VernacExtend",
            "8384456b0e936de690ebd2a82cc79b3f600b6592"
        ],
        [
            "rewrite Ex in C.",
            "VernacExtend",
            "651ca03d4b84ca26215bfd1a38ea40ce3b2d0f96"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (age1_PURE_2 E AT) as [P Ex].",
            "VernacExtend",
            "e915926b26fa61967311a38882dd1ceba53c2a5d"
        ],
        [
            "rewrite Ex in C; auto.",
            "VernacExtend",
            "2feff57c8ae5ab6bb4a2840dbcd8d5ce6f5a5667"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alloc_cohere_age m : hereditary age (alloc_cohere m).",
            "VernacStartTheoremProof",
            "fa050cc89919c0b48769036f56615c3a80eadaf4"
        ],
        [
            "intros x y E D.",
            "VernacExtend",
            "f7ef6a8af78288e7bd7645eb24a9d341f9f90050"
        ],
        [
            "intros loc G; specialize (D loc G).",
            "VernacExtend",
            "965b4d0b336df3a6d8c8a972e51824d89184cfd7"
        ],
        [
            "eapply (age1_NO x); eauto.",
            "VernacExtend",
            "f0c460611efe24cffc787f72f92344f06507c1ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition unage {A} {_:ageable A} x y := age y x.",
            "VernacDefinition",
            "865c135aa23b3cf804411e1db317014711572115"
        ],
        [
            "Lemma unage_YES'_1 {phi phi' l rsh sh k P} : age1 phi' = Some phi -> phi @ l = YES rsh sh k P -> (exists P, phi' @ l = YES rsh sh k P).",
            "VernacStartTheoremProof",
            "d771b542eef92671fed2e76bc49736185f7b968b"
        ],
        [
            "intros A E.",
            "VernacExtend",
            "f243e467b5491f4f02b8065d726c143a1042dda3"
        ],
        [
            "apply (proj2 (age1_YES' phi' phi l rsh sh k A)).",
            "VernacExtend",
            "eb45cfd317d674ff0d070b63a561ed79f25110a9"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unage_YES'_2 {phi phi' l rsh sh k P} : age1 phi' = Some phi -> phi' @ l = YES rsh sh k P -> (exists P, phi @ l = YES rsh sh k P).",
            "VernacStartTheoremProof",
            "3ede01cc4d49489c437ab7415d3644198d3ddc74"
        ],
        [
            "intros A E.",
            "VernacExtend",
            "f243e467b5491f4f02b8065d726c143a1042dda3"
        ],
        [
            "apply (proj1 (age1_YES' phi' phi l rsh sh k A)).",
            "VernacExtend",
            "c67699ed5a9468e8fded5f6d8db3a8e805027a87"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unage_PURE_2 {phi phi' l k P} : age1 phi' = Some phi -> phi' @ l = PURE k P -> (exists P, phi @ l = PURE k P).",
            "VernacStartTheoremProof",
            "4f3e84339016bcc14f8880c7b74badedc1d3f474"
        ],
        [
            "intros A E.",
            "VernacExtend",
            "f243e467b5491f4f02b8065d726c143a1042dda3"
        ],
        [
            "apply (proj1 (age1_PURE phi' phi l k A)).",
            "VernacExtend",
            "3309a2b86c00c7ae4342bdd57337b0ea583ebfc1"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contents_cohere_unage m : hereditary unage (contents_cohere m).",
            "VernacStartTheoremProof",
            "a6fb0860d3867abb97385f12804c88c5fc0b5724"
        ],
        [
            "intros x y E A.",
            "VernacExtend",
            "529a349bcfff708dd6943844f59d8c8d6f708e00"
        ],
        [
            "intros rsh sh v loc pp H.",
            "VernacExtend",
            "55660e03900d3c279ff1776bb417ffe3595e4b32"
        ],
        [
            "destruct (proj1 (age1_YES' _ _ loc rsh sh (VAL v) E)) as [pp' E'].",
            "VernacExtend",
            "2fe72efa30e7dc2cc266e113421f365d426a3143"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "specialize (A rsh sh v loc _ E').",
            "VernacExtend",
            "7d62c624896587d7e7e02ba299be948fd72d5f90"
        ],
        [
            "destruct A as [A ->].",
            "VernacExtend",
            "9110f4ad9392e65d85068439f0d94d55e655dc82"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply (proj2 (age1_YES _ _ loc rsh sh (VAL v) E)) in E'.",
            "VernacExtend",
            "c5350e6c677e4948b5b1ddeb5f17e8f2ccf875ab"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma access_cohere_unage m : hereditary unage (access_cohere m).",
            "VernacStartTheoremProof",
            "c417e718fc99e11f833d87ee30638758b5367ae9"
        ],
        [
            "intros x y E B.",
            "VernacExtend",
            "fe0f67b543d5c8bdcce3034a87d6c5863e83e7d4"
        ],
        [
            "intros addr.",
            "VernacExtend",
            "6c300f088ddd49c94b1c56f9872ae8278e404c13"
        ],
        [
            "destruct (age1_levelS _ _ E) as [n L].",
            "VernacExtend",
            "20c07976082da1b8a45397ff5eb6e66926df8712"
        ],
        [
            "rewrite (B addr).",
            "VernacExtend",
            "03d96a78180e85ebd3419f2dae16037e654b8cf3"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply perm_of_res_age, E.",
            "VernacExtend",
            "3faa826b55d6e55c5f9f22fdd9374a9264a2b23f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_access_cohere_unage m : hereditary unage (max_access_cohere m).",
            "VernacStartTheoremProof",
            "df8fbbaa365a9df9da20f720e135b7d89692a1be"
        ],
        [
            "intros x y E C.",
            "VernacExtend",
            "028f1c83799fa7f9a44dca8d805df0d6755a4979"
        ],
        [
            "intros addr; specialize (C addr).",
            "VernacExtend",
            "30b40f9b341ecbb38fe9e1d8c47a8aa3417e9b18"
        ],
        [
            "destruct (x @ addr) as [sh | sh p k pp | k p] eqn:AT.",
            "VernacExtend",
            "0ee16822d1b1863262b461ee0698058b0309b265"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply (age1_NO y) in AT; auto.",
            "VernacExtend",
            "06f0bd7d8c26b671ab0a32dba0d3cc17ab77826d"
        ],
        [
            "rewrite AT; auto.",
            "VernacExtend",
            "0bf401df103386740b8c6fd0bd18c659c37de530"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (@age1_YES'_2 y x addr sh p k pp E AT) as [P ->].",
            "VernacExtend",
            "a20de5e5133fb96dd09663e213dcad0032f3658f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (age1_PURE_2 E AT) as [P Ex].",
            "VernacExtend",
            "e915926b26fa61967311a38882dd1ceba53c2a5d"
        ],
        [
            "rewrite Ex; auto.",
            "VernacExtend",
            "2da2a4ecae7084600464a387fe5fa48662475f23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alloc_cohere_unage m : hereditary unage (alloc_cohere m).",
            "VernacStartTheoremProof",
            "38a0a06b4a5bbab7171b0f0598860d45499a64b0"
        ],
        [
            "intros x y E D.",
            "VernacExtend",
            "f7ef6a8af78288e7bd7645eb24a9d341f9f90050"
        ],
        [
            "intros loc G; specialize (D loc G).",
            "VernacExtend",
            "965b4d0b336df3a6d8c8a972e51824d89184cfd7"
        ],
        [
            "eapply (age1_NO y); eauto.",
            "VernacExtend",
            "c6d26419e24eaa8d9052fb5d6c01f1becd9d30aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma juicy_mem_unage jm' : { jm | age jm jm' }.",
            "VernacStartTheoremProof",
            "c72ae74a7a648782d5bd90733b80f8b88a9ec170"
        ],
        [
            "pose proof (rmap_unage_age (m_phi jm')) as A.",
            "VernacExtend",
            "c42e16520312f45fa0012f746ab80289d56fde3e"
        ],
        [
            "remember (rmap_unage (m_phi jm')) as phi.",
            "VernacExtend",
            "f99511fe62f69fa9be82df95a8ca5b189567f0e4"
        ],
        [
            "unshelve eexists (mkJuicyMem (m_dry jm') phi _ _ _ _).",
            "VernacExtend",
            "cb1a286c2387ec4ce1488a56b9c2ed9b14f8447d"
        ],
        [
            "all: destruct jm' as [m phi' Co Ac Ma N]; simpl.",
            "VernacExtend",
            "a888c60461fd339a7cfa19e2e7170f5cdd74d8e8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply contents_cohere_unage; eauto.",
            "VernacExtend",
            "a92c8bfff41cbaf70e5ffd2d5d3aac41fa46da9a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply access_cohere_unage; eauto.",
            "VernacExtend",
            "91b026f1bb33a18a4a69bf8cdf82839c7bcceb08"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply max_access_cohere_unage; eauto.",
            "VernacExtend",
            "cf4878fbf0e8ed118dd4d108c88298ed171d3e79"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply alloc_cohere_unage; eauto.",
            "VernacExtend",
            "4669b6257997183423a5bc65bba09a863206afa1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply age1_juicy_mem_unpack''; auto.",
            "VernacExtend",
            "1a7d43952d25b76e009f187216b7913afb0fa5ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "Rsh_not_top",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "unfold Share.Rsh.",
                        "VernacExtend",
                        "181ca8f885460b512586a51a99f6b8edb6f36804"
                    ]
                },
                {
                    "command": [
                        "case_eq (Share.split Share.top); intros.",
                        "VernacExtend",
                        "cb492125fc8e899bcbf439dc0a3f2b2862a80a64"
                    ]
                },
                {
                    "command": [
                        "simpl; intro.",
                        "VernacExtend",
                        "ea06f672e843e2df533e8479ab6d750009d7073e"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply nonemp_split_neq2 in H.",
                        "VernacExtend",
                        "13bd5a813e94e5616c34dc11c33e2f7de785a669"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply top_share_nonidentity.",
                        "VernacExtend",
                        "1e91da3d68ce976aa578b24f8ef3791f3cf86f23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nonidentity_Rsh",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "unfold Share.Rsh.",
                        "VernacExtend",
                        "181ca8f885460b512586a51a99f6b8edb6f36804"
                    ]
                },
                {
                    "command": [
                        "case_eq (Share.split Share.top); intros.",
                        "VernacExtend",
                        "cb492125fc8e899bcbf439dc0a3f2b2862a80a64"
                    ]
                },
                {
                    "command": [
                        "simpl; intro.",
                        "VernacExtend",
                        "ea06f672e843e2df533e8479ab6d750009d7073e"
                    ]
                },
                {
                    "command": [
                        "apply split_nontrivial' in H.",
                        "VernacExtend",
                        "ba86e21a133d0c6b9e92047a36d4618da6f14e2a"
                    ]
                },
                {
                    "command": [
                        "apply top_share_nonidentity; auto.",
                        "VernacExtend",
                        "4cfd98dbcbb4f73d4d660164b05edd0a22454bc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_sh_fullshare",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true.",
                        "VernacExtend",
                        "8198b40d461a5545fc467eded52f2fe8cb3ac368"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by auto.",
                        "VernacExtend",
                        "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold fullshare.",
                        "VernacExtend",
                        "ddd55a4da91baf48b66304db2de1ebfe67b30248"
                    ]
                },
                {
                    "command": [
                        "apply writable_writable0.",
                        "VernacExtend",
                        "afd02beccb29111b5bc997c299f6689dcafe2033"
                    ]
                },
                {
                    "command": [
                        "apply writable_share_top.",
                        "VernacExtend",
                        "610383dfb397015efbacd268e621086ab50af876"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nonreadable_extern_retainer",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "unfold extern_retainer, readable_share.",
                        "VernacExtend",
                        "8466058b6b2494cc530ca3b3359aa9d5caa1412a"
                    ]
                },
                {
                    "command": [
                        "intro H; apply H; clear H.",
                        "VernacExtend",
                        "1be01ee22bc6151533070ea0b485c2b6b25332c9"
                    ]
                },
                {
                    "command": [
                        "assert (Share.glb Share.Rsh (fst (Share.split Share.Lsh)) = Share.bot); [ | rewrite H; auto].",
                        "VernacExtend",
                        "1a0c231e8e4ace016362037bada009ad448bebf3"
                    ]
                },
                {
                    "command": [
                        "apply sub_glb_bot with Share.Lsh.",
                        "VernacExtend",
                        "0425ba59b306b893a69479d865b6079cca883d37"
                    ]
                },
                {
                    "command": [
                        "destruct (Share.split Share.Lsh) eqn:H.",
                        "VernacExtend",
                        "9cfc73dfc2dc947ff7e3d6da993e7df679a0fef8"
                    ]
                },
                {
                    "command": [
                        "apply Share.split_together in H.",
                        "VernacExtend",
                        "15fc543ab18c4fff38ca49483759e282bd7860f8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "apply leq_join_sub.",
                        "VernacExtend",
                        "3fff34a85cde33bcdf7d12bcb66c5c1e11b2a5a9"
                    ]
                },
                {
                    "command": [
                        "apply Share.lub_upper1.",
                        "VernacExtend",
                        "b953252956af316ab4f358f76f099e185a0783bc"
                    ]
                },
                {
                    "command": [
                        "apply glb_Rsh_Lsh.",
                        "VernacExtend",
                        "6a2f3d33b0c08695550681f39c028816c5c2687a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lsh_nonreadable",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "unfold readable_share; intros.",
                        "VernacExtend",
                        "8ea5431bf29fe3fbbf26ddbc2e3a3cfbf7f215e7"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_Rsh_Lsh.",
                        "VernacExtend",
                        "5ae8cdb4f2d90885e7cbf0cdfe7603814ca1068a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_res_op1",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "destruct r eqn:?; simpl.",
                        "VernacExtend",
                        "2f41c574b90c19e52f0b302b41515857185a6576"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "if_tac; constructor.",
                        "VernacExtend",
                        "02059178128c6a04306aa1a2033748b366218991"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "if_tac; destruct k; constructor.",
                        "VernacExtend",
                        "b37bf00de07ff49bdb0a49657402818a119fc838"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "destruct k; constructor.",
                        "VernacExtend",
                        "3ccfc13a3cf783ee1e98529d14e2b42f3c391a6e"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false by auto.",
                        "VernacExtend",
                        "5a76c3b1b70df813cbad68c4a8a05295b8091083"
                    ]
                },
                {
                    "command": [
                        "destruct k; constructor.",
                        "VernacExtend",
                        "3ccfc13a3cf783ee1e98529d14e2b42f3c391a6e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_res_op2",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "destruct r; simpl; auto.",
                        "VernacExtend",
                        "bc448dbd73ed11ee44130e99e9ad13b513acff8c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "if_tac; constructor.",
                        "VernacExtend",
                        "02059178128c6a04306aa1a2033748b366218991"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct k; try solve [destruct (perm_of_sh sh); constructor].",
                        "VernacExtend",
                        "f4cea81dd03196a43ef77b995541cc8c2fdcaf72"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "repeat if_tac; constructor.",
                        "VernacExtend",
                        "eacdbf9950d2e13905d967d3560aa957f911fd0f"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true.",
                        "VernacExtend",
                        "8198b40d461a5545fc467eded52f2fe8cb3ac368"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false.",
                        "VernacExtend",
                        "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply glb_Rsh_not_top.",
                        "VernacExtend",
                        "65e0a9226eadea33e2919e965e50b79a0b67b445"
                    ]
                },
                {
                    "command": [
                        "apply writable0_share_glb_Rsh; auto.",
                        "VernacExtend",
                        "6bbd0742e499ceb0c6153dfa79aed48de3449690"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by auto.",
                        "VernacExtend",
                        "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false.",
                        "VernacExtend",
                        "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true.",
                        "VernacExtend",
                        "8198b40d461a5545fc467eded52f2fe8cb3ac368"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "unfold readable_share.",
                        "VernacExtend",
                        "81db76555770dee3886332dc2cd6171b48abe2d6"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_twice; auto.",
                        "VernacExtend",
                        "a18b7ad7a6fe032341158f5dd61f1c89bed7083c"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "unfold writable0_share in *.",
                        "VernacExtend",
                        "86c740723ef06923ba46a2487d9fb562851176ed"
                    ]
                },
                {
                    "command": [
                        "eapply join_sub_trans; eauto.",
                        "VernacExtend",
                        "a43c921d3c03d97dfb0c9cf318ac015a52203383"
                    ]
                },
                {
                    "command": [
                        "apply leq_join_sub.",
                        "VernacExtend",
                        "3fff34a85cde33bcdf7d12bcb66c5c1e11b2a5a9"
                    ]
                },
                {
                    "command": [
                        "apply Share.glb_lower2.",
                        "VernacExtend",
                        "e8dd9d3effecea72ceee641b88d062972b7636e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "juicy_mem_contents",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "unfold m_dry, m_phi; destruct j; auto.",
                        "VernacExtend",
                        "ab3d76ad88ccb462c67a1b7b92e6f71ce4a2d1a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "juicy_mem_access",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "unfold m_dry, m_phi; destruct j; auto.",
                        "VernacExtend",
                        "ab3d76ad88ccb462c67a1b7b92e6f71ce4a2d1a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "juicy_mem_max_access",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "unfold m_dry, m_phi; destruct j; auto.",
                        "VernacExtend",
                        "ab3d76ad88ccb462c67a1b7b92e6f71ce4a2d1a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "juicy_mem_alloc_cohere",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "unfold m_dry, m_phi; destruct j; auto.",
                        "VernacExtend",
                        "ab3d76ad88ccb462c67a1b7b92e6f71ce4a2d1a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "juicy_mem_resource",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (contents_cohere (m_dry jm) m') as Hcontents.",
                        "VernacExtend",
                        "f3f7624c397d46c665d0b35c9ace53c31b8c8adc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros ?????.",
                        "VernacExtend",
                        "0cf8dd5e53b76160b696a0b73b23e8fec0b81782"
                    ]
                },
                {
                    "command": [
                        "rewrite H; apply juicy_mem_contents.",
                        "VernacExtend",
                        "e33b1c6c8f93da392226715f2209ab1850e0e668"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (access_cohere (m_dry jm) m') as Haccess.",
                        "VernacExtend",
                        "6fc933b0afccf0a4ba122245d83d8694fea3bf91"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H; apply juicy_mem_access.",
                        "VernacExtend",
                        "4882f683a29bcc158ac1d457ebe41c344060c003"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (max_access_cohere (m_dry jm) m') as Hmax.",
                        "VernacExtend",
                        "1752ba6ce8b9fedc0b6e3009c37d8056b793b10b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H; apply juicy_mem_max_access.",
                        "VernacExtend",
                        "a0dbeb0e7406cc0cfff4567c15412541cb89676f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (alloc_cohere (m_dry jm) m') as Halloc.",
                        "VernacExtend",
                        "c05225b3643322939e8307f017a4ebefb25fd21a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H; apply juicy_mem_alloc_cohere.",
                        "VernacExtend",
                        "941ff7364725d1a3e001cf827a0d7863e864f89d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "exists (mkJuicyMem _ _ Hcontents Haccess Hmax Halloc); auto.",
                        "VernacExtend",
                        "a5b43b394bb5a7fc36cf0ed368ccbf13de488472"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_empty_inv",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh in*.",
                        "VernacExtend",
                        "daa3eecfcac4b0e7c6215fbb9230715428265ac1"
                    ]
                },
                {
                    "command": [
                        "if_tac in H; subst; auto.",
                        "VernacExtend",
                        "5cc6df3b60947e24f156c91949d5a4b92cc15fb2"
                    ]
                },
                {
                    "command": [
                        "if_tac in H; subst; auto.",
                        "VernacExtend",
                        "5cc6df3b60947e24f156c91949d5a4b92cc15fb2"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "if_tac in H; subst; auto.",
                        "VernacExtend",
                        "5cc6df3b60947e24f156c91949d5a4b92cc15fb2"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "if_tac in H; subst; auto.",
                        "VernacExtend",
                        "5cc6df3b60947e24f156c91949d5a4b92cc15fb2"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "writable_join_sub",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "hnf in H0|-*.",
                        "VernacExtend",
                        "e63b866eba9bfaa3450c481ebbe1aab0de02a973"
                    ]
                },
                {
                    "command": [
                        "destruct H; generalize (resource_at_join _ _ _ loc H); clear H.",
                        "VernacExtend",
                        "8df0820e8918635154a073e61b8a0c698de59be3"
                    ]
                },
                {
                    "command": [
                        "revert H0; destruct (phi1 @ loc); intros; try contradiction.",
                        "VernacExtend",
                        "09cf0f0b165b429071733dc56929df078fdfa34b"
                    ]
                },
                {
                    "command": [
                        "destruct H0; subst.",
                        "VernacExtend",
                        "20271853295fa24b8817fa15426b7cb1d3d3abe2"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply join_writable01; eauto.",
                        "VernacExtend",
                        "2b7acb7381c9b7abf4e2950a89d7e9fc0047ced6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "contradiction (join_writable0_readable RJ H0 rsh2).",
                        "VernacExtend",
                        "8e7802711b2e6e2ba9852d895c4328dfd5aede1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nreadable_inv",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "destruct (phi@loc); eauto 50.",
                        "VernacExtend",
                        "e716574bc8a73f6fe4913c5862344baaddb993a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_joinx",
            "line_nb": 190,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_join _ H2 H) as [phi2'' [phi3'' [? [? ?]]]].",
                        "VernacExtend",
                        "ed1da911303f8ae9c8820dbe89c38b6b7c8c2448"
                    ]
                },
                {
                    "command": [
                        "unfold age in *.",
                        "VernacExtend",
                        "21b5ab032e51bd9296ba434b1bc6a61269ceed41"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constructive_age1_join",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "pose proof I.",
                        "VernacExtend",
                        "abc787e9ace0638243c51c43605b46fde630e9f6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (age1 y); [intros y' ? | intros].",
                        "VernacExtend",
                        "7171725e507de8b9c02290f136f5b7afcebcef79"
                    ]
                },
                {
                    "command": [
                        "case_eq (age1 z); [intros z' ? | intros].",
                        "VernacExtend",
                        "1263c143bb0eb2e1fc6d980c5eabff0617a19082"
                    ]
                },
                {
                    "command": [
                        "exists (y',z').",
                        "VernacExtend",
                        "ad4866981f81ec53bf94b479ecd6153512eb1d9d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply (age1_joinx x y z x' y' z' H1 H2 H3 H0).",
                        "VernacExtend",
                        "ecc815a3f55bcaaf3465e0802bb7e6d42e5df729"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_join _ H0 H1) as [? [? [? [? ?]]]].",
                        "VernacExtend",
                        "aefcbf365ccca618823912062c5f95dbe3f8d643"
                    ]
                },
                {
                    "command": [
                        "unfold age in *.",
                        "VernacExtend",
                        "21b5ab032e51bd9296ba434b1bc6a61269ceed41"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_join _ H0 H1) as [? [? [? [? ?]]]].",
                        "VernacExtend",
                        "aefcbf365ccca618823912062c5f95dbe3f8d643"
                    ]
                },
                {
                    "command": [
                        "unfold age in *.",
                        "VernacExtend",
                        "21b5ab032e51bd9296ba434b1bc6a61269ceed41"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_constructive_joins_eq",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct X as [? ?H].",
                        "VernacExtend",
                        "299451ee585901a18f64cf95705353f4ee0ad191"
                    ]
                },
                {
                    "command": [
                        "destruct (constructive_age1_join _ _ _ _ H1 H) as [[y z] [? [? ?]]].",
                        "VernacExtend",
                        "209c88d69f1f8bdc547b435e5ed92d98d2b1e0e7"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "unfold age in H3.",
                        "VernacExtend",
                        "06af5d256190d2e614627a2a297e923bb22947de"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H3; inv H3; econstructor; eauto.",
                        "VernacExtend",
                        "aa0379786fe4b2942d3b84619107846f0cdd530e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_juicy_mem_obligation_1",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "assert (necR (m_phi j) phi') by (constructor 1; symmetry in Heq_anonymous; apply Heq_anonymous).",
                        "VernacExtend",
                        "534c368700db4cc101d0096623deb1bda62c9549"
                    ]
                },
                {
                    "command": [
                        "destruct j; hnf; simpl in *; intros.",
                        "VernacExtend",
                        "08e284dbd164d7d2d83d84a87add1313d7d5e824"
                    ]
                },
                {
                    "command": [
                        "case_eq (phi @ loc); intros.",
                        "VernacExtend",
                        "b61b92be6054795be5b6df44c1e635f64b6af2ca"
                    ]
                },
                {
                    "command": [
                        "apply (necR_NO _ _ _ _ _ H) in H1.",
                        "VernacExtend",
                        "fd9f4f5e88e185dc3c9d1ae57a130f502014cc3f"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "generalize (necR_YES _ _ _ _ _ _ _ H H1); intros.",
                        "VernacExtend",
                        "c46bab689b69db9e29e6446221933465ef19e852"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H2.",
                        "VernacExtend",
                        "a4d82e65c345819bdd50b79b067ee218c42a8857"
                    ]
                },
                {
                    "command": [
                        "inv H2.",
                        "VernacExtend",
                        "e11edf85dc09e31a8a2ba9dcf84be4035731ae99"
                    ]
                },
                {
                    "command": [
                        "destruct (JMcontents sh0 r v loc _ H1).",
                        "VernacExtend",
                        "f11126db0423dbbb1c6ca26cd715972f2eddc66c"
                    ]
                },
                {
                    "command": [
                        "subst; split; auto.",
                        "VernacExtend",
                        "c451ef2914ab67806aed8494e25bb2724f9ace83"
                    ]
                },
                {
                    "command": [
                        "rewrite (necR_PURE _ _ _ _ _ H H1) in H0.",
                        "VernacExtend",
                        "05243ca249242d078f2d6ebe136cd4a61fda2183"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "2721274aada33cbec3c1f62204a14a93dcf297fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_juicy_mem_obligation_2",
            "line_nb": 237,
            "steps": [
                {
                    "command": [
                        "assert (necR (m_phi j) phi') by (constructor 1; symmetry in Heq_anonymous; apply Heq_anonymous).",
                        "VernacExtend",
                        "534c368700db4cc101d0096623deb1bda62c9549"
                    ]
                },
                {
                    "command": [
                        "destruct j; hnf; simpl in *; intros.",
                        "VernacExtend",
                        "08e284dbd164d7d2d83d84a87add1313d7d5e824"
                    ]
                },
                {
                    "command": [
                        "generalize (JMaccess loc); case_eq (phi @ loc); intros.",
                        "VernacExtend",
                        "089bfafcbba0ade252b2a073ed7264c4a0d0e6fb"
                    ]
                },
                {
                    "command": [
                        "apply (necR_NO _ _ loc _ _ H) in H0.",
                        "VernacExtend",
                        "afd915101763386be0677eff56503a4c5aa0e662"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; auto.",
                        "VernacExtend",
                        "48df2b0b453adadcea8e6914bccb68bfc33b286b"
                    ]
                },
                {
                    "command": [
                        "rewrite (necR_YES _ _ _ _ _ _ _ H H0); auto.",
                        "VernacExtend",
                        "a96127944190073692c4472d6939dd1695209d27"
                    ]
                },
                {
                    "command": [
                        "rewrite (necR_PURE _ _ _ _ _ H H0); auto.",
                        "VernacExtend",
                        "a72a7f346634b829d7b068f969111caf5ef55a8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_juicy_mem_obligation_3",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "assert (necR (m_phi j) phi') by (constructor 1; symmetry in Heq_anonymous; apply Heq_anonymous).",
                        "VernacExtend",
                        "534c368700db4cc101d0096623deb1bda62c9549"
                    ]
                },
                {
                    "command": [
                        "destruct j; hnf; simpl in *; intros.",
                        "VernacExtend",
                        "08e284dbd164d7d2d83d84a87add1313d7d5e824"
                    ]
                },
                {
                    "command": [
                        "generalize (JMmax_access loc); case_eq (phi @ loc); intros.",
                        "VernacExtend",
                        "3bae6af19aa1a7c17128816c2d98ff5c2516add5"
                    ]
                },
                {
                    "command": [
                        "apply (necR_NO _ _ loc _ _ H) in H0.",
                        "VernacExtend",
                        "afd915101763386be0677eff56503a4c5aa0e662"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; auto.",
                        "VernacExtend",
                        "48df2b0b453adadcea8e6914bccb68bfc33b286b"
                    ]
                },
                {
                    "command": [
                        "rewrite (necR_YES _ _ _ _ _ _ _ H H0); auto.",
                        "VernacExtend",
                        "a96127944190073692c4472d6939dd1695209d27"
                    ]
                },
                {
                    "command": [
                        "rewrite (necR_PURE _ _ _ _ _ H H0); auto.",
                        "VernacExtend",
                        "a72a7f346634b829d7b068f969111caf5ef55a8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_juicy_mem_obligation_4",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "assert (necR (m_phi j) phi') by (constructor 1; symmetry in Heq_anonymous; apply Heq_anonymous).",
                        "VernacExtend",
                        "534c368700db4cc101d0096623deb1bda62c9549"
                    ]
                },
                {
                    "command": [
                        "destruct j; hnf; simpl in *; intros.",
                        "VernacExtend",
                        "08e284dbd164d7d2d83d84a87add1313d7d5e824"
                    ]
                },
                {
                    "command": [
                        "specialize (JMalloc loc H0).",
                        "VernacExtend",
                        "857f9b9c36d8022e98bb835ea93ae773934c19a9"
                    ]
                },
                {
                    "command": [
                        "apply (necR_NO _ _ loc _ _ H).",
                        "VernacExtend",
                        "de882061dc0fc9b65a01482789779be678eb9e46"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_juicy_mem_unpack",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold age1_juicy_mem in H.",
                        "VernacExtend",
                        "ee81913579dde3ecc0c18b2de263962d602a8c0e"
                    ]
                },
                {
                    "command": [
                        "invSome.",
                        "VernacExtend",
                        "f9b0e980c61f8244d51be433c425e71a65913712"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "split; simpl; auto.",
                        "VernacExtend",
                        "e2ee7819fbb32d2c4a8d46eec291a3c64ca8c3fb"
                    ]
                },
                {
                    "command": [
                        "symmetry in H0; apply H0.",
                        "VernacExtend",
                        "35a04c3db7ccf6dd017db014e3cdf88d24b439dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_juicy_mem_unpack'",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "unfold age1_juicy_mem.",
                        "VernacExtend",
                        "0aab2b38d63a40eeb939c8164032d11aebef30e2"
                    ]
                },
                {
                    "command": [
                        "generalize (eq_refl (age1 (m_phi j))).",
                        "VernacExtend",
                        "356ebf86336b2fa3e14d5cdb09d59c77b60548da"
                    ]
                },
                {
                    "command": [
                        "pattern (age1 (m_phi j)) at 1 3.",
                        "VernacExtend",
                        "841ee47c04e741970b8cf3bb409cf19420208dc3"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; clear H0.",
                        "VernacExtend",
                        "fabeca7858ebb717928a37dd7ab85d95711cf62f"
                    ]
                },
                {
                    "command": [
                        "intros H0.",
                        "VernacExtend",
                        "7be07b7f0ac418af4d02cddf70af6f27f8714110"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct j, j'; simpl in *; subst; repeat f_equal; try apply proof_irr.",
                        "VernacExtend",
                        "6b95686a7a54d8a93dd69bcd9bb3c20aa10c7b47"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmap_join_eq_level",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "intros until phi2; intro H.",
                        "VernacExtend",
                        "2de3656b140a2c1dcc89690840a637f190e830e0"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? H].",
                        "VernacExtend",
                        "525b85dbd6ca474432329de67ace9280a4967afb"
                    ]
                },
                {
                    "command": [
                        "apply join_level in H; destruct H; congruence.",
                        "VernacExtend",
                        "982c18d3e62b647853b172e1aebf819c36dcab97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmap_join_sub_eq_level",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "intros until phi2; intro H.",
                        "VernacExtend",
                        "2de3656b140a2c1dcc89690840a637f190e830e0"
                    ]
                },
                {
                    "command": [
                        "destruct H; apply join_level in H; destruct H; congruence.",
                        "VernacExtend",
                        "752181b15e87ca340edd2e029e03b1bd4e888b1b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_juicy_mem_None1",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "intros j H.",
                        "VernacExtend",
                        "e1029b95a4589a1a46696900831601e831ecbb3e"
                    ]
                },
                {
                    "command": [
                        "destruct j.",
                        "VernacExtend",
                        "01d6a18cdb100d2afee8d77e7fe64aa0aa4a1e68"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold age1_juicy_mem in H; simpl in H.",
                        "VernacExtend",
                        "1009d6a78f27e55f55a0887ea3607fd673231fb1"
                    ]
                },
                {
                    "command": [
                        "revert H; generalize (refl_equal (age1 phi)); pattern (age1 phi) at 1 3; destruct (age1 phi); intros; auto.",
                        "VernacExtend",
                        "4040d1857a612c842979581e5dd62b5fd61c89a9"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_juicy_mem_None2",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold age1_juicy_mem.",
                        "VernacExtend",
                        "0aab2b38d63a40eeb939c8164032d11aebef30e2"
                    ]
                },
                {
                    "command": [
                        "generalize (eq_refl (age1 (m_phi j))).",
                        "VernacExtend",
                        "356ebf86336b2fa3e14d5cdb09d59c77b60548da"
                    ]
                },
                {
                    "command": [
                        "pattern (age1 (m_phi j)) at 1 3.",
                        "VernacExtend",
                        "841ee47c04e741970b8cf3bb409cf19420208dc3"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_juicy_mem_Some",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply age1_juicy_mem_unpack in H; intuition.",
                        "VernacExtend",
                        "0f5cdfab6f5cec01621f82c0ee5485d6e68826aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unage_juicy_mem",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct j' as [m phi'].",
                        "VernacExtend",
                        "232cd33bea57576a23356c3463dd69926a166149"
                    ]
                },
                {
                    "command": [
                        "destruct (af_unage age_facts phi') as [phi ?].",
                        "VernacExtend",
                        "04accd12371197dfdf217c6d07c657ca523bea07"
                    ]
                },
                {
                    "command": [
                        "assert (NEC: necR phi phi') by (constructor 1; auto).",
                        "VernacExtend",
                        "71545bfa44efa14eb7eb5fee7f5ddc8f7f3a3142"
                    ]
                },
                {
                    "command": [
                        "rename H into Hage.",
                        "VernacExtend",
                        "a3a4ad8230af1509923a0c8b2920d84575b9049e"
                    ]
                },
                {
                    "command": [
                        "assert (contents_cohere m phi).",
                        "VernacExtend",
                        "8ca82de703d523fedb817078cbcec07c01f88bdf"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "generalize (necR_YES phi phi' loc rsh sh (VAL v) pp NEC H); intro.",
                        "VernacExtend",
                        "e224e3ffcc61d370bd2c14c4d98297596c7c6ffc"
                    ]
                },
                {
                    "command": [
                        "destruct (JMcontents _ _ _ _ _ H0).",
                        "VernacExtend",
                        "bc3253490482935f989f151b382a8377e6495d03"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H0.",
                        "VernacExtend",
                        "e125171e08531dd629ebb661886eab3f6051ba8d"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "generalize (necR_YES' _ _ loc rsh sh (VAL v) NEC); intro.",
                        "VernacExtend",
                        "874c5232fe858fb5c5db1812aa8356688ac22d70"
                    ]
                },
                {
                    "command": [
                        "apply H3 in H0.",
                        "VernacExtend",
                        "63f67de29d0e73476ad3989c90e7f6451a21729d"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "assert (access_cohere m phi).",
                        "VernacExtend",
                        "4eb84e7c5b09a156d141551ea2baa21bf74bd3d8"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "generalize (JMaccess loc); intros.",
                        "VernacExtend",
                        "55c97619f17701de834a77feddf95a9119930d6f"
                    ]
                },
                {
                    "command": [
                        "case_eq (phi @ loc); intros.",
                        "VernacExtend",
                        "b61b92be6054795be5b6df44c1e635f64b6af2ca"
                    ]
                },
                {
                    "command": [
                        "apply (necR_NO _ _ loc _ _ NEC) in H1.",
                        "VernacExtend",
                        "0a902a5b96ba7e976a43a3bd2b867ca2ee4758e8"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H0; auto.",
                        "VernacExtend",
                        "8f1778821d18c5baa509302961ef3be209acaf61"
                    ]
                },
                {
                    "command": [
                        "apply (necR_YES _ _ _ _ _ _ _ NEC) in H1.",
                        "VernacExtend",
                        "2360b90325999afb64e4e2b26f263cac47900e1d"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H0; auto.",
                        "VernacExtend",
                        "8f1778821d18c5baa509302961ef3be209acaf61"
                    ]
                },
                {
                    "command": [
                        "apply (necR_PURE _ _ _ _ _ NEC) in H1.",
                        "VernacExtend",
                        "588547b3452fb0e8b0a0e59f413d9aa51890cae2"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H0; auto.",
                        "VernacExtend",
                        "8f1778821d18c5baa509302961ef3be209acaf61"
                    ]
                },
                {
                    "command": [
                        "assert (max_access_cohere m phi).",
                        "VernacExtend",
                        "ad716c5fb5bebeec0b82c8c9b20fb0c49d70e7c5"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "generalize (JMmax_access loc); intros.",
                        "VernacExtend",
                        "41d30ef5a087efa515989bc5dcb30c100169e021"
                    ]
                },
                {
                    "command": [
                        "case_eq (phi @ loc); intros.",
                        "VernacExtend",
                        "b61b92be6054795be5b6df44c1e635f64b6af2ca"
                    ]
                },
                {
                    "command": [
                        "apply (necR_NO _ _ _ _ _ NEC) in H2; rewrite H2 in H1; auto.",
                        "VernacExtend",
                        "2e670867d4583feb68c6fef8ec31f733bcdf3767"
                    ]
                },
                {
                    "command": [
                        "rewrite (necR_YES _ _ _ _ _ _ _ NEC H2) in H1; auto.",
                        "VernacExtend",
                        "f4067b1e08bad74605ae67035db26f881558c970"
                    ]
                },
                {
                    "command": [
                        "rewrite (necR_PURE _ _ _ _ _ NEC H2) in H1; auto.",
                        "VernacExtend",
                        "ed898f9a53467f839017878a0a439e6d4cece167"
                    ]
                },
                {
                    "command": [
                        "assert (alloc_cohere m phi).",
                        "VernacExtend",
                        "1e5ba545d77324b9a83b5ed42ede51a93accc3e4"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "generalize (JMalloc loc H2); intros.",
                        "VernacExtend",
                        "0189f678e416fcf08b47eeed78434d107c59b668"
                    ]
                },
                {
                    "command": [
                        "case_eq (phi @ loc); intros.",
                        "VernacExtend",
                        "b61b92be6054795be5b6df44c1e635f64b6af2ca"
                    ]
                },
                {
                    "command": [
                        "apply (necR_NO _ _ _ _ _ NEC) in H4; rewrite H4 in H3; auto.",
                        "VernacExtend",
                        "af5a487c3cb4c8e9272a0a2fda5e6c60aa59e65d"
                    ]
                },
                {
                    "command": [
                        "rewrite (necR_YES _ _ _ _ _ _ _ NEC H4) in H3; inv H3.",
                        "VernacExtend",
                        "971c2d19af328927de069d91db0955570c44c4ea"
                    ]
                },
                {
                    "command": [
                        "rewrite (necR_PURE _ _ _ _ _ NEC H4) in H3; inv H3.",
                        "VernacExtend",
                        "2a6872f1cd44f24ca2a7961d35131074e0a460dd"
                    ]
                },
                {
                    "command": [
                        "exists (mkJuicyMem m phi H H0 H1 H2).",
                        "VernacExtend",
                        "c50e9492254eb9e20ea14629807d1b470dd01ddd"
                    ]
                },
                {
                    "command": [
                        "apply age1_juicy_mem_unpack''; simpl; auto.",
                        "VernacExtend",
                        "8e692199176b74641914f73bf66e8cc00e627a99"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "level1_juicy_mem",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "split; intro H.",
                        "VernacExtend",
                        "496dd5fc77c723ff896bbd9bc6dee3ccc3aa9bde"
                    ]
                },
                {
                    "command": [
                        "apply age1_level0.",
                        "VernacExtend",
                        "4f6dd9c8a0a8d73dd07f7f4d2303e0ada72fc61b"
                    ]
                },
                {
                    "command": [
                        "apply age1_juicy_mem_None1; auto.",
                        "VernacExtend",
                        "1958f9fb23cfd31323927a669ddfa17b714a0a38"
                    ]
                },
                {
                    "command": [
                        "apply age1_level0 in H.",
                        "VernacExtend",
                        "1c83653de59fc39eaa331d504a7b4197f5db114c"
                    ]
                },
                {
                    "command": [
                        "apply age1_juicy_mem_None2.",
                        "VernacExtend",
                        "73a9e1ff95818e4313074b095e9eefa626796088"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "level2_juicy_mem",
            "line_nb": 365,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_juicy_mem_unpack x y H).",
                        "VernacExtend",
                        "e9b42810ef34c87af3a2f8ba5dd7469760693d99"
                    ]
                },
                {
                    "command": [
                        "apply age_level in H0.",
                        "VernacExtend",
                        "c87f986006106a4d0adf74897b3c4423527d5e3d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "juicy_mem_ageable_facts",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply unage_juicy_mem.",
                        "VernacExtend",
                        "8f9d38e694e20de771fce248dbe739203f43a09c"
                    ]
                },
                {
                    "command": [
                        "apply level1_juicy_mem.",
                        "VernacExtend",
                        "7682859e3e47ab8ba3547a980431a0aec96f93a7"
                    ]
                },
                {
                    "command": [
                        "apply level2_juicy_mem.",
                        "VernacExtend",
                        "b3090523ff2f2432852dd3428f9c1c4b66c0a93f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "level_juice_level_phi",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "juicy_mem_ext",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct j1; destruct j2; simpl in *.",
                        "VernacExtend",
                        "11e41336ca9a4b45d18c20a857d3b068ac20adb2"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply proof_irr.",
                        "VernacExtend",
                        "6645667c8eb88627dd9c1b14a310a927f61ac2ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unage_writable",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "apply age1_resource_at with (loc := loc) (r := phi @ loc) in H.",
                        "VernacExtend",
                        "53a260fd9bd8392745b1ac85c074c38f19619659"
                    ]
                },
                {
                    "command": [
                        "destruct (phi' @ loc); try contradiction.",
                        "VernacExtend",
                        "538bd5a1846b6898cb399a872308ed325c58f308"
                    ]
                },
                {
                    "command": [
                        "unfold writable.",
                        "VernacExtend",
                        "03754d14e11b812e6fd06bb98ad3b5203200cb09"
                    ]
                },
                {
                    "command": [
                        "destruct (phi @ loc); try discriminate.",
                        "VernacExtend",
                        "5c9bfa8240b48a50a57cc09fd837dcd79db3c9a1"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (phi' @ loc); inv H0.",
                        "VernacExtend",
                        "c07cbff2d24010620e0748ca4fad4b0f449440c2"
                    ]
                },
                {
                    "command": [
                        "rewrite resource_at_approx.",
                        "VernacExtend",
                        "7d18662bc2312a78cc412cc1e5f3805ea304002a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "readable_inv",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros phi loc H.",
                        "VernacExtend",
                        "883c4a530b7bbe68b89bb75936b2ec6ec960842c"
                    ]
                },
                {
                    "command": [
                        "destruct (phi @ loc); try solve [inversion H].",
                        "VernacExtend",
                        "aa141106d77af13a1cbff689f0b11a4d9c48172c"
                    ]
                },
                {
                    "command": [
                        "destruct k; try inv H.",
                        "VernacExtend",
                        "20ede3e8a0701d66403ab2abc608f93ee626b100"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "resource_at_make_rmap",
            "line_nb": 417,
            "steps": [
                {
                    "command": [
                        "refine (fun f g lev H Hg => match proj2_sig (make_rmap f g lev H Hg) with | conj _ (conj RESOURCE_AT _) => RESOURCE_AT end).",
                        "VernacExtend",
                        "1d234db71daacd9358c235a42764399ba1997054"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "resource_at_remake_rmap",
            "line_nb": 420,
            "steps": [
                {
                    "command": [
                        "refine (fun f g lev H Hg => match proj2_sig (remake_rmap f g lev H Hg) with | conj _ (conj RESOURCE_AT _) => RESOURCE_AT end).",
                        "VernacExtend",
                        "3a41171d564bb615f424a688328cf2b2c8219ee3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ghost_of_make_rmap",
            "line_nb": 423,
            "steps": [
                {
                    "command": [
                        "refine (fun f g lev H Hg => match proj2_sig (make_rmap f g lev H Hg) with | conj _ (conj _ RESOURCE_AT) => RESOURCE_AT end).",
                        "VernacExtend",
                        "10b70f02d1d722528ea52396b229c95bb57347a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ghost_of_remake_rmap",
            "line_nb": 426,
            "steps": [
                {
                    "command": [
                        "refine (fun f g lev H Hg => match proj2_sig (remake_rmap f g lev H Hg) with | conj _ (conj _ RESOURCE_AT) => RESOURCE_AT end).",
                        "VernacExtend",
                        "dd0a94b722c5a054a613a83aa588cb4fd9372abe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "level_make_rmap",
            "line_nb": 429,
            "steps": [
                {
                    "command": [
                        "refine (fun f g lev H Hg => match proj2_sig (make_rmap f g lev H Hg) with | conj LEVEL _ => LEVEL end).",
                        "VernacExtend",
                        "4016db8ed0735a12d28941ee39d268a3fa97f899"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "level_remake_rmap",
            "line_nb": 432,
            "steps": [
                {
                    "command": [
                        "refine (fun f g lev H Hg => match proj2_sig (remake_rmap f g lev H Hg) with | conj LEVEL _ => LEVEL end).",
                        "VernacExtend",
                        "fda4573563b92dccd6957a7affde7de265f45bc5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inflate_initial_mem'_fmap",
            "line_nb": 438,
            "steps": [
                {
                    "command": [
                        "unfold compose.",
                        "VernacExtend",
                        "d80e23bf133762584228beafbd8610d99d5d02d5"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_initial_mem'.",
                        "VernacExtend",
                        "14562ffe0135e7b138dcd2ce81a541e5e6d5472c"
                    ]
                },
                {
                    "command": [
                        "extensionality loc.",
                        "VernacExtend",
                        "1e7eb6ee95191abc4fc69ac4ede8caa2d6671fd4"
                    ]
                },
                {
                    "command": [
                        "destruct (access_at m loc); try destruct p; try solve [unfold resource_fmap; f_equal; try apply preds_fmap_NoneP].",
                        "VernacExtend",
                        "8b97eb187ddb120f9aebbebe3e7efa56416a892a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- level_core.",
                        "VernacExtend",
                        "ff84055a66acf86843c0cc169056b76bfd881d35"
                    ]
                },
                {
                    "command": [
                        "case_eq (w @ loc);intros; try reflexivity.",
                        "VernacExtend",
                        "b25f45cad720f49451e53503c5b4418cc4aefa04"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "rewrite level_core.",
                        "VernacExtend",
                        "311b7130b0585b6bfe481f394758f6b14e36a5b3"
                    ]
                },
                {
                    "command": [
                        "apply resource_at_approx.",
                        "VernacExtend",
                        "53a0be89142540ace752063765d3f9d213ace003"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inflate_initial_mem_level",
            "line_nb": 451,
            "steps": [
                {
                    "command": [
                        "intros; unfold inflate_initial_mem, inflate_initial_mem'.",
                        "VernacExtend",
                        "75ac4191b6439bb05fed224c9bf648ca14afe2f8"
                    ]
                },
                {
                    "command": [
                        "rewrite level_make_rmap; auto.",
                        "VernacExtend",
                        "17582c56d8fb3ff09a7f463bb1a165af17f876ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inflate_initial_mem_all_VALs",
            "line_nb": 456,
            "steps": [
                {
                    "command": [
                        "unfold inflate_initial_mem, inflate_initial_mem', all_VALs.",
                        "VernacExtend",
                        "2aa7fd3faf8ed966c2aa1ddd7f7a0acd0cf82240"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "c769de66c67b8c7cf036f8573dd83a3e622b1dca"
                    ]
                },
                {
                    "command": [
                        "destruct (access_at m l); try destruct p; auto.",
                        "VernacExtend",
                        "38df5e05fa61a82bae945e359d46d83f1b892cc1"
                    ]
                },
                {
                    "command": [
                        "case (lev @ l); simpl; intros; auto.",
                        "VernacExtend",
                        "110cefea3df04ccf3b3878446a5aa2cd649c570d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inflate_alloc",
            "line_nb": 462,
            "steps": [
                {
                    "command": [
                        "refine (proj1_sig (remake_rmap (fun loc => fmap_option (res_option (phi @ loc)) (fmap_option (access_at m loc Cur) (NO Share.bot bot_unreadable) (fun p => match p with | Freeable => YES Share.top readable_share_top (VAL (contents_at m loc)) NoneP | _ => NO Share.Lsh Lsh_nonreadable end)) (fun _ => phi @ loc)) (ghost_of phi) (level phi) _ (ghost_of_approx phi))).",
                        "VernacExtend",
                        "102145e95e48d75eb579680d795865fb461ab68e"
                    ]
                },
                {
                    "command": [
                        "hnf; auto.",
                        "VernacExtend",
                        "65344d2383630f0b20be3e06df4e3dac3545a5cf"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "case_eq (phi @ l); simpl; intros; auto.",
                        "VernacExtend",
                        "db6af5787cacc6752daeb6ae211f1ee7442504ca"
                    ]
                },
                {
                    "command": [
                        "case_eq (access_at m l Cur); simpl; intros; auto.",
                        "VernacExtend",
                        "3df7dbc128a40d2176bbf2d7ec0707e5af8ad1c2"
                    ]
                },
                {
                    "command": [
                        "right; destruct p; simpl; auto.",
                        "VernacExtend",
                        "316105c2da46c3e0813a1445308e3a2dd0789d24"
                    ]
                },
                {
                    "command": [
                        "left; exists phi; split; auto.",
                        "VernacExtend",
                        "7bb8d0f361f97bd3a7347d957cde2cb4f0d36d86"
                    ]
                },
                {
                    "command": [
                        "right; destruct (access_at m l Cur); simpl; auto.",
                        "VernacExtend",
                        "575b3d615688c84885b8c7a5d276d5aa51ea8557"
                    ]
                },
                {
                    "command": [
                        "destruct p0; simpl; auto.",
                        "VernacExtend",
                        "20188655852df3a4f2f8c36f675d1e5fd83bc7f3"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "approx_map_idem",
            "line_nb": 473,
            "steps": [
                {
                    "command": [
                        "intros n ls.",
                        "VernacExtend",
                        "d15670c2f2529d6bd217b6e24e72cedcbcec4c7d"
                    ]
                },
                {
                    "command": [
                        "change (preds_fmap (approx n) (approx n) (preds_fmap (approx n) (approx n) ls)) with (((preds_fmap (approx n) (approx n)) oo (preds_fmap (approx n) (approx n))) ls).",
                        "VernacExtend",
                        "52be000c8245564d1d60d89411b5c601ceea71b9"
                    ]
                },
                {
                    "command": [
                        "rewrite preds_fmap_comp.",
                        "VernacExtend",
                        "386260a6a44ca4ce2f59db40a381c0f7c54b5b5e"
                    ]
                },
                {
                    "command": [
                        "rewrite (approx_oo_approx n).",
                        "VernacExtend",
                        "5e40bdf370a7e7dce27af7b2c094734a0874e702"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inflate_store",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "refine ( proj1_sig (make_rmap (fun loc => match phi @ loc with | YES sh rsh (VAL _) _ => YES sh rsh (VAL (contents_at m loc)) NoneP | YES _ _ _ _ => resource_fmap (approx (level phi)) (approx (level phi)) (phi @ loc) | _ => phi @ loc end) (ghost_of phi) (level phi) _ (ghost_of_approx phi))).",
                        "VernacExtend",
                        "1bfa0efe03dac363b630b15b4de495fd09634765"
                    ]
                },
                {
                    "command": [
                        "hnf; auto.",
                        "VernacExtend",
                        "65344d2383630f0b20be3e06df4e3dac3545a5cf"
                    ]
                },
                {
                    "command": [
                        "unfold compose.",
                        "VernacExtend",
                        "d80e23bf133762584228beafbd8610d99d5d02d5"
                    ]
                },
                {
                    "command": [
                        "extensionality l.",
                        "VernacExtend",
                        "9fc65292979c99219ff785a0ff10282cfe10e770"
                    ]
                },
                {
                    "command": [
                        "destruct l as (b, ofs).",
                        "VernacExtend",
                        "43bc3eb1df0946a02b889423c5482c38ba28d7ac"
                    ]
                },
                {
                    "command": [
                        "remember (phi @ (b, ofs)) as HPHI.",
                        "VernacExtend",
                        "42d045ad2843d63d4d487712d7592440196ca188"
                    ]
                },
                {
                    "command": [
                        "destruct HPHI; auto.",
                        "VernacExtend",
                        "375ec7a847c010c0f4ca0059a61c443fbbeed9f2"
                    ]
                },
                {
                    "command": [
                        "destruct k; try solve [ unfold resource_fmap; rewrite preds_fmap_NoneP; auto | unfold resource_fmap; rewrite approx_map_idem; auto ].",
                        "VernacExtend",
                        "7067bbc30ecb355a329b26697787add03c1bcd59"
                    ]
                },
                {
                    "command": [
                        "rewrite HeqHPHI.",
                        "VernacExtend",
                        "a0860ead07eccf9641f667892a76abb616ae4a84"
                    ]
                },
                {
                    "command": [
                        "apply resource_at_approx.",
                        "VernacExtend",
                        "53a0be89142540ace752063765d3f9d213ace003"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "adr_inv0",
            "line_nb": 493,
            "steps": [
                {
                    "command": [
                        "intros until sz.",
                        "VernacExtend",
                        "42bbce12500f233e464a83e6e191205da9bb673e"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "destruct (peq b b').",
                        "VernacExtend",
                        "c60e47b4a72bae440e0629b1ff5a7dd382a3e95b"
                    ]
                },
                {
                    "command": [
                        "right; intro Contra.",
                        "VernacExtend",
                        "02fcec325afee3d8570737e961432215802fbd07"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "unfold adr_range.",
                        "VernacExtend",
                        "b0e528febe3305fcc3909e875d29c117ccd363ea"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "left; intro Contra.",
                        "VernacExtend",
                        "aa7224eb7b5b7388501a36d4744cd42553babc62"
                    ]
                },
                {
                    "command": [
                        "apply n; auto.",
                        "VernacExtend",
                        "50f5fe9be649d10ce6a039598712426ef64bcbce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adr_inv",
            "line_nb": 504,
            "steps": [
                {
                    "command": [
                        "intros until ch; intros H1; eapply adr_inv0; eauto.",
                        "VernacExtend",
                        "f6c0e57c1310dab24c4e8d481750d0b4d0434cd1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "range_inv0",
            "line_nb": 507,
            "steps": [
                {
                    "command": [
                        "intros until sz; intro H.",
                        "VernacExtend",
                        "43ac198f253c6b50e5e5d66f3cb9524abfe3069c"
                    ]
                },
                {
                    "command": [
                        "destruct (zle ofs ofs'); destruct (zlt ofs' (ofs + sz)); omega.",
                        "VernacExtend",
                        "0eb09a6f2434ee207ae33ba718a934162679d412"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "range_inv",
            "line_nb": 511,
            "steps": [
                {
                    "command": [
                        "intros; eapply range_inv0; eauto.",
                        "VernacExtend",
                        "6e2f8acdee47e34b239d6fc4b6bf6579cefc7667"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_sh_Freeable_top",
            "line_nb": 514,
            "steps": [
                {
                    "command": [
                        "intros sh H.",
                        "VernacExtend",
                        "808a7bd4ab36185bcde00ce288b4b96427d6b699"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh in H.",
                        "VernacExtend",
                        "53c4e41959fdd2be012b6ec942c093f16fb19e49"
                    ]
                },
                {
                    "command": [
                        "repeat if_tac in H; solve [inversion H | auto].",
                        "VernacExtend",
                        "eaf87c70433447eb6179e5c74d01ba5c6c24f869"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nextblock_access_empty",
            "line_nb": 519,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold access_at.",
                        "VernacExtend",
                        "62798782afe09c554efd8c2a969dcf4529e62bb3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply (nextblock_noaccess m b ofs k).",
                        "VernacExtend",
                        "3f4b07d009df1f5b653de9de0ae995e91804a55c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_freeable",
            "line_nb": 532,
            "steps": [
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true.",
                        "VernacExtend",
                        "8198b40d461a5545fc467eded52f2fe8cb3ac368"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true; auto.",
                        "VernacExtend",
                        "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_writable",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by auto.",
                        "VernacExtend",
                        "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false; auto.",
                        "VernacExtend",
                        "1240282bd6190d3e1786b83abf332d1976c76b04"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_readable",
            "line_nb": 544,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false by auto.",
                        "VernacExtend",
                        "5a76c3b1b70df813cbad68c4a8a05295b8091083"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true; auto.",
                        "VernacExtend",
                        "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_nonempty",
            "line_nb": 550,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false by auto.",
                        "VernacExtend",
                        "5a76c3b1b70df813cbad68c4a8a05295b8091083"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false by auto.",
                        "VernacExtend",
                        "5a76c3b1b70df813cbad68c4a8a05295b8091083"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false by auto; auto.",
                        "VernacExtend",
                        "79e721c0823517dcaa34f2c49c109725be37d5b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_empty",
            "line_nb": 557,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false.",
                        "VernacExtend",
                        "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false.",
                        "VernacExtend",
                        "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true; auto.",
                        "VernacExtend",
                        "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
                    ]
                },
                {
                    "command": [
                        "apply bot_unreadable.",
                        "VernacExtend",
                        "d2b929fc5ca7de72e76b4ef031fd032b7e5ad81a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply writable0_readable in H.",
                        "VernacExtend",
                        "595f8668db335213ddc10758026a6cc15d874f4c"
                    ]
                },
                {
                    "command": [
                        "apply bot_unreadable in H; auto.",
                        "VernacExtend",
                        "0c7768fea12698df5a0a9a666321086b46db3cbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_Ews",
            "line_nb": 568,
            "steps": [
                {
                    "command": [
                        "unfold perm_of_sh, Ews, extern_retainer.",
                        "VernacExtend",
                        "62ecd4037f24bd37f3595f2f2642cd6fcab69cff"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true.",
                        "VernacExtend",
                        "8198b40d461a5545fc467eded52f2fe8cb3ac368"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false; auto.",
                        "VernacExtend",
                        "1240282bd6190d3e1786b83abf332d1976c76b04"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.lub_commute in H.",
                        "VernacExtend",
                        "87baeabd92611e9ae58d6d15fe0718955fa01e6b"
                    ]
                },
                {
                    "command": [
                        "pose proof lub_Lsh_Rsh.",
                        "VernacExtend",
                        "41759aebbb5aa11b58f19f3c36fcb775d9a872bf"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.lub_commute in H0.",
                        "VernacExtend",
                        "a4ba1148b2af80f570188f79fb7b36d947714e9e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H in H0.",
                        "VernacExtend",
                        "044ef0a64c068347d38112a9feb1635f78270f85"
                    ]
                },
                {
                    "command": [
                        "apply Share.distrib_spec in H0.",
                        "VernacExtend",
                        "9925295b604ef499947c005774a755944aa0d397"
                    ]
                },
                {
                    "command": [
                        "destruct (Share.split Share.Lsh) eqn:?H; simpl in *.",
                        "VernacExtend",
                        "edb04064688cdbf3230a515bf8199937c48ebb53"
                    ]
                },
                {
                    "command": [
                        "pose proof (nonemp_split_neq1 Share.Lsh t t0).",
                        "VernacExtend",
                        "8286138e6fb3b8e1ab1d52c40db6183e9f3f1fce"
                    ]
                },
                {
                    "command": [
                        "spec H2.",
                        "VernacExtend",
                        "ccbc913e682d1020971c7fd5f1b9a88216edea30"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply identity_share_bot in H3.",
                        "VernacExtend",
                        "2e40fb47513acf2b541f6b721573ba5bbefe48ee"
                    ]
                },
                {
                    "command": [
                        "contradiction Lsh_bot_neq.",
                        "VernacExtend",
                        "36b3d36d1b672544d1b1d65a7d710e3ba458e7b3"
                    ]
                },
                {
                    "command": [
                        "subst t.",
                        "VernacExtend",
                        "9a338ade929583d1d9999c5f080f6e2c965d6617"
                    ]
                },
                {
                    "command": [
                        "apply H2; auto.",
                        "VernacExtend",
                        "30acbf5144f9dcdba4f738b81d251d83daba847e"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_Rsh_Lsh.",
                        "VernacExtend",
                        "5ae8cdb4f2d90885e7cbf0cdfe7603814ca1068a"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.glb_commute.",
                        "VernacExtend",
                        "c7aa2ca1c2cacfb5aaf79a73ad4af3b6b141785a"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Share.ord_antisym.",
                        "VernacExtend",
                        "d0c80ca5b35a82a119003eb73dbaf0e584aaead7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- glb_Lsh_Rsh.",
                        "VernacExtend",
                        "7f10ef9636c7bac92ce8b88e988196e6c5a02fb0"
                    ]
                },
                {
                    "command": [
                        "apply glb_less_both.",
                        "VernacExtend",
                        "b3d251c30597b0697308e8daf541be0d687e4858"
                    ]
                },
                {
                    "command": [
                        "destruct (Share.split Share.Lsh) eqn:H.",
                        "VernacExtend",
                        "9cfc73dfc2dc947ff7e3d6da993e7df679a0fef8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Share.split_together in H.",
                        "VernacExtend",
                        "15fc543ab18c4fff38ca49483759e282bd7860f8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "apply Share.lub_upper1.",
                        "VernacExtend",
                        "b953252956af316ab4f358f76f099e185a0783bc"
                    ]
                },
                {
                    "command": [
                        "apply Share.ord_refl.",
                        "VernacExtend",
                        "378a4bea1f2477d2fc83d2cddc6944e25b27d82f"
                    ]
                },
                {
                    "command": [
                        "apply Share.bot_correct.",
                        "VernacExtend",
                        "fcb0e346cfcecef6734116975a6099f4f502a45a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold writable_share.",
                        "VernacExtend",
                        "88f58e20aa191e198234885170909c6a955cf091"
                    ]
                },
                {
                    "command": [
                        "apply leq_join_sub.",
                        "VernacExtend",
                        "3fff34a85cde33bcdf7d12bcb66c5c1e11b2a5a9"
                    ]
                },
                {
                    "command": [
                        "apply Share.lub_upper2.",
                        "VernacExtend",
                        "9f611e98fdac18babb257ab855c88dc98c7f41d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_Ers",
            "line_nb": 606,
            "steps": [
                {
                    "command": [
                        "unfold perm_of_sh, Ers, extern_retainer.",
                        "VernacExtend",
                        "6f7ab150cd36b40ea6563fbeaa23999a527b0ea0"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false.",
                        "VernacExtend",
                        "2c5a826465e1de693e0c0fc23e4204edde84d0fb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true; auto.",
                        "VernacExtend",
                        "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
                    ]
                },
                {
                    "command": [
                        "apply readable_share_lub.",
                        "VernacExtend",
                        "f215b10184abefa66539cafb562430a68e0019a9"
                    ]
                },
                {
                    "command": [
                        "unfold readable_share.",
                        "VernacExtend",
                        "81db76555770dee3886332dc2cd6171b48abe2d6"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_split_x.",
                        "VernacExtend",
                        "62cec800d4e5759e37d9fe32fce0e6366da36d30"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply identity_share_bot in H.",
                        "VernacExtend",
                        "360bf432e0e222aa9bde96f5057ce76c7c20b999"
                    ]
                },
                {
                    "command": [
                        "destruct (Share.split Share.Rsh) eqn:H0.",
                        "VernacExtend",
                        "ae4419e7a700b0de430cc549d348567294eb386f"
                    ]
                },
                {
                    "command": [
                        "apply Share.split_nontrivial in H0.",
                        "VernacExtend",
                        "3b041bd2f22a95893edbc5c117800db6b09cf104"
                    ]
                },
                {
                    "command": [
                        "unfold Share.Rsh in H0.",
                        "VernacExtend",
                        "1e0b88fca7d17007fd1d4b7678699b0b07c53cd9"
                    ]
                },
                {
                    "command": [
                        "destruct (Share.split Share.top) eqn:H1.",
                        "VernacExtend",
                        "6e8ee1874a71acc4445a7e957d2b8adcc6867ea0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply Share.split_nontrivial in H1.",
                        "VernacExtend",
                        "2bc8893c7601da257dc7c5b1bd7b5f73e7442a5b"
                    ]
                },
                {
                    "command": [
                        "apply Share.nontrivial; auto.",
                        "VernacExtend",
                        "7e2dfbaea3c3f5a6b9be458ab8dbf80c76621dfd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in H; auto.",
                        "VernacExtend",
                        "af8355a11fc9876408a43532409718a3dccf5638"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold writable_share.",
                        "VernacExtend",
                        "88f58e20aa191e198234885170909c6a955cf091"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply leq_join_sub in H.",
                        "VernacExtend",
                        "2ae99ac4de4d6f8e7685d348bb4f20cee8ab02ea"
                    ]
                },
                {
                    "command": [
                        "apply Share.ord_spec2 in H.",
                        "VernacExtend",
                        "eeaee825c0ef030b08b0336bacc962570287fb36"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (Share.glb Share.Rsh)) in H.",
                        "VernacExtend",
                        "68cec428bc12173ce476d50ab91883a74d75b090"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.distrib1 in H.",
                        "VernacExtend",
                        "bb67c7bf0c9af160f29d2a9efee661cc8ed55286"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.glb_idem in H.",
                        "VernacExtend",
                        "1cb77b6eda3f59fdfdb46d234ffcc4c91ebcb89e"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.lub_absorb in H.",
                        "VernacExtend",
                        "372c8415728811d1978e1b2b1f218c6a6ee533cb"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.distrib1 in H.",
                        "VernacExtend",
                        "bb67c7bf0c9af160f29d2a9efee661cc8ed55286"
                    ]
                },
                {
                    "command": [
                        "rewrite (@sub_glb_bot Share.Rsh (fst (Share.split Share.Lsh)) Share.Lsh) in H.",
                        "VernacExtend",
                        "f809bf02fb7a24b8c296c7967492ba785dd9d778"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.lub_commute, Share.lub_bot in H.",
                        "VernacExtend",
                        "e8a2aa82de3bf735735cc5bbdd3fea894f61a934"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_split_x in H.",
                        "VernacExtend",
                        "ecd35416303e95be431cd9f72555204465a032fe"
                    ]
                },
                {
                    "command": [
                        "destruct (Share.split Share.Rsh) eqn:H0.",
                        "VernacExtend",
                        "ae4419e7a700b0de430cc549d348567294eb386f"
                    ]
                },
                {
                    "command": [
                        "apply nonemp_split_neq1 in H0.",
                        "VernacExtend",
                        "2935ef7ec0249d139c6876152cfa8f641927ac3e"
                    ]
                },
                {
                    "command": [
                        "simpl in *; subst.",
                        "VernacExtend",
                        "979ced00f4598ad3717ed5f8b84cb9742e4a513e"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "apply nonidentity_Rsh.",
                        "VernacExtend",
                        "c1862bb6b8f57a5fbd8310cec6430dedcdd5f0a2"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "exists (snd (Share.split Share.Lsh)).",
                        "VernacExtend",
                        "c9686940067e47e08e82d9bf893095f9f415c3d0"
                    ]
                },
                {
                    "command": [
                        "destruct (Share.split Share.Lsh) eqn:H.",
                        "VernacExtend",
                        "9cfc73dfc2dc947ff7e3d6da993e7df679a0fef8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply Share.split_disjoint; eauto.",
                        "VernacExtend",
                        "8c9cb871b9d51fad1a45b1005e731565a0ac5a12"
                    ]
                },
                {
                    "command": [
                        "eapply Share.split_together; eauto.",
                        "VernacExtend",
                        "fc30e14a4e791e7841bbc367927f8d6f303b1d08"
                    ]
                },
                {
                    "command": [
                        "apply glb_Rsh_Lsh.",
                        "VernacExtend",
                        "6a2f3d33b0c08695550681f39c028816c5c2687a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extern_retainer_neq_bot",
            "line_nb": 653,
            "steps": [
                {
                    "command": [
                        "unfold extern_retainer.",
                        "VernacExtend",
                        "e37778dde1f3b79e3bc7057b553cfae12237a040"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct (Share.split Share.Lsh) eqn:H0.",
                        "VernacExtend",
                        "d4dbb712e742dcf809dccece3636ad00f4790593"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "pose proof (Share.split_together _ _ _ H0).",
                        "VernacExtend",
                        "fb4e036c63c6ce59b20cd6b836b29c7f1a278db5"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.lub_commute, Share.lub_bot in H.",
                        "VernacExtend",
                        "e8a2aa82de3bf735735cc5bbdd3fea894f61a934"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply nonemp_split_neq2 in H0.",
                        "VernacExtend",
                        "7f404f4688a40b48be1b2b0d5a06769d82cea1ee"
                    ]
                },
                {
                    "command": [
                        "contradiction H0; auto.",
                        "VernacExtend",
                        "5de982052c0e96f3b25e83792ba44bedab69033c"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "unfold Share.Lsh.",
                        "VernacExtend",
                        "de197f28a21c7193fe3017a3833f5d617a3a2188"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply identity_share_bot in H.",
                        "VernacExtend",
                        "360bf432e0e222aa9bde96f5057ce76c7c20b999"
                    ]
                },
                {
                    "command": [
                        "destruct (Share.split Share.top) eqn:H0.",
                        "VernacExtend",
                        "2a7863bcaa0c553068d47d1adf5ffadf2e8d9150"
                    ]
                },
                {
                    "command": [
                        "simpl in *; subst.",
                        "VernacExtend",
                        "979ced00f4598ad3717ed5f8b84cb9742e4a513e"
                    ]
                },
                {
                    "command": [
                        "apply split_nontrivial' in H0.",
                        "VernacExtend",
                        "f92475cece206b058b84056d7c7b504009b0f765"
                    ]
                },
                {
                    "command": [
                        "apply identity_share_bot in H0.",
                        "VernacExtend",
                        "c697abd3712decf48c713f6c010c1ae66f04faf9"
                    ]
                },
                {
                    "command": [
                        "apply Share.nontrivial; auto.",
                        "VernacExtend",
                        "7e2dfbaea3c3f5a6b9be458ab8dbf80c76621dfd"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply bot_identity.",
                        "VernacExtend",
                        "1533895df57cb12584946f945937b197f80b2c10"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_order''_trans",
            "line_nb": 676,
            "steps": [
                {
                    "command": [
                        "intros a b c H1 H2; destruct a, b, c; inversion H1; inversion H2; subst; eauto; eapply perm_order_trans; eauto.",
                        "VernacExtend",
                        "6255c05ce25fbf89f2e186dc0a6ef1f8763cd361"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "initial_mem",
            "line_nb": 679,
            "steps": [
                {
                    "command": [
                        "refine (mkJuicyMem m (inflate_initial_mem m lev) _ _ _ _); unfold inflate_initial_mem, inflate_initial_mem'; hnf; intros; try rewrite resource_at_make_rmap in *.",
                        "VernacExtend",
                        "acaf64c5017155299544fdf1eac61f278562d729"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "revert H; case_eq (access_at m loc Cur); intros.",
                        "VernacExtend",
                        "e387836cd1272e50fc4840e730c4b54275501a11"
                    ]
                },
                {
                    "command": [
                        "destruct p; inv H0; auto.",
                        "VernacExtend",
                        "0b5c57499fed48ca59ed332db3788809122a8cb0"
                    ]
                },
                {
                    "command": [
                        "revert H2; case_eq (lev @ loc); intros; congruence.",
                        "VernacExtend",
                        "d84340281594dd882bc875560ddc6a600c2dfa24"
                    ]
                },
                {
                    "command": [
                        "destruct (max_access_at m loc); try destruct p; try congruence.",
                        "VernacExtend",
                        "f894f16993eb0fe6adc1f60e0c6f3ab18d823244"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "destruct (access_at m loc) eqn:?; try destruct p; auto; simpl.",
                        "VernacExtend",
                        "709e9f2553f05407f4b8b3a4a1e15d5f63f43881"
                    ]
                },
                {
                    "command": [
                        "apply perm_of_freeable.",
                        "VernacExtend",
                        "63da4381f10f7c70b389d5b3e353a2bdb574b80c"
                    ]
                },
                {
                    "command": [
                        "apply perm_of_Ews.",
                        "VernacExtend",
                        "331abbc6bf5a288c3bfaf1fa9bea812ec5bf76ad"
                    ]
                },
                {
                    "command": [
                        "apply perm_of_Ers.",
                        "VernacExtend",
                        "84cedc46bfd444dc1a269d32b0d913c839ec796a"
                    ]
                },
                {
                    "command": [
                        "destruct (IOK loc).",
                        "VernacExtend",
                        "e0c37fe532da11959f1a4f1ccd2670c05809b2a9"
                    ]
                },
                {
                    "command": [
                        "destruct (lev @ loc).",
                        "VernacExtend",
                        "aac98eed697979b4071aa2d3b01b82493db67b9a"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite if_false by apply extern_retainer_neq_bot; auto.",
                        "VernacExtend",
                        "e93e78c66831dd41b2accd4267b081083879aa7f"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite if_false by apply extern_retainer_neq_bot; auto.",
                        "VernacExtend",
                        "e93e78c66831dd41b2accd4267b081083879aa7f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true; auto.",
                        "VernacExtend",
                        "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "generalize (perm_cur_max m (fst loc) (snd loc)); unfold perm; intros.",
                        "VernacExtend",
                        "b2e8e2157539d2dac5eed99f79ad789c2e50e11d"
                    ]
                },
                {
                    "command": [
                        "case_eq (access_at m loc Cur); try destruct p; intros.",
                        "VernacExtend",
                        "8928d6eedfc35ba19240ec2cb759dcc9f39183ee"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold perm_order'', perm_order', max_access_at in *.",
                        "VernacExtend",
                        "5bfdc21ba513197e3d1ccbad448a89dce7a1d51f"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite perm_of_freeable.",
                        "VernacExtend",
                        "baa3bdd5492f1435f13e0b7a78f0db6d7b5877db"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "unfold access_at in H0.",
                        "VernacExtend",
                        "cb18fcc1d5a3c28f924a0f275e8501708c534e69"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite perm_of_Ews.",
                        "VernacExtend",
                        "fa60c9a2b0a42bbcd1d5017a83622a24c0f5d57e"
                    ]
                },
                {
                    "command": [
                        "unfold perm_order'', perm_order', max_access_at, access_at in *.",
                        "VernacExtend",
                        "5d86cbe0ee3fca9132e15262c9475b935fbf9357"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in *.",
                        "VernacExtend",
                        "af83a584973699e6385aaceb6dfa23390deb3419"
                    ]
                },
                {
                    "command": [
                        "specialize (H Writable).",
                        "VernacExtend",
                        "1171450337884300d69c49ee318cf3e277e3ccf7"
                    ]
                },
                {
                    "command": [
                        "spec H.",
                        "VernacExtend",
                        "c7a045c1cfd9908cdf3626bbe876cad8b9f0c976"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite perm_of_Ers.",
                        "VernacExtend",
                        "670508ed09a9c760d38213080e410bb389d5fc10"
                    ]
                },
                {
                    "command": [
                        "unfold perm_order'', perm_order', max_access_at, access_at in *.",
                        "VernacExtend",
                        "5d86cbe0ee3fca9132e15262c9475b935fbf9357"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in *.",
                        "VernacExtend",
                        "af83a584973699e6385aaceb6dfa23390deb3419"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (IOK loc).",
                        "VernacExtend",
                        "e0c37fe532da11959f1a4f1ccd2670c05809b2a9"
                    ]
                },
                {
                    "command": [
                        "eapply perm_order''_trans; [apply (access_max m (fst loc) (snd loc))|].",
                        "VernacExtend",
                        "fd8b2acaede6a65bdebf2ed61d32d37880a119eb"
                    ]
                },
                {
                    "command": [
                        "unfold access_at in H0; rewrite H0.",
                        "VernacExtend",
                        "625c7258ecd5cac1eb8742efd16d1a8a9a486dcb"
                    ]
                },
                {
                    "command": [
                        "destruct (lev @ loc) ; simpl; try destruct (@eq_dec Share.t Share.EqDec_share extern_retainer Share.bot); try constructor.",
                        "VernacExtend",
                        "bd739d74e067535d2efaeb725f96d976e584ae3b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec Share.bot Share.bot) as [e|n]; [| exfalso; apply n; reflexivity].",
                        "VernacExtend",
                        "15c489b98833f079a4d46afea023280232eb1900"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "apply (access_max m).",
                        "VernacExtend",
                        "9dd0a792e939ed3b22b309216c3f232f78edcb55"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold access_at.",
                        "VernacExtend",
                        "62798782afe09c554efd8c2a969dcf4529e62bb3"
                    ]
                },
                {
                    "command": [
                        "unfold block; rewrite (nextblock_noaccess m (fst loc) (snd loc) Cur); auto.",
                        "VernacExtend",
                        "08d0c7a0e3726be5019b0f2ac78eb8548c9289a5"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "initial_mem_level",
            "line_nb": 741,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct j; simpl.",
                        "VernacExtend",
                        "91a3fb4cf04ba148f81b4789a2625d7ab926c18a"
                    ]
                },
                {
                    "command": [
                        "unfold initial_mem in H.",
                        "VernacExtend",
                        "e4c08e963421867def785005a50fbe1cb657582a"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst.",
                        "VernacExtend",
                        "123ebc73101dcac5781200440a60232218464ea1"
                    ]
                },
                {
                    "command": [
                        "unfold juicy_mem_level.",
                        "VernacExtend",
                        "67444c60a9f17b043d554be00f50c4becc4283c9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "erewrite inflate_initial_mem_level; eauto.",
                        "VernacExtend",
                        "a76850c1e2150adc1caa6da01301aed8cf246645"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "initial_mem_all_VALs",
            "line_nb": 750,
            "steps": [
                {
                    "command": [
                        "intros until 1; intros (b, ofs).",
                        "VernacExtend",
                        "ece8466ed0c1c1c3df212f045462722d3e50c2fd"
                    ]
                },
                {
                    "command": [
                        "destruct j; unfold initial_mem in H; inversion H; subst.",
                        "VernacExtend",
                        "d9b1eff034b36978966d4586685bbe3fb73c2f88"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_initial_mem, inflate_initial_mem'; rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "8051a444ebd6d3d69a8022d576a8c555acc088f8"
                    ]
                },
                {
                    "command": [
                        "destruct (access_at m (b, ofs)); try destruct p; auto.",
                        "VernacExtend",
                        "a60dd7202f6a26028bbc79cc831b98566386ca1e"
                    ]
                },
                {
                    "command": [
                        "case_eq (lev @ (b,ofs)); intros; auto.",
                        "VernacExtend",
                        "58204fd2f9a03a90e1e94e52ac08b8a7b05f2c91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_mem_access",
            "line_nb": 758,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite perm_access in H.",
                        "VernacExtend",
                        "d9739c4201234f2c6cfb89a59d5afd72f00ca180"
                    ]
                },
                {
                    "command": [
                        "red in H.",
                        "VernacExtend",
                        "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
                    ]
                },
                {
                    "command": [
                        "destruct (access_at m (b, ofs) Cur); try contradiction; eauto.",
                        "VernacExtend",
                        "58cb07c2949ad9f8c4075f3fd922396008fa88d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "store_phi_elsewhere_eq",
            "line_nb": 766,
            "steps": [
                {
                    "command": [
                        "destruct jm.",
                        "VernacExtend",
                        "8795f89844d770dd0654a8ef328b3253248c83f1"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "clear jm.",
                        "VernacExtend",
                        "8144aef320ac66a080b53673a8cae27211a63dee"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold contents_at.",
                        "VernacExtend",
                        "355fb39404b1a9523a8d490a90045797e265ef16"
                    ]
                },
                {
                    "command": [
                        "rewrite store_mem_contents with (chunk := ch) (m1 := m) (b := b) (ofs := ofs) (v := v); auto.",
                        "VernacExtend",
                        "819698e914aa4e0e56fbb9cccb7ed16351aed73b"
                    ]
                },
                {
                    "command": [
                        "destruct loc' as [b' ofs'].",
                        "VernacExtend",
                        "9dcc3f72ba258083a6d53ed74fe052c21911ca90"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (peq b' b).",
                        "VernacExtend",
                        "0f30722c1c4f01f2a3c703767998c6242ecd478a"
                    ]
                },
                {
                    "command": [
                        "destruct (adr_inv b b' ofs ofs' ch H).",
                        "VernacExtend",
                        "3bae64170571c5c85ea1a43fe0899e3839f18b58"
                    ]
                },
                {
                    "command": [
                        "symmetry in e.",
                        "VernacExtend",
                        "063739eb53c2f93de3428d3591ef3e5c0eb1d7dd"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite PMap.gss.",
                        "VernacExtend",
                        "b5a245c2e8793ec855a664f9951af0c15417e45b"
                    ]
                },
                {
                    "command": [
                        "rewrite setN_outside.",
                        "VernacExtend",
                        "7661ff73f59ff6e4f69544e8d76050bc104812ed"
                    ]
                },
                {
                    "command": [
                        "destruct (JMcontents _ _ _ _ _ H0) as [H5 _].",
                        "VernacExtend",
                        "80e0bae4258c249b183da2b6c53824da494f82ae"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "destruct (range_inv _ _ _ H1) as [H1'|H1'].",
                        "VernacExtend",
                        "718e2dd1c1acd24c1de065a7d2b1222a18fb3014"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "rewrite encode_val_length.",
                        "VernacExtend",
                        "b0e90aedf59ee48cea6adf5d40d7d77ee1bd6402"
                    ]
                },
                {
                    "command": [
                        "rewrite <- size_chunk_conv.",
                        "VernacExtend",
                        "901d4a55d66f5c2aee307b32100ce3bf270b8f5f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite PMap.gso; auto.",
                        "VernacExtend",
                        "fd359ee8aa72b151984c0d9320f278a59a02dd91"
                    ]
                },
                {
                    "command": [
                        "destruct (JMcontents _ _ _ _ _ H0) as [H1 _].",
                        "VernacExtend",
                        "da77c31ffbfcb8471396379fbf30376cfd1d3674"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "store_juicy_mem",
            "line_nb": 794,
            "steps": [
                {
                    "command": [
                        "refine (mkJuicyMem m' (inflate_store m' (m_phi jm)) _ _ _ _).",
                        "VernacExtend",
                        "ba11f8b35e79925d71118ad549f7b71cb4f79d4e"
                    ]
                },
                {
                    "command": [
                        "intros rsh sh' v' loc' pp H2.",
                        "VernacExtend",
                        "d49dbf3d708ea32379c533a840d4a17a45fab555"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_store in H2; rewrite resource_at_make_rmap in H2.",
                        "VernacExtend",
                        "bb29f8442ca596d4c6140efeeaa656cc0bdb81ab"
                    ]
                },
                {
                    "command": [
                        "destruct (m_phi jm @ loc'); try destruct k; try solve [inversion H2].",
                        "VernacExtend",
                        "5030bf30ac4d5b4c5d6640f666bdf9d25c62fa82"
                    ]
                },
                {
                    "command": [
                        "inversion H2; auto.",
                        "VernacExtend",
                        "ea1132527ad99368fb4b34137c12eb88448ba881"
                    ]
                },
                {
                    "command": [
                        "intro loc; generalize (juicy_mem_access jm loc); intro H0.",
                        "VernacExtend",
                        "334939bdadd6f4067a2c73983316c3345533da90"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_store; rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "df172867dc5ec7f97f219d19224ee0f1a980d012"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Memory.store_access _ _ _ _ _ _ STORE).",
                        "VernacExtend",
                        "3a6a5ac4c8884b0ed8c729491be7d8ab62495905"
                    ]
                },
                {
                    "command": [
                        "destruct (m_phi jm @ loc); try destruct k; auto.",
                        "VernacExtend",
                        "95b44ab3751f5adb2034fb126331d0bdd6046b2d"
                    ]
                },
                {
                    "command": [
                        "intro loc; generalize (juicy_mem_max_access jm loc); intro H1.",
                        "VernacExtend",
                        "26b361e59b733e6a29bf3d375da9c5342100054c"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_store; rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "df172867dc5ec7f97f219d19224ee0f1a980d012"
                    ]
                },
                {
                    "command": [
                        "unfold max_access_at in *.",
                        "VernacExtend",
                        "77a7c640d38f7b9542d001203af96917ce52714b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Memory.store_access _ _ _ _ _ _ STORE).",
                        "VernacExtend",
                        "3a6a5ac4c8884b0ed8c729491be7d8ab62495905"
                    ]
                },
                {
                    "command": [
                        "apply nextblock_store in STORE.",
                        "VernacExtend",
                        "7eaefb08b93df96ee7570754354c064cd6a3facd"
                    ]
                },
                {
                    "command": [
                        "destruct (m_phi jm @ loc); auto.",
                        "VernacExtend",
                        "9e49777218aa867a635755c069e7941392e1adde"
                    ]
                },
                {
                    "command": [
                        "destruct k; simpl; try assumption.",
                        "VernacExtend",
                        "cfca94ee203eaea4470194e8e51522f1793be51d"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_store.",
                        "VernacExtend",
                        "106b8407ce3c46e43c202e702fc1f2c2e4d4bf5c"
                    ]
                },
                {
                    "command": [
                        "rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "8c357c8ccf2cc08642a35d18032ae2f7599bca42"
                    ]
                },
                {
                    "command": [
                        "generalize (juicy_mem_alloc_cohere jm loc); intro.",
                        "VernacExtend",
                        "12d79f80805d344afa44291011023b3a8afb00fe"
                    ]
                },
                {
                    "command": [
                        "rewrite (nextblock_store _ _ _ _ _ _ STORE) in H.",
                        "VernacExtend",
                        "c65dd9ce608fe0314d73c32dcb471d4da3a04fc9"
                    ]
                },
                {
                    "command": [
                        "rewrite (H0 H).",
                        "VernacExtend",
                        "6ea9bcf8d9e61366a630ecfd4a54a83c1cdda053"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "storebytes_phi_elsewhere_eq",
            "line_nb": 822,
            "steps": [
                {
                    "command": [
                        "destruct jm.",
                        "VernacExtend",
                        "8795f89844d770dd0654a8ef328b3253248c83f1"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "clear jm.",
                        "VernacExtend",
                        "8144aef320ac66a080b53673a8cae27211a63dee"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold contents_at.",
                        "VernacExtend",
                        "355fb39404b1a9523a8d490a90045797e265ef16"
                    ]
                },
                {
                    "command": [
                        "rewrite storebytes_mem_contents with (m1 := m) (b := b) (ofs := ofs) (bytes := bytes); auto.",
                        "VernacExtend",
                        "8fb9b1ecb4634e216ef22a3612f0cf4b272a8641"
                    ]
                },
                {
                    "command": [
                        "destruct loc' as [b' ofs'].",
                        "VernacExtend",
                        "9dcc3f72ba258083a6d53ed74fe052c21911ca90"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (peq b' b).",
                        "VernacExtend",
                        "0f30722c1c4f01f2a3c703767998c6242ecd478a"
                    ]
                },
                {
                    "command": [
                        "destruct (adr_inv0 b b' ofs ofs' (Zlength bytes) H).",
                        "VernacExtend",
                        "6b4389e0386e4e2f618d21cc7706b85e2d1f3c34"
                    ]
                },
                {
                    "command": [
                        "symmetry in e.",
                        "VernacExtend",
                        "063739eb53c2f93de3428d3591ef3e5c0eb1d7dd"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite PMap.gss.",
                        "VernacExtend",
                        "b5a245c2e8793ec855a664f9951af0c15417e45b"
                    ]
                },
                {
                    "command": [
                        "rewrite setN_outside.",
                        "VernacExtend",
                        "7661ff73f59ff6e4f69544e8d76050bc104812ed"
                    ]
                },
                {
                    "command": [
                        "destruct (JMcontents _ _ _ _ _ H0) as [H5 _].",
                        "VernacExtend",
                        "80e0bae4258c249b183da2b6c53824da494f82ae"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "destruct (range_inv0 _ _ _ H1) as [H1'|H1'].",
                        "VernacExtend",
                        "4662d0ef9afd432d6ebee32708d3b42be215e0f8"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Zlength_correct; auto.",
                        "VernacExtend",
                        "9a83783966bf81d9aa50377c22ae1a8559bb6500"
                    ]
                },
                {
                    "command": [
                        "rewrite PMap.gso; auto.",
                        "VernacExtend",
                        "fd359ee8aa72b151984c0d9320f278a59a02dd91"
                    ]
                },
                {
                    "command": [
                        "destruct (JMcontents _ _ _ _ _ H0) as [H1 _].",
                        "VernacExtend",
                        "da77c31ffbfcb8471396379fbf30376cfd1d3674"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "storebytes_juicy_mem",
            "line_nb": 848,
            "steps": [
                {
                    "command": [
                        "refine (mkJuicyMem m' (inflate_store m' (m_phi jm)) _ _ _ _).",
                        "VernacExtend",
                        "ba11f8b35e79925d71118ad549f7b71cb4f79d4e"
                    ]
                },
                {
                    "command": [
                        "intros rsh sh' v' loc' pp H2.",
                        "VernacExtend",
                        "d49dbf3d708ea32379c533a840d4a17a45fab555"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_store in H2; rewrite resource_at_make_rmap in H2.",
                        "VernacExtend",
                        "bb29f8442ca596d4c6140efeeaa656cc0bdb81ab"
                    ]
                },
                {
                    "command": [
                        "destruct (m_phi jm @ loc'); try destruct k; try solve [inversion H2].",
                        "VernacExtend",
                        "5030bf30ac4d5b4c5d6640f666bdf9d25c62fa82"
                    ]
                },
                {
                    "command": [
                        "inversion H2; auto.",
                        "VernacExtend",
                        "ea1132527ad99368fb4b34137c12eb88448ba881"
                    ]
                },
                {
                    "command": [
                        "intro loc; generalize (juicy_mem_access jm loc); intro H0.",
                        "VernacExtend",
                        "334939bdadd6f4067a2c73983316c3345533da90"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_store; rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "df172867dc5ec7f97f219d19224ee0f1a980d012"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Memory.storebytes_access _ _ _ _ _ STOREBYTES).",
                        "VernacExtend",
                        "5c0d363be2760b2876a2ff0eb3d6a48c4975c03d"
                    ]
                },
                {
                    "command": [
                        "destruct (m_phi jm @ loc); try destruct k; auto.",
                        "VernacExtend",
                        "95b44ab3751f5adb2034fb126331d0bdd6046b2d"
                    ]
                },
                {
                    "command": [
                        "intro loc; generalize (juicy_mem_max_access jm loc); intro H1.",
                        "VernacExtend",
                        "26b361e59b733e6a29bf3d375da9c5342100054c"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_store; rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "df172867dc5ec7f97f219d19224ee0f1a980d012"
                    ]
                },
                {
                    "command": [
                        "unfold max_access_at in *.",
                        "VernacExtend",
                        "77a7c640d38f7b9542d001203af96917ce52714b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Memory.storebytes_access _ _ _ _ _ STOREBYTES).",
                        "VernacExtend",
                        "5c0d363be2760b2876a2ff0eb3d6a48c4975c03d"
                    ]
                },
                {
                    "command": [
                        "assert (H88:=nextblock_storebytes _ _ _ _ _ STOREBYTES).",
                        "VernacExtend",
                        "e7544aa1459a18ed12bd9f8f3d2e75e099cdadf2"
                    ]
                },
                {
                    "command": [
                        "destruct (m_phi jm @ loc); try rewrite H88; auto.",
                        "VernacExtend",
                        "077037b4475ceb7e7c4885649c71b14b9e659e91"
                    ]
                },
                {
                    "command": [
                        "destruct k; simpl; try rewrite H88; auto.",
                        "VernacExtend",
                        "483b8e1e4c5ea5f6460b6426cb0b92a0d9eb8918"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_store.",
                        "VernacExtend",
                        "106b8407ce3c46e43c202e702fc1f2c2e4d4bf5c"
                    ]
                },
                {
                    "command": [
                        "rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "8c357c8ccf2cc08642a35d18032ae2f7599bca42"
                    ]
                },
                {
                    "command": [
                        "generalize (juicy_mem_alloc_cohere jm loc); intro.",
                        "VernacExtend",
                        "12d79f80805d344afa44291011023b3a8afb00fe"
                    ]
                },
                {
                    "command": [
                        "rewrite (nextblock_storebytes _ _ _ _ _ STOREBYTES) in H.",
                        "VernacExtend",
                        "7a8b0a8b3e907e5390b7eae4b6a9a13ef80f4c41"
                    ]
                },
                {
                    "command": [
                        "rewrite (H0 H).",
                        "VernacExtend",
                        "6ea9bcf8d9e61366a630ecfd4a54a83c1cdda053"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "free_smaller_None",
            "line_nb": 874,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (adr_range_dec (b',lo) (hi-lo) (b,ofs)).",
                        "VernacExtend",
                        "50a84821517def88dfe72c8300dc0e558215db78"
                    ]
                },
                {
                    "command": [
                        "destruct a; simpl in *.",
                        "VernacExtend",
                        "f16ce63ce10cf4add043d122c2aa557e3f699d02"
                    ]
                },
                {
                    "command": [
                        "subst b'; apply free_access with (ofs:=ofs) in H0; [ | omega].",
                        "VernacExtend",
                        "e7560d29714a085941eb1f1441df0c7cb77a7160"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "pose proof (Memory.access_cur_max m' (b,ofs)).",
                        "VernacExtend",
                        "ad324df5fa313e1b78748f17aa2ebea2490004bf"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H3; simpl in H3.",
                        "VernacExtend",
                        "22e05d88f679844ddde961dffb536877dc5c6143"
                    ]
                },
                {
                    "command": [
                        "destruct (access_at m' (b, ofs) Cur); auto; contradiction.",
                        "VernacExtend",
                        "8128ec7232a4a3ed0c90fd2cccb712a11e606b54"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "eapply free_access_other; eauto.",
                        "VernacExtend",
                        "1d36e3634bf0e397b14f2de20703c6af2328c7e8"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_block b b'); auto; right.",
                        "VernacExtend",
                        "914bb5c32cce7fe069c89800838ac8b0893c825d"
                    ]
                },
                {
                    "command": [
                        "simpl in n.",
                        "VernacExtend",
                        "950037a81d91f1ad97b7f1e8cec014bbd95db506"
                    ]
                },
                {
                    "command": [
                        "assert (~(lo <= ofs < lo + (hi - lo))) by intuition.",
                        "VernacExtend",
                        "f676a9799fb61bed6bd9009d5a2d3e6598421083"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inflate_free",
            "line_nb": 912,
            "steps": [
                {
                    "command": [
                        "refine ( proj1_sig (make_rmap (fun loc => if adr_range_dec (b,lo) (hi-lo) loc then NO Share.bot bot_unreadable else m_phi jm @ loc) (ghost_of (m_phi jm)) (level (m_phi jm)) _ (ghost_of_approx (m_phi jm)))).",
                        "VernacExtend",
                        "d16b7f16d4184701a32e4cfaf5335b07d5c7542a"
                    ]
                },
                {
                    "command": [
                        "unfold compose.",
                        "VernacExtend",
                        "d80e23bf133762584228beafbd8610d99d5d02d5"
                    ]
                },
                {
                    "command": [
                        "extensionality l.",
                        "VernacExtend",
                        "9fc65292979c99219ff785a0ff10282cfe10e770"
                    ]
                },
                {
                    "command": [
                        "destruct l as (b', ofs').",
                        "VernacExtend",
                        "cc863164189219af636903e2c580ff5985e1ac95"
                    ]
                },
                {
                    "command": [
                        "if_tac; try reflexivity.",
                        "VernacExtend",
                        "b01e2e5d0c8d83846dd3a4aff2ec6c958cdb8eac"
                    ]
                },
                {
                    "command": [
                        "apply resource_at_approx.",
                        "VernacExtend",
                        "53a0be89142540ace752063765d3f9d213ace003"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "free_juicy_mem",
            "line_nb": 920,
            "steps": [
                {
                    "command": [
                        "generalize (juicy_mem_contents jm); intro.",
                        "VernacExtend",
                        "b9c03ea16cb9e5d11528fe199b3816bf5c4c7235"
                    ]
                },
                {
                    "command": [
                        "generalize (juicy_mem_access jm); intro.",
                        "VernacExtend",
                        "15138bdbe4ce6866c015f30da160560ab8880a98"
                    ]
                },
                {
                    "command": [
                        "generalize (juicy_mem_max_access jm); intro.",
                        "VernacExtend",
                        "519979c9fcb735173abe62d5d7b9a96f5d5d7993"
                    ]
                },
                {
                    "command": [
                        "refine (mkJuicyMem m' inflate_free _ _ _ _).",
                        "VernacExtend",
                        "79c3114b1ff9fa8ccfa91d935ff1ad2405f72d24"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold contents_cohere in *.",
                        "VernacExtend",
                        "3bd825bce16478be72748b88571f74d52d8f28a4"
                    ]
                },
                {
                    "command": [
                        "intros rsh' sh' v' [b' ofs'] pp H2.",
                        "VernacExtend",
                        "241782761304533472b25049d459dde7f4c139a1"
                    ]
                },
                {
                    "command": [
                        "unfold access_cohere in H0.",
                        "VernacExtend",
                        "c53b07520207b6ee497a497dd5cf60a9fa03bec1"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 (b', ofs')).",
                        "VernacExtend",
                        "84b4f9b1ee6a6b907bfb8ed29207c7c842e54f04"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_free in H2; rewrite resource_at_make_rmap in H2.",
                        "VernacExtend",
                        "283688a77f6abd7bc8fed7ef473e2b6b0100747d"
                    ]
                },
                {
                    "command": [
                        "if_tac in H2; [inv H2 | ].",
                        "VernacExtend",
                        "700717cf51f75241a0b3349b2d2c0267648ca7f3"
                    ]
                },
                {
                    "command": [
                        "rename H3 into H8.",
                        "VernacExtend",
                        "5b16267f287869385b779e8eee2e77e45ec050bc"
                    ]
                },
                {
                    "command": [
                        "remember (m_phi jm @ (b', ofs')) as HPHI.",
                        "VernacExtend",
                        "0d977fe484726c4291d5f1080603888362db4dae"
                    ]
                },
                {
                    "command": [
                        "destruct HPHI; try destruct k; inv H2.",
                        "VernacExtend",
                        "d5bf2fb8dce90c6bf209be0558d8df6a5ff83ae1"
                    ]
                },
                {
                    "command": [
                        "assert (H3: contents_at (m_dry jm) (b', ofs') = v') by (eapply H; eauto).",
                        "VernacExtend",
                        "88c0a1968ab9c8b5256dbbd443631250a67d5388"
                    ]
                },
                {
                    "command": [
                        "assert (H4: m' = unchecked_free (m_dry jm) b lo hi) by (apply free_result; auto).",
                        "VernacExtend",
                        "69acfaf3d483d3648edc5e48ef5df44bc3078e4d"
                    ]
                },
                {
                    "command": [
                        "rewrite H4.",
                        "VernacExtend",
                        "fc5d011df68f7160e4669d129d2975825ac089bb"
                    ]
                },
                {
                    "command": [
                        "unfold unchecked_free, contents_at; simpl.",
                        "VernacExtend",
                        "103d115a67973e21f6fa11b746bc4b17f7eaa604"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "symmetry in HeqHPHI.",
                        "VernacExtend",
                        "cab88f7cb8fbd330693ce4d37197b99cb0936be8"
                    ]
                },
                {
                    "command": [
                        "destruct (H _ _ _ _ _ HeqHPHI); auto.",
                        "VernacExtend",
                        "92085cae5575fce47498c42410081ca4ffae6d99"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros [b' ofs']; specialize ( H0 (b', ofs')).",
                        "VernacExtend",
                        "ff4779299b3d1f9fde152d84a641cad6689aad51"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_free; rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "a10a5b3398532072522b231cbc5155c4e38c2cdf"
                    ]
                },
                {
                    "command": [
                        "destruct (adr_range_dec (b,lo) (hi-lo) (b',ofs')).",
                        "VernacExtend",
                        "7186812c89ede2a3d33f09de6f2594d6cb960230"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct a as [H2 H3].",
                        "VernacExtend",
                        "fdb2fbbcc8b5d21ce0fe3e642ac0a415f26c939b"
                    ]
                },
                {
                    "command": [
                        "replace (lo+(hi-lo)) with hi in H3 by omega.",
                        "VernacExtend",
                        "c0b62da848a358126e4e25bff6d241c6ed89bf26"
                    ]
                },
                {
                    "command": [
                        "subst b'.",
                        "VernacExtend",
                        "998445e3e44d7190637615c1934547ff4b392560"
                    ]
                },
                {
                    "command": [
                        "replace (access_at m' (b, ofs') Cur) with (@None permission).",
                        "VernacExtend",
                        "164e103be109fe7aedc888d13bb70df6da9df91b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by auto.",
                        "VernacExtend",
                        "96c670b25f044d48f2a3c00bd5b1bf4bb99aa88f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (free_access _ _ _ _ _ FREE ofs' H3).",
                        "VernacExtend",
                        "1936ddf601c36e7d86aae4774f73c1d9368362b6"
                    ]
                },
                {
                    "command": [
                        "pose proof (Memory.access_cur_max m' (b,ofs')).",
                        "VernacExtend",
                        "2d272b67aa6d2c10da408921caf4195d985aeda4"
                    ]
                },
                {
                    "command": [
                        "rewrite H4 in H5.",
                        "VernacExtend",
                        "dc90760fc98a31cbb8924c663e46ebf35a6792db"
                    ]
                },
                {
                    "command": [
                        "simpl in H5.",
                        "VernacExtend",
                        "03fbfc7bb6b248b41f6241227db3e5c410547157"
                    ]
                },
                {
                    "command": [
                        "destruct (access_at m' (b, ofs') Cur); auto; contradiction.",
                        "VernacExtend",
                        "77e99a9ca78828c3b8899ea995e0af26420ae2a3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (free_nadr_range_eq _ _ _ _ _ _ _ n FREE) as [H2 H3].",
                        "VernacExtend",
                        "3ca08200f60346e425174dd868f00f8b71c8e355"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in *.",
                        "VernacExtend",
                        "9a6fbb53ffd706150eb2fe1581f6d5c2afebb472"
                    ]
                },
                {
                    "command": [
                        "clear H2 H3.",
                        "VernacExtend",
                        "045265c740f29182306a378a41a4ca0cfdf00cd8"
                    ]
                },
                {
                    "command": [
                        "case_eq (m_phi jm @ (b', ofs')); intros; rewrite H2 in *; auto.",
                        "VernacExtend",
                        "d4ff111663f210cc9eb49b5de96d136f137c4e02"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros [b' ofs'].",
                        "VernacExtend",
                        "53c6ab919938b734b6544238f1b79f4edb29cb6a"
                    ]
                },
                {
                    "command": [
                        "specialize (H1 (b',ofs')).",
                        "VernacExtend",
                        "535e402f4f2b6aa0cbe2d91014f1947e06a466be"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_free.",
                        "VernacExtend",
                        "5ee509edc8afe85614bbeab7e834b65cacd138c8"
                    ]
                },
                {
                    "command": [
                        "unfold max_access_at.",
                        "VernacExtend",
                        "180a9342db22c98d8960746aab3e30f8453543ec"
                    ]
                },
                {
                    "command": [
                        "rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "8c357c8ccf2cc08642a35d18032ae2f7599bca42"
                    ]
                },
                {
                    "command": [
                        "destruct (adr_range_dec (b,lo) (hi-lo) (b',ofs')).",
                        "VernacExtend",
                        "7186812c89ede2a3d33f09de6f2594d6cb960230"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; destruct (eq_dec Share.bot Share.bot) as [e|n]; [| exfalso; apply n; reflexivity].",
                        "VernacExtend",
                        "28db37b6ea6d886633747988f3df6a208e9b0e72"
                    ]
                },
                {
                    "command": [
                        "destruct (access_at m' (b', ofs') Max); constructor.",
                        "VernacExtend",
                        "bd73139a45f7da0834d751c6b1acdbfdb227aef6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "clear PERM.",
                        "VernacExtend",
                        "c5b920ea035dde8764d22e366b425ee17fb9dc56"
                    ]
                },
                {
                    "command": [
                        "unfold max_access_at.",
                        "VernacExtend",
                        "180a9342db22c98d8960746aab3e30f8453543ec"
                    ]
                },
                {
                    "command": [
                        "destruct (free_nadr_range_eq _ _ _ _ _ _ _ n FREE) as [H2 H3].",
                        "VernacExtend",
                        "3ca08200f60346e425174dd868f00f8b71c8e355"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2.",
                        "VernacExtend",
                        "c204509e5e85cb1396c425732210ff127ac38a7b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "hnf; intros.",
                        "VernacExtend",
                        "56afb10662f39d6d1fe2d1fcd1dc59f4012137ee"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_free.",
                        "VernacExtend",
                        "5ee509edc8afe85614bbeab7e834b65cacd138c8"
                    ]
                },
                {
                    "command": [
                        "rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "8c357c8ccf2cc08642a35d18032ae2f7599bca42"
                    ]
                },
                {
                    "command": [
                        "pose proof (juicy_mem_alloc_cohere jm loc).",
                        "VernacExtend",
                        "d3c26068d33ceeb9ef02722c7be24c2ba9982369"
                    ]
                },
                {
                    "command": [
                        "rewrite (nextblock_free _ _ _ _ _ FREE) in H2; auto.",
                        "VernacExtend",
                        "d1576ef3a801b912f9014f7ca0e780fbd2aa9249"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; auto.",
                        "VernacExtend",
                        "81f0b52fdaf5f5da8eefafd4263db88cb26c67d0"
                    ]
                },
                {
                    "command": [
                        "if_tac; auto.",
                        "VernacExtend",
                        "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "free_not_freeable_eq",
            "line_nb": 992,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (adr_range_dec (b,lo) (hi-lo) (b',ofs')).",
                        "VernacExtend",
                        "7186812c89ede2a3d33f09de6f2594d6cb960230"
                    ]
                },
                {
                    "command": [
                        "destruct a.",
                        "VernacExtend",
                        "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
                    ]
                },
                {
                    "command": [
                        "subst b'.",
                        "VernacExtend",
                        "998445e3e44d7190637615c1934547ff4b392560"
                    ]
                },
                {
                    "command": [
                        "destruct (free_access _ _ _ _ _ H ofs'); [omega |].",
                        "VernacExtend",
                        "78c9611efb47be8e4f865ac63611c3b7e7b460bf"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "apply (free_access_other _ _ _ _ _ H).",
                        "VernacExtend",
                        "bbdaa352cf1b5dfd3c1778014158a63f6734a0d8"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_block b' b); auto; right.",
                        "VernacExtend",
                        "f298571de8ed66b8aa5e17ab03500a408b5100f2"
                    ]
                },
                {
                    "command": [
                        "subst b'.",
                        "VernacExtend",
                        "998445e3e44d7190637615c1934547ff4b392560"
                    ]
                },
                {
                    "command": [
                        "simpl in n.",
                        "VernacExtend",
                        "950037a81d91f1ad97b7f1e8cec014bbd95db506"
                    ]
                },
                {
                    "command": [
                        "assert (~( lo <= ofs' < lo + (hi - lo))) by intuition; omega.",
                        "VernacExtend",
                        "b22bf42350abfd4e2cf22ed42a8606d802b1b1c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adr_range_eq_block",
            "line_nb": 1006,
            "steps": [
                {
                    "command": [
                        "unfold adr_range; intros.",
                        "VernacExtend",
                        "6981df9c73563bebb6f1554342b5fc83999f1dc6"
                    ]
                },
                {
                    "command": [
                        "destruct H; auto.",
                        "VernacExtend",
                        "95ae427bd4e09a5f31c59184b718811a23ecb36f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "after_alloc'_ok",
            "line_nb": 1010,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold resource_fmap, compose, after_alloc'.",
                        "VernacExtend",
                        "3363104b964d66a61750adf7285ea79d0aa5cade"
                    ]
                },
                {
                    "command": [
                        "extensionality loc.",
                        "VernacExtend",
                        "1e7eb6ee95191abc4fc69ac4ede8caa2d6671fd4"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "rewrite preds_fmap_NoneP; auto.",
                        "VernacExtend",
                        "3e10fbf5b4cde8c0d04cc46d381deb11d2cf1f71"
                    ]
                },
                {
                    "command": [
                        "case_eq (phi @ loc); intros; auto.",
                        "VernacExtend",
                        "4cec44c503318521304a7cf3a1ed65f53a580264"
                    ]
                },
                {
                    "command": [
                        "generalize H1; intros.",
                        "VernacExtend",
                        "376268a25817a3be74600978b9e78d6708ccfa97"
                    ]
                },
                {
                    "command": [
                        "apply necR_YES with (phi':=phi) in H1; eauto.",
                        "VernacExtend",
                        "3bf69e18b0b669cdc9fe958345ab63c70dfd8791"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1.",
                        "VernacExtend",
                        "b8b417d956609d1854d18921f25bc0ffae73a74e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize (resource_at_approx phi loc); rewrite H1; auto.",
                        "VernacExtend",
                        "f68334186e581194ef1f10d561ff68dbdc907233"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_after_alloc'_ok",
            "line_nb": 1025,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold resource_fmap, compose, mod_after_alloc'.",
                        "VernacExtend",
                        "c1bc18185d3e3eb7525c71945819a807ca1c595d"
                    ]
                },
                {
                    "command": [
                        "extensionality loc.",
                        "VernacExtend",
                        "1e7eb6ee95191abc4fc69ac4ede8caa2d6671fd4"
                    ]
                },
                {
                    "command": [
                        "if_tac; auto.",
                        "VernacExtend",
                        "405a5d1c67f2928c68a29c10540d8abdea32b1bd"
                    ]
                },
                {
                    "command": [
                        "case_eq (core phi @ loc); intros; auto; f_equal; rewrite <- level_core; generalize (resource_at_approx (core phi) loc); rewrite H0; intro; injection H1; auto.",
                        "VernacExtend",
                        "73f6f420fe903170c816a155df1b2340d7011438"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adr_range_inv",
            "line_nb": 1034,
            "steps": [
                {
                    "command": [
                        "intros until n.",
                        "VernacExtend",
                        "519446f80e1db29c96b7020a8f52ae408def330d"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "destruct (peq (fst loc) (fst loc')).",
                        "VernacExtend",
                        "9d4a5ee6b66230ac21a5fc70454c536bab874b32"
                    ]
                },
                {
                    "command": [
                        "right; split; auto; intro Contra.",
                        "VernacExtend",
                        "b9b3ffd2f513d8f93e22ad77fb299a0dfe34b4c4"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "unfold adr_range.",
                        "VernacExtend",
                        "b0e528febe3305fcc3909e875d29c117ccd363ea"
                    ]
                },
                {
                    "command": [
                        "destruct loc,loc'.",
                        "VernacExtend",
                        "62115dee76575d0495dc98c4e7cae8b648c6cc11"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "left; intro Contra.",
                        "VernacExtend",
                        "aa7224eb7b5b7388501a36d4744cd42553babc62"
                    ]
                },
                {
                    "command": [
                        "apply n0; auto.",
                        "VernacExtend",
                        "fa40a0b524ec0aaace230b41ff2f44feb4bd4590"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dry_noperm_juicy_nonreadable",
            "line_nb": 1046,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (juicy_mem_access m loc) in H.",
                        "VernacExtend",
                        "24781900b4369e3cf36c782d6772b75479c1696d"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "hnf in H0.",
                        "VernacExtend",
                        "ef2ef5338fe3c3f98be9c585e08b6598bfd5a754"
                    ]
                },
                {
                    "command": [
                        "destruct (m_phi m @loc); simpl in *; auto.",
                        "VernacExtend",
                        "7ad8d01cca3ca982cf32d2ad9c2d361044b6d133"
                    ]
                },
                {
                    "command": [
                        "destruct k as [x | |]; try inv H.",
                        "VernacExtend",
                        "6e28c9c7b58d8f828f675d536b0d82ce882d09c5"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh in H2.",
                        "VernacExtend",
                        "d4aea7d9378d99e16e38d800066a4c9f0210c4fb"
                    ]
                },
                {
                    "command": [
                        "if_tac in H2.",
                        "VernacExtend",
                        "ff3857e5bf98ff5af139a8ff9fd4761536ec6958"
                    ]
                },
                {
                    "command": [
                        "if_tac in H2; inv H2.",
                        "VernacExtend",
                        "52959f60e42a1efb8a3d4122dae597bb4591a575"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true in H2 by auto.",
                        "VernacExtend",
                        "4d4b28d3c8c4c1e3362388225fb888fe47a2ceb6"
                    ]
                },
                {
                    "command": [
                        "inv H2.",
                        "VernacExtend",
                        "e11edf85dc09e31a8a2ba9dcf84be4035731ae99"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fullempty_after_alloc",
            "line_nb": 1059,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (alloc_access_same _ _ _ _ _ H ofs Cur).",
                        "VernacExtend",
                        "21b144b5d73656e24396d1e2a6da7c100dae44a6"
                    ]
                },
                {
                    "command": [
                        "destruct (range_dec lo ofs n).",
                        "VernacExtend",
                        "9494707509073a7d9623c4c1e0dc9d86a5e0b420"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (alloc_access_other _ _ _ _ _ H b ofs Cur) by (right; omega).",
                        "VernacExtend",
                        "3aa3d28fd04fd9f2d84cc6c162d238bc090831d0"
                    ]
                },
                {
                    "command": [
                        "apply alloc_result in H.",
                        "VernacExtend",
                        "b2c9ea624387cf27c54803ae10e7ed8bbf3bab4d"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply nextblock_access_empty.",
                        "VernacExtend",
                        "afd1b1febc15b89c2cb19384424f404dfa14eca1"
                    ]
                },
                {
                    "command": [
                        "apply Pos.le_ge, Pos.le_refl.",
                        "VernacExtend",
                        "d401468bce62e3aece6510ee2c048df91a23b579"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alloc_dry_unchanged_on",
            "line_nb": 1071,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct loc as [b z]; simpl.",
                        "VernacExtend",
                        "0516938c0ca5e2170ddebfbfc7faa45bc9bf1d68"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "extensionality k.",
                        "VernacExtend",
                        "3d0435f326186ec7f64a04595b4266d139fac42d"
                    ]
                },
                {
                    "command": [
                        "eapply Memory.alloc_access_other; eauto.",
                        "VernacExtend",
                        "e77ed37c4a6bf92031bda64575894000014be0f8"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_block b b0); auto.",
                        "VernacExtend",
                        "c00dbd28a459ffa5f91423ab658f39f84670a4d8"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "assert (~(lo <= z < lo + (hi - lo))) by intuition; omega.",
                        "VernacExtend",
                        "e05d588c8da7767684b08355640a82475fb6f421"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold alloc in H.",
                        "VernacExtend",
                        "65096be7e7e23fc2988f323409bf4d7f99ae92f8"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "unfold contents_at; simpl.",
                        "VernacExtend",
                        "a65b18dff1c740618f11fcdc441f6733c1512cbe"
                    ]
                },
                {
                    "command": [
                        "unfold adr_range in H0.",
                        "VernacExtend",
                        "351743b7f94b8d08ae2aa94167188b34768088a8"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec b (nextblock m1)).",
                        "VernacExtend",
                        "a431cb0bee10979f62aa02b1789399734769acf9"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite invalid_noaccess in H1; [ congruence |].",
                        "VernacExtend",
                        "801e76fe1d3240ee79c38262c745c63dde6c53cc"
                    ]
                },
                {
                    "command": [
                        "contradict H0.",
                        "VernacExtend",
                        "e9276d92c17ea182f1ef13aa74464b33eea923d9"
                    ]
                },
                {
                    "command": [
                        "red in H0.",
                        "VernacExtend",
                        "3e33e4fdada8386783e8311d1d4116d148279cb2"
                    ]
                },
                {
                    "command": [
                        "apply Pos.lt_irrefl in H0.",
                        "VernacExtend",
                        "4ecf8ba41cd57724d30db533caceb5255d5c4b29"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "rewrite PMap.gso by auto.",
                        "VernacExtend",
                        "7c813a7ad67552a3e6193c5f25800496b5bb3804"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adr_range_zle_fact",
            "line_nb": 1097,
            "steps": [
                {
                    "command": [
                        "unfold adr_range.",
                        "VernacExtend",
                        "b0e528febe3305fcc3909e875d29c117ccd363ea"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct loc; simpl in *.",
                        "VernacExtend",
                        "3e5d9b8a0aaf5478f25935efad6f6ba31ccb1f17"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "apply andb_true_iff.",
                        "VernacExtend",
                        "583d40e493f314492aad482eb70e9a25a38aae78"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply zle_true; auto.",
                        "VernacExtend",
                        "62a6ce5f4d193742a450fbeea57772bfda626358"
                    ]
                },
                {
                    "command": [
                        "apply zlt_true; omega.",
                        "VernacExtend",
                        "11d5ba53e57a55cf6c538075fe9ff297a155a96d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alloc_dry_updated_on",
            "line_nb": 1108,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct loc as [b' z'].",
                        "VernacExtend",
                        "0338331af536f3ca5271da3573dc8e510dfac15c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "subst b'.",
                        "VernacExtend",
                        "998445e3e44d7190637615c1934547ff4b392560"
                    ]
                },
                {
                    "command": [
                        "apply (alloc_access_same _ _ _ _ _ H).",
                        "VernacExtend",
                        "5a37bb3c85f896a5beac272472ec7222efc180ba"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold contents_at; unfold alloc in H; inv H.",
                        "VernacExtend",
                        "507f912fbfa837370dc62afd0d6db4407f8d3cae"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct H0; subst b'.",
                        "VernacExtend",
                        "eff1ee58f6cb817eb80e78d427187d52f183b473"
                    ]
                },
                {
                    "command": [
                        "rewrite PMap.gss.",
                        "VernacExtend",
                        "b5a245c2e8793ec855a664f9951af0c15417e45b"
                    ]
                },
                {
                    "command": [
                        "rewrite ZMap.gi; auto.",
                        "VernacExtend",
                        "6fc953f10c65e7a85a36012cc9b7778aa1080861"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "resource_nodecay_decay",
            "line_nb": 1124,
            "steps": [
                {
                    "command": [
                        "unfold resource_decay, resource_nodecay; intros; destruct H; split; intros; try omega.",
                        "VernacExtend",
                        "0f3cc7beff3731b41fd938ac53ec54788280ec6b"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 l); intuition.",
                        "VernacExtend",
                        "217d1b1ee704635f1b111eb016a356eade0c804c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "resource_decay_refl",
            "line_nb": 1128,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intros; split; auto.",
                        "VernacExtend",
                        "fff62202c2fc61c4070e96966354cdd97411a8eb"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply resource_at_approx.",
                        "VernacExtend",
                        "53a0be89142540ace752063765d3f9d213ace003"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "resource_decay_trans",
            "line_nb": 1135,
            "steps": [
                {
                    "command": [
                        "intros until m3; intro Hbb; intros.",
                        "VernacExtend",
                        "3eaae4481ea6caefcf09f32f5470d31a94252553"
                    ]
                },
                {
                    "command": [
                        "destruct H as [H' H]; destruct H0 as [H0' H0]; split; [omega |].",
                        "VernacExtend",
                        "98db4460eb464eba51ef0932078e492b78b0dbf3"
                    ]
                },
                {
                    "command": [
                        "intro l; specialize (H l); specialize (H0 l).",
                        "VernacExtend",
                        "f579eb295f9de7b4c91beb6855fc48e8c0d2b35d"
                    ]
                },
                {
                    "command": [
                        "destruct H,H0.",
                        "VernacExtend",
                        "8db9e1441c64ed20802e4526963172d1abdaee94"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2.",
                        "VernacExtend",
                        "c204509e5e85cb1396c425732210ff127ac38a7b"
                    ]
                },
                {
                    "command": [
                        "replace (resource_fmap (approx (level m3)) (approx (level m3)) (m1 @ l)) with (resource_fmap (approx (level m3)) (approx (level m3)) (resource_fmap (approx (level m2)) (approx (level m2)) (m1 @ l))) by (rewrite resource_fmap_fmap; rewrite approx_oo_approx' by auto; rewrite approx'_oo_approx by auto; auto).",
                        "VernacExtend",
                        "c1818ba30e9202a616ff8c0786eb6e836a71d818"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "clear - Hbb H H1 H0 H2 H' H0'.",
                        "VernacExtend",
                        "700b53e8f6321967d4c89cb8815ad0af625f8913"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [[sh2 [wsh2 [v2 [v2' [? ?]]]]]|[[? [v ?]] |?]]; subst.",
                        "VernacExtend",
                        "df89605c453b3bba0a7a6e3858ccc3b03fcf3243"
                    ]
                },
                {
                    "command": [
                        "left; exists sh2, wsh2,v2,v2'; split; auto.",
                        "VernacExtend",
                        "4ce1d19ce4ee80e927ca5ceb41e0e78466e358c9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1 in H2.",
                        "VernacExtend",
                        "1f4a0171ff66dfbbfa3ac1bf3c2e1ca370f099cf"
                    ]
                },
                {
                    "command": [
                        "rewrite resource_fmap_fmap in H2.",
                        "VernacExtend",
                        "49ab72fb00636329427aadcd01bcfe5c06f04dea"
                    ]
                },
                {
                    "command": [
                        "rewrite approx_oo_approx' in H2 by omega.",
                        "VernacExtend",
                        "b06b4d89a434965c24294ab63bc7182459aead2c"
                    ]
                },
                {
                    "command": [
                        "rewrite approx'_oo_approx in H2 by omega.",
                        "VernacExtend",
                        "1179dc6421268c06c4f3a83ea368bde599179986"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right; left.",
                        "VernacExtend",
                        "0890e8256aff7ee5abfe085237b7b2250c448482"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "xomega.",
                        "VernacExtend",
                        "92dc13ff6a078243e0cd72420247996d076ca43b"
                    ]
                },
                {
                    "command": [
                        "exists v; auto.",
                        "VernacExtend",
                        "863f124117e3794411b95ae7c6344e625907c1cb"
                    ]
                },
                {
                    "command": [
                        "right; right; auto.",
                        "VernacExtend",
                        "fbc368862b36795aa84ce429c915d5af629e3688"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [v [pp [? ?]]].",
                        "VernacExtend",
                        "ccdf18207a376b1ee448eacc29a55bd66d577bb2"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H1.",
                        "VernacExtend",
                        "dcb7a323484c05dcc42cd7ac9b61b0b20729d4c5"
                    ]
                },
                {
                    "command": [
                        "destruct (m1 @ l); inv H1.",
                        "VernacExtend",
                        "26e0f0906f877a9d648bcbe27a87099587cc76d8"
                    ]
                },
                {
                    "command": [
                        "exists v, p.",
                        "VernacExtend",
                        "0d8cfb3bbabda61a993a01e365adf110eacea47a"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply proof_irr.",
                        "VernacExtend",
                        "10d46e46974f89c2b3a9463c04a06ee6c39cd171"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [[sh [wsh [v [v' [? ?]]]]]|[[? [v ?]] |?]].",
                        "VernacExtend",
                        "02fdf27dff80ff3cadd32c285a1bef3c798103fd"
                    ]
                },
                {
                    "command": [
                        "right; left; exists sh,wsh,v,v'; split.",
                        "VernacExtend",
                        "5512f021d9b8a04a322b74035b511ff58293b6ef"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (approx_oo_approx' (level m3) (level m2)) at 1 by auto.",
                        "VernacExtend",
                        "7f94a3d56a2bf672b5c3b9eb3ef0cfa953cc1dcc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (approx'_oo_approx (level m3) (level m2)) at 2 by auto.",
                        "VernacExtend",
                        "f75afb2bb945f929e725eb19aa7db3425f87e3d7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- resource_fmap_fmap.",
                        "VernacExtend",
                        "59633f3fdbd3dce927e80a6be30e17e94166195a"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "unfold resource_fmap.",
                        "VernacExtend",
                        "9e3613be03b663ae3677a4b82fcc167d580790d3"
                    ]
                },
                {
                    "command": [
                        "rewrite preds_fmap_NoneP.",
                        "VernacExtend",
                        "c1df791b7df9ebb807f6e3057eada167cc7610bd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H2.",
                        "VernacExtend",
                        "cd6e90473b6ddc3ec3eb78a9c40980b4c1f2a641"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2.",
                        "VernacExtend",
                        "c204509e5e85cb1396c425732210ff127ac38a7b"
                    ]
                },
                {
                    "command": [
                        "unfold resource_fmap.",
                        "VernacExtend",
                        "9e3613be03b663ae3677a4b82fcc167d580790d3"
                    ]
                },
                {
                    "command": [
                        "rewrite preds_fmap_NoneP.",
                        "VernacExtend",
                        "c1df791b7df9ebb807f6e3057eada167cc7610bd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right; right; left; split; auto.",
                        "VernacExtend",
                        "30d3a1e4f17b405e090a108443f840b94481c73a"
                    ]
                },
                {
                    "command": [
                        "exists v.",
                        "VernacExtend",
                        "07e9a3324bfa0e7b5dc708d0101cf063e8084497"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2; rewrite <- H3.",
                        "VernacExtend",
                        "7470b2c06f45c32e3f3701b7cf5c70c7d02ff900"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "unfold resource_fmap.",
                        "VernacExtend",
                        "9e3613be03b663ae3677a4b82fcc167d580790d3"
                    ]
                },
                {
                    "command": [
                        "rewrite preds_fmap_NoneP.",
                        "VernacExtend",
                        "c1df791b7df9ebb807f6e3057eada167cc7610bd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right; right; right.",
                        "VernacExtend",
                        "3f0a6df5ce23148e2ad6b532fe6792e777a812bc"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [v [pp [? ?]]].",
                        "VernacExtend",
                        "597ed9dc7f1ae1eff9e450baeafabe38b7aebe81"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H2.",
                        "VernacExtend",
                        "cd6e90473b6ddc3ec3eb78a9c40980b4c1f2a641"
                    ]
                },
                {
                    "command": [
                        "simpl in H2.",
                        "VernacExtend",
                        "b1e247c43b6623097ab13813b4de664287dd4249"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [[sh [wsh [v [v' [? ?]]]]]|[[? [v ?]] |?]].",
                        "VernacExtend",
                        "02fdf27dff80ff3cadd32c285a1bef3c798103fd"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [[sh2 [wsh2 [v2 [v2' [? ?]]]]]|[[? [v2 ?]] |?]].",
                        "VernacExtend",
                        "9c73175366bd169176fbdb1ef3f7cbbed69120a5"
                    ]
                },
                {
                    "command": [
                        "right; left; exists sh,wsh,v,v2'; split.",
                        "VernacExtend",
                        "a788b5d407126790708a3bef89468dc146001a40"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (approx_oo_approx' (level m3) (level m2)) at 1 by auto.",
                        "VernacExtend",
                        "7f94a3d56a2bf672b5c3b9eb3ef0cfa953cc1dcc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (approx'_oo_approx (level m3) (level m2)) at 2 by auto.",
                        "VernacExtend",
                        "f75afb2bb945f929e725eb19aa7db3425f87e3d7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- resource_fmap_fmap.",
                        "VernacExtend",
                        "59633f3fdbd3dce927e80a6be30e17e94166195a"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "unfold resource_fmap.",
                        "VernacExtend",
                        "9e3613be03b663ae3677a4b82fcc167d580790d3"
                    ]
                },
                {
                    "command": [
                        "rewrite preds_fmap_NoneP.",
                        "VernacExtend",
                        "c1df791b7df9ebb807f6e3057eada167cc7610bd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H2.",
                        "VernacExtend",
                        "cd6e90473b6ddc3ec3eb78a9c40980b4c1f2a641"
                    ]
                },
                {
                    "command": [
                        "rewrite H4.",
                        "VernacExtend",
                        "fc5d011df68f7160e4669d129d2975825ac089bb"
                    ]
                },
                {
                    "command": [
                        "simpl in H2.",
                        "VernacExtend",
                        "b1e247c43b6623097ab13813b4de664287dd4249"
                    ]
                },
                {
                    "command": [
                        "inv H2.",
                        "VernacExtend",
                        "e11edf85dc09e31a8a2ba9dcf84be4035731ae99"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply proof_irr.",
                        "VernacExtend",
                        "10d46e46974f89c2b3a9463c04a06ee6c39cd171"
                    ]
                },
                {
                    "command": [
                        "right; right; left.",
                        "VernacExtend",
                        "50afdfb77701efe5fd61d60d0efb5df7f1f7d273"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "xomega.",
                        "VernacExtend",
                        "92dc13ff6a078243e0cd72420247996d076ca43b"
                    ]
                },
                {
                    "command": [
                        "exists v2; auto.",
                        "VernacExtend",
                        "d5519098c4287fdb48732a0d31167792008ae3b8"
                    ]
                },
                {
                    "command": [
                        "right; right; right.",
                        "VernacExtend",
                        "3f0a6df5ce23148e2ad6b532fe6792e777a812bc"
                    ]
                },
                {
                    "command": [
                        "destruct (m1 @ l); inv H1.",
                        "VernacExtend",
                        "26e0f0906f877a9d648bcbe27a87099587cc76d8"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [vx [pp [? ?]]].",
                        "VernacExtend",
                        "7377315bb23c14b34a2ba19ab195bfc6036d0a1a"
                    ]
                },
                {
                    "command": [
                        "inversion2 H3 H1.",
                        "VernacExtend",
                        "b63c27f24afd82445b011dcdb4494a98210d7bc4"
                    ]
                },
                {
                    "command": [
                        "exists v,p.",
                        "VernacExtend",
                        "0d8cfb3bbabda61a993a01e365adf110eacea47a"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply proof_irr.",
                        "VernacExtend",
                        "6645667c8eb88627dd9c1b14a310a927f61ac2ad"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [[sh2 [wsh2 [v2 [v2' [? ?]]]]]|[[? [v2 ?]] |?]].",
                        "VernacExtend",
                        "9c73175366bd169176fbdb1ef3f7cbbed69120a5"
                    ]
                },
                {
                    "command": [
                        "right; right; left; split; auto.",
                        "VernacExtend",
                        "30d3a1e4f17b405e090a108443f840b94481c73a"
                    ]
                },
                {
                    "command": [
                        "exists v2'.",
                        "VernacExtend",
                        "6cf31d5caf26c4f248ed301879d43465eb623e01"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H2; inv H2.",
                        "VernacExtend",
                        "885c5b70ad3121a71757343df7493d828f73439b"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; f_equal; apply proof_irr.",
                        "VernacExtend",
                        "74ec5e1beb6d79220e39d8b6c12092edb108f45d"
                    ]
                },
                {
                    "command": [
                        "right; right; left; split; auto; exists v2; auto.",
                        "VernacExtend",
                        "4b2ed79f8a5e87a828d8d5cdb93b86a1c6a55976"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [v' [pp [? ?]]].",
                        "VernacExtend",
                        "7aeea1135aa67a2491de0f271783902ec0176654"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; rewrite H; auto.",
                        "VernacExtend",
                        "3be24dd44bd48572f816c00f9714c38254e85057"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [[sh2 [wsh2 [v2 [v2' [? ?]]]]]|[[? [v2 ?]] |?]].",
                        "VernacExtend",
                        "9c73175366bd169176fbdb1ef3f7cbbed69120a5"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [v' [pp [? ?]]].",
                        "VernacExtend",
                        "72302ba3a07a522caea46b1896c6faa2961bdc75"
                    ]
                },
                {
                    "command": [
                        "rewrite H4 in H2; inv H2.",
                        "VernacExtend",
                        "7e66749d334e92481fd2f84c18b96e28cafa6642"
                    ]
                },
                {
                    "command": [
                        "right; right; left; split.",
                        "VernacExtend",
                        "ba958c4f6df91bfa33cebfe16b0e373c1cb48121"
                    ]
                },
                {
                    "command": [
                        "xomega.",
                        "VernacExtend",
                        "92dc13ff6a078243e0cd72420247996d076ca43b"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "right; right; right.",
                        "VernacExtend",
                        "3f0a6df5ce23148e2ad6b532fe6792e777a812bc"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [v1 [pp1 [? ?]]].",
                        "VernacExtend",
                        "f219635a86429e2c018cb410011ad86c34eec131"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [v2 [pp2 [? ?]]].",
                        "VernacExtend",
                        "d0d9a15e20164cff8728bfbcf2eb526c12f85c19"
                    ]
                },
                {
                    "command": [
                        "inversion2 H3 H2.",
                        "VernacExtend",
                        "bd9de885d6b1ec120d8b40088c1985585d91f1c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "level_store_juicy_mem",
            "line_nb": 1244,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold store_juicy_mem.",
                        "VernacExtend",
                        "085d0d20670c196a95726da31d75d7cd62d70e9f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_store; simpl.",
                        "VernacExtend",
                        "2890c6d135287df05430db8d71e43864dc6801ea"
                    ]
                },
                {
                    "command": [
                        "rewrite level_make_rmap.",
                        "VernacExtend",
                        "378bac6c0de25ad4ef74a1236b879bf72f93f938"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "level_storebytes_juicy_mem",
            "line_nb": 1252,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold storebytes_juicy_mem.",
                        "VernacExtend",
                        "048fd4381cf1449879dfe75ac9c85da43abfb7f9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_store; simpl.",
                        "VernacExtend",
                        "2890c6d135287df05430db8d71e43864dc6801ea"
                    ]
                },
                {
                    "command": [
                        "rewrite level_make_rmap.",
                        "VernacExtend",
                        "378bac6c0de25ad4ef74a1236b879bf72f93f938"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inflate_free_resource_decay",
            "line_nb": 1322,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_free; rewrite level_make_rmap; auto.",
                        "VernacExtend",
                        "d41574baa309438f9c1e880ebc60432c9963400b"
                    ]
                },
                {
                    "command": [
                        "intros l.",
                        "VernacExtend",
                        "dd0961f3ab7d1ab267b93180e66e020db2e681bc"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply juicy_mem_alloc_cohere.",
                        "VernacExtend",
                        "4a4a557d12d9bfee5f9972cb0a8c8d8f1f0b11da"
                    ]
                },
                {
                    "command": [
                        "destruct (adr_range_dec (b, lo) (hi-lo) l) as [HA | HA].",
                        "VernacExtend",
                        "8db16f90457a8ab2a3683940c25b7e8e202010d7"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "destruct l; simpl in HA|-*.",
                        "VernacExtend",
                        "e24eb10c5cfe2aef42ee1751ad4a1bae487dcbd9"
                    ]
                },
                {
                    "command": [
                        "destruct HA as [H0 H1].",
                        "VernacExtend",
                        "12bdc2ca8df668bef460b8cb78b14295dcefe184"
                    ]
                },
                {
                    "command": [
                        "subst b0.",
                        "VernacExtend",
                        "478b7c325e8a76ce9bafb9db976206add8bd3245"
                    ]
                },
                {
                    "command": [
                        "assert (lo + (hi - lo) = hi) by omega.",
                        "VernacExtend",
                        "3454c0014b4c9bd1857751bd21818ada62bb0c13"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H1.",
                        "VernacExtend",
                        "72668ea55992bff4c6a64774b37a8290e2ed12ee"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_free; simpl; rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "98b21eed14c39339fe7ba9fbe379316bec0a0d7b"
                    ]
                },
                {
                    "command": [
                        "specialize (PERM _ H1).",
                        "VernacExtend",
                        "643cbadc87f9f24ac1a63ebee11bc8bc19215af6"
                    ]
                },
                {
                    "command": [
                        "destruct (m_phi jm @ (b,z)) eqn:?; try destruct k; inv PERM.",
                        "VernacExtend",
                        "6a3d23cb515d93aa28249ad93b2381d36bc90ca6"
                    ]
                },
                {
                    "command": [
                        "if_tac in H0; inv H0.",
                        "VernacExtend",
                        "7a2ed6af9a36158f51d7847f089681ad48033a8c"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by (split; auto; omega).",
                        "VernacExtend",
                        "e74f15fab46600d60beaf3b94cceb598fb4b125d"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "exists m, p.",
                        "VernacExtend",
                        "7319e7b8994ac246b2f8b2c751c8d37018cf82fb"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh in H0.",
                        "VernacExtend",
                        "2a9783dc235d51d3b681c76881257d17aaebef6f"
                    ]
                },
                {
                    "command": [
                        "repeat if_tac in H0; inv H0.",
                        "VernacExtend",
                        "a6d7d3c5a56fe2ba23d2ced8f5ddfa10c1934b47"
                    ]
                },
                {
                    "command": [
                        "split; try reflexivity.",
                        "VernacExtend",
                        "238a58eee4ad06e96dacd1abfbc7cf3b3bb07d2c"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply proof_irr.",
                        "VernacExtend",
                        "6645667c8eb88627dd9c1b14a310a927f61ac2ad"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "destruct (free_nadr_range_eq _ _ _ _ _ _ _ HA FREE).",
                        "VernacExtend",
                        "6c15e940de83b20f58a380d436312e20ab997399"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "unfold inflate_free; rewrite level_make_rmap; rewrite resource_at_make_rmap.",
                        "VernacExtend",
                        "a60446a66debdf3e8b2bd8a4467ff14d1e3689d1"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false by auto.",
                        "VernacExtend",
                        "5a76c3b1b70df813cbad68c4a8a05295b8091083"
                    ]
                },
                {
                    "command": [
                        "generalize (juicy_mem_contents jm); intro Hc.",
                        "VernacExtend",
                        "86f8a5411581f68b6a5ee4171bfb8bc305fcb5e6"
                    ]
                },
                {
                    "command": [
                        "generalize (juicy_mem_access jm (b0,z)); intro Ha.",
                        "VernacExtend",
                        "1ad2bb08932488ddeb544f8408bf5316ca91fc1a"
                    ]
                },
                {
                    "command": [
                        "rewrite resource_at_approx.",
                        "VernacExtend",
                        "7d18662bc2312a78cc412cc1e5f3805ea304002a"
                    ]
                },
                {
                    "command": [
                        "case_eq (m_phi jm @ (b0, z)); intros; rewrite H1 in Ha; auto.",
                        "VernacExtend",
                        "25c1d8ef5f761b618f3aab29e50e4fef70431809"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "juicy_store_nodecay",
            "line_nb": 1361,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply inflate_store_resource_nodecay; eauto.",
                        "VernacExtend",
                        "e5ed35eefd879c262e9d2896c52dda9956921ca8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "can_age1_juicy_mem",
            "line_nb": 1365,
            "steps": [
                {
                    "command": [
                        "intros j r H.",
                        "VernacExtend",
                        "1ef9b4fdddabf81f0f4163ced93140ab20dec936"
                    ]
                },
                {
                    "command": [
                        "unfold age in H.",
                        "VernacExtend",
                        "a58746f69ab5a2d203fc8a1730289020249d8c72"
                    ]
                },
                {
                    "command": [
                        "case_eq (age1_juicy_mem j); intros.",
                        "VernacExtend",
                        "601ec1f11fe3e1078dfa626c29e4a2f304d0a469"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_juicy_mem_unpack _ _ H0).",
                        "VernacExtend",
                        "4fcd1b639c42c96487676688059956f1a685b613"
                    ]
                },
                {
                    "command": [
                        "eexists; eauto.",
                        "VernacExtend",
                        "02215ff570a78e8dfed0585aa87594983a8aa0fb"
                    ]
                },
                {
                    "command": [
                        "apply age1_juicy_mem_None1 in H0.",
                        "VernacExtend",
                        "95fd4336287e2ab76d0ab8dfd5fb6b09350d12bc"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H.",
                        "VernacExtend",
                        "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
                    ]
                },
                {
                    "command": [
                        "elimtype False; inversion H.",
                        "VernacExtend",
                        "4627b375c3e9833e11871775f96867215fc79eee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "can_age_jm",
            "line_nb": 1375,
            "steps": [
                {
                    "command": [
                        "intro jm; case_eq (age1 (m_phi jm)); intros; try congruence.",
                        "VernacExtend",
                        "6d50470a1bd39d8cb9b3b4ff34ff508025cc6939"
                    ]
                },
                {
                    "command": [
                        "apply (can_age1_juicy_mem _ _ H).",
                        "VernacExtend",
                        "87f127b819c06c25330da850ba63d71b872c649c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age_jm_dry",
            "line_nb": 1379,
            "steps": [
                {
                    "command": [
                        "intros; destruct (age1_juicy_mem_unpack _ _ H); auto.",
                        "VernacExtend",
                        "131d4d4d091533a89dcd7fa1bdd637dc5680f9b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age_jm_phi",
            "line_nb": 1382,
            "steps": [
                {
                    "command": [
                        "intros; destruct (age1_juicy_mem_unpack _ _ H); auto.",
                        "VernacExtend",
                        "131d4d4d091533a89dcd7fa1bdd637dc5680f9b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_YES'_1",
            "line_nb": 1385,
            "steps": [
                {
                    "command": [
                        "intros A E.",
                        "VernacExtend",
                        "f243e467b5491f4f02b8065d726c143a1042dda3"
                    ]
                },
                {
                    "command": [
                        "apply (proj1 (age1_YES' phi phi' l rsh sh k A)).",
                        "VernacExtend",
                        "e20ab81d180262ff1bcc92653c456212a49b3628"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_YES'_2",
            "line_nb": 1390,
            "steps": [
                {
                    "command": [
                        "intros A E.",
                        "VernacExtend",
                        "f243e467b5491f4f02b8065d726c143a1042dda3"
                    ]
                },
                {
                    "command": [
                        "apply (proj2 (age1_YES' phi phi' l rsh sh k A)).",
                        "VernacExtend",
                        "24e95d4ab776628f00bee325bb466c30e14f8f90"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "age1_PURE_2",
            "line_nb": 1395,
            "steps": [
                {
                    "command": [
                        "intros A E.",
                        "VernacExtend",
                        "f243e467b5491f4f02b8065d726c143a1042dda3"
                    ]
                },
                {
                    "command": [
                        "apply (proj2 (age1_PURE phi phi' l k A)).",
                        "VernacExtend",
                        "5c33bb19a5a3c2f88c29a33a4fe93b2e316f3e1f"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_of_res_age",
            "line_nb": 1400,
            "steps": [
                {
                    "command": [
                        "intros A.",
                        "VernacExtend",
                        "1e674201f6164f095fcb9efa159981a648ffff11"
                    ]
                },
                {
                    "command": [
                        "destruct (x @ loc) as [sh | rsh sh k p | k p] eqn:E.",
                        "VernacExtend",
                        "b651eedaed80b47471757a9965ad9712da4e76fe"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_NO x y loc sh n A) as [[]_]; eauto.",
                        "VernacExtend",
                        "3ac43c6bf26613ceda5dc7ea7ff432bd119ccfe9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_YES' x y loc rsh sh k A) as [[p' ->] _]; eauto.",
                        "VernacExtend",
                        "81c041f3bd2d77774e8c17848ce1de6dd10622f7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_PURE x y loc k A) as [[p' ->] _]; eauto.",
                        "VernacExtend",
                        "74d981138f5dc88445336e0208f01b97e5bbb019"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contents_cohere_age",
            "line_nb": 1410,
            "steps": [
                {
                    "command": [
                        "intros x y E A.",
                        "VernacExtend",
                        "529a349bcfff708dd6943844f59d8c8d6f708e00"
                    ]
                },
                {
                    "command": [
                        "intros rsh sh v loc pp H.",
                        "VernacExtend",
                        "55660e03900d3c279ff1776bb417ffe3595e4b32"
                    ]
                },
                {
                    "command": [
                        "destruct (proj2 (age1_YES' _ _ loc rsh sh (VAL v) E)) as [pp' E'].",
                        "VernacExtend",
                        "392cab5b26404d3b3bd498ab2e8255bf87536a00"
                    ]
                },
                {
                    "command": [
                        "now eauto.",
                        "VernacExtend",
                        "e7df581db5ab113b3d1e7800d56a5e3e3c22071c"
                    ]
                },
                {
                    "command": [
                        "specialize (A rsh sh v loc _ E').",
                        "VernacExtend",
                        "7d62c624896587d7e7e02ba299be948fd72d5f90"
                    ]
                },
                {
                    "command": [
                        "destruct A as [A ->].",
                        "VernacExtend",
                        "9110f4ad9392e65d85068439f0d94d55e655dc82"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply (proj1 (age1_YES _ _ loc rsh sh (VAL v) E)) in E'.",
                        "VernacExtend",
                        "531ffdf322edebaaf76c68139c1e401ca0b7f9cf"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "access_cohere_age",
            "line_nb": 1421,
            "steps": [
                {
                    "command": [
                        "intros x y E B.",
                        "VernacExtend",
                        "fe0f67b543d5c8bdcce3034a87d6c5863e83e7d4"
                    ]
                },
                {
                    "command": [
                        "intros addr.",
                        "VernacExtend",
                        "6c300f088ddd49c94b1c56f9872ae8278e404c13"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_levelS _ _ E) as [n L].",
                        "VernacExtend",
                        "20c07976082da1b8a45397ff5eb6e66926df8712"
                    ]
                },
                {
                    "command": [
                        "rewrite (B addr).",
                        "VernacExtend",
                        "03d96a78180e85ebd3419f2dae16037e654b8cf3"
                    ]
                },
                {
                    "command": [
                        "apply perm_of_res_age, E.",
                        "VernacExtend",
                        "3faa826b55d6e55c5f9f22fdd9374a9264a2b23f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_access_cohere_age",
            "line_nb": 1428,
            "steps": [
                {
                    "command": [
                        "intros x y E C.",
                        "VernacExtend",
                        "028f1c83799fa7f9a44dca8d805df0d6755a4979"
                    ]
                },
                {
                    "command": [
                        "intros addr; specialize (C addr).",
                        "VernacExtend",
                        "30b40f9b341ecbb38fe9e1d8c47a8aa3417e9b18"
                    ]
                },
                {
                    "command": [
                        "destruct (y @ addr) as [sh | sh p k pp | k p] eqn:AT.",
                        "VernacExtend",
                        "cd8732ea943818d3c098e5fed5a407af27615442"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply (age1_NO x) in AT; auto.",
                        "VernacExtend",
                        "f29d2e223d4c6a5126ddb4bee361d17c671493d8"
                    ]
                },
                {
                    "command": [
                        "rewrite AT in C; auto.",
                        "VernacExtend",
                        "21b118f0d2f6a4aeb94554f4a75336a3bf3992c0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_YES'_2 E AT) as [P Ex].",
                        "VernacExtend",
                        "8384456b0e936de690ebd2a82cc79b3f600b6592"
                    ]
                },
                {
                    "command": [
                        "rewrite Ex in C.",
                        "VernacExtend",
                        "651ca03d4b84ca26215bfd1a38ea40ce3b2d0f96"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_PURE_2 E AT) as [P Ex].",
                        "VernacExtend",
                        "e915926b26fa61967311a38882dd1ceba53c2a5d"
                    ]
                },
                {
                    "command": [
                        "rewrite Ex in C; auto.",
                        "VernacExtend",
                        "2feff57c8ae5ab6bb4a2840dbcd8d5ce6f5a5667"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alloc_cohere_age",
            "line_nb": 1443,
            "steps": [
                {
                    "command": [
                        "intros x y E D.",
                        "VernacExtend",
                        "f7ef6a8af78288e7bd7645eb24a9d341f9f90050"
                    ]
                },
                {
                    "command": [
                        "intros loc G; specialize (D loc G).",
                        "VernacExtend",
                        "965b4d0b336df3a6d8c8a972e51824d89184cfd7"
                    ]
                },
                {
                    "command": [
                        "eapply (age1_NO x); eauto.",
                        "VernacExtend",
                        "f0c460611efe24cffc787f72f92344f06507c1ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unage_YES'_1",
            "line_nb": 1449,
            "steps": [
                {
                    "command": [
                        "intros A E.",
                        "VernacExtend",
                        "f243e467b5491f4f02b8065d726c143a1042dda3"
                    ]
                },
                {
                    "command": [
                        "apply (proj2 (age1_YES' phi' phi l rsh sh k A)).",
                        "VernacExtend",
                        "eb45cfd317d674ff0d070b63a561ed79f25110a9"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unage_YES'_2",
            "line_nb": 1454,
            "steps": [
                {
                    "command": [
                        "intros A E.",
                        "VernacExtend",
                        "f243e467b5491f4f02b8065d726c143a1042dda3"
                    ]
                },
                {
                    "command": [
                        "apply (proj1 (age1_YES' phi' phi l rsh sh k A)).",
                        "VernacExtend",
                        "c67699ed5a9468e8fded5f6d8db3a8e805027a87"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unage_PURE_2",
            "line_nb": 1459,
            "steps": [
                {
                    "command": [
                        "intros A E.",
                        "VernacExtend",
                        "f243e467b5491f4f02b8065d726c143a1042dda3"
                    ]
                },
                {
                    "command": [
                        "apply (proj1 (age1_PURE phi' phi l k A)).",
                        "VernacExtend",
                        "3309a2b86c00c7ae4342bdd57337b0ea583ebfc1"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contents_cohere_unage",
            "line_nb": 1464,
            "steps": [
                {
                    "command": [
                        "intros x y E A.",
                        "VernacExtend",
                        "529a349bcfff708dd6943844f59d8c8d6f708e00"
                    ]
                },
                {
                    "command": [
                        "intros rsh sh v loc pp H.",
                        "VernacExtend",
                        "55660e03900d3c279ff1776bb417ffe3595e4b32"
                    ]
                },
                {
                    "command": [
                        "destruct (proj1 (age1_YES' _ _ loc rsh sh (VAL v) E)) as [pp' E'].",
                        "VernacExtend",
                        "2fe72efa30e7dc2cc266e113421f365d426a3143"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "specialize (A rsh sh v loc _ E').",
                        "VernacExtend",
                        "7d62c624896587d7e7e02ba299be948fd72d5f90"
                    ]
                },
                {
                    "command": [
                        "destruct A as [A ->].",
                        "VernacExtend",
                        "9110f4ad9392e65d85068439f0d94d55e655dc82"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply (proj2 (age1_YES _ _ loc rsh sh (VAL v) E)) in E'.",
                        "VernacExtend",
                        "c5350e6c677e4948b5b1ddeb5f17e8f2ccf875ab"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "access_cohere_unage",
            "line_nb": 1475,
            "steps": [
                {
                    "command": [
                        "intros x y E B.",
                        "VernacExtend",
                        "fe0f67b543d5c8bdcce3034a87d6c5863e83e7d4"
                    ]
                },
                {
                    "command": [
                        "intros addr.",
                        "VernacExtend",
                        "6c300f088ddd49c94b1c56f9872ae8278e404c13"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_levelS _ _ E) as [n L].",
                        "VernacExtend",
                        "20c07976082da1b8a45397ff5eb6e66926df8712"
                    ]
                },
                {
                    "command": [
                        "rewrite (B addr).",
                        "VernacExtend",
                        "03d96a78180e85ebd3419f2dae16037e654b8cf3"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply perm_of_res_age, E.",
                        "VernacExtend",
                        "3faa826b55d6e55c5f9f22fdd9374a9264a2b23f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_access_cohere_unage",
            "line_nb": 1483,
            "steps": [
                {
                    "command": [
                        "intros x y E C.",
                        "VernacExtend",
                        "028f1c83799fa7f9a44dca8d805df0d6755a4979"
                    ]
                },
                {
                    "command": [
                        "intros addr; specialize (C addr).",
                        "VernacExtend",
                        "30b40f9b341ecbb38fe9e1d8c47a8aa3417e9b18"
                    ]
                },
                {
                    "command": [
                        "destruct (x @ addr) as [sh | sh p k pp | k p] eqn:AT.",
                        "VernacExtend",
                        "0ee16822d1b1863262b461ee0698058b0309b265"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply (age1_NO y) in AT; auto.",
                        "VernacExtend",
                        "06f0bd7d8c26b671ab0a32dba0d3cc17ab77826d"
                    ]
                },
                {
                    "command": [
                        "rewrite AT; auto.",
                        "VernacExtend",
                        "0bf401df103386740b8c6fd0bd18c659c37de530"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (@age1_YES'_2 y x addr sh p k pp E AT) as [P ->].",
                        "VernacExtend",
                        "a20de5e5133fb96dd09663e213dcad0032f3658f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (age1_PURE_2 E AT) as [P Ex].",
                        "VernacExtend",
                        "e915926b26fa61967311a38882dd1ceba53c2a5d"
                    ]
                },
                {
                    "command": [
                        "rewrite Ex; auto.",
                        "VernacExtend",
                        "2da2a4ecae7084600464a387fe5fa48662475f23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alloc_cohere_unage",
            "line_nb": 1497,
            "steps": [
                {
                    "command": [
                        "intros x y E D.",
                        "VernacExtend",
                        "f7ef6a8af78288e7bd7645eb24a9d341f9f90050"
                    ]
                },
                {
                    "command": [
                        "intros loc G; specialize (D loc G).",
                        "VernacExtend",
                        "965b4d0b336df3a6d8c8a972e51824d89184cfd7"
                    ]
                },
                {
                    "command": [
                        "eapply (age1_NO y); eauto.",
                        "VernacExtend",
                        "c6d26419e24eaa8d9052fb5d6c01f1becd9d30aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}