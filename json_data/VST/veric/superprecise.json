{
    "filename": "veric/superprecise.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import Reals.",
            "VernacRequire",
            "45681fd6487015ca7aa8c8e9b408e40e3103ca14"
        ],
        [
            "Require Export VST.veric.base.",
            "VernacRequire",
            "c7e34d793d3b095308aa80b56a6bb26f238ab08e"
        ],
        [
            "Require Import VST.veric.compcert_rmaps.",
            "VernacRequire",
            "c684a380737921a2e41654d70bb2fe8e448426cf"
        ],
        [
            "Require Import VST.veric.res_predicates.",
            "VernacRequire",
            "768b4200cf583d1957d2bf97075bbe3044eb3f8d"
        ],
        [
            "Lemma int_of_bytes_uniq: forall i j, length i = length j -> int_of_bytes i = int_of_bytes j -> i = j.",
            "VernacStartTheoremProof",
            "3f5a7a3e853639ae40e72bbb2cf41bd8b68e82a6"
        ],
        [
            "induction i; intros.",
            "VernacExtend",
            "2d740bc8817d82f5182983725513f9d22ccbf22f"
        ],
        [
            "destruct j; inv H.",
            "VernacExtend",
            "0d3b2fdc9c0f050e3d36c782cceadb64d4c53b9e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct j; inv H.",
            "VernacExtend",
            "0d3b2fdc9c0f050e3d36c782cceadb64d4c53b9e"
        ],
        [
            "specialize (IHi _ H2).",
            "VernacExtend",
            "3dfa50c31fdab384748075108996f86412317565"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "do 2 rewrite (Z.add_comm (Byte.unsigned _)) in H0.",
            "VernacExtend",
            "83f342d5e2ba029add5d517630668e0450b2f6ed"
        ],
        [
            "remember (int_of_bytes j * 256 + Byte.unsigned i0) as v eqn:?H.",
            "VernacExtend",
            "7f2b57b582f6149e5395b81fec8dfc10a70c2461"
        ],
        [
            "symmetry in H0.",
            "VernacExtend",
            "6a4628a15502c5c72b4290e332e792b1559a4eae"
        ],
        [
            "rename i0 into b.",
            "VernacExtend",
            "a07adabdf19db09054d75d554b3a6323d0baa90c"
        ],
        [
            "pose proof (Zmod_unique _ _ _ _ H (Byte.unsigned_range _)).",
            "VernacExtend",
            "5eba8d590eb218cf4696532c4778aeede076ca77"
        ],
        [
            "pose proof (Zmod_unique _ _ _ _ H0 (Byte.unsigned_range _)).",
            "VernacExtend",
            "fef266d59f23b70234eb0e62bf6be725e519628a"
        ],
        [
            "assert (Byte.repr (Byte.unsigned a) = Byte.repr (Byte.unsigned b)) by congruence.",
            "VernacExtend",
            "6aa002fa5daaf12fa182357a9b185b842b649211"
        ],
        [
            "repeat rewrite Byte.repr_unsigned in H4.",
            "VernacExtend",
            "f4d94cb2ffdc14993051b5fafc81c8e7288e59be"
        ],
        [
            "subst b.",
            "VernacExtend",
            "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "clear H1.",
            "VernacExtend",
            "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
        ],
        [
            "apply IHi.",
            "VernacExtend",
            "6d0640aefb702ff5a66a35d1980233055f0d9211"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_int_uniq: forall i j, length i = length j -> decode_int i = decode_int j -> i=j.",
            "VernacStartTheoremProof",
            "d922254872b67319507c012eb9c7e121fa476398"
        ],
        [
            "unfold decode_int, rev_if_be.",
            "VernacExtend",
            "9d45a61b1ff0e41706ee3468932d1696aa4f344a"
        ],
        [
            "destruct Archi.big_endian.",
            "VernacExtend",
            "0ed819bc4fe75454a9b2e031aedda294378d0d99"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (rev_involutive i).",
            "VernacExtend",
            "9ef1c03ad70c9c42c3eb9a40df58858d9f533342"
        ],
        [
            "rewrite <- (rev_involutive j).",
            "VernacExtend",
            "3eeeaeef1477f23fa23f56070ae0539c03ef0699"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "assert (length (rev i) = length (rev j)).",
            "VernacExtend",
            "6af8328f875d70402c055bd96eb6b2de09f5f0d8"
        ],
        [
            "repeat rewrite rev_length; auto.",
            "VernacExtend",
            "892734e2a675d35d6f730b1b1617432c6265a38c"
        ],
        [
            "eapply int_of_bytes_uniq; eauto.",
            "VernacExtend",
            "91570e74f45d9e4db15e99771fab76a9b5ba55c5"
        ],
        [
            "apply int_of_bytes_uniq.",
            "VernacExtend",
            "bae0dafb6ea632958697dbebef742a3d8037b322"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_int_range: forall l N, N = two_p (8 * Z.of_nat (length l)) -> 0 <= decode_int l < N.",
            "VernacStartTheoremProof",
            "e30fd8ac8e42d938b54543c61f5a9b5e12dfdc91"
        ],
        [
            "intros; subst; revert l.",
            "VernacExtend",
            "c3e8d937e56b09b93034d17f11332a7281733f9c"
        ],
        [
            "unfold decode_int.",
            "VernacExtend",
            "3e6ad11a4516794add58824465ed06a901da14b6"
        ],
        [
            "assert (forall l, 0 <= int_of_bytes l < two_p (8 * Z.of_nat (length l))).",
            "VernacExtend",
            "74cd486dcc18a1ad48f0ce7d2dc6d0e06944034d"
        ],
        [
            "2: intros; rewrite <- rev_if_be_length; auto.",
            "VernacExtend",
            "8b7dc36872c4d81442ad5d33cc9a390ea90d0de4"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "simpl; omega.",
            "VernacExtend",
            "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
        ],
        [
            "simpl int_of_bytes.",
            "VernacExtend",
            "89052208561f491339e1d85067732ca3e40103d4"
        ],
        [
            "simpl length.",
            "VernacExtend",
            "cab663a1b923ec4538f37af4b3dac18c303feac5"
        ],
        [
            "rewrite Nat2Z.inj_succ.",
            "VernacExtend",
            "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
        ],
        [
            "unfold Z.succ.",
            "VernacExtend",
            "d3292e8337e33f78eeb3f491cfdb2987c4452e05"
        ],
        [
            "rewrite Z.mul_add_distr_l.",
            "VernacExtend",
            "94d4ab98e943ee5ba93e42479d34d34fd113bca7"
        ],
        [
            "rewrite two_p_is_exp; try omega.",
            "VernacExtend",
            "eb631028665c5902b8092f1b0f1dacb222e6479f"
        ],
        [
            "change (two_p (8*1)) with 256.",
            "VernacExtend",
            "014a8391151044ecd1e1722443bea05cce7f80be"
        ],
        [
            "pose proof (Byte.unsigned_range a).",
            "VernacExtend",
            "613aebcab72c4de67a1bb126b2233c709d2220ed"
        ],
        [
            "change Byte.modulus with 256 in H.",
            "VernacExtend",
            "c2cda0918e5a3c50eabc65f2c94bafc95c3e89f8"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sign_ext_injective: forall n i j, 0 < n < Int.zwordsize -> 0 <= i < two_p n -> 0 <= j < two_p n -> Int.sign_ext n (Int.repr i) = Int.sign_ext n (Int.repr j) -> i=j.",
            "VernacStartTheoremProof",
            "490f0b536d09f32d5b8d53be912068771f1d0839"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.eqmod_sign_ext n (Int.repr i) H).",
            "VernacExtend",
            "4af612ef15d20d3b6b2454e5bfc2856f5de66809"
        ],
        [
            "pose proof (Int.eqmod_sign_ext n (Int.repr j) H).",
            "VernacExtend",
            "2ff646fbbba7a5044ebb9b59e79f7ec0d7aca272"
        ],
        [
            "rewrite H2 in H3.",
            "VernacExtend",
            "009aed681b5bf7878390422291392aff7e71e42a"
        ],
        [
            "apply Int.eqmod_sym in H3.",
            "VernacExtend",
            "00d8bde1554d105931cc0c8f4239a59681a777fa"
        ],
        [
            "pose proof (Int.eqmod_trans _ _ _ _ H3 H4).",
            "VernacExtend",
            "036d745c316c920f1939f6831c9655bab99041b7"
        ],
        [
            "rewrite Int.unsigned_repr in H5.",
            "VernacExtend",
            "6b43bf13548cbf07e203e252ba913aae7daa48d6"
        ],
        [
            "2: pose proof (two_p_monotone_strict n Int.zwordsize); change Int.max_unsigned with (two_p Int.zwordsize - 1); omega.",
            "VernacExtend",
            "89f93a94636e9faef04cdc26788fa946fa6c908c"
        ],
        [
            "rewrite Int.unsigned_repr in H5.",
            "VernacExtend",
            "6b43bf13548cbf07e203e252ba913aae7daa48d6"
        ],
        [
            "2: pose proof (two_p_monotone_strict n Int.zwordsize); change Int.max_unsigned with (two_p Int.zwordsize - 1); omega.",
            "VernacExtend",
            "89f93a94636e9faef04cdc26788fa946fa6c908c"
        ],
        [
            "apply Int.eqmod_small_eq in H5; auto.",
            "VernacExtend",
            "7d0e8dcb6609da1162f715cca90ad11ee75921e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma zero_ext_injective: forall n i j, 0 <= n < Int.zwordsize -> 0 <= i < two_p n -> 0 <= j < two_p n -> Int.zero_ext n (Int.repr i) = Int.zero_ext n (Int.repr j) -> i=j.",
            "VernacStartTheoremProof",
            "b0aef1adbe2618353935901cc8d6e89d3aa4f7bc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.eqmod_zero_ext n (Int.repr i) H).",
            "VernacExtend",
            "19e85b716bd0c87e512a78fe0925a26f80c466bc"
        ],
        [
            "pose proof (Int.eqmod_zero_ext n (Int.repr j) H).",
            "VernacExtend",
            "a5fbab15cf7eac9ba979a2cd2028badd6d1c5092"
        ],
        [
            "rewrite H2 in H3.",
            "VernacExtend",
            "009aed681b5bf7878390422291392aff7e71e42a"
        ],
        [
            "apply Int.eqmod_sym in H3.",
            "VernacExtend",
            "00d8bde1554d105931cc0c8f4239a59681a777fa"
        ],
        [
            "pose proof (Int.eqmod_trans _ _ _ _ H3 H4).",
            "VernacExtend",
            "036d745c316c920f1939f6831c9655bab99041b7"
        ],
        [
            "rewrite Int.unsigned_repr in H5.",
            "VernacExtend",
            "6b43bf13548cbf07e203e252ba913aae7daa48d6"
        ],
        [
            "2: pose proof (two_p_monotone_strict n Int.zwordsize); change Int.max_unsigned with (two_p Int.zwordsize - 1); omega.",
            "VernacExtend",
            "89f93a94636e9faef04cdc26788fa946fa6c908c"
        ],
        [
            "rewrite Int.unsigned_repr in H5.",
            "VernacExtend",
            "6b43bf13548cbf07e203e252ba913aae7daa48d6"
        ],
        [
            "2: pose proof (two_p_monotone_strict n Int.zwordsize); change Int.max_unsigned with (two_p Int.zwordsize - 1); omega.",
            "VernacExtend",
            "89f93a94636e9faef04cdc26788fa946fa6c908c"
        ],
        [
            "apply Int.eqmod_small_eq in H5; auto.",
            "VernacExtend",
            "7d0e8dcb6609da1162f715cca90ad11ee75921e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_decode_int_inj: forall l1 l2, length l1 = 4%nat -> length l2 = 4%nat -> Int.repr (decode_int l1) = Int.repr (decode_int l2) -> l1=l2.",
            "VernacStartTheoremProof",
            "793a5cd1fe92aa2747410d0d2c36cb813c25e20b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply decode_int_uniq; [congruence | ].",
            "VernacExtend",
            "5004db5bb6600bd14de335dcbd4f8d5fdb1c88fe"
        ],
        [
            "rewrite <- (Int.unsigned_repr (decode_int l1)).",
            "VernacExtend",
            "b2c37dffea05a8acb11976b599a9439b275b79eb"
        ],
        [
            "2:{",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "pose proof (decode_int_range l1 _ (eq_refl _)).",
            "VernacExtend",
            "d2e08a431da6177980adc1da4acc381afc1396a1"
        ],
        [
            "rewrite H in H2.",
            "VernacExtend",
            "9dbd07a8bd40939a7d0ef8bbc9948df99e8dead8"
        ],
        [
            "change (two_p (8 * Z.of_nat 4)) with (Int.max_unsigned + 1) in H2.",
            "VernacExtend",
            "778554e28ff788e2693e576aca2844e96be0b4de"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- (Int.unsigned_repr (decode_int l2)).",
            "VernacExtend",
            "212fb8dab36f6cf482b142d8725c1e6f1fefe059"
        ],
        [
            "2:{",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "pose proof (decode_int_range l2 _ (eq_refl _)).",
            "VernacExtend",
            "ce2d40d39dd6a61b88717103e07e972f27a6da7e"
        ],
        [
            "rewrite H0 in H2.",
            "VernacExtend",
            "a4d82e65c345819bdd50b79b067ee218c42a8857"
        ],
        [
            "change (two_p (8 * Z.of_nat 4)) with (Int.max_unsigned + 1) in H2.",
            "VernacExtend",
            "778554e28ff788e2693e576aca2844e96be0b4de"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_decode_int64_inj: forall l1 l2, length l1 = 8%nat -> length l2 = 8%nat -> Int64.repr (decode_int l1) = Int64.repr (decode_int l2) -> l1=l2.",
            "VernacStartTheoremProof",
            "c2ea37a07aaed12d7d8be5d81c3e32c401fafa48"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply decode_int_uniq; [congruence | ].",
            "VernacExtend",
            "5004db5bb6600bd14de335dcbd4f8d5fdb1c88fe"
        ],
        [
            "rewrite <- (Int64.unsigned_repr (decode_int l1)).",
            "VernacExtend",
            "963593575f49d2c46285d354dc5b4dc86680fab7"
        ],
        [
            "2:{",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "pose proof (decode_int_range l1 _ (eq_refl _)).",
            "VernacExtend",
            "d2e08a431da6177980adc1da4acc381afc1396a1"
        ],
        [
            "rewrite H in H2.",
            "VernacExtend",
            "9dbd07a8bd40939a7d0ef8bbc9948df99e8dead8"
        ],
        [
            "change (two_p (8 * Z.of_nat 8)) with (Int64.max_unsigned + 1) in H2.",
            "VernacExtend",
            "4e60cd3563db54b152c0b9d89438bf0214679f22"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- (Int64.unsigned_repr (decode_int l2)).",
            "VernacExtend",
            "acb930ed969ad11a627c397f339826cb374e9530"
        ],
        [
            "2:{",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "pose proof (decode_int_range l2 _ (eq_refl _)).",
            "VernacExtend",
            "ce2d40d39dd6a61b88717103e07e972f27a6da7e"
        ],
        [
            "rewrite H0 in H2.",
            "VernacExtend",
            "a4d82e65c345819bdd50b79b067ee218c42a8857"
        ],
        [
            "change (two_p (8 * Z.of_nat 8)) with (Int64.max_unsigned + 1) in H2.",
            "VernacExtend",
            "4e60cd3563db54b152c0b9d89438bf0214679f22"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Transparent Float.of_bits.",
            "VernacSetOpacity",
            "d9d2619824a4b0fe65f882461b56102d276796f1"
        ],
        [
            "Transparent Float32.of_bits.",
            "VernacSetOpacity",
            "95b1fa4bc946dbb72c5cea4f458de2664d869322"
        ],
        [
            "Lemma double_of_bits_inj: forall i j, Float.of_bits i = Float.of_bits j -> i=j.",
            "VernacStartTheoremProof",
            "5d1fe1afe9270a177b84d5eb217807e477f6254b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Float.of_bits in H.",
            "VernacExtend",
            "cfb3c3c28ccc49817f47959721aaa7c3a7c9d7fd"
        ],
        [
            "rewrite <- (Int64.repr_unsigned i).",
            "VernacExtend",
            "12ef5e29b93380403a5ae902d6d4183aa1428b40"
        ],
        [
            "rewrite <- (Int64.repr_unsigned j).",
            "VernacExtend",
            "f534d494691376acb2bf09d984196ea272264b2d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold Fappli_IEEE_bits.b64_of_bits in H.",
            "VernacExtend",
            "6f792d2d3742a9b58b8e5475498517b6b204c05f"
        ],
        [
            "rewrite <- (Fappli_IEEE_bits.bits_of_binary_float_of_bits 52 11 (refl_equal _) (refl_equal _) (refl_equal _) (Int64.unsigned i)) by (apply Int64.unsigned_range).",
            "VernacExtend",
            "bde223f81a3f409ae888a5b5e65a3de16bc695ef"
        ],
        [
            "rewrite <- (Fappli_IEEE_bits.bits_of_binary_float_of_bits 52 11 (refl_equal _) (refl_equal _) (refl_equal _) (Int64.unsigned j)) by (apply Int64.unsigned_range).",
            "VernacExtend",
            "9724dee6f0dbedc9ebb5af7088021536f38b80cd"
        ],
        [
            "f_equal; apply H.",
            "VernacExtend",
            "60e311e4227d36125a993565be9b484e3f963cf6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import ZArith.",
            "VernacRequire",
            "12e7bb35b490128f5b015cdb4af7d2255de07134"
        ],
        [
            "From compcert Require Import Fappli_IEEE Fcore_Zaux Fcore_generic_fmt.",
            "VernacRequire",
            "c86f9bb3772d84ebc90dec90401c99e934c95fac"
        ],
        [
            "Lemma binary_normalize_inj: forall s1 m1 e1 (h1 : bounded 24 128 m1 e1 = true), forall s2 m2 e2 (h2 : bounded 24 128 m2 e2 = true), binary_normalize 53 1024 (eq_refl _) (eq_refl _) mode_NE (cond_Zopp s1 (Zpos m1)) e1 s1 = binary_normalize 53 1024 (eq_refl _) (eq_refl _) mode_NE (cond_Zopp s2 (Zpos m2)) e2 s2 -> B754_finite 24 128 s1 m1 e1 h1 = B754_finite 24 128 s2 m2 e2 h2.",
            "VernacStartTheoremProof",
            "ca95aa4d068444dd46b62c84ffe4618a9f9f837d"
        ],
        [
            "intros s1 m1 e1 h1 s2 m2 e2 h2 Hn.",
            "VernacExtend",
            "5876265c253fa58fe3c0e4a731e7f421f5ed97a7"
        ],
        [
            "apply B2R_inj ; try easy.",
            "VernacExtend",
            "0c4db9f9a28fc16e7a9e2e2ef58d86b4e46cd285"
        ],
        [
            "assert (H: forall s m e h, B2R 24 128 (B754_finite 24 128 s m e h) = B2R 53 1024 (binary_normalize 53 1024 (eq_refl _) (eq_refl _) mode_NE (cond_Zopp s (Zpos m)) e s)).",
            "VernacExtend",
            "2619cf1db3d678102f931038a168371b64041f82"
        ],
        [
            "2: now rewrite 2!H, Hn.",
            "VernacExtend",
            "c8d6b9e2147b1d8cf3e90e6774a901e68f4f3268"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "intros s m e h.",
            "VernacExtend",
            "c8c5ae186a9a26de1411a2ff900dfce5aeb93689"
        ],
        [
            "generalize (binary_normalize_correct 53 1024 (eq_refl _) (eq_refl _) mode_NE (cond_Zopp s (Zpos m)) e s).",
            "VernacExtend",
            "06d34f553718b9d740d3924c0be7d3cb3e42a731"
        ],
        [
            "rewrite round_generic ; auto with typeclass_instances.",
            "VernacExtend",
            "0d70c716a3b542e7466155039c9702ca65fc5a16"
        ],
        [
            "rewrite Fcore_Raux.Rlt_bool_true.",
            "VernacExtend",
            "d686c4eb5ef7d5d4fb8ed2db9ad08f23e499c5a8"
        ],
        [
            "intros [-> _].",
            "VernacExtend",
            "d2a7026d558a394592c6291c08a85dc8a13955a4"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "apply Raxioms.Rlt_trans with (1 := abs_B2R_lt_emax _ _ (B754_finite 24 128 s m e h)).",
            "VernacExtend",
            "bbf92fe14cd1a9c871991bb476bc89f2697d68ef"
        ],
        [
            "now apply Fcore_Raux.bpow_lt.",
            "VernacExtend",
            "bf059c507e0ef9d38e8171c6c4e5d0ac0627a5f1"
        ],
        [
            "apply Fcore_FLT.generic_format_FLT.",
            "VernacExtend",
            "e208ef7565c9b7211adc50d3f1ffd8886a0a5501"
        ],
        [
            "assert (h' := generic_format_B2R 24 128 (B754_finite 24 128 s m e h)).",
            "VernacExtend",
            "41c6acc07ef650eea88fdc6a336ed52407be85d8"
        ],
        [
            "apply Fcore_FLT.FLT_format_generic in h'.",
            "VernacExtend",
            "3d853ffaea875b9a1845cc8ebc64304d7ccbb9b1"
        ],
        [
            "destruct h' as [f [H1 [H2 H3]]].",
            "VernacExtend",
            "b734a3984ef14a30d4d6a0e0dda9f55b63618a22"
        ],
        [
            "exists f.",
            "VernacExtend",
            "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply Z.lt_trans with (1 := H2).",
            "VernacExtend",
            "1110bdd476feddd7ab6a83185054e3d504c7f793"
        ],
        [
            "now apply Zpower_lt.",
            "VernacExtend",
            "bfbe2c3743a7e8fc1177881520eaf977efff953a"
        ],
        [
            "now apply Z.le_trans with (2 := H3).",
            "VernacExtend",
            "4f514ca44a24e9eab5a81c18bba6ec2fd9aedcc2"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma binary_normalize_finite: forall b m e, bounded (23 + 1) (2 ^ (8 - 1)) m e = true -> match binary_normalize 53 1024 eq_refl eq_refl mode_NE (cond_Zopp b (Z.pos m)) e b with B754_finite _ _ _ _ => True | _ => False end.",
            "VernacStartTheoremProof",
            "8e64c6576d515e8b883df9a4bf9a1c147cc264c3"
        ],
        [
            "intros s m e h.",
            "VernacExtend",
            "c8c5ae186a9a26de1411a2ff900dfce5aeb93689"
        ],
        [
            "generalize (binary_normalize_correct 53 1024 (eq_refl _) (eq_refl _) mode_NE (cond_Zopp s (Zpos m)) e s).",
            "VernacExtend",
            "06d34f553718b9d740d3924c0be7d3cb3e42a731"
        ],
        [
            "rewrite round_generic ; auto with typeclass_instances.",
            "VernacExtend",
            "0d70c716a3b542e7466155039c9702ca65fc5a16"
        ],
        [
            "rewrite Fcore_Raux.Rlt_bool_true.",
            "VernacExtend",
            "d686c4eb5ef7d5d4fb8ed2db9ad08f23e499c5a8"
        ],
        [
            "intros [H _].",
            "VernacExtend",
            "698d56a63c459965f537fcf2e25b47302a1a8995"
        ],
        [
            "assert (H': B2R 53 1024 (binary_normalize 53 1024 eq_refl eq_refl mode_NE (cond_Zopp s (Z.pos m)) e s) <> 0%R).",
            "VernacExtend",
            "61847e049cda16b7298983e412b21ae8c40aa346"
        ],
        [
            "rewrite H, <- (Fcore_float_prop.F2R_0 radix2 e).",
            "VernacExtend",
            "3eb1068927dd42be02013857bf7b55df93337455"
        ],
        [
            "case s.",
            "VernacExtend",
            "efad6b1c39b577b9895537b26593810b0956f859"
        ],
        [
            "now apply RIneq.Rlt_not_eq, Fcore_float_prop.F2R_lt_compat.",
            "VernacExtend",
            "718b50540002ec0b5eddd66b26afe87c5a53c3b4"
        ],
        [
            "now apply RIneq.Rgt_not_eq, Fcore_float_prop.F2R_lt_compat.",
            "VernacExtend",
            "edea2bed0f2be5c433dd83cdfe6536f387291dc6"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "destruct binary_normalize ; try easy ; now elim H'.",
            "VernacExtend",
            "d7c11a51d82188f225a0c9eaef3913addaddb820"
        ],
        [
            "apply Raxioms.Rlt_trans with (1 := abs_B2R_lt_emax _ _ (B754_finite 24 128 s m e h)).",
            "VernacExtend",
            "bbf92fe14cd1a9c871991bb476bc89f2697d68ef"
        ],
        [
            "now apply Fcore_Raux.bpow_lt.",
            "VernacExtend",
            "bf059c507e0ef9d38e8171c6c4e5d0ac0627a5f1"
        ],
        [
            "apply Fcore_FLT.generic_format_FLT.",
            "VernacExtend",
            "e208ef7565c9b7211adc50d3f1ffd8886a0a5501"
        ],
        [
            "assert (h' := generic_format_B2R 24 128 (B754_finite 24 128 s m e h)).",
            "VernacExtend",
            "41c6acc07ef650eea88fdc6a336ed52407be85d8"
        ],
        [
            "apply Fcore_FLT.FLT_format_generic in h'.",
            "VernacExtend",
            "3d853ffaea875b9a1845cc8ebc64304d7ccbb9b1"
        ],
        [
            "destruct h' as [f [H1 [H2 H3]]].",
            "VernacExtend",
            "b734a3984ef14a30d4d6a0e0dda9f55b63618a22"
        ],
        [
            "exists f.",
            "VernacExtend",
            "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply Z.lt_trans with (1 := H2).",
            "VernacExtend",
            "1110bdd476feddd7ab6a83185054e3d504c7f793"
        ],
        [
            "now apply Zpower_lt.",
            "VernacExtend",
            "bfbe2c3743a7e8fc1177881520eaf977efff953a"
        ],
        [
            "now apply Z.le_trans with (2 := H3).",
            "VernacExtend",
            "4f514ca44a24e9eab5a81c18bba6ec2fd9aedcc2"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma float32_preserves_payload: forall s pl, let '(s1,pl1) := Float.of_single_pl s pl in (s=s1 /\\ (536870912 * (Pos.lor (proj1_sig pl) 4194304))%positive = proj1_sig pl1).",
            "VernacStartTheoremProof",
            "b37df3c46809c9d501ebc6e21f99b426e3e55897"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Float.of_single_pl.",
            "VernacExtend",
            "43a3e94e8818cd7fe0d8784d17e6891470f1276c"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_lor_inj: forall k N (a b: nan_pl k), Zpower_nat 2 (Z.to_nat (k-2)) = Zpos N -> Pos.lor (proj1_sig a) N = Pos.lor (proj1_sig b) N -> a=b.",
            "VernacStartTheoremProof",
            "42579606180f9af07e79efddcd6974c10099d223"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct a as [a Ha].",
            "VernacExtend",
            "1a2780fb2757b24da9e9fa789baad1a8a61aeb3e"
        ],
        [
            "destruct b as [b Hb].",
            "VernacExtend",
            "ba7d2fef4fbf2a6297582fc5363d540682fbd509"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "assert (a=b); [ | subst a; f_equal; apply Axioms.proof_irr].",
            "VernacExtend",
            "87292da0ab386c2dd6f25a8f2fe6e1ac5997f0ee"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Inductive wishes_eq_horses := .",
            "VernacInductive",
            "95d455ac573e6f6a539a99c2bdec410694886dd2"
        ],
        [
            "Lemma float32_payload_inj: wishes_eq_horses -> forall s1 pl1 s2 pl2, Float.of_single_pl s1 pl1= Float.of_single_pl s2 pl2 -> (s1,pl1) = (s2,pl2).",
            "VernacStartTheoremProof",
            "0feb56d5e795757b3c6b432deee602a5d3ca5808"
        ],
        [
            "intro WH; intros.",
            "VernacExtend",
            "266cb84e931332ae550c46437cdd37fcf6e35261"
        ],
        [
            "pose proof (float32_preserves_payload s1 pl1).",
            "VernacExtend",
            "a3a8dd67a25a28778043babdade17c0e17e71b26"
        ],
        [
            "pose proof (float32_preserves_payload s2 pl2).",
            "VernacExtend",
            "d3728d47d54bba53efcc4bacbfb0b950b4cd8367"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "destruct (Float.of_single_pl s2 pl2).",
            "VernacExtend",
            "a1efc159beef0d1799f2efa94e48884933de04b4"
        ],
        [
            "destruct H0,H1.",
            "VernacExtend",
            "b4443f537ba3c1386bfc30cfd9a503a7df7eedb6"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite <- H2 in H0; clear - WH H0.",
            "VernacExtend",
            "aebca93750e1b2dda39dd30cba4fa1a6ee89018c"
        ],
        [
            "apply Pos.mul_reg_l in H0.",
            "VernacExtend",
            "be05072fdfd41091cf0ef11f57f8f9ed41ea2e0e"
        ],
        [
            "contradiction WH.",
            "VernacExtend",
            "70056c02ed78cbb8cfbb3b0c645f8f11510fb98b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma single_of_bits_inj: forall i j : Int.int, Float32.of_bits i = Float32.of_bits j -> i=j.",
            "VernacStartTheoremProof",
            "7bb1e6448d5d861427825bd80ad6a4e6f36e5e7f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Float32.of_bits in H.",
            "VernacExtend",
            "757c6f99f6e5d9ab309adb8bf8fbd5e4f3bf4ff0"
        ],
        [
            "rewrite <- (Int.repr_unsigned i).",
            "VernacExtend",
            "2c5606931407d1321e14855ad7036622fefd27ca"
        ],
        [
            "rewrite <- (Int.repr_unsigned j).",
            "VernacExtend",
            "771b6b6f3681f0bc1314eb0fcbcc67081e9761b1"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite <- (Fappli_IEEE_bits.bits_of_binary_float_of_bits 23 8 (refl_equal _) (refl_equal _) (refl_equal _) (Int.unsigned i)) by (apply Int.unsigned_range).",
            "VernacExtend",
            "be3381ffce74fd088154e2f3a8a046a0a6902df2"
        ],
        [
            "rewrite <- (Fappli_IEEE_bits.bits_of_binary_float_of_bits 23 8 (refl_equal _) (refl_equal _) (refl_equal _) (Int.unsigned j)) by (apply Int.unsigned_range).",
            "VernacExtend",
            "c374348172ef79fb697bf90945848a7b46aee024"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold Fappli_IEEE_bits.b32_of_bits in H.",
            "VernacExtend",
            "d9a06ef22cb0b7137c1b4b37d896f3d1d9505a5d"
        ],
        [
            "match goal with |- ?A = ?B => remember A as u eqn:H9; remember B as v eqn:H10; clear H9 H10 end.",
            "VernacExtend",
            "591da3c9c2fdfd870504008422fb03952136c345"
        ],
        [
            "clear i j.",
            "VernacExtend",
            "c57d10a3aa0a357e64f6a7dc2b74c8b3fc7320f1"
        ],
        [
            "destruct u,v; auto; try congruence.",
            "VernacExtend",
            "a6e016295f49a4bc5c28d05bc73fddc33961e5c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Vint_inj: forall i j, Vint i = Vint j -> i=j.",
            "VernacStartTheoremProof",
            "01ad2501ebc0e1346373ab2fea0b07450afb50a1"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decode_val_uniq: forall ch b1 b2 v, v <> Vundef -> length b1 = size_chunk_nat ch -> length b2 = size_chunk_nat ch -> decode_val ch b1 = v -> decode_val ch b2 = v -> b1=b2.",
            "VernacStartTheoremProof",
            "92b605a659d610c0c1d243dcbec9a21f5af37751"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold size_chunk_nat in *.",
            "VernacExtend",
            "3f7f626240c4071ecc550b8366a63b74f1d0db50"
        ],
        [
            "unfold decode_val in *.",
            "VernacExtend",
            "8867c45a0e135068a2888fd63450e0c469666ab7"
        ],
        [
            "destruct (proj_bytes b1) eqn:B1.",
            "VernacExtend",
            "4c976163072be05f4c34cbc1337e535f605b085a"
        ],
        [
            "subst v.",
            "VernacExtend",
            "a1d4af197c860364e3e3c9b734079b6e191cf10c"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Lemma superprecise_ewand_lem1: forall S P: pred rmap, superprecise P -> S |-- P * TT -> S = (P * (ewand P S))%pred.",
            "VernacStartTheoremProof",
            "8c9563856033c8c60c54d1554f2625b1b196746e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply pred_ext.",
            "VernacExtend",
            "9b03db08834ebab822f3dce151d20d6efb17f5ba"
        ],
        [
            "intros w ?.",
            "VernacExtend",
            "28315d52d5dd42359452ccb9c1ee1f226270dda5"
        ],
        [
            "specialize (H0 w H1).",
            "VernacExtend",
            "f01d13a73dc75d62af0dfd31bdb9ef8c80752c68"
        ],
        [
            "destruct H0 as [w1 [w2 [? [? _]]]].",
            "VernacExtend",
            "389484c9f2be1ca64edc4bda8fe98ccb0e1c166d"
        ],
        [
            "exists w1; exists w2; split3; auto.",
            "VernacExtend",
            "5a547acc336ace5d184d9e35f3df44d060780a13"
        ],
        [
            "exists w1; exists w; split3; auto.",
            "VernacExtend",
            "2338d3af2a00022ec3259642fe62765431c17020"
        ],
        [
            "intros w [w1 [w2 [? [? ?]]]].",
            "VernacExtend",
            "b8508fc9180cd94fb07a44405c6f7a78ff5695e0"
        ],
        [
            "destruct H3 as [w3 [w4 [? [? ?]]]].",
            "VernacExtend",
            "a9716d13a30c8ad8addd992caf4fa1a1ae86137a"
        ],
        [
            "assert (w1=w3).",
            "VernacExtend",
            "7294d1d1b053d99fada6926d237cb59805c2d711"
        ],
        [
            "eapply H; eauto.",
            "VernacExtend",
            "d625be3dbb1364dd2bd116c00aefec9fb61c11c0"
        ],
        [
            "apply join_core2 in H1; apply join_core2 in H3; unfold comparable; congruence.",
            "VernacExtend",
            "6d3c95aab4baead734017ceea68afffb7da6d755"
        ],
        [
            "subst w3.",
            "VernacExtend",
            "9d25dbd6bc8f02b197ce77890a3c037c6f7c4494"
        ],
        [
            "pose proof (join_eq H1 H3); subst w4.",
            "VernacExtend",
            "23571aaf8a5bf94771422766b66cb77a0ea06806"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "int_of_bytes_uniq",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "induction i; intros.",
                        "VernacExtend",
                        "2d740bc8817d82f5182983725513f9d22ccbf22f"
                    ]
                },
                {
                    "command": [
                        "destruct j; inv H.",
                        "VernacExtend",
                        "0d3b2fdc9c0f050e3d36c782cceadb64d4c53b9e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct j; inv H.",
                        "VernacExtend",
                        "0d3b2fdc9c0f050e3d36c782cceadb64d4c53b9e"
                    ]
                },
                {
                    "command": [
                        "specialize (IHi _ H2).",
                        "VernacExtend",
                        "3dfa50c31fdab384748075108996f86412317565"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (Z.add_comm (Byte.unsigned _)) in H0.",
                        "VernacExtend",
                        "83f342d5e2ba029add5d517630668e0450b2f6ed"
                    ]
                },
                {
                    "command": [
                        "remember (int_of_bytes j * 256 + Byte.unsigned i0) as v eqn:?H.",
                        "VernacExtend",
                        "7f2b57b582f6149e5395b81fec8dfc10a70c2461"
                    ]
                },
                {
                    "command": [
                        "symmetry in H0.",
                        "VernacExtend",
                        "6a4628a15502c5c72b4290e332e792b1559a4eae"
                    ]
                },
                {
                    "command": [
                        "rename i0 into b.",
                        "VernacExtend",
                        "a07adabdf19db09054d75d554b3a6323d0baa90c"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zmod_unique _ _ _ _ H (Byte.unsigned_range _)).",
                        "VernacExtend",
                        "5eba8d590eb218cf4696532c4778aeede076ca77"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zmod_unique _ _ _ _ H0 (Byte.unsigned_range _)).",
                        "VernacExtend",
                        "fef266d59f23b70234eb0e62bf6be725e519628a"
                    ]
                },
                {
                    "command": [
                        "assert (Byte.repr (Byte.unsigned a) = Byte.repr (Byte.unsigned b)) by congruence.",
                        "VernacExtend",
                        "6aa002fa5daaf12fa182357a9b185b842b649211"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Byte.repr_unsigned in H4.",
                        "VernacExtend",
                        "f4d94cb2ffdc14993051b5fafc81c8e7288e59be"
                    ]
                },
                {
                    "command": [
                        "subst b.",
                        "VernacExtend",
                        "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "clear H1.",
                        "VernacExtend",
                        "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
                    ]
                },
                {
                    "command": [
                        "apply IHi.",
                        "VernacExtend",
                        "6d0640aefb702ff5a66a35d1980233055f0d9211"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_int_uniq",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "unfold decode_int, rev_if_be.",
                        "VernacExtend",
                        "9d45a61b1ff0e41706ee3468932d1696aa4f344a"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.big_endian.",
                        "VernacExtend",
                        "0ed819bc4fe75454a9b2e031aedda294378d0d99"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (rev_involutive i).",
                        "VernacExtend",
                        "9ef1c03ad70c9c42c3eb9a40df58858d9f533342"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (rev_involutive j).",
                        "VernacExtend",
                        "3eeeaeef1477f23fa23f56070ae0539c03ef0699"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "assert (length (rev i) = length (rev j)).",
                        "VernacExtend",
                        "6af8328f875d70402c055bd96eb6b2de09f5f0d8"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite rev_length; auto.",
                        "VernacExtend",
                        "892734e2a675d35d6f730b1b1617432c6265a38c"
                    ]
                },
                {
                    "command": [
                        "eapply int_of_bytes_uniq; eauto.",
                        "VernacExtend",
                        "91570e74f45d9e4db15e99771fab76a9b5ba55c5"
                    ]
                },
                {
                    "command": [
                        "apply int_of_bytes_uniq.",
                        "VernacExtend",
                        "bae0dafb6ea632958697dbebef742a3d8037b322"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "double_of_bits_inj",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Float.of_bits in H.",
                        "VernacExtend",
                        "cfb3c3c28ccc49817f47959721aaa7c3a7c9d7fd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int64.repr_unsigned i).",
                        "VernacExtend",
                        "12ef5e29b93380403a5ae902d6d4183aa1428b40"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int64.repr_unsigned j).",
                        "VernacExtend",
                        "f534d494691376acb2bf09d984196ea272264b2d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold Fappli_IEEE_bits.b64_of_bits in H.",
                        "VernacExtend",
                        "6f792d2d3742a9b58b8e5475498517b6b204c05f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Fappli_IEEE_bits.bits_of_binary_float_of_bits 52 11 (refl_equal _) (refl_equal _) (refl_equal _) (Int64.unsigned i)) by (apply Int64.unsigned_range).",
                        "VernacExtend",
                        "bde223f81a3f409ae888a5b5e65a3de16bc695ef"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Fappli_IEEE_bits.bits_of_binary_float_of_bits 52 11 (refl_equal _) (refl_equal _) (refl_equal _) (Int64.unsigned j)) by (apply Int64.unsigned_range).",
                        "VernacExtend",
                        "9724dee6f0dbedc9ebb5af7088021536f38b80cd"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply H.",
                        "VernacExtend",
                        "60e311e4227d36125a993565be9b484e3f963cf6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "binary_normalize_finite",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "intros s m e h.",
                        "VernacExtend",
                        "c8c5ae186a9a26de1411a2ff900dfce5aeb93689"
                    ]
                },
                {
                    "command": [
                        "generalize (binary_normalize_correct 53 1024 (eq_refl _) (eq_refl _) mode_NE (cond_Zopp s (Zpos m)) e s).",
                        "VernacExtend",
                        "06d34f553718b9d740d3924c0be7d3cb3e42a731"
                    ]
                },
                {
                    "command": [
                        "rewrite round_generic ; auto with typeclass_instances.",
                        "VernacExtend",
                        "0d70c716a3b542e7466155039c9702ca65fc5a16"
                    ]
                },
                {
                    "command": [
                        "rewrite Fcore_Raux.Rlt_bool_true.",
                        "VernacExtend",
                        "d686c4eb5ef7d5d4fb8ed2db9ad08f23e499c5a8"
                    ]
                },
                {
                    "command": [
                        "intros [H _].",
                        "VernacExtend",
                        "698d56a63c459965f537fcf2e25b47302a1a8995"
                    ]
                },
                {
                    "command": [
                        "assert (H': B2R 53 1024 (binary_normalize 53 1024 eq_refl eq_refl mode_NE (cond_Zopp s (Z.pos m)) e s) <> 0%R).",
                        "VernacExtend",
                        "61847e049cda16b7298983e412b21ae8c40aa346"
                    ]
                },
                {
                    "command": [
                        "rewrite H, <- (Fcore_float_prop.F2R_0 radix2 e).",
                        "VernacExtend",
                        "3eb1068927dd42be02013857bf7b55df93337455"
                    ]
                },
                {
                    "command": [
                        "case s.",
                        "VernacExtend",
                        "efad6b1c39b577b9895537b26593810b0956f859"
                    ]
                },
                {
                    "command": [
                        "now apply RIneq.Rlt_not_eq, Fcore_float_prop.F2R_lt_compat.",
                        "VernacExtend",
                        "718b50540002ec0b5eddd66b26afe87c5a53c3b4"
                    ]
                },
                {
                    "command": [
                        "now apply RIneq.Rgt_not_eq, Fcore_float_prop.F2R_lt_compat.",
                        "VernacExtend",
                        "edea2bed0f2be5c433dd83cdfe6536f387291dc6"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "destruct binary_normalize ; try easy ; now elim H'.",
                        "VernacExtend",
                        "d7c11a51d82188f225a0c9eaef3913addaddb820"
                    ]
                },
                {
                    "command": [
                        "apply Raxioms.Rlt_trans with (1 := abs_B2R_lt_emax _ _ (B754_finite 24 128 s m e h)).",
                        "VernacExtend",
                        "bbf92fe14cd1a9c871991bb476bc89f2697d68ef"
                    ]
                },
                {
                    "command": [
                        "now apply Fcore_Raux.bpow_lt.",
                        "VernacExtend",
                        "bf059c507e0ef9d38e8171c6c4e5d0ac0627a5f1"
                    ]
                },
                {
                    "command": [
                        "apply Fcore_FLT.generic_format_FLT.",
                        "VernacExtend",
                        "e208ef7565c9b7211adc50d3f1ffd8886a0a5501"
                    ]
                },
                {
                    "command": [
                        "assert (h' := generic_format_B2R 24 128 (B754_finite 24 128 s m e h)).",
                        "VernacExtend",
                        "41c6acc07ef650eea88fdc6a336ed52407be85d8"
                    ]
                },
                {
                    "command": [
                        "apply Fcore_FLT.FLT_format_generic in h'.",
                        "VernacExtend",
                        "3d853ffaea875b9a1845cc8ebc64304d7ccbb9b1"
                    ]
                },
                {
                    "command": [
                        "destruct h' as [f [H1 [H2 H3]]].",
                        "VernacExtend",
                        "b734a3984ef14a30d4d6a0e0dda9f55b63618a22"
                    ]
                },
                {
                    "command": [
                        "exists f.",
                        "VernacExtend",
                        "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1.",
                        "VernacExtend",
                        "b8b417d956609d1854d18921f25bc0ffae73a74e"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "apply Z.lt_trans with (1 := H2).",
                        "VernacExtend",
                        "1110bdd476feddd7ab6a83185054e3d504c7f793"
                    ]
                },
                {
                    "command": [
                        "now apply Zpower_lt.",
                        "VernacExtend",
                        "bfbe2c3743a7e8fc1177881520eaf977efff953a"
                    ]
                },
                {
                    "command": [
                        "now apply Z.le_trans with (2 := H3).",
                        "VernacExtend",
                        "4f514ca44a24e9eab5a81c18bba6ec2fd9aedcc2"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "float32_preserves_payload",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Float.of_single_pl.",
                        "VernacExtend",
                        "43a3e94e8818cd7fe0d8784d17e6891470f1276c"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "float32_payload_inj",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "intro WH; intros.",
                        "VernacExtend",
                        "266cb84e931332ae550c46437cdd37fcf6e35261"
                    ]
                },
                {
                    "command": [
                        "pose proof (float32_preserves_payload s1 pl1).",
                        "VernacExtend",
                        "a3a8dd67a25a28778043babdade17c0e17e71b26"
                    ]
                },
                {
                    "command": [
                        "pose proof (float32_preserves_payload s2 pl2).",
                        "VernacExtend",
                        "d3728d47d54bba53efcc4bacbfb0b950b4cd8367"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "destruct (Float.of_single_pl s2 pl2).",
                        "VernacExtend",
                        "a1efc159beef0d1799f2efa94e48884933de04b4"
                    ]
                },
                {
                    "command": [
                        "destruct H0,H1.",
                        "VernacExtend",
                        "b4443f537ba3c1386bfc30cfd9a503a7df7eedb6"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2 in H0; clear - WH H0.",
                        "VernacExtend",
                        "aebca93750e1b2dda39dd30cba4fa1a6ee89018c"
                    ]
                },
                {
                    "command": [
                        "apply Pos.mul_reg_l in H0.",
                        "VernacExtend",
                        "be05072fdfd41091cf0ef11f57f8f9ed41ea2e0e"
                    ]
                },
                {
                    "command": [
                        "contradiction WH.",
                        "VernacExtend",
                        "70056c02ed78cbb8cfbb3b0c645f8f11510fb98b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "single_of_bits_inj",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Float32.of_bits in H.",
                        "VernacExtend",
                        "757c6f99f6e5d9ab309adb8bf8fbd5e4f3bf4ff0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_unsigned i).",
                        "VernacExtend",
                        "2c5606931407d1321e14855ad7036622fefd27ca"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Int.repr_unsigned j).",
                        "VernacExtend",
                        "771b6b6f3681f0bc1314eb0fcbcc67081e9761b1"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Fappli_IEEE_bits.bits_of_binary_float_of_bits 23 8 (refl_equal _) (refl_equal _) (refl_equal _) (Int.unsigned i)) by (apply Int.unsigned_range).",
                        "VernacExtend",
                        "be3381ffce74fd088154e2f3a8a046a0a6902df2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Fappli_IEEE_bits.bits_of_binary_float_of_bits 23 8 (refl_equal _) (refl_equal _) (refl_equal _) (Int.unsigned j)) by (apply Int.unsigned_range).",
                        "VernacExtend",
                        "c374348172ef79fb697bf90945848a7b46aee024"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold Fappli_IEEE_bits.b32_of_bits in H.",
                        "VernacExtend",
                        "d9a06ef22cb0b7137c1b4b37d896f3d1d9505a5d"
                    ]
                },
                {
                    "command": [
                        "match goal with |- ?A = ?B => remember A as u eqn:H9; remember B as v eqn:H10; clear H9 H10 end.",
                        "VernacExtend",
                        "591da3c9c2fdfd870504008422fb03952136c345"
                    ]
                },
                {
                    "command": [
                        "clear i j.",
                        "VernacExtend",
                        "c57d10a3aa0a357e64f6a7dc2b74c8b3fc7320f1"
                    ]
                },
                {
                    "command": [
                        "destruct u,v; auto; try congruence.",
                        "VernacExtend",
                        "a6e016295f49a4bc5c28d05bc73fddc33961e5c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Vint_inj",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "superprecise_ewand_lem1",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply pred_ext.",
                        "VernacExtend",
                        "9b03db08834ebab822f3dce151d20d6efb17f5ba"
                    ]
                },
                {
                    "command": [
                        "intros w ?.",
                        "VernacExtend",
                        "28315d52d5dd42359452ccb9c1ee1f226270dda5"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 w H1).",
                        "VernacExtend",
                        "f01d13a73dc75d62af0dfd31bdb9ef8c80752c68"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [w1 [w2 [? [? _]]]].",
                        "VernacExtend",
                        "389484c9f2be1ca64edc4bda8fe98ccb0e1c166d"
                    ]
                },
                {
                    "command": [
                        "exists w1; exists w2; split3; auto.",
                        "VernacExtend",
                        "5a547acc336ace5d184d9e35f3df44d060780a13"
                    ]
                },
                {
                    "command": [
                        "exists w1; exists w; split3; auto.",
                        "VernacExtend",
                        "2338d3af2a00022ec3259642fe62765431c17020"
                    ]
                },
                {
                    "command": [
                        "intros w [w1 [w2 [? [? ?]]]].",
                        "VernacExtend",
                        "b8508fc9180cd94fb07a44405c6f7a78ff5695e0"
                    ]
                },
                {
                    "command": [
                        "destruct H3 as [w3 [w4 [? [? ?]]]].",
                        "VernacExtend",
                        "a9716d13a30c8ad8addd992caf4fa1a1ae86137a"
                    ]
                },
                {
                    "command": [
                        "assert (w1=w3).",
                        "VernacExtend",
                        "7294d1d1b053d99fada6926d237cb59805c2d711"
                    ]
                },
                {
                    "command": [
                        "eapply H; eauto.",
                        "VernacExtend",
                        "d625be3dbb1364dd2bd116c00aefec9fb61c11c0"
                    ]
                },
                {
                    "command": [
                        "apply join_core2 in H1; apply join_core2 in H3; unfold comparable; congruence.",
                        "VernacExtend",
                        "6d3c95aab4baead734017ceea68afffb7da6d755"
                    ]
                },
                {
                    "command": [
                        "subst w3.",
                        "VernacExtend",
                        "9d25dbd6bc8f02b197ce77890a3c037c6f7c4494"
                    ]
                },
                {
                    "command": [
                        "pose proof (join_eq H1 H3); subst w4.",
                        "VernacExtend",
                        "23571aaf8a5bf94771422766b66cb77a0ea06806"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}