{
    "filename": "veric/mem_lessdef.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import compcert.lib.Coqlib.",
            "VernacRequire",
            "0e8012a6c0062230df0c959370d96e0e84eae6bb"
        ],
        [
            "Require Import compcert.lib.Integers.",
            "VernacRequire",
            "0da1bf41e581d14cf922c3b0e0da86b37eba58b1"
        ],
        [
            "Require Import compcert.common.AST.",
            "VernacRequire",
            "736cc8fb6e99f68efba7c58bdf7b2370507d5002"
        ],
        [
            "Require Import compcert.common.Globalenvs.",
            "VernacRequire",
            "19e3823b22beaaafca00973760a7b196c05f250f"
        ],
        [
            "Require Import compcert.common.Memory.",
            "VernacRequire",
            "1bcc8a48806b43e63931d2d9d9db00d32c04ecd3"
        ],
        [
            "Require Import compcert.common.Memdata.",
            "VernacRequire",
            "88ac96f924863d41527bda2d515ac05a5aa7982a"
        ],
        [
            "Require Import compcert.common.Values.",
            "VernacRequire",
            "775d93857ac31b6b7ea7c564f3005cd032b058e4"
        ],
        [
            "Require Import VST.msl.Coqlib2.",
            "VernacRequire",
            "8c6da0b17b3d2a1d9fdc906278adc35947d0c031"
        ],
        [
            "Require Import VST.msl.eq_dec.",
            "VernacRequire",
            "954e87ce1521f6a3c361de55e2bde6182289034c"
        ],
        [
            "Require Import VST.msl.seplog.",
            "VernacRequire",
            "5f33e89d89b1bb43b458a44d93ed8ebfa4dbe320"
        ],
        [
            "Require Import VST.veric.Memory.",
            "VernacRequire",
            "1dd0c2ef3975bb6f29be59cf2730b2ac319ae653"
        ],
        [
            "Require Import VST.veric.juicy_mem.",
            "VernacRequire",
            "f1eecf3ecf80d465588513629a8e6b5706759bd8"
        ],
        [
            "Require Import VST.veric.juicy_extspec.",
            "VernacRequire",
            "aa1a3d20d1c24cf96c29cb4ebe5c176da44989a3"
        ],
        [
            "Require Import VST.veric.res_predicates.",
            "VernacRequire",
            "768b4200cf583d1957d2bf97075bbe3044eb3f8d"
        ],
        [
            "Require Import VST.sepcomp.extspec.",
            "VernacRequire",
            "24d2770c0d56f347a534d202b9e8a12e01b32823"
        ],
        [
            "Notation val_inject := Val.inject.",
            "VernacSyntacticDefinition",
            "9e383812a0b000b08575baf8908805c88dea182f"
        ],
        [
            "Definition mem_lessdef m1 m2 := (forall b ofs len v, Mem.loadbytes m1 b ofs len = Some v -> exists v', Mem.loadbytes m2 b ofs len = Some v' /\\ list_forall2 memval_lessdef v v' ) /\\ (forall b ofs k p, Mem.perm m1 b ofs k p -> Mem.perm m2 b ofs k p) /\\ (Mem.nextblock m1 <= Mem.nextblock m2)%positive.",
            "VernacDefinition",
            "781d86b809352bd2a33c8218e23015da05638032"
        ],
        [
            "Definition mem_lessalloc m1 m2 := Mem.loadbytes m1 = Mem.loadbytes m2 /\\ Mem.perm m1 = Mem.perm m2 /\\ (Mem.nextblock m1 <= Mem.nextblock m2)%positive.",
            "VernacDefinition",
            "73600c4ed3b862f0fd23268f74d5537570786040"
        ],
        [
            "Definition mem_equiv m1 m2 := Mem.loadbytes m1 = Mem.loadbytes m2 /\\ Mem.perm m1 = Mem.perm m2 /\\ Mem.nextblock m1 = Mem.nextblock m2.",
            "VernacDefinition",
            "cd6859b7b2c487afcf56c43edf42cb5d1954339a"
        ],
        [
            "Lemma perm_order_pp_refl p: Mem.perm_order'' p p.",
            "VernacStartTheoremProof",
            "8693d8d0bf87609c49295b9fd0bcf8a0647f7181"
        ],
        [
            "unfold Mem.perm_order''.",
            "VernacExtend",
            "26440b978cd0163df546184a673065516da2277c"
        ],
        [
            "destruct p; trivial.",
            "VernacExtend",
            "fe0724c9c788d935c679ffa901e4a6459dea594c"
        ],
        [
            "apply perm_refl.",
            "VernacExtend",
            "c9924b8118505b42e4a68782b991f72d43440838"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma same_perm_spec m1 m2 : Mem.perm m1 = Mem.perm m2 <-> (forall k x, access_at m1 x k = access_at m2 x k).",
            "VernacStartTheoremProof",
            "dbecbe8c4f7506c41785e335e61022be8f8d98ed"
        ],
        [
            "split; intros E.",
            "VernacExtend",
            "09f9c984816ae9d64d07261aa98f7c5b5fb61100"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros k (b, ofs).",
            "VernacExtend",
            "5dc7a381bf078d5a41fa65d83d3f732c0b477259"
        ],
        [
            "match type of E with ?f = ?g => assert (S : forall b z k p, f b z k p <-> g b z k p) end.",
            "VernacExtend",
            "64170b8cc987676b234892740035eb6a583b167c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite E; tauto.",
            "VernacExtend",
            "43019c285eebd634cd72494f5dd7c85a9b515374"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "clear E.",
            "VernacExtend",
            "c4264db66fb80327b8fb2d3acc1876cdfc4348d3"
        ],
        [
            "specialize (S b ofs k).",
            "VernacExtend",
            "eb8318202e4b661d59d77cb206cec9f9a5877b41"
        ],
        [
            "revert S.",
            "VernacExtend",
            "d540699222c8a76de7866347fbf964834f4cd3ce"
        ],
        [
            "unfold access_at, Mem.perm.",
            "VernacExtend",
            "182600f16e36f76f13eb041dbf8b5330ffe95108"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "set (o1 := (Mem.mem_access _) !! b ofs k).",
            "VernacExtend",
            "0ed68cb570c71735122bd3e2c9807e8b20405afc"
        ],
        [
            "set (o2 := (Mem.mem_access _) !! b ofs k).",
            "VernacExtend",
            "90ceb4b54ded00568dcee2a476d5cadf76d566fa"
        ],
        [
            "clearbody o1 o2.",
            "VernacExtend",
            "a1e63b87c39a230f7061df38c03c5252623514bb"
        ],
        [
            "intros S.",
            "VernacExtend",
            "fc7e54a1ddfb33bdfa88d5faa18cec6f4a16a7f4"
        ],
        [
            "assert (S' : forall o, Mem.perm_order'' o1 o <-> Mem.perm_order'' o2 o).",
            "VernacExtend",
            "0938fab07670df9870cff8e73cb7166b6c0b03ee"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros [ o | ].",
            "VernacExtend",
            "07377cee473fbf25e205a8b9abccd0c27ea3b714"
        ],
        [
            "apply S.",
            "VernacExtend",
            "cdef47685b1638c7e2e8631367e4440409476a33"
        ],
        [
            "destruct o1 as [o1 | ], o2 as [o2 | ]; split; intro; constructor.",
            "VernacExtend",
            "9eb4d91300151c30a769e3a9272f80761e7f0bb3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "clear S.",
            "VernacExtend",
            "df5886d4404ffade208daecb75f5e7eb2c1e8b49"
        ],
        [
            "destruct (S' o1) as [A _].",
            "VernacExtend",
            "773422e98f36350613c81251ecf9446ecf87b19d"
        ],
        [
            "spec A.",
            "VernacExtend",
            "4b0dddaad5cb15518de5f5e3d70a793dc97b6fa3"
        ],
        [
            "apply perm_order_pp_refl.",
            "VernacExtend",
            "da3255804675de49fe5f4fce825830d591107a1b"
        ],
        [
            "destruct (S' o2) as [_ B].",
            "VernacExtend",
            "95522c16c5f5bb7a7a9b58f0c504d55fbad1d054"
        ],
        [
            "spec B.",
            "VernacExtend",
            "40f3b58d599ff14ee43d97367d48638b140be627"
        ],
        [
            "apply perm_order_pp_refl.",
            "VernacExtend",
            "da3255804675de49fe5f4fce825830d591107a1b"
        ],
        [
            "destruct o1 as [[]|], o2 as [[]|]; auto; simpl in *.",
            "VernacExtend",
            "03a0a5ab142152f714cb566aa81d1358adb91c05"
        ],
        [
            "all: try solve [inv A; inv B; auto].",
            "VernacExtend",
            "fdacd4fbf437faa96923e6366fac3aca484b23a4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "extensionality b ofs k.",
            "VernacExtend",
            "69c179156ab0520deadc4d8e859170243f821320"
        ],
        [
            "specialize (E k (b, ofs)).",
            "VernacExtend",
            "75b7516d25c2f7a89836e31d63e69936e4c8a75b"
        ],
        [
            "unfold access_at in *.",
            "VernacExtend",
            "f8894db69be1295c740080edb7a3bba5fe01c428"
        ],
        [
            "simpl in E.",
            "VernacExtend",
            "f1922fc7926b9299c9e76d37c311dafc4bb74a16"
        ],
        [
            "unfold Mem.perm in *.",
            "VernacExtend",
            "185fd995587bc0033441934bb3609f106f90e1b2"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma same_loadbytes_spec m1 m2 : Mem.perm m1 = Mem.perm m2 -> Mem.loadbytes m1 = Mem.loadbytes m2 <-> (forall x, Mem.perm_order' (access_at m1 x Cur) Readable -> contents_at m1 x = contents_at m2 x).",
            "VernacStartTheoremProof",
            "e06ccbbd9a4e9ce848df2ad68e268487df15379c"
        ],
        [
            "intros P; split; intros E.",
            "VernacExtend",
            "9de1f61ff028fdd42427f30c7e8fa485e5c86e98"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (b, ofs) R.",
            "VernacExtend",
            "c7f1266277be2b6de1903ec3ee35c92e217a54d5"
        ],
        [
            "Transparent Mem.loadbytes.",
            "VernacSetOpacity",
            "7bfc8c9becfa2cd14c4781f54cc6906b179b9379"
        ],
        [
            "unfold Mem.loadbytes in *.",
            "VernacExtend",
            "21025b04f7828a85b49f6b365b5779e214b0dfb7"
        ],
        [
            "apply equal_f with (x := b) in E.",
            "VernacExtend",
            "89690e100750f55d83bfd2939b3f301669c6cd50"
        ],
        [
            "apply equal_f with (x := ofs) in E.",
            "VernacExtend",
            "f704b09e7a9aec4bef7e2a226e95d17dac047684"
        ],
        [
            "apply equal_f with (x := 1) in E.",
            "VernacExtend",
            "c9187054a2d297c1598be614d29b6ccb714b3ea7"
        ],
        [
            "unfold access_at in *.",
            "VernacExtend",
            "f8894db69be1295c740080edb7a3bba5fe01c428"
        ],
        [
            "if_tac [p1|np1] in E; if_tac in E; try discriminate.",
            "VernacExtend",
            "fe00ad376dfa07cac78bae2dd0bebeb002be7d02"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in E.",
            "VernacExtend",
            "f1922fc7926b9299c9e76d37c311dafc4bb74a16"
        ],
        [
            "unfold contents_at in *.",
            "VernacExtend",
            "3a93fdfb33e83073a92d73f0f7ce8a74b1920038"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct np1.",
            "VernacExtend",
            "7fa55dc4fb76afd5a418b42b496a55baa4ce18f2"
        ],
        [
            "intros ofs1 r1.",
            "VernacExtend",
            "ff176039702f6d0b921dbddfeb56b59e06c9b3e1"
        ],
        [
            "cut (ofs1 = ofs).",
            "VernacExtend",
            "c4aced3041449f265cdcc867cbeb9805e5f1da83"
        ],
        [
            "intros <-.",
            "VernacExtend",
            "f92abb181e804805d99c6631ed9d612184f20066"
        ],
        [
            "apply R.",
            "VernacExtend",
            "e49a822220e5f43bbb948bf7aa98fe31ed2e7f13"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "extensionality b ofs k.",
            "VernacExtend",
            "69c179156ab0520deadc4d8e859170243f821320"
        ],
        [
            "unfold Mem.loadbytes in *.",
            "VernacExtend",
            "21025b04f7828a85b49f6b365b5779e214b0dfb7"
        ],
        [
            "if_tac [p1|np1]; if_tac [p2|np2].",
            "VernacExtend",
            "b1b92e7b5f03a30fd5470f5f46498d9d6f390ac7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (zle 0 k).",
            "VernacExtend",
            "6285ac02f49c7634ba5d2f593d24b6aa34b537b9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "clear p2.",
            "VernacExtend",
            "c6f965bcc878affff2f95d2d9349ea5aebaca479"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite <-(Coqlib.nat_of_Z_eq k) in p1.",
            "VernacExtend",
            "df7a31020bebce86439d07b0638c3b4309fc42c9"
        ],
        [
            "2:omega.",
            "VernacExtend",
            "d479151185a43f07b17d29025d6b6de4845088dc"
        ],
        [
            "revert p1.",
            "VernacExtend",
            "71b14467193e60b4322308ce7d1aa5e56daf1690"
        ],
        [
            "generalize (nat_of_Z k); clear k l; intros n.",
            "VernacExtend",
            "a66999a9227cc22ad57ef2de612adbab7e2658c5"
        ],
        [
            "revert ofs.",
            "VernacExtend",
            "9f95868fe27ff155c9789f43084a19336c0297ad"
        ],
        [
            "induction n; auto; intros ofs p.",
            "VernacExtend",
            "a082e1453ecf42217799a88f5ca8ade596856884"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "--",
            "VernacBullet",
            "ba168e40f4056f7e624b4823d483fd7320648256"
        ],
        [
            "specialize (E (b, ofs)).",
            "VernacExtend",
            "28c496e4cd8380a7f0300b8b80a2ae01ceb75ac8"
        ],
        [
            "unfold contents_at in *.",
            "VernacExtend",
            "3a93fdfb33e83073a92d73f0f7ce8a74b1920038"
        ],
        [
            "simpl in E.",
            "VernacExtend",
            "f1922fc7926b9299c9e76d37c311dafc4bb74a16"
        ],
        [
            "apply E.",
            "VernacExtend",
            "6ecac783d3ef00000b718b97b6b2f72177f434fe"
        ],
        [
            "apply p.",
            "VernacExtend",
            "5d7bd2c81be5e2631c5ccceda06a4542d9bac4b6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "zify; omega.",
            "VernacExtend",
            "5fb0df05710c307ca01829a575fcf81498a16c8a"
        ],
        [
            "--",
            "VernacBullet",
            "ba168e40f4056f7e624b4823d483fd7320648256"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "intros ofs' r'.",
            "VernacExtend",
            "8a551bab9cbc7f91edaebfc426fd11887088a956"
        ],
        [
            "apply p.",
            "VernacExtend",
            "5d7bd2c81be5e2631c5ccceda06a4542d9bac4b6"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite nat_of_Z_neg.",
            "VernacExtend",
            "3ead2a90efc24c0a3e10c59d539998583830419f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct np2.",
            "VernacExtend",
            "0685e070a14554a4db0c42e7e32a3b041e24ef19"
        ],
        [
            "unfold Mem.range_perm in *.",
            "VernacExtend",
            "4918af03718b50bdebb7df5b4a58fd1cf06f2268"
        ],
        [
            "rewrite <-P.",
            "VernacExtend",
            "341ee036c8c0ea29ce611d79f005184467058155"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct np1.",
            "VernacExtend",
            "7fa55dc4fb76afd5a418b42b496a55baa4ce18f2"
        ],
        [
            "unfold Mem.range_perm in *.",
            "VernacExtend",
            "4918af03718b50bdebb7df5b4a58fd1cf06f2268"
        ],
        [
            "rewrite P.",
            "VernacExtend",
            "a68444f3ff5a99dd68a5269da7bfb78567ba4ea2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mem_equiv' m1 m2 := (forall x, Mem.perm_order' (access_at m1 x Cur) Readable -> contents_at m1 x = contents_at m2 x) /\\ Mem.perm m1 = Mem.perm m2 /\\ Mem.nextblock m1 = Mem.nextblock m2.",
            "VernacDefinition",
            "74cf40391fd7e413ce0e72ad69736815c3c86aa4"
        ],
        [
            "Definition mem_lessalloc' m1 m2 := (forall x, Mem.perm_order' (access_at m1 x Cur) Readable -> contents_at m1 x = contents_at m2 x) /\\ Mem.perm m1 = Mem.perm m2 /\\ (Mem.nextblock m1 <= Mem.nextblock m2)%positive.",
            "VernacDefinition",
            "3a6e9f455474ad43021d2256751bff5f27cf39cd"
        ],
        [
            "Lemma mem_equiv'_spec m1 m2 : mem_equiv m1 m2 <-> mem_equiv' m1 m2.",
            "VernacStartTheoremProof",
            "8376422d2a630e0469510fd41608b367621fa579"
        ],
        [
            "split; intros (? & ? & ?); repeat split; auto.",
            "VernacExtend",
            "12999dad512e5c7b8610b306f29e394dee33d50e"
        ],
        [
            "rewrite <-same_loadbytes_spec; auto.",
            "VernacExtend",
            "af90b97ae0f579d1a1a86c59171a9b0b755858b6"
        ],
        [
            "rewrite same_loadbytes_spec; auto.",
            "VernacExtend",
            "968b90a53041e28355f9aa64ebffb83661f947bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_lessalloc'_spec m1 m2 : mem_lessalloc m1 m2 <-> mem_lessalloc' m1 m2.",
            "VernacStartTheoremProof",
            "a6144b7544bcd2a56ee55798021b67de4987bcaf"
        ],
        [
            "split; intros (? & ? & ?); repeat split; auto.",
            "VernacExtend",
            "12999dad512e5c7b8610b306f29e394dee33d50e"
        ],
        [
            "rewrite <-same_loadbytes_spec; auto.",
            "VernacExtend",
            "af90b97ae0f579d1a1a86c59171a9b0b755858b6"
        ],
        [
            "rewrite same_loadbytes_spec; auto.",
            "VernacExtend",
            "968b90a53041e28355f9aa64ebffb83661f947bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_inject_antisym v1 v2 : val_inject inject_id v1 v2 -> val_inject inject_id v2 v1 -> v1 = v2.",
            "VernacStartTheoremProof",
            "c6a9dd8cc9d6a54f2ccbad01196dd3b32390767c"
        ],
        [
            "destruct v1, v2; intros A B; auto.",
            "VernacExtend",
            "ea3a8513880237e05ee9ed6a40fb56977ad118dc"
        ],
        [
            "all: inversion A; subst; inversion B; try subst; try congruence.",
            "VernacExtend",
            "d8ebd8ef2dbd34435fb67720605f8f65eb329664"
        ],
        [
            "unfold inject_id in *.",
            "VernacExtend",
            "34a657406c1bfccb88c896fabefacf07ca3e18c2"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "replace delta with 0%Z by congruence.",
            "VernacExtend",
            "e146d4ead16cc0a29d01be8e18e8be11a867db49"
        ],
        [
            "symmetry; apply Ptrofs.add_zero.",
            "VernacExtend",
            "85e493f04a3fc237c1ed374fc47a8404719910e2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memval_lessdef_antisym v1 v2 : memval_lessdef v1 v2 -> memval_lessdef v2 v1 -> v1 = v2.",
            "VernacStartTheoremProof",
            "888f4fa9c8fa696b4ed7da8a212cefddc0757165"
        ],
        [
            "destruct v1, v2; intros A B; auto.",
            "VernacExtend",
            "ea3a8513880237e05ee9ed6a40fb56977ad118dc"
        ],
        [
            "all: inversion A; subst; inversion B; subst; try congruence.",
            "VernacExtend",
            "bc6be27e7ec6e1d3807228eb8d74138bbbddad08"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply val_inject_antisym; auto.",
            "VernacExtend",
            "e596a1391be5284e72d6003c81651e03fb520b3a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_lessdef_equiv m1 m2 : mem_lessdef m1 m2 -> mem_lessdef m2 m1 -> mem_equiv m1 m2.",
            "VernacStartTheoremProof",
            "15ecb61fbfa769038e79f612bde30fb9ab7136f4"
        ],
        [
            "intros (L1 & P1 & N1) (L2 & P2 & N2); repeat split.",
            "VernacExtend",
            "6003fc7c9f10c60422b60c2911ee1c1714c1c917"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "clear -L1 L2.",
            "VernacExtend",
            "d09c33e3ef46dd94862cda6f7c7f90eafed90b86"
        ],
        [
            "extensionality b ofs z.",
            "VernacExtend",
            "a785239b4579a036b76b1ef367092853fca0ea4e"
        ],
        [
            "match goal with |- ?a = ?b => destruct a as [v1|] eqn:E1; destruct b as [v2|] eqn:E2 end; try destruct (L1 _ _ _ _ E1) as (v2' & E1' & l1); try destruct (L2 _ _ _ _ E2) as (v1' & E2' & l2); try congruence.",
            "VernacExtend",
            "3078aaa0821ba61fb40cd8a0ba2bdf486af31343"
        ],
        [
            "assert (v1' = v1) by congruence; assert (v2' = v2) by congruence; subst; f_equal.",
            "VernacExtend",
            "1f5f2971329f2c662d0aa9fdb2ec92a0d5f986f2"
        ],
        [
            "clear -l1 l2.",
            "VernacExtend",
            "a6570b9ef611474f6b490b005d3be3a170e9ddf0"
        ],
        [
            "revert v2 l1 l2; induction v1; intros v2 l1 l2; inversion l1; subst; auto.",
            "VernacExtend",
            "4d16f61a0ad10e49c0ce8fa21da83dfee0b1426b"
        ],
        [
            "inversion l2; subst.",
            "VernacExtend",
            "71ae329aef09016746be06aac5d6adb8b7db532a"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "apply memval_lessdef_antisym; auto.",
            "VernacExtend",
            "522a6d53cd15fabd39da99abd969d2ef6933c7f2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "repeat extensionality.",
            "VernacExtend",
            "962cd7669a6a8273920f125b4d2efa309688a7f2"
        ],
        [
            "apply prop_ext; split; auto.",
            "VernacExtend",
            "d189794591747137884a583f0ab35e2867119868"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "cut (Z.pos (Mem.nextblock m2) = Z.pos (Mem.nextblock m1)).",
            "VernacExtend",
            "8569fef448ba8548c78bc43154bb3940f64d8db3"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_equiv_refl m : mem_equiv m m.",
            "VernacStartTheoremProof",
            "153e24df89a4bdc84ecd343ced2c9285b8367555"
        ],
        [
            "split3; hnf; auto.",
            "VernacExtend",
            "70f09c78a71e5b11d956f051e6b6283e994fc4a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_lessalloc_refl m : mem_lessalloc m m.",
            "VernacStartTheoremProof",
            "f8bb0add160e45d65e3edd29a6795d8e38c68ecc"
        ],
        [
            "split3; auto.",
            "VernacExtend",
            "5198a06904f9188b673c83129393f27ab50f92b2"
        ],
        [
            "apply Ple_refl.",
            "VernacExtend",
            "0db71fbfe63d06b179db3d07fbb0dd1fc300f9f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_equiv_refl' m m' : m = m' -> mem_equiv m m'.",
            "VernacStartTheoremProof",
            "fbac7d870fe37c9ec1f54ebcc76b9a1a56969259"
        ],
        [
            "intros <-; apply mem_equiv_refl.",
            "VernacExtend",
            "ded13ba2fea001be152a85372569599c9e8a12ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_lessalloc_refl' m m' : m = m' -> mem_lessalloc m m'.",
            "VernacStartTheoremProof",
            "d00b685c90d407c9e496b322be2e4b55e8e9011c"
        ],
        [
            "intros <-; apply mem_lessalloc_refl.",
            "VernacExtend",
            "c73e7a4e85d347ca4d1b3524dba5f30d8321cdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_equiv_sym m1 m2 : mem_equiv m1 m2 -> mem_equiv m2 m1.",
            "VernacStartTheoremProof",
            "3276c69faa41fbd52af8bd0b875191b8360be9aa"
        ],
        [
            "intros []; split; intuition.",
            "VernacExtend",
            "d1d6585ea0072a7ad41ca12588c3f07ee4d7f8b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_equiv_trans m1 m2 m3 : mem_equiv m1 m2 -> mem_equiv m2 m3 -> mem_equiv m1 m3.",
            "VernacStartTheoremProof",
            "41d9b17f18f8c0a9eb095d632b39a01745255df4"
        ],
        [
            "unfold mem_equiv in *.",
            "VernacExtend",
            "434d59fb3189dae08d4f032381ace47bd63cbb7a"
        ],
        [
            "intros (-> & -> & ->) (-> & -> & ->); auto.",
            "VernacExtend",
            "3487317d6435ace7c478ca702022ea7efc7e818b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_lessalloc_trans m1 m2 m3 : mem_lessalloc m1 m2 -> mem_lessalloc m2 m3 -> mem_lessalloc m1 m3.",
            "VernacStartTheoremProof",
            "3d01e912e797e1173673e9c6d0cf57edcd8f197b"
        ],
        [
            "unfold mem_lessalloc in *.",
            "VernacExtend",
            "e959fc842049a7e1b6721f757d754c007e580ba6"
        ],
        [
            "intros (-> & -> & l) (-> & -> & l'); split; auto.",
            "VernacExtend",
            "918584fa8ee1d8279c8afc119bd6c5bf7efebc93"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "eapply Ple_trans; eauto.",
            "VernacExtend",
            "4f7cbd975fc75a24ab34a1c0c5e0645767893c9a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_equiv_lessalloc m1 m2 : mem_equiv m1 m2 -> mem_lessalloc m1 m2.",
            "VernacStartTheoremProof",
            "58fe61d8be43f88e936094baee0e05aa3c2c4bca"
        ],
        [
            "intros (L1 & P1 & N1); repeat split; auto.",
            "VernacExtend",
            "c7203ae78aff2f7482403aef739924ce723fd8ca"
        ],
        [
            "rewrite N1; auto.",
            "VernacExtend",
            "b6e8cba85f0ce6793990c109dabfe4b385624ea8"
        ],
        [
            "apply Ple_refl.",
            "VernacExtend",
            "0db71fbfe63d06b179db3d07fbb0dd1fc300f9f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_lessalloc_lessdef m1 m2 : mem_lessalloc m1 m2 -> mem_lessdef m1 m2.",
            "VernacStartTheoremProof",
            "22ed9a3f7a5b207884537117b0f6f8a21835c1b3"
        ],
        [
            "intros (L1 & P1 & N1); repeat split.",
            "VernacExtend",
            "ae31e1cd470379083f2c52f99759cf14a1044517"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite L1; auto.",
            "VernacExtend",
            "8eec9370089c6b3cf6390ce46617b875c74c4683"
        ],
        [
            "intros b ofs len v H.",
            "VernacExtend",
            "48c28c26d51e042666c47485da61c3e85fab3d1f"
        ],
        [
            "exists v; intuition.",
            "VernacExtend",
            "ca2a59abfe1ee17a6c343e5170b499a5ba169d6f"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "induction v; constructor; auto.",
            "VernacExtend",
            "287f3631b83c8de203bb78dadf2e34ef678bb477"
        ],
        [
            "apply memval_lessdef_refl.",
            "VernacExtend",
            "a5c3fa3febe04a84b98f418233d1314eaaa49816"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite P1; auto.",
            "VernacExtend",
            "579a1329b60b684713396b14b5059002babe7a05"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_equiv_lessdef m1 m2 : mem_equiv m1 m2 -> mem_lessdef m1 m2.",
            "VernacStartTheoremProof",
            "fa35ae3072595274939d04ba4d7da54579f970ef"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "apply mem_lessalloc_lessdef, mem_equiv_lessalloc, H.",
            "VernacExtend",
            "1e345b3407a8fe610a8633e9972def4d94faf2aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_lessdef_valid_pointer: forall m1 m2 b z, mem_lessdef m1 m2 -> Mem.valid_pointer m1 b z = true -> Mem.valid_pointer m2 b z = true.",
            "VernacStartTheoremProof",
            "ff86967ddc6ddbf9319d4ba396acb9b1aa9f2588"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [? [? ?]].",
            "VernacExtend",
            "7b80d34d0c991fb27b92313d17ea8675f1173807"
        ],
        [
            "unfold Mem.valid_pointer in *.",
            "VernacExtend",
            "d382883a6168cc42ff7289ec99fd77642ca99047"
        ],
        [
            "destruct (Mem.perm_dec m1 b z Cur Nonempty); inv H0.",
            "VernacExtend",
            "42ae04b4e258bd97bd2ee62a54ed35fc5ec62331"
        ],
        [
            "destruct (Mem.perm_dec m2 b z Cur Nonempty); try reflexivity.",
            "VernacExtend",
            "44eff92d743cd4ed8d244c1d633f7364c366ae7b"
        ],
        [
            "contradiction n.",
            "VernacExtend",
            "1749fecd765c92d2611e829dc09c198dbc050cdd"
        ],
        [
            "clear n.",
            "VernacExtend",
            "950078f0511238b7bf11b5533c9ffd133a02ab04"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_lessdef_weak_valid_pointer: forall m1 m2 b z, mem_lessdef m1 m2 -> Mem.weak_valid_pointer m1 b z = true -> Mem.weak_valid_pointer m2 b z = true.",
            "VernacStartTheoremProof",
            "733acaddc4e37e78d3e47c2b1c995e88f3786397"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Mem.weak_valid_pointer in *.",
            "VernacExtend",
            "d34725a2ebb536ec02498fb68c74d4ef68f8bd6e"
        ],
        [
            "rewrite orb_true_iff in *.",
            "VernacExtend",
            "e939ff2ee07493664315eafd2e01dd9a5229f9c4"
        ],
        [
            "destruct H0; [left|right]; eapply mem_lessdef_valid_pointer; eauto.",
            "VernacExtend",
            "fa705a9f4c015f703590ce9308f60ebb2ca7d1e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac memval_lessdef_tac := match goal with | H: memval_lessdef ?a ?b |- _ => destruct a,b; inv H | H: list_forall2 _ ?a ?b |- _ => destruct a,b; inv H | H: proj_bytes ?a = Some _ |- _ => match a with context [nil] => inv H end end; try discriminate; try solve [unfold decode_val; simpl; auto] .",
            "VernacExtend",
            "7919d39f156b086d6bceb4488d8f7346700fff81"
        ],
        [
            "Lemma mem_lessdef_proj_bytes: forall vl vl', list_forall2 memval_lessdef vl vl' -> forall bl, proj_bytes vl = Some bl -> proj_bytes vl' = Some bl.",
            "VernacStartTheoremProof",
            "3e1466797dd68734ee5066c594a748997109a323"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert bl H0; induction H; intros; auto.",
            "VernacExtend",
            "2e2b9def15b0d37b431181604501b7fe411f1ad6"
        ],
        [
            "destruct bl0; inv H1.",
            "VernacExtend",
            "247dda22830cae654de1e814f6fdf9ff51ee17d8"
        ],
        [
            "destruct a1; auto.",
            "VernacExtend",
            "1041ee1ff7bdfcf75f514630563e0bc35313f866"
        ],
        [
            "inv H3.",
            "VernacExtend",
            "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
        ],
        [
            "destruct (proj_bytes al) eqn:?H; inv H3.",
            "VernacExtend",
            "8586179fc919cfb59159f30b3f4cb14a221b4e95"
        ],
        [
            "inv H3.",
            "VernacExtend",
            "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
        ],
        [
            "destruct a1; try discriminate.",
            "VernacExtend",
            "4fdacd6318627493b4a4e694af03a52f32ef2dd2"
        ],
        [
            "destruct (proj_bytes al) eqn:?H; inv H3.",
            "VernacExtend",
            "8586179fc919cfb59159f30b3f4cb14a221b4e95"
        ],
        [
            "specialize (IHlist_forall2 _ (eq_refl _)).",
            "VernacExtend",
            "b8c1bb304cc1efaa6cabf4b65d5dfd00b1e8af34"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHlist_forall2.",
            "VernacExtend",
            "9989dbcd1f4550e3cb0ff883471f77356927f92b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_lessdef_decode_val: forall ch vl vl', list_forall2 memval_lessdef vl vl' -> Val.lessdef (decode_val ch vl) (decode_val ch vl').",
            "VernacStartTheoremProof",
            "652292ec7ea98020cbad4cd9a537b6f14c928daf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold decode_val.",
            "VernacExtend",
            "10dec25d4dfd228a146df62531c0fff86fbbb0a9"
        ],
        [
            "destruct (proj_bytes vl) eqn:?H.",
            "VernacExtend",
            "0db4cadbd84d7c1c9ce40ba84acb48c7ad69f799"
        ],
        [
            "2: {",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "unfold proj_value.",
            "VernacExtend",
            "97b7d05b29cbf6194e88297fde1d5ffbb1fde2eb"
        ],
        [
            "destruct ch eqn:Hch; auto.",
            "VernacExtend",
            "178420f2729ad259be7e73d86e60d6df9a9928de"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct Archi.ptr64; auto.",
            "VernacExtend",
            "a9cd18b10a2cc14dcbdb18cf89de664cd0fb419f"
        ],
        [
            "destruct vl; auto.",
            "VernacExtend",
            "5e0d7b7ee7cb863a572a97c855ca63efe95a2110"
        ],
        [
            "destruct m; auto.",
            "VernacExtend",
            "a8b5a8c4be5c2b48bdc511e0732df482c9073b97"
        ],
        [
            "match type of Hch with | ch = Mint64 => destruct (check_value (size_quantity_nat Q64) v Q64 (Fragment v q n :: vl)) eqn:?; auto | ch = Mint32 => destruct (check_value (size_quantity_nat Q32) v Q32 (Fragment v q n :: vl)) eqn:?; auto end.",
            "VernacExtend",
            "5cb57dfefe0c7a21af9030f0375da36c482124c2"
        ],
        [
            "revert Hch.",
            "VernacExtend",
            "258c9025304223cd1ec0eb8483fea59396bd91e0"
        ],
        [
            "destruct vl'; inv H.",
            "VernacExtend",
            "23f687ba72a0882232502e4763ff9369e6c60f5e"
        ],
        [
            "inv H4.",
            "VernacExtend",
            "f5fbbd659e4642cab66975bb4756634e17e3a560"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold proj_bytes.",
            "VernacExtend",
            "624e2bd5b6689d86b88dee17575fa78704479f2a"
        ],
        [
            "destruct (Val.eq v Vundef).",
            "VernacExtend",
            "289bedbebe2d055fb91d354f74eb449540a630e2"
        ],
        [
            "subst v.",
            "VernacExtend",
            "a1d4af197c860364e3e3c9b734079b6e191cf10c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "match type of Hch with | ch = Mint64 => assert (H9: check_value (size_quantity_nat Q64) v2 Q64 (Fragment v2 q n :: vl') = true) | ch = Mint32 => assert (H9: check_value (size_quantity_nat Q32) v2 Q32 (Fragment v2 q n :: vl') = true) end.",
            "VernacExtend",
            "37c019662c95c47f66afabdc4339e4967adbcb24"
        ],
        [
            "2: rewrite H9; apply Val.load_result_lessdef; apply val_inject_id; auto.",
            "VernacExtend",
            "ffd216aded5c0c561d18fbac0b405fb496c80661"
        ],
        [
            "assert (v2=v).",
            "VernacExtend",
            "df2ac9faa55ae7441cc87b58e8e9c1896f72378e"
        ],
        [
            "apply val_inject_id in H5.",
            "VernacExtend",
            "a12cceccbb8c1158f293a7a1913e44ad666a69d9"
        ],
        [
            "destruct v; try solve [contradiction n0; auto]; inv H5; auto.",
            "VernacExtend",
            "0a32e528c8efa9d806c0ac8dfa2d04d4e3cb96b0"
        ],
        [
            "subst v2.",
            "VernacExtend",
            "9d95b8efc73d2e0b401b134842ed5004703a309c"
        ],
        [
            "clear H5.",
            "VernacExtend",
            "27e7490763b843a17bd590552e39601d3a9ed430"
        ],
        [
            "eapply (check_value_inject inject_id); try eassumption.",
            "VernacExtend",
            "a9b7a180f9c51b0a193a149ee3848676951c224d"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "apply val_inject_id; apply Val.lessdef_refl.",
            "VernacExtend",
            "03b7459c7b1df41c0d46d814845f935bb45c0ca1"
        ],
        [
            "apply val_inject_id; apply Val.lessdef_refl.",
            "VernacExtend",
            "03b7459c7b1df41c0d46d814845f935bb45c0ca1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct vl; auto.",
            "VernacExtend",
            "5e0d7b7ee7cb863a572a97c855ca63efe95a2110"
        ],
        [
            "destruct m; auto.",
            "VernacExtend",
            "a8b5a8c4be5c2b48bdc511e0732df482c9073b97"
        ],
        [
            "destruct (check_value (size_quantity_nat Q32) v Q32 (Fragment v q n :: vl)) eqn:?; auto.",
            "VernacExtend",
            "a232bd8b963f860f7137039c8013726c44ca0618"
        ],
        [
            "destruct vl'; inv H.",
            "VernacExtend",
            "23f687ba72a0882232502e4763ff9369e6c60f5e"
        ],
        [
            "unfold proj_bytes.",
            "VernacExtend",
            "624e2bd5b6689d86b88dee17575fa78704479f2a"
        ],
        [
            "inv H4.",
            "VernacExtend",
            "f5fbbd659e4642cab66975bb4756634e17e3a560"
        ],
        [
            "destruct (Val.eq v Vundef).",
            "VernacExtend",
            "289bedbebe2d055fb91d354f74eb449540a630e2"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (H9: check_value (size_quantity_nat Q32) v2 Q32 (Fragment v2 q n :: vl') = true).",
            "VernacExtend",
            "723f2dfbb98fef371f9f12ede7592be811f5bdc7"
        ],
        [
            "2: rewrite H9; apply Val.load_result_lessdef; apply val_inject_id; auto.",
            "VernacExtend",
            "ffd216aded5c0c561d18fbac0b405fb496c80661"
        ],
        [
            "assert (v2=v).",
            "VernacExtend",
            "df2ac9faa55ae7441cc87b58e8e9c1896f72378e"
        ],
        [
            "apply val_inject_id in H5.",
            "VernacExtend",
            "a12cceccbb8c1158f293a7a1913e44ad666a69d9"
        ],
        [
            "destruct v; try solve [contradiction n0; auto]; inv H5; auto.",
            "VernacExtend",
            "0a32e528c8efa9d806c0ac8dfa2d04d4e3cb96b0"
        ],
        [
            "subst v2.",
            "VernacExtend",
            "9d95b8efc73d2e0b401b134842ed5004703a309c"
        ],
        [
            "clear H5.",
            "VernacExtend",
            "27e7490763b843a17bd590552e39601d3a9ed430"
        ],
        [
            "eapply (check_value_inject inject_id); try eassumption.",
            "VernacExtend",
            "a9b7a180f9c51b0a193a149ee3848676951c224d"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "apply val_inject_id; apply Val.lessdef_refl.",
            "VernacExtend",
            "03b7459c7b1df41c0d46d814845f935bb45c0ca1"
        ],
        [
            "apply val_inject_id; apply Val.lessdef_refl.",
            "VernacExtend",
            "03b7459c7b1df41c0d46d814845f935bb45c0ca1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct vl; auto.",
            "VernacExtend",
            "5e0d7b7ee7cb863a572a97c855ca63efe95a2110"
        ],
        [
            "destruct m; auto.",
            "VernacExtend",
            "a8b5a8c4be5c2b48bdc511e0732df482c9073b97"
        ],
        [
            "destruct (check_value (size_quantity_nat Q64) v Q64 (Fragment v q n :: vl)) eqn:?; auto.",
            "VernacExtend",
            "cdf03f15412a6646b934427ac21233aef8ceecb8"
        ],
        [
            "destruct vl'; inv H.",
            "VernacExtend",
            "23f687ba72a0882232502e4763ff9369e6c60f5e"
        ],
        [
            "unfold proj_bytes.",
            "VernacExtend",
            "624e2bd5b6689d86b88dee17575fa78704479f2a"
        ],
        [
            "inv H4.",
            "VernacExtend",
            "f5fbbd659e4642cab66975bb4756634e17e3a560"
        ],
        [
            "destruct (Val.eq v Vundef).",
            "VernacExtend",
            "289bedbebe2d055fb91d354f74eb449540a630e2"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (H9: check_value (size_quantity_nat Q64) v2 Q64 (Fragment v2 q n :: vl') = true).",
            "VernacExtend",
            "1798fce76d40d6d58213702c2ba3f15f0c278bee"
        ],
        [
            "2: rewrite H9; apply Val.load_result_lessdef; apply val_inject_id; auto.",
            "VernacExtend",
            "ffd216aded5c0c561d18fbac0b405fb496c80661"
        ],
        [
            "assert (v2=v).",
            "VernacExtend",
            "df2ac9faa55ae7441cc87b58e8e9c1896f72378e"
        ],
        [
            "apply val_inject_id in H5.",
            "VernacExtend",
            "a12cceccbb8c1158f293a7a1913e44ad666a69d9"
        ],
        [
            "destruct v; try solve [contradiction n0; auto]; inv H5; auto.",
            "VernacExtend",
            "0a32e528c8efa9d806c0ac8dfa2d04d4e3cb96b0"
        ],
        [
            "subst v2.",
            "VernacExtend",
            "9d95b8efc73d2e0b401b134842ed5004703a309c"
        ],
        [
            "clear H5.",
            "VernacExtend",
            "27e7490763b843a17bd590552e39601d3a9ed430"
        ],
        [
            "eapply (check_value_inject inject_id); try eassumption.",
            "VernacExtend",
            "a9b7a180f9c51b0a193a149ee3848676951c224d"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "apply val_inject_id; apply Val.lessdef_refl.",
            "VernacExtend",
            "03b7459c7b1df41c0d46d814845f935bb45c0ca1"
        ],
        [
            "apply val_inject_id; apply Val.lessdef_refl.",
            "VernacExtend",
            "03b7459c7b1df41c0d46d814845f935bb45c0ca1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite (mem_lessdef_proj_bytes _ _ H _ H0).",
            "VernacExtend",
            "5286ee5e8892024ac4b14723e49ebfdfa5e3eefc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_lessdef_loadbytes: forall m1 m2, mem_lessdef m1 m2 -> forall b z n v1, Mem.loadbytes m1 b z n = Some v1 -> exists v2, list_forall2 memval_lessdef v1 v2 /\\ Mem.loadbytes m2 b z n = Some v2.",
            "VernacStartTheoremProof",
            "8b934477db37de4f2d2a004063448f2182b3c817"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [? [? ?]].",
            "VernacExtend",
            "7b80d34d0c991fb27b92313d17ea8675f1173807"
        ],
        [
            "apply H in H0.",
            "VernacExtend",
            "3b12de80516a2aa60cdde675feacb2e18e944fd4"
        ],
        [
            "destruct H0 as [v2 [? ?]]; exists v2; split; auto.",
            "VernacExtend",
            "4221736ed44f27ff361f6913703f5c6268ef8f22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_pointer_lessalloc {m m2} (M:mem_lessalloc m m2): Mem.valid_pointer m = Mem.valid_pointer m2.",
            "VernacStartTheoremProof",
            "d1488b93aa2b3e0dc65bc6a6879c159bf556c5c6"
        ],
        [
            "unfold Mem.valid_pointer.",
            "VernacExtend",
            "dd8b2040e8e6b4d6fe23b0bf1a035e9b1e19c5ce"
        ],
        [
            "destruct M as [M1 [M2 M3]].",
            "VernacExtend",
            "33c68408bb65ec62c08235a9f7a5c45aa6f121ec"
        ],
        [
            "extensionality b.",
            "VernacExtend",
            "f1e62492013ea643cd7f5fa8e4bf08e95adc0278"
        ],
        [
            "extensionality i.",
            "VernacExtend",
            "8733cdd792af6107213a34f779c8c3d7eba32943"
        ],
        [
            "destruct (Mem.perm_dec m b i Cur Nonempty); destruct (Mem.perm_dec m2 b i Cur Nonempty); trivial.",
            "VernacExtend",
            "0dc04b77377550fd9481ff2a06f9bba32728b375"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "rewrite M2 in p.",
            "VernacExtend",
            "58f9d6c330f888b7efbd8be8d2158093948b5cd3"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "rewrite M2 in n.",
            "VernacExtend",
            "a5e845325a9691b4371d59809349238ef86be02f"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_valid_pointer_lessalloc {m m2} (M:mem_lessalloc m m2): Mem.weak_valid_pointer m = Mem.weak_valid_pointer m2.",
            "VernacStartTheoremProof",
            "30a69c494540e339a497b0d70be3bff257915a80"
        ],
        [
            "unfold Mem.weak_valid_pointer.",
            "VernacExtend",
            "7c36a5801ff4aaa3a924e09dbc7c860925ea45aa"
        ],
        [
            "extensionality b.",
            "VernacExtend",
            "f1e62492013ea643cd7f5fa8e4bf08e95adc0278"
        ],
        [
            "extensionality i.",
            "VernacExtend",
            "8733cdd792af6107213a34f779c8c3d7eba32943"
        ],
        [
            "rewrite (valid_pointer_lessalloc M); trivial.",
            "VernacExtend",
            "24fbac7cdc469724e29dfbff0abf1f58811443c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition juicy_mem_equiv jm1 jm2 := mem_equiv (m_dry jm1) (m_dry jm2) /\\ m_phi jm1 = m_phi jm2.",
            "VernacDefinition",
            "b3924c2aa594b486bfd9923d7ace05105131f9b5"
        ],
        [
            "Definition juicy_mem_lessdef jm1 jm2 := mem_lessdef (m_dry jm1) (m_dry jm2) /\\ m_phi jm1 = m_phi jm2.",
            "VernacDefinition",
            "57ec703c07add6b6cd4031dc50cbc59144145716"
        ],
        [
            "Definition juicy_mem_lessalloc jm1 jm2 := mem_lessdef (m_dry jm1) (m_dry jm2) /\\ m_phi jm1 = m_phi jm2.",
            "VernacDefinition",
            "4706e1580ac73c6c6778250fd05d2d0ac120850a"
        ],
        [
            "Ltac sync D := first [ split; [destruct D as [D _] | destruct D as [_ D]] | destruct D as [|D]; [left|right] | let x := fresh in destruct D as (x, D); exists x | let x := fresh in intro x; specialize (D x) ].",
            "VernacExtend",
            "eab6aedcd6a64c30b46f0d79009c0e4217f53f21"
        ],
        [
            "Definition ext_spec_stable {M E Z} (R : M -> M -> Prop) (spec : external_specification M E Z) := (forall e x b tl vl z m1 m2, R m1 m2 -> ext_spec_pre spec e x b tl vl z m1 -> ext_spec_pre spec e x b tl vl z m2) /\\ (forall e v m1 m2, R m1 m2 -> ext_spec_exit spec e v m1 -> ext_spec_exit spec e v m2).",
            "VernacDefinition",
            "f5927c85739ddfa2f893af08b1bbba6e89295709"
        ],
        [
            "Lemma mem_ext m1 m2 : Mem.mem_contents m1 = Mem.mem_contents m2 -> Mem.mem_access m1 = Mem.mem_access m2 -> Mem.nextblock m1 = Mem.nextblock m2 -> m1 = m2.",
            "VernacStartTheoremProof",
            "7217414392c9463400aaaaa00e7a14b0da319cc0"
        ],
        [
            "destruct m1, m2; simpl in *.",
            "VernacExtend",
            "3e34567ff87ccb7c4db5600a6c286efc021ded0b"
        ],
        [
            "intros <- <- <- .",
            "VernacExtend",
            "0bd85c46f7fe8b3c6b68794d7522d41a568cac2a"
        ],
        [
            "f_equal; apply proof_irr.",
            "VernacExtend",
            "6645667c8eb88627dd9c1b14a310a927f61ac2ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "perm_order_pp_refl",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "unfold Mem.perm_order''.",
                        "VernacExtend",
                        "26440b978cd0163df546184a673065516da2277c"
                    ]
                },
                {
                    "command": [
                        "destruct p; trivial.",
                        "VernacExtend",
                        "fe0724c9c788d935c679ffa901e4a6459dea594c"
                    ]
                },
                {
                    "command": [
                        "apply perm_refl.",
                        "VernacExtend",
                        "c9924b8118505b42e4a68782b991f72d43440838"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_equiv'_spec",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "split; intros (? & ? & ?); repeat split; auto.",
                        "VernacExtend",
                        "12999dad512e5c7b8610b306f29e394dee33d50e"
                    ]
                },
                {
                    "command": [
                        "rewrite <-same_loadbytes_spec; auto.",
                        "VernacExtend",
                        "af90b97ae0f579d1a1a86c59171a9b0b755858b6"
                    ]
                },
                {
                    "command": [
                        "rewrite same_loadbytes_spec; auto.",
                        "VernacExtend",
                        "968b90a53041e28355f9aa64ebffb83661f947bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_lessalloc'_spec",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "split; intros (? & ? & ?); repeat split; auto.",
                        "VernacExtend",
                        "12999dad512e5c7b8610b306f29e394dee33d50e"
                    ]
                },
                {
                    "command": [
                        "rewrite <-same_loadbytes_spec; auto.",
                        "VernacExtend",
                        "af90b97ae0f579d1a1a86c59171a9b0b755858b6"
                    ]
                },
                {
                    "command": [
                        "rewrite same_loadbytes_spec; auto.",
                        "VernacExtend",
                        "968b90a53041e28355f9aa64ebffb83661f947bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_lessdef_equiv",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "intros (L1 & P1 & N1) (L2 & P2 & N2); repeat split.",
                        "VernacExtend",
                        "6003fc7c9f10c60422b60c2911ee1c1714c1c917"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "clear -L1 L2.",
                        "VernacExtend",
                        "d09c33e3ef46dd94862cda6f7c7f90eafed90b86"
                    ]
                },
                {
                    "command": [
                        "extensionality b ofs z.",
                        "VernacExtend",
                        "a785239b4579a036b76b1ef367092853fca0ea4e"
                    ]
                },
                {
                    "command": [
                        "match goal with |- ?a = ?b => destruct a as [v1|] eqn:E1; destruct b as [v2|] eqn:E2 end; try destruct (L1 _ _ _ _ E1) as (v2' & E1' & l1); try destruct (L2 _ _ _ _ E2) as (v1' & E2' & l2); try congruence.",
                        "VernacExtend",
                        "3078aaa0821ba61fb40cd8a0ba2bdf486af31343"
                    ]
                },
                {
                    "command": [
                        "assert (v1' = v1) by congruence; assert (v2' = v2) by congruence; subst; f_equal.",
                        "VernacExtend",
                        "1f5f2971329f2c662d0aa9fdb2ec92a0d5f986f2"
                    ]
                },
                {
                    "command": [
                        "clear -l1 l2.",
                        "VernacExtend",
                        "a6570b9ef611474f6b490b005d3be3a170e9ddf0"
                    ]
                },
                {
                    "command": [
                        "revert v2 l1 l2; induction v1; intros v2 l1 l2; inversion l1; subst; auto.",
                        "VernacExtend",
                        "4d16f61a0ad10e49c0ce8fa21da83dfee0b1426b"
                    ]
                },
                {
                    "command": [
                        "inversion l2; subst.",
                        "VernacExtend",
                        "71ae329aef09016746be06aac5d6adb8b7db532a"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "apply memval_lessdef_antisym; auto.",
                        "VernacExtend",
                        "522a6d53cd15fabd39da99abd969d2ef6933c7f2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "repeat extensionality.",
                        "VernacExtend",
                        "962cd7669a6a8273920f125b4d2efa309688a7f2"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext; split; auto.",
                        "VernacExtend",
                        "d189794591747137884a583f0ab35e2867119868"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "cut (Z.pos (Mem.nextblock m2) = Z.pos (Mem.nextblock m1)).",
                        "VernacExtend",
                        "8569fef448ba8548c78bc43154bb3940f64d8db3"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_equiv_refl",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "split3; hnf; auto.",
                        "VernacExtend",
                        "70f09c78a71e5b11d956f051e6b6283e994fc4a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_lessalloc_refl",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "split3; auto.",
                        "VernacExtend",
                        "5198a06904f9188b673c83129393f27ab50f92b2"
                    ]
                },
                {
                    "command": [
                        "apply Ple_refl.",
                        "VernacExtend",
                        "0db71fbfe63d06b179db3d07fbb0dd1fc300f9f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_equiv_refl'",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "intros <-; apply mem_equiv_refl.",
                        "VernacExtend",
                        "ded13ba2fea001be152a85372569599c9e8a12ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_lessalloc_refl'",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "intros <-; apply mem_lessalloc_refl.",
                        "VernacExtend",
                        "c73e7a4e85d347ca4d1b3524dba5f30d8321cdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_equiv_sym",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros []; split; intuition.",
                        "VernacExtend",
                        "d1d6585ea0072a7ad41ca12588c3f07ee4d7f8b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_equiv_trans",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "unfold mem_equiv in *.",
                        "VernacExtend",
                        "434d59fb3189dae08d4f032381ace47bd63cbb7a"
                    ]
                },
                {
                    "command": [
                        "intros (-> & -> & ->) (-> & -> & ->); auto.",
                        "VernacExtend",
                        "3487317d6435ace7c478ca702022ea7efc7e818b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_lessalloc_trans",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "unfold mem_lessalloc in *.",
                        "VernacExtend",
                        "e959fc842049a7e1b6721f757d754c007e580ba6"
                    ]
                },
                {
                    "command": [
                        "intros (-> & -> & l) (-> & -> & l'); split; auto.",
                        "VernacExtend",
                        "918584fa8ee1d8279c8afc119bd6c5bf7efebc93"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "eapply Ple_trans; eauto.",
                        "VernacExtend",
                        "4f7cbd975fc75a24ab34a1c0c5e0645767893c9a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_equiv_lessalloc",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "intros (L1 & P1 & N1); repeat split; auto.",
                        "VernacExtend",
                        "c7203ae78aff2f7482403aef739924ce723fd8ca"
                    ]
                },
                {
                    "command": [
                        "rewrite N1; auto.",
                        "VernacExtend",
                        "b6e8cba85f0ce6793990c109dabfe4b385624ea8"
                    ]
                },
                {
                    "command": [
                        "apply Ple_refl.",
                        "VernacExtend",
                        "0db71fbfe63d06b179db3d07fbb0dd1fc300f9f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_lessalloc_lessdef",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "intros (L1 & P1 & N1); repeat split.",
                        "VernacExtend",
                        "ae31e1cd470379083f2c52f99759cf14a1044517"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite L1; auto.",
                        "VernacExtend",
                        "8eec9370089c6b3cf6390ce46617b875c74c4683"
                    ]
                },
                {
                    "command": [
                        "intros b ofs len v H.",
                        "VernacExtend",
                        "48c28c26d51e042666c47485da61c3e85fab3d1f"
                    ]
                },
                {
                    "command": [
                        "exists v; intuition.",
                        "VernacExtend",
                        "ca2a59abfe1ee17a6c343e5170b499a5ba169d6f"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "induction v; constructor; auto.",
                        "VernacExtend",
                        "287f3631b83c8de203bb78dadf2e34ef678bb477"
                    ]
                },
                {
                    "command": [
                        "apply memval_lessdef_refl.",
                        "VernacExtend",
                        "a5c3fa3febe04a84b98f418233d1314eaaa49816"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite P1; auto.",
                        "VernacExtend",
                        "579a1329b60b684713396b14b5059002babe7a05"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_equiv_lessdef",
            "line_nb": 229,
            "steps": [
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "apply mem_lessalloc_lessdef, mem_equiv_lessalloc, H.",
                        "VernacExtend",
                        "1e345b3407a8fe610a8633e9972def4d94faf2aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_lessdef_valid_pointer",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? [? ?]].",
                        "VernacExtend",
                        "7b80d34d0c991fb27b92313d17ea8675f1173807"
                    ]
                },
                {
                    "command": [
                        "unfold Mem.valid_pointer in *.",
                        "VernacExtend",
                        "d382883a6168cc42ff7289ec99fd77642ca99047"
                    ]
                },
                {
                    "command": [
                        "destruct (Mem.perm_dec m1 b z Cur Nonempty); inv H0.",
                        "VernacExtend",
                        "42ae04b4e258bd97bd2ee62a54ed35fc5ec62331"
                    ]
                },
                {
                    "command": [
                        "destruct (Mem.perm_dec m2 b z Cur Nonempty); try reflexivity.",
                        "VernacExtend",
                        "44eff92d743cd4ed8d244c1d633f7364c366ae7b"
                    ]
                },
                {
                    "command": [
                        "contradiction n.",
                        "VernacExtend",
                        "1749fecd765c92d2611e829dc09c198dbc050cdd"
                    ]
                },
                {
                    "command": [
                        "clear n.",
                        "VernacExtend",
                        "950078f0511238b7bf11b5533c9ffd133a02ab04"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_lessdef_weak_valid_pointer",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Mem.weak_valid_pointer in *.",
                        "VernacExtend",
                        "d34725a2ebb536ec02498fb68c74d4ef68f8bd6e"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_true_iff in *.",
                        "VernacExtend",
                        "e939ff2ee07493664315eafd2e01dd9a5229f9c4"
                    ]
                },
                {
                    "command": [
                        "destruct H0; [left|right]; eapply mem_lessdef_valid_pointer; eauto.",
                        "VernacExtend",
                        "fa705a9f4c015f703590ce9308f60ebb2ca7d1e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_lessdef_proj_bytes",
            "line_nb": 250,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert bl H0; induction H; intros; auto.",
                        "VernacExtend",
                        "2e2b9def15b0d37b431181604501b7fe411f1ad6"
                    ]
                },
                {
                    "command": [
                        "destruct bl0; inv H1.",
                        "VernacExtend",
                        "247dda22830cae654de1e814f6fdf9ff51ee17d8"
                    ]
                },
                {
                    "command": [
                        "destruct a1; auto.",
                        "VernacExtend",
                        "1041ee1ff7bdfcf75f514630563e0bc35313f866"
                    ]
                },
                {
                    "command": [
                        "inv H3.",
                        "VernacExtend",
                        "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes al) eqn:?H; inv H3.",
                        "VernacExtend",
                        "8586179fc919cfb59159f30b3f4cb14a221b4e95"
                    ]
                },
                {
                    "command": [
                        "inv H3.",
                        "VernacExtend",
                        "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
                    ]
                },
                {
                    "command": [
                        "destruct a1; try discriminate.",
                        "VernacExtend",
                        "4fdacd6318627493b4a4e694af03a52f32ef2dd2"
                    ]
                },
                {
                    "command": [
                        "destruct (proj_bytes al) eqn:?H; inv H3.",
                        "VernacExtend",
                        "8586179fc919cfb59159f30b3f4cb14a221b4e95"
                    ]
                },
                {
                    "command": [
                        "specialize (IHlist_forall2 _ (eq_refl _)).",
                        "VernacExtend",
                        "b8c1bb304cc1efaa6cabf4b65d5dfd00b1e8af34"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHlist_forall2.",
                        "VernacExtend",
                        "9989dbcd1f4550e3cb0ff883471f77356927f92b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_lessdef_loadbytes",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? [? ?]].",
                        "VernacExtend",
                        "7b80d34d0c991fb27b92313d17ea8675f1173807"
                    ]
                },
                {
                    "command": [
                        "apply H in H0.",
                        "VernacExtend",
                        "3b12de80516a2aa60cdde675feacb2e18e944fd4"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [v2 [? ?]]; exists v2; split; auto.",
                        "VernacExtend",
                        "4221736ed44f27ff361f6913703f5c6268ef8f22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_pointer_lessalloc",
            "line_nb": 355,
            "steps": [
                {
                    "command": [
                        "unfold Mem.valid_pointer.",
                        "VernacExtend",
                        "dd8b2040e8e6b4d6fe23b0bf1a035e9b1e19c5ce"
                    ]
                },
                {
                    "command": [
                        "destruct M as [M1 [M2 M3]].",
                        "VernacExtend",
                        "33c68408bb65ec62c08235a9f7a5c45aa6f121ec"
                    ]
                },
                {
                    "command": [
                        "extensionality b.",
                        "VernacExtend",
                        "f1e62492013ea643cd7f5fa8e4bf08e95adc0278"
                    ]
                },
                {
                    "command": [
                        "extensionality i.",
                        "VernacExtend",
                        "8733cdd792af6107213a34f779c8c3d7eba32943"
                    ]
                },
                {
                    "command": [
                        "destruct (Mem.perm_dec m b i Cur Nonempty); destruct (Mem.perm_dec m2 b i Cur Nonempty); trivial.",
                        "VernacExtend",
                        "0dc04b77377550fd9481ff2a06f9bba32728b375"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "rewrite M2 in p.",
                        "VernacExtend",
                        "58f9d6c330f888b7efbd8be8d2158093948b5cd3"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "rewrite M2 in n.",
                        "VernacExtend",
                        "a5e845325a9691b4371d59809349238ef86be02f"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weak_valid_pointer_lessalloc",
            "line_nb": 368,
            "steps": [
                {
                    "command": [
                        "unfold Mem.weak_valid_pointer.",
                        "VernacExtend",
                        "7c36a5801ff4aaa3a924e09dbc7c860925ea45aa"
                    ]
                },
                {
                    "command": [
                        "extensionality b.",
                        "VernacExtend",
                        "f1e62492013ea643cd7f5fa8e4bf08e95adc0278"
                    ]
                },
                {
                    "command": [
                        "extensionality i.",
                        "VernacExtend",
                        "8733cdd792af6107213a34f779c8c3d7eba32943"
                    ]
                },
                {
                    "command": [
                        "rewrite (valid_pointer_lessalloc M); trivial.",
                        "VernacExtend",
                        "24fbac7cdc469724e29dfbff0abf1f58811443c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_ext",
            "line_nb": 379,
            "steps": [
                {
                    "command": [
                        "destruct m1, m2; simpl in *.",
                        "VernacExtend",
                        "3e34567ff87ccb7c4db5600a6c286efc021ded0b"
                    ]
                },
                {
                    "command": [
                        "intros <- <- <- .",
                        "VernacExtend",
                        "0bd85c46f7fe8b3c6b68794d7522d41a568cac2a"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply proof_irr.",
                        "VernacExtend",
                        "6645667c8eb88627dd9c1b14a310a927f61ac2ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}