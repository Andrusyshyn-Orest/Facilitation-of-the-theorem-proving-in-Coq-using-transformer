{
    "filename": "veric/initial_world.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.msl.age_to.",
            "VernacRequire",
            "78f9f0b23d7181dcf29bf1e7077386560b072f5f"
        ],
        [
            "Require Import VST.veric.juicy_base.",
            "VernacRequire",
            "7a63c83b17327e7ee5b9ab38e2ae76d2d22b7583"
        ],
        [
            "Require Import VST.veric.juicy_mem.",
            "VernacRequire",
            "f1eecf3ecf80d465588513629a8e6b5706759bd8"
        ],
        [
            "Require Import VST.veric.juicy_mem_lemmas.",
            "VernacRequire",
            "c432441f3fd84d350a81bbf00da1689db02063ce"
        ],
        [
            "Require Import VST.veric.juicy_mem_ops.",
            "VernacRequire",
            "ea0aa87abe2cdf70fca07aee44276c9f8795eb8e"
        ],
        [
            "Require Import VST.veric.res_predicates.",
            "VernacRequire",
            "768b4200cf583d1957d2bf97075bbe3044eb3f8d"
        ],
        [
            "Require Import VST.veric.shares.",
            "VernacRequire",
            "3704a447cd367fa0955afd14b15f7281894f1482"
        ],
        [
            "Require Import VST.veric.mpred.",
            "VernacRequire",
            "11652084584e46804583cf99fdbf0fa76aa9fd7a"
        ],
        [
            "Require Import VST.veric.age_to_resource_at.",
            "VernacRequire",
            "43f8b4c3d5f186de1c6da6e7796fe7431f05d77c"
        ],
        [
            "Local Open Scope pred.",
            "VernacOpenCloseScope",
            "61fa11c1c3de9a21b4672e107d4df33b39563e17"
        ],
        [
            "Obligation Tactic := idtac.",
            "VernacExtend",
            "2c02069f716c1c663ecc60c601eee0146a5f1c05"
        ],
        [
            "Lemma adr_range_divide: forall b i p q loc, p >= 0 -> q >= 0 -> (adr_range (b,i) (p+q) loc <-> (adr_range (b,i) p loc \\/adr_range (b,i+p) q loc)).",
            "VernacStartTheoremProof",
            "fb7fdd98b0eb792ad0cbad3e53256deeac3691d9"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "destruct loc as [b' z']; destruct H1.",
            "VernacExtend",
            "5bc375b1548a8ec35919df0de7932ae9d8864587"
        ],
        [
            "assert (i <= z' < i+p \\/ i+p <= z' < i+p+q) by omega.",
            "VernacExtend",
            "5ad6257c264233e70430e0af289539ca6ce91769"
        ],
        [
            "destruct H3; [left|right]; split; auto; omega.",
            "VernacExtend",
            "a1bbdbd9a61ad7c9de1a788b2d7d86084024f982"
        ],
        [
            "destruct loc as [b' z']; destruct H1; destruct H1; split; auto; omega.",
            "VernacExtend",
            "63c03d18ed4d298b7a562401a140495ed05402cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma VALspec_range_e: forall n sh base m loc, VALspec_range n sh base m -> adr_range base n loc -> {x | m @ loc = YES sh (snd x) (VAL (fst x)) NoneP}.",
            "VernacStartTheoremProof",
            "4305d3314064e11396fed184cf811031aebbdec4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [H _]; specialize (H loc).",
            "VernacExtend",
            "2c5313900ee1d0f0817ed625e90a4ac7a72badc8"
        ],
        [
            "rewrite jam_true in H; auto.",
            "VernacExtend",
            "cbffb52b74c13429944790993b342393b9db4a0e"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct (m @ loc); try destruct k; try solve [elimtype False; destruct H as [? [? ?]]; inv H].",
            "VernacExtend",
            "ec960a0700b17818d8595bd30d41d99b36d7685c"
        ],
        [
            "assert (readable_share sh) by (destruct H as [? [? ?]]; auto).",
            "VernacExtend",
            "dc5709986bc7c39598af046d9c3c8c4053d09734"
        ],
        [
            "exists (m0, H1).",
            "VernacExtend",
            "ec60d108765ed80e83beb6c7df7b959f6896e279"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct H as [? [? ?]].",
            "VernacExtend",
            "7b80d34d0c991fb27b92313d17ea8675f1173807"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "apply YES_ext; auto.",
            "VernacExtend",
            "de11c6c787d0eac9ac58a93f7237a80e14cf27c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma store_init_data_outside': forall F V (ge: Genv.t F V) b a m p m', Genv.store_init_data ge m b p a = Some m' -> (forall b' ofs, (b=b' /\\ p <= ofs < p + init_data_size a) \\/ contents_at m (b', ofs) = contents_at m' (b', ofs)) /\\ access_at m = access_at m' /\\ nextblock m = nextblock m'.",
            "VernacStartTheoremProof",
            "ba6fff0773c2b67f3cf738d9a8e4ac65075c4153"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold max_access_at .",
            "VernacExtend",
            "180a9342db22c98d8960746aab3e30f8453543ec"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct a; simpl in H; try apply store_outside' in H; auto.",
            "VernacExtend",
            "f353698d0483f8afa6e4ccfaf2f106b345d097ff"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "e9bd05ad37c0a003cf8fcd49196ec009bd4adb97"
        ],
        [
            "invSome.",
            "VernacExtend",
            "f9b0e980c61f8244d51be433c425e71a65913712"
        ],
        [
            "apply store_outside' in H2; auto.",
            "VernacExtend",
            "7fa35afae70da747f6b6e786857baa92e4e0c389"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma store_init_data_list_outside': forall F V (ge: Genv.t F V) b il m p m', Genv.store_init_data_list ge m b p il = Some m' -> (forall b' ofs, (b=b' /\\ p <= ofs < p + init_data_list_size il) \\/ contents_at m (b', ofs) = contents_at m' (b', ofs)) /\\ access_at m = access_at m' /\\ nextblock m = nextblock m'.",
            "VernacStartTheoremProof",
            "4d1b379d223ed3ecf6fa19db6e60c06bb48a97b6"
        ],
        [
            "induction il; simpl; intros.",
            "VernacExtend",
            "845693d0df6b64acee25233f1ea45068385ac35c"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "e9bd05ad37c0a003cf8fcd49196ec009bd4adb97"
        ],
        [
            "invSome.",
            "VernacExtend",
            "f9b0e980c61f8244d51be433c425e71a65913712"
        ],
        [
            "specialize (IHil _ _ _ H2).",
            "VernacExtend",
            "dd6795606514fd76916a579b41ad6d3e316697e1"
        ],
        [
            "destruct IHil as [? [? ?]].",
            "VernacExtend",
            "210079e6bd0614c9eb809c1c733c1baa9c341ff0"
        ],
        [
            "rewrite <- H3; rewrite <- H1; clear H3 H1 H2.",
            "VernacExtend",
            "05e85a0eb4bd17e2f7ce32c3affde85fa738fa18"
        ],
        [
            "remember (init_data_list_size il) as n.",
            "VernacExtend",
            "aa508199e6eee3ce1468894e59a40716677aa7f8"
        ],
        [
            "assert (n >= 0).",
            "VernacExtend",
            "d05728f33aa2835f176ba58fccb4092dc2535b24"
        ],
        [
            "subst n; clear; induction il; simpl; try omega.",
            "VernacExtend",
            "532bb1454e7c1ff37b1b1516d87545ff03cda27b"
        ],
        [
            "generalize (init_data_size_pos a); omega.",
            "VernacExtend",
            "1d8ecf3a622d8627775c0a29d2dd7cb2e67ce242"
        ],
        [
            "clear il Heqn.",
            "VernacExtend",
            "9d115e0eee0a0b05c7fce5a4b830e421dc6a9d8c"
        ],
        [
            "apply store_init_data_outside' in H.",
            "VernacExtend",
            "799e46ab63e34cbc0959a3df2cb70cc1f89e2a8a"
        ],
        [
            "generalize (init_data_size_pos a); intro.",
            "VernacExtend",
            "e19cbcbf162a961346be1b89c5e124f84ad2f322"
        ],
        [
            "destruct H as [? [? ?]]; repeat split; auto.",
            "VernacExtend",
            "cd5537d808d723c0522814de2e2efd9ca8308264"
        ],
        [
            "clear H3 H4.",
            "VernacExtend",
            "c594212e6ab0214cf3574b9ccddf238f49d58c36"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "specialize (H0 b' ofs); specialize (H b' ofs).",
            "VernacExtend",
            "8c13c29dc784d842762cbe3c13ee1b3343a3703b"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "destruct H0; left; split; auto; omega.",
            "VernacExtend",
            "459b9ab5a7ea5767aebb26935336e08574b99587"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct H; left; split; auto; omega.",
            "VernacExtend",
            "f6db3a7d5fc867dcde9369325e83c7182f1f8556"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac destruct_cjoin phi HH := match goal with | |- context [@proj1_sig rmap _ ?X] => destruct X as [phi HH]; simpl | H: context [@proj1_sig rmap _ ?X] |- _ => destruct X as [phi HH]; simpl in H end.",
            "VernacExtend",
            "93e401efd987c745da654965c3c33b8114b18b93"
        ],
        [
            "Lemma split_top_neq: fst (Share.split Share.top) <> Share.top.",
            "VernacStartTheoremProof",
            "a09ac613fd9e7f3f60dc972a5e071960c5d4259a"
        ],
        [
            "case_eq (Share.split Share.top); intros; simpl.",
            "VernacExtend",
            "f0caa162fb7e226dc2d477992aca73d38c4ab13b"
        ],
        [
            "eapply nonemp_split_neq1; eauto.",
            "VernacExtend",
            "ae6ed54d163620899cc5379d06953ebfeeb8780f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dec_pure: forall r, {exists k, exists pp, r = PURE k pp}+{core r = NO Share.bot bot_unreadable}.",
            "VernacStartTheoremProof",
            "21300c97eb0cecfa436d7fc0f9a4d8491f32c26b"
        ],
        [
            "destruct r.",
            "VernacExtend",
            "8734fc79466dd620102fead10107fecfe6573aa6"
        ],
        [
            "right; apply core_NO.",
            "VernacExtend",
            "de2023131a7f92fc66eb275fc935be57d4dbfe59"
        ],
        [
            "right; apply core_YES.",
            "VernacExtend",
            "8a902c9cdb0888b67d4d5a833eaa398db182602c"
        ],
        [
            "left; eauto.",
            "VernacExtend",
            "2aadb2cc2a8fd5d6bcc75542c3cddb6fa2224625"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma store_init_data_list_lem: forall F V (ge: Genv.t F V) m b lo d m', Genv.store_init_data_list ge m b lo d = Some m' -> forall w IOK IOK' P sh (wsh: writable_share sh), ((P * VALspec_range (init_data_list_size d) sh (b,lo))%pred (m_phi (initial_mem m w IOK))) -> ((P * VALspec_range (init_data_list_size d) sh (b,lo))%pred (m_phi (initial_mem m' w IOK'))).",
            "VernacStartTheoremProof",
            "c9a8be4b496014ea01107ff39d44a7079bce06b9"
        ],
        [
            "intros until 1.",
            "VernacExtend",
            "02a88d708d00fec9315af96f54c66efbe80acead"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0 as [m0 [m1 [H4 [H1 H2]]]].",
            "VernacExtend",
            "60054b31122e6aaf76955502c1f70e5720abb603"
        ],
        [
            "cut (exists m2, join m0 m2 (m_phi (initial_mem m' w IOK')) /\\ VALspec_range (init_data_list_size d) sh (b,lo) m2); [intros [m2 [H0 H3]] | ].",
            "VernacExtend",
            "fa03e975f48819225b7bbf9da88e5a90c7a3eac7"
        ],
        [
            "exists m0; exists m2; split3; auto.",
            "VernacExtend",
            "c4a40a883e78fd9ca773d3f951428f7398fe64f0"
        ],
        [
            "rename H2 into H3.",
            "VernacExtend",
            "7718b6f4920a35d698127bdd85c4c9bca3599435"
        ],
        [
            "clear - H H4 H3 wsh.",
            "VernacExtend",
            "a1079d871d9531698cbef1306086bbd8afaefa1b"
        ],
        [
            "assert (MA: max_access_at m = max_access_at m').",
            "VernacExtend",
            "7e3810e1e9d0488014f636a00e4f05442a178801"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear - H.",
            "VernacExtend",
            "0feb8621f12176e9894f4f3ff86ecf0003739aed"
        ],
        [
            "revert m lo H; induction d; simpl; intros.",
            "VernacExtend",
            "1180a416bd1f9df304a776646cf684eb134dc90d"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "e9bd05ad37c0a003cf8fcd49196ec009bd4adb97"
        ],
        [
            "invSome.",
            "VernacExtend",
            "f9b0e980c61f8244d51be433c425e71a65913712"
        ],
        [
            "apply IHd in H2.",
            "VernacExtend",
            "b34cd451eb5e4fdb76717ec1dc7d696c87e1d399"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "clear - H.",
            "VernacExtend",
            "0feb8621f12176e9894f4f3ff86ecf0003739aed"
        ],
        [
            "unfold max_access_at.",
            "VernacExtend",
            "180a9342db22c98d8960746aab3e30f8453543ec"
        ],
        [
            "extensionality loc.",
            "VernacExtend",
            "1e7eb6ee95191abc4fc69ac4ede8caa2d6671fd4"
        ],
        [
            "destruct a; simpl in H; try rewrite (Memory.store_access _ _ _ _ _ _ H); auto.",
            "VernacExtend",
            "4e9678f64de61174d8deab2349e0673877be2170"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "e9bd05ad37c0a003cf8fcd49196ec009bd4adb97"
        ],
        [
            "invSome.",
            "VernacExtend",
            "f9b0e980c61f8244d51be433c425e71a65913712"
        ],
        [
            "rewrite (Memory.store_access _ _ _ _ _ _ H2); auto.",
            "VernacExtend",
            "8861fc94df205103efa5bfaba8cc143a3a4dfcf3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply store_init_data_list_outside' in H.",
            "VernacExtend",
            "b694e156492b625bcdc1a82dff6a08306d1d6a7c"
        ],
        [
            "forget (init_data_list_size d) as N.",
            "VernacExtend",
            "8462b55e7eadf29026b8cf7bba3330c46635d14b"
        ],
        [
            "clear - H4 H3 H MA wsh.",
            "VernacExtend",
            "3fc27574e7173d83349e4b22ed31a14bea51abe0"
        ],
        [
            "pose (f loc := if adr_range_dec (b,lo) N loc then YES sh (writable_readable_share wsh) (VAL (contents_at m' loc)) NoneP else core (w @ loc)).",
            "VernacExtend",
            "c8972a6a7d96240c1bff6ccf7dda1b00ccc7c5bc"
        ],
        [
            "pose (H0 := True).",
            "VernacExtend",
            "f1843c69ec2b90732a197ba1b7aad31ddc58c0d6"
        ],
        [
            "destruct (remake_rmap f (core (ghost_of w)) (level w)) as [m2 [? ?]].",
            "VernacExtend",
            "6ae4e616d9292159144c5f0c6420075824a175ef"
        ],
        [
            "intros; unfold f, no_preds; simpl; intros; repeat if_tac; auto.",
            "VernacExtend",
            "726eb46a64b1ad0618d63c9ac97ce2da4301367b"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (core w).",
            "VernacExtend",
            "22fdef217ed16b3c9bc707bf419a9300b43ed4b9"
        ],
        [
            "rewrite core_resource_at.",
            "VernacExtend",
            "83d9ddd2164852aa3148e92d08d5f85b9a2ef365"
        ],
        [
            "rewrite level_core.",
            "VernacExtend",
            "311b7130b0585b6bfe481f394758f6b14e36a5b3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- ghost_of_core, <- level_core; apply ghost_of_approx.",
            "VernacExtend",
            "7ab3ed2ee8d0e8d60eb2d74403e0331e4831062e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold f in *; clear f.",
            "VernacExtend",
            "a9407ceeea71625754acdf071a6110c0f43df441"
        ],
        [
            "exists m2.",
            "VernacExtend",
            "4c44127eb23bb12670109277e2c9c1383dd06c6a"
        ],
        [
            "destruct H2 as [H2 Hg2].",
            "VernacExtend",
            "62b054c472c78eafdfe17c614a34ba5b5f259106"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply resource_at_join2.",
            "VernacExtend",
            "ec13c7671743e987c1c80f9abb48f7c50d2fa084"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "assert (level m0 = level (m_phi (initial_mem m w IOK))).",
            "VernacExtend",
            "6c6bf23c12e1b93612b1765b14bebaccf98adaaf"
        ],
        [
            "change R.rmap with rmap in *; change R.ag_rmap with ag_rmap in *.",
            "VernacExtend",
            "64b6057d9836af49260e867a937a0dcc75917787"
        ],
        [
            "apply join_level in H4; destruct H4; congruence.",
            "VernacExtend",
            "1e230f6790494ab171dc8d5a6f3f2346f789f780"
        ],
        [
            "change R.rmap with rmap in *; change R.ag_rmap with ag_rmap in *.",
            "VernacExtend",
            "64b6057d9836af49260e867a937a0dcc75917787"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "simpl; repeat rewrite inflate_initial_mem_level; auto.",
            "VernacExtend",
            "408d6f1df14680f50b060d49acca29a806f9bacc"
        ],
        [
            "rewrite H1; simpl; rewrite inflate_initial_mem_level; auto.",
            "VernacExtend",
            "7343f63ab3b1b9e5354ffa6e78ae0df36a179fca"
        ],
        [
            "destruct H as [H [H5 H7]].",
            "VernacExtend",
            "ff55e80646170b3197f1fe168821ce29cab164f7"
        ],
        [
            "intros [b' z']; apply (resource_at_join _ _ _ (b',z')) in H4; specialize (H b' z').",
            "VernacExtend",
            "c99e041faddce5dbc2f1b7d12eb6313715646d29"
        ],
        [
            "destruct H3 as [H3 Hg].",
            "VernacExtend",
            "e6985aed055e52d8668148dc03a7532b8adbd9b0"
        ],
        [
            "specialize (H3 (b',z')).",
            "VernacExtend",
            "7176c97ec105f851626f9cb7f0f199fb23c45cfc"
        ],
        [
            "unfold jam in H3.",
            "VernacExtend",
            "50ef5c941abf1eaeddf2032b32c485808cf42141"
        ],
        [
            "hnf in H3.",
            "VernacExtend",
            "1e4a450afa3bb7d1d579c390a8c7e0705823aa0d"
        ],
        [
            "if_tac in H3.",
            "VernacExtend",
            "439ca89b0874e88df0510b38faa45de8f8f7e6e3"
        ],
        [
            "2: rename H6 into H8.",
            "VernacExtend",
            "8ad4116a10dfaf6f90edc30514e39e18e71f4e2e"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "destruct H6 as [H H8].",
            "VernacExtend",
            "f41057aca0d23403b0c8ca47e6779b6bd0eb4230"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst b'.",
            "VernacExtend",
            "998445e3e44d7190637615c1934547ff4b392560"
        ],
        [
            "destruct H3 as [v [p H]].",
            "VernacExtend",
            "e358052397b2f066377ed5f52faea42942aa792e"
        ],
        [
            "rewrite H in H4.",
            "VernacExtend",
            "011086929d2bf812e114acd5727c500141de7470"
        ],
        [
            "repeat rewrite preds_fmap_NoneP in H4.",
            "VernacExtend",
            "994bf273127546cddd9bb623feaa440861b5cd7b"
        ],
        [
            "inv H4; [| contradiction (join_writable_readable (join_comm RJ) wsh rsh1)].",
            "VernacExtend",
            "12542d2af3a3c349af4dd35bd196b121942a6705"
        ],
        [
            "clear H6 m0.",
            "VernacExtend",
            "dba7ead77b241881583725bca96103abd8bf074f"
        ],
        [
            "rename H12 into H4.",
            "VernacExtend",
            "db9f13ea4773176630eb3667a45f7241d9dc00c4"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "rewrite if_true by (split; auto; omega).",
            "VernacExtend",
            "e74f15fab46600d60beaf3b94cceb598fb4b125d"
        ],
        [
            "clear - H4 H5 H7 RJ wsh.",
            "VernacExtend",
            "92f08bb0dd58f344a0ec0bc7509833d719ff96ce"
        ],
        [
            "replace (m_phi (initial_mem m' w IOK') @ (b, z')) with (YES sh3 rsh3 (VAL (contents_at m' (b, z'))) NoneP); [ constructor; auto |].",
            "VernacExtend",
            "0bf6711f1cbfab694b7d89172c170e723c48ddb7"
        ],
        [
            "revert H4.",
            "VernacExtend",
            "347f93a6079a77d381ded934a965041b3ed2b2be"
        ],
        [
            "simpl; unfold inflate_initial_mem.",
            "VernacExtend",
            "537e79aa62aadd25130142800445b2b8c08fa51c"
        ],
        [
            "repeat rewrite resource_at_make_rmap.",
            "VernacExtend",
            "ba7f2e69f9522af166152d9a18fafebc7ecac0f7"
        ],
        [
            "unfold inflate_initial_mem'.",
            "VernacExtend",
            "14562ffe0135e7b138dcd2ce81a541e5e6d5472c"
        ],
        [
            "rewrite <- H5.",
            "VernacExtend",
            "7e7c68e08488a5f01b85c6a7ae27738d3a8af897"
        ],
        [
            "case_eq (access_at m (b,z') Cur); intros; auto.",
            "VernacExtend",
            "f6deb310c1d360958b5b4c7727cb4b04a3f53bab"
        ],
        [
            "destruct p; auto; try solve [apply YES_inj in H4; inv H4; apply YES_ext; auto].",
            "VernacExtend",
            "209e26fd469e86e80e3d76d3e06b93c04044b499"
        ],
        [
            "destruct (w @ (b,z')); inv H4.",
            "VernacExtend",
            "7b0d3439869b0a47a04742aa51ffe343721af2b7"
        ],
        [
            "inv H4.",
            "VernacExtend",
            "901a2034cad394e040195b9b10020bf0a16b908e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply join_unit2_e in H4; auto.",
            "VernacExtend",
            "7cdce145bd3a8a50ca84ada62fb126e2b83bd532"
        ],
        [
            "clear m1 H3 Hg.",
            "VernacExtend",
            "06e28e7b79465194a5572bff281be1e5d8a46d81"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "rewrite H2; clear H2.",
            "VernacExtend",
            "658a793dc4cf1245766546a78ace303256643454"
        ],
        [
            "rewrite if_false; auto.",
            "VernacExtend",
            "1240282bd6190d3e1786b83abf332d1976c76b04"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "clear - MA H5 H7 H.",
            "VernacExtend",
            "f7c400da56ac9eb4e73f5cd13c48bb19f144dc70"
        ],
        [
            "unfold initial_mem; simpl.",
            "VernacExtend",
            "25c2929cf4428c72b600447d65dce4d548d5b2fa"
        ],
        [
            "unfold inflate_initial_mem; simpl.",
            "VernacExtend",
            "5b7a41c1aa1958420e336572517eb3111b2f8131"
        ],
        [
            "repeat rewrite resource_at_make_rmap.",
            "VernacExtend",
            "ba7f2e69f9522af166152d9a18fafebc7ecac0f7"
        ],
        [
            "unfold inflate_initial_mem'.",
            "VernacExtend",
            "14562ffe0135e7b138dcd2ce81a541e5e6d5472c"
        ],
        [
            "rewrite <- H5.",
            "VernacExtend",
            "7e7c68e08488a5f01b85c6a7ae27738d3a8af897"
        ],
        [
            "specialize (IOK (b',z')).",
            "VernacExtend",
            "803e5045367f3cfc95c84e692edc5355755580eb"
        ],
        [
            "simpl in IOK.",
            "VernacExtend",
            "3f6a6052fd62a5dc2fabafa835c712b1900aa351"
        ],
        [
            "destruct IOK as [IOK1 IOK2].",
            "VernacExtend",
            "92253a9a3207940b69992eaca6ecfd7eba92558f"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "revert IOK2; case_eq (w @ (b',z')); intros.",
            "VernacExtend",
            "f3264471743121accc263be25bcf5e5f28c86777"
        ],
        [
            "rewrite core_NO.",
            "VernacExtend",
            "ac3e1e5f0b68d57235bec952c80777f274e37017"
        ],
        [
            "destruct (access_at m (b', z')); try destruct p; try constructor; auto.",
            "VernacExtend",
            "1daf5f09d7b3ea42d328d2cc0726ebda59f80dc4"
        ],
        [
            "rewrite core_YES.",
            "VernacExtend",
            "11d8279a2493db1c0faceed8672d2884b1bcffb7"
        ],
        [
            "destruct (access_at m (b', z')); try destruct p0; try constructor; auto.",
            "VernacExtend",
            "6dd48779d2e08cbac3208be0e82e2a22c05f89f5"
        ],
        [
            "destruct IOK2 as [? [? ?]].",
            "VernacExtend",
            "33a999ef933bf311641ccfaf628da392774d3c31"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "rewrite core_PURE; constructor.",
            "VernacExtend",
            "8d9fd88744f8748b09816586e26bc1de332504d6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H3 as [_ Hg].",
            "VernacExtend",
            "94f16ecc822f1557aad5ed20c2d643b89c62c3f1"
        ],
        [
            "apply ghost_of_join in H4.",
            "VernacExtend",
            "d44b3dbe88a4adccbc347a8cbbc4b2d4b98bc6e5"
        ],
        [
            "unfold initial_mem in *; simpl in *; unfold inflate_initial_mem in *; simpl in *.",
            "VernacExtend",
            "c00200f69f25bc7ab8919638f1a215f9fae8b618"
        ],
        [
            "rewrite ghost_of_make_rmap in *.",
            "VernacExtend",
            "9c246e90f9eebc0b9b2a232293692a999a64546a"
        ],
        [
            "rewrite (Hg _ _ (join_comm H4)).",
            "VernacExtend",
            "2a6c5fffbd653848f601d0b2f918395a669b246b"
        ],
        [
            "rewrite Hg2; apply join_comm, core_unit.",
            "VernacExtend",
            "b2ecc01b27e634338a6bfed0207673551326598b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct H3 as [H3 Hg].",
            "VernacExtend",
            "e6985aed055e52d8668148dc03a7532b8adbd9b0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro loc.",
            "VernacExtend",
            "8b9938ec34ded7bb0e723c290989a39c80117118"
        ],
        [
            "specialize (H3 loc).",
            "VernacExtend",
            "c344ca0be42613c2f849b7922ece4338acca9145"
        ],
        [
            "hnf in H3|-*.",
            "VernacExtend",
            "ef6c243aa7c99ffe22f66c760d899b3be92de56f"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "generalize (refl_equal (m2 @ loc)).",
            "VernacExtend",
            "1b6a6e91100621a2fb97ad03e9064c75bb4c88fc"
        ],
        [
            "pattern (resource_at m2) at 2; rewrite H2.",
            "VernacExtend",
            "6098a2a99a2a86cc95af152abebc4bcd96c635b8"
        ],
        [
            "rewrite if_true; auto.",
            "VernacExtend",
            "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "repeat rewrite preds_fmap_NoneP.",
            "VernacExtend",
            "0a96bd8b95a9eed5e8221c3556134ac7562fbd00"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "do 3 red.",
            "VernacExtend",
            "0d6fbefd005468a675fae9cce27f1d656e5935fb"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "rewrite if_false; auto.",
            "VernacExtend",
            "1240282bd6190d3e1786b83abf332d1976c76b04"
        ],
        [
            "apply core_identity.",
            "VernacExtend",
            "5c1c5ff59150fe95f19be565f7f1c3a0225ed86c"
        ],
        [
            "simpl; rewrite Hg2; apply core_identity.",
            "VernacExtend",
            "a7fae2741ce3c30b0584dcc2d369ac6734c079af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_right_rev_left: forall (A B: Type) (f: A -> B -> A) (l: list B) (i: A), fold_left f l i = fold_right (fun x y => f y x) i (rev l).",
            "VernacStartTheoremProof",
            "f639f0bd8a63767ca86cdc35654ded61e508f03b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite fold_left_rev_right.",
            "VernacExtend",
            "172aea0d1678fdd15cf3572742605a293c1d7878"
        ],
        [
            "f_equal; extensionality x y; auto.",
            "VernacExtend",
            "8b51291018be186df72bfd2c83798f5638e411c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition initblocksize (V: Type) (a: ident * globvar V) : (ident * Z) := match a with (id,l) => (id , init_data_list_size (gvar_init l)) end.",
            "VernacDefinition",
            "40f65897820296c2e216e8dfc04d1836b098ad54"
        ],
        [
            "Lemma initblocksize_name: forall V a id n, initblocksize V a = (id,n) -> fst a = id.",
            "VernacStartTheoremProof",
            "19738078ee85947c95da3c28299def31614144bf"
        ],
        [
            "destruct a; intros; simpl; inv H; auto.",
            "VernacExtend",
            "f98e13e8c02ad21b9a03233caad943bb074dca70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint find_id (id: ident) (G: funspecs) : option funspec := match G with | (id', f)::G' => if eq_dec id id' then Some f else find_id id G' | nil => None end.",
            "VernacFixpoint",
            "b1f56fb9eea1f7e2063d74e4ea701dcea9ff51b7"
        ],
        [
            "Lemma in_map_fst: forall {A B: Type} (i: A) (j: B) (G: list (A*B)), In (i,j) G -> In i (map (@fst _ _ ) G).",
            "VernacStartTheoremProof",
            "9d438b4030d888093ddddccad3bd2300bd004910"
        ],
        [
            "induction G; simpl; intros; auto.",
            "VernacExtend",
            "74497c7b6ae89e7f80465e024cd3a9bb10cd908f"
        ],
        [
            "destruct H; [left|right].",
            "VernacExtend",
            "d8354e6783115874e43c4c4eb026fb6df08dc728"
        ],
        [
            "subst; simpl; auto.",
            "VernacExtend",
            "4c332d568d45adb0cafebb5e0d56ad2383772bec"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_id_i: forall id fs G, In (id,fs) G -> list_norepet (map (@fst _ _) G) -> find_id id G = Some fs.",
            "VernacStartTheoremProof",
            "6503056bb5369297cf5f30a9d64fc0b2d57bebb0"
        ],
        [
            "induction G; simpl; intros.",
            "VernacExtend",
            "ad928ffba3919aa1c8f187fd8207de43bdb575c0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite if_true; auto.",
            "VernacExtend",
            "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "2721274aada33cbec3c1f62204a14a93dcf297fd"
        ],
        [
            "destruct a as [i j].",
            "VernacExtend",
            "c9a79e400ff80eb2f66da4661293a7e0727bcca8"
        ],
        [
            "if_tac.",
            "VernacExtend",
            "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "simpl in *; f_equal.",
            "VernacExtend",
            "bb85cbb39878f53248a196afdfd156ab80594e7b"
        ],
        [
            "apply in_map_fst in H.",
            "VernacExtend",
            "eef9980cfd82776923e1654330d921d3cfd580c1"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_id_e: forall id G fs, find_id id G = Some fs -> In (id,fs) G.",
            "VernacStartTheoremProof",
            "fa523d0f14f05b4d81e6a757a7e34869db188be8"
        ],
        [
            "induction G; simpl; intros.",
            "VernacExtend",
            "ad928ffba3919aa1c8f187fd8207de43bdb575c0"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "destruct a.",
            "VernacExtend",
            "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
        ],
        [
            "if_tac in H.",
            "VernacExtend",
            "37665ad4b9e4ccc2d0c8acd96b43848e24a487f1"
        ],
        [
            "inv H; subst; auto.",
            "VernacExtend",
            "7095714471a467525478fe2ee601efd96c8537df"
        ],
        [
            "right; apply (IHG fs); auto.",
            "VernacExtend",
            "164c5f3b8441b9a58e605a83bc3083ecd5cecc55"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition initial_core' {F} (ge: Genv.t (fundef F) type) (G: funspecs) (n: nat) (loc: address) : resource := if Z.eq_dec (snd loc) 0 then match Genv.invert_symbol ge (fst loc) with | Some id => match find_id id G with | Some (mk_funspec fsig cc A P Q _ _) => PURE (FUN fsig cc) (SomeP (SpecTT A) (fun ts => fmap _ (approx n) (approx n) (packPQ P Q ts))) | None => NO Share.bot bot_unreadable end | None => NO Share.bot bot_unreadable end else NO Share.bot bot_unreadable.",
            "VernacDefinition",
            "305124d559b7b61725457b6d22957b06f5b7fbf3"
        ],
        [
            "Program Definition initial_core {F} (ge: Genv.t (fundef F) type) (G: funspecs) (n: nat): rmap := proj1_sig (make_rmap (initial_core' ge G n) nil n _ eq_refl).",
            "VernacDefinition",
            "bf3fa18a9e0124a8f7e756f70e4c38632f3272f9"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality loc; unfold compose, initial_core'.",
            "VernacExtend",
            "a9d3a7f47b68cdc7610a3ade14e43e3888f78ba2"
        ],
        [
            "if_tac; [ | simpl; auto].",
            "VernacExtend",
            "7e36b8948bf018a4800574acfc8da0ac60f9a0a7"
        ],
        [
            "destruct (Genv.invert_symbol ge (fst loc)); [ | simpl; auto].",
            "VernacExtend",
            "0b12bbacd1ed23064c9909a38a542df1b2fc5b06"
        ],
        [
            "destruct (find_id i G); [ | simpl; auto].",
            "VernacExtend",
            "a2166913c87ea17b8a433363d1927308577f95e7"
        ],
        [
            "destruct f.",
            "VernacExtend",
            "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
        ],
        [
            "unfold resource_fmap.",
            "VernacExtend",
            "9e3613be03b663ae3677a4b82fcc167d580790d3"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "change R.approx with approx.",
            "VernacExtend",
            "78c382330e37edc04deaff7908718b84ea4bae04"
        ],
        [
            "extensionality i0 ts b rho.",
            "VernacExtend",
            "ce511f6eb8247041a7c620d717f63b33fb06aa21"
        ],
        [
            "rewrite fmap_app.",
            "VernacExtend",
            "e70cff1dc9542841bc18109682f87442f06f4b9e"
        ],
        [
            "pattern (approx n) at 7 8 9.",
            "VernacExtend",
            "d0a2464e788f4104e6cc3190c5fb669db8823104"
        ],
        [
            "rewrite <- approx_oo_approx.",
            "VernacExtend",
            "25eb1f9a629318bf236ef4653aa336dfcf114c9b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import VST.veric.ghost_PCM.",
            "VernacRequire",
            "5d7faafceb88954f1dbb2ca1c1b6f51aa750b35e"
        ],
        [
            "Program Definition initial_core_ext {F Z} (ora : Z) (ge: Genv.t (fundef F) type) (G: funspecs) (n: nat): rmap := proj1_sig (make_rmap (initial_core' ge G n) (Some (ext_ghost ora, NoneP) :: nil) n _ eq_refl).",
            "VernacDefinition",
            "5c9fd5a58391fb78d9866a8f668ac214904da814"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality loc; unfold compose, initial_core'.",
            "VernacExtend",
            "a9d3a7f47b68cdc7610a3ade14e43e3888f78ba2"
        ],
        [
            "if_tac; [ | simpl; auto].",
            "VernacExtend",
            "7e36b8948bf018a4800574acfc8da0ac60f9a0a7"
        ],
        [
            "destruct (Genv.invert_symbol ge (fst loc)); [ | simpl; auto].",
            "VernacExtend",
            "0b12bbacd1ed23064c9909a38a542df1b2fc5b06"
        ],
        [
            "destruct (find_id i G); [ | simpl; auto].",
            "VernacExtend",
            "a2166913c87ea17b8a433363d1927308577f95e7"
        ],
        [
            "destruct f.",
            "VernacExtend",
            "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
        ],
        [
            "unfold resource_fmap.",
            "VernacExtend",
            "9e3613be03b663ae3677a4b82fcc167d580790d3"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "change R.approx with approx.",
            "VernacExtend",
            "78c382330e37edc04deaff7908718b84ea4bae04"
        ],
        [
            "extensionality i0 ts b rho.",
            "VernacExtend",
            "ce511f6eb8247041a7c620d717f63b33fb06aa21"
        ],
        [
            "rewrite fmap_app.",
            "VernacExtend",
            "e70cff1dc9542841bc18109682f87442f06f4b9e"
        ],
        [
            "pattern (approx n) at 7 8 9.",
            "VernacExtend",
            "d0a2464e788f4104e6cc3190c5fb669db8823104"
        ],
        [
            "rewrite <- approx_oo_approx.",
            "VernacExtend",
            "25eb1f9a629318bf236ef4653aa336dfcf114c9b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_disjoint_rev2: forall A (l1 l2: list A), list_disjoint l1 (rev l2) = list_disjoint l1 l2.",
            "VernacStartTheoremProof",
            "ca917efb16b1898066ac89e757e7e1493971d8fe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold list_disjoint.",
            "VernacExtend",
            "cbcd8eaac8ca0b4d87c54b26a95f594d080feaa6"
        ],
        [
            "apply prop_ext; split; intros; eapply H; eauto.",
            "VernacExtend",
            "9e6c5de79f4f84771875cb0b337f97454ea816a6"
        ],
        [
            "rewrite <- In_rev; auto.",
            "VernacExtend",
            "7ecda0917b35d7621940bd0b8d8aaeac6ccd6b6e"
        ],
        [
            "rewrite In_rev; auto.",
            "VernacExtend",
            "4abf3cbcbae07ab9a5b213188f2d722af16f2407"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import VST.veric.mapsto_memory_block.",
            "VernacRequire",
            "43ec190a100dabb78e347038c7902f4a559b9784"
        ],
        [
            "Lemma writable_blocks_app: forall bl bl' rho, writable_blocks (bl++bl') rho = writable_blocks bl rho * writable_blocks bl' rho.",
            "VernacStartTheoremProof",
            "a0ffec1a0472abb9059fe1b7adf4bb9c8ad710f7"
        ],
        [
            "induction bl; intros.",
            "VernacExtend",
            "64b49cf1ce295bf222ccbcb7e006284f8034c5f2"
        ],
        [
            "simpl; rewrite emp_sepcon; auto.",
            "VernacExtend",
            "d6fa6467c4c0881968e7331429b6178a644ee63f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct a as [b n]; simpl.",
            "VernacExtend",
            "b51fac6a940a05cfa398c9c0e671e8ad6d52b595"
        ],
        [
            "rewrite sepcon_assoc.",
            "VernacExtend",
            "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply IHbl.",
            "VernacExtend",
            "4d15bf9c64a9d8f261e394b193ec51665cb2da87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint prog_funct' {F V} (l: list (ident * globdef F V)) : list (ident * F) := match l with nil => nil | (i,Gfun f)::r => (i,f):: prog_funct' r | _::r => prog_funct' r end.",
            "VernacFixpoint",
            "1403465e787ed23c85825262b4002f86e8d54b3b"
        ],
        [
            "Definition prog_funct {F} (p: program F) := prog_funct' (prog_defs p).",
            "VernacDefinition",
            "fc5392647810251657bafa61f34685c2b0be752e"
        ],
        [
            "Lemma find_symbol_add_globals_nil: forall {F V} i g id p prog_pub, (Genv.find_symbol (Genv.add_globals (Genv.empty_genv F V prog_pub) ((i, g) :: nil)) id = Some p <-> (i = id /\\ 1%positive = p)).",
            "VernacStartTheoremProof",
            "113211b3fea4376f8f509a76acc68d2ed46f6e09"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Genv.find_symbol, Genv.add_global in *; simpl.",
            "VernacExtend",
            "91ddb76f39abc86624a77fc61ab70990a7158305"
        ],
        [
            "destruct (eq_dec i id); subst.",
            "VernacExtend",
            "a2a74b9c5f1bf01cee5fdc166f7f85e4db53e223"
        ],
        [
            "rewrite PTree.gss.",
            "VernacExtend",
            "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "rewrite PTree.gso by auto.",
            "VernacExtend",
            "fecf8284ee081d0a1090d47a4d72d32fa16d647c"
        ],
        [
            "split; intro Hx.",
            "VernacExtend",
            "fa0de748ab62964b97561affd9a9e80587a7387f"
        ],
        [
            "rewrite PTree.gempty in Hx; inv Hx.",
            "VernacExtend",
            "3d5e7408c9e3e57f1699abbc7f40252a73e666b9"
        ],
        [
            "inv Hx.",
            "VernacExtend",
            "e7d86493ff7ab82a35183e24168f6da2ef57f4b2"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_symbol_add_globals_cons: forall {F V} i g id dl prog_pub (HD: 0 < Zlength dl), ~ In i (map fst dl) -> list_norepet (map fst dl) -> (Genv.find_symbol (Genv.add_globals (Genv.empty_genv F V prog_pub) (dl ++ (i, g) :: nil)) id = Some (1 + (Z.to_pos (Zlength dl)))%positive <-> i = id).",
            "VernacStartTheoremProof",
            "5300c30cdb12fbb78305bbae397e03637ecbe53a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Genv.genv_next (Genv.empty_genv F V prog_pub) = 1%positive) by reflexivity.",
            "VernacExtend",
            "05d30365e0c6507438d865517e268ac95707a955"
        ],
        [
            "assert (Genv.find_symbol (Genv.empty_genv F V prog_pub) id = None) by (intros; apply PTree.gempty).",
            "VernacExtend",
            "66a81fc9ee73902127bac893b661268baa363700"
        ],
        [
            "forget (Genv.empty_genv F V prog_pub) as ge.",
            "VernacExtend",
            "9951c82b59026f2e5cbc6467d85e9df285f55aeb"
        ],
        [
            "forget (1%positive) as n.",
            "VernacExtend",
            "c38e1f8acac83cddaa0536fb63454e44f65173e7"
        ],
        [
            "revert ge n H H0 H1 H2 HD; induction dl; intros.",
            "VernacExtend",
            "d06ae99535bae56698844390fdc619efe6e80dd8"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite Zlength_nil in HD.",
            "VernacExtend",
            "b7a89cc8ba94c288f22b09b737d3226a8e2be625"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "rewrite Zlength_cons in *.",
            "VernacExtend",
            "d830a2f67b4441abd1b7fdb7d225bc45c7ff5b2f"
        ],
        [
            "destruct a as [a ag]; simpl in *.",
            "VernacExtend",
            "9ddfe255c554fa1e32cd72fa18cdcc4e809803e8"
        ],
        [
            "destruct dl.",
            "VernacExtend",
            "c67dfacdcfe092d1d2b3946197eb4fc3757efdea"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "clear IHdl.",
            "VernacExtend",
            "7e00b88ee3fcc6256fe04a30329dcc4e5ead42eb"
        ],
        [
            "assert (a<>i /\\ ~ False) by (clear - H; intuition).",
            "VernacExtend",
            "759ba97bd3e366fafc45a7538d244f699905235c"
        ],
        [
            "clear H; destruct H3.",
            "VernacExtend",
            "49aaaa0e5ce65b14aee6ac67b14e2969d7ab15ae"
        ],
        [
            "destruct (eq_dec id a).",
            "VernacExtend",
            "5dd933a8803de71003e604a9425becb5bcee4e21"
        ],
        [
            "subst id.",
            "VernacExtend",
            "767d665b900c00267662410c47cd78d0b487ae49"
        ],
        [
            "unfold Genv.find_symbol, Genv.add_global; simpl.",
            "VernacExtend",
            "b3a6d013cb9d082f5e53410d6072f82567d7e50b"
        ],
        [
            "rewrite PTree.gso; trivial.",
            "VernacExtend",
            "472001332d19e3b1760c2475302e635d84d78b57"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite PTree.gss.",
            "VernacExtend",
            "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
        ],
        [
            "split; intro; try congruence.",
            "VernacExtend",
            "3fa7dfcf61d8aead983d890fdb089ba824cbdece"
        ],
        [
            "assert (n = n+1)%positive.",
            "VernacExtend",
            "ad4c538fc9feffc57034906771c03769c1e8b7de"
        ],
        [
            "clear - H4.",
            "VernacExtend",
            "7ad4fa4367cbe47d146afb7be5ec40c3a2fff6d3"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "xomega.",
            "VernacExtend",
            "92dc13ff6a078243e0cd72420247996d076ca43b"
        ],
        [
            "unfold Genv.find_symbol, Genv.add_global; simpl.",
            "VernacExtend",
            "b3a6d013cb9d082f5e53410d6072f82567d7e50b"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "destruct (eq_dec id i).",
            "VernacExtend",
            "7c55ae64a7319b820336f89833deda205433ab1f"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "rewrite PTree.gss.",
            "VernacExtend",
            "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
        ],
        [
            "rewrite Pplus_one_succ_r.",
            "VernacExtend",
            "2cd375d635413b8dbd134af40f5369fd2ef4e050"
        ],
        [
            "split; intro; try congruence.",
            "VernacExtend",
            "3fa7dfcf61d8aead983d890fdb089ba824cbdece"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite PTree.gso; trivial.",
            "VernacExtend",
            "472001332d19e3b1760c2475302e635d84d78b57"
        ],
        [
            "rewrite PTree.gso; trivial.",
            "VernacExtend",
            "472001332d19e3b1760c2475302e635d84d78b57"
        ],
        [
            "unfold Genv.find_symbol in H2.",
            "VernacExtend",
            "92f001dcdaa5cdaf2345dd57bd6f176935777913"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply n1; trivial.",
            "VernacExtend",
            "ad6a6b95c376e9e62623171864cb4af436d39ea2"
        ],
        [
            "replace ((n + Z.to_pos (Z.succ (Zlength (p ::dl))))%positive) with ((Pos.succ n) + Z.to_pos (Zlength (p ::dl)))%positive.",
            "VernacExtend",
            "9772781950ddc2b6757edc87fff328e36dec63a6"
        ],
        [
            "2: {",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "clear - n dl.",
            "VernacExtend",
            "21aa9aa5ef87bb2fdb06294f0982e5ae806da43c"
        ],
        [
            "rewrite Z2Pos.inj_succ.",
            "VernacExtend",
            "69011452172f49e24624a963f14d0ec364fc5f8e"
        ],
        [
            "rewrite Pplus_one_succ_r.",
            "VernacExtend",
            "2cd375d635413b8dbd134af40f5369fd2ef4e050"
        ],
        [
            "rewrite Pplus_one_succ_l.",
            "VernacExtend",
            "0b0c2b2508e7bbd54c8724e26e38d1e71e9e022f"
        ],
        [
            "rewrite Pos.add_assoc.",
            "VernacExtend",
            "27e041e46106af1ad116d4bb9ae9c15c831a0a9d"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite Zlength_correct.",
            "VernacExtend",
            "bce28114f16011eca46066cbf185fa28100a066c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Pos.of_nat_succ.",
            "VernacExtend",
            "d71b6c5ac0d48d2a309d26d14900d7dc47bc94d9"
        ],
        [
            "apply Pos2Z.is_pos.",
            "VernacExtend",
            "87f8b68919cf0de4fdbc603862643e870f7a6fd9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "2721274aada33cbec3c1f62204a14a93dcf297fd"
        ],
        [
            "assert (a<>i /\\ ~ In i (map fst (p::dl))) by (clear - H; intuition).",
            "VernacExtend",
            "cbab22004e01cac226442557f883ac7c5ab1e606"
        ],
        [
            "clear H; destruct H0.",
            "VernacExtend",
            "1440c411c022e5d396b8682c69e98029dd16668c"
        ],
        [
            "destruct (eq_dec id a).",
            "VernacExtend",
            "5dd933a8803de71003e604a9425becb5bcee4e21"
        ],
        [
            "subst id.",
            "VernacExtend",
            "767d665b900c00267662410c47cd78d0b487ae49"
        ],
        [
            "split; intro; try congruence.",
            "VernacExtend",
            "3fa7dfcf61d8aead983d890fdb089ba824cbdece"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "clear IHdl.",
            "VernacExtend",
            "7e00b88ee3fcc6256fe04a30329dcc4e5ead42eb"
        ],
        [
            "assert (~In a (map fst (((p::dl)++(i,g)::nil)))).",
            "VernacExtend",
            "2c3cd6dfad9dfe906c78807e22b37748c0f75240"
        ],
        [
            "rewrite map_app.",
            "VernacExtend",
            "89eca143edf6436bb079a40b9fedf852073d1711"
        ],
        [
            "rewrite in_app_iff.",
            "VernacExtend",
            "a44ebd311b9e7b2b97af8cffa97bd78b6ed93921"
        ],
        [
            "intros [?|?]; try contradiction.",
            "VernacExtend",
            "f1c3aa1ae8c670bcfa411b476fc37631b6c3c885"
        ],
        [
            "simpl in H3.",
            "VernacExtend",
            "2a96f120ac764efacadc60b978d01343f60aafa0"
        ],
        [
            "destruct H3; try congruence.",
            "VernacExtend",
            "c2402cbd21f6c0e72ef35b59a6b9782958253339"
        ],
        [
            "forget ((p::dl) ++ (i, g) :: nil) as vl.",
            "VernacExtend",
            "41e002194d0921fa340205237d8407ae770dd38f"
        ],
        [
            "assert (Genv.find_symbol (Genv.add_global ge (a,ag)) a = Some (Genv.genv_next ge)).",
            "VernacExtend",
            "99f6617281eb87a523c2fc40fc9d02da6e3e5099"
        ],
        [
            "unfold Genv.find_symbol, Genv.add_global; simpl.",
            "VernacExtend",
            "b3a6d013cb9d082f5e53410d6072f82567d7e50b"
        ],
        [
            "rewrite PTree.gss; auto.",
            "VernacExtend",
            "2e6e494a9be277b844d1b8cadab1a7f13e2323b0"
        ],
        [
            "forget (Genv.add_global ge (a,ag)) as ge1.",
            "VernacExtend",
            "910268b9e4df3fcec5c68c8411dd39a8ebf020de"
        ],
        [
            "forget (Genv.genv_next ge) as N; clear ge H2.",
            "VernacExtend",
            "8b86f168f03cbbddfcd9294c28ffaff6d9f9576b"
        ],
        [
            "assert (Pos.succ N + Z.to_pos (Zlength (p :: dl)) > N)%positive by xomega.",
            "VernacExtend",
            "244b400522f087e24f37b1e124b7c0e1cc432e25"
        ],
        [
            "forget (Pos.succ N + Z.to_pos (Zlength (p :: dl)))%positive as K.",
            "VernacExtend",
            "bda168385bce9c1647e505cd69615d3bba8861d6"
        ],
        [
            "clear - H1 H3 H2 H4.",
            "VernacExtend",
            "8ad6c9a832138eddbf9bf7573e67e18df266e3a4"
        ],
        [
            "revert ge1 K H2 H1 H3 H4; induction vl; simpl; intros.",
            "VernacExtend",
            "833d9001bb61e70cf0eaef2ee69124548ea1d232"
        ],
        [
            "inversion2 H1 H4; xomega.",
            "VernacExtend",
            "87401bd5e4eaf6900080b124a0bc13976b3f7823"
        ],
        [
            "apply (IHvl (Genv.add_global ge1 a0) K H2); auto.",
            "VernacExtend",
            "1918f930cfbb4cc8f274834db93713c72fdf05ba"
        ],
        [
            "unfold Genv.find_symbol, Genv.add_global in H4|-*; simpl in *.",
            "VernacExtend",
            "e16ed71ba3ccf6cd6eedaee4e541ae8b46863e38"
        ],
        [
            "rewrite PTree.gso; auto.",
            "VernacExtend",
            "63a9bc52270c656dbc7d2efe43bb711a7ed93e4e"
        ],
        [
            "apply IHdl; auto.",
            "VernacExtend",
            "aefc4630f94dc70c4a2468bb3c31b02882a58ad8"
        ],
        [
            "unfold Genv.find_symbol, Genv.add_global in H2|-*; simpl.",
            "VernacExtend",
            "7654c68d72cb544dbe656b344d5dba2d592fc79b"
        ],
        [
            "rewrite PTree.gso; auto.",
            "VernacExtend",
            "63a9bc52270c656dbc7d2efe43bb711a7ed93e4e"
        ],
        [
            "rewrite Zlength_correct.",
            "VernacExtend",
            "bce28114f16011eca46066cbf185fa28100a066c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Pos.of_nat_succ.",
            "VernacExtend",
            "d71b6c5ac0d48d2a309d26d14900d7dc47bc94d9"
        ],
        [
            "apply Pos2Z.is_pos.",
            "VernacExtend",
            "87f8b68919cf0de4fdbc603862643e870f7a6fd9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_symbol_add_globals: forall {F V} i g id dl prog_pub, ~ In i (map fst dl) -> list_norepet (map fst dl) -> match dl with nil => forall p, (Genv.find_symbol (Genv.add_globals (Genv.empty_genv F V prog_pub) ((i, g) :: nil)) id = Some p <-> (i = id /\\ 1%positive = p)) | _ => (Genv.find_symbol (Genv.add_globals (Genv.empty_genv F V prog_pub) (dl ++ (i, g) :: nil)) id = Some (1 + (Z.to_pos (Zlength dl)))%positive <-> i = id) end.",
            "VernacStartTheoremProof",
            "c7f92ebf951934ecc91d651ca4cfaafa2a1c2e52"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct dl.",
            "VernacExtend",
            "c67dfacdcfe092d1d2b3946197eb4fc3757efdea"
        ],
        [
            "intros; apply find_symbol_add_globals_nil.",
            "VernacExtend",
            "1846cdbc17709fba59b4e2f5990f52fe723982d3"
        ],
        [
            "apply find_symbol_add_globals_cons; trivial.",
            "VernacExtend",
            "7fbc0911c7c3d90ec35bd605e2bc3fe259a22d2e"
        ],
        [
            "rewrite Zlength_correct.",
            "VernacExtend",
            "bce28114f16011eca46066cbf185fa28100a066c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Pos.of_nat_succ.",
            "VernacExtend",
            "d71b6c5ac0d48d2a309d26d14900d7dc47bc94d9"
        ],
        [
            "apply Pos2Z.is_pos.",
            "VernacExtend",
            "87f8b68919cf0de4fdbc603862643e870f7a6fd9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_symbol_add_globals': forall {F V} i g id dl prog_pub, match dl with nil => forall p, (Genv.find_symbol (Genv.add_globals (Genv.empty_genv F V prog_pub) ((i, g) :: nil)) id = Some p <-> (i = id /\\ 1%positive = p)) | _ => ~ In i (map fst dl) -> list_norepet (map fst dl) -> (Genv.find_symbol (Genv.add_globals (Genv.empty_genv F V prog_pub) (dl ++ (i, g) :: nil)) id = Some (1 + (Z.to_pos (Zlength dl)))%positive <-> i = id) end.",
            "VernacStartTheoremProof",
            "2a5757b3e01d0e5ad495a867f901c2039394e40e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct dl.",
            "VernacExtend",
            "c67dfacdcfe092d1d2b3946197eb4fc3757efdea"
        ],
        [
            "intros; apply find_symbol_add_globals_nil.",
            "VernacExtend",
            "1846cdbc17709fba59b4e2f5990f52fe723982d3"
        ],
        [
            "apply find_symbol_add_globals_cons; trivial.",
            "VernacExtend",
            "7fbc0911c7c3d90ec35bd605e2bc3fe259a22d2e"
        ],
        [
            "rewrite Zlength_correct.",
            "VernacExtend",
            "bce28114f16011eca46066cbf185fa28100a066c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Pos.of_nat_succ.",
            "VernacExtend",
            "d71b6c5ac0d48d2a309d26d14900d7dc47bc94d9"
        ],
        [
            "apply Pos2Z.is_pos.",
            "VernacExtend",
            "87f8b68919cf0de4fdbc603862643e870f7a6fd9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_error_app: forall {T} (al bl : list T) (j: nat), nth_error (al++bl) (length al + j) = nth_error bl j.",
            "VernacStartTheoremProof",
            "3767f7772f62eb6a986a44fa40a77a79bf4f243f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction al; simpl; auto.",
            "VernacExtend",
            "2107f27710ba5477c1fc1dd778c5ddf998bd0a93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_error_app1: forall {T} (al bl : list T) (j: nat), (j < length al)%nat -> nth_error (al++bl) j = nth_error al j.",
            "VernacStartTheoremProof",
            "2862f2b24207b480c350da11c16bee0a0c9ecd03"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert al H; induction j; destruct al; simpl; intros; auto; try omegaContradiction.",
            "VernacExtend",
            "b2ce09e164667f33d44cb03eb510d0f870eaebad"
        ],
        [
            "apply IHj.",
            "VernacExtend",
            "7d899a4df818b523664b617886a9c89fec174ee2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_error_rev: forall T (vl: list T) (n: nat), (n < length vl)%nat -> nth_error (rev vl) n = nth_error vl (length vl - n - 1).",
            "VernacStartTheoremProof",
            "a0f8cf216e91d6472bf096b5ea4be8079f517d9c"
        ],
        [
            "induction vl; simpl; intros.",
            "VernacExtend",
            "2a7d6c49d917722032aa26cade8611316206deef"
        ],
        [
            "apply nth_error_nil.",
            "VernacExtend",
            "1cd4f3b056d8d5ebafe0bcf00c5099aff468ef81"
        ],
        [
            "destruct (eq_dec n (length vl)).",
            "VernacExtend",
            "cb7330bece18f04954328fc6bd4786254c8edd33"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "pattern (length vl) at 1; rewrite <- rev_length.",
            "VernacExtend",
            "aabe1a34dd2e98c73f7ddb4f63ea0115994cc91b"
        ],
        [
            "rewrite <- (plus_0_r (length (rev vl))).",
            "VernacExtend",
            "9f416e8ee5a9d9349a64db0093b0cf680d40262e"
        ],
        [
            "rewrite nth_error_app.",
            "VernacExtend",
            "ae87997edd72743f64634ea611d1fedb1961cb6f"
        ],
        [
            "case_eq (length vl); intros.",
            "VernacExtend",
            "bcc42b8bf18ee4bc6fa630714d6c38cdee73fe95"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace (S n - n - 1)%nat with O by omega.",
            "VernacExtend",
            "24a92770fad45e7c712b66ee73fee39795a8a6c4"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "rewrite nth_error_app1 by (rewrite rev_length; omega).",
            "VernacExtend",
            "81515973773c260c1bba4af4c07541253b969f82"
        ],
        [
            "rewrite IHvl by omega.",
            "VernacExtend",
            "2eac45f5b2415694f4b0a6828e2ce39f6ef3812a"
        ],
        [
            "clear IHvl.",
            "VernacExtend",
            "2173d40560c64f83005270de188a518ef245f2ac"
        ],
        [
            "destruct n; destruct (length vl).",
            "VernacExtend",
            "89ab2aa2335034b31e640dfd3a4bb4c071a47217"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (n-0)%nat with n by omega; auto.",
            "VernacExtend",
            "9bddaddf41fa97d80e81403d4b4a5b914aeb36df"
        ],
        [
            "omegaContradiction.",
            "VernacExtend",
            "329a0d87fada76e54a403fa49705e937670711cd"
        ],
        [
            "replace (S n1 - n - 1)%nat with (S (S n1 - S n - 1))%nat by omega.",
            "VernacExtend",
            "6ba7feda03d382177f81011e5092ff0df2f6e9ee"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlength_app: forall T (al bl: list T), Zlength (al++bl) = Zlength al + Zlength bl.",
            "VernacStartTheoremProof",
            "59a5c5c395ac712b35fee53b80dbc60bb87215c0"
        ],
        [
            "induction al; intros.",
            "VernacExtend",
            "1068feabd2738258b572f93c7133cfbbce45122b"
        ],
        [
            "simpl app; rewrite Zlength_nil; omega.",
            "VernacExtend",
            "2ce3fdb0b1b3a64d1327ec33b5549bf900c9a2d6"
        ],
        [
            "simpl app; repeat rewrite Zlength_cons; rewrite IHal; omega.",
            "VernacExtend",
            "4bb8131c3fc589fd7268b33a2bcc6f4259e454d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlength_rev: forall T (vl: list T), Zlength (rev vl) = Zlength vl.",
            "VernacStartTheoremProof",
            "88cbda68e8c4a696c8c35df42c162c23241bf42a"
        ],
        [
            "induction vl; simpl; auto.",
            "VernacExtend",
            "c4a370b7cee0cf2f6c9e56c69ab73cbcdc1af5ee"
        ],
        [
            "rewrite Zlength_cons.",
            "VernacExtend",
            "e06d429bdf690ef195f65a36ea0771f78b7f113c"
        ],
        [
            "rewrite <- IHvl.",
            "VernacExtend",
            "a59b576cf0f2799d71bc7f3225ff38b273aeea7b"
        ],
        [
            "rewrite Zlength_app.",
            "VernacExtend",
            "01056c2e43adce39e550c2f49110b1c8022d3b99"
        ],
        [
            "rewrite Zlength_cons.",
            "VernacExtend",
            "e06d429bdf690ef195f65a36ea0771f78b7f113c"
        ],
        [
            "rewrite Zlength_nil; omega.",
            "VernacExtend",
            "98170f83cbde0983d8f1ea7d95c89780d6263ebc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlength_map: forall A B (f: A -> B) l, Zlength (map f l) = Zlength l.",
            "VernacStartTheoremProof",
            "062d66707474cb093241ccc85fde621c6a9a808b"
        ],
        [
            "induction l; simpl; auto.",
            "VernacExtend",
            "2300dcaca2cea0b38a7d9c3b8a28bfa9feaddecf"
        ],
        [
            "repeat rewrite Zlength_cons.",
            "VernacExtend",
            "7c8c8857495da06ba92c61fac948f11461198006"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_globals_hack_nil {F}: forall gev prog_pub, gev = Genv.add_globals (Genv.empty_genv (fundef F) type prog_pub) (rev nil) -> forall id, Genv.find_symbol gev id = None.",
            "VernacStartTheoremProof",
            "1d426dd66eede391e2d9d40f515ea322871d6fa1"
        ],
        [
            "simpl; intros; subst.",
            "VernacExtend",
            "ea3eaa2d2108f8aa67fb018caa2b8031ce89a367"
        ],
        [
            "unfold Genv.find_symbol, Genv.empty_genv.",
            "VernacExtend",
            "fc4148fc64a8db1ba0a4134daf93f9182c2aecdc"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply PTree.gempty.",
            "VernacExtend",
            "dbe505a41ab4e1d466fbd0ed0206761a607d13e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_globals_hack_single {F}: forall v gev prog_pub, gev = Genv.add_globals (Genv.empty_genv (fundef F) type prog_pub) (cons v nil) -> forall id b, (Genv.find_symbol gev id = Some b <-> fst v = id /\\ b = 1%positive).",
            "VernacStartTheoremProof",
            "32b2cd9fa3071a43275e0d6829f48a597a101497"
        ],
        [
            "simpl; intros; subst.",
            "VernacExtend",
            "ea3eaa2d2108f8aa67fb018caa2b8031ce89a367"
        ],
        [
            "unfold Genv.find_symbol, Genv.empty_genv.",
            "VernacExtend",
            "fc4148fc64a8db1ba0a4134daf93f9182c2aecdc"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (peq (fst v) id).",
            "VernacExtend",
            "c5a69140c0853865ee80e864f6f0b8a2a9d64e26"
        ],
        [
            "subst id.",
            "VernacExtend",
            "767d665b900c00267662410c47cd78d0b487ae49"
        ],
        [
            "rewrite PTree.gss.",
            "VernacExtend",
            "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "destruct H; subst.",
            "VernacExtend",
            "cfced62c1f73763fa32f2f64f12dc4faf51d1289"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite PTree.gso.",
            "VernacExtend",
            "6aa89209a57c294bcf8a2206f8ecdff703d6861a"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "rewrite PTree.gempty in H.",
            "VernacExtend",
            "76be3bb2fc63bbedb66ba512de4e1a5820ff2f7c"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "destruct H; subst.",
            "VernacExtend",
            "cfced62c1f73763fa32f2f64f12dc4faf51d1289"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance EqDec_Z : EqDec Z := zeq.",
            "VernacInstance",
            "a2b782fe227274f0ea4bf9584b44a119ba379549"
        ],
        [
            "Lemma advance_next_length: forall F V vl n, @Genv.advance_next F V vl n = (Pos.of_nat (S (length vl)) + n - 1)%positive.",
            "VernacStartTheoremProof",
            "4dee98c955dc44312da56d6cd82bf096da2a69ed"
        ],
        [
            "unfold Genv.advance_next; induction vl; simpl fold_left; intros.",
            "VernacExtend",
            "a0ed62c8745c8118ffa3d3db2896f1cd6faca056"
        ],
        [
            "simpl Pos.of_nat.",
            "VernacExtend",
            "21b8e90d6a56963411cb2462e9ffb519a4c7a050"
        ],
        [
            "rewrite Pos.add_comm.",
            "VernacExtend",
            "4f794b32aa99f040ef36918dd1a14806df118107"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Pos.add_sub.",
            "VernacExtend",
            "f9e2aadd7ddf5264dbd0192a26429397cc6779fd"
        ],
        [
            "simpl length.",
            "VernacExtend",
            "cab663a1b923ec4538f37af4b3dac18c303feac5"
        ],
        [
            "rewrite IHvl.",
            "VernacExtend",
            "d5dda43ac6dace47f4375bb6c381ea22422adf8d"
        ],
        [
            "rewrite Pplus_one_succ_l.",
            "VernacExtend",
            "0b0c2b2508e7bbd54c8724e26e38d1e71e9e022f"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry; rewrite Nat2Pos.inj_succ by omega.",
            "VernacExtend",
            "63b19a4b818c9bcb5167ddbc14759b060fe9b0e4"
        ],
        [
            "rewrite Pplus_one_succ_r.",
            "VernacExtend",
            "2cd375d635413b8dbd134af40f5369fd2ef4e050"
        ],
        [
            "symmetry; apply Pos.add_assoc.",
            "VernacExtend",
            "fe77a768178d19f2872011c08aa2769e6110e55a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zpos_Posofnat: forall n, (n>0)%nat -> Z.pos (Pos.of_nat n) = Z.of_nat n.",
            "VernacStartTheoremProof",
            "4a4ddc6c57181214513651a893fd39e308706caa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "simpl Z.of_nat.",
            "VernacExtend",
            "5b88fb18e8f5dd740462ab93f3e792d71d02065c"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry; apply Pos.of_nat_succ.",
            "VernacExtend",
            "1108d21fb104a75e89851a516eeb19fb1a26193d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_globals_hack {F}: forall vl gev prog_pub, list_norepet (map fst vl) -> gev = Genv.add_globals (Genv.empty_genv (fundef F) type prog_pub) (rev vl) -> (forall id b, 0 <= Zpos b - 1 < Zlength vl -> (Genv.find_symbol gev id = Some b <-> nth_error (map (@fst _ _) vl) (length vl - Pos.to_nat b) = Some id)).",
            "VernacStartTheoremProof",
            "5117c83711f36b1253f905722e6a147b299d059e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply iff_trans with (nth_error (map fst (rev vl)) (nat_of_Z (Zpos b - 1)) = Some id).",
            "VernacExtend",
            "af7c2cca450d5fea7cd525955fe3743a24140be7"
        ],
        [
            "2: {",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "rewrite map_rev; rewrite nth_error_rev.",
            "VernacExtend",
            "1991d411a562e2902612ae6c297ad04a548bed39"
        ],
        [
            "replace (length (map fst vl) - nat_of_Z (Zpos b - 1) - 1)%nat with (length vl - Pos.to_nat b)%nat ; [intuition | ].",
            "VernacExtend",
            "733f3b5368b96b802532b600430518b5bc40d41e"
        ],
        [
            "rewrite map_length.",
            "VernacExtend",
            "fcd7ed281a0bd0ae53f660fd53f2725d569c74a9"
        ],
        [
            "transitivity (length vl - (nat_of_Z (Z.pos b-1)+1))%nat; try omega.",
            "VernacExtend",
            "45de034060c6d0602e6564cbdf6d16071bbfc584"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "change (Pos.to_nat b = (nat_of_Z (Z.pos b - 1) + nat_of_Z 1)%nat).",
            "VernacExtend",
            "19430af8af31e85d0aa4ef34ce667ee280aa580e"
        ],
        [
            "rewrite <- nat_of_Z_plus by omega.",
            "VernacExtend",
            "d42effd0732a694f5718868886b3cbc8d9f08f20"
        ],
        [
            "rewrite <- Z2Nat.inj_pos.",
            "VernacExtend",
            "d1a10d76c1ea591a37460f7a39b02ec8de736bdc"
        ],
        [
            "unfold nat_of_Z.",
            "VernacExtend",
            "d483864cd088c28d3ac290906af0208407d7de9f"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite map_length.",
            "VernacExtend",
            "fcd7ed281a0bd0ae53f660fd53f2725d569c74a9"
        ],
        [
            "rewrite Zlength_correct in H1.",
            "VernacExtend",
            "345b25e233a0729e39d1644d2afd2c8be976e400"
        ],
        [
            "forget (Z.pos b-1) as i; forget (length vl) as n; clear - H1.",
            "VernacExtend",
            "29a6d73762c418646d170b2cb04fe55ea5756145"
        ],
        [
            "apply inj_lt_rev.",
            "VernacExtend",
            "7a501cf486f6cfc1e887661f5b65745393849b70"
        ],
        [
            "rewrite nat_of_Z_max; auto.",
            "VernacExtend",
            "63c2033b443bf42b54ba30dd773cfc5a6f0126ba"
        ],
        [
            "rewrite (Coqlib.Zmax_spec i 0).",
            "VernacExtend",
            "48d3f5cf091321aaf1d8879affb836be2f5c93e2"
        ],
        [
            "if_tac; omega.",
            "VernacExtend",
            "db986a9ce412efb1e194738c0e63f15bfab4a066"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rename H1 into Hb; revert H; induction vl; simpl rev; simpl map; simpl Genv.find_symbol; intros; try rewrite Zlength_nil in *.",
            "VernacExtend",
            "ea48228b590d6b1dc9f6d11a540bf75f9937f14e"
        ],
        [
            "unfold Genv.find_symbol.",
            "VernacExtend",
            "13ebb3ad8f4f58684efd890c38fb2d8ee19ae478"
        ],
        [
            "rewrite PTree.gempty.",
            "VernacExtend",
            "02ad4f08527ee6f058bb5b2fc6b52855b65cf49f"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct a.",
            "VernacExtend",
            "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "rewrite Zlength_cons in Hb.",
            "VernacExtend",
            "d2b0318b0250a24b41360671d0d097f78b3b519f"
        ],
        [
            "destruct (eq_dec (Z.pos b-1) (Zlength vl)).",
            "VernacExtend",
            "77760541190c7202a7dee39105fffda4b962fa45"
        ],
        [
            "clear IHvl Hb.",
            "VernacExtend",
            "cd640ad06c719d3572656fe3d5b0bfc384d288f6"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "rewrite Zlength_correct.",
            "VernacExtend",
            "bce28114f16011eca46066cbf185fa28100a066c"
        ],
        [
            "rewrite nat_of_Z_of_nat.",
            "VernacExtend",
            "b85d353bdf10702ae04b63bdc4f55df625ad5430"
        ],
        [
            "replace b with (Z.to_pos (1+ (Zlength vl))) by (rewrite <- e; replace (1 + (Z.pos b - 1)) with (Z.pos b) by omega; apply Pos2Z.id).",
            "VernacExtend",
            "62856810d71a80b33771fbbde8f7f3091a71a2bf"
        ],
        [
            "clear e b.",
            "VernacExtend",
            "6b43711d31819da50faa7bdfbd578e01cef36eb0"
        ],
        [
            "rewrite <- Zlength_rev.",
            "VernacExtend",
            "1dfe21b3465a30d8c909413ca7f50ed8dc2565d7"
        ],
        [
            "rewrite <- rev_length.",
            "VernacExtend",
            "1d66c217d1d26e5b57e00f406420bcb1d54a2643"
        ],
        [
            "replace (length (rev vl)) with (length (rev vl) + 0)%nat by omega.",
            "VernacExtend",
            "482c813c67f73feb09cce0b9e7ec2320cf8e9392"
        ],
        [
            "rewrite map_app.",
            "VernacExtend",
            "89eca143edf6436bb079a40b9fedf852073d1711"
        ],
        [
            "rewrite <- map_length with (f:=@fst ident (globdef (fundef F) type)).",
            "VernacExtend",
            "64e200acd7f9ba5245beb8285b952b44b989f1b5"
        ],
        [
            "rewrite nth_error_app.",
            "VernacExtend",
            "ae87997edd72743f64634ea611d1fedb1961cb6f"
        ],
        [
            "apply iff_trans with (i=id); [ | simpl; split; intro; subst; auto; inv H; auto].",
            "VernacExtend",
            "773dacc2604ea8044b7b074e663d905d3cab7ce9"
        ],
        [
            "rewrite In_rev in H2.",
            "VernacExtend",
            "f1922870a86e129391a0da0836a0786c3ca4884f"
        ],
        [
            "rewrite <- map_rev in H2.",
            "VernacExtend",
            "42295cec5426bcdaebe48d9cf94192aedceb5e9f"
        ],
        [
            "rewrite <- list_norepet_rev in H3.",
            "VernacExtend",
            "16a9bdd5d3f52fce810d4be37f66c7f692e4c830"
        ],
        [
            "rewrite <- map_rev in H3.",
            "VernacExtend",
            "377c5a07973ad99077b414bc5ec7ceae98361250"
        ],
        [
            "forget (rev vl) as dl.",
            "VernacExtend",
            "39e1f5b7f36eb094d65f9390c5ec7ec5ac79f8a5"
        ],
        [
            "assert (FSA := find_symbol_add_globals i g id _ prog_pub H2 H3).",
            "VernacExtend",
            "48020810b70a22aa20a2d86309f70c58cc43d7a6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct dl.",
            "VernacExtend",
            "c67dfacdcfe092d1d2b3946197eb4fc3757efdea"
        ],
        [
            "rewrite (FSA (Z.to_pos (1 + Zlength (@nil (ident * globdef (fundef F) type))))).",
            "VernacExtend",
            "c62d78e6334596f4c6168dafb3e4b4b11a61caf2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "replace (Z.to_pos (1 + Zlength (p :: dl))) with (1 + Z.to_pos (Zlength (p :: dl)))%positive ; auto.",
            "VernacExtend",
            "306df2e239e9be18c40b2ca846797a6eedf899ae"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "rewrite Zlength_cons.",
            "VernacExtend",
            "e06d429bdf690ef195f65a36ea0771f78b7f113c"
        ],
        [
            "rewrite Zlength_correct.",
            "VernacExtend",
            "bce28114f16011eca46066cbf185fa28100a066c"
        ],
        [
            "rewrite Z2Pos.inj_add; try solve [simpl; omega].",
            "VernacExtend",
            "d2cdbeb277384d5c0ad8cb9d85b73fc45fda547e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "spec IHvl ; [ omega |].",
            "VernacExtend",
            "f84150a768113a8750e8462ede5890a6345ded5a"
        ],
        [
            "specialize (IHvl H3).",
            "VernacExtend",
            "03928a503e2803ca56d56a551a6b539f83e1bfc5"
        ],
        [
            "rewrite Genv.add_globals_app.",
            "VernacExtend",
            "34aedb78220d8216aa68c7c571996341e90a667f"
        ],
        [
            "unfold Genv.add_globals at 1.",
            "VernacExtend",
            "1f5333b75d72660720c6f8b4fe582d38058aef64"
        ],
        [
            "simpl fold_left.",
            "VernacExtend",
            "64226c337ec60316cafd63bfd1aae292295629fd"
        ],
        [
            "unfold Genv.find_symbol, Genv.add_global.",
            "VernacExtend",
            "c1c863af7f95fce14e12e8d9eda18273f16cdf91"
        ],
        [
            "simpl Genv.genv_symb.",
            "VernacExtend",
            "2680cdfda6071ae0ca809af492ed16c18e09ea19"
        ],
        [
            "destruct (eq_dec id i).",
            "VernacExtend",
            "7c55ae64a7319b820336f89833deda205433ab1f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "rewrite PTree.gss.",
            "VernacExtend",
            "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
        ],
        [
            "rewrite Genv.genv_next_add_globals.",
            "VernacExtend",
            "30dc8b31a6e3e9498962a1e755ceb113c2bd9833"
        ],
        [
            "rewrite advance_next_length.",
            "VernacExtend",
            "a4564eafc8306e4d25c63977c797da641d91ccda"
        ],
        [
            "simpl Genv.genv_next.",
            "VernacExtend",
            "82c260a9873fa88c6e5098d07cd0641db1114212"
        ],
        [
            "rewrite map_app.",
            "VernacExtend",
            "89eca143edf6436bb079a40b9fedf852073d1711"
        ],
        [
            "rewrite In_rev in H2.",
            "VernacExtend",
            "f1922870a86e129391a0da0836a0786c3ca4884f"
        ],
        [
            "rewrite <- map_rev in H2.",
            "VernacExtend",
            "42295cec5426bcdaebe48d9cf94192aedceb5e9f"
        ],
        [
            "rewrite Pos.add_sub.",
            "VernacExtend",
            "de862bcc4ec631e844e0a4b1a1646f2f0cf3e658"
        ],
        [
            "split; intro.",
            "VernacExtend",
            "966a6edea9c2088caf0e546be884ea531f6207b3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (H': b = Pos.of_nat (S (length (rev vl)))) by congruence.",
            "VernacExtend",
            "d2287762e032841afc362f4e5eb19fc69e0b9301"
        ],
        [
            "clear H; rename H' into H.",
            "VernacExtend",
            "bb0fdc7ab5f1dbb3d7b76ed1a513d625afdbf05c"
        ],
        [
            "subst b.",
            "VernacExtend",
            "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
        ],
        [
            "elimtype False; apply n; clear.",
            "VernacExtend",
            "51e77150824e79e537a7494f7791913d762a34cb"
        ],
        [
            "rewrite <- Zlength_rev.",
            "VernacExtend",
            "1dfe21b3465a30d8c909413ca7f50ed8dc2565d7"
        ],
        [
            "rewrite Zlength_correct.",
            "VernacExtend",
            "bce28114f16011eca46066cbf185fa28100a066c"
        ],
        [
            "forget (length (rev vl)) as i.",
            "VernacExtend",
            "cd8a428ca66be6d5e77bec67186863cbbd255625"
        ],
        [
            "rewrite Zpos_Posofnat by omega.",
            "VernacExtend",
            "889d8747e3f11a025b4136d89eaabade9a732aae"
        ],
        [
            "rewrite Nat2Z.inj_succ.",
            "VernacExtend",
            "1fc791f52357dc9e0a22fac0a6d82e87969a1699"
        ],
        [
            "unfold Z.succ.",
            "VernacExtend",
            "d3292e8337e33f78eeb3f491cfdb2987c4452e05"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "assert (Z.pos b-1 >= 0) by (clear - Hb; omega).",
            "VernacExtend",
            "ee8589fe2262eaea2aaa85b4acc18b2d1dac8019"
        ],
        [
            "pose proof (Coqlib.nat_of_Z_eq _ H0).",
            "VernacExtend",
            "29a80716ca664067be8be201e26ebf35b7c88217"
        ],
        [
            "clear - H1 H H2 n.",
            "VernacExtend",
            "1963e4bf46ee0b12e410a0cfe9eb3628d300180b"
        ],
        [
            "rewrite Zlength_correct in n.",
            "VernacExtend",
            "f6cfafbaac098f8773c92d835cda0a56190e1bd8"
        ],
        [
            "apply n.",
            "VernacExtend",
            "ed7192228e57856197020582fd87949160a69557"
        ],
        [
            "clear n.",
            "VernacExtend",
            "950078f0511238b7bf11b5533c9ffd133a02ab04"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "clear - H H2.",
            "VernacExtend",
            "82f9b4ae00547801c47f32d3ebb7b618798f5a8a"
        ],
        [
            "forget (nat_of_Z (Z.pos b-1)) as j.",
            "VernacExtend",
            "15956a8ee9f96be4bd776c320f8026f20b6153e9"
        ],
        [
            "replace (length vl) with (length (map fst (rev vl))) by (rewrite map_length; rewrite rev_length; auto).",
            "VernacExtend",
            "e8629ef15412364ec2dc0905e438a285fae414f8"
        ],
        [
            "forget (map fst (rev vl)) as al.",
            "VernacExtend",
            "e367525245c9fb535dbe7a97f2b46d58f5c19570"
        ],
        [
            "revert al H2 H; clear; induction j; destruct al; simpl; intros; auto.",
            "VernacExtend",
            "4ce8aad4c1e3536bdf86cdfb7d34b4361e46c415"
        ],
        [
            "inv H; intuition.",
            "VernacExtend",
            "65c4356ba9a8816a57c57a9663ce94443591b9ca"
        ],
        [
            "elimtype False; clear - H; induction j; inv H; auto.",
            "VernacExtend",
            "4d4120d5d11d2e8d7b568ebf480ecd34bd8bf465"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply IHj; auto.",
            "VernacExtend",
            "1195bf41b22f416958c4df9fff6e2c8933518990"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite PTree.gso by auto.",
            "VernacExtend",
            "fecf8284ee081d0a1090d47a4d72d32fa16d647c"
        ],
        [
            "rewrite map_app.",
            "VernacExtend",
            "89eca143edf6436bb079a40b9fedf852073d1711"
        ],
        [
            "destruct IHvl.",
            "VernacExtend",
            "cc1532b3b2ec443b098c2c85ec266e009b7dfe9f"
        ],
        [
            "split; intro.",
            "VernacExtend",
            "966a6edea9c2088caf0e546be884ea531f6207b3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply H in H1.",
            "VernacExtend",
            "46d1b6927673d867c7806cf0f74cc38356579bf8"
        ],
        [
            "rewrite nth_error_app1; auto.",
            "VernacExtend",
            "d526554e7401423563557dc4a53896ee63ae7f2f"
        ],
        [
            "clear - n Hb.",
            "VernacExtend",
            "60753d55e5404d9b5c8346c8e6a80688731df739"
        ],
        [
            "rewrite map_length.",
            "VernacExtend",
            "fcd7ed281a0bd0ae53f660fd53f2725d569c74a9"
        ],
        [
            "rewrite rev_length.",
            "VernacExtend",
            "c9d89bb1711705649f466d70124f5af155f7de57"
        ],
        [
            "rewrite Zlength_correct in Hb,n.",
            "VernacExtend",
            "0ba3fbc8782977f122b96945b5b31e0dae50bcae"
        ],
        [
            "assert (Z.pos b-1>=0) by omega.",
            "VernacExtend",
            "2225b9532e9edb3fac9df3cd38891b4df2387ebf"
        ],
        [
            "pose proof (Coqlib.nat_of_Z_eq _ H).",
            "VernacExtend",
            "d1754e0f058a605a3eed89061e3a4793cdfd056e"
        ],
        [
            "forget (nat_of_Z(Z.pos b-1)) as j.",
            "VernacExtend",
            "15956a8ee9f96be4bd776c320f8026f20b6153e9"
        ],
        [
            "rewrite <- H0 in *.",
            "VernacExtend",
            "3bb7109adef99f8929a95dafd1d2c495eec9840b"
        ],
        [
            "destruct Hb.",
            "VernacExtend",
            "4e02aa98cd3d871bbf64159761497ca4a8f79ae2"
        ],
        [
            "clear - H2 n.",
            "VernacExtend",
            "5124de979635127f6f495b3137d7191f926e594d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (nat_of_Z (Z.pos b-1) < length (map (@fst _ _) (rev vl)))%nat.",
            "VernacExtend",
            "aa05f150e756ad50560f62bdb9878c059bf56fec"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear - Hb n H1.",
            "VernacExtend",
            "d26a77428c14a962e9a9ce95d319bb0324a08870"
        ],
        [
            "rewrite Zlength_correct in n.",
            "VernacExtend",
            "f6cfafbaac098f8773c92d835cda0a56190e1bd8"
        ],
        [
            "rewrite map_length; rewrite rev_length.",
            "VernacExtend",
            "6e37e12a41d50d70b7511f72883e12a2f20335f8"
        ],
        [
            "assert (nat_of_Z (Z.pos b-1) <> length vl).",
            "VernacExtend",
            "818972dbd51d50100166b026317817f594cacd5b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "contradict n.",
            "VernacExtend",
            "2c48f85bbc610c94e2911e7632b2df7e4890f218"
        ],
        [
            "rewrite <- n.",
            "VernacExtend",
            "633b72e035d975214e78f83264a11c53f881e88d"
        ],
        [
            "rewrite Coqlib.nat_of_Z_eq; auto.",
            "VernacExtend",
            "f1ed53d4deb1ed44bf5eb965bab974bfc1fefe36"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "forget (nat_of_Z (Z.pos b-1)) as j.",
            "VernacExtend",
            "15956a8ee9f96be4bd776c320f8026f20b6153e9"
        ],
        [
            "clear - H1 H.",
            "VernacExtend",
            "b2720df4dcde03cf646b5935b804176403843294"
        ],
        [
            "assert (S (length vl) = length (map fst (rev vl) ++ map fst ((i, g) :: nil))).",
            "VernacExtend",
            "c3c922279822c3672c83fe7f3f51b97876c3c62d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite app_length; rewrite map_length; rewrite rev_length; simpl; omega.",
            "VernacExtend",
            "dcf510f50acae142d632a90bb9fd7f66f57a5e82"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (j < S (length vl))%nat; [ | omega].",
            "VernacExtend",
            "5eab65413a76f73f352181d4b58780bd5fb42ece"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "forget (map fst (rev vl) ++ map fst ((i, g) :: nil)) as al.",
            "VernacExtend",
            "c2ac5fe207d600199dde4fa22ab052c86f85224b"
        ],
        [
            "clear - H1.",
            "VernacExtend",
            "a97560cbbe2cd31ef128e29a3cf251870622f56a"
        ],
        [
            "revert al H1; induction j; destruct al; simpl in *; intros; inv H1; auto; try omega.",
            "VernacExtend",
            "6a0333a5d49aad0e9693b1347dab0f5a693ffd0b"
        ],
        [
            "specialize (IHj _ H0); omega.",
            "VernacExtend",
            "5f8058f6dcf075faabc7fddb7bbcdf3f8b4db87d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite nth_error_app1 in H1 by auto.",
            "VernacExtend",
            "e96a68d5963e345712b0b9e793458069c5fe2f51"
        ],
        [
            "apply H0 in H1.",
            "VernacExtend",
            "da7fa7adf0e7904ce97ec7f191a78cdbe8f331e2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_symbol_globalenv {F}: forall (prog: program F) i b, list_norepet (prog_defs_names prog) -> Genv.find_symbol (Genv.globalenv prog) i = Some b -> 0 < Z.pos b <= Z_of_nat (length (prog_defs prog)) /\\ exists d, nth_error (prog_defs prog) (nat_of_Z (Z.pos b-1)) = Some (i,d).",
            "VernacStartTheoremProof",
            "753aedf0979fb0a7312e394f1d6b1cd730530aff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Genv.globalenv in H0.",
            "VernacExtend",
            "4eac5d6f9f2ebde4ae403ccf698a145f29421474"
        ],
        [
            "change (AST.prog_public prog) with (prog_public prog) in H0.",
            "VernacExtend",
            "0fd3891120415841ddc3671ea4da16633a11f05a"
        ],
        [
            "change (AST.prog_defs prog) with (prog_defs prog) in H0.",
            "VernacExtend",
            "286deebfa798899fccbbc5504dc2343b2f91cdc0"
        ],
        [
            "assert (RANGE: 0 <= Z.pos b - 1 < Zlength (rev (prog_defs prog))).",
            "VernacExtend",
            "70d14d7c3d70acf8468640e15e8fd6fd3248545a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- (rev_involutive (prog_defs prog)) in H0.",
            "VernacExtend",
            "f0567d0244e3339edfd6580156dc7053efefaed5"
        ],
        [
            "clear - H0.",
            "VernacExtend",
            "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
        ],
        [
            "revert H0; induction (rev (prog_defs prog)); simpl Genv.find_symbol; intros.",
            "VernacExtend",
            "0c9a1c794678b8ecf30055839546f8a4e58c28b7"
        ],
        [
            "unfold Genv.find_symbol in H0.",
            "VernacExtend",
            "5883d1801a57bc38fb090a89d55b2b605ca8f91c"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "rewrite PTree.gempty in H0; inv H0.",
            "VernacExtend",
            "3d5fb28200d1dc521fe08626da52455d14a88051"
        ],
        [
            "rewrite Genv.add_globals_app in H0.",
            "VernacExtend",
            "2646676cedf223990353686831eda734b9d3318e"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "destruct a.",
            "VernacExtend",
            "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
        ],
        [
            "destruct (eq_dec i0 i).",
            "VernacExtend",
            "1f8e4a427a1f3c6ad7394107ea4f7e940fa3f5be"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold Genv.add_global, Genv.find_symbol in H0.",
            "VernacExtend",
            "3bfb6d1e6fbe1a634ef40d884b5adab3bfbc7b47"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "rewrite PTree.gss in H0.",
            "VernacExtend",
            "43b68e566f3980be0778d5b06a08a79b8cfefe76"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "2721274aada33cbec3c1f62204a14a93dcf297fd"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "match goal with |- _ <= Z.pos ?A - _ => pose proof (Zgt_pos_0 A); omega end.",
            "VernacExtend",
            "60637da9a23f33292b4bf4bc2d99c028e8e34065"
        ],
        [
            "rewrite Zlength_cons.",
            "VernacExtend",
            "e06d429bdf690ef195f65a36ea0771f78b7f113c"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Zlength_cons.",
            "VernacExtend",
            "e06d429bdf690ef195f65a36ea0771f78b7f113c"
        ],
        [
            "Opaque Z.sub.",
            "VernacSetOpacity",
            "dcaafcbb05683606c2c3bd14a3e344224f922f33"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Transparent Z.sub.",
            "VernacSetOpacity",
            "c44de2c5fea06223e2bfa1eab25c1bab53a147ad"
        ],
        [
            "rewrite Genv.add_globals_app.",
            "VernacExtend",
            "34aedb78220d8216aa68c7c571996341e90a667f"
        ],
        [
            "simpl Genv.genv_next.",
            "VernacExtend",
            "82c260a9873fa88c6e5098d07cd0641db1114212"
        ],
        [
            "match goal with |- context [Pos.succ ?J] => forget J as j end.",
            "VernacExtend",
            "755936757911b8373f9e8df1f3312e3f5103c4f4"
        ],
        [
            "clear - IHl.",
            "VernacExtend",
            "8d585233f19d6d859c806f419b5649d6d1bb2083"
        ],
        [
            "replace (Z.pos (Pos.succ j) - 1) with (Z.succ (Z.pos j - 1)).",
            "VernacExtend",
            "12dcec5012ba368595501cb28e4efefe148d1f35"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold Z.succ.",
            "VernacExtend",
            "d3292e8337e33f78eeb3f491cfdb2987c4452e05"
        ],
        [
            "rewrite Pos2Z.inj_succ.",
            "VernacExtend",
            "df2ea8a81e7539796593b73da39b68701740dbc2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold Genv.add_global, Genv.find_symbol in IHl, H0.",
            "VernacExtend",
            "d00fae0a2fa6ec2e98e2f7aeb0b6c2bb0d3fe270"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "rewrite PTree.gso in H0 by auto.",
            "VernacExtend",
            "1eedb55cb2f0868636905cdad91b662b04a3e26c"
        ],
        [
            "apply IHl in H0.",
            "VernacExtend",
            "323edfafaf2f9bfdda11a897e031ce828d0e2617"
        ],
        [
            "rewrite Zlength_cons.",
            "VernacExtend",
            "e06d429bdf690ef195f65a36ea0771f78b7f113c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite Zlength_correct in RANGE.",
            "VernacExtend",
            "de01ac39e7b342357f2f7cf8a696be062f4dc386"
        ],
        [
            "rewrite rev_length in RANGE.",
            "VernacExtend",
            "608cfd476a09ed765000fd6ee40523487474c215"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite <- list_norepet_rev in H.",
            "VernacExtend",
            "9419853ea05673e5667fb7a73753a42e1fe50932"
        ],
        [
            "unfold prog_defs_names in H.",
            "VernacExtend",
            "2edddce2c744b0da7c229b17d08052b3db342408"
        ],
        [
            "change (AST.prog_defs prog) with (prog_defs prog) in H.",
            "VernacExtend",
            "e3eb6985cd963ac35ee71b4fa8ce0ce8ade3b743"
        ],
        [
            "rewrite <- map_rev in H.",
            "VernacExtend",
            "1c72a18c96d973c673bbfc66f3288b4d67457cdd"
        ],
        [
            "rewrite add_globals_hack in H0; [ | apply H | rewrite rev_involutive; auto | auto ].",
            "VernacExtend",
            "133a3f0afe27fa48a0bfbe8a28ee47c457020c17"
        ],
        [
            "rewrite map_rev in H0.",
            "VernacExtend",
            "4d61f6064ffb630061ce3e6ffe53115dbf407256"
        ],
        [
            "rewrite nth_error_rev in H0.",
            "VernacExtend",
            "05fefd81a88930a040170967adc4e9b4ddcd2937"
        ],
        [
            "rewrite list_map_nth in H0.",
            "VernacExtend",
            "f2ff2767ef23e2348f0b435a6cc3c2528ddbef99"
        ],
        [
            "match type of H0 with option_map _ ?A = _ => revert H0; case_eq A; intros end.",
            "VernacExtend",
            "2c15f8c8822538b520c98bc8e5feedf013e2be1a"
        ],
        [
            "destruct p; simpl in H1.",
            "VernacExtend",
            "e8df9b71705813b9f25270e8b8ab9fb64e9cb4b2"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "7549fbb600c3af6072a6d21bdcba999a253a2e01"
        ],
        [
            "exists g.",
            "VernacExtend",
            "27aef793382f0ac61c5ffc2a36b3cd54d16ac982"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite rev_length.",
            "VernacExtend",
            "c9d89bb1711705649f466d70124f5af155f7de57"
        ],
        [
            "rewrite map_length.",
            "VernacExtend",
            "fcd7ed281a0bd0ae53f660fd53f2725d569c74a9"
        ],
        [
            "clear - RANGE.",
            "VernacExtend",
            "6cef587334577dd9a85044dd2c037cf0bcd1dfe0"
        ],
        [
            "rewrite Zlength_rev in RANGE.",
            "VernacExtend",
            "6a9b20aea3a8af91630b3262490e59b5d2977864"
        ],
        [
            "rewrite Zlength_correct in RANGE.",
            "VernacExtend",
            "de01ac39e7b342357f2f7cf8a696be062f4dc386"
        ],
        [
            "rewrite <- (Coqlib.nat_of_Z_eq (Z.pos b)) in * by omega.",
            "VernacExtend",
            "3a370987f3759a943a7e63a71bdaa6c069e83d5f"
        ],
        [
            "unfold nat_of_Z in *.",
            "VernacExtend",
            "4ae28bd19e7735e2d78df4256d010d24dfe7e0cf"
        ],
        [
            "rewrite Z2Nat.inj_pos in *.",
            "VernacExtend",
            "6c922dab933b97af4d0e7803e7a4bd13213d0189"
        ],
        [
            "forget (Pos.to_nat b) as n.",
            "VernacExtend",
            "ef11e98f60785cd996233ef571552cdd1968824d"
        ],
        [
            "clear b.",
            "VernacExtend",
            "b4db797e37f57242b034a9c4bdb4e65c1ad08b36"
        ],
        [
            "replace (Z.of_nat n - 1) with (Z.of_nat (n-1)) by (rewrite inj_minus1 by omega; f_equal; auto).",
            "VernacExtend",
            "97ea0ebefbf46bb3c4c66183bd220765bcc06c02"
        ],
        [
            "rewrite Nat2Z.id.",
            "VernacExtend",
            "bbadb3be27424321a641d79bb81a7ccd1e36f7de"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "7549fbb600c3af6072a6d21bdcba999a253a2e01"
        ],
        [
            "rewrite rev_length.",
            "VernacExtend",
            "c9d89bb1711705649f466d70124f5af155f7de57"
        ],
        [
            "rewrite map_length.",
            "VernacExtend",
            "fcd7ed281a0bd0ae53f660fd53f2725d569c74a9"
        ],
        [
            "clear - RANGE.",
            "VernacExtend",
            "6cef587334577dd9a85044dd2c037cf0bcd1dfe0"
        ],
        [
            "rewrite Zlength_correct in RANGE.",
            "VernacExtend",
            "de01ac39e7b342357f2f7cf8a696be062f4dc386"
        ],
        [
            "rewrite rev_length in RANGE.",
            "VernacExtend",
            "608cfd476a09ed765000fd6ee40523487474c215"
        ],
        [
            "forget (length (prog_defs prog)) as N.",
            "VernacExtend",
            "568ed25253c278668babec3b0cd1db34e6467271"
        ],
        [
            "assert (Z_of_nat N > 0) by omega.",
            "VernacExtend",
            "802e64528c38faf58edaa86ac58b0f822c69f23b"
        ],
        [
            "destruct N; inv H.",
            "VernacExtend",
            "9e358d2e2c9263da288bf1f1a0f52cdf0a415c4a"
        ],
        [
            "assert (Pos.to_nat b > 0)%nat; [apply Pos2Nat.is_pos| omega].",
            "VernacExtend",
            "e14d248daad7651cd3a5c5ef89646e5b2ead9c23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint alloc_globals_rev {F V} (ge: Genv.t F V) (m: mem) (vl: list (ident * globdef F V)) {struct vl} : option mem := match vl with | nil => Some m | v :: vl' => match alloc_globals_rev ge m vl' with | Some m' => Genv.alloc_global ge m' v | None => None end end.",
            "VernacFixpoint",
            "f7064274c5ce544b46ecd9c6893e8b1a58621502"
        ],
        [
            "Lemma alloc_globals_app: forall F V (ge: Genv.t F V) m m2 vs vs', Genv.alloc_globals ge m (vs++vs') = Some m2 <-> exists m', Genv.alloc_globals ge m vs = Some m' /\\ Genv.alloc_globals ge m' vs' = Some m2.",
            "VernacStartTheoremProof",
            "394f2cc53b0aeaeea2f3a1b78eef82eae2053ca0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert vs' m m2; induction vs; intros.",
            "VernacExtend",
            "d3413e0f4b8da2d35862679f8bb35a5bc98a343e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "exists m; intuition.",
            "VernacExtend",
            "7ba04b32b00183832877621098114434cc503780"
        ],
        [
            "destruct H as [? [H ?]]; inv H; auto.",
            "VernacExtend",
            "c4dae42ddb36f7c0625889e30f04e49c45d39a8a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case_eq (Genv.alloc_global ge m a); intros.",
            "VernacExtend",
            "2dfdc8e94eb815757cc715679e31dbd8b4f2c346"
        ],
        [
            "specialize (IHvs vs' m0 m2).",
            "VernacExtend",
            "d84be22a21f1640192f6cb96629e476438609e8c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intuition; try discriminate.",
            "VernacExtend",
            "efc504dc1dd5ce6a9bf77a03b542d0ba8335e61f"
        ],
        [
            "destruct H0 as [? [? ?]]; discriminate.",
            "VernacExtend",
            "4988b98eb29d85ebfb48a3f44f9a84d1aa13a669"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alloc_globals_rev_eq: forall F V (ge: Genv.t F V) m vl, Genv.alloc_globals ge m (rev vl) = alloc_globals_rev ge m vl.",
            "VernacStartTheoremProof",
            "4bae3a19a4518d573cd3701ea4e0f0b229813908"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert m; induction vl; intros; auto.",
            "VernacExtend",
            "0e70c4b87c8816c791962dcc203c1d2bff7b8cc3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- IHvl.",
            "VernacExtend",
            "a59b576cf0f2799d71bc7f3225ff38b273aeea7b"
        ],
        [
            "case_eq (Genv.alloc_globals ge m (rev vl)); intros.",
            "VernacExtend",
            "8c32ec09d6e7001f2e7b323fee0e21954d8e2b5d"
        ],
        [
            "case_eq (Genv.alloc_global ge m0 a); intros.",
            "VernacExtend",
            "1769dc858a6d4632e55431856ba24f18da9a7e34"
        ],
        [
            "rewrite alloc_globals_app.",
            "VernacExtend",
            "382f7839fe4a119bbdab36874838201b72c7eed8"
        ],
        [
            "exists m0; split; auto.",
            "VernacExtend",
            "844824b4942870ea5a828a4a38503f55e6728a92"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H0; auto.",
            "VernacExtend",
            "48df2b0b453adadcea8e6914bccb68bfc33b286b"
        ],
        [
            "case_eq (Genv.alloc_globals ge m (rev vl ++ a :: nil)); intros; auto.",
            "VernacExtend",
            "0798e299ca1dc65a53b0a798db383b5b845c8d36"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "apply alloc_globals_app in H1.",
            "VernacExtend",
            "1e7feb2dbce2b1b74396ae42430e154b1706c53a"
        ],
        [
            "destruct H1 as [m' [? ?]].",
            "VernacExtend",
            "8eda9fcefb5579feaa4fb1689df16eb172c4c7dc"
        ],
        [
            "inversion2 H H1.",
            "VernacExtend",
            "e6604f7dcc824d174dd95466b95272557690d577"
        ],
        [
            "simpl in H2.",
            "VernacExtend",
            "b1e247c43b6623097ab13813b4de664287dd4249"
        ],
        [
            "rewrite H0 in H2; inv H2.",
            "VernacExtend",
            "b645ea19b8f7e45fe7ed3f1e14e8520eab5991e2"
        ],
        [
            "case_eq (Genv.alloc_globals ge m (rev vl ++ a :: nil)); intros; auto.",
            "VernacExtend",
            "0798e299ca1dc65a53b0a798db383b5b845c8d36"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "apply alloc_globals_app in H0.",
            "VernacExtend",
            "0a92f3bc4afe7b7bcd16d297a0bade782febe4f7"
        ],
        [
            "destruct H0 as [m' [? ?]].",
            "VernacExtend",
            "34cc195e19f877798d3d1337d3ba7135e6b35169"
        ],
        [
            "inversion2 H H0.",
            "VernacExtend",
            "f968e6fdfd21c04d0905d9932874e534a58d4619"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma zlength_nonneg: forall A l, 0 <= @Zlength A l.",
            "VernacStartTheoremProof",
            "8126f099d678475263225d84cf9cb83804226792"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "rewrite Zlength_nil.",
            "VernacExtend",
            "991cc61ab92dafa414827d401b0e1bc5b3b2f703"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite Zlength_cons.",
            "VernacExtend",
            "e06d429bdf690ef195f65a36ea0771f78b7f113c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alloc_globals_rev_nextblock: forall {F V} (ge: Genv.t F V) vl m, alloc_globals_rev ge empty vl = Some m -> nextblock m = Z.to_pos(Z.succ (Zlength vl)).",
            "VernacStartTheoremProof",
            "ab32f5db8f8ea1b1530f00458b3ae471fe8251a5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert m H; induction vl; simpl; intros.",
            "VernacExtend",
            "e7c08aa1bac006a01d12baf977fb660db5fc4806"
        ],
        [
            "inv H; apply nextblock_empty.",
            "VernacExtend",
            "ad27a16140492e24a231df41669bbd8ac5856d5c"
        ],
        [
            "invSome.",
            "VernacExtend",
            "f9b0e980c61f8244d51be433c425e71a65913712"
        ],
        [
            "apply IHvl in H.",
            "VernacExtend",
            "ed02006cdd4d81d8ae8570863e63ce12957d3615"
        ],
        [
            "apply Genv.alloc_global_nextblock in H2.",
            "VernacExtend",
            "97b600e263791dd26a8ac62b9c47dfcdc7b9e2a4"
        ],
        [
            "rewrite Zlength_cons.",
            "VernacExtend",
            "e06d429bdf690ef195f65a36ea0771f78b7f113c"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "rewrite Z2Pos.inj_succ.",
            "VernacExtend",
            "69011452172f49e24624a963f14d0ec364fc5f8e"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply Z.lt_succ_r.",
            "VernacExtend",
            "9525f492448ff9717874bd3e6650bcc79d0714b1"
        ],
        [
            "apply zlength_nonneg.",
            "VernacExtend",
            "753375676284618dcda0d2533ed819b267407883"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma store_zeros_max_access: forall m b z N m', store_zeros m b z N = Some m' -> max_access_at m' = max_access_at m.",
            "VernacStartTheoremProof",
            "cdfea39abc285457dd84574eba461da8c5f7cf52"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "symmetry in H; apply R_store_zeros_correct in H.",
            "VernacExtend",
            "31d9bbc50564b8188c4959e83d7953f89d25e173"
        ],
        [
            "remember (Some m') as m1.",
            "VernacExtend",
            "123e0408e12aa48506b05a06928d8b8b803ce78d"
        ],
        [
            "revert m' Heqm1; induction H; intros; inv Heqm1.",
            "VernacExtend",
            "cd37366d0e76bd12658422b9a21b0d77491ff020"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite (IHR_store_zeros m'0 (eq_refl _)).",
            "VernacExtend",
            "4b261ce7e70023be22cfd0439c1121f6dc812aeb"
        ],
        [
            "clear - e0.",
            "VernacExtend",
            "372327a81b2d34975cbfd68efb227b6653a6cdb9"
        ],
        [
            "Transparent store.",
            "VernacSetOpacity",
            "387f3fcee211f2109fd5216fd6b4902ea387aba7"
        ],
        [
            "unfold store in e0.",
            "VernacExtend",
            "8444c03df7016e03c46a05ccc1305cb6521b454f"
        ],
        [
            "remember (valid_access_dec m Mint8unsigned b p Writable) as d.",
            "VernacExtend",
            "d01c66bb0737fada301147c2d8f28c64a694ef33"
        ],
        [
            "destruct d; inv e0.",
            "VernacExtend",
            "47e2c5e03b6c1add78c30cdb16b48bf35e75e377"
        ],
        [
            "unfold max_access_at; simpl.",
            "VernacExtend",
            "9234b0d6b04529f061fede7aef6a1bf8d9d1c416"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Opaque store.",
            "VernacSetOpacity",
            "b637cb14d5a53559b12407fbaafbf0fc3b60e6f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma store_zeros_access: forall m b z N m', store_zeros m b z N = Some m' -> access_at m' = access_at m.",
            "VernacStartTheoremProof",
            "80c88b42cec8fa2fde55f351a658c56442cfd1bc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "symmetry in H; apply R_store_zeros_correct in H.",
            "VernacExtend",
            "31d9bbc50564b8188c4959e83d7953f89d25e173"
        ],
        [
            "remember (Some m') as m1.",
            "VernacExtend",
            "123e0408e12aa48506b05a06928d8b8b803ce78d"
        ],
        [
            "revert m' Heqm1; induction H; intros; inv Heqm1.",
            "VernacExtend",
            "cd37366d0e76bd12658422b9a21b0d77491ff020"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite (IHR_store_zeros m'0 (eq_refl _)).",
            "VernacExtend",
            "4b261ce7e70023be22cfd0439c1121f6dc812aeb"
        ],
        [
            "clear - e0.",
            "VernacExtend",
            "372327a81b2d34975cbfd68efb227b6653a6cdb9"
        ],
        [
            "Transparent store.",
            "VernacSetOpacity",
            "387f3fcee211f2109fd5216fd6b4902ea387aba7"
        ],
        [
            "unfold store in e0.",
            "VernacExtend",
            "8444c03df7016e03c46a05ccc1305cb6521b454f"
        ],
        [
            "remember (valid_access_dec m Mint8unsigned b p Writable) as d.",
            "VernacExtend",
            "d01c66bb0737fada301147c2d8f28c64a694ef33"
        ],
        [
            "destruct d; inv e0.",
            "VernacExtend",
            "47e2c5e03b6c1add78c30cdb16b48bf35e75e377"
        ],
        [
            "unfold access_at; simpl.",
            "VernacExtend",
            "e53fee8f670e70a2884a9538a4d8f0cd52ac6853"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Opaque store.",
            "VernacSetOpacity",
            "b637cb14d5a53559b12407fbaafbf0fc3b60e6f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma store_zeros_contents1: forall m b z N m' loc, fst loc <> b -> store_zeros m b z N = Some m' -> contents_at m loc = contents_at m' loc.",
            "VernacStartTheoremProof",
            "a29887a8a460421764903081d44f628c3e0bbae1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "symmetry in H0; apply R_store_zeros_correct in H0.",
            "VernacExtend",
            "032a46401d12cc381a9fb4107807f1c52b8acd36"
        ],
        [
            "remember (Some m') as m1.",
            "VernacExtend",
            "123e0408e12aa48506b05a06928d8b8b803ce78d"
        ],
        [
            "revert m' Heqm1; induction H0; intros; inv Heqm1.",
            "VernacExtend",
            "d23c0d0853c8360fd968aa7b08eed418107707e1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "transitivity (contents_at m' loc).",
            "VernacExtend",
            "3b7e130231033f11d2d6cedee6da836de17f9209"
        ],
        [
            "Transparent store.",
            "VernacSetOpacity",
            "387f3fcee211f2109fd5216fd6b4902ea387aba7"
        ],
        [
            "unfold store in e0.",
            "VernacExtend",
            "8444c03df7016e03c46a05ccc1305cb6521b454f"
        ],
        [
            "remember (valid_access_dec m Mint8unsigned b p Writable) as d.",
            "VernacExtend",
            "d01c66bb0737fada301147c2d8f28c64a694ef33"
        ],
        [
            "destruct d; inv e0.",
            "VernacExtend",
            "47e2c5e03b6c1add78c30cdb16b48bf35e75e377"
        ],
        [
            "unfold contents_at; simpl.",
            "VernacExtend",
            "a65b18dff1c740618f11fcdc441f6733c1512cbe"
        ],
        [
            "rewrite PMap.gso by auto.",
            "VernacExtend",
            "7c813a7ad67552a3e6193c5f25800496b5bb3804"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply IHR_store_zeros; eauto.",
            "VernacExtend",
            "c4d701a0698277949fd5778db5e110e1990e96be"
        ],
        [
            "Opaque store.",
            "VernacSetOpacity",
            "b637cb14d5a53559b12407fbaafbf0fc3b60e6f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alloc_global_old: forall {F V} (ge: Genv.t F V) m iv m', Genv.alloc_global ge m iv = Some m' -> forall loc, (fst loc < nextblock m)%positive -> access_at m loc = access_at m' loc /\\ contents_at m loc = contents_at m' loc.",
            "VernacStartTheoremProof",
            "a435232ab216d2e5c03bc35383a6e4ec44a53007"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct loc as [b ofs]; simpl in *; subst.",
            "VernacExtend",
            "4b1af7e267ec2a9e2e7635ccf37239f5723a9069"
        ],
        [
            "assert (NEQ: b <> nextblock m) by (intro Hx; inv Hx; xomega).",
            "VernacExtend",
            "2c191bc89975016921e38aeca8e1d3c097eef5d4"
        ],
        [
            "unfold Genv.alloc_global in H.",
            "VernacExtend",
            "4f8ddb63f257ce6e30c6319939d8e20df4154cca"
        ],
        [
            "destruct iv.",
            "VernacExtend",
            "c1fb13fd8b67dac49e0cb6478fb5ecf70f8fbd87"
        ],
        [
            "destruct g.",
            "VernacExtend",
            "58c12597ac8434a7c2475af42670d77056ce85a1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "revert H; case_eq (alloc m 0 1); intros.",
            "VernacExtend",
            "738f8210bcad886edda1f265345bd30df4b3affe"
        ],
        [
            "unfold drop_perm in H1.",
            "VernacExtend",
            "2d6cef0de5b8fad7fef1abd11c2b3bdd5dd3e192"
        ],
        [
            "destruct (range_perm_dec m0 b0 0 1 Cur Freeable); inv H1.",
            "VernacExtend",
            "b957504d2bc6f1b372f918c7ee526156db53f441"
        ],
        [
            "unfold contents_at, max_access_at, access_at in *; simpl in *.",
            "VernacExtend",
            "1f88119c264e16b3c85f953dce31b637227884a7"
        ],
        [
            "Transparent alloc.",
            "VernacSetOpacity",
            "1d8b7bf21723bb4797ad81d9237a61ed93ee5f4a"
        ],
        [
            "unfold alloc in H.",
            "VernacExtend",
            "65096be7e7e23fc2988f323409bf4d7f99ae92f8"
        ],
        [
            "Opaque alloc.",
            "VernacSetOpacity",
            "09afe7f45a88910c936f0e425cb89bb0091a74c9"
        ],
        [
            "inv H; simpl in *.",
            "VernacExtend",
            "7f483b963f4e1adf494c8c50c5668e72b1e4153e"
        ],
        [
            "rewrite PMap.gss.",
            "VernacExtend",
            "b5a245c2e8793ec855a664f9951af0c15417e45b"
        ],
        [
            "repeat rewrite (PMap.gso _ _ NEQ).",
            "VernacExtend",
            "6b06cb381de10024fdb03acbd2040dae45b67dfd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "forget (init_data_list_size (gvar_init v)) as N.",
            "VernacExtend",
            "36171cf83c2f6aae9c4cfcf2c9474e527cca171d"
        ],
        [
            "revert H; case_eq (alloc m 0 N); intros.",
            "VernacExtend",
            "0c97f8ed76c80af0ef9f28a2c35806053b6f3389"
        ],
        [
            "invSome.",
            "VernacExtend",
            "f9b0e980c61f8244d51be433c425e71a65913712"
        ],
        [
            "invSome.",
            "VernacExtend",
            "f9b0e980c61f8244d51be433c425e71a65913712"
        ],
        [
            "assert (access_at m (b,ofs) = access_at m0 (b,ofs) /\\ contents_at m (b,ofs) = contents_at m0 (b,ofs)).",
            "VernacExtend",
            "ec5cbbd1c73b469fe294c8d4eb89c78e303fe586"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear - H NEQ.",
            "VernacExtend",
            "60067179734b49b7ea76fcc9f047b0599cd3b3bc"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "extensionality k.",
            "VernacExtend",
            "3d0435f326186ec7f64a04595b4266d139fac42d"
        ],
        [
            "eapply alloc_access_other; try eassumption.",
            "VernacExtend",
            "dd2f9f667760a7b7995451917795d466a54448a2"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst b0.",
            "VernacExtend",
            "478b7c325e8a76ce9bafb9db976206add8bd3245"
        ],
        [
            "apply alloc_result in H.",
            "VernacExtend",
            "b2c9ea624387cf27c54803ae10e7ed8bbf3bab4d"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Transparent alloc.",
            "VernacSetOpacity",
            "1d8b7bf21723bb4797ad81d9237a61ed93ee5f4a"
        ],
        [
            "unfold alloc in H.",
            "VernacExtend",
            "65096be7e7e23fc2988f323409bf4d7f99ae92f8"
        ],
        [
            "Opaque alloc.",
            "VernacSetOpacity",
            "09afe7f45a88910c936f0e425cb89bb0091a74c9"
        ],
        [
            "unfold contents_at.",
            "VernacExtend",
            "355fb39404b1a9523a8d490a90045797e265ef16"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PMap.gso by auto.",
            "VernacExtend",
            "7c813a7ad67552a3e6193c5f25800496b5bb3804"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (b0=nextblock m) by (inv H; auto).",
            "VernacExtend",
            "c0836fcf136ba0f20803ec04035ac8ef17796546"
        ],
        [
            "subst b0.",
            "VernacExtend",
            "478b7c325e8a76ce9bafb9db976206add8bd3245"
        ],
        [
            "unfold max_access_at.",
            "VernacExtend",
            "180a9342db22c98d8960746aab3e30f8453543ec"
        ],
        [
            "destruct H2 as [H2a H2b]; rewrite H2a,H2b; clear H H2a H2b.",
            "VernacExtend",
            "a05d953ecc0a0966c8dff27876225ab2bab696a2"
        ],
        [
            "rewrite <- (store_zeros_access _ _ _ _ _ H1).",
            "VernacExtend",
            "4dd9a4124475a58b8a462b5e7307c1d52805c1cf"
        ],
        [
            "apply store_zeros_contents1 with (loc:= (b,ofs)) in H1.",
            "VernacExtend",
            "382eac9d4aa20975f484fca86d3bd7feddaf87ae"
        ],
        [
            "2: simpl; congruence.",
            "VernacExtend",
            "4fae2f9eabe69a2a741d27ebad79d18c23199ff7"
        ],
        [
            "rewrite H1; clear H1 m0.",
            "VernacExtend",
            "26bcfb8270eb29e4aa0be0d68c696fadb98d1a67"
        ],
        [
            "apply store_init_data_list_outside' in H4.",
            "VernacExtend",
            "6ec7aa55b040bf9b2100bebaa76a5b812d60f9c0"
        ],
        [
            "destruct H4 as [? [? ?]].",
            "VernacExtend",
            "cb4c14485d87f29a22d6f69e84e73b551f047f9a"
        ],
        [
            "specialize (H b ofs).",
            "VernacExtend",
            "753b59e264f905fbc3350f15e63a93ea536b882b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct H; subst; congruence.",
            "VernacExtend",
            "3c1fc91b21a4046f499401068c164b0a365efd7d"
        ],
        [
            "unfold block in *; rewrite H; rewrite H1.",
            "VernacExtend",
            "569c089bba0c2a2a08a00b40f5492913c342673a"
        ],
        [
            "clear - H5 NEQ.",
            "VernacExtend",
            "d1dd88467d79a61aba880769c753fd9424fe703c"
        ],
        [
            "unfold drop_perm in H5.",
            "VernacExtend",
            "476b516f3524da1486e97e184b87818956c89c5c"
        ],
        [
            "destruct (range_perm_dec m2 (nextblock m) 0 N Cur Freeable); inv H5.",
            "VernacExtend",
            "affa2699748e4fb102371e17ea7da08e8e54965c"
        ],
        [
            "unfold contents_at, access_at, max_access_at in *; simpl in *.",
            "VernacExtend",
            "df9b8f5dc4a051dde2f1e595d5c0bb891d9a057c"
        ],
        [
            "repeat rewrite (PMap.gso _ _ NEQ).",
            "VernacExtend",
            "6b06cb381de10024fdb03acbd2040dae45b67dfd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition set_ghost (m : rmap) (g : ghost) (Hg : _) := proj1_sig (make_rmap (resource_at m) g (level m) _ Hg).",
            "VernacDefinition",
            "ec11445ec44114882656aa8f2c9da053fba41713"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "extensionality; apply resource_at_approx.",
            "VernacExtend",
            "bc2e4b2949c08c4e8d2380159f312798bc18d8db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint prog_vars' {F V} (l: list (ident * globdef F V)) : list (ident * globvar V) := match l with nil => nil | (i,Gvar v)::r => (i,v):: prog_vars' r | _::r => prog_vars' r end.",
            "VernacFixpoint",
            "e20ee68042f04368278a7db5a077cb9af40c4dfd"
        ],
        [
            "Definition prog_vars {F} (p: program F) := prog_vars' (prog_defs p).",
            "VernacDefinition",
            "9de57edbebe9e2a46a57a54fa1d9b81e080424a6"
        ],
        [
            "Definition no_locks phi := forall addr sh sh' z z' P, phi @ addr <> YES sh sh' (LK z z') P.",
            "VernacDefinition",
            "66c7c02df180cb168595f6e1b6856143445dd39b"
        ],
        [
            "Lemma make_tycontext_s_find_id i G : (make_tycontext_s G) ! i = find_id i G.",
            "VernacStartTheoremProof",
            "0f851414b18569d536576f36f7d08def0717f56e"
        ],
        [
            "induction G as [| (j, fs) f IHf].",
            "VernacExtend",
            "ed6d805ef307d9642622ac18c2f8653f078c5c20"
        ],
        [
            "destruct i; reflexivity.",
            "VernacExtend",
            "86d897b284d766a57d1a5afb9f1c7c66ae2b7a38"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite PTree.gsspec.",
            "VernacExtend",
            "88315e2b3b1f3e40fe18917f8425d57b50a31282"
        ],
        [
            "rewrite IHf.",
            "VernacExtend",
            "11c7ba88499d1bf7993dcc7bc11b41a2f399fc51"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cond_approx_eq n A P1 P2 := (forall ts, fmap (dependent_type_functor_rec ts (AssertTT A)) (approx n) (approx n) (P1 ts) = fmap (dependent_type_functor_rec ts (AssertTT A)) (approx n) (approx n) (P2 ts)).",
            "VernacDefinition",
            "207721e7bfabc5322013895661c8617fbadaa535"
        ],
        [
            "Lemma cond_approx_eq_sym n A P1 P2 : cond_approx_eq n A P1 P2 -> cond_approx_eq n A P2 P1.",
            "VernacStartTheoremProof",
            "59ddedf9e0d75b76b55f520cbc0eb67eff6ff515"
        ],
        [
            "unfold cond_approx_eq; auto.",
            "VernacExtend",
            "d8ec1d4e63ce91f39b69a0ae511927949ff1b327"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cond_approx_eq_trans n A P1 P2 P3 : cond_approx_eq n A P1 P2 -> cond_approx_eq n A P2 P3 -> cond_approx_eq n A P1 P3.",
            "VernacStartTheoremProof",
            "bea77789428b36989dd53c073dffbe5cdfa13620"
        ],
        [
            "unfold cond_approx_eq in *.",
            "VernacExtend",
            "2b938291fadd6a33b7c8db14555f73e023a2de6e"
        ],
        [
            "intros E1 E2 ts; rewrite E1, E2.",
            "VernacExtend",
            "e086d56040453da6cfbd7eda06d09ec48a732951"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cond_approx_eq_weakening n n' A P1 P2 : (n' <= n)%nat -> cond_approx_eq n A P1 P2 -> cond_approx_eq n' A P1 P2.",
            "VernacStartTheoremProof",
            "69a930c6753939ebf66a6cd6c3b2d27580d2e26d"
        ],
        [
            "intros l.",
            "VernacExtend",
            "dd0961f3ab7d1ab267b93180e66e020db2e681bc"
        ],
        [
            "intros E ts; specialize (E ts).",
            "VernacExtend",
            "59a7e3f6739baaf17ce7f79d27b68a57a3bf23ac"
        ],
        [
            "rewrite <-approx_oo_approx' with (n' := n) at 1; try omega.",
            "VernacExtend",
            "4deb2c71f8e577262e9db3c9c3862565b6700e2b"
        ],
        [
            "rewrite <-approx'_oo_approx with (n' := n) at 2; try omega.",
            "VernacExtend",
            "a1600749a1ba4ab2190c8d2768ec05d4345a3456"
        ],
        [
            "rewrite <-approx_oo_approx' with (n' := n) at 3; try omega.",
            "VernacExtend",
            "d932f5f08c6f73b48ab34287862ec7075ff644db"
        ],
        [
            "rewrite <-approx'_oo_approx with (n' := n) at 4; try omega.",
            "VernacExtend",
            "a6193f3d3f1717328987ada14b3f4f841103c82d"
        ],
        [
            "rewrite <-fmap_comp.",
            "VernacExtend",
            "589c9d00fd7f47c0eefdd5e00d5c6bac9e05227f"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma level_initial_core {F} ge G n : level (@initial_core F ge G n) = n.",
            "VernacStartTheoremProof",
            "3f45cf5da3a17683838c376bc308def942ae5e99"
        ],
        [
            "apply level_make_rmap.",
            "VernacExtend",
            "157d17c5c074f767e64b76ce0372a135f31bfc1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition func_at'' fsig cc A P Q := pureat (SomeP (SpecTT A) (packPQ P Q)) (FUN fsig cc).",
            "VernacDefinition",
            "a06effea27eb37ae7925fd69a59cde72960f9bcc"
        ]
    ],
    "proofs": [
        {
            "name": "adr_range_divide",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "destruct loc as [b' z']; destruct H1.",
                        "VernacExtend",
                        "5bc375b1548a8ec35919df0de7932ae9d8864587"
                    ]
                },
                {
                    "command": [
                        "assert (i <= z' < i+p \\/ i+p <= z' < i+p+q) by omega.",
                        "VernacExtend",
                        "5ad6257c264233e70430e0af289539ca6ce91769"
                    ]
                },
                {
                    "command": [
                        "destruct H3; [left|right]; split; auto; omega.",
                        "VernacExtend",
                        "a1bbdbd9a61ad7c9de1a788b2d7d86084024f982"
                    ]
                },
                {
                    "command": [
                        "destruct loc as [b' z']; destruct H1; destruct H1; split; auto; omega.",
                        "VernacExtend",
                        "63c03d18ed4d298b7a562401a140495ed05402cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "VALspec_range_e",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [H _]; specialize (H loc).",
                        "VernacExtend",
                        "2c5313900ee1d0f0817ed625e90a4ac7a72badc8"
                    ]
                },
                {
                    "command": [
                        "rewrite jam_true in H; auto.",
                        "VernacExtend",
                        "cbffb52b74c13429944790993b342393b9db4a0e"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "destruct (m @ loc); try destruct k; try solve [elimtype False; destruct H as [? [? ?]]; inv H].",
                        "VernacExtend",
                        "ec960a0700b17818d8595bd30d41d99b36d7685c"
                    ]
                },
                {
                    "command": [
                        "assert (readable_share sh) by (destruct H as [? [? ?]]; auto).",
                        "VernacExtend",
                        "dc5709986bc7c39598af046d9c3c8c4053d09734"
                    ]
                },
                {
                    "command": [
                        "exists (m0, H1).",
                        "VernacExtend",
                        "ec60d108765ed80e83beb6c7df7b959f6896e279"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? [? ?]].",
                        "VernacExtend",
                        "7b80d34d0c991fb27b92313d17ea8675f1173807"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "apply YES_ext; auto.",
                        "VernacExtend",
                        "de11c6c787d0eac9ac58a93f7237a80e14cf27c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "store_init_data_outside'",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold max_access_at .",
                        "VernacExtend",
                        "180a9342db22c98d8960746aab3e30f8453543ec"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct a; simpl in H; try apply store_outside' in H; auto.",
                        "VernacExtend",
                        "f353698d0483f8afa6e4ccfaf2f106b345d097ff"
                    ]
                },
                {
                    "command": [
                        "inv H; auto.",
                        "VernacExtend",
                        "e9bd05ad37c0a003cf8fcd49196ec009bd4adb97"
                    ]
                },
                {
                    "command": [
                        "invSome.",
                        "VernacExtend",
                        "f9b0e980c61f8244d51be433c425e71a65913712"
                    ]
                },
                {
                    "command": [
                        "apply store_outside' in H2; auto.",
                        "VernacExtend",
                        "7fa35afae70da747f6b6e786857baa92e4e0c389"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "store_init_data_list_outside'",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "induction il; simpl; intros.",
                        "VernacExtend",
                        "845693d0df6b64acee25233f1ea45068385ac35c"
                    ]
                },
                {
                    "command": [
                        "inv H; auto.",
                        "VernacExtend",
                        "e9bd05ad37c0a003cf8fcd49196ec009bd4adb97"
                    ]
                },
                {
                    "command": [
                        "invSome.",
                        "VernacExtend",
                        "f9b0e980c61f8244d51be433c425e71a65913712"
                    ]
                },
                {
                    "command": [
                        "specialize (IHil _ _ _ H2).",
                        "VernacExtend",
                        "dd6795606514fd76916a579b41ad6d3e316697e1"
                    ]
                },
                {
                    "command": [
                        "destruct IHil as [? [? ?]].",
                        "VernacExtend",
                        "210079e6bd0614c9eb809c1c733c1baa9c341ff0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H3; rewrite <- H1; clear H3 H1 H2.",
                        "VernacExtend",
                        "05e85a0eb4bd17e2f7ce32c3affde85fa738fa18"
                    ]
                },
                {
                    "command": [
                        "remember (init_data_list_size il) as n.",
                        "VernacExtend",
                        "aa508199e6eee3ce1468894e59a40716677aa7f8"
                    ]
                },
                {
                    "command": [
                        "assert (n >= 0).",
                        "VernacExtend",
                        "d05728f33aa2835f176ba58fccb4092dc2535b24"
                    ]
                },
                {
                    "command": [
                        "subst n; clear; induction il; simpl; try omega.",
                        "VernacExtend",
                        "532bb1454e7c1ff37b1b1516d87545ff03cda27b"
                    ]
                },
                {
                    "command": [
                        "generalize (init_data_size_pos a); omega.",
                        "VernacExtend",
                        "1d8ecf3a622d8627775c0a29d2dd7cb2e67ce242"
                    ]
                },
                {
                    "command": [
                        "clear il Heqn.",
                        "VernacExtend",
                        "9d115e0eee0a0b05c7fce5a4b830e421dc6a9d8c"
                    ]
                },
                {
                    "command": [
                        "apply store_init_data_outside' in H.",
                        "VernacExtend",
                        "799e46ab63e34cbc0959a3df2cb70cc1f89e2a8a"
                    ]
                },
                {
                    "command": [
                        "generalize (init_data_size_pos a); intro.",
                        "VernacExtend",
                        "e19cbcbf162a961346be1b89c5e124f84ad2f322"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? [? ?]]; repeat split; auto.",
                        "VernacExtend",
                        "cd5537d808d723c0522814de2e2efd9ca8308264"
                    ]
                },
                {
                    "command": [
                        "clear H3 H4.",
                        "VernacExtend",
                        "c594212e6ab0214cf3574b9ccddf238f49d58c36"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 b' ofs); specialize (H b' ofs).",
                        "VernacExtend",
                        "8c13c29dc784d842762cbe3c13ee1b3343a3703b"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "destruct H0; left; split; auto; omega.",
                        "VernacExtend",
                        "459b9ab5a7ea5767aebb26935336e08574b99587"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "destruct H; left; split; auto; omega.",
                        "VernacExtend",
                        "f6db3a7d5fc867dcde9369325e83c7182f1f8556"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_top_neq",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "case_eq (Share.split Share.top); intros; simpl.",
                        "VernacExtend",
                        "f0caa162fb7e226dc2d477992aca73d38c4ab13b"
                    ]
                },
                {
                    "command": [
                        "eapply nonemp_split_neq1; eauto.",
                        "VernacExtend",
                        "ae6ed54d163620899cc5379d06953ebfeeb8780f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dec_pure",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "destruct r.",
                        "VernacExtend",
                        "8734fc79466dd620102fead10107fecfe6573aa6"
                    ]
                },
                {
                    "command": [
                        "right; apply core_NO.",
                        "VernacExtend",
                        "de2023131a7f92fc66eb275fc935be57d4dbfe59"
                    ]
                },
                {
                    "command": [
                        "right; apply core_YES.",
                        "VernacExtend",
                        "8a902c9cdb0888b67d4d5a833eaa398db182602c"
                    ]
                },
                {
                    "command": [
                        "left; eauto.",
                        "VernacExtend",
                        "2aadb2cc2a8fd5d6bcc75542c3cddb6fa2224625"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_right_rev_left",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_left_rev_right.",
                        "VernacExtend",
                        "172aea0d1678fdd15cf3572742605a293c1d7878"
                    ]
                },
                {
                    "command": [
                        "f_equal; extensionality x y; auto.",
                        "VernacExtend",
                        "8b51291018be186df72bfd2c83798f5638e411c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "initblocksize_name",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "destruct a; intros; simpl; inv H; auto.",
                        "VernacExtend",
                        "f98e13e8c02ad21b9a03233caad943bb074dca70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_map_fst",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "induction G; simpl; intros; auto.",
                        "VernacExtend",
                        "74497c7b6ae89e7f80465e024cd3a9bb10cd908f"
                    ]
                },
                {
                    "command": [
                        "destruct H; [left|right].",
                        "VernacExtend",
                        "d8354e6783115874e43c4c4eb026fb6df08dc728"
                    ]
                },
                {
                    "command": [
                        "subst; simpl; auto.",
                        "VernacExtend",
                        "4c332d568d45adb0cafebb5e0d56ad2383772bec"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_id_i",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "induction G; simpl; intros.",
                        "VernacExtend",
                        "ad928ffba3919aa1c8f187fd8207de43bdb575c0"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true; auto.",
                        "VernacExtend",
                        "f3f4d9bdc07f35c6f3b5cd5c24f527f915854764"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "2721274aada33cbec3c1f62204a14a93dcf297fd"
                    ]
                },
                {
                    "command": [
                        "destruct a as [i j].",
                        "VernacExtend",
                        "c9a79e400ff80eb2f66da4661293a7e0727bcca8"
                    ]
                },
                {
                    "command": [
                        "if_tac.",
                        "VernacExtend",
                        "a006ab589e4ef6015fb470fbedb2c4c4dac27076"
                    ]
                },
                {
                    "command": [
                        "subst i.",
                        "VernacExtend",
                        "8a51b06e94f64277663e0022260aa1e58bff437c"
                    ]
                },
                {
                    "command": [
                        "simpl in *; f_equal.",
                        "VernacExtend",
                        "bb85cbb39878f53248a196afdfd156ab80594e7b"
                    ]
                },
                {
                    "command": [
                        "apply in_map_fst in H.",
                        "VernacExtend",
                        "eef9980cfd82776923e1654330d921d3cfd580c1"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_id_e",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "induction G; simpl; intros.",
                        "VernacExtend",
                        "ad928ffba3919aa1c8f187fd8207de43bdb575c0"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "destruct a.",
                        "VernacExtend",
                        "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
                    ]
                },
                {
                    "command": [
                        "if_tac in H.",
                        "VernacExtend",
                        "37665ad4b9e4ccc2d0c8acd96b43848e24a487f1"
                    ]
                },
                {
                    "command": [
                        "inv H; subst; auto.",
                        "VernacExtend",
                        "7095714471a467525478fe2ee601efd96c8537df"
                    ]
                },
                {
                    "command": [
                        "right; apply (IHG fs); auto.",
                        "VernacExtend",
                        "164c5f3b8441b9a58e605a83bc3083ecd5cecc55"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "initial_core_obligation_1",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality loc; unfold compose, initial_core'.",
                        "VernacExtend",
                        "a9d3a7f47b68cdc7610a3ade14e43e3888f78ba2"
                    ]
                },
                {
                    "command": [
                        "if_tac; [ | simpl; auto].",
                        "VernacExtend",
                        "7e36b8948bf018a4800574acfc8da0ac60f9a0a7"
                    ]
                },
                {
                    "command": [
                        "destruct (Genv.invert_symbol ge (fst loc)); [ | simpl; auto].",
                        "VernacExtend",
                        "0b12bbacd1ed23064c9909a38a542df1b2fc5b06"
                    ]
                },
                {
                    "command": [
                        "destruct (find_id i G); [ | simpl; auto].",
                        "VernacExtend",
                        "a2166913c87ea17b8a433363d1927308577f95e7"
                    ]
                },
                {
                    "command": [
                        "destruct f.",
                        "VernacExtend",
                        "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
                    ]
                },
                {
                    "command": [
                        "unfold resource_fmap.",
                        "VernacExtend",
                        "9e3613be03b663ae3677a4b82fcc167d580790d3"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "change R.approx with approx.",
                        "VernacExtend",
                        "78c382330e37edc04deaff7908718b84ea4bae04"
                    ]
                },
                {
                    "command": [
                        "extensionality i0 ts b rho.",
                        "VernacExtend",
                        "ce511f6eb8247041a7c620d717f63b33fb06aa21"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_app.",
                        "VernacExtend",
                        "e70cff1dc9542841bc18109682f87442f06f4b9e"
                    ]
                },
                {
                    "command": [
                        "pattern (approx n) at 7 8 9.",
                        "VernacExtend",
                        "d0a2464e788f4104e6cc3190c5fb669db8823104"
                    ]
                },
                {
                    "command": [
                        "rewrite <- approx_oo_approx.",
                        "VernacExtend",
                        "25eb1f9a629318bf236ef4653aa336dfcf114c9b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "initial_core_ext_obligation_1",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality loc; unfold compose, initial_core'.",
                        "VernacExtend",
                        "a9d3a7f47b68cdc7610a3ade14e43e3888f78ba2"
                    ]
                },
                {
                    "command": [
                        "if_tac; [ | simpl; auto].",
                        "VernacExtend",
                        "7e36b8948bf018a4800574acfc8da0ac60f9a0a7"
                    ]
                },
                {
                    "command": [
                        "destruct (Genv.invert_symbol ge (fst loc)); [ | simpl; auto].",
                        "VernacExtend",
                        "0b12bbacd1ed23064c9909a38a542df1b2fc5b06"
                    ]
                },
                {
                    "command": [
                        "destruct (find_id i G); [ | simpl; auto].",
                        "VernacExtend",
                        "a2166913c87ea17b8a433363d1927308577f95e7"
                    ]
                },
                {
                    "command": [
                        "destruct f.",
                        "VernacExtend",
                        "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
                    ]
                },
                {
                    "command": [
                        "unfold resource_fmap.",
                        "VernacExtend",
                        "9e3613be03b663ae3677a4b82fcc167d580790d3"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "change R.approx with approx.",
                        "VernacExtend",
                        "78c382330e37edc04deaff7908718b84ea4bae04"
                    ]
                },
                {
                    "command": [
                        "extensionality i0 ts b rho.",
                        "VernacExtend",
                        "ce511f6eb8247041a7c620d717f63b33fb06aa21"
                    ]
                },
                {
                    "command": [
                        "rewrite fmap_app.",
                        "VernacExtend",
                        "e70cff1dc9542841bc18109682f87442f06f4b9e"
                    ]
                },
                {
                    "command": [
                        "pattern (approx n) at 7 8 9.",
                        "VernacExtend",
                        "d0a2464e788f4104e6cc3190c5fb669db8823104"
                    ]
                },
                {
                    "command": [
                        "rewrite <- approx_oo_approx.",
                        "VernacExtend",
                        "25eb1f9a629318bf236ef4653aa336dfcf114c9b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_disjoint_rev2",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold list_disjoint.",
                        "VernacExtend",
                        "cbcd8eaac8ca0b4d87c54b26a95f594d080feaa6"
                    ]
                },
                {
                    "command": [
                        "apply prop_ext; split; intros; eapply H; eauto.",
                        "VernacExtend",
                        "9e6c5de79f4f84771875cb0b337f97454ea816a6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- In_rev; auto.",
                        "VernacExtend",
                        "7ecda0917b35d7621940bd0b8d8aaeac6ccd6b6e"
                    ]
                },
                {
                    "command": [
                        "rewrite In_rev; auto.",
                        "VernacExtend",
                        "4abf3cbcbae07ab9a5b213188f2d722af16f2407"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "writable_blocks_app",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "induction bl; intros.",
                        "VernacExtend",
                        "64b49cf1ce295bf222ccbcb7e006284f8034c5f2"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite emp_sepcon; auto.",
                        "VernacExtend",
                        "d6fa6467c4c0881968e7331429b6178a644ee63f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct a as [b n]; simpl.",
                        "VernacExtend",
                        "b51fac6a940a05cfa398c9c0e671e8ad6d52b595"
                    ]
                },
                {
                    "command": [
                        "rewrite sepcon_assoc.",
                        "VernacExtend",
                        "9c6b8eaecdc27f592c009dd435c2cbd8c074fb8e"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply IHbl.",
                        "VernacExtend",
                        "4d15bf9c64a9d8f261e394b193ec51665cb2da87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_symbol_add_globals_nil",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold Genv.find_symbol, Genv.add_global in *; simpl.",
                        "VernacExtend",
                        "91ddb76f39abc86624a77fc61ab70990a7158305"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec i id); subst.",
                        "VernacExtend",
                        "a2a74b9c5f1bf01cee5fdc166f7f85e4db53e223"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gss.",
                        "VernacExtend",
                        "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gso by auto.",
                        "VernacExtend",
                        "fecf8284ee081d0a1090d47a4d72d32fa16d647c"
                    ]
                },
                {
                    "command": [
                        "split; intro Hx.",
                        "VernacExtend",
                        "fa0de748ab62964b97561affd9a9e80587a7387f"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty in Hx; inv Hx.",
                        "VernacExtend",
                        "3d5e7408c9e3e57f1699abbc7f40252a73e666b9"
                    ]
                },
                {
                    "command": [
                        "inv Hx.",
                        "VernacExtend",
                        "e7d86493ff7ab82a35183e24168f6da2ef57f4b2"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_symbol_add_globals",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct dl.",
                        "VernacExtend",
                        "c67dfacdcfe092d1d2b3946197eb4fc3757efdea"
                    ]
                },
                {
                    "command": [
                        "intros; apply find_symbol_add_globals_nil.",
                        "VernacExtend",
                        "1846cdbc17709fba59b4e2f5990f52fe723982d3"
                    ]
                },
                {
                    "command": [
                        "apply find_symbol_add_globals_cons; trivial.",
                        "VernacExtend",
                        "7fbc0911c7c3d90ec35bd605e2bc3fe259a22d2e"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct.",
                        "VernacExtend",
                        "bce28114f16011eca46066cbf185fa28100a066c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.of_nat_succ.",
                        "VernacExtend",
                        "d71b6c5ac0d48d2a309d26d14900d7dc47bc94d9"
                    ]
                },
                {
                    "command": [
                        "apply Pos2Z.is_pos.",
                        "VernacExtend",
                        "87f8b68919cf0de4fdbc603862643e870f7a6fd9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_symbol_add_globals'",
            "line_nb": 434,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct dl.",
                        "VernacExtend",
                        "c67dfacdcfe092d1d2b3946197eb4fc3757efdea"
                    ]
                },
                {
                    "command": [
                        "intros; apply find_symbol_add_globals_nil.",
                        "VernacExtend",
                        "1846cdbc17709fba59b4e2f5990f52fe723982d3"
                    ]
                },
                {
                    "command": [
                        "apply find_symbol_add_globals_cons; trivial.",
                        "VernacExtend",
                        "7fbc0911c7c3d90ec35bd605e2bc3fe259a22d2e"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_correct.",
                        "VernacExtend",
                        "bce28114f16011eca46066cbf185fa28100a066c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.of_nat_succ.",
                        "VernacExtend",
                        "d71b6c5ac0d48d2a309d26d14900d7dc47bc94d9"
                    ]
                },
                {
                    "command": [
                        "apply Pos2Z.is_pos.",
                        "VernacExtend",
                        "87f8b68919cf0de4fdbc603862643e870f7a6fd9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_error_app",
            "line_nb": 444,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction al; simpl; auto.",
                        "VernacExtend",
                        "2107f27710ba5477c1fc1dd778c5ddf998bd0a93"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_error_app1",
            "line_nb": 448,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert al H; induction j; destruct al; simpl; intros; auto; try omegaContradiction.",
                        "VernacExtend",
                        "b2ce09e164667f33d44cb03eb510d0f870eaebad"
                    ]
                },
                {
                    "command": [
                        "apply IHj.",
                        "VernacExtend",
                        "7d899a4df818b523664b617886a9c89fec174ee2"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_error_rev",
            "line_nb": 454,
            "steps": [
                {
                    "command": [
                        "induction vl; simpl; intros.",
                        "VernacExtend",
                        "2a7d6c49d917722032aa26cade8611316206deef"
                    ]
                },
                {
                    "command": [
                        "apply nth_error_nil.",
                        "VernacExtend",
                        "1cd4f3b056d8d5ebafe0bcf00c5099aff468ef81"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec n (length vl)).",
                        "VernacExtend",
                        "cb7330bece18f04954328fc6bd4786254c8edd33"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "pattern (length vl) at 1; rewrite <- rev_length.",
                        "VernacExtend",
                        "aabe1a34dd2e98c73f7ddb4f63ea0115994cc91b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (plus_0_r (length (rev vl))).",
                        "VernacExtend",
                        "9f416e8ee5a9d9349a64db0093b0cf680d40262e"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_error_app.",
                        "VernacExtend",
                        "ae87997edd72743f64634ea611d1fedb1961cb6f"
                    ]
                },
                {
                    "command": [
                        "case_eq (length vl); intros.",
                        "VernacExtend",
                        "bcc42b8bf18ee4bc6fa630714d6c38cdee73fe95"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "replace (S n - n - 1)%nat with O by omega.",
                        "VernacExtend",
                        "24a92770fad45e7c712b66ee73fee39795a8a6c4"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_error_app1 by (rewrite rev_length; omega).",
                        "VernacExtend",
                        "81515973773c260c1bba4af4c07541253b969f82"
                    ]
                },
                {
                    "command": [
                        "rewrite IHvl by omega.",
                        "VernacExtend",
                        "2eac45f5b2415694f4b0a6828e2ce39f6ef3812a"
                    ]
                },
                {
                    "command": [
                        "clear IHvl.",
                        "VernacExtend",
                        "2173d40560c64f83005270de188a518ef245f2ac"
                    ]
                },
                {
                    "command": [
                        "destruct n; destruct (length vl).",
                        "VernacExtend",
                        "89ab2aa2335034b31e640dfd3a4bb4c071a47217"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "replace (n-0)%nat with n by omega; auto.",
                        "VernacExtend",
                        "9bddaddf41fa97d80e81403d4b4a5b914aeb36df"
                    ]
                },
                {
                    "command": [
                        "omegaContradiction.",
                        "VernacExtend",
                        "329a0d87fada76e54a403fa49705e937670711cd"
                    ]
                },
                {
                    "command": [
                        "replace (S n1 - n - 1)%nat with (S (S n1 - S n - 1))%nat by omega.",
                        "VernacExtend",
                        "6ba7feda03d382177f81011e5092ff0df2f6e9ee"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_app",
            "line_nb": 478,
            "steps": [
                {
                    "command": [
                        "induction al; intros.",
                        "VernacExtend",
                        "1068feabd2738258b572f93c7133cfbbce45122b"
                    ]
                },
                {
                    "command": [
                        "simpl app; rewrite Zlength_nil; omega.",
                        "VernacExtend",
                        "2ce3fdb0b1b3a64d1327ec33b5549bf900c9a2d6"
                    ]
                },
                {
                    "command": [
                        "simpl app; repeat rewrite Zlength_cons; rewrite IHal; omega.",
                        "VernacExtend",
                        "4bb8131c3fc589fd7268b33a2bcc6f4259e454d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_rev",
            "line_nb": 483,
            "steps": [
                {
                    "command": [
                        "induction vl; simpl; auto.",
                        "VernacExtend",
                        "c4a370b7cee0cf2f6c9e56c69ab73cbcdc1af5ee"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons.",
                        "VernacExtend",
                        "e06d429bdf690ef195f65a36ea0771f78b7f113c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHvl.",
                        "VernacExtend",
                        "a59b576cf0f2799d71bc7f3225ff38b273aeea7b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_app.",
                        "VernacExtend",
                        "01056c2e43adce39e550c2f49110b1c8022d3b99"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons.",
                        "VernacExtend",
                        "e06d429bdf690ef195f65a36ea0771f78b7f113c"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_nil; omega.",
                        "VernacExtend",
                        "98170f83cbde0983d8f1ea7d95c89780d6263ebc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlength_map",
            "line_nb": 491,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; auto.",
                        "VernacExtend",
                        "2300dcaca2cea0b38a7d9c3b8a28bfa9feaddecf"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zlength_cons.",
                        "VernacExtend",
                        "7c8c8857495da06ba92c61fac948f11461198006"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_globals_hack_nil",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "simpl; intros; subst.",
                        "VernacExtend",
                        "ea3eaa2d2108f8aa67fb018caa2b8031ce89a367"
                    ]
                },
                {
                    "command": [
                        "unfold Genv.find_symbol, Genv.empty_genv.",
                        "VernacExtend",
                        "fc4148fc64a8db1ba0a4134daf93f9182c2aecdc"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply PTree.gempty.",
                        "VernacExtend",
                        "dbe505a41ab4e1d466fbd0ed0206761a607d13e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_globals_hack_single",
            "line_nb": 502,
            "steps": [
                {
                    "command": [
                        "simpl; intros; subst.",
                        "VernacExtend",
                        "ea3eaa2d2108f8aa67fb018caa2b8031ce89a367"
                    ]
                },
                {
                    "command": [
                        "unfold Genv.find_symbol, Genv.empty_genv.",
                        "VernacExtend",
                        "fc4148fc64a8db1ba0a4134daf93f9182c2aecdc"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (peq (fst v) id).",
                        "VernacExtend",
                        "c5a69140c0853865ee80e864f6f0b8a2a9d64e26"
                    ]
                },
                {
                    "command": [
                        "subst id.",
                        "VernacExtend",
                        "767d665b900c00267662410c47cd78d0b487ae49"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gss.",
                        "VernacExtend",
                        "1862d23de1a24ed5e53618dc05bc2c5f9f530523"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "destruct H; subst.",
                        "VernacExtend",
                        "cfced62c1f73763fa32f2f64f12dc4faf51d1289"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gso.",
                        "VernacExtend",
                        "6aa89209a57c294bcf8a2206f8ecdff703d6861a"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gempty in H.",
                        "VernacExtend",
                        "76be3bb2fc63bbedb66ba512de4e1a5820ff2f7c"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "destruct H; subst.",
                        "VernacExtend",
                        "cfced62c1f73763fa32f2f64f12dc4faf51d1289"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "advance_next_length",
            "line_nb": 523,
            "steps": [
                {
                    "command": [
                        "unfold Genv.advance_next; induction vl; simpl fold_left; intros.",
                        "VernacExtend",
                        "a0ed62c8745c8118ffa3d3db2896f1cd6faca056"
                    ]
                },
                {
                    "command": [
                        "simpl Pos.of_nat.",
                        "VernacExtend",
                        "21b8e90d6a56963411cb2462e9ffb519a4c7a050"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_comm.",
                        "VernacExtend",
                        "4f794b32aa99f040ef36918dd1a14806df118107"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Pos.add_sub.",
                        "VernacExtend",
                        "f9e2aadd7ddf5264dbd0192a26429397cc6779fd"
                    ]
                },
                {
                    "command": [
                        "simpl length.",
                        "VernacExtend",
                        "cab663a1b923ec4538f37af4b3dac18c303feac5"
                    ]
                },
                {
                    "command": [
                        "rewrite IHvl.",
                        "VernacExtend",
                        "d5dda43ac6dace47f4375bb6c381ea22422adf8d"
                    ]
                },
                {
                    "command": [
                        "rewrite Pplus_one_succ_l.",
                        "VernacExtend",
                        "0b0c2b2508e7bbd54c8724e26e38d1e71e9e022f"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "symmetry; rewrite Nat2Pos.inj_succ by omega.",
                        "VernacExtend",
                        "63b19a4b818c9bcb5167ddbc14759b060fe9b0e4"
                    ]
                },
                {
                    "command": [
                        "rewrite Pplus_one_succ_r.",
                        "VernacExtend",
                        "2cd375d635413b8dbd134af40f5369fd2ef4e050"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply Pos.add_assoc.",
                        "VernacExtend",
                        "fe77a768178d19f2872011c08aa2769e6110e55a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zpos_Posofnat",
            "line_nb": 537,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "simpl Z.of_nat.",
                        "VernacExtend",
                        "5b88fb18e8f5dd740462ab93f3e792d71d02065c"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply Pos.of_nat_succ.",
                        "VernacExtend",
                        "1108d21fb104a75e89851a516eeb19fb1a26193d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alloc_globals_app",
            "line_nb": 800,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert vs' m m2; induction vs; intros.",
                        "VernacExtend",
                        "d3413e0f4b8da2d35862679f8bb35a5bc98a343e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "exists m; intuition.",
                        "VernacExtend",
                        "7ba04b32b00183832877621098114434cc503780"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? [H ?]]; inv H; auto.",
                        "VernacExtend",
                        "c4dae42ddb36f7c0625889e30f04e49c45d39a8a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case_eq (Genv.alloc_global ge m a); intros.",
                        "VernacExtend",
                        "2dfdc8e94eb815757cc715679e31dbd8b4f2c346"
                    ]
                },
                {
                    "command": [
                        "specialize (IHvs vs' m0 m2).",
                        "VernacExtend",
                        "d84be22a21f1640192f6cb96629e476438609e8c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intuition; try discriminate.",
                        "VernacExtend",
                        "efc504dc1dd5ce6a9bf77a03b542d0ba8335e61f"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [? [? ?]]; discriminate.",
                        "VernacExtend",
                        "4988b98eb29d85ebfb48a3f44f9a84d1aa13a669"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alloc_globals_rev_eq",
            "line_nb": 814,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert m; induction vl; intros; auto.",
                        "VernacExtend",
                        "0e70c4b87c8816c791962dcc203c1d2bff7b8cc3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHvl.",
                        "VernacExtend",
                        "a59b576cf0f2799d71bc7f3225ff38b273aeea7b"
                    ]
                },
                {
                    "command": [
                        "case_eq (Genv.alloc_globals ge m (rev vl)); intros.",
                        "VernacExtend",
                        "8c32ec09d6e7001f2e7b323fee0e21954d8e2b5d"
                    ]
                },
                {
                    "command": [
                        "case_eq (Genv.alloc_global ge m0 a); intros.",
                        "VernacExtend",
                        "1769dc858a6d4632e55431856ba24f18da9a7e34"
                    ]
                },
                {
                    "command": [
                        "rewrite alloc_globals_app.",
                        "VernacExtend",
                        "382f7839fe4a119bbdab36874838201b72c7eed8"
                    ]
                },
                {
                    "command": [
                        "exists m0; split; auto.",
                        "VernacExtend",
                        "844824b4942870ea5a828a4a38503f55e6728a92"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; auto.",
                        "VernacExtend",
                        "48df2b0b453adadcea8e6914bccb68bfc33b286b"
                    ]
                },
                {
                    "command": [
                        "case_eq (Genv.alloc_globals ge m (rev vl ++ a :: nil)); intros; auto.",
                        "VernacExtend",
                        "0798e299ca1dc65a53b0a798db383b5b845c8d36"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "apply alloc_globals_app in H1.",
                        "VernacExtend",
                        "1e7feb2dbce2b1b74396ae42430e154b1706c53a"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [m' [? ?]].",
                        "VernacExtend",
                        "8eda9fcefb5579feaa4fb1689df16eb172c4c7dc"
                    ]
                },
                {
                    "command": [
                        "inversion2 H H1.",
                        "VernacExtend",
                        "e6604f7dcc824d174dd95466b95272557690d577"
                    ]
                },
                {
                    "command": [
                        "simpl in H2.",
                        "VernacExtend",
                        "b1e247c43b6623097ab13813b4de664287dd4249"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H2; inv H2.",
                        "VernacExtend",
                        "b645ea19b8f7e45fe7ed3f1e14e8520eab5991e2"
                    ]
                },
                {
                    "command": [
                        "case_eq (Genv.alloc_globals ge m (rev vl ++ a :: nil)); intros; auto.",
                        "VernacExtend",
                        "0798e299ca1dc65a53b0a798db383b5b845c8d36"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "apply alloc_globals_app in H0.",
                        "VernacExtend",
                        "0a92f3bc4afe7b7bcd16d297a0bade782febe4f7"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [m' [? ?]].",
                        "VernacExtend",
                        "34cc195e19f877798d3d1337d3ba7135e6b35169"
                    ]
                },
                {
                    "command": [
                        "inversion2 H H0.",
                        "VernacExtend",
                        "f968e6fdfd21c04d0905d9932874e534a58d4619"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zlength_nonneg",
            "line_nb": 838,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_nil.",
                        "VernacExtend",
                        "991cc61ab92dafa414827d401b0e1bc5b3b2f703"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons.",
                        "VernacExtend",
                        "e06d429bdf690ef195f65a36ea0771f78b7f113c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alloc_globals_rev_nextblock",
            "line_nb": 846,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert m H; induction vl; simpl; intros.",
                        "VernacExtend",
                        "e7c08aa1bac006a01d12baf977fb660db5fc4806"
                    ]
                },
                {
                    "command": [
                        "inv H; apply nextblock_empty.",
                        "VernacExtend",
                        "ad27a16140492e24a231df41669bbd8ac5856d5c"
                    ]
                },
                {
                    "command": [
                        "invSome.",
                        "VernacExtend",
                        "f9b0e980c61f8244d51be433c425e71a65913712"
                    ]
                },
                {
                    "command": [
                        "apply IHvl in H.",
                        "VernacExtend",
                        "ed02006cdd4d81d8ae8570863e63ce12957d3615"
                    ]
                },
                {
                    "command": [
                        "apply Genv.alloc_global_nextblock in H2.",
                        "VernacExtend",
                        "97b600e263791dd26a8ac62b9c47dfcdc7b9e2a4"
                    ]
                },
                {
                    "command": [
                        "rewrite Zlength_cons.",
                        "VernacExtend",
                        "e06d429bdf690ef195f65a36ea0771f78b7f113c"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Pos.inj_succ.",
                        "VernacExtend",
                        "69011452172f49e24624a963f14d0ec364fc5f8e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply Z.lt_succ_r.",
                        "VernacExtend",
                        "9525f492448ff9717874bd3e6650bcc79d0714b1"
                    ]
                },
                {
                    "command": [
                        "apply zlength_nonneg.",
                        "VernacExtend",
                        "753375676284618dcda0d2533ed819b267407883"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "set_ghost_obligation_1",
            "line_nb": 976,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "extensionality; apply resource_at_approx.",
                        "VernacExtend",
                        "bc2e4b2949c08c4e8d2380159f312798bc18d8db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "make_tycontext_s_find_id",
            "line_nb": 983,
            "steps": [
                {
                    "command": [
                        "induction G as [| (j, fs) f IHf].",
                        "VernacExtend",
                        "ed6d805ef307d9642622ac18c2f8653f078c5c20"
                    ]
                },
                {
                    "command": [
                        "destruct i; reflexivity.",
                        "VernacExtend",
                        "86d897b284d766a57d1a5afb9f1c7c66ae2b7a38"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite PTree.gsspec.",
                        "VernacExtend",
                        "88315e2b3b1f3e40fe18917f8425d57b50a31282"
                    ]
                },
                {
                    "command": [
                        "rewrite IHf.",
                        "VernacExtend",
                        "11c7ba88499d1bf7993dcc7bc11b41a2f399fc51"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_approx_eq_sym",
            "line_nb": 992,
            "steps": [
                {
                    "command": [
                        "unfold cond_approx_eq; auto.",
                        "VernacExtend",
                        "d8ec1d4e63ce91f39b69a0ae511927949ff1b327"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_approx_eq_trans",
            "line_nb": 995,
            "steps": [
                {
                    "command": [
                        "unfold cond_approx_eq in *.",
                        "VernacExtend",
                        "2b938291fadd6a33b7c8db14555f73e023a2de6e"
                    ]
                },
                {
                    "command": [
                        "intros E1 E2 ts; rewrite E1, E2.",
                        "VernacExtend",
                        "e086d56040453da6cfbd7eda06d09ec48a732951"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_approx_eq_weakening",
            "line_nb": 1000,
            "steps": [
                {
                    "command": [
                        "intros l.",
                        "VernacExtend",
                        "dd0961f3ab7d1ab267b93180e66e020db2e681bc"
                    ]
                },
                {
                    "command": [
                        "intros E ts; specialize (E ts).",
                        "VernacExtend",
                        "59a7e3f6739baaf17ce7f79d27b68a57a3bf23ac"
                    ]
                },
                {
                    "command": [
                        "rewrite <-approx_oo_approx' with (n' := n) at 1; try omega.",
                        "VernacExtend",
                        "4deb2c71f8e577262e9db3c9c3862565b6700e2b"
                    ]
                },
                {
                    "command": [
                        "rewrite <-approx'_oo_approx with (n' := n) at 2; try omega.",
                        "VernacExtend",
                        "a1600749a1ba4ab2190c8d2768ec05d4345a3456"
                    ]
                },
                {
                    "command": [
                        "rewrite <-approx_oo_approx' with (n' := n) at 3; try omega.",
                        "VernacExtend",
                        "d932f5f08c6f73b48ab34287862ec7075ff644db"
                    ]
                },
                {
                    "command": [
                        "rewrite <-approx'_oo_approx with (n' := n) at 4; try omega.",
                        "VernacExtend",
                        "a6193f3d3f1717328987ada14b3f4f841103c82d"
                    ]
                },
                {
                    "command": [
                        "rewrite <-fmap_comp.",
                        "VernacExtend",
                        "589c9d00fd7f47c0eefdd5e00d5c6bac9e05227f"
                    ]
                },
                {
                    "command": [
                        "unfold compose.",
                        "VernacExtend",
                        "d80e23bf133762584228beafbd8610d99d5d02d5"
                    ]
                },
                {
                    "command": [
                        "rewrite E.",
                        "VernacExtend",
                        "304079e57d3d6c0912193a26e70d779c9e1768b9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "level_initial_core",
            "line_nb": 1012,
            "steps": [
                {
                    "command": [
                        "apply level_make_rmap.",
                        "VernacExtend",
                        "157d17c5c074f767e64b76ce0372a135f31bfc1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}