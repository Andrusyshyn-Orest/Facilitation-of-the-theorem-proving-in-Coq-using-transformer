{
    "filename": "veric/binop_lemmas4.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Import VST.msl.msl_standard.",
            "VernacRequire",
            "bbb3b33b9509ab47eb7418bd6127eafa914382b1"
        ],
        [
            "Require Import VST.veric.Clight_base.",
            "VernacRequire",
            "03391ebcbe352738cbe4d19626ab439bfac7c2e7"
        ],
        [
            "Require Import VST.veric.compcert_rmaps.",
            "VernacRequire",
            "c684a380737921a2e41654d70bb2fe8e448426cf"
        ],
        [
            "Require Import VST.veric.Clight_lemmas.",
            "VernacRequire",
            "02532b9c71acd440dec2f77aca2af2a0760847e8"
        ],
        [
            "Require Import VST.veric.tycontext.",
            "VernacRequire",
            "f8951535af03e9380f7d0a99afae06d1059d4422"
        ],
        [
            "Require Import VST.veric.expr2.",
            "VernacRequire",
            "bf07dfc9a4517a977ef232bb1ba25ac9aaf5c2d9"
        ],
        [
            "Require Import VST.veric.Clight_Cop2.",
            "VernacRequire",
            "f0c330ebce3c0859261241e10e8a1008ad79973b"
        ],
        [
            "Require Import VST.veric.binop_lemmas2.",
            "VernacRequire",
            "288f5ed828eb94a9522c1ac63730306cbf5ac44a"
        ],
        [
            "Require Import VST.veric.binop_lemmas3.",
            "VernacRequire",
            "d2c31cc1cbc1df79ef004eca762fd4a35affd184"
        ],
        [
            "Require Import VST.veric.juicy_mem.",
            "VernacRequire",
            "f1eecf3ecf80d465588513629a8e6b5706759bd8"
        ],
        [
            "Import Cop.",
            "VernacImport",
            "866b3177cf263601a61546355b941920e6b447ef"
        ],
        [
            "Import Cop2.",
            "VernacImport",
            "c70584a5b2793ae02e0a0d71da134f2614ccd9f1"
        ],
        [
            "Import Clight_Cop2.",
            "VernacImport",
            "5c45775214185ddd4d18e1a2d7b45449a34884fc"
        ],
        [
            "Lemma denote_tc_test_eq_Vint_l: forall m i v, (denote_tc_test_eq (Vint i) v) m -> i = Int.zero.",
            "VernacStartTheoremProof",
            "474c342379abce4b0a3659fd63d5cd94fe42845f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_eq in H; simpl in H.",
            "VernacExtend",
            "b31341d0d9fced7981e92af66cbefd0c87871dc4"
        ],
        [
            "destruct Archi.ptr64, v; try solve [inv H]; simpl in H; tauto.",
            "VernacExtend",
            "accf500d0eee14140d4b106e32ba9d5a80ea42b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_test_eq_Vint_r: forall m i v, (denote_tc_test_eq v (Vint i)) m -> i = Int.zero.",
            "VernacStartTheoremProof",
            "60887f5648bd854bbbea89f479acb9e89a962166"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_eq in H; simpl in H.",
            "VernacExtend",
            "b31341d0d9fced7981e92af66cbefd0c87871dc4"
        ],
        [
            "destruct Archi.ptr64, v; try solve [inv H]; simpl in H; tauto.",
            "VernacExtend",
            "accf500d0eee14140d4b106e32ba9d5a80ea42b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sameblock_eq_block: forall p q r s, is_true (sameblock (Vptr p r) (Vptr q s)) -> p=q.",
            "VernacStartTheoremProof",
            "e0dc3fdf6e0bd6f38310b8fdb8aefb9bb0fe887f"
        ],
        [
            "simpl; intros.",
            "VernacExtend",
            "429a59199da524088af55673600740ccc58db31e"
        ],
        [
            "destruct (peq p q); auto.",
            "VernacExtend",
            "3b717ab56e68acf2b27cda954ae14c4465fdb8aa"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_test_eq_Vint_l': forall m i v, (denote_tc_test_eq (Vint i) v) m -> Int.eq i Int.zero = true.",
            "VernacStartTheoremProof",
            "2f5e7d0648c9bb44adaef6f2d66c39f7981f3a07"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_eq in H; simpl in H.",
            "VernacExtend",
            "b31341d0d9fced7981e92af66cbefd0c87871dc4"
        ],
        [
            "destruct v; try solve [inv H]; destruct Archi.ptr64; try solve [inv H]; simpl in H; destruct H; subst; apply Int.eq_true.",
            "VernacExtend",
            "3fd8229ec30b96595de6c2d5cb5b926139183a8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_test_eq_Vint_r': forall m i v, (denote_tc_test_eq v (Vint i)) m -> Int.eq i Int.zero = true.",
            "VernacStartTheoremProof",
            "d0f0e0764ebeebe4aa8e857776726b3524e1f422"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_eq in H; simpl in H.",
            "VernacExtend",
            "b31341d0d9fced7981e92af66cbefd0c87871dc4"
        ],
        [
            "destruct v; try solve [inv H]; destruct Archi.ptr64; try solve [inv H]; simpl in H; destruct H; subst; apply Int.eq_true.",
            "VernacExtend",
            "3fd8229ec30b96595de6c2d5cb5b926139183a8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_test_eq_Vlong_l': forall m i v, (denote_tc_test_eq (Vlong i) v) m -> Int64.eq i Int64.zero = true.",
            "VernacStartTheoremProof",
            "05afaa30caef0721fc71c05298f984ce0e68ad47"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_eq in H; simpl in H.",
            "VernacExtend",
            "b31341d0d9fced7981e92af66cbefd0c87871dc4"
        ],
        [
            "destruct v; try solve [inv H]; destruct Archi.ptr64; try solve [inv H]; simpl in H; destruct H; subst; try apply Int.eq_true; apply Int64.eq_true.",
            "VernacExtend",
            "ae0ee606a33f4cac44639329011d7b400cbb82b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_test_eq_Vlong_r': forall m i v, (denote_tc_test_eq v (Vlong i)) m -> Int64.eq i Int64.zero = true.",
            "VernacStartTheoremProof",
            "a9611278643ebdb277717f9eaa9db162fe7c76e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_eq in H; simpl in H.",
            "VernacExtend",
            "b31341d0d9fced7981e92af66cbefd0c87871dc4"
        ],
        [
            "destruct v; try solve [inv H]; destruct Archi.ptr64; try solve [inv H]; simpl in H; destruct H; subst; try apply Int.eq_true; apply Int64.eq_true.",
            "VernacExtend",
            "ae0ee606a33f4cac44639329011d7b400cbb82b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_test_order_eqblock: forall phi b0 i0 b i, app_pred (denote_tc_test_order (Vptr b0 i0) (Vptr b i)) phi -> b0 = b.",
            "VernacStartTheoremProof",
            "51bde43372b53b33495b690b5e39687182a03e04"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_order in H; simpl in H.",
            "VernacExtend",
            "6d85dfdb8e0435d79e253af9c086967faf62a4dc"
        ],
        [
            "unfold test_order_ptrs in H.",
            "VernacExtend",
            "12123251460928492accae7c48cfc0dc728f4116"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct (peq b0 b); auto.",
            "VernacExtend",
            "144fe437503a8945640bafecc915e23fcdbb33e1"
        ],
        [
            "contradiction H.",
            "VernacExtend",
            "9921ae0c19723fc5886b29e1f0df9d58a7efc3f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_pointer_dry: forall b ofs d m, app_pred (valid_pointer' (Vptr b ofs) d) (m_phi m) -> Mem.valid_pointer (m_dry m) b (Ptrofs.unsigned ofs + d) = true.",
            "VernacStartTheoremProof",
            "1819a8a376a1ef267ff7086c01a44864896d2921"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct (m_phi m @ (b, Ptrofs.unsigned ofs + d)) eqn:?H; try contradiction.",
            "VernacExtend",
            "6072fe00eda1fa05981a72cf213e02a3cf3aa495"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pose proof (juicy_mem_access m (b, Ptrofs.unsigned ofs + d)).",
            "VernacExtend",
            "300ba1924617bfe87b37e5f1c65ef7665a2a9789"
        ],
        [
            "rewrite H0 in H1.",
            "VernacExtend",
            "45eb32137302b214d582b77378332f104f8e1d7f"
        ],
        [
            "unfold access_at in H1.",
            "VernacExtend",
            "7ce5ba7c844d2cbda64810a7662506cc27163ebb"
        ],
        [
            "unfold perm_of_res in H1.",
            "VernacExtend",
            "14da9cc5bffbb5cb802aff734c3e8091d6b97552"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "rewrite if_false in H1.",
            "VernacExtend",
            "e7e98e8769901d54f045560094694914a83ef9f4"
        ],
        [
            "assert (exists x, (Mem.mem_access (m_dry m)) !! b (Ptrofs.unsigned ofs + d) Cur = Some x).",
            "VernacExtend",
            "ef3c72f8a69be13cd7536fdc2cda87e6970372e0"
        ],
        [
            "destruct ((Mem.mem_access (m_dry m)) !! b (Ptrofs.unsigned ofs + d) Cur); inv H1; eauto.",
            "VernacExtend",
            "d53509a8e0d12e49d16dfc43615303ad18351c21"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "apply perm_order'_dec_fiddle with x.",
            "VernacExtend",
            "dca8d957b18c34db6eba47be717e2d5f64fea766"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro; subst sh.",
            "VernacExtend",
            "b10a403c13d15016c89e8c3142a474a5ee2956de"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "pose proof (juicy_mem_access m (b, Ptrofs.unsigned ofs + d)).",
            "VernacExtend",
            "300ba1924617bfe87b37e5f1c65ef7665a2a9789"
        ],
        [
            "rewrite H0 in H1.",
            "VernacExtend",
            "45eb32137302b214d582b77378332f104f8e1d7f"
        ],
        [
            "unfold access_at in H1.",
            "VernacExtend",
            "7ce5ba7c844d2cbda64810a7662506cc27163ebb"
        ],
        [
            "unfold perm_of_res in H1.",
            "VernacExtend",
            "14da9cc5bffbb5cb802aff734c3e8091d6b97552"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "clear H0 H.",
            "VernacExtend",
            "32d1081139fffc7890ff63a6f2397549d09d3e70"
        ],
        [
            "unfold Mem.valid_pointer.",
            "VernacExtend",
            "dd8b2040e8e6b4d6fe23b0bf1a035e9b1e19c5ce"
        ],
        [
            "unfold Mem.perm_dec.",
            "VernacExtend",
            "fbf62342874ea341c6ab9423df5e48634256866f"
        ],
        [
            "destruct k.",
            "VernacExtend",
            "276a2174e55489a07c8e0fd8db1630e98ae9c376"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (exists x, (Mem.mem_access (m_dry m)) !! b (Ptrofs.unsigned ofs + d) Cur = Some x).",
            "VernacExtend",
            "ef3c72f8a69be13cd7536fdc2cda87e6970372e0"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "repeat if_tac; try contradiction; eauto.",
            "VernacExtend",
            "f65db92ecd5e4c0c9a1cf7c241dd1a68aaf995a1"
        ],
        [
            "destruct H as [x H]; apply perm_order'_dec_fiddle with x; auto.",
            "VernacExtend",
            "0f0ac6406daccc26e84642c944788348e86bb334"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (exists x, (Mem.mem_access (m_dry m)) !! b (Ptrofs.unsigned ofs + d) Cur = Some x).",
            "VernacExtend",
            "ef3c72f8a69be13cd7536fdc2cda87e6970372e0"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "repeat if_tac; try contradiction; eauto.",
            "VernacExtend",
            "f65db92ecd5e4c0c9a1cf7c241dd1a68aaf995a1"
        ],
        [
            "destruct H as [x H]; apply perm_order'_dec_fiddle with x; auto.",
            "VernacExtend",
            "0f0ac6406daccc26e84642c944788348e86bb334"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (exists x, (Mem.mem_access (m_dry m)) !! b (Ptrofs.unsigned ofs + d) Cur = Some x).",
            "VernacExtend",
            "ef3c72f8a69be13cd7536fdc2cda87e6970372e0"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "unfold perm_of_sh.",
            "VernacExtend",
            "24223f3f3b6bc9da4351c28a97298f62b69ac998"
        ],
        [
            "repeat if_tac; try contradiction; eauto.",
            "VernacExtend",
            "f65db92ecd5e4c0c9a1cf7c241dd1a68aaf995a1"
        ],
        [
            "destruct H as [x H]; apply perm_order'_dec_fiddle with x; auto.",
            "VernacExtend",
            "0f0ac6406daccc26e84642c944788348e86bb334"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_valid_pointer_dry: forall b ofs m, app_pred (weak_valid_pointer (Vptr b ofs)) (m_phi m) -> (Mem.valid_pointer (m_dry m) b (Ptrofs.unsigned ofs) || Mem.valid_pointer (m_dry m) b (Ptrofs.unsigned ofs - 1))%bool = true.",
            "VernacStartTheoremProof",
            "088a615c189d0e169da60bb8ada0c908cf11d23c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite orb_true_iff.",
            "VernacExtend",
            "e9d097e89416be11843a8b78161c9fadfd88b3bc"
        ],
        [
            "destruct H; [left | right].",
            "VernacExtend",
            "d8354e6783115874e43c4c4eb026fb6df08dc728"
        ],
        [
            "rewrite <- (Z.add_0_r (Ptrofs.unsigned ofs)).",
            "VernacExtend",
            "9b055375baee4be4ea84a99ecad1a2f9e32394c8"
        ],
        [
            "apply valid_pointer_dry; auto.",
            "VernacExtend",
            "d25dda43266a3df4e00356fd1568f1095285cfd2"
        ],
        [
            "rewrite <- Z.add_opp_r.",
            "VernacExtend",
            "5f63255ecfe9e7a443f961eab35f3a37ab147ae6"
        ],
        [
            "apply valid_pointer_dry; auto.",
            "VernacExtend",
            "d25dda43266a3df4e00356fd1568f1095285cfd2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma test_eq_relate': forall v1 v2 op m (OP: op = Ceq \\/ op = Cne), (denote_tc_test_eq v1 v2) (m_phi m) -> cmp_ptr (m_dry m) op v1 v2 = Some (force_val (sem_cmp_pp op v1 v2)).",
            "VernacStartTheoremProof",
            "94cac03328bf8d6a9a7084706324e32e0c4eadf3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cmp_ptr, sem_cmp_pp.",
            "VernacExtend",
            "6a182418526d1e61140ac8afe29be199a5ef0c31"
        ],
        [
            "unfold denote_tc_test_eq in H.",
            "VernacExtend",
            "50b0bed1d70013a718fad31bfa77db5179aedf36"
        ],
        [
            "destruct v1; try contradiction; auto; destruct v2; try contradiction; auto.",
            "VernacExtend",
            "490ea24cd8d3bbc8b49ced8f8192d3a277caca71"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct Archi.ptr64; try contradiction.",
            "VernacExtend",
            "8d2c516fd777b1d937c90f56cee053ed620ff1bf"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "subst i; rewrite ?Int.eq_true, ?Int64.eq_true.",
            "VernacExtend",
            "1654c0d6b50686eebc87c2f93b30db64d38243ee"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply weak_valid_pointer_dry in H0.",
            "VernacExtend",
            "8d24c817743051800a85a3b3d0bee3c1235a29e6"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "destruct OP; subst; simpl; auto.",
            "VernacExtend",
            "63f6736d65a4479ac85fd8cc8861b123b4d3011d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct Archi.ptr64; try contradiction.",
            "VernacExtend",
            "8d2c516fd777b1d937c90f56cee053ed620ff1bf"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "subst; rewrite ?Int.eq_true, ?Int64.eq_true.",
            "VernacExtend",
            "17266bbbf06c7f8a3e3c332bc36b10169edcb3e5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply weak_valid_pointer_dry in H0.",
            "VernacExtend",
            "8d24c817743051800a85a3b3d0bee3c1235a29e6"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "destruct OP; subst; simpl; auto.",
            "VernacExtend",
            "63f6736d65a4479ac85fd8cc8861b123b4d3011d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold test_eq_ptrs in *.",
            "VernacExtend",
            "8367e1d427feab20481ed62e686119769ef7e38b"
        ],
        [
            "unfold sameblock in H.",
            "VernacExtend",
            "f5eb6259dfbdf184873a1313399e22d8f3b25d5d"
        ],
        [
            "destruct (peq b b0); simpl proj_sumbool in H; cbv iota in H; [rewrite !if_true by auto | rewrite !if_false by auto].",
            "VernacExtend",
            "b00ff283fc5e4dbdef29bf0bddf985a2a22df3ee"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "apply weak_valid_pointer_dry in H.",
            "VernacExtend",
            "035f8e04783f040c224d68b475886563f2598448"
        ],
        [
            "apply weak_valid_pointer_dry in H0.",
            "VernacExtend",
            "8d24c817743051800a85a3b3d0bee3c1235a29e6"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "apply valid_pointer_dry in H.",
            "VernacExtend",
            "0f76dcaf36afd2e1c178a31fc1e121ba601e11c9"
        ],
        [
            "apply valid_pointer_dry in H0.",
            "VernacExtend",
            "4c36bf319286854f2c846f90ff13df66819c0e0f"
        ],
        [
            "rewrite Z.add_0_r in H,H0.",
            "VernacExtend",
            "e250e06b96864b31b087d964ddade70567c5a6ce"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "destruct OP; subst; reflexivity.",
            "VernacExtend",
            "f2fa3803d858702090013c16c9aaeab713f81e4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_cast_relate: forall i sz si a si' a' m, Cop.sem_cast (Vint i) (Tint sz si a) (Tint I32 si' a') m = sem_cast (Tint sz si a) (Tint I32 si' a') (Vint i).",
            "VernacStartTheoremProof",
            "48d71f4d0f37a86474fdf7c3c86f71783c0c47f1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_cast_int_lemma: forall sz si a si' a' i, sem_cast (Tint sz si a) (Tint I32 si' a') (Vint i) = Some (Vint i).",
            "VernacStartTheoremProof",
            "54824bc1e2859fc16d36d732de75c231ca47e1f5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sem_cast, classify_cast, tint, sem_cast_pointer.",
            "VernacExtend",
            "26a4bab762ece6975cdafd2d6137a8d298ca6a08"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_cast_relate_int_long: forall i sz si a si' a' m, Cop.sem_cast (Vint i) (Tint sz si a) (Tlong si' a') m = sem_cast (Tint sz si a) (Tlong si' a') (Vint i).",
            "VernacStartTheoremProof",
            "3dcabc3ed7483686a4886e9db81c43cc9a3e99bc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_cast_relate_long: forall i si a si' a' m, Cop.sem_cast (Vlong i) (Tlong si a) (Tlong si' a') m = sem_cast (Tlong si a) (Tlong si' a') (Vlong i).",
            "VernacStartTheoremProof",
            "1ac5ed32a231b67d1207ada0b97c923b9cbaa4e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_cast_int_long_lemma: forall sz si a si' a' i, sem_cast (Tint sz si a) (Tlong si' a') (Vint i) = Some (Vlong (cast_int_long si i)).",
            "VernacStartTheoremProof",
            "fd82358c200d9c86c673d399475dece5060b7a63"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sem_cast, classify_cast, tint, sem_cast_pointer, sem_cast_i2l.",
            "VernacExtend",
            "2b14ba395bb08ed8a8c61754e6d00d011bb2838b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_cast_long_lemma: forall si a si' a' i, sem_cast (Tlong si a) (Tlong si' a') (Vlong i) = Some (Vlong i).",
            "VernacStartTheoremProof",
            "7207bdc49538623af1d425b3433ffb8ef2511559"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sem_cast, classify_cast, tint, sem_cast_pointer, sem_cast_i2l.",
            "VernacExtend",
            "2b14ba395bb08ed8a8c61754e6d00d011bb2838b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_test_eq_xx: forall v si i phi, app_pred (denote_tc_test_eq v (Vint i)) phi -> app_pred (denote_tc_test_eq v (Vptrofs (ptrofs_of_int si i))) phi.",
            "VernacStartTheoremProof",
            "742f19887f121c41a76545c68ccdd6f57fbaff68"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_eq in *.",
            "VernacExtend",
            "d1d14f5045dee01c439fed4507ecdef4b85a31d5"
        ],
        [
            "destruct v; try contradiction; unfold Vptrofs, ptrofs_of_int; simpl; destruct Archi.ptr64; try contradiction; destruct H; hnf in *; subst; destruct si; split; hnf; auto.",
            "VernacExtend",
            "472ac7bf53dd8e2037d6ebebc9991c31f21cba36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_test_eq_yy: forall v si i phi, app_pred (denote_tc_test_eq (Vint i) v) phi -> app_pred (denote_tc_test_eq (Vptrofs (ptrofs_of_int si i)) v) phi.",
            "VernacStartTheoremProof",
            "9fa5018c5c0371e142354dbb05cb77acabaa9337"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_eq in *.",
            "VernacExtend",
            "d1d14f5045dee01c439fed4507ecdef4b85a31d5"
        ],
        [
            "destruct v; try contradiction; unfold Vptrofs, ptrofs_of_int; simpl; destruct Archi.ptr64; try contradiction; destruct H; hnf in *; subst; destruct si; split; hnf; auto.",
            "VernacExtend",
            "472ac7bf53dd8e2037d6ebebc9991c31f21cba36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_cast_long_intptr_lemma: forall si a i, force_val1 (sem_cast (Tlong si a) size_t) (Vlong i) = Vptrofs (Ptrofs.of_int64 i).",
            "VernacStartTheoremProof",
            "acc134e6ff219cfb4c6c85d8f7fcdd7b7cda3ffd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Vptrofs, size_t, sem_cast, classify_cast, sem_cast_pointer.",
            "VernacExtend",
            "4ec2864459430c15e5429771e9050e4a6b8ee741"
        ],
        [
            "destruct Archi.ptr64 eqn:Hp.",
            "VernacExtend",
            "ddbeb08cfda8118e447ce468b630e255ec886676"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Ptrofs.to_int64_of_int64; auto.",
            "VernacExtend",
            "fea3675ab03df4fc757111d447bd6ed1cf981972"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Ptrofs_to_of64_lemma; auto.",
            "VernacExtend",
            "dfab515389854917e4575a92157fb511db32f112"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma test_order_relate': forall v1 v2 op m, (denote_tc_test_order v1 v2) (m_phi m) -> cmp_ptr (m_dry m) op v1 v2 = Some (force_val (sem_cmp_pp op v1 v2)).",
            "VernacStartTheoremProof",
            "eb001e7e4b3aaef90a85eb71768cb91095d900bd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_order in H.",
            "VernacExtend",
            "5b12e9227323ea6b77f4537fbdfa43c53f598412"
        ],
        [
            "destruct v1; try contradiction; auto; destruct v2; try contradiction; auto.",
            "VernacExtend",
            "490ea24cd8d3bbc8b49ced8f8192d3a277caca71"
        ],
        [
            "unfold cmp_ptr, sem_cmp_pp; simpl.",
            "VernacExtend",
            "892fcecab5e8a87f4f2cb263a7a696d028a1b6a5"
        ],
        [
            "unfold test_order_ptrs in *.",
            "VernacExtend",
            "f683ec4e964361067722fee5989effb0ca8a7798"
        ],
        [
            "unfold sameblock in H.",
            "VernacExtend",
            "f5eb6259dfbdf184873a1313399e22d8f3b25d5d"
        ],
        [
            "destruct (peq b b0); simpl proj_sumbool in H; cbv iota in H; [rewrite !if_true by auto | rewrite !if_false by auto].",
            "VernacExtend",
            "b00ff283fc5e4dbdef29bf0bddf985a2a22df3ee"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "apply weak_valid_pointer_dry in H.",
            "VernacExtend",
            "035f8e04783f040c224d68b475886563f2598448"
        ],
        [
            "apply weak_valid_pointer_dry in H0.",
            "VernacExtend",
            "8d24c817743051800a85a3b3d0bee3c1235a29e6"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_cast_int_intptr_lemma: forall sz si a i, force_val1 (sem_cast (Tint sz si a) size_t) (Vint i) = Vptrofs (ptrofs_of_int si i).",
            "VernacStartTheoremProof",
            "43a15170aa541dd7760dff19a6bed5b90acf94e7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Vptrofs, size_t, sem_cast, classify_cast, sem_cast_pointer.",
            "VernacExtend",
            "4ec2864459430c15e5429771e9050e4a6b8ee741"
        ],
        [
            "destruct Archi.ptr64 eqn:Hp.",
            "VernacExtend",
            "ddbeb08cfda8118e447ce468b630e255ec886676"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold cast_int_long, ptrofs_of_int.",
            "VernacExtend",
            "6acebbf6f23570d55de1483188c4ebee35a9a088"
        ],
        [
            "destruct si; auto.",
            "VernacExtend",
            "5c6defe961be77b7a6389d760de8a5d32f3c5a35"
        ],
        [
            "unfold Ptrofs.to_int64.",
            "VernacExtend",
            "37124fe1a76d1bc2a13c503fed0763c9177a854c"
        ],
        [
            "unfold Ptrofs.of_ints.",
            "VernacExtend",
            "3708d16a1e75a29761a1c25bd77e9172fd89155d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite (Ptrofs.agree64_repr Hp), Int64.repr_unsigned.",
            "VernacExtend",
            "cd21982de580bd257c279b445a03ddc9889363e5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold Ptrofs.to_int64.",
            "VernacExtend",
            "37124fe1a76d1bc2a13c503fed0763c9177a854c"
        ],
        [
            "unfold Ptrofs.of_intu.",
            "VernacExtend",
            "503795909ae53994cf28b231d1da02a7a4ca9a70"
        ],
        [
            "unfold Ptrofs.of_int.",
            "VernacExtend",
            "95d5534ac1a1ea4bec720360ec6ff45e58f191f5"
        ],
        [
            "rewrite Ptrofs.unsigned_repr; auto.",
            "VernacExtend",
            "df2f316bf5f27846e1a32ddb74f3013f93776d82"
        ],
        [
            "pose proof (Int.unsigned_range i).",
            "VernacExtend",
            "c3a9e19e3d86215533851fab70582d6c3a47266e"
        ],
        [
            "pose proof (Ptrofs.modulus_eq64 Hp).",
            "VernacExtend",
            "3876ebbeeff2b6e71be89ec80fbb4e4b9b57a2c9"
        ],
        [
            "unfold Ptrofs.max_unsigned.",
            "VernacExtend",
            "d13de3f1ba4dc6340678ca3ada2164196394514c"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "assert (Int.modulus < Int64.modulus) by (compute; auto).",
            "VernacExtend",
            "abccc01442f9796fe9435d428ec0f91cc074afcb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "try ( simpl; f_equal; unfold Ptrofs.to_int, ptrofs_of_int, Ptrofs.of_ints, Ptrofs.of_intu, Ptrofs.of_int; destruct si; rewrite ?(Ptrofs.agree32_repr Hp), ?Int.repr_unsigned, ?Int.repr_signed; auto).",
            "VernacExtend",
            "09496e598d182d396d88922ef5557391892c0326"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma test_eq_fiddle_signed_xx: forall si si' v i phi, app_pred (denote_tc_test_eq v (Vptrofs (ptrofs_of_int si i))) phi -> app_pred (denote_tc_test_eq v (Vptrofs (ptrofs_of_int si' i))) phi.",
            "VernacStartTheoremProof",
            "42220bbc927fff74b51c949cc434a91c978eb4ff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_eq in *.",
            "VernacExtend",
            "d1d14f5045dee01c439fed4507ecdef4b85a31d5"
        ],
        [
            "unfold Vptrofs, ptrofs_of_int in *.",
            "VernacExtend",
            "938bc74d3f056577a2464bddc5cdfcdb03d01a84"
        ],
        [
            "destruct v; try contradiction; destruct Archi.ptr64 eqn:Hp; try contradiction; subst.",
            "VernacExtend",
            "bc75730590ebd1bbca922cc834bea325b0d3ae68"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H; split; auto.",
            "VernacExtend",
            "6b0b617ec55939190e129ebd913eb5389aac7738"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "hnf in H0|-*.",
            "VernacExtend",
            "e63b866eba9bfaa3450c481ebbe1aab0de02a973"
        ],
        [
            "destruct si; auto.",
            "VernacExtend",
            "5c6defe961be77b7a6389d760de8a5d32f3c5a35"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold Ptrofs.of_ints in *.",
            "VernacExtend",
            "39f57f5fd766e59d3bb7987febb96431e15126de"
        ],
        [
            "unfold Ptrofs.to_int, Ptrofs.to_int64 in *.",
            "VernacExtend",
            "1a7172a728fc1cbcd81d0848757b10967d47aa16"
        ],
        [
            "rewrite ?Ptrofs.agree32_repr, ?Ptrofs.agree64_repr, ?Int.repr_unsigned, ?Int64.repr_unsigned in H0 by auto.",
            "VernacExtend",
            "67737d461435d5495f1b52bd0ce1994dd4f8b609"
        ],
        [
            "assert (i=Int.zero) by first [apply Int64repr_Intsigned_zero; solve [auto] | rewrite <- (Int.repr_signed i); auto].",
            "VernacExtend",
            "465cebf2dd1e3190528e5a73489e2b60a4b92c75"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "destruct si'; auto.",
            "VernacExtend",
            "6835c8d424dd1a9a3832e62ae561f2204fa4855c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct si'; auto.",
            "VernacExtend",
            "6835c8d424dd1a9a3832e62ae561f2204fa4855c"
        ],
        [
            "unfold Ptrofs.of_intu in H0.",
            "VernacExtend",
            "0dcf37b1aeb2f934346b276467ee244c16d9620d"
        ],
        [
            "try ( rewrite Ptrofs.to_int_of_int in H0 by auto; subst; unfold Ptrofs.of_ints; rewrite Int.signed_zero; unfold Ptrofs.to_int; rewrite Ptrofs.unsigned_repr; [reflexivity |]; unfold Ptrofs.max_unsigned; rewrite (Ptrofs.modulus_eq32 Hp); compute; split; congruence); try (unfold Ptrofs.of_int, Ptrofs.to_int64 in H0; rewrite Ptrofs.unsigned_repr in H0; [apply Int64repr_Intunsigned_zero in H0; subst; reflexivity | pose proof (Int.unsigned_range i); destruct H; split; auto; assert (Int.modulus < Ptrofs.max_unsigned) by (unfold Ptrofs.max_unsigned, Ptrofs.modulus, Ptrofs.wordsize, Wordsize_Ptrofs.wordsize; rewrite Hp; compute; auto); omega]).",
            "VernacExtend",
            "0e5d2c12c42066ca4b536a63294b9c0d5501db05"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "hnf in H|-*.",
            "VernacExtend",
            "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "destruct si, si'; auto.",
            "VernacExtend",
            "bdbb348b41ee22b84f3e855f3e45a2a56791895a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold Ptrofs.of_ints, Ptrofs.of_intu in *.",
            "VernacExtend",
            "7077e3420c135842d1d984248d8f9cc1c84937b5"
        ],
        [
            "unfold Ptrofs.to_int64 in H.",
            "VernacExtend",
            "c3950bcd99fa14fa53c2641b36efb17f5c202ae1"
        ],
        [
            "rewrite (Ptrofs.agree64_repr Hp) in H.",
            "VernacExtend",
            "dba17b39c77d99848efddf1758e797c37a2b676d"
        ],
        [
            "rewrite Int64.repr_unsigned in H.",
            "VernacExtend",
            "6bc0359c61f3fb7b90ff35a404756a74f7fc7f20"
        ],
        [
            "apply Int64repr_Intsigned_zero in H.",
            "VernacExtend",
            "ee317168d502a33e681d70dc23131bb815eaa431"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold Ptrofs.of_ints, Ptrofs.of_intu in *.",
            "VernacExtend",
            "7077e3420c135842d1d984248d8f9cc1c84937b5"
        ],
        [
            "unfold Ptrofs.to_int64, Ptrofs.of_int in H.",
            "VernacExtend",
            "352e5510f3a967f95347a23c9f3f2be71c5ff308"
        ],
        [
            "rewrite (Ptrofs.agree64_repr Hp) in H.",
            "VernacExtend",
            "dba17b39c77d99848efddf1758e797c37a2b676d"
        ],
        [
            "rewrite Int64.repr_unsigned in H.",
            "VernacExtend",
            "6bc0359c61f3fb7b90ff35a404756a74f7fc7f20"
        ],
        [
            "apply Int64repr_Intunsigned_zero in H.",
            "VernacExtend",
            "634ef9ef96c2e2a3e320525caa1ea7e1835ec097"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "hnf in H|-*.",
            "VernacExtend",
            "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "destruct si, si'; auto; unfold Ptrofs.to_int, Ptrofs.of_intu, Ptrofs.of_ints, Ptrofs.of_int in *; rewrite (Ptrofs.agree32_repr Hp) in H; rewrite (Ptrofs.agree32_repr Hp); rewrite Int.repr_unsigned in *; rewrite Int.repr_signed in *; rewrite Int.repr_unsigned in *; auto.",
            "VernacExtend",
            "97ee83a38be29db32a3198ec014b2acf32a473ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma test_eq_fiddle_signed_yy: forall si si' v i phi, app_pred (denote_tc_test_eq (Vptrofs (ptrofs_of_int si i)) v) phi -> app_pred (denote_tc_test_eq (Vptrofs (ptrofs_of_int si' i)) v) phi.",
            "VernacStartTheoremProof",
            "c8f30f2a8ffafb131acc75f5bba59757f0d72e26"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_eq in *.",
            "VernacExtend",
            "d1d14f5045dee01c439fed4507ecdef4b85a31d5"
        ],
        [
            "unfold Vptrofs, ptrofs_of_int in *.",
            "VernacExtend",
            "938bc74d3f056577a2464bddc5cdfcdb03d01a84"
        ],
        [
            "destruct v; try contradiction; destruct Archi.ptr64 eqn:Hp; try contradiction; subst.",
            "VernacExtend",
            "bc75730590ebd1bbca922cc834bea325b0d3ae68"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H; split; auto.",
            "VernacExtend",
            "6b0b617ec55939190e129ebd913eb5389aac7738"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "hnf in H|-*.",
            "VernacExtend",
            "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
        ],
        [
            "destruct si; auto.",
            "VernacExtend",
            "5c6defe961be77b7a6389d760de8a5d32f3c5a35"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold Ptrofs.of_ints in *.",
            "VernacExtend",
            "39f57f5fd766e59d3bb7987febb96431e15126de"
        ],
        [
            "unfold Ptrofs.to_int, Ptrofs.to_int64 in *.",
            "VernacExtend",
            "1a7172a728fc1cbcd81d0848757b10967d47aa16"
        ],
        [
            "rewrite ?Ptrofs.agree32_repr, ?Ptrofs.agree64_repr, ?Int.repr_unsigned, ?Int64.repr_unsigned in H by auto.",
            "VernacExtend",
            "42b7f3807648e84ebba716b85725bd27c2092c59"
        ],
        [
            "assert (i=Int.zero) by first [apply Int64repr_Intsigned_zero; solve [auto] | rewrite <- (Int.repr_signed i); auto].",
            "VernacExtend",
            "465cebf2dd1e3190528e5a73489e2b60a4b92c75"
        ],
        [
            "subst i.",
            "VernacExtend",
            "8a51b06e94f64277663e0022260aa1e58bff437c"
        ],
        [
            "destruct si'; auto.",
            "VernacExtend",
            "6835c8d424dd1a9a3832e62ae561f2204fa4855c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct si'; auto.",
            "VernacExtend",
            "6835c8d424dd1a9a3832e62ae561f2204fa4855c"
        ],
        [
            "unfold Ptrofs.of_intu in H.",
            "VernacExtend",
            "97386416fb675ee1786aad1f25283610a81de88f"
        ],
        [
            "try ( rewrite Ptrofs.to_int_of_int in H by auto; subst; unfold Ptrofs.of_ints; rewrite Int.signed_zero; unfold Ptrofs.to_int; rewrite Ptrofs.unsigned_repr; [reflexivity |]; unfold Ptrofs.max_unsigned; rewrite (Ptrofs.modulus_eq32 Hp); compute; split; congruence); try (unfold Ptrofs.of_int, Ptrofs.to_int64 in H; rewrite Ptrofs.unsigned_repr in H; [apply Int64repr_Intunsigned_zero in H; subst; reflexivity | pose proof (Int.unsigned_range i); destruct H; split; auto; assert (Int.modulus < Ptrofs.max_unsigned) by (unfold Ptrofs.max_unsigned, Ptrofs.modulus, Ptrofs.wordsize, Wordsize_Ptrofs.wordsize; rewrite Hp; compute; auto); omega]).",
            "VernacExtend",
            "7c3c6262fd61e255763a5b8468ce649cf09d698c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "hnf in H|-*.",
            "VernacExtend",
            "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "destruct si, si'; auto.",
            "VernacExtend",
            "bdbb348b41ee22b84f3e855f3e45a2a56791895a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold Ptrofs.of_ints, Ptrofs.of_intu in *.",
            "VernacExtend",
            "7077e3420c135842d1d984248d8f9cc1c84937b5"
        ],
        [
            "unfold Ptrofs.to_int64 in H.",
            "VernacExtend",
            "c3950bcd99fa14fa53c2641b36efb17f5c202ae1"
        ],
        [
            "rewrite (Ptrofs.agree64_repr Hp) in H.",
            "VernacExtend",
            "dba17b39c77d99848efddf1758e797c37a2b676d"
        ],
        [
            "rewrite Int64.repr_unsigned in H.",
            "VernacExtend",
            "6bc0359c61f3fb7b90ff35a404756a74f7fc7f20"
        ],
        [
            "apply Int64repr_Intsigned_zero in H.",
            "VernacExtend",
            "ee317168d502a33e681d70dc23131bb815eaa431"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold Ptrofs.of_ints, Ptrofs.of_intu in *.",
            "VernacExtend",
            "7077e3420c135842d1d984248d8f9cc1c84937b5"
        ],
        [
            "unfold Ptrofs.to_int64, Ptrofs.of_int in H.",
            "VernacExtend",
            "352e5510f3a967f95347a23c9f3f2be71c5ff308"
        ],
        [
            "rewrite (Ptrofs.agree64_repr Hp) in H.",
            "VernacExtend",
            "dba17b39c77d99848efddf1758e797c37a2b676d"
        ],
        [
            "rewrite Int64.repr_unsigned in H.",
            "VernacExtend",
            "6bc0359c61f3fb7b90ff35a404756a74f7fc7f20"
        ],
        [
            "apply Int64repr_Intunsigned_zero in H.",
            "VernacExtend",
            "634ef9ef96c2e2a3e320525caa1ea7e1835ec097"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "hnf in H|-*.",
            "VernacExtend",
            "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "destruct si, si'; auto; unfold Ptrofs.to_int, Ptrofs.of_intu, Ptrofs.of_ints, Ptrofs.of_int in *; rewrite (Ptrofs.agree32_repr Hp) in H; rewrite (Ptrofs.agree32_repr Hp); rewrite Int.repr_unsigned in *; rewrite Int.repr_signed in *; rewrite Int.repr_unsigned in *; auto.",
            "VernacExtend",
            "97ee83a38be29db32a3198ec014b2acf32a473ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma test_order_fiddle_signed_xx: forall si si' v i phi, app_pred (denote_tc_test_order v (Vptrofs (ptrofs_of_int si i))) phi -> app_pred (denote_tc_test_order v (Vptrofs (ptrofs_of_int si' i))) phi.",
            "VernacStartTheoremProof",
            "036934f9a5bb9d3816178681bfec7c5405a41bb2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_order in *.",
            "VernacExtend",
            "e0f37cadedc54e07014e6bf020bb264387611a76"
        ],
        [
            "unfold Vptrofs, ptrofs_of_int in *.",
            "VernacExtend",
            "938bc74d3f056577a2464bddc5cdfcdb03d01a84"
        ],
        [
            "destruct v; try contradiction; destruct Archi.ptr64 eqn:Hp; try contradiction; subst.",
            "VernacExtend",
            "bc75730590ebd1bbca922cc834bea325b0d3ae68"
        ],
        [
            "destruct H; split; auto.",
            "VernacExtend",
            "6b0b617ec55939190e129ebd913eb5389aac7738"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "hnf in H0|-*.",
            "VernacExtend",
            "e63b866eba9bfaa3450c481ebbe1aab0de02a973"
        ],
        [
            "destruct si, si'; auto; try ( unfold Ptrofs.to_int, Ptrofs.of_intu, Ptrofs.of_ints, Ptrofs.of_int in *; rewrite (Ptrofs.agree32_repr Hp) in H0; rewrite (Ptrofs.agree32_repr Hp); rewrite Int.repr_unsigned in *; rewrite Int.repr_signed in *; rewrite Int.repr_unsigned in *; auto); try ( unfold Ptrofs.to_int, Ptrofs.of_intu, Ptrofs.of_ints, Ptrofs.of_int in *; unfold Ptrofs.to_int64 in *; rewrite Ptrofs.unsigned_repr_eq in *; change Ptrofs.modulus with Int64.modulus in *; rewrite <- Int64.unsigned_repr_eq in *; rewrite Int64.repr_unsigned in *; first [apply Int64repr_Intsigned_zero in H0 |apply Int64repr_Intunsigned_zero in H0]; subst i; reflexivity).",
            "VernacExtend",
            "f2c5a67c6a96558056cee891b2b35163ec7ce0e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma test_order_fiddle_signed_yy: forall si si' v i phi, app_pred (denote_tc_test_order (Vptrofs (ptrofs_of_int si i)) v) phi -> app_pred (denote_tc_test_order (Vptrofs (ptrofs_of_int si' i)) v) phi.",
            "VernacStartTheoremProof",
            "75eefb7c594093a35f0945c73d43f7292d90a84f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold denote_tc_test_order in *.",
            "VernacExtend",
            "e0f37cadedc54e07014e6bf020bb264387611a76"
        ],
        [
            "unfold Vptrofs, ptrofs_of_int in *.",
            "VernacExtend",
            "938bc74d3f056577a2464bddc5cdfcdb03d01a84"
        ],
        [
            "destruct v; try contradiction; destruct Archi.ptr64 eqn:Hp; try contradiction; subst.",
            "VernacExtend",
            "bc75730590ebd1bbca922cc834bea325b0d3ae68"
        ],
        [
            "destruct H; split; auto.",
            "VernacExtend",
            "6b0b617ec55939190e129ebd913eb5389aac7738"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "hnf in H|-*.",
            "VernacExtend",
            "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
        ],
        [
            "destruct si, si'; auto; try ( unfold Ptrofs.to_int, Ptrofs.of_intu, Ptrofs.of_ints, Ptrofs.of_int in *; rewrite (Ptrofs.agree32_repr Hp) in H; rewrite (Ptrofs.agree32_repr Hp); rewrite Int.repr_unsigned in *; rewrite Int.repr_signed in *; rewrite Int.repr_unsigned in *; auto); try ( unfold Ptrofs.to_int, Ptrofs.of_intu, Ptrofs.of_ints, Ptrofs.of_int in *; unfold Ptrofs.to_int64 in *; rewrite Ptrofs.unsigned_repr_eq in *; change Ptrofs.modulus with Int64.modulus in *; rewrite <- Int64.unsigned_repr_eq in *; rewrite Int64.repr_unsigned in *; first [apply Int64repr_Intsigned_zero in H |apply Int64repr_Intunsigned_zero in H]; subst i; reflexivity).",
            "VernacExtend",
            "876b52a9f2f88ea216cd80416a02c2795bd3aa70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_nonzero_e': forall i m, app_pred (denote_tc_nonzero (Vint i)) m -> Int.eq i Int.zero = false.",
            "VernacStartTheoremProof",
            "35d62c318dfee5b3071a7d12d9f798705cac81a2"
        ],
        [
            "simpl; intros; apply Int.eq_false; auto.",
            "VernacExtend",
            "e361c0811e6c638283b5c435f917f946776bf4fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_nodivover_e': forall i j m, app_pred (denote_tc_nodivover (Vint i) (Vint j)) m -> Int.eq i (Int.repr Int.min_signed) && Int.eq j Int.mone = false.",
            "VernacStartTheoremProof",
            "a5c71bd32151c98cf13492b3d17411127a06b26e"
        ],
        [
            "simpl; intros.",
            "VernacExtend",
            "429a59199da524088af55673600740ccc58db31e"
        ],
        [
            "rewrite andb_false_iff.",
            "VernacExtend",
            "14b8941a4f7c960307f5589593a6d6bc2dfbaa38"
        ],
        [
            "apply Classical_Prop.not_and_or in H.",
            "VernacExtend",
            "7158f80f39a001809b5e862f579e25b02fbe42d3"
        ],
        [
            "destruct H; [left|right]; apply Int.eq_false; auto.",
            "VernacExtend",
            "59d5775e7d03997f7133c9fa4f416e6fe8f7def4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_nonzero_e64': forall i m, app_pred (denote_tc_nonzero (Vlong i)) m -> Int64.eq i Int64.zero = false.",
            "VernacStartTheoremProof",
            "9594d479d5c87f05b64f540050fbe62bacbc37b5"
        ],
        [
            "simpl; intros; apply Int64.eq_false; auto.",
            "VernacExtend",
            "2cafddd225e3a0ed787419f02ba47e7eeb0d7220"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_nodivover_e64_ll': forall i j m, app_pred (denote_tc_nodivover (Vlong i) (Vlong j)) m -> Int64.eq i (Int64.repr Int64.min_signed) && Int64.eq j Int64.mone = false.",
            "VernacStartTheoremProof",
            "170cdb053a588eb54fd6d61f2badf83a8ad5a210"
        ],
        [
            "simpl; intros.",
            "VernacExtend",
            "429a59199da524088af55673600740ccc58db31e"
        ],
        [
            "rewrite andb_false_iff.",
            "VernacExtend",
            "14b8941a4f7c960307f5589593a6d6bc2dfbaa38"
        ],
        [
            "apply Classical_Prop.not_and_or in H.",
            "VernacExtend",
            "7158f80f39a001809b5e862f579e25b02fbe42d3"
        ],
        [
            "destruct H; [left|right]; apply Int64.eq_false; auto.",
            "VernacExtend",
            "07b396855df434158bcf2903b6f404b68d628b69"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_nodivover_e64_il': forall s i j m, app_pred (denote_tc_nodivover (Vint i) (Vlong j)) m -> Int64.eq (cast_int_long s i) (Int64.repr Int64.min_signed) && Int64.eq j Int64.mone = false.",
            "VernacStartTheoremProof",
            "64d4bef596b887b5218ff723547713d8e0f2adb7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite andb_false_iff.",
            "VernacExtend",
            "14b8941a4f7c960307f5589593a6d6bc2dfbaa38"
        ],
        [
            "destruct (Classical_Prop.not_and_or _ _ (denote_tc_nodivover_e64_il s _ _ _ H)); [left|right]; apply Int64.eq_false; auto.",
            "VernacExtend",
            "15fcdbb940cf26e68d439c2a8e6d3643c8683a3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_nodivover_e64_li': forall s i j m, app_pred (denote_tc_nodivover (Vlong i) (Vint j)) m -> Int64.eq i (Int64.repr Int64.min_signed) && Int64.eq (cast_int_long s j) Int64.mone = false.",
            "VernacStartTheoremProof",
            "4348302f563c9365b5c1718e2d1041ace23be597"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite andb_false_iff.",
            "VernacExtend",
            "14b8941a4f7c960307f5589593a6d6bc2dfbaa38"
        ],
        [
            "destruct (Classical_Prop.not_and_or _ _ (denote_tc_nodivover_e64_li s _ _ _ H)); [left|right]; apply Int64.eq_false; auto.",
            "VernacExtend",
            "45347f3c159f56bf1044ae3b2418ab11f0604fcc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Int64_eq_repr_signed32_nonzero': forall i, Int.eq i Int.zero = false -> Int64.eq (Int64.repr (Int.signed i)) Int64.zero = false.",
            "VernacStartTheoremProof",
            "e9062242943c72f51d95f1ddded0042310014e25"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.eq_spec i Int.zero).",
            "VernacExtend",
            "3b2106a3bbae9a09bba923f16dd640fd9f692110"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "pose proof (Int64_eq_repr_signed32_nonzero i H0).",
            "VernacExtend",
            "89ff2ad8953bf68a19c912eb5a4ce9a51883abaa"
        ],
        [
            "apply Int64.eq_false; auto.",
            "VernacExtend",
            "7350afe671eec1d66be4e5aa00cbada2dfc290d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Int64_eq_repr_unsigned32_nonzero': forall i, Int.eq i Int.zero = false -> Int64.eq (Int64.repr (Int.unsigned i)) Int64.zero = false.",
            "VernacStartTheoremProof",
            "40a75f3cfc8d60e64a92054fca37400d3e5c3d45"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.eq_spec i Int.zero).",
            "VernacExtend",
            "3b2106a3bbae9a09bba923f16dd640fd9f692110"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "pose proof (Int64_eq_repr_unsigned32_nonzero i H0).",
            "VernacExtend",
            "1216d1e359713d89441852b2a6a6f473629616ac"
        ],
        [
            "apply Int64.eq_false; auto.",
            "VernacExtend",
            "7350afe671eec1d66be4e5aa00cbada2dfc290d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Int64_eq_repr_int_nonzero': forall s i, Int.eq i Int.zero = false -> Int64.eq (cast_int_long s i) Int64.zero = false.",
            "VernacStartTheoremProof",
            "c7ed22cddca7d35b91ca265d4729438eebaee1b3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Int.eq_spec i Int.zero).",
            "VernacExtend",
            "3b2106a3bbae9a09bba923f16dd640fd9f692110"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "pose proof (Int64_eq_repr_int_nonzero s i H0).",
            "VernacExtend",
            "c0ec0098ad62721f4c0dc303a67095a43ec1a760"
        ],
        [
            "apply Int64.eq_false; auto.",
            "VernacExtend",
            "7350afe671eec1d66be4e5aa00cbada2dfc290d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_igt_e': forall m i j, app_pred (denote_tc_igt j (Vint i)) m -> Int.ltu i j = true.",
            "VernacStartTheoremProof",
            "450ac2886a4ad846604cd064de8ae5d70e2a882d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Int.ltu.",
            "VernacExtend",
            "af9bb555e7ff976047f5582fed58c62158c36a7f"
        ],
        [
            "rewrite if_true by (apply (denote_tc_igt_e _ _ _ H)); auto.",
            "VernacExtend",
            "c0af6965b12c04b3925c50abe1f116ca8bab8bc5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_lgt_e': forall m i j, app_pred (denote_tc_lgt j (Vlong i)) m -> Int64.ltu i j = true.",
            "VernacStartTheoremProof",
            "fac37e1d9a9e5da1a84e1c7030f7a5420a81c374"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Int64.ltu.",
            "VernacExtend",
            "296eb86bd0d11d91d61e142a521d170bb3fe603b"
        ],
        [
            "rewrite if_true by (apply (denote_tc_lgt_e _ _ _ H)); auto.",
            "VernacExtend",
            "dbea4f291bc1ae9bc1d8bcec4f9558c3b7588a2a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma denote_tc_iszero_long_e': forall m i, app_pred (denote_tc_iszero (Vlong i)) m -> Int64.eq (Int64.repr (Int64.unsigned i)) Int64.zero = true.",
            "VernacStartTheoremProof",
            "079167c489fcb1677a436b400672f97c6694fcff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf in H.",
            "VernacExtend",
            "b998e5ae98dd847416f4f194f30407c3597ea052"
        ],
        [
            "pose proof (Int64.eq_spec i Int64.zero).",
            "VernacExtend",
            "b3dc4348affea34bc0347c9511c363397279ed3d"
        ],
        [
            "destruct (Int64.eq i Int64.zero); try contradiction.",
            "VernacExtend",
            "5464171cb128c24348c2bec014acd3fb0fbbeb5a"
        ],
        [
            "subst; reflexivity.",
            "VernacExtend",
            "e0e2f5d2bb0ba834bbb8fede1abdf8af65f1ce87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eval_binop_relate': forall {CS: compspecs} (ge: genv) te ve rho b e1 e2 t m (Hcenv: genv_cenv ge = @cenv_cs CS) (H1: Clight.eval_expr ge ve te (m_dry m) e1 (eval_expr e1 rho)) (H2: Clight.eval_expr ge ve te (m_dry m) e2 (eval_expr e2 rho)) (H3: app_pred (denote_tc_assert (isBinOpResultType b e1 e2 t) rho) (m_phi m)) (TC1 : tc_val (typeof e1) (eval_expr e1 rho)) (TC2 : tc_val (typeof e2) (eval_expr e2 rho)), Clight.eval_expr ge ve te (m_dry m) (Ebinop b e1 e2 t) (force_val2 (sem_binary_operation' b (typeof e1) (typeof e2)) (eval_expr e1 rho) (eval_expr e2 rho)).",
            "VernacStartTheoremProof",
            "c9bd2feb153166c3e6e5a1daf4cb105fa5a2965f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite den_isBinOpR in H3.",
            "VernacExtend",
            "86cb0b48026517f3c53e987ec0d8b9ab2d3e7af4"
        ],
        [
            "simpl in H3.",
            "VernacExtend",
            "2a96f120ac764efacadc60b978d01343f60aafa0"
        ],
        [
            "forget (op_result_type (Ebinop b e1 e2 t)) as err.",
            "VernacExtend",
            "8a4c6819baaacf332f29abba747c952280ddafe7"
        ],
        [
            "forget (arg_type (Ebinop b e1 e2 t)) as err0.",
            "VernacExtend",
            "987ee26dd49d96c73195cfe04232ed3a7516a798"
        ],
        [
            "destruct b; lazymatch type of H3 with | context [classify_add'] => destruct (classify_add' (typeof e1) (typeof e2)) eqn:?C | context [classify_sub'] => destruct (classify_sub' (typeof e1) (typeof e2)) eqn:?C | context [classify_binarith'] => destruct (classify_binarith' (typeof e1) (typeof e2)) eqn:?C; try match goal with | |- context [Odiv] => destruct s | |- context [Omod] => destruct s end | context [classify_shift'] => destruct (classify_shift' (typeof e1) (typeof e2)) eqn:?C | context [classify_cmp'] => destruct (classify_cmp' (typeof e1) (typeof e2)) eqn:?C | _ => idtac end; simpl in H3; super_unfold_lift; unfold tc_int_or_ptr_type in *; repeat match goal with | H: _ /\\ _ |- _ => destruct H | H: app_pred (denote_tc_assert (tc_bool _ _) _) _ |- _ => apply tc_bool_e in H end; forget (eval_expr e1 rho) as v1; forget (eval_expr e2 rho) as v2; try clear rho; econstructor; eauto; clear H1 H2; try clear err err0; rewrite Hcenv; clear Hcenv.",
            "VernacExtend",
            "aa90f7b974daaa8be903089fc309b8686461de82"
        ],
        [
            "all: try abstract ( destruct (typeof e1) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; try discriminate C; red in TC1; try solve [contradiction TC1]; destruct (typeof e2) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; red in TC2; try solve [contradiction TC2]; try inv C; repeat match goal with | H: context [eqb_type ?A ?B] |- _ => let J := fresh \"J\" in destruct (eqb_type A B) eqn:J; [apply eqb_type_true in J | apply eqb_type_false in J] | H: context [binarithType'] |- _ => unfold binarithType' in H; simpl in H | H: typecheck_error _ |- _ => contradiction H | H: negb true = true |- _ => inv H | H: negb false = true |- _ => clear H | H: andb _ _ = true |- _ => rewrite andb_true_iff in H; destruct H | H: isptr ?A |- _ => destruct A; simpl in H; try contradiction H | H: is_int _ _ ?A |- _ => unfold is_int in H; destruct A; try solve [contradiction H] | H: is_long ?A |- _ => unfold is_long in H; destruct A; try solve [contradiction H] | H: is_single ?A |- _ => unfold is_single in H; destruct A; try contradiction H | H: is_float ?A |- _ => unfold is_float in H; destruct A; try contradiction H | H: is_true (sameblock _ _) |- _ => apply sameblock_eq_block in H; subst end; try discriminate; rewrite ?sem_cast_long_intptr_lemma in *; rewrite ?sem_cast_int_intptr_lemma in *; cbv beta iota zeta delta [ sem_binary_operation sem_binary_operation' Cop.sem_add sem_add Cop.sem_sub sem_sub Cop.sem_div Cop.sem_mod sem_mod Cop.sem_shl Cop.sem_shift sem_shl sem_shift Cop.sem_shr sem_shr Cop.sem_cmp sem_cmp sem_cmp_pp sem_cmp_pl sem_cmp_lp Cop.sem_binarith classify_cmp classify_add binarith_type classify_binarith classify_shift sem_shift_ii sem_shift_ll sem_shift_il sem_shift_li classify_sub sem_sub_pp force_val2 typeconv remove_attributes change_attributes sem_add_ptr_int force_val both_int both_long force_val2 ]; rewrite ?sem_cast_relate, ?sem_cast_relate_long, ?sem_cast_relate_int_long; rewrite ?sem_cast_int_lemma, ?sem_cast_long_lemma, ?sem_cast_int_long_lemma; rewrite ?if_true by auto; rewrite ?sizeof_range_true by auto; try erewrite denote_tc_nodivover_e' by eauto; try erewrite denote_tc_nonzero_e' by eauto; try rewrite cast_int_long_nonzero by (eapply denote_tc_nonzero_e'; eauto); rewrite ?(proj2 (eqb_type_false _ _)) by auto 1; try reflexivity; try solve [apply test_eq_relate'; auto; try (apply denote_tc_test_eq_xx; assumption); try (apply denote_tc_test_eq_yy; assumption); try (eapply test_eq_fiddle_signed_xx; eassumption); try (eapply test_eq_fiddle_signed_yy; eassumption)]; try solve [apply test_order_relate'; auto; try (eapply test_order_fiddle_signed_xx; eassumption); try (eapply test_order_fiddle_signed_yy; eassumption)]; try erewrite (denote_tc_nodivover_e64_li' Signed) by eauto; try erewrite (denote_tc_nodivover_e64_il' Signed) by eauto; try erewrite (denote_tc_nodivover_e64_li' Unsigned) by eauto; try erewrite (denote_tc_nodivover_e64_il' Unsigned) by eauto; try erewrite (denote_tc_nodivover_e64_ll') by eauto; try erewrite denote_tc_nonzero_e64' by eauto; try erewrite denote_tc_igt_e' by eauto; try erewrite denote_tc_lgt_e' by eauto; erewrite ?denote_tc_test_eq_Vint_l' by eassumption; erewrite ?denote_tc_test_eq_Vint_r' by eassumption; erewrite ?denote_tc_test_eq_Vlong_l' by eassumption; erewrite ?denote_tc_test_eq_Vlong_r' by eassumption; try reflexivity).",
            "VernacExtend",
            "6ee92ded93cf9b8c946b62eeef34093056aa1992"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (typeof e1) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; try discriminate C; red in TC1; try solve [contradiction TC1]; destruct (typeof e2) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; red in TC2; try solve [contradiction TC2]; try inv C; repeat match goal with | H: context [eqb_type ?A ?B] |- _ => let J := fresh \"J\" in destruct (eqb_type A B) eqn:J; [apply eqb_type_true in J | apply eqb_type_false in J] | H: context [binarithType'] |- _ => unfold binarithType' in H; simpl in H | H: typecheck_error _ |- _ => contradiction H | H: negb true = true |- _ => inv H | H: negb false = true |- _ => clear H | H: andb _ _ = true |- _ => rewrite andb_true_iff in H; destruct H | H: isptr ?A |- _ => destruct A; simpl in H; try contradiction H | H: is_int _ _ ?A |- _ => unfold is_int in H; destruct A; try solve [contradiction H] | H: is_long ?A |- _ => unfold is_long in H; destruct A; try solve [contradiction H] | H: is_single ?A |- _ => unfold is_single in H; destruct A; try contradiction H | H: is_float ?A |- _ => unfold is_float in H; destruct A; try contradiction H | H: is_true (sameblock _ _) |- _ => apply sameblock_eq_block in H; subst end; try discriminate; rewrite ?sem_cast_long_intptr_lemma in *; rewrite ?sem_cast_int_intptr_lemma in *; cbv beta iota zeta delta [ sem_binary_operation sem_binary_operation' Cop.sem_add sem_add Cop.sem_sub sem_sub Cop.sem_div Cop.sem_mod sem_mod Cop.sem_shl Cop.sem_shift sem_shl sem_shift Cop.sem_shr sem_shr Cop.sem_cmp sem_cmp sem_cmp_pp sem_cmp_pl sem_cmp_lp Cop.sem_binarith classify_cmp classify_add binarith_type classify_binarith classify_shift sem_shift_ii sem_shift_ll sem_shift_il sem_shift_li classify_sub sem_sub_pp force_val2 typeconv remove_attributes change_attributes sem_add_ptr_int force_val both_int both_long force_val2 ]; rewrite ?sem_cast_relate, ?sem_cast_relate_long, ?sem_cast_relate_int_long; rewrite ?sem_cast_int_lemma, ?sem_cast_long_lemma, ?sem_cast_int_long_lemma; rewrite ?if_true by auto; rewrite ?sizeof_range_true by auto; try erewrite denote_tc_nodivover_e' by eauto; try erewrite denote_tc_nonzero_e' by eauto; try rewrite cast_int_long_nonzero by (eapply denote_tc_nonzero_e'; eauto); rewrite ?(proj2 (eqb_type_false _ _)) by auto 1; try reflexivity; try solve [apply test_eq_relate'; auto; try (apply denote_tc_test_eq_xx; assumption); try (apply denote_tc_test_eq_yy; assumption); try (eapply test_eq_fiddle_signed_xx; eassumption); try (eapply test_eq_fiddle_signed_yy; eassumption)]; try solve [apply test_order_relate'; auto; try (eapply test_order_fiddle_signed_xx; eassumption); try (eapply test_order_fiddle_signed_yy; eassumption)]; try erewrite (denote_tc_nodivover_e64_li' Signed) by eauto; try erewrite (denote_tc_nodivover_e64_il' Signed) by eauto; try erewrite (denote_tc_nodivover_e64_li' Unsigned) by eauto; try erewrite (denote_tc_nodivover_e64_il' Unsigned) by eauto; try erewrite (denote_tc_nodivover_e64_ll') by eauto; try erewrite denote_tc_nonzero_e64' by eauto; try erewrite denote_tc_igt_e' by eauto; try erewrite denote_tc_lgt_e' by eauto; erewrite ?denote_tc_test_eq_Vint_l' by eassumption; erewrite ?denote_tc_test_eq_Vint_r' by eassumption; erewrite ?denote_tc_test_eq_Vlong_l' by eassumption; erewrite ?denote_tc_test_eq_Vlong_r' by eassumption; try reflexivity.",
            "VernacExtend",
            "a37d6b3c02c7d2383574dd6d410fc82dec4874b2"
        ],
        [
            "Unshelve.",
            "VernacExtend",
            "c817813615af0b6452c375cc2ce9f2ba23fdba54"
        ],
        [
            "all: exact (empty_rmap O).",
            "VernacExtend",
            "ede05af0fb78747e4a008a9ab94d0724b80b93bd"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (typeof e1) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; try discriminate C; red in TC1; try solve [contradiction TC1]; destruct (typeof e2) as [ | [ | | | ] [ | ] | [ | ] | [ | ] | | | | | ]; red in TC2; try solve [contradiction TC2]; try inv C; repeat match goal with | H: context [eqb_type ?A ?B] |- _ => let J := fresh \"J\" in destruct (eqb_type A B) eqn:J; [apply eqb_type_true in J | apply eqb_type_false in J] | H: context [binarithType'] |- _ => unfold binarithType' in H; simpl in H | H: typecheck_error _ |- _ => contradiction H | H: negb true = true |- _ => inv H | H: negb false = true |- _ => clear H | H: andb _ _ = true |- _ => rewrite andb_true_iff in H; destruct H | H: isptr ?A |- _ => destruct A; simpl in H; try contradiction H | H: is_int _ _ ?A |- _ => unfold is_int in H; destruct A; try solve [contradiction H] | H: is_long ?A |- _ => unfold is_long in H; destruct A; try solve [contradiction H] | H: is_single ?A |- _ => unfold is_single in H; destruct A; try contradiction H | H: is_float ?A |- _ => unfold is_float in H; destruct A; try contradiction H | H: is_true (sameblock _ _) |- _ => apply sameblock_eq_block in H; subst end; try discriminate; rewrite ?sem_cast_long_intptr_lemma in *; rewrite ?sem_cast_int_intptr_lemma in *; cbv beta iota zeta delta [ sem_binary_operation sem_binary_operation' Cop.sem_add sem_add Cop.sem_sub sem_sub Cop.sem_div Cop.sem_mod sem_mod Cop.sem_shl Cop.sem_shift sem_shl sem_shift Cop.sem_shr sem_shr Cop.sem_cmp sem_cmp sem_cmp_pp sem_cmp_pl sem_cmp_lp Cop.sem_binarith classify_cmp classify_add binarith_type classify_binarith classify_shift sem_shift_ii sem_shift_ll sem_shift_il sem_shift_li classify_sub sem_sub_pp force_val2 typeconv remove_attributes change_attributes sem_add_ptr_int force_val both_int both_long force_val2 ]; rewrite ?sem_cast_relate, ?sem_cast_relate_long, ?sem_cast_relate_int_long; rewrite ?sem_cast_int_lemma, ?sem_cast_long_lemma, ?sem_cast_int_long_lemma; rewrite ?if_true by auto; rewrite ?sizeof_range_true by auto; try erewrite denote_tc_nodivover_e' by eauto; try erewrite denote_tc_nonzero_e' by eauto; try rewrite cast_int_long_nonzero by (eapply denote_tc_nonzero_e'; eauto); rewrite ?(proj2 (eqb_type_false _ _)) by auto 1; try reflexivity; try solve [apply test_eq_relate'; auto; try (apply denote_tc_test_eq_xx; assumption); try (apply denote_tc_test_eq_yy; assumption); try (eapply test_eq_fiddle_signed_xx; eassumption); try (eapply test_eq_fiddle_signed_yy; eassumption)]; try solve [apply test_order_relate'; auto; try (eapply test_order_fiddle_signed_xx; eassumption); try (eapply test_order_fiddle_signed_yy; eassumption)]; try erewrite (denote_tc_nodivover_e64_li' Signed) by eauto; try erewrite (denote_tc_nodivover_e64_il' Signed) by eauto; try erewrite (denote_tc_nodivover_e64_li' Unsigned) by eauto; try erewrite (denote_tc_nodivover_e64_il' Unsigned) by eauto; try erewrite (denote_tc_nodivover_e64_ll') by eauto; try erewrite denote_tc_nonzero_e64' by eauto; try erewrite denote_tc_igt_e' by eauto; try erewrite denote_tc_lgt_e' by eauto; erewrite ?denote_tc_test_eq_Vint_l' by eassumption; erewrite ?denote_tc_test_eq_Vint_r' by eassumption; erewrite ?denote_tc_test_eq_Vlong_l' by eassumption; erewrite ?denote_tc_test_eq_Vlong_r' by eassumption; try reflexivity.",
            "VernacExtend",
            "a37d6b3c02c7d2383574dd6d410fc82dec4874b2"
        ],
        [
            "Unshelve.",
            "VernacExtend",
            "c817813615af0b6452c375cc2ce9f2ba23fdba54"
        ],
        [
            "all: exact (empty_rmap O).",
            "VernacExtend",
            "ede05af0fb78747e4a008a9ab94d0724b80b93bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "denote_tc_test_eq_Vint_l",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_eq in H; simpl in H.",
                        "VernacExtend",
                        "b31341d0d9fced7981e92af66cbefd0c87871dc4"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64, v; try solve [inv H]; simpl in H; tauto.",
                        "VernacExtend",
                        "accf500d0eee14140d4b106e32ba9d5a80ea42b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_test_eq_Vint_r",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_eq in H; simpl in H.",
                        "VernacExtend",
                        "b31341d0d9fced7981e92af66cbefd0c87871dc4"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64, v; try solve [inv H]; simpl in H; tauto.",
                        "VernacExtend",
                        "accf500d0eee14140d4b106e32ba9d5a80ea42b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sameblock_eq_block",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "simpl; intros.",
                        "VernacExtend",
                        "429a59199da524088af55673600740ccc58db31e"
                    ]
                },
                {
                    "command": [
                        "destruct (peq p q); auto.",
                        "VernacExtend",
                        "3b717ab56e68acf2b27cda954ae14c4465fdb8aa"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_test_eq_Vint_l'",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_eq in H; simpl in H.",
                        "VernacExtend",
                        "b31341d0d9fced7981e92af66cbefd0c87871dc4"
                    ]
                },
                {
                    "command": [
                        "destruct v; try solve [inv H]; destruct Archi.ptr64; try solve [inv H]; simpl in H; destruct H; subst; apply Int.eq_true.",
                        "VernacExtend",
                        "3fd8229ec30b96595de6c2d5cb5b926139183a8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_test_eq_Vint_r'",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_eq in H; simpl in H.",
                        "VernacExtend",
                        "b31341d0d9fced7981e92af66cbefd0c87871dc4"
                    ]
                },
                {
                    "command": [
                        "destruct v; try solve [inv H]; destruct Archi.ptr64; try solve [inv H]; simpl in H; destruct H; subst; apply Int.eq_true.",
                        "VernacExtend",
                        "3fd8229ec30b96595de6c2d5cb5b926139183a8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_test_eq_Vlong_l'",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_eq in H; simpl in H.",
                        "VernacExtend",
                        "b31341d0d9fced7981e92af66cbefd0c87871dc4"
                    ]
                },
                {
                    "command": [
                        "destruct v; try solve [inv H]; destruct Archi.ptr64; try solve [inv H]; simpl in H; destruct H; subst; try apply Int.eq_true; apply Int64.eq_true.",
                        "VernacExtend",
                        "ae0ee606a33f4cac44639329011d7b400cbb82b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_test_eq_Vlong_r'",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_eq in H; simpl in H.",
                        "VernacExtend",
                        "b31341d0d9fced7981e92af66cbefd0c87871dc4"
                    ]
                },
                {
                    "command": [
                        "destruct v; try solve [inv H]; destruct Archi.ptr64; try solve [inv H]; simpl in H; destruct H; subst; try apply Int.eq_true; apply Int64.eq_true.",
                        "VernacExtend",
                        "ae0ee606a33f4cac44639329011d7b400cbb82b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_test_order_eqblock",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_order in H; simpl in H.",
                        "VernacExtend",
                        "6d85dfdb8e0435d79e253af9c086967faf62a4dc"
                    ]
                },
                {
                    "command": [
                        "unfold test_order_ptrs in H.",
                        "VernacExtend",
                        "12123251460928492accae7c48cfc0dc728f4116"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "destruct (peq b0 b); auto.",
                        "VernacExtend",
                        "144fe437503a8945640bafecc915e23fcdbb33e1"
                    ]
                },
                {
                    "command": [
                        "contradiction H.",
                        "VernacExtend",
                        "9921ae0c19723fc5886b29e1f0df9d58a7efc3f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_pointer_dry",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "destruct (m_phi m @ (b, Ptrofs.unsigned ofs + d)) eqn:?H; try contradiction.",
                        "VernacExtend",
                        "6072fe00eda1fa05981a72cf213e02a3cf3aa495"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pose proof (juicy_mem_access m (b, Ptrofs.unsigned ofs + d)).",
                        "VernacExtend",
                        "300ba1924617bfe87b37e5f1c65ef7665a2a9789"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H1.",
                        "VernacExtend",
                        "45eb32137302b214d582b77378332f104f8e1d7f"
                    ]
                },
                {
                    "command": [
                        "unfold access_at in H1.",
                        "VernacExtend",
                        "7ce5ba7c844d2cbda64810a7662506cc27163ebb"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_res in H1.",
                        "VernacExtend",
                        "14da9cc5bffbb5cb802aff734c3e8091d6b97552"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "rewrite if_false in H1.",
                        "VernacExtend",
                        "e7e98e8769901d54f045560094694914a83ef9f4"
                    ]
                },
                {
                    "command": [
                        "assert (exists x, (Mem.mem_access (m_dry m)) !! b (Ptrofs.unsigned ofs + d) Cur = Some x).",
                        "VernacExtend",
                        "ef3c72f8a69be13cd7536fdc2cda87e6970372e0"
                    ]
                },
                {
                    "command": [
                        "destruct ((Mem.mem_access (m_dry m)) !! b (Ptrofs.unsigned ofs + d) Cur); inv H1; eauto.",
                        "VernacExtend",
                        "d53509a8e0d12e49d16dfc43615303ad18351c21"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "apply perm_order'_dec_fiddle with x.",
                        "VernacExtend",
                        "dca8d957b18c34db6eba47be717e2d5f64fea766"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intro; subst sh.",
                        "VernacExtend",
                        "b10a403c13d15016c89e8c3142a474a5ee2956de"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "pose proof (juicy_mem_access m (b, Ptrofs.unsigned ofs + d)).",
                        "VernacExtend",
                        "300ba1924617bfe87b37e5f1c65ef7665a2a9789"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H1.",
                        "VernacExtend",
                        "45eb32137302b214d582b77378332f104f8e1d7f"
                    ]
                },
                {
                    "command": [
                        "unfold access_at in H1.",
                        "VernacExtend",
                        "7ce5ba7c844d2cbda64810a7662506cc27163ebb"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_res in H1.",
                        "VernacExtend",
                        "14da9cc5bffbb5cb802aff734c3e8091d6b97552"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "clear H0 H.",
                        "VernacExtend",
                        "32d1081139fffc7890ff63a6f2397549d09d3e70"
                    ]
                },
                {
                    "command": [
                        "unfold Mem.valid_pointer.",
                        "VernacExtend",
                        "dd8b2040e8e6b4d6fe23b0bf1a035e9b1e19c5ce"
                    ]
                },
                {
                    "command": [
                        "unfold Mem.perm_dec.",
                        "VernacExtend",
                        "fbf62342874ea341c6ab9423df5e48634256866f"
                    ]
                },
                {
                    "command": [
                        "destruct k.",
                        "VernacExtend",
                        "276a2174e55489a07c8e0fd8db1630e98ae9c376"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (exists x, (Mem.mem_access (m_dry m)) !! b (Ptrofs.unsigned ofs + d) Cur = Some x).",
                        "VernacExtend",
                        "ef3c72f8a69be13cd7536fdc2cda87e6970372e0"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "repeat if_tac; try contradiction; eauto.",
                        "VernacExtend",
                        "f65db92ecd5e4c0c9a1cf7c241dd1a68aaf995a1"
                    ]
                },
                {
                    "command": [
                        "destruct H as [x H]; apply perm_order'_dec_fiddle with x; auto.",
                        "VernacExtend",
                        "0f0ac6406daccc26e84642c944788348e86bb334"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (exists x, (Mem.mem_access (m_dry m)) !! b (Ptrofs.unsigned ofs + d) Cur = Some x).",
                        "VernacExtend",
                        "ef3c72f8a69be13cd7536fdc2cda87e6970372e0"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "repeat if_tac; try contradiction; eauto.",
                        "VernacExtend",
                        "f65db92ecd5e4c0c9a1cf7c241dd1a68aaf995a1"
                    ]
                },
                {
                    "command": [
                        "destruct H as [x H]; apply perm_order'_dec_fiddle with x; auto.",
                        "VernacExtend",
                        "0f0ac6406daccc26e84642c944788348e86bb334"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (exists x, (Mem.mem_access (m_dry m)) !! b (Ptrofs.unsigned ofs + d) Cur = Some x).",
                        "VernacExtend",
                        "ef3c72f8a69be13cd7536fdc2cda87e6970372e0"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "unfold perm_of_sh.",
                        "VernacExtend",
                        "24223f3f3b6bc9da4351c28a97298f62b69ac998"
                    ]
                },
                {
                    "command": [
                        "repeat if_tac; try contradiction; eauto.",
                        "VernacExtend",
                        "f65db92ecd5e4c0c9a1cf7c241dd1a68aaf995a1"
                    ]
                },
                {
                    "command": [
                        "destruct H as [x H]; apply perm_order'_dec_fiddle with x; auto.",
                        "VernacExtend",
                        "0f0ac6406daccc26e84642c944788348e86bb334"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weak_valid_pointer_dry",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_true_iff.",
                        "VernacExtend",
                        "e9d097e89416be11843a8b78161c9fadfd88b3bc"
                    ]
                },
                {
                    "command": [
                        "destruct H; [left | right].",
                        "VernacExtend",
                        "d8354e6783115874e43c4c4eb026fb6df08dc728"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Z.add_0_r (Ptrofs.unsigned ofs)).",
                        "VernacExtend",
                        "9b055375baee4be4ea84a99ecad1a2f9e32394c8"
                    ]
                },
                {
                    "command": [
                        "apply valid_pointer_dry; auto.",
                        "VernacExtend",
                        "d25dda43266a3df4e00356fd1568f1095285cfd2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.add_opp_r.",
                        "VernacExtend",
                        "5f63255ecfe9e7a443f961eab35f3a37ab147ae6"
                    ]
                },
                {
                    "command": [
                        "apply valid_pointer_dry; auto.",
                        "VernacExtend",
                        "d25dda43266a3df4e00356fd1568f1095285cfd2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test_eq_relate'",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold cmp_ptr, sem_cmp_pp.",
                        "VernacExtend",
                        "6a182418526d1e61140ac8afe29be199a5ef0c31"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_eq in H.",
                        "VernacExtend",
                        "50b0bed1d70013a718fad31bfa77db5179aedf36"
                    ]
                },
                {
                    "command": [
                        "destruct v1; try contradiction; auto; destruct v2; try contradiction; auto.",
                        "VernacExtend",
                        "490ea24cd8d3bbc8b49ced8f8192d3a277caca71"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64; try contradiction.",
                        "VernacExtend",
                        "8d2c516fd777b1d937c90f56cee053ed620ff1bf"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "hnf in H.",
                        "VernacExtend",
                        "b998e5ae98dd847416f4f194f30407c3597ea052"
                    ]
                },
                {
                    "command": [
                        "subst i; rewrite ?Int.eq_true, ?Int64.eq_true.",
                        "VernacExtend",
                        "1654c0d6b50686eebc87c2f93b30db64d38243ee"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply weak_valid_pointer_dry in H0.",
                        "VernacExtend",
                        "8d24c817743051800a85a3b3d0bee3c1235a29e6"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "destruct OP; subst; simpl; auto.",
                        "VernacExtend",
                        "63f6736d65a4479ac85fd8cc8861b123b4d3011d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64; try contradiction.",
                        "VernacExtend",
                        "8d2c516fd777b1d937c90f56cee053ed620ff1bf"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "hnf in H.",
                        "VernacExtend",
                        "b998e5ae98dd847416f4f194f30407c3597ea052"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite ?Int.eq_true, ?Int64.eq_true.",
                        "VernacExtend",
                        "17266bbbf06c7f8a3e3c332bc36b10169edcb3e5"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply weak_valid_pointer_dry in H0.",
                        "VernacExtend",
                        "8d24c817743051800a85a3b3d0bee3c1235a29e6"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "destruct OP; subst; simpl; auto.",
                        "VernacExtend",
                        "63f6736d65a4479ac85fd8cc8861b123b4d3011d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold test_eq_ptrs in *.",
                        "VernacExtend",
                        "8367e1d427feab20481ed62e686119769ef7e38b"
                    ]
                },
                {
                    "command": [
                        "unfold sameblock in H.",
                        "VernacExtend",
                        "f5eb6259dfbdf184873a1313399e22d8f3b25d5d"
                    ]
                },
                {
                    "command": [
                        "destruct (peq b b0); simpl proj_sumbool in H; cbv iota in H; [rewrite !if_true by auto | rewrite !if_false by auto].",
                        "VernacExtend",
                        "b00ff283fc5e4dbdef29bf0bddf985a2a22df3ee"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "apply weak_valid_pointer_dry in H.",
                        "VernacExtend",
                        "035f8e04783f040c224d68b475886563f2598448"
                    ]
                },
                {
                    "command": [
                        "apply weak_valid_pointer_dry in H0.",
                        "VernacExtend",
                        "8d24c817743051800a85a3b3d0bee3c1235a29e6"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "apply valid_pointer_dry in H.",
                        "VernacExtend",
                        "0f76dcaf36afd2e1c178a31fc1e121ba601e11c9"
                    ]
                },
                {
                    "command": [
                        "apply valid_pointer_dry in H0.",
                        "VernacExtend",
                        "4c36bf319286854f2c846f90ff13df66819c0e0f"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_0_r in H,H0.",
                        "VernacExtend",
                        "e250e06b96864b31b087d964ddade70567c5a6ce"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "destruct OP; subst; reflexivity.",
                        "VernacExtend",
                        "f2fa3803d858702090013c16c9aaeab713f81e4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_cast_int_lemma",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sem_cast, classify_cast, tint, sem_cast_pointer.",
                        "VernacExtend",
                        "26a4bab762ece6975cdafd2d6137a8d298ca6a08"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_cast_relate_int_long",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_cast_relate_long",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_cast_long_lemma",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sem_cast, classify_cast, tint, sem_cast_pointer, sem_cast_i2l.",
                        "VernacExtend",
                        "2b14ba395bb08ed8a8c61754e6d00d011bb2838b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_test_eq_xx",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_eq in *.",
                        "VernacExtend",
                        "d1d14f5045dee01c439fed4507ecdef4b85a31d5"
                    ]
                },
                {
                    "command": [
                        "destruct v; try contradiction; unfold Vptrofs, ptrofs_of_int; simpl; destruct Archi.ptr64; try contradiction; destruct H; hnf in *; subst; destruct si; split; hnf; auto.",
                        "VernacExtend",
                        "472ac7bf53dd8e2037d6ebebc9991c31f21cba36"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_test_eq_yy",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_eq in *.",
                        "VernacExtend",
                        "d1d14f5045dee01c439fed4507ecdef4b85a31d5"
                    ]
                },
                {
                    "command": [
                        "destruct v; try contradiction; unfold Vptrofs, ptrofs_of_int; simpl; destruct Archi.ptr64; try contradiction; destruct H; hnf in *; subst; destruct si; split; hnf; auto.",
                        "VernacExtend",
                        "472ac7bf53dd8e2037d6ebebc9991c31f21cba36"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_cast_long_intptr_lemma",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Vptrofs, size_t, sem_cast, classify_cast, sem_cast_pointer.",
                        "VernacExtend",
                        "4ec2864459430c15e5429771e9050e4a6b8ee741"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64 eqn:Hp.",
                        "VernacExtend",
                        "ddbeb08cfda8118e447ce468b630e255ec886676"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Ptrofs.to_int64_of_int64; auto.",
                        "VernacExtend",
                        "fea3675ab03df4fc757111d447bd6ed1cf981972"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Ptrofs_to_of64_lemma; auto.",
                        "VernacExtend",
                        "dfab515389854917e4575a92157fb511db32f112"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test_order_relate'",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_order in H.",
                        "VernacExtend",
                        "5b12e9227323ea6b77f4537fbdfa43c53f598412"
                    ]
                },
                {
                    "command": [
                        "destruct v1; try contradiction; auto; destruct v2; try contradiction; auto.",
                        "VernacExtend",
                        "490ea24cd8d3bbc8b49ced8f8192d3a277caca71"
                    ]
                },
                {
                    "command": [
                        "unfold cmp_ptr, sem_cmp_pp; simpl.",
                        "VernacExtend",
                        "892fcecab5e8a87f4f2cb263a7a696d028a1b6a5"
                    ]
                },
                {
                    "command": [
                        "unfold test_order_ptrs in *.",
                        "VernacExtend",
                        "f683ec4e964361067722fee5989effb0ca8a7798"
                    ]
                },
                {
                    "command": [
                        "unfold sameblock in H.",
                        "VernacExtend",
                        "f5eb6259dfbdf184873a1313399e22d8f3b25d5d"
                    ]
                },
                {
                    "command": [
                        "destruct (peq b b0); simpl proj_sumbool in H; cbv iota in H; [rewrite !if_true by auto | rewrite !if_false by auto].",
                        "VernacExtend",
                        "b00ff283fc5e4dbdef29bf0bddf985a2a22df3ee"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "apply weak_valid_pointer_dry in H.",
                        "VernacExtend",
                        "035f8e04783f040c224d68b475886563f2598448"
                    ]
                },
                {
                    "command": [
                        "apply weak_valid_pointer_dry in H0.",
                        "VernacExtend",
                        "8d24c817743051800a85a3b3d0bee3c1235a29e6"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_cast_int_intptr_lemma",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Vptrofs, size_t, sem_cast, classify_cast, sem_cast_pointer.",
                        "VernacExtend",
                        "4ec2864459430c15e5429771e9050e4a6b8ee741"
                    ]
                },
                {
                    "command": [
                        "destruct Archi.ptr64 eqn:Hp.",
                        "VernacExtend",
                        "ddbeb08cfda8118e447ce468b630e255ec886676"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold cast_int_long, ptrofs_of_int.",
                        "VernacExtend",
                        "6acebbf6f23570d55de1483188c4ebee35a9a088"
                    ]
                },
                {
                    "command": [
                        "destruct si; auto.",
                        "VernacExtend",
                        "5c6defe961be77b7a6389d760de8a5d32f3c5a35"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.to_int64.",
                        "VernacExtend",
                        "37124fe1a76d1bc2a13c503fed0763c9177a854c"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.of_ints.",
                        "VernacExtend",
                        "3708d16a1e75a29761a1c25bd77e9172fd89155d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ptrofs.agree64_repr Hp), Int64.repr_unsigned.",
                        "VernacExtend",
                        "cd21982de580bd257c279b445a03ddc9889363e5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.to_int64.",
                        "VernacExtend",
                        "37124fe1a76d1bc2a13c503fed0763c9177a854c"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.of_intu.",
                        "VernacExtend",
                        "503795909ae53994cf28b231d1da02a7a4ca9a70"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.of_int.",
                        "VernacExtend",
                        "95d5534ac1a1ea4bec720360ec6ff45e58f191f5"
                    ]
                },
                {
                    "command": [
                        "rewrite Ptrofs.unsigned_repr; auto.",
                        "VernacExtend",
                        "df2f316bf5f27846e1a32ddb74f3013f93776d82"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.unsigned_range i).",
                        "VernacExtend",
                        "c3a9e19e3d86215533851fab70582d6c3a47266e"
                    ]
                },
                {
                    "command": [
                        "pose proof (Ptrofs.modulus_eq64 Hp).",
                        "VernacExtend",
                        "3876ebbeeff2b6e71be89ec80fbb4e4b9b57a2c9"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.max_unsigned.",
                        "VernacExtend",
                        "d13de3f1ba4dc6340678ca3ada2164196394514c"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "assert (Int.modulus < Int64.modulus) by (compute; auto).",
                        "VernacExtend",
                        "abccc01442f9796fe9435d428ec0f91cc074afcb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "try ( simpl; f_equal; unfold Ptrofs.to_int, ptrofs_of_int, Ptrofs.of_ints, Ptrofs.of_intu, Ptrofs.of_int; destruct si; rewrite ?(Ptrofs.agree32_repr Hp), ?Int.repr_unsigned, ?Int.repr_signed; auto).",
                        "VernacExtend",
                        "09496e598d182d396d88922ef5557391892c0326"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test_eq_fiddle_signed_xx",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_eq in *.",
                        "VernacExtend",
                        "d1d14f5045dee01c439fed4507ecdef4b85a31d5"
                    ]
                },
                {
                    "command": [
                        "unfold Vptrofs, ptrofs_of_int in *.",
                        "VernacExtend",
                        "938bc74d3f056577a2464bddc5cdfcdb03d01a84"
                    ]
                },
                {
                    "command": [
                        "destruct v; try contradiction; destruct Archi.ptr64 eqn:Hp; try contradiction; subst.",
                        "VernacExtend",
                        "bc75730590ebd1bbca922cc834bea325b0d3ae68"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H; split; auto.",
                        "VernacExtend",
                        "6b0b617ec55939190e129ebd913eb5389aac7738"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "hnf in H0|-*.",
                        "VernacExtend",
                        "e63b866eba9bfaa3450c481ebbe1aab0de02a973"
                    ]
                },
                {
                    "command": [
                        "destruct si; auto.",
                        "VernacExtend",
                        "5c6defe961be77b7a6389d760de8a5d32f3c5a35"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.of_ints in *.",
                        "VernacExtend",
                        "39f57f5fd766e59d3bb7987febb96431e15126de"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.to_int, Ptrofs.to_int64 in *.",
                        "VernacExtend",
                        "1a7172a728fc1cbcd81d0848757b10967d47aa16"
                    ]
                },
                {
                    "command": [
                        "rewrite ?Ptrofs.agree32_repr, ?Ptrofs.agree64_repr, ?Int.repr_unsigned, ?Int64.repr_unsigned in H0 by auto.",
                        "VernacExtend",
                        "67737d461435d5495f1b52bd0ce1994dd4f8b609"
                    ]
                },
                {
                    "command": [
                        "assert (i=Int.zero) by first [apply Int64repr_Intsigned_zero; solve [auto] | rewrite <- (Int.repr_signed i); auto].",
                        "VernacExtend",
                        "465cebf2dd1e3190528e5a73489e2b60a4b92c75"
                    ]
                },
                {
                    "command": [
                        "subst i.",
                        "VernacExtend",
                        "8a51b06e94f64277663e0022260aa1e58bff437c"
                    ]
                },
                {
                    "command": [
                        "destruct si'; auto.",
                        "VernacExtend",
                        "6835c8d424dd1a9a3832e62ae561f2204fa4855c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct si'; auto.",
                        "VernacExtend",
                        "6835c8d424dd1a9a3832e62ae561f2204fa4855c"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.of_intu in H0.",
                        "VernacExtend",
                        "0dcf37b1aeb2f934346b276467ee244c16d9620d"
                    ]
                },
                {
                    "command": [
                        "try ( rewrite Ptrofs.to_int_of_int in H0 by auto; subst; unfold Ptrofs.of_ints; rewrite Int.signed_zero; unfold Ptrofs.to_int; rewrite Ptrofs.unsigned_repr; [reflexivity |]; unfold Ptrofs.max_unsigned; rewrite (Ptrofs.modulus_eq32 Hp); compute; split; congruence); try (unfold Ptrofs.of_int, Ptrofs.to_int64 in H0; rewrite Ptrofs.unsigned_repr in H0; [apply Int64repr_Intunsigned_zero in H0; subst; reflexivity | pose proof (Int.unsigned_range i); destruct H; split; auto; assert (Int.modulus < Ptrofs.max_unsigned) by (unfold Ptrofs.max_unsigned, Ptrofs.modulus, Ptrofs.wordsize, Wordsize_Ptrofs.wordsize; rewrite Hp; compute; auto); omega]).",
                        "VernacExtend",
                        "0e5d2c12c42066ca4b536a63294b9c0d5501db05"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "hnf in H|-*.",
                        "VernacExtend",
                        "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "destruct si, si'; auto.",
                        "VernacExtend",
                        "bdbb348b41ee22b84f3e855f3e45a2a56791895a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.of_ints, Ptrofs.of_intu in *.",
                        "VernacExtend",
                        "7077e3420c135842d1d984248d8f9cc1c84937b5"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.to_int64 in H.",
                        "VernacExtend",
                        "c3950bcd99fa14fa53c2641b36efb17f5c202ae1"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ptrofs.agree64_repr Hp) in H.",
                        "VernacExtend",
                        "dba17b39c77d99848efddf1758e797c37a2b676d"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.repr_unsigned in H.",
                        "VernacExtend",
                        "6bc0359c61f3fb7b90ff35a404756a74f7fc7f20"
                    ]
                },
                {
                    "command": [
                        "apply Int64repr_Intsigned_zero in H.",
                        "VernacExtend",
                        "ee317168d502a33e681d70dc23131bb815eaa431"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.of_ints, Ptrofs.of_intu in *.",
                        "VernacExtend",
                        "7077e3420c135842d1d984248d8f9cc1c84937b5"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.to_int64, Ptrofs.of_int in H.",
                        "VernacExtend",
                        "352e5510f3a967f95347a23c9f3f2be71c5ff308"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ptrofs.agree64_repr Hp) in H.",
                        "VernacExtend",
                        "dba17b39c77d99848efddf1758e797c37a2b676d"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.repr_unsigned in H.",
                        "VernacExtend",
                        "6bc0359c61f3fb7b90ff35a404756a74f7fc7f20"
                    ]
                },
                {
                    "command": [
                        "apply Int64repr_Intunsigned_zero in H.",
                        "VernacExtend",
                        "634ef9ef96c2e2a3e320525caa1ea7e1835ec097"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "hnf in H|-*.",
                        "VernacExtend",
                        "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "destruct si, si'; auto; unfold Ptrofs.to_int, Ptrofs.of_intu, Ptrofs.of_ints, Ptrofs.of_int in *; rewrite (Ptrofs.agree32_repr Hp) in H; rewrite (Ptrofs.agree32_repr Hp); rewrite Int.repr_unsigned in *; rewrite Int.repr_signed in *; rewrite Int.repr_unsigned in *; auto.",
                        "VernacExtend",
                        "97ee83a38be29db32a3198ec014b2acf32a473ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test_eq_fiddle_signed_yy",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_eq in *.",
                        "VernacExtend",
                        "d1d14f5045dee01c439fed4507ecdef4b85a31d5"
                    ]
                },
                {
                    "command": [
                        "unfold Vptrofs, ptrofs_of_int in *.",
                        "VernacExtend",
                        "938bc74d3f056577a2464bddc5cdfcdb03d01a84"
                    ]
                },
                {
                    "command": [
                        "destruct v; try contradiction; destruct Archi.ptr64 eqn:Hp; try contradiction; subst.",
                        "VernacExtend",
                        "bc75730590ebd1bbca922cc834bea325b0d3ae68"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H; split; auto.",
                        "VernacExtend",
                        "6b0b617ec55939190e129ebd913eb5389aac7738"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "hnf in H|-*.",
                        "VernacExtend",
                        "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
                    ]
                },
                {
                    "command": [
                        "destruct si; auto.",
                        "VernacExtend",
                        "5c6defe961be77b7a6389d760de8a5d32f3c5a35"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.of_ints in *.",
                        "VernacExtend",
                        "39f57f5fd766e59d3bb7987febb96431e15126de"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.to_int, Ptrofs.to_int64 in *.",
                        "VernacExtend",
                        "1a7172a728fc1cbcd81d0848757b10967d47aa16"
                    ]
                },
                {
                    "command": [
                        "rewrite ?Ptrofs.agree32_repr, ?Ptrofs.agree64_repr, ?Int.repr_unsigned, ?Int64.repr_unsigned in H by auto.",
                        "VernacExtend",
                        "42b7f3807648e84ebba716b85725bd27c2092c59"
                    ]
                },
                {
                    "command": [
                        "assert (i=Int.zero) by first [apply Int64repr_Intsigned_zero; solve [auto] | rewrite <- (Int.repr_signed i); auto].",
                        "VernacExtend",
                        "465cebf2dd1e3190528e5a73489e2b60a4b92c75"
                    ]
                },
                {
                    "command": [
                        "subst i.",
                        "VernacExtend",
                        "8a51b06e94f64277663e0022260aa1e58bff437c"
                    ]
                },
                {
                    "command": [
                        "destruct si'; auto.",
                        "VernacExtend",
                        "6835c8d424dd1a9a3832e62ae561f2204fa4855c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct si'; auto.",
                        "VernacExtend",
                        "6835c8d424dd1a9a3832e62ae561f2204fa4855c"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.of_intu in H.",
                        "VernacExtend",
                        "97386416fb675ee1786aad1f25283610a81de88f"
                    ]
                },
                {
                    "command": [
                        "try ( rewrite Ptrofs.to_int_of_int in H by auto; subst; unfold Ptrofs.of_ints; rewrite Int.signed_zero; unfold Ptrofs.to_int; rewrite Ptrofs.unsigned_repr; [reflexivity |]; unfold Ptrofs.max_unsigned; rewrite (Ptrofs.modulus_eq32 Hp); compute; split; congruence); try (unfold Ptrofs.of_int, Ptrofs.to_int64 in H; rewrite Ptrofs.unsigned_repr in H; [apply Int64repr_Intunsigned_zero in H; subst; reflexivity | pose proof (Int.unsigned_range i); destruct H; split; auto; assert (Int.modulus < Ptrofs.max_unsigned) by (unfold Ptrofs.max_unsigned, Ptrofs.modulus, Ptrofs.wordsize, Wordsize_Ptrofs.wordsize; rewrite Hp; compute; auto); omega]).",
                        "VernacExtend",
                        "7c3c6262fd61e255763a5b8468ce649cf09d698c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "hnf in H|-*.",
                        "VernacExtend",
                        "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "destruct si, si'; auto.",
                        "VernacExtend",
                        "bdbb348b41ee22b84f3e855f3e45a2a56791895a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.of_ints, Ptrofs.of_intu in *.",
                        "VernacExtend",
                        "7077e3420c135842d1d984248d8f9cc1c84937b5"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.to_int64 in H.",
                        "VernacExtend",
                        "c3950bcd99fa14fa53c2641b36efb17f5c202ae1"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ptrofs.agree64_repr Hp) in H.",
                        "VernacExtend",
                        "dba17b39c77d99848efddf1758e797c37a2b676d"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.repr_unsigned in H.",
                        "VernacExtend",
                        "6bc0359c61f3fb7b90ff35a404756a74f7fc7f20"
                    ]
                },
                {
                    "command": [
                        "apply Int64repr_Intsigned_zero in H.",
                        "VernacExtend",
                        "ee317168d502a33e681d70dc23131bb815eaa431"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.of_ints, Ptrofs.of_intu in *.",
                        "VernacExtend",
                        "7077e3420c135842d1d984248d8f9cc1c84937b5"
                    ]
                },
                {
                    "command": [
                        "unfold Ptrofs.to_int64, Ptrofs.of_int in H.",
                        "VernacExtend",
                        "352e5510f3a967f95347a23c9f3f2be71c5ff308"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ptrofs.agree64_repr Hp) in H.",
                        "VernacExtend",
                        "dba17b39c77d99848efddf1758e797c37a2b676d"
                    ]
                },
                {
                    "command": [
                        "rewrite Int64.repr_unsigned in H.",
                        "VernacExtend",
                        "6bc0359c61f3fb7b90ff35a404756a74f7fc7f20"
                    ]
                },
                {
                    "command": [
                        "apply Int64repr_Intunsigned_zero in H.",
                        "VernacExtend",
                        "634ef9ef96c2e2a3e320525caa1ea7e1835ec097"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "hnf in H|-*.",
                        "VernacExtend",
                        "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "destruct si, si'; auto; unfold Ptrofs.to_int, Ptrofs.of_intu, Ptrofs.of_ints, Ptrofs.of_int in *; rewrite (Ptrofs.agree32_repr Hp) in H; rewrite (Ptrofs.agree32_repr Hp); rewrite Int.repr_unsigned in *; rewrite Int.repr_signed in *; rewrite Int.repr_unsigned in *; auto.",
                        "VernacExtend",
                        "97ee83a38be29db32a3198ec014b2acf32a473ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test_order_fiddle_signed_xx",
            "line_nb": 352,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_order in *.",
                        "VernacExtend",
                        "e0f37cadedc54e07014e6bf020bb264387611a76"
                    ]
                },
                {
                    "command": [
                        "unfold Vptrofs, ptrofs_of_int in *.",
                        "VernacExtend",
                        "938bc74d3f056577a2464bddc5cdfcdb03d01a84"
                    ]
                },
                {
                    "command": [
                        "destruct v; try contradiction; destruct Archi.ptr64 eqn:Hp; try contradiction; subst.",
                        "VernacExtend",
                        "bc75730590ebd1bbca922cc834bea325b0d3ae68"
                    ]
                },
                {
                    "command": [
                        "destruct H; split; auto.",
                        "VernacExtend",
                        "6b0b617ec55939190e129ebd913eb5389aac7738"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "hnf in H0|-*.",
                        "VernacExtend",
                        "e63b866eba9bfaa3450c481ebbe1aab0de02a973"
                    ]
                },
                {
                    "command": [
                        "destruct si, si'; auto; try ( unfold Ptrofs.to_int, Ptrofs.of_intu, Ptrofs.of_ints, Ptrofs.of_int in *; rewrite (Ptrofs.agree32_repr Hp) in H0; rewrite (Ptrofs.agree32_repr Hp); rewrite Int.repr_unsigned in *; rewrite Int.repr_signed in *; rewrite Int.repr_unsigned in *; auto); try ( unfold Ptrofs.to_int, Ptrofs.of_intu, Ptrofs.of_ints, Ptrofs.of_int in *; unfold Ptrofs.to_int64 in *; rewrite Ptrofs.unsigned_repr_eq in *; change Ptrofs.modulus with Int64.modulus in *; rewrite <- Int64.unsigned_repr_eq in *; rewrite Int64.repr_unsigned in *; first [apply Int64repr_Intsigned_zero in H0 |apply Int64repr_Intunsigned_zero in H0]; subst i; reflexivity).",
                        "VernacExtend",
                        "f2c5a67c6a96558056cee891b2b35163ec7ce0e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test_order_fiddle_signed_yy",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold denote_tc_test_order in *.",
                        "VernacExtend",
                        "e0f37cadedc54e07014e6bf020bb264387611a76"
                    ]
                },
                {
                    "command": [
                        "unfold Vptrofs, ptrofs_of_int in *.",
                        "VernacExtend",
                        "938bc74d3f056577a2464bddc5cdfcdb03d01a84"
                    ]
                },
                {
                    "command": [
                        "destruct v; try contradiction; destruct Archi.ptr64 eqn:Hp; try contradiction; subst.",
                        "VernacExtend",
                        "bc75730590ebd1bbca922cc834bea325b0d3ae68"
                    ]
                },
                {
                    "command": [
                        "destruct H; split; auto.",
                        "VernacExtend",
                        "6b0b617ec55939190e129ebd913eb5389aac7738"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "hnf in H|-*.",
                        "VernacExtend",
                        "883c92f4fa13b55d07812fe45b4024140f4e4ff2"
                    ]
                },
                {
                    "command": [
                        "destruct si, si'; auto; try ( unfold Ptrofs.to_int, Ptrofs.of_intu, Ptrofs.of_ints, Ptrofs.of_int in *; rewrite (Ptrofs.agree32_repr Hp) in H; rewrite (Ptrofs.agree32_repr Hp); rewrite Int.repr_unsigned in *; rewrite Int.repr_signed in *; rewrite Int.repr_unsigned in *; auto); try ( unfold Ptrofs.to_int, Ptrofs.of_intu, Ptrofs.of_ints, Ptrofs.of_int in *; unfold Ptrofs.to_int64 in *; rewrite Ptrofs.unsigned_repr_eq in *; change Ptrofs.modulus with Int64.modulus in *; rewrite <- Int64.unsigned_repr_eq in *; rewrite Int64.repr_unsigned in *; first [apply Int64repr_Intsigned_zero in H |apply Int64repr_Intunsigned_zero in H]; subst i; reflexivity).",
                        "VernacExtend",
                        "876b52a9f2f88ea216cd80416a02c2795bd3aa70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_nonzero_e'",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "simpl; intros; apply Int.eq_false; auto.",
                        "VernacExtend",
                        "e361c0811e6c638283b5c435f917f946776bf4fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_nodivover_e'",
            "line_nb": 375,
            "steps": [
                {
                    "command": [
                        "simpl; intros.",
                        "VernacExtend",
                        "429a59199da524088af55673600740ccc58db31e"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_false_iff.",
                        "VernacExtend",
                        "14b8941a4f7c960307f5589593a6d6bc2dfbaa38"
                    ]
                },
                {
                    "command": [
                        "apply Classical_Prop.not_and_or in H.",
                        "VernacExtend",
                        "7158f80f39a001809b5e862f579e25b02fbe42d3"
                    ]
                },
                {
                    "command": [
                        "destruct H; [left|right]; apply Int.eq_false; auto.",
                        "VernacExtend",
                        "59d5775e7d03997f7133c9fa4f416e6fe8f7def4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_nonzero_e64'",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "simpl; intros; apply Int64.eq_false; auto.",
                        "VernacExtend",
                        "2cafddd225e3a0ed787419f02ba47e7eeb0d7220"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_nodivover_e64_ll'",
            "line_nb": 384,
            "steps": [
                {
                    "command": [
                        "simpl; intros.",
                        "VernacExtend",
                        "429a59199da524088af55673600740ccc58db31e"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_false_iff.",
                        "VernacExtend",
                        "14b8941a4f7c960307f5589593a6d6bc2dfbaa38"
                    ]
                },
                {
                    "command": [
                        "apply Classical_Prop.not_and_or in H.",
                        "VernacExtend",
                        "7158f80f39a001809b5e862f579e25b02fbe42d3"
                    ]
                },
                {
                    "command": [
                        "destruct H; [left|right]; apply Int64.eq_false; auto.",
                        "VernacExtend",
                        "07b396855df434158bcf2903b6f404b68d628b69"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_nodivover_e64_il'",
            "line_nb": 390,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_false_iff.",
                        "VernacExtend",
                        "14b8941a4f7c960307f5589593a6d6bc2dfbaa38"
                    ]
                },
                {
                    "command": [
                        "destruct (Classical_Prop.not_and_or _ _ (denote_tc_nodivover_e64_il s _ _ _ H)); [left|right]; apply Int64.eq_false; auto.",
                        "VernacExtend",
                        "15fcdbb940cf26e68d439c2a8e6d3643c8683a3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_nodivover_e64_li'",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_false_iff.",
                        "VernacExtend",
                        "14b8941a4f7c960307f5589593a6d6bc2dfbaa38"
                    ]
                },
                {
                    "command": [
                        "destruct (Classical_Prop.not_and_or _ _ (denote_tc_nodivover_e64_li s _ _ _ H)); [left|right]; apply Int64.eq_false; auto.",
                        "VernacExtend",
                        "45347f3c159f56bf1044ae3b2418ab11f0604fcc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Int64_eq_repr_signed32_nonzero'",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.eq_spec i Int.zero).",
                        "VernacExtend",
                        "3b2106a3bbae9a09bba923f16dd640fd9f692110"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64_eq_repr_signed32_nonzero i H0).",
                        "VernacExtend",
                        "89ff2ad8953bf68a19c912eb5a4ce9a51883abaa"
                    ]
                },
                {
                    "command": [
                        "apply Int64.eq_false; auto.",
                        "VernacExtend",
                        "7350afe671eec1d66be4e5aa00cbada2dfc290d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Int64_eq_repr_unsigned32_nonzero'",
            "line_nb": 408,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.eq_spec i Int.zero).",
                        "VernacExtend",
                        "3b2106a3bbae9a09bba923f16dd640fd9f692110"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64_eq_repr_unsigned32_nonzero i H0).",
                        "VernacExtend",
                        "1216d1e359713d89441852b2a6a6f473629616ac"
                    ]
                },
                {
                    "command": [
                        "apply Int64.eq_false; auto.",
                        "VernacExtend",
                        "7350afe671eec1d66be4e5aa00cbada2dfc290d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Int64_eq_repr_int_nonzero'",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int.eq_spec i Int.zero).",
                        "VernacExtend",
                        "3b2106a3bbae9a09bba923f16dd640fd9f692110"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64_eq_repr_int_nonzero s i H0).",
                        "VernacExtend",
                        "c0ec0098ad62721f4c0dc303a67095a43ec1a760"
                    ]
                },
                {
                    "command": [
                        "apply Int64.eq_false; auto.",
                        "VernacExtend",
                        "7350afe671eec1d66be4e5aa00cbada2dfc290d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_igt_e'",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Int.ltu.",
                        "VernacExtend",
                        "af9bb555e7ff976047f5582fed58c62158c36a7f"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by (apply (denote_tc_igt_e _ _ _ H)); auto.",
                        "VernacExtend",
                        "c0af6965b12c04b3925c50abe1f116ca8bab8bc5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_lgt_e'",
            "line_nb": 429,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Int64.ltu.",
                        "VernacExtend",
                        "296eb86bd0d11d91d61e142a521d170bb3fe603b"
                    ]
                },
                {
                    "command": [
                        "rewrite if_true by (apply (denote_tc_lgt_e _ _ _ H)); auto.",
                        "VernacExtend",
                        "dbea4f291bc1ae9bc1d8bcec4f9558c3b7588a2a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "denote_tc_iszero_long_e'",
            "line_nb": 434,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "hnf in H.",
                        "VernacExtend",
                        "b998e5ae98dd847416f4f194f30407c3597ea052"
                    ]
                },
                {
                    "command": [
                        "pose proof (Int64.eq_spec i Int64.zero).",
                        "VernacExtend",
                        "b3dc4348affea34bc0347c9511c363397279ed3d"
                    ]
                },
                {
                    "command": [
                        "destruct (Int64.eq i Int64.zero); try contradiction.",
                        "VernacExtend",
                        "5464171cb128c24348c2bec014acd3fb0fbbeb5a"
                    ]
                },
                {
                    "command": [
                        "subst; reflexivity.",
                        "VernacExtend",
                        "e0e2f5d2bb0ba834bbb8fede1abdf8af65f1ce87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}