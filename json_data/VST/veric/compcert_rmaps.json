{
    "filename": "veric/compcert_rmaps.v",
    "coq_project": "VST",
    "vernac_cmds": [
        [
            "Require Export VST.msl.msl_standard.",
            "VernacRequire",
            "ffc22dba431106fce1d5ac342f595b6f23074d70"
        ],
        [
            "Require Import VST.veric.base.",
            "VernacRequire",
            "44430f3044f6ed3bc31c11a137cd98cdfe01c277"
        ],
        [
            "Require Import compcert.cfrontend.Ctypes.",
            "VernacRequire",
            "7112843117c4021682751b14f43439fd963104b6"
        ],
        [
            "Require Import VST.veric.shares.",
            "VernacRequire",
            "3704a447cd367fa0955afd14b15f7281894f1482"
        ],
        [
            "Require Import VST.veric.rmaps.",
            "VernacRequire",
            "65dd06aa857655d44d3341a99fa83639cff14334"
        ],
        [
            "Require Import VST.veric.rmaps_lemmas.",
            "VernacRequire",
            "e349d8c37a8bf516a9b8ce6a19d2b6a741660099"
        ],
        [
            "Require Export VST.veric.Memory.",
            "VernacRequire",
            "277098916a36dfeecb0cf52e80db4155bb9c67a1"
        ],
        [
            "Instance EqDec_type: EqDec type := type_eq.",
            "VernacInstance",
            "29edb9075a8cd96e07ee7a16f818b19103e4d569"
        ],
        [
            "Definition funsig := (list (ident*type) * type)%type.",
            "VernacDefinition",
            "51cbbee3db125be8a14baaa8dcbdcfca1aef91d2"
        ],
        [
            "Inductive kind : Type := VAL : memval -> kind | LK : forall n i : Z, kind | FUN: funsig -> calling_convention -> kind.",
            "VernacInductive",
            "ebd2015bd43d1c2b0f191bc7e1d648a5e131615c"
        ],
        [
            "Definition isVAL (k: kind) := match k with | VAL _ => True | _ => False end.",
            "VernacDefinition",
            "6e13c4f96ed542ab3eba17a25cc4057c0f775414"
        ],
        [
            "Definition isFUN (k: kind) := match k with | FUN _ _ => True | _ => False end.",
            "VernacDefinition",
            "537ae1faed35dd1bcf8ca7b74fca460b1e43999c"
        ],
        [
            "Lemma isVAL_i: forall v, isVAL (VAL v).",
            "VernacStartTheoremProof",
            "26f2b0c3f7e97c63b62db2200f011a6f3e46fb18"
        ],
        [
            "intros; simpl; auto.",
            "VernacExtend",
            "bb993ce5970cef2c88f7bd735f72830b79b9dc0c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve isVAL_i.",
            "VernacHints",
            "ef802eaa0fd6ffc169f8542ebf9b1695a4752050"
        ],
        [
            "Lemma isVAL_dec: forall k, {isVAL k}+{~isVAL k}.",
            "VernacStartTheoremProof",
            "aa7e373b27a22c77f5b000e9f4acae5f5457eb2d"
        ],
        [
            "intros; destruct k; auto.",
            "VernacExtend",
            "be49577b63cdd4b18a748aac3ffc908a8d83995c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Module CompCert_AV <: ADR_VAL.",
            "VernacDefineModule",
            "568a27aafd6cd259c66a6b6658b74da0d05b0fa3"
        ],
        [
            "Definition address := address.",
            "VernacDefinition",
            "5dc133ccc619a401df08002262ebf16812c888a4"
        ],
        [
            "Definition some_address : address := (xH,0).",
            "VernacDefinition",
            "748c207cc67a2b64701a03cef2b022afbc9fb349"
        ],
        [
            "Definition kind := kind.",
            "VernacDefinition",
            "493c13e12da235528ac532ef4c2ee99f1dbaca68"
        ],
        [
            "End CompCert_AV.",
            "VernacEndSegment",
            "2d346ad0bac004fc9ab84a462fc24cc0bd2626ad"
        ],
        [
            "Lemma getVAL: forall k, {v : memval & k = VAL v} + {~isVAL k}.",
            "VernacStartTheoremProof",
            "ce0055a74e6f5dec9cd295337271d70beae4a580"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct k; try solve [simpl; right; tauto].",
            "VernacExtend",
            "f5536f325b6c985d53a3ecc955aa166b8f205caa"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma VAL_inj: forall v v', VAL v = VAL v' -> v = v'.",
            "VernacStartTheoremProof",
            "2faa6fb7714d7513df07aa26ff2a70e71149b39c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "e9bd05ad37c0a003cf8fcd49196ec009bd4adb97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance EqDec_calling_convention: EqDec calling_convention.",
            "VernacInstance",
            "298864ab22b9a2f82425336fad7a1ee2dd834017"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "destruct cc_structret, cc_structret0; intuition.",
            "VernacExtend",
            "91360d6edb215201ed304b042d0b4b12d537f2b3"
        ],
        [
            "destruct cc_unproto, cc_unproto0; intuition.",
            "VernacExtend",
            "d5e9b4fca616dcbaef462945d7f7237f2394637c"
        ],
        [
            "destruct cc_vararg, cc_vararg0; intuition.",
            "VernacExtend",
            "cb50fae46fdb29ca3550b9dcebac73650ebdd3de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance EqDec_kind: EqDec kind.",
            "VernacInstance",
            "ff97bcd9365e5f6011b88c375339496f86691a80"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "decide equality; try apply eq_dec; try apply zeq; try apply signature_eq.",
            "VernacExtend",
            "a9e2f3b4817026f6740c08e781e540514ee62bf3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Module R := Rmaps (CompCert_AV).",
            "VernacDefineModule",
            "d621824aee299c544c8d0ba9f4667cfaa1321c15"
        ],
        [
            "Module RML := Rmaps_Lemmas(R).",
            "VernacDefineModule",
            "67e0bd779fc88484573e843065ce1f4536527b30"
        ],
        [
            "Export RML.",
            "VernacImport",
            "840520201287ae43c004d228ea94e2eb9ae68878"
        ],
        [
            "Export R.",
            "VernacImport",
            "65d63bf77b2b5d9be048b947a45c668746401440"
        ],
        [
            "Definition mk_rshare: forall p: Share.t, pure_readable_share p -> rshare := exist pure_readable_share.",
            "VernacDefinition",
            "00c8ab7089f7a09734d402208c001ec7c9f5b497"
        ],
        [
            "Definition rshare_sh (p: rshare) : Share.t := proj1_sig p.",
            "VernacDefinition",
            "4811ef6eb24a978de28530ee34a4bde3f6b01d30"
        ],
        [
            "Lemma mk_rshare_sh: forall (p:rshare) (H: pure_readable_share (rshare_sh p)), mk_rshare (rshare_sh p) H = p.",
            "VernacStartTheoremProof",
            "ea11f06244078384936dd2ee012febc79ccc5ae1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold mk_rshare.",
            "VernacExtend",
            "67f0df8a85d55d3261edfe477977b9c4feaf872f"
        ],
        [
            "destruct p; simpl.",
            "VernacExtend",
            "423201fe23e437fce20ae1af4aa483a4e8c5b636"
        ],
        [
            "auto with extensionality.",
            "VernacExtend",
            "7a7878b6bec1b0dd74cf3f7893ea18537658e970"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fixup_splitting (a:address -> Share.t) (z: address -> option (rshare * kind)) : address -> option (rshare * kind) := fun l => match z l with | Some (sh, k) => match dec_readable (a l) with | left p => Some (readable_part p, k) | right _ => None end | None => None end.",
            "VernacDefinition",
            "ab682dc2fdcaae87a4a01ebb196df0b05d71b7a2"
        ],
        [
            "Definition share_of (x: option (rshare * kind)) : Share.t := match x with Some (p,_) => proj1_sig p | None => Share.bot end.",
            "VernacDefinition",
            "27c43f226804bbbf7fb771c696a42ed739bdd3b0"
        ],
        [
            "Definition Join_pk := (Join_lower (Join_prod rshare _ kind (Join_equiv _))).",
            "VernacDefinition",
            "a81aa395a04dd728b9c1dbbc18414e9094af0811"
        ],
        [
            "Lemma share_of_Some: forall p: rshare * AV.kind, readable_share (share_of (Some p)).",
            "VernacStartTheoremProof",
            "a384180fda9ead1a2a3bc000243f8733a3f4ac4c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct p as [[? ?] ?]; simpl.",
            "VernacExtend",
            "600c09278630e9a56162d24d176c53fd2255fe03"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct p; auto.",
            "VernacExtend",
            "94280b3a49c08b76852fac1fca3c7461587f918a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_sub_same_k: forall {a a' : rshare} {k k': AV.kind}, @join_sub _ Join_pk (Some (a,k)) (Some (a',k')) -> k=k'.",
            "VernacStartTheoremProof",
            "ef623febcff4efc8ecc3ad8405237c4990c5b82f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "e9bd05ad37c0a003cf8fcd49196ec009bd4adb97"
        ],
        [
            "inv H3.",
            "VernacExtend",
            "cfd5de51d4e25939e681ebd61032b9713860d1ca"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "inv H0; congruence.",
            "VernacExtend",
            "708edea0cb8a0685576cc1275119f3d9e7f9130c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pure_readable_glb_Rsh: forall sh, pure_readable_share sh -> Share.glb Share.Rsh sh = sh.",
            "VernacStartTheoremProof",
            "733bad41559e2fc483f03fdc0c0c3bfc8685c46b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "rewrite (comp_parts comp_Lsh_Rsh sh) at 2.",
            "VernacExtend",
            "a6cde756f623be2af908cdbdd6ccbee9f28b2dd5"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite Share.lub_commute, Share.lub_bot; auto.",
            "VernacExtend",
            "f013de494896909c5676fcd0852bbcbcb52090fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_glb_Rsh: forall a b c : Share.t, join a b c -> join (Share.glb Share.Rsh a) (Share.glb Share.Rsh b) (Share.glb Share.Rsh c).",
            "VernacStartTheoremProof",
            "9cf726911f22990fdf818376e1c0c5504be284a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (join_comp_parts comp_Lsh_Rsh).",
            "VernacExtend",
            "ae35a0204f9b952937f3623adf3376eafbc7aa31"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pure_readable_share_glb: forall a, pure_readable_share a -> Share.glb Share.Rsh a = a.",
            "VernacStartTheoremProof",
            "4391ba0414433091126426223ebf606e29c5138e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "rewrite (comp_parts comp_Lsh_Rsh a) at 2.",
            "VernacExtend",
            "c97495df408b50887bfa0f50d1fe96ab54c666f9"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite Share.lub_commute, Share.lub_bot.",
            "VernacExtend",
            "3920967852b19787e1c8cc6b0616e3a3d5499b45"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma glb_Rsh_bot_unreadable: forall a, Share.glb Share.Rsh a = Share.bot -> ~readable_share a.",
            "VernacStartTheoremProof",
            "b362f90f2d4d80730b6196ec50ebb469055b60a7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold readable_share.",
            "VernacExtend",
            "81db76555770dee3886332dc2cd6171b48abe2d6"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply bot_identity.",
            "VernacExtend",
            "1533895df57cb12584946f945937b197f80b2c10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fixup_join : forall a (ac ad: address -> Share.t) z, (forall x, @join_sub _ Join_pk (a x) (z x)) -> (forall x, join (ac x) (ad x) (share_of (a x))) -> (forall x, @join _ Join_pk (fixup_splitting ac z x) (fixup_splitting ad z x) (a x)).",
            "VernacStartTheoremProof",
            "9b26d1653f3a53cca5e5dc9a7c9e54e146c1947a"
        ],
        [
            "do 2 pose proof I.",
            "VernacExtend",
            "89692e062a8bc90ee20f4473dad111680c6e8a89"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fixup_splitting.",
            "VernacExtend",
            "835f19550485aa80043296a7643d1372663a8330"
        ],
        [
            "Ltac glb_Rsh_tac := repeat match goal with | |- Some _ = None => elimtype False | |- None = Some _ => elimtype False | |- join (Some _) _ None => elimtype False | |- join _ (Some _) None => elimtype False | |- join _ None _ => apply join_unit2; [ apply None_unit |] | |- join None _ _ => apply join_unit1; [ apply None_unit |] | |- Some (_,_) = Some(_,_) => do 2 f_equal; try apply exist_ext; auto | H: ~readable_share ?X, H1: join (Share.glb Share.Rsh ?X) _ _ |- _ => rewrite (not_readable_Rsh_part H) in H1; apply join_unit1_e in H1; [ | apply bot_identity]; rewrite ?H1 in * | H: ~readable_share ?X, H1: join _ (Share.glb Share.Rsh ?X) _ |- _ => rewrite (not_readable_Rsh_part H) in H1; apply join_unit2_e in H1; [ | apply bot_identity]; rewrite ?H1 in * | H: identity ?A, H1: readable_share ?A |- _ => apply (readable_not_identity A _ H1 H) | H: pure_readable_share ?A |- Share.glb Share.Rsh ?A = ?A => apply pure_readable_glb_Rsh; auto | H: join ?A ?B Share.bot |- _ => let H1 := fresh in assert (H1 := identity_share_bot _ (split_identity _ _ H bot_identity)); rewrite ?H1 in *; let H2 := fresh in assert (H2 := identity_share_bot _ (split_identity _ _ (join_comm H) bot_identity)); rewrite ?H2 in *; clear H | H: readable_share Share.bot |- _ => contradiction bot_unreadable | H: join_sub None _ |- _ => clear H | H: join_sub (Some(_,?A)) (Some (_,?B)) |- _ => unify A B || (is_var A; pose proof (join_sub_same_k H); subst A) | |- _ => rewrite Share.glb_bot in * | H: Share.glb Share.Rsh _ = Share.bot |- _ => apply glb_Rsh_bot_unreadable in H; try contradiction | H: pure_readable_share ?A |- _ => rewrite (pure_readable_share_glb _ H) in * | |- _ => assumption end; auto.",
            "VernacExtend",
            "64580cb320c37b01da6b08ba7b9d36b2e521054d"
        ],
        [
            "case_eq (z x); intros; [destruct p | ].",
            "VernacExtend",
            "444bd34ffb870fe0bd613ebbc11126c429200fec"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "specialize (H1 x); specialize (H2 x).",
            "VernacExtend",
            "6c8f0380f36ee206205aea6bc0f6cff6c0002859"
        ],
        [
            "clear H H0.",
            "VernacExtend",
            "a743351ff441835fe992d483bf3a5b58c3fccd77"
        ],
        [
            "rewrite H3 in *.",
            "VernacExtend",
            "05c6ecd2c6487293634aa6b851ba93e6eebc5724"
        ],
        [
            "clear z H3.",
            "VernacExtend",
            "d6781c7b9c03f0fe7072fb8e780b2345f6f93cb4"
        ],
        [
            "destruct (dec_readable (ac x)).",
            "VernacExtend",
            "de08f6c36894d609158a038a97e507fac53dce2a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (dec_readable (ad x)).",
            "VernacExtend",
            "296b3e76fd051f097bfbc5458a065b195ece8a1a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (a x) as [[[? ?] ?] | ]; simpl in *.",
            "VernacExtend",
            "3e0fd269f05a5260ad8c07ad70308d70aa44cf99"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "pose proof (join_sub_same_k H1); subst k.",
            "VernacExtend",
            "15321981b074cd37ae763dfe32c7aff78f2833c5"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply join_glb_Rsh in H2.",
            "VernacExtend",
            "226577ec591cf7227a67c75e633a145c403562dc"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply join_glb_Rsh in H2.",
            "VernacExtend",
            "226577ec591cf7227a67c75e633a145c403562dc"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "destruct (a x) as [[[? ?] ?]|]; simpl in *.",
            "VernacExtend",
            "3e0fd269f05a5260ad8c07ad70308d70aa44cf99"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "apply join_glb_Rsh in H2.",
            "VernacExtend",
            "226577ec591cf7227a67c75e633a145c403562dc"
        ],
        [
            "destruct (a x) as [[[? ?] ?]|]; simpl in *.",
            "VernacExtend",
            "3e0fd269f05a5260ad8c07ad70308d70aa44cf99"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "destruct (dec_readable (ad x)).",
            "VernacExtend",
            "296b3e76fd051f097bfbc5458a065b195ece8a1a"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "apply n0.",
            "VernacExtend",
            "80b3cdc19df56c74da17c07082759ca9a244c8ca"
        ],
        [
            "unfold readable_share.",
            "VernacExtend",
            "81db76555770dee3886332dc2cd6171b48abe2d6"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "destruct (dec_readable (ad x)).",
            "VernacExtend",
            "296b3e76fd051f097bfbc5458a065b195ece8a1a"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "glb_Rsh_tac.",
            "VernacExtend",
            "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "specialize (H1 x).",
            "VernacExtend",
            "f005533970ac2f0722009a73b0cc34d65b5202db"
        ],
        [
            "rewrite H3 in H1.",
            "VernacExtend",
            "0727e7dabf7e3bf6566adfd897eda8466c8046e1"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "7549fbb600c3af6072a6d21bdcba999a253a2e01"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite H7; constructor.",
            "VernacExtend",
            "1fb6a74785df330ca668dbaa87de20244e8a395e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_share_of: forall a b c, @join _ Join_pk a b c -> join (share_of a) (share_of b) (share_of c).",
            "VernacStartTheoremProof",
            "96fd920744b3aecc4f5b7ea9c95c5ad566e7d343"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H; simpl.",
            "VernacExtend",
            "2f18defd91bdfd53dd6f08bdf7063e0bb187b803"
        ],
        [
            "apply join_unit1; auto.",
            "VernacExtend",
            "4b51a100dbd89ea2b10afd9c3e726d4e54437983"
        ],
        [
            "apply join_unit2; auto.",
            "VernacExtend",
            "1d23530d69e8e34cd9745adaaa2332b2b77d44e4"
        ],
        [
            "destruct a1; destruct a2; destruct a3.",
            "VernacExtend",
            "5f52a4fa85ea4205cc93267d0a098959429de13e"
        ],
        [
            "destruct r,r0,r1; simpl.",
            "VernacExtend",
            "e4da7aa84562e1fe7c9eb2a2bec458e132102766"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "do 3 red in H.",
            "VernacExtend",
            "f2cac86721997c9b5405b005b4693feaca0bc83f"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Cross_rmap_aux: Cross_alg (AV.address -> option (rshare * AV.kind)).",
            "VernacInstance",
            "fd70d9398054388b53ac8d7835f0d22f4b224c1b"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "intros a b c d z ? ?.",
            "VernacExtend",
            "917caedcaf7997a0c49abd701b7801c49e54df5e"
        ],
        [
            "destruct (cross_split_fun Share.t _ address share_cross_split (share_of oo a) (share_of oo b) (share_of oo c) (share_of oo d) (share_of oo z)) as [[[[ac ad] bc] bd] [? [? [? ?]]]].",
            "VernacExtend",
            "7dd61f45b9341e3ade82da3c8d94f0851071f9d9"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "specialize (H x).",
            "VernacExtend",
            "45f61c119b34fcdf0671d24903e981972bd19df6"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "clear - H.",
            "VernacExtend",
            "0feb8621f12176e9894f4f3ff86ecf0003739aed"
        ],
        [
            "inv H; simpl in *.",
            "VernacExtend",
            "7f483b963f4e1adf494c8c50c5668e72b1e4153e"
        ],
        [
            "apply join_unit1; auto.",
            "VernacExtend",
            "4b51a100dbd89ea2b10afd9c3e726d4e54437983"
        ],
        [
            "apply join_unit2; auto.",
            "VernacExtend",
            "1d23530d69e8e34cd9745adaaa2332b2b77d44e4"
        ],
        [
            "destruct a1; destruct a2; destruct a3; apply H3.",
            "VernacExtend",
            "0d0837146b64badee9c7c0c067fab6ccbea5bb17"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "specialize (H0 x).",
            "VernacExtend",
            "0c0d45cbbd107bef23b82d032aedece527152dbc"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "clear - H0.",
            "VernacExtend",
            "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
        ],
        [
            "inv H0; simpl in *.",
            "VernacExtend",
            "ace46edb5d6ddbf034685bd6eaed17bc7a133b20"
        ],
        [
            "apply join_unit1; auto.",
            "VernacExtend",
            "4b51a100dbd89ea2b10afd9c3e726d4e54437983"
        ],
        [
            "apply join_unit2; auto.",
            "VernacExtend",
            "1d23530d69e8e34cd9745adaaa2332b2b77d44e4"
        ],
        [
            "destruct a1; destruct a2; destruct a3; apply H3.",
            "VernacExtend",
            "0d0837146b64badee9c7c0c067fab6ccbea5bb17"
        ],
        [
            "exists (fixup_splitting ac z, fixup_splitting ad z, fixup_splitting bc z, fixup_splitting bd z).",
            "VernacExtend",
            "69a9f1f69e103d3ac85e0579cd58e2213f9c5eef"
        ],
        [
            "split3; [ | | split]; do 2 red; simpl; intro; apply fixup_join; auto; intros.",
            "VernacExtend",
            "066b849d7b21e5f423c15009fcf78081910e3e90"
        ],
        [
            "exists (b x0); apply H.",
            "VernacExtend",
            "2ebe2526d49057c7ae80424a440f31704f70267a"
        ],
        [
            "exists (a x0); apply join_comm; apply H.",
            "VernacExtend",
            "2d11c63f076df03466b2aac9ddcf1041059c6109"
        ],
        [
            "exists (d x0); apply H0.",
            "VernacExtend",
            "40e435e7818661651e3acd6d7b9301f9c03bf7f1"
        ],
        [
            "exists (c x0); apply join_comm; apply H0.",
            "VernacExtend",
            "45ebfe31a3c4934cc3beeed36d39c5051e3d3339"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Trip_resource: Trip_alg resource.",
            "VernacInstance",
            "b47c27d051df00b6fa4d6649e613ea529d6286b9"
        ],
        [
            "intro; intros.",
            "VernacExtend",
            "0cdd5fdbe3e02025c50d75d2ceac375faa9c4b87"
        ],
        [
            "destruct a as [ra | ra sa ka pa | ka pa].",
            "VernacExtend",
            "238a96efd9ba58edc161de6805b88ebaa2037308"
        ],
        [
            "destruct b as [rb | rb sb kb pb | kb pb]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "7edb579c20a10fdf9951ded9e6a1c260a4557f53"
        ],
        [
            "destruct ab as [rab | rab sab kab pab | kab pab]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "5efdf0968d67f89cfe9897e6193047f9217fd5ca"
        ],
        [
            "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H0].",
            "VernacExtend",
            "5281376050e74a0de89bdf9f26e640bc6ecb7ec2"
        ],
        [
            "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
            "VernacExtend",
            "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
        ],
        [
            "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
        ],
        [
            "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
            "VernacExtend",
            "fe2b04ef6ab103a8058d422966e97880c09abfc7"
        ],
        [
            "assert (n5 := join_unreadable_shares j n1 n2).",
            "VernacExtend",
            "451f6203c6cca66d9e1f31f58d482f6d53d300e9"
        ],
        [
            "exists (NO rabc n5); constructor; auto.",
            "VernacExtend",
            "6eb83b27ac62e0eaa7607b31cae1908bd472d816"
        ],
        [
            "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
            "VernacExtend",
            "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
        ],
        [
            "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
        ],
        [
            "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
            "VernacExtend",
            "fe2b04ef6ab103a8058d422966e97880c09abfc7"
        ],
        [
            "assert (sabc := join_readable2 j sc).",
            "VernacExtend",
            "5fb9bc4610430a2ed584ada1fb79da197c4ee74a"
        ],
        [
            "exists (YES rabc sabc kc pc); constructor; auto.",
            "VernacExtend",
            "c2f95cb68b9fd6d6ca4cce823ce402e030cd8bfa"
        ],
        [
            "destruct ab as [rab | rab sab kab pab | kab pab]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "5efdf0968d67f89cfe9897e6193047f9217fd5ca"
        ],
        [
            "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H0].",
            "VernacExtend",
            "5281376050e74a0de89bdf9f26e640bc6ecb7ec2"
        ],
        [
            "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
            "VernacExtend",
            "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
        ],
        [
            "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
        ],
        [
            "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
            "VernacExtend",
            "fe2b04ef6ab103a8058d422966e97880c09abfc7"
        ],
        [
            "assert (sabc := join_readable1 j sab).",
            "VernacExtend",
            "fd51f9a2cc4da19edc206bb6afd7fc5c993d1645"
        ],
        [
            "exists (YES rabc sabc kab pab); constructor; auto.",
            "VernacExtend",
            "bda102a5a5af8c648ae1d813a6000471e8897897"
        ],
        [
            "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
            "VernacExtend",
            "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
        ],
        [
            "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
        ],
        [
            "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
            "VernacExtend",
            "fe2b04ef6ab103a8058d422966e97880c09abfc7"
        ],
        [
            "assert (sabc := join_readable1 j sab).",
            "VernacExtend",
            "fd51f9a2cc4da19edc206bb6afd7fc5c993d1645"
        ],
        [
            "exists (YES rabc sabc kbc pbc).",
            "VernacExtend",
            "8ff50e165f65fa3ffba18b22e7839ac11ee055be"
        ],
        [
            "inv H0; inv H; inv H1; constructor; auto.",
            "VernacExtend",
            "1cb7dcd00ee5a35a5f7cc2a312529462c4374de0"
        ],
        [
            "destruct b as [rb | rb sb kb pb | kb pb]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "7edb579c20a10fdf9951ded9e6a1c260a4557f53"
        ],
        [
            "destruct ab as [rab | rab sab kab pab | kab pab]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "5efdf0968d67f89cfe9897e6193047f9217fd5ca"
        ],
        [
            "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H0].",
            "VernacExtend",
            "5281376050e74a0de89bdf9f26e640bc6ecb7ec2"
        ],
        [
            "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
            "VernacExtend",
            "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
        ],
        [
            "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
        ],
        [
            "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
            "VernacExtend",
            "fe2b04ef6ab103a8058d422966e97880c09abfc7"
        ],
        [
            "assert (sabc := join_readable1 j sab).",
            "VernacExtend",
            "fd51f9a2cc4da19edc206bb6afd7fc5c993d1645"
        ],
        [
            "exists (YES rabc sabc kab pab); constructor; auto.",
            "VernacExtend",
            "bda102a5a5af8c648ae1d813a6000471e8897897"
        ],
        [
            "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
            "VernacExtend",
            "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
        ],
        [
            "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
        ],
        [
            "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
            "VernacExtend",
            "fe2b04ef6ab103a8058d422966e97880c09abfc7"
        ],
        [
            "assert (sabc := join_readable1 j sab).",
            "VernacExtend",
            "fd51f9a2cc4da19edc206bb6afd7fc5c993d1645"
        ],
        [
            "exists (YES rabc sabc kac pac).",
            "VernacExtend",
            "6349580014ea0a2003aef32d465af71211f149e9"
        ],
        [
            "inv H; inv H0; inv H1; constructor; auto.",
            "VernacExtend",
            "6b97c15296611067677477e1f73378d9689005a5"
        ],
        [
            "destruct ab as [rab | rab sab kab pab | kab pab]; try solve [elimtype False; inv H].",
            "VernacExtend",
            "5efdf0968d67f89cfe9897e6193047f9217fd5ca"
        ],
        [
            "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H0].",
            "VernacExtend",
            "5281376050e74a0de89bdf9f26e640bc6ecb7ec2"
        ],
        [
            "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
            "VernacExtend",
            "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
        ],
        [
            "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
        ],
        [
            "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
            "VernacExtend",
            "fe2b04ef6ab103a8058d422966e97880c09abfc7"
        ],
        [
            "assert (sabc := join_readable1 j sab).",
            "VernacExtend",
            "fd51f9a2cc4da19edc206bb6afd7fc5c993d1645"
        ],
        [
            "exists (YES rabc sabc kab pab); constructor; auto.",
            "VernacExtend",
            "bda102a5a5af8c648ae1d813a6000471e8897897"
        ],
        [
            "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
            "VernacExtend",
            "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
        ],
        [
            "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
            "VernacExtend",
            "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
        ],
        [
            "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
            "VernacExtend",
            "fe2b04ef6ab103a8058d422966e97880c09abfc7"
        ],
        [
            "assert (sabc := join_readable1 j sab).",
            "VernacExtend",
            "fd51f9a2cc4da19edc206bb6afd7fc5c993d1645"
        ],
        [
            "exists (YES rabc sabc kc pc).",
            "VernacExtend",
            "34857a4328eeb2c7e318c6a946ddfcd76cb0e6f6"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "7549fbb600c3af6072a6d21bdcba999a253a2e01"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "2721274aada33cbec3c1f62204a14a93dcf297fd"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "exists ab.",
            "VernacExtend",
            "00b8fde3dae003ba5c3ead7dfbe4f37af7441dbb"
        ],
        [
            "inv H.",
            "VernacExtend",
            "b84516fdc68c352f174305f1c391bddd57650d6f"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "7549fbb600c3af6072a6d21bdcba999a253a2e01"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "2721274aada33cbec3c1f62204a14a93dcf297fd"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pure_readable_share_i: forall sh, readable_share sh -> (pure_readable_share (Share.glb Share.Rsh sh)).",
            "VernacStartTheoremProof",
            "bb6e4c14668cfd129542d02622844b5c020ed55e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite <- Share.glb_assoc.",
            "VernacExtend",
            "d9f3b15e978b6268d46e1725f7ad2a2dc2941236"
        ],
        [
            "rewrite glb_Lsh_Rsh.",
            "VernacExtend",
            "b507e6aef8b751b943e2520b86999bad3e90d525"
        ],
        [
            "rewrite Share.glb_commute.",
            "VernacExtend",
            "c7aa2ca1c2cacfb5aaf79a73ad4af3b6b141785a"
        ],
        [
            "apply Share.glb_bot.",
            "VernacExtend",
            "d31c8e17b2b38124bca479e5042260e7772d1fea"
        ],
        [
            "do 3 red in H|-*.",
            "VernacExtend",
            "d6e96a18de98df2268dfe7256b992e78d352c85d"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "rewrite glb_twice in H.",
            "VernacExtend",
            "399c2d2feb006c85aa2ffa3b5f763be325cc2c7f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Obligation Tactic := Tactics.program_simpl.",
            "VernacExtend",
            "d88821c37e9b8ef62c64ca341d47b53141a2387d"
        ],
        [
            "Lemma pure_readable_Rsh: pure_readable_share Share.Rsh.",
            "VernacStartTheoremProof",
            "955507c1199c4d1942b2299157d51e9ca4b4e871"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply glb_Lsh_Rsh.",
            "VernacExtend",
            "2dbf0ce28ad662338c743198a6b979f5187ce519"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite Share.glb_idem in H.",
            "VernacExtend",
            "1cb77b6eda3f59fdfdb46d234ffcc4c91ebcb89e"
        ],
        [
            "pose proof (Share.split_nontrivial Share.Lsh Share.Rsh Share.top).",
            "VernacExtend",
            "abbca186a365390237e940360ce654d9d42fd38f"
        ],
        [
            "spec H0.",
            "VernacExtend",
            "46d9b9c4e6ff732d0d87f0e162bae671f5eafd0d"
        ],
        [
            "unfold Share.Lsh, Share.Rsh.",
            "VernacExtend",
            "81dc85156979dd5048fc3eee3146f5401807bbee"
        ],
        [
            "destruct (Share.split Share.top); auto.",
            "VernacExtend",
            "b8608e95393b5329ff5930775bc007aa0d957fbd"
        ],
        [
            "apply identity_share_bot in H.",
            "VernacExtend",
            "360bf432e0e222aa9bde96f5057ce76c7c20b999"
        ],
        [
            "spec H0; auto.",
            "VernacExtend",
            "e0eeb80fe294405f7b972377c70ce9502b1e4580"
        ],
        [
            "contradiction Share.nontrivial.",
            "VernacExtend",
            "b0d32945de82bafb8160422b743c55baadf4d7d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rfullshare : rshare := mk_rshare _ pure_readable_Rsh.",
            "VernacDefinition",
            "c4cba82b79c237b3d0bad90b0138d0cde5369471"
        ],
        [
            "Program Definition writable (l: address): pred rmap := fun phi => match phi @ l with | YES sh _ k lp => writable0_share sh /\\ isVAL k | _ => False end.",
            "VernacDefinition",
            "786f941f2ab8960a7974ce31af9da8fcf415f062"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intro; intros.",
            "VernacExtend",
            "0cdd5fdbe3e02025c50d75d2ceac375faa9c4b87"
        ],
        [
            "generalize (age1_res_option a a' l H); intro.",
            "VernacExtend",
            "d50cf541b2cff074ed532c08b50f495725b80296"
        ],
        [
            "destruct (a @ l); try contradiction.",
            "VernacExtend",
            "9bd42d22c4ea1c926c316ecd9b5b015dacbf9954"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "destruct (a' @ l); inv H1; auto.",
            "VernacExtend",
            "e416511b72013dae68d3a205db8dadc12381fce8"
        ],
        [
            "destruct H0; split; auto.",
            "VernacExtend",
            "e11a640c7883c30a0f33edfe152155d303d58047"
        ],
        [
            "unfold writable0_share in *.",
            "VernacExtend",
            "86c740723ef06923ba46a2487d9fb562851176ed"
        ],
        [
            "clear - H3 H0.",
            "VernacExtend",
            "5453fd238b0d888d115e47d843eca44bd75eadbc"
        ],
        [
            "apply leq_join_sub in H0.",
            "VernacExtend",
            "4296f6e807b77792fcf77433ceccb5c03290a38a"
        ],
        [
            "apply leq_join_sub.",
            "VernacExtend",
            "3fff34a85cde33bcdf7d12bcb66c5c1e11b2a5a9"
        ],
        [
            "apply Share.ord_spec2 in H0.",
            "VernacExtend",
            "eae953bc18d1ded2919e077bc0e239d268164f5d"
        ],
        [
            "rewrite <- H0 in H3.",
            "VernacExtend",
            "85d864173f0beba7ed1e6a2bb2e2ec9b10babd49"
        ],
        [
            "rewrite Share.glb_absorb in H3.",
            "VernacExtend",
            "b533fb38e5fba21b4cdd06e5442ccbe1ca8d7be2"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "apply Share.glb_lower2.",
            "VernacExtend",
            "e8dd9d3effecea72ceee641b88d062972b7636e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition readable (loc: address) : pred rmap := fun phi => match phi @ loc with YES _ _ k _ => isVAL k | _ => False end.",
            "VernacDefinition",
            "3db00b3ebbe51beece3fb27e84f17604a459a76d"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intro; intros.",
            "VernacExtend",
            "0cdd5fdbe3e02025c50d75d2ceac375faa9c4b87"
        ],
        [
            "generalize (age1_res_option a a' loc H); intro.",
            "VernacExtend",
            "f2d1a8b82dc8b19ecfea78784edfe772995c1e82"
        ],
        [
            "destruct (a @ loc); try contradiction.",
            "VernacExtend",
            "3434fad74c48f183288364766efb7f8105f7a3e4"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "destruct (a' @ loc); inv H1; auto.",
            "VernacExtend",
            "ff3b209e635437471eec0ba6c37149f5d56698dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma readable_join: forall phi1 phi2 phi3 loc, join phi1 phi2 phi3 -> readable loc phi1 -> readable loc phi3.",
            "VernacStartTheoremProof",
            "df6d577f5a9867de2c92723678050cd3e810730a"
        ],
        [
            "unfold readable; intros until loc.",
            "VernacExtend",
            "32a4d9d08b8c0306e7b2d851ffdb188f26bb60f1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "generalize (resource_at_join _ _ _ loc H); clear H; intros.",
            "VernacExtend",
            "79f83325547c66345715a0bd0db8643e42d7feae"
        ],
        [
            "revert H0 H; destruct (phi1 @ loc); intros; try contradiction.",
            "VernacExtend",
            "9e474dd629a797a9e630c7ea2b1b030d7a0b61c4"
        ],
        [
            "inv H; auto.",
            "VernacExtend",
            "e9bd05ad37c0a003cf8fcd49196ec009bd4adb97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma readable_writable_join: forall phi1 phi2 l, readable l phi1 -> writable l phi2 -> joins phi1 phi2 -> False.",
            "VernacStartTheoremProof",
            "77f3fb8a7ad9f1c8b3fcdf8ea6eb06d0fd7b0940"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold readable, writable in *.",
            "VernacExtend",
            "edc97d88327f9d243e73e9a686d09066d3e8f5b5"
        ],
        [
            "simpl in H, H0.",
            "VernacExtend",
            "9fd9352f01eb8c0c7aebee76645558e0f75b36e6"
        ],
        [
            "destruct H1 as [phi ?].",
            "VernacExtend",
            "20faaad7d5a09abc8f3a7961edc025bbe2c8306f"
        ],
        [
            "generalize (resource_at_join _ _ _ l H1); clear H1; revert H H0.",
            "VernacExtend",
            "3acd7cae13e932cd76b1179f6d562a3bbf813386"
        ],
        [
            "destruct (phi1 @ l); intros; try contradiction.",
            "VernacExtend",
            "49447976b2032d75eaa74daeffd06851307aaae6"
        ],
        [
            "destruct (phi2 @ l); try contradiction.",
            "VernacExtend",
            "08ef244caa1b7863391e92439e73151869f49f88"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "7549fbb600c3af6072a6d21bdcba999a253a2e01"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "clear - RJ H0 r.",
            "VernacExtend",
            "5462e1f3ce4fb1e6d2a531a155ed471beaf95b64"
        ],
        [
            "unfold readable_share, writable0_share in *.",
            "VernacExtend",
            "f4afc877942c533a6f35247d13d19e35059b30d9"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "destruct (join_assoc (join_comm H) (join_comm RJ)) as [a [? ?]].",
            "VernacExtend",
            "2606071f8d98783418827148e11a25781f701e46"
        ],
        [
            "clear - r H0.",
            "VernacExtend",
            "38f3a0b615347db41c329a52825695b8a6ebd732"
        ],
        [
            "apply r; clear r.",
            "VernacExtend",
            "625b6b0e5a2a43ee18120a8e05f5157b9971d34a"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma writable0_join_sub: forall sh sh', join_sub sh sh' -> writable0_share sh -> writable0_share sh'.",
            "VernacStartTheoremProof",
            "8ddc4cd4b89f2964a3df663d7570d01733132588"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct H0 as [b ?].",
            "VernacExtend",
            "95b5ec3fbafdbddf226d5cfa2113cdffa7ae9f29"
        ],
        [
            "destruct (join_assoc H0 H) as [c [? ?]].",
            "VernacExtend",
            "fe114b58d6bb542e344110be1480354e51d85214"
        ],
        [
            "exists c; auto.",
            "VernacExtend",
            "8366ac9e8a53c65a5a8bf5181f590bfeb62a1b89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma writable_join: forall loc phi1 phi2, join_sub phi1 phi2 -> writable loc phi1 -> writable loc phi2.",
            "VernacStartTheoremProof",
            "912de51f1e9fec5426d8adadcc4ead1122356b7a"
        ],
        [
            "unfold writable; intros.",
            "VernacExtend",
            "b02c3b7b14d698181976808402898d6050cfd4a6"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct H; generalize (resource_at_join _ _ _ loc H); clear H.",
            "VernacExtend",
            "8df0820e8918635154a073e61b8a0c698de59be3"
        ],
        [
            "revert H0; destruct (phi1 @ loc); intros; try contradiction.",
            "VernacExtend",
            "09cf0f0b165b429071733dc56929df078fdfa34b"
        ],
        [
            "destruct H0; subst.",
            "VernacExtend",
            "20271853295fa24b8817fa15426b7cb1d3d3abe2"
        ],
        [
            "inv H; split; auto; eapply writable0_join_sub; eauto; eexists; eauto.",
            "VernacExtend",
            "982c7c5714f0d6ced1f1a70569134ad491c00c33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma writable_readable: forall loc m, writable loc m -> readable loc m.",
            "VernacStartTheoremProof",
            "df27ccc6fa9d2ca38c99bf297b4081343c1b3de0"
        ],
        [
            "unfold writable, readable.",
            "VernacExtend",
            "69debe441eec1b31b11ded13099f445d89bba019"
        ],
        [
            "intros ? ?.",
            "VernacExtend",
            "546ddfdd2482db9e439533251e7f222ee06f71aa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (m @ loc); auto.",
            "VernacExtend",
            "75ee0f2b5cf90a790180084de352e1f4dadeb56d"
        ],
        [
            "intros [? ?].",
            "VernacExtend",
            "103d05a036b9ac75a805207998e1c61f7a0137bb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma writable_e: forall loc m, writable loc m -> exists sh, exists rsh, exists v, exists p, m @ loc = YES sh rsh (VAL v) p /\\ writable0_share sh.",
            "VernacStartTheoremProof",
            "99a75f5a65c952985387d9dd5fe9c50fb9b32561"
        ],
        [
            "unfold writable; simpl; intros; destruct (m@loc); try contradiction.",
            "VernacExtend",
            "597ebd573e3d2de56b5ac11d2c0f588ce32c00a3"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct k; try solve [inversion H0].",
            "VernacExtend",
            "be9d0ea2f51f3379119b653a4107893ddb73dda6"
        ],
        [
            "exists sh, r, m0, p; split; auto.",
            "VernacExtend",
            "92d1bb5e2a0b9f3876ebc8530e26c8e868650405"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments writable_e [loc] [m] _.",
            "VernacArguments",
            "31fe0769554d3a465e4df28e68f56a52d85e425f"
        ],
        [
            "Lemma readable_e: forall loc m, readable loc m -> exists sh, exists rsh, exists v, exists p, m @ loc = YES sh rsh (VAL v) p.",
            "VernacStartTheoremProof",
            "9ce219abea7fd5be758df223ec79a4a21b113174"
        ],
        [
            "unfold readable; simpl; intros; destruct (m@loc); try contradiction.",
            "VernacExtend",
            "63b1b0389f03d25e6c4b7d4acb0797b5a8ecbcbe"
        ],
        [
            "destruct k; try solve [inversion H].",
            "VernacExtend",
            "bb3095956ea556993becaa6a0cc017c609cf53d7"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments readable_e [loc] [m] _.",
            "VernacArguments",
            "6aec087a2cb77fe2f99327a193bd0cb94a98a41b"
        ],
        [
            "Definition bytes_writable (loc: address) (size: Z) (phi: rmap) : Prop := forall i, (0 <= i < size) -> writable (adr_add loc i) phi.",
            "VernacDefinition",
            "c55239027e753830ea6ddb4627ab95c12bd8c0bb"
        ],
        [
            "Definition bytes_readable (loc: address) (size: Z) (phi: rmap) : Prop := forall i, (0 <= i < size) -> readable (adr_add loc i) phi.",
            "VernacDefinition",
            "02b481113e3dcaa100544edf5b9acd9ac6fdb5a9"
        ],
        [
            "Lemma readable_dec (loc: address) (phi: rmap) : {readable loc phi} + {~readable loc phi}.",
            "VernacStartTheoremProof",
            "371999dd894cbede070297eb8b50d5ded05f47d4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold readable.",
            "VernacExtend",
            "b74cb67a36d411363495e20a0a68925dfb0c7796"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case (phi @ loc); intros; auto.",
            "VernacExtend",
            "8da0541fd7fe1e58dc647f0e2c7e16abb71e41cb"
        ],
        [
            "apply isVAL_dec.",
            "VernacExtend",
            "90062fc7acda9e0a3cb37506be98d395951d5e6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma writable_dec: forall loc phi, {writable loc phi}+{~writable loc phi}.",
            "VernacStartTheoremProof",
            "5f268fd86cd13012542641dd293615426b72a70a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold writable.",
            "VernacExtend",
            "03754d14e11b812e6fd06bb98ad3b5203200cb09"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (phi @ loc); auto.",
            "VernacExtend",
            "d5a28bdd2fb634cf6b6070d86ad748cc0a9e908b"
        ],
        [
            "destruct (isVAL_dec k).",
            "VernacExtend",
            "d0b369bf2acf7314d4c77017a523f0ea6c189992"
        ],
        [
            "destruct (writable0_share_dec sh).",
            "VernacExtend",
            "33951185c30b17a8c519309a5bab3cb545480d6b"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "contradict n; auto.",
            "VernacExtend",
            "8881432b7cb38d9d50170e28065078b35d8737a0"
        ],
        [
            "destruct n; auto.",
            "VernacExtend",
            "ac1a46c3d4b557b3710fa36973beb6e353d40fb6"
        ],
        [
            "right; contradict n; destruct n; auto.",
            "VernacExtend",
            "0ff1a584c1df7600f17e46ef576f2d53ef6e3f2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bytes_writable_dec: forall loc n m, {bytes_writable loc n m}+{~bytes_writable loc n m}.",
            "VernacStartTheoremProof",
            "12b496b717d006fe40940da1adab52dbf8acb3ff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "left; intro; intros; omegaContradiction.",
            "VernacExtend",
            "a9d6a7a3c823586d853286524e5f92639577f6c5"
        ],
        [
            "2: generalize (Zlt_neg_0 p); intro; left; intro; intros; omegaContradiction.",
            "VernacExtend",
            "9fb2ee5d061d7e8e8561d84875d8ea61be9e4821"
        ],
        [
            "rewrite Zpos_eq_Z_of_nat_o_nat_of_P.",
            "VernacExtend",
            "fcd2cac1c936b65742c5af3307259383cd66d194"
        ],
        [
            "remember (nat_of_P p) as n.",
            "VernacExtend",
            "65af13cd6a1cdf07773863e5d4ea1d495d5df3f8"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "destruct loc as [b z].",
            "VernacExtend",
            "82e0aff0f85e71d5930a319c87e94d64160b4ed3"
        ],
        [
            "revert z; induction n; intros.",
            "VernacExtend",
            "f19de8fae603fc5e312f278f270fa8f6c4bfc2f5"
        ],
        [
            "left; intro; intros.",
            "VernacExtend",
            "52a93752c145650afbe11f7b3626c008cde81c7c"
        ],
        [
            "simpl in H; omegaContradiction.",
            "VernacExtend",
            "33326ed7380877a76b75a96993d0a0d17e83a823"
        ],
        [
            "rewrite inj_S.",
            "VernacExtend",
            "d9f39a95338187eacc0449352f36ed1a3018cf13"
        ],
        [
            "destruct (IHn (z+1)).",
            "VernacExtend",
            "734dd4c425dac62e499a5c9166296b39c3bfeb26"
        ],
        [
            "destruct (writable_dec (b,z) m).",
            "VernacExtend",
            "8abea859018635eaf5e704b7436c687a349f76bd"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intro; intros.",
            "VernacExtend",
            "0cdd5fdbe3e02025c50d75d2ceac375faa9c4b87"
        ],
        [
            "unfold adr_add; simpl.",
            "VernacExtend",
            "b7fec2768585823940f836c84b9ec338136557ab"
        ],
        [
            "destruct (zeq i 0).",
            "VernacExtend",
            "d84935205e6f3de20c609dbacd0c5438037a33e9"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "replace (z+0) with z by omega.",
            "VernacExtend",
            "d0a9a0c3407e78231bfeaed872496f8f2168b4ac"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace (z+i) with (z+1+(i-1)) by omega.",
            "VernacExtend",
            "096f5ed387e5937385c3c610c1cac6dcf2809a91"
        ],
        [
            "apply b0.",
            "VernacExtend",
            "f78177e3c948ca6ee738d9dd0166190c0b2d9669"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "contradict n0.",
            "VernacExtend",
            "0dc02ac99da4e318cef8c915a9be18926d5b5e8a"
        ],
        [
            "specialize ( n0 0).",
            "VernacExtend",
            "aaee5e8e85b435b4478535318e2f2fa95cc0586c"
        ],
        [
            "unfold adr_add in n0; simpl in n0.",
            "VernacExtend",
            "dcb817b29cdee8c44466895ccf1cb8b66842a9a0"
        ],
        [
            "replace (z+0) with z in n0.",
            "VernacExtend",
            "80681844a11574dd788888198d81ef3040a444f8"
        ],
        [
            "apply n0.",
            "VernacExtend",
            "80b3cdc19df56c74da17c07082759ca9a244c8ca"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "contradict n0.",
            "VernacExtend",
            "0dc02ac99da4e318cef8c915a9be18926d5b5e8a"
        ],
        [
            "intro; intros.",
            "VernacExtend",
            "0cdd5fdbe3e02025c50d75d2ceac375faa9c4b87"
        ],
        [
            "unfold adr_add; simpl.",
            "VernacExtend",
            "b7fec2768585823940f836c84b9ec338136557ab"
        ],
        [
            "replace (z+1+i) with (z+(1+i)) by omega.",
            "VernacExtend",
            "b6607f708b02cd968bd05525d8cd95f550dde025"
        ],
        [
            "apply n0.",
            "VernacExtend",
            "80b3cdc19df56c74da17c07082759ca9a244c8ca"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bytes_readable_dec: forall loc n m, {bytes_readable loc n m}+{~bytes_readable loc n m}.",
            "VernacStartTheoremProof",
            "767e24d8f4c39d168833e089b6557fe3b48bf884"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "left; intro; intros; omegaContradiction.",
            "VernacExtend",
            "a9d6a7a3c823586d853286524e5f92639577f6c5"
        ],
        [
            "2: generalize (Zlt_neg_0 p); intro; left; intro; intros; omegaContradiction.",
            "VernacExtend",
            "9fb2ee5d061d7e8e8561d84875d8ea61be9e4821"
        ],
        [
            "rewrite Zpos_eq_Z_of_nat_o_nat_of_P.",
            "VernacExtend",
            "fcd2cac1c936b65742c5af3307259383cd66d194"
        ],
        [
            "remember (nat_of_P p) as n.",
            "VernacExtend",
            "65af13cd6a1cdf07773863e5d4ea1d495d5df3f8"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "destruct loc as [b z].",
            "VernacExtend",
            "82e0aff0f85e71d5930a319c87e94d64160b4ed3"
        ],
        [
            "revert z; induction n; intros.",
            "VernacExtend",
            "f19de8fae603fc5e312f278f270fa8f6c4bfc2f5"
        ],
        [
            "left; intro; intros.",
            "VernacExtend",
            "52a93752c145650afbe11f7b3626c008cde81c7c"
        ],
        [
            "simpl in H; omegaContradiction.",
            "VernacExtend",
            "33326ed7380877a76b75a96993d0a0d17e83a823"
        ],
        [
            "rewrite inj_S.",
            "VernacExtend",
            "d9f39a95338187eacc0449352f36ed1a3018cf13"
        ],
        [
            "destruct (IHn (z+1)).",
            "VernacExtend",
            "734dd4c425dac62e499a5c9166296b39c3bfeb26"
        ],
        [
            "destruct (readable_dec (b,z) m).",
            "VernacExtend",
            "5de7414f8b97b742d20f098b8cab02c6535430d2"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intro; intros.",
            "VernacExtend",
            "0cdd5fdbe3e02025c50d75d2ceac375faa9c4b87"
        ],
        [
            "unfold adr_add; simpl.",
            "VernacExtend",
            "b7fec2768585823940f836c84b9ec338136557ab"
        ],
        [
            "destruct (zeq i 0).",
            "VernacExtend",
            "d84935205e6f3de20c609dbacd0c5438037a33e9"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "replace (z+0) with z by omega.",
            "VernacExtend",
            "d0a9a0c3407e78231bfeaed872496f8f2168b4ac"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace (z+i) with (z+1+(i-1)) by omega.",
            "VernacExtend",
            "096f5ed387e5937385c3c610c1cac6dcf2809a91"
        ],
        [
            "apply b0.",
            "VernacExtend",
            "f78177e3c948ca6ee738d9dd0166190c0b2d9669"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "contradict n0.",
            "VernacExtend",
            "0dc02ac99da4e318cef8c915a9be18926d5b5e8a"
        ],
        [
            "specialize ( n0 0).",
            "VernacExtend",
            "aaee5e8e85b435b4478535318e2f2fa95cc0586c"
        ],
        [
            "unfold adr_add in n0; simpl in n0.",
            "VernacExtend",
            "dcb817b29cdee8c44466895ccf1cb8b66842a9a0"
        ],
        [
            "replace (z+0) with z in n0.",
            "VernacExtend",
            "80681844a11574dd788888198d81ef3040a444f8"
        ],
        [
            "apply n0.",
            "VernacExtend",
            "80b3cdc19df56c74da17c07082759ca9a244c8ca"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "contradict n0.",
            "VernacExtend",
            "0dc02ac99da4e318cef8c915a9be18926d5b5e8a"
        ],
        [
            "intro; intros.",
            "VernacExtend",
            "0cdd5fdbe3e02025c50d75d2ceac375faa9c4b87"
        ],
        [
            "unfold adr_add; simpl.",
            "VernacExtend",
            "b7fec2768585823940f836c84b9ec338136557ab"
        ],
        [
            "replace (z+1+i) with (z+(1+i)) by omega.",
            "VernacExtend",
            "b6607f708b02cd968bd05525d8cd95f550dde025"
        ],
        [
            "apply n0.",
            "VernacExtend",
            "80b3cdc19df56c74da17c07082759ca9a244c8ca"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bytes_writable_readable: forall m loc n, bytes_writable m loc n -> bytes_readable m loc n.",
            "VernacStartTheoremProof",
            "8cefef2679744be0ca5249b703e7fd71b4e3480e"
        ],
        [
            "unfold bytes_writable, bytes_readable; intros.",
            "VernacExtend",
            "57415b85a77c88b8e38c8430989ced89f4f7bc7b"
        ],
        [
            "apply writable_readable; auto.",
            "VernacExtend",
            "78aeb50a5851e0f4a4d09709530b00801688bdd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve bytes_writable_readable : mem.",
            "VernacHints",
            "98b17f9748fce455abcc93ae61776b0882d106da"
        ],
        [
            "Lemma rmap_age_i: forall w w' : rmap, level w = S (level w') -> (forall l, resource_fmap (approx (level w')) (approx (level w')) (w @ l) = w' @ l) -> ghost_fmap (approx (level w')) (approx (level w')) (ghost_of w) = ghost_of w' -> age w w'.",
            "VernacStartTheoremProof",
            "fff7676e2581e0a02b385c8d8edca2ea43447e27"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "destruct (levelS_age1 _ _ H).",
            "VernacExtend",
            "17c1d04943584847214bd2d0932dba44625c475d"
        ],
        [
            "assert (x=w'); [ | subst; auto].",
            "VernacExtend",
            "1a4b82175d10f544b149855d05b242292f56e2a4"
        ],
        [
            "assert (level x = level w') by (apply age_level in H2; omega).",
            "VernacExtend",
            "fc9eabe1362d60a1460ac9268e63634d6fc719cc"
        ],
        [
            "apply rmap_ext; auto.",
            "VernacExtend",
            "22857468e89165c1014c89e1322916cfb704cb21"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "specialize (H0 l).",
            "VernacExtend",
            "e4f996a2bf1a010b5299aeee407c4be2931eb93a"
        ],
        [
            "rewrite (age1_resource_at w x H2 l (w@l)).",
            "VernacExtend",
            "aefecd0961b5e5391f69ba6103cb1b1aaf09896a"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "symmetry; apply resource_at_approx.",
            "VernacExtend",
            "300517622ccc3b6339b48167ae3dfa56574314f3"
        ],
        [
            "erewrite age1_ghost_of; eauto.",
            "VernacExtend",
            "547300ce3c7a97b9db9c805645572bcc83de02ef"
        ],
        [
            "rewrite H3; apply H1.",
            "VernacExtend",
            "0372e2e1dce25aeb4fe82f11fd0f63535a48849d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "isVAL_i",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros; simpl; auto.",
                        "VernacExtend",
                        "bb993ce5970cef2c88f7bd735f72830b79b9dc0c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isVAL_dec",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros; destruct k; auto.",
                        "VernacExtend",
                        "be49577b63cdd4b18a748aac3ffc908a8d83995c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getVAL",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct k; try solve [simpl; right; tauto].",
                        "VernacExtend",
                        "f5536f325b6c985d53a3ecc955aa166b8f205caa"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "VAL_inj",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H; auto.",
                        "VernacExtend",
                        "e9bd05ad37c0a003cf8fcd49196ec009bd4adb97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EqDec_calling_convention",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "hnf.",
                        "VernacExtend",
                        "93c9be61208bb2956fb47b51f12123e34260e667"
                    ]
                },
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "destruct cc_structret, cc_structret0; intuition.",
                        "VernacExtend",
                        "91360d6edb215201ed304b042d0b4b12d537f2b3"
                    ]
                },
                {
                    "command": [
                        "destruct cc_unproto, cc_unproto0; intuition.",
                        "VernacExtend",
                        "d5e9b4fca616dcbaef462945d7f7237f2394637c"
                    ]
                },
                {
                    "command": [
                        "destruct cc_vararg, cc_vararg0; intuition.",
                        "VernacExtend",
                        "cb50fae46fdb29ca3550b9dcebac73650ebdd3de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EqDec_kind",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "hnf.",
                        "VernacExtend",
                        "93c9be61208bb2956fb47b51f12123e34260e667"
                    ]
                },
                {
                    "command": [
                        "decide equality; try apply eq_dec; try apply zeq; try apply signature_eq.",
                        "VernacExtend",
                        "a9e2f3b4817026f6740c08e781e540514ee62bf3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mk_rshare_sh",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold mk_rshare.",
                        "VernacExtend",
                        "67f0df8a85d55d3261edfe477977b9c4feaf872f"
                    ]
                },
                {
                    "command": [
                        "destruct p; simpl.",
                        "VernacExtend",
                        "423201fe23e437fce20ae1af4aa483a4e8c5b636"
                    ]
                },
                {
                    "command": [
                        "auto with extensionality.",
                        "VernacExtend",
                        "7a7878b6bec1b0dd74cf3f7893ea18537658e970"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "share_of_Some",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct p as [[? ?] ?]; simpl.",
                        "VernacExtend",
                        "600c09278630e9a56162d24d176c53fd2255fe03"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct p; auto.",
                        "VernacExtend",
                        "94280b3a49c08b76852fac1fca3c7461587f918a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_sub_same_k",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "inv H; auto.",
                        "VernacExtend",
                        "e9bd05ad37c0a003cf8fcd49196ec009bd4adb97"
                    ]
                },
                {
                    "command": [
                        "inv H3.",
                        "VernacExtend",
                        "cfd5de51d4e25939e681ebd61032b9713860d1ca"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "inv H0; congruence.",
                        "VernacExtend",
                        "708edea0cb8a0685576cc1275119f3d9e7f9130c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_readable_glb_Rsh",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "rewrite (comp_parts comp_Lsh_Rsh sh) at 2.",
                        "VernacExtend",
                        "a6cde756f623be2af908cdbdd6ccbee9f28b2dd5"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.lub_commute, Share.lub_bot; auto.",
                        "VernacExtend",
                        "f013de494896909c5676fcd0852bbcbcb52090fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_glb_Rsh",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (join_comp_parts comp_Lsh_Rsh).",
                        "VernacExtend",
                        "ae35a0204f9b952937f3623adf3376eafbc7aa31"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_readable_share_glb",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "rewrite (comp_parts comp_Lsh_Rsh a) at 2.",
                        "VernacExtend",
                        "c97495df408b50887bfa0f50d1fe96ab54c666f9"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.lub_commute, Share.lub_bot.",
                        "VernacExtend",
                        "3920967852b19787e1c8cc6b0616e3a3d5499b45"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "glb_Rsh_bot_unreadable",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold readable_share.",
                        "VernacExtend",
                        "81db76555770dee3886332dc2cd6171b48abe2d6"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply bot_identity.",
                        "VernacExtend",
                        "1533895df57cb12584946f945937b197f80b2c10"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fixup_join",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "do 2 pose proof I.",
                        "VernacExtend",
                        "89692e062a8bc90ee20f4473dad111680c6e8a89"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold fixup_splitting.",
                        "VernacExtend",
                        "835f19550485aa80043296a7643d1372663a8330"
                    ]
                },
                {
                    "command": [
                        "Ltac glb_Rsh_tac := repeat match goal with | |- Some _ = None => elimtype False | |- None = Some _ => elimtype False | |- join (Some _) _ None => elimtype False | |- join _ (Some _) None => elimtype False | |- join _ None _ => apply join_unit2; [ apply None_unit |] | |- join None _ _ => apply join_unit1; [ apply None_unit |] | |- Some (_,_) = Some(_,_) => do 2 f_equal; try apply exist_ext; auto | H: ~readable_share ?X, H1: join (Share.glb Share.Rsh ?X) _ _ |- _ => rewrite (not_readable_Rsh_part H) in H1; apply join_unit1_e in H1; [ | apply bot_identity]; rewrite ?H1 in * | H: ~readable_share ?X, H1: join _ (Share.glb Share.Rsh ?X) _ |- _ => rewrite (not_readable_Rsh_part H) in H1; apply join_unit2_e in H1; [ | apply bot_identity]; rewrite ?H1 in * | H: identity ?A, H1: readable_share ?A |- _ => apply (readable_not_identity A _ H1 H) | H: pure_readable_share ?A |- Share.glb Share.Rsh ?A = ?A => apply pure_readable_glb_Rsh; auto | H: join ?A ?B Share.bot |- _ => let H1 := fresh in assert (H1 := identity_share_bot _ (split_identity _ _ H bot_identity)); rewrite ?H1 in *; let H2 := fresh in assert (H2 := identity_share_bot _ (split_identity _ _ (join_comm H) bot_identity)); rewrite ?H2 in *; clear H | H: readable_share Share.bot |- _ => contradiction bot_unreadable | H: join_sub None _ |- _ => clear H | H: join_sub (Some(_,?A)) (Some (_,?B)) |- _ => unify A B || (is_var A; pose proof (join_sub_same_k H); subst A) | |- _ => rewrite Share.glb_bot in * | H: Share.glb Share.Rsh _ = Share.bot |- _ => apply glb_Rsh_bot_unreadable in H; try contradiction | H: pure_readable_share ?A |- _ => rewrite (pure_readable_share_glb _ H) in * | |- _ => assumption end; auto.",
                        "VernacExtend",
                        "64580cb320c37b01da6b08ba7b9d36b2e521054d"
                    ]
                },
                {
                    "command": [
                        "case_eq (z x); intros; [destruct p | ].",
                        "VernacExtend",
                        "444bd34ffb870fe0bd613ebbc11126c429200fec"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "specialize (H1 x); specialize (H2 x).",
                        "VernacExtend",
                        "6c8f0380f36ee206205aea6bc0f6cff6c0002859"
                    ]
                },
                {
                    "command": [
                        "clear H H0.",
                        "VernacExtend",
                        "a743351ff441835fe992d483bf3a5b58c3fccd77"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in *.",
                        "VernacExtend",
                        "05c6ecd2c6487293634aa6b851ba93e6eebc5724"
                    ]
                },
                {
                    "command": [
                        "clear z H3.",
                        "VernacExtend",
                        "d6781c7b9c03f0fe7072fb8e780b2345f6f93cb4"
                    ]
                },
                {
                    "command": [
                        "destruct (dec_readable (ac x)).",
                        "VernacExtend",
                        "de08f6c36894d609158a038a97e507fac53dce2a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (dec_readable (ad x)).",
                        "VernacExtend",
                        "296b3e76fd051f097bfbc5458a065b195ece8a1a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (a x) as [[[? ?] ?] | ]; simpl in *.",
                        "VernacExtend",
                        "3e0fd269f05a5260ad8c07ad70308d70aa44cf99"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "pose proof (join_sub_same_k H1); subst k.",
                        "VernacExtend",
                        "15321981b074cd37ae763dfe32c7aff78f2833c5"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply join_glb_Rsh in H2.",
                        "VernacExtend",
                        "226577ec591cf7227a67c75e633a145c403562dc"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply join_glb_Rsh in H2.",
                        "VernacExtend",
                        "226577ec591cf7227a67c75e633a145c403562dc"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "destruct (a x) as [[[? ?] ?]|]; simpl in *.",
                        "VernacExtend",
                        "3e0fd269f05a5260ad8c07ad70308d70aa44cf99"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "apply join_glb_Rsh in H2.",
                        "VernacExtend",
                        "226577ec591cf7227a67c75e633a145c403562dc"
                    ]
                },
                {
                    "command": [
                        "destruct (a x) as [[[? ?] ?]|]; simpl in *.",
                        "VernacExtend",
                        "3e0fd269f05a5260ad8c07ad70308d70aa44cf99"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "destruct (dec_readable (ad x)).",
                        "VernacExtend",
                        "296b3e76fd051f097bfbc5458a065b195ece8a1a"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "apply n0.",
                        "VernacExtend",
                        "80b3cdc19df56c74da17c07082759ca9a244c8ca"
                    ]
                },
                {
                    "command": [
                        "unfold readable_share.",
                        "VernacExtend",
                        "81db76555770dee3886332dc2cd6171b48abe2d6"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "destruct (dec_readable (ad x)).",
                        "VernacExtend",
                        "296b3e76fd051f097bfbc5458a065b195ece8a1a"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "glb_Rsh_tac.",
                        "VernacExtend",
                        "2784b64cfcd5922e4fc949a27d5eca0626f186ee"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "specialize (H1 x).",
                        "VernacExtend",
                        "f005533970ac2f0722009a73b0cc34d65b5202db"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H1.",
                        "VernacExtend",
                        "0727e7dabf7e3bf6566adfd897eda8466c8046e1"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "inv H1.",
                        "VernacExtend",
                        "7549fbb600c3af6072a6d21bdcba999a253a2e01"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "rewrite H7; constructor.",
                        "VernacExtend",
                        "1fb6a74785df330ca668dbaa87de20244e8a395e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_share_of",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H; simpl.",
                        "VernacExtend",
                        "2f18defd91bdfd53dd6f08bdf7063e0bb187b803"
                    ]
                },
                {
                    "command": [
                        "apply join_unit1; auto.",
                        "VernacExtend",
                        "4b51a100dbd89ea2b10afd9c3e726d4e54437983"
                    ]
                },
                {
                    "command": [
                        "apply join_unit2; auto.",
                        "VernacExtend",
                        "1d23530d69e8e34cd9745adaaa2332b2b77d44e4"
                    ]
                },
                {
                    "command": [
                        "destruct a1; destruct a2; destruct a3.",
                        "VernacExtend",
                        "5f52a4fa85ea4205cc93267d0a098959429de13e"
                    ]
                },
                {
                    "command": [
                        "destruct r,r0,r1; simpl.",
                        "VernacExtend",
                        "e4da7aa84562e1fe7c9eb2a2bec458e132102766"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "do 3 red in H.",
                        "VernacExtend",
                        "f2cac86721997c9b5405b005b4693feaca0bc83f"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cross_rmap_aux",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "hnf.",
                        "VernacExtend",
                        "93c9be61208bb2956fb47b51f12123e34260e667"
                    ]
                },
                {
                    "command": [
                        "intros a b c d z ? ?.",
                        "VernacExtend",
                        "917caedcaf7997a0c49abd701b7801c49e54df5e"
                    ]
                },
                {
                    "command": [
                        "destruct (cross_split_fun Share.t _ address share_cross_split (share_of oo a) (share_of oo b) (share_of oo c) (share_of oo d) (share_of oo z)) as [[[[ac ad] bc] bd] [? [? [? ?]]]].",
                        "VernacExtend",
                        "7dd61f45b9341e3ade82da3c8d94f0851071f9d9"
                    ]
                },
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "specialize (H x).",
                        "VernacExtend",
                        "45f61c119b34fcdf0671d24903e981972bd19df6"
                    ]
                },
                {
                    "command": [
                        "unfold compose.",
                        "VernacExtend",
                        "d80e23bf133762584228beafbd8610d99d5d02d5"
                    ]
                },
                {
                    "command": [
                        "clear - H.",
                        "VernacExtend",
                        "0feb8621f12176e9894f4f3ff86ecf0003739aed"
                    ]
                },
                {
                    "command": [
                        "inv H; simpl in *.",
                        "VernacExtend",
                        "7f483b963f4e1adf494c8c50c5668e72b1e4153e"
                    ]
                },
                {
                    "command": [
                        "apply join_unit1; auto.",
                        "VernacExtend",
                        "4b51a100dbd89ea2b10afd9c3e726d4e54437983"
                    ]
                },
                {
                    "command": [
                        "apply join_unit2; auto.",
                        "VernacExtend",
                        "1d23530d69e8e34cd9745adaaa2332b2b77d44e4"
                    ]
                },
                {
                    "command": [
                        "destruct a1; destruct a2; destruct a3; apply H3.",
                        "VernacExtend",
                        "0d0837146b64badee9c7c0c067fab6ccbea5bb17"
                    ]
                },
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 x).",
                        "VernacExtend",
                        "0c0d45cbbd107bef23b82d032aedece527152dbc"
                    ]
                },
                {
                    "command": [
                        "unfold compose.",
                        "VernacExtend",
                        "d80e23bf133762584228beafbd8610d99d5d02d5"
                    ]
                },
                {
                    "command": [
                        "clear - H0.",
                        "VernacExtend",
                        "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
                    ]
                },
                {
                    "command": [
                        "inv H0; simpl in *.",
                        "VernacExtend",
                        "ace46edb5d6ddbf034685bd6eaed17bc7a133b20"
                    ]
                },
                {
                    "command": [
                        "apply join_unit1; auto.",
                        "VernacExtend",
                        "4b51a100dbd89ea2b10afd9c3e726d4e54437983"
                    ]
                },
                {
                    "command": [
                        "apply join_unit2; auto.",
                        "VernacExtend",
                        "1d23530d69e8e34cd9745adaaa2332b2b77d44e4"
                    ]
                },
                {
                    "command": [
                        "destruct a1; destruct a2; destruct a3; apply H3.",
                        "VernacExtend",
                        "0d0837146b64badee9c7c0c067fab6ccbea5bb17"
                    ]
                },
                {
                    "command": [
                        "exists (fixup_splitting ac z, fixup_splitting ad z, fixup_splitting bc z, fixup_splitting bd z).",
                        "VernacExtend",
                        "69a9f1f69e103d3ac85e0579cd58e2213f9c5eef"
                    ]
                },
                {
                    "command": [
                        "split3; [ | | split]; do 2 red; simpl; intro; apply fixup_join; auto; intros.",
                        "VernacExtend",
                        "066b849d7b21e5f423c15009fcf78081910e3e90"
                    ]
                },
                {
                    "command": [
                        "exists (b x0); apply H.",
                        "VernacExtend",
                        "2ebe2526d49057c7ae80424a440f31704f70267a"
                    ]
                },
                {
                    "command": [
                        "exists (a x0); apply join_comm; apply H.",
                        "VernacExtend",
                        "2d11c63f076df03466b2aac9ddcf1041059c6109"
                    ]
                },
                {
                    "command": [
                        "exists (d x0); apply H0.",
                        "VernacExtend",
                        "40e435e7818661651e3acd6d7b9301f9c03bf7f1"
                    ]
                },
                {
                    "command": [
                        "exists (c x0); apply join_comm; apply H0.",
                        "VernacExtend",
                        "45ebfe31a3c4934cc3beeed36d39c5051e3d3339"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Trip_resource",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "intro; intros.",
                        "VernacExtend",
                        "0cdd5fdbe3e02025c50d75d2ceac375faa9c4b87"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ra | ra sa ka pa | ka pa].",
                        "VernacExtend",
                        "238a96efd9ba58edc161de6805b88ebaa2037308"
                    ]
                },
                {
                    "command": [
                        "destruct b as [rb | rb sb kb pb | kb pb]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "7edb579c20a10fdf9951ded9e6a1c260a4557f53"
                    ]
                },
                {
                    "command": [
                        "destruct ab as [rab | rab sab kab pab | kab pab]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "5efdf0968d67f89cfe9897e6193047f9217fd5ca"
                    ]
                },
                {
                    "command": [
                        "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H0].",
                        "VernacExtend",
                        "5281376050e74a0de89bdf9f26e640bc6ecb7ec2"
                    ]
                },
                {
                    "command": [
                        "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
                        "VernacExtend",
                        "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
                    ]
                },
                {
                    "command": [
                        "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
                    ]
                },
                {
                    "command": [
                        "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
                        "VernacExtend",
                        "fe2b04ef6ab103a8058d422966e97880c09abfc7"
                    ]
                },
                {
                    "command": [
                        "assert (n5 := join_unreadable_shares j n1 n2).",
                        "VernacExtend",
                        "451f6203c6cca66d9e1f31f58d482f6d53d300e9"
                    ]
                },
                {
                    "command": [
                        "exists (NO rabc n5); constructor; auto.",
                        "VernacExtend",
                        "6eb83b27ac62e0eaa7607b31cae1908bd472d816"
                    ]
                },
                {
                    "command": [
                        "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
                        "VernacExtend",
                        "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
                    ]
                },
                {
                    "command": [
                        "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
                    ]
                },
                {
                    "command": [
                        "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
                        "VernacExtend",
                        "fe2b04ef6ab103a8058d422966e97880c09abfc7"
                    ]
                },
                {
                    "command": [
                        "assert (sabc := join_readable2 j sc).",
                        "VernacExtend",
                        "5fb9bc4610430a2ed584ada1fb79da197c4ee74a"
                    ]
                },
                {
                    "command": [
                        "exists (YES rabc sabc kc pc); constructor; auto.",
                        "VernacExtend",
                        "c2f95cb68b9fd6d6ca4cce823ce402e030cd8bfa"
                    ]
                },
                {
                    "command": [
                        "destruct ab as [rab | rab sab kab pab | kab pab]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "5efdf0968d67f89cfe9897e6193047f9217fd5ca"
                    ]
                },
                {
                    "command": [
                        "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H0].",
                        "VernacExtend",
                        "5281376050e74a0de89bdf9f26e640bc6ecb7ec2"
                    ]
                },
                {
                    "command": [
                        "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
                        "VernacExtend",
                        "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
                    ]
                },
                {
                    "command": [
                        "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
                    ]
                },
                {
                    "command": [
                        "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
                        "VernacExtend",
                        "fe2b04ef6ab103a8058d422966e97880c09abfc7"
                    ]
                },
                {
                    "command": [
                        "assert (sabc := join_readable1 j sab).",
                        "VernacExtend",
                        "fd51f9a2cc4da19edc206bb6afd7fc5c993d1645"
                    ]
                },
                {
                    "command": [
                        "exists (YES rabc sabc kab pab); constructor; auto.",
                        "VernacExtend",
                        "bda102a5a5af8c648ae1d813a6000471e8897897"
                    ]
                },
                {
                    "command": [
                        "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
                        "VernacExtend",
                        "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
                    ]
                },
                {
                    "command": [
                        "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
                    ]
                },
                {
                    "command": [
                        "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
                        "VernacExtend",
                        "fe2b04ef6ab103a8058d422966e97880c09abfc7"
                    ]
                },
                {
                    "command": [
                        "assert (sabc := join_readable1 j sab).",
                        "VernacExtend",
                        "fd51f9a2cc4da19edc206bb6afd7fc5c993d1645"
                    ]
                },
                {
                    "command": [
                        "exists (YES rabc sabc kbc pbc).",
                        "VernacExtend",
                        "8ff50e165f65fa3ffba18b22e7839ac11ee055be"
                    ]
                },
                {
                    "command": [
                        "inv H0; inv H; inv H1; constructor; auto.",
                        "VernacExtend",
                        "1cb7dcd00ee5a35a5f7cc2a312529462c4374de0"
                    ]
                },
                {
                    "command": [
                        "destruct b as [rb | rb sb kb pb | kb pb]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "7edb579c20a10fdf9951ded9e6a1c260a4557f53"
                    ]
                },
                {
                    "command": [
                        "destruct ab as [rab | rab sab kab pab | kab pab]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "5efdf0968d67f89cfe9897e6193047f9217fd5ca"
                    ]
                },
                {
                    "command": [
                        "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H0].",
                        "VernacExtend",
                        "5281376050e74a0de89bdf9f26e640bc6ecb7ec2"
                    ]
                },
                {
                    "command": [
                        "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
                        "VernacExtend",
                        "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
                    ]
                },
                {
                    "command": [
                        "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
                    ]
                },
                {
                    "command": [
                        "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
                        "VernacExtend",
                        "fe2b04ef6ab103a8058d422966e97880c09abfc7"
                    ]
                },
                {
                    "command": [
                        "assert (sabc := join_readable1 j sab).",
                        "VernacExtend",
                        "fd51f9a2cc4da19edc206bb6afd7fc5c993d1645"
                    ]
                },
                {
                    "command": [
                        "exists (YES rabc sabc kab pab); constructor; auto.",
                        "VernacExtend",
                        "bda102a5a5af8c648ae1d813a6000471e8897897"
                    ]
                },
                {
                    "command": [
                        "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
                        "VernacExtend",
                        "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
                    ]
                },
                {
                    "command": [
                        "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
                    ]
                },
                {
                    "command": [
                        "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
                        "VernacExtend",
                        "fe2b04ef6ab103a8058d422966e97880c09abfc7"
                    ]
                },
                {
                    "command": [
                        "assert (sabc := join_readable1 j sab).",
                        "VernacExtend",
                        "fd51f9a2cc4da19edc206bb6afd7fc5c993d1645"
                    ]
                },
                {
                    "command": [
                        "exists (YES rabc sabc kac pac).",
                        "VernacExtend",
                        "6349580014ea0a2003aef32d465af71211f149e9"
                    ]
                },
                {
                    "command": [
                        "inv H; inv H0; inv H1; constructor; auto.",
                        "VernacExtend",
                        "6b97c15296611067677477e1f73378d9689005a5"
                    ]
                },
                {
                    "command": [
                        "destruct ab as [rab | rab sab kab pab | kab pab]; try solve [elimtype False; inv H].",
                        "VernacExtend",
                        "5efdf0968d67f89cfe9897e6193047f9217fd5ca"
                    ]
                },
                {
                    "command": [
                        "destruct c as [rc | rc sc kc pc | kc pc]; try solve [elimtype False; inv H0].",
                        "VernacExtend",
                        "5281376050e74a0de89bdf9f26e640bc6ecb7ec2"
                    ]
                },
                {
                    "command": [
                        "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
                        "VernacExtend",
                        "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
                    ]
                },
                {
                    "command": [
                        "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
                    ]
                },
                {
                    "command": [
                        "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
                        "VernacExtend",
                        "fe2b04ef6ab103a8058d422966e97880c09abfc7"
                    ]
                },
                {
                    "command": [
                        "assert (sabc := join_readable1 j sab).",
                        "VernacExtend",
                        "fd51f9a2cc4da19edc206bb6afd7fc5c993d1645"
                    ]
                },
                {
                    "command": [
                        "exists (YES rabc sabc kab pab); constructor; auto.",
                        "VernacExtend",
                        "bda102a5a5af8c648ae1d813a6000471e8897897"
                    ]
                },
                {
                    "command": [
                        "destruct bc as [rbc | rbc sbc kbc pbc | kbc pbc]; try solve [elimtype False; inv H0].",
                        "VernacExtend",
                        "5afb74bd8f31cb3dbc64bd19f269aefc2cec9bbd"
                    ]
                },
                {
                    "command": [
                        "destruct ac as [rac | rac sac kac pac | kac pac]; try solve [elimtype False; inv H1].",
                        "VernacExtend",
                        "aa7cc88cec1a067bdadd475e09ef72eaef995ddd"
                    ]
                },
                {
                    "command": [
                        "destruct (triple_join_exists_share ra rb rc rab rbc rac) as [rabc ?]; [inv H | inv H0 | inv H1 | ] ; auto.",
                        "VernacExtend",
                        "fe2b04ef6ab103a8058d422966e97880c09abfc7"
                    ]
                },
                {
                    "command": [
                        "assert (sabc := join_readable1 j sab).",
                        "VernacExtend",
                        "fd51f9a2cc4da19edc206bb6afd7fc5c993d1645"
                    ]
                },
                {
                    "command": [
                        "exists (YES rabc sabc kc pc).",
                        "VernacExtend",
                        "34857a4328eeb2c7e318c6a946ddfcd76cb0e6f6"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "inv H1.",
                        "VernacExtend",
                        "7549fbb600c3af6072a6d21bdcba999a253a2e01"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "2721274aada33cbec3c1f62204a14a93dcf297fd"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "exists ab.",
                        "VernacExtend",
                        "00b8fde3dae003ba5c3ead7dfbe4f37af7441dbb"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "b84516fdc68c352f174305f1c391bddd57650d6f"
                    ]
                },
                {
                    "command": [
                        "inv H1.",
                        "VernacExtend",
                        "7549fbb600c3af6072a6d21bdcba999a253a2e01"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "2721274aada33cbec3c1f62204a14a93dcf297fd"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_readable_share_i",
            "line_nb": 265,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Share.glb_assoc.",
                        "VernacExtend",
                        "d9f3b15e978b6268d46e1725f7ad2a2dc2941236"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_Lsh_Rsh.",
                        "VernacExtend",
                        "b507e6aef8b751b943e2520b86999bad3e90d525"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.glb_commute.",
                        "VernacExtend",
                        "c7aa2ca1c2cacfb5aaf79a73ad4af3b6b141785a"
                    ]
                },
                {
                    "command": [
                        "apply Share.glb_bot.",
                        "VernacExtend",
                        "d31c8e17b2b38124bca479e5042260e7772d1fea"
                    ]
                },
                {
                    "command": [
                        "do 3 red in H|-*.",
                        "VernacExtend",
                        "d6e96a18de98df2268dfe7256b992e78d352c85d"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "rewrite glb_twice in H.",
                        "VernacExtend",
                        "399c2d2feb006c85aa2ffa3b5f763be325cc2c7f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pure_readable_Rsh",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply glb_Lsh_Rsh.",
                        "VernacExtend",
                        "2dbf0ce28ad662338c743198a6b979f5187ce519"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.glb_idem in H.",
                        "VernacExtend",
                        "1cb77b6eda3f59fdfdb46d234ffcc4c91ebcb89e"
                    ]
                },
                {
                    "command": [
                        "pose proof (Share.split_nontrivial Share.Lsh Share.Rsh Share.top).",
                        "VernacExtend",
                        "abbca186a365390237e940360ce654d9d42fd38f"
                    ]
                },
                {
                    "command": [
                        "spec H0.",
                        "VernacExtend",
                        "46d9b9c4e6ff732d0d87f0e162bae671f5eafd0d"
                    ]
                },
                {
                    "command": [
                        "unfold Share.Lsh, Share.Rsh.",
                        "VernacExtend",
                        "81dc85156979dd5048fc3eee3146f5401807bbee"
                    ]
                },
                {
                    "command": [
                        "destruct (Share.split Share.top); auto.",
                        "VernacExtend",
                        "b8608e95393b5329ff5930775bc007aa0d957fbd"
                    ]
                },
                {
                    "command": [
                        "apply identity_share_bot in H.",
                        "VernacExtend",
                        "360bf432e0e222aa9bde96f5057ce76c7c20b999"
                    ]
                },
                {
                    "command": [
                        "spec H0; auto.",
                        "VernacExtend",
                        "e0eeb80fe294405f7b972377c70ce9502b1e4580"
                    ]
                },
                {
                    "command": [
                        "contradiction Share.nontrivial.",
                        "VernacExtend",
                        "b0d32945de82bafb8160422b743c55baadf4d7d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "writable_obligation_3",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "intro; intros.",
                        "VernacExtend",
                        "0cdd5fdbe3e02025c50d75d2ceac375faa9c4b87"
                    ]
                },
                {
                    "command": [
                        "generalize (age1_res_option a a' l H); intro.",
                        "VernacExtend",
                        "d50cf541b2cff074ed532c08b50f495725b80296"
                    ]
                },
                {
                    "command": [
                        "destruct (a @ l); try contradiction.",
                        "VernacExtend",
                        "9bd42d22c4ea1c926c316ecd9b5b015dacbf9954"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "destruct (a' @ l); inv H1; auto.",
                        "VernacExtend",
                        "e416511b72013dae68d3a205db8dadc12381fce8"
                    ]
                },
                {
                    "command": [
                        "destruct H0; split; auto.",
                        "VernacExtend",
                        "e11a640c7883c30a0f33edfe152155d303d58047"
                    ]
                },
                {
                    "command": [
                        "unfold writable0_share in *.",
                        "VernacExtend",
                        "86c740723ef06923ba46a2487d9fb562851176ed"
                    ]
                },
                {
                    "command": [
                        "clear - H3 H0.",
                        "VernacExtend",
                        "5453fd238b0d888d115e47d843eca44bd75eadbc"
                    ]
                },
                {
                    "command": [
                        "apply leq_join_sub in H0.",
                        "VernacExtend",
                        "4296f6e807b77792fcf77433ceccb5c03290a38a"
                    ]
                },
                {
                    "command": [
                        "apply leq_join_sub.",
                        "VernacExtend",
                        "3fff34a85cde33bcdf7d12bcb66c5c1e11b2a5a9"
                    ]
                },
                {
                    "command": [
                        "apply Share.ord_spec2 in H0.",
                        "VernacExtend",
                        "eae953bc18d1ded2919e077bc0e239d268164f5d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0 in H3.",
                        "VernacExtend",
                        "85d864173f0beba7ed1e6a2bb2e2ec9b10babd49"
                    ]
                },
                {
                    "command": [
                        "rewrite Share.glb_absorb in H3.",
                        "VernacExtend",
                        "b533fb38e5fba21b4cdd06e5442ccbe1ca8d7be2"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "apply Share.glb_lower2.",
                        "VernacExtend",
                        "e8dd9d3effecea72ceee641b88d062972b7636e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "readable_obligation_3",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "intro; intros.",
                        "VernacExtend",
                        "0cdd5fdbe3e02025c50d75d2ceac375faa9c4b87"
                    ]
                },
                {
                    "command": [
                        "generalize (age1_res_option a a' loc H); intro.",
                        "VernacExtend",
                        "f2d1a8b82dc8b19ecfea78784edfe772995c1e82"
                    ]
                },
                {
                    "command": [
                        "destruct (a @ loc); try contradiction.",
                        "VernacExtend",
                        "3434fad74c48f183288364766efb7f8105f7a3e4"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "destruct (a' @ loc); inv H1; auto.",
                        "VernacExtend",
                        "ff3b209e635437471eec0ba6c37149f5d56698dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "readable_join",
            "line_nb": 319,
            "steps": [
                {
                    "command": [
                        "unfold readable; intros until loc.",
                        "VernacExtend",
                        "32a4d9d08b8c0306e7b2d851ffdb188f26bb60f1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "generalize (resource_at_join _ _ _ loc H); clear H; intros.",
                        "VernacExtend",
                        "79f83325547c66345715a0bd0db8643e42d7feae"
                    ]
                },
                {
                    "command": [
                        "revert H0 H; destruct (phi1 @ loc); intros; try contradiction.",
                        "VernacExtend",
                        "9e474dd629a797a9e630c7ea2b1b030d7a0b61c4"
                    ]
                },
                {
                    "command": [
                        "inv H; auto.",
                        "VernacExtend",
                        "e9bd05ad37c0a003cf8fcd49196ec009bd4adb97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "readable_writable_join",
            "line_nb": 327,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold readable, writable in *.",
                        "VernacExtend",
                        "edc97d88327f9d243e73e9a686d09066d3e8f5b5"
                    ]
                },
                {
                    "command": [
                        "simpl in H, H0.",
                        "VernacExtend",
                        "9fd9352f01eb8c0c7aebee76645558e0f75b36e6"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [phi ?].",
                        "VernacExtend",
                        "20faaad7d5a09abc8f3a7961edc025bbe2c8306f"
                    ]
                },
                {
                    "command": [
                        "generalize (resource_at_join _ _ _ l H1); clear H1; revert H H0.",
                        "VernacExtend",
                        "3acd7cae13e932cd76b1179f6d562a3bbf813386"
                    ]
                },
                {
                    "command": [
                        "destruct (phi1 @ l); intros; try contradiction.",
                        "VernacExtend",
                        "49447976b2032d75eaa74daeffd06851307aaae6"
                    ]
                },
                {
                    "command": [
                        "destruct (phi2 @ l); try contradiction.",
                        "VernacExtend",
                        "08ef244caa1b7863391e92439e73151869f49f88"
                    ]
                },
                {
                    "command": [
                        "inv H1.",
                        "VernacExtend",
                        "7549fbb600c3af6072a6d21bdcba999a253a2e01"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "clear - RJ H0 r.",
                        "VernacExtend",
                        "5462e1f3ce4fb1e6d2a531a155ed471beaf95b64"
                    ]
                },
                {
                    "command": [
                        "unfold readable_share, writable0_share in *.",
                        "VernacExtend",
                        "f4afc877942c533a6f35247d13d19e35059b30d9"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc (join_comm H) (join_comm RJ)) as [a [? ?]].",
                        "VernacExtend",
                        "2606071f8d98783418827148e11a25781f701e46"
                    ]
                },
                {
                    "command": [
                        "clear - r H0.",
                        "VernacExtend",
                        "38f3a0b615347db41c329a52825695b8a6ebd732"
                    ]
                },
                {
                    "command": [
                        "apply r; clear r.",
                        "VernacExtend",
                        "625b6b0e5a2a43ee18120a8e05f5157b9971d34a"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "writable0_join_sub",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [b ?].",
                        "VernacExtend",
                        "95b5ec3fbafdbddf226d5cfa2113cdffa7ae9f29"
                    ]
                },
                {
                    "command": [
                        "destruct (join_assoc H0 H) as [c [? ?]].",
                        "VernacExtend",
                        "fe114b58d6bb542e344110be1480354e51d85214"
                    ]
                },
                {
                    "command": [
                        "exists c; auto.",
                        "VernacExtend",
                        "8366ac9e8a53c65a5a8bf5181f590bfeb62a1b89"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "writable_join",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "unfold writable; intros.",
                        "VernacExtend",
                        "b02c3b7b14d698181976808402898d6050cfd4a6"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct H; generalize (resource_at_join _ _ _ loc H); clear H.",
                        "VernacExtend",
                        "8df0820e8918635154a073e61b8a0c698de59be3"
                    ]
                },
                {
                    "command": [
                        "revert H0; destruct (phi1 @ loc); intros; try contradiction.",
                        "VernacExtend",
                        "09cf0f0b165b429071733dc56929df078fdfa34b"
                    ]
                },
                {
                    "command": [
                        "destruct H0; subst.",
                        "VernacExtend",
                        "20271853295fa24b8817fa15426b7cb1d3d3abe2"
                    ]
                },
                {
                    "command": [
                        "inv H; split; auto; eapply writable0_join_sub; eauto; eexists; eauto.",
                        "VernacExtend",
                        "982c7c5714f0d6ced1f1a70569134ad491c00c33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "writable_readable",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "unfold writable, readable.",
                        "VernacExtend",
                        "69debe441eec1b31b11ded13099f445d89bba019"
                    ]
                },
                {
                    "command": [
                        "intros ? ?.",
                        "VernacExtend",
                        "546ddfdd2482db9e439533251e7f222ee06f71aa"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (m @ loc); auto.",
                        "VernacExtend",
                        "75ee0f2b5cf90a790180084de352e1f4dadeb56d"
                    ]
                },
                {
                    "command": [
                        "intros [? ?].",
                        "VernacExtend",
                        "103d05a036b9ac75a805207998e1c61f7a0137bb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "writable_e",
            "line_nb": 370,
            "steps": [
                {
                    "command": [
                        "unfold writable; simpl; intros; destruct (m@loc); try contradiction.",
                        "VernacExtend",
                        "597ebd573e3d2de56b5ac11d2c0f588ce32c00a3"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "destruct k; try solve [inversion H0].",
                        "VernacExtend",
                        "be9d0ea2f51f3379119b653a4107893ddb73dda6"
                    ]
                },
                {
                    "command": [
                        "exists sh, r, m0, p; split; auto.",
                        "VernacExtend",
                        "92d1bb5e2a0b9f3876ebc8530e26c8e868650405"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "readable_e",
            "line_nb": 377,
            "steps": [
                {
                    "command": [
                        "unfold readable; simpl; intros; destruct (m@loc); try contradiction.",
                        "VernacExtend",
                        "63b1b0389f03d25e6c4b7d4acb0797b5a8ecbcbe"
                    ]
                },
                {
                    "command": [
                        "destruct k; try solve [inversion H].",
                        "VernacExtend",
                        "bb3095956ea556993becaa6a0cc017c609cf53d7"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "econstructor; eauto.",
                        "VernacExtend",
                        "faa93781fb8bbf289e651728c4588af1c4169d34"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "readable_dec",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold readable.",
                        "VernacExtend",
                        "b74cb67a36d411363495e20a0a68925dfb0c7796"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case (phi @ loc); intros; auto.",
                        "VernacExtend",
                        "8da0541fd7fe1e58dc647f0e2c7e16abb71e41cb"
                    ]
                },
                {
                    "command": [
                        "apply isVAL_dec.",
                        "VernacExtend",
                        "90062fc7acda9e0a3cb37506be98d395951d5e6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "writable_dec",
            "line_nb": 393,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold writable.",
                        "VernacExtend",
                        "03754d14e11b812e6fd06bb98ad3b5203200cb09"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (phi @ loc); auto.",
                        "VernacExtend",
                        "d5a28bdd2fb634cf6b6070d86ad748cc0a9e908b"
                    ]
                },
                {
                    "command": [
                        "destruct (isVAL_dec k).",
                        "VernacExtend",
                        "d0b369bf2acf7314d4c77017a523f0ea6c189992"
                    ]
                },
                {
                    "command": [
                        "destruct (writable0_share_dec sh).",
                        "VernacExtend",
                        "33951185c30b17a8c519309a5bab3cb545480d6b"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "right; auto.",
                        "VernacExtend",
                        "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
                    ]
                },
                {
                    "command": [
                        "contradict n; auto.",
                        "VernacExtend",
                        "8881432b7cb38d9d50170e28065078b35d8737a0"
                    ]
                },
                {
                    "command": [
                        "destruct n; auto.",
                        "VernacExtend",
                        "ac1a46c3d4b557b3710fa36973beb6e353d40fb6"
                    ]
                },
                {
                    "command": [
                        "right; contradict n; destruct n; auto.",
                        "VernacExtend",
                        "0ff1a584c1df7600f17e46ef576f2d53ef6e3f2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bytes_writable_readable",
            "line_nb": 488,
            "steps": [
                {
                    "command": [
                        "unfold bytes_writable, bytes_readable; intros.",
                        "VernacExtend",
                        "57415b85a77c88b8e38c8430989ced89f4f7bc7b"
                    ]
                },
                {
                    "command": [
                        "apply writable_readable; auto.",
                        "VernacExtend",
                        "78aeb50a5851e0f4a4d09709530b00801688bdd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmap_age_i",
            "line_nb": 493,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "hnf.",
                        "VernacExtend",
                        "93c9be61208bb2956fb47b51f12123e34260e667"
                    ]
                },
                {
                    "command": [
                        "destruct (levelS_age1 _ _ H).",
                        "VernacExtend",
                        "17c1d04943584847214bd2d0932dba44625c475d"
                    ]
                },
                {
                    "command": [
                        "assert (x=w'); [ | subst; auto].",
                        "VernacExtend",
                        "1a4b82175d10f544b149855d05b242292f56e2a4"
                    ]
                },
                {
                    "command": [
                        "assert (level x = level w') by (apply age_level in H2; omega).",
                        "VernacExtend",
                        "fc9eabe1362d60a1460ac9268e63634d6fc719cc"
                    ]
                },
                {
                    "command": [
                        "apply rmap_ext; auto.",
                        "VernacExtend",
                        "22857468e89165c1014c89e1322916cfb704cb21"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "specialize (H0 l).",
                        "VernacExtend",
                        "e4f996a2bf1a010b5299aeee407c4be2931eb93a"
                    ]
                },
                {
                    "command": [
                        "rewrite (age1_resource_at w x H2 l (w@l)).",
                        "VernacExtend",
                        "aefecd0961b5e5391f69ba6103cb1b1aaf09896a"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply resource_at_approx.",
                        "VernacExtend",
                        "300517622ccc3b6339b48167ae3dfa56574314f3"
                    ]
                },
                {
                    "command": [
                        "erewrite age1_ghost_of; eauto.",
                        "VernacExtend",
                        "547300ce3c7a97b9db9c805645572bcc83de02ef"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; apply H1.",
                        "VernacExtend",
                        "0372e2e1dce25aeb4fe82f11fd0f63535a48849d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}